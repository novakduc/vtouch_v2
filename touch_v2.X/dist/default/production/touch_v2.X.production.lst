

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb  5 01:29:46 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=2
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1,inline
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1,inline
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=2
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=2
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=4,class=CODE,delta=1
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=4,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=4,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1,group=1
   184                           	psect	text162,global,reloc=4,class=CODE,delta=1
   185                           	psect	text163,global,reloc=2,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1
   187                           	psect	text165,global,reloc=4,class=CODE,delta=1
   188                           	psect	text166,global,reloc=4,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1
   190                           	psect	text168,global,reloc=2,class=CODE,delta=1
   191                           	psect	text169,global,reloc=2,class=CODE,delta=1
   192                           	psect	text170,global,reloc=4,class=CODE,delta=1
   193                           	psect	text171,global,reloc=4,class=CODE,delta=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1
   195                           	psect	text173,global,reloc=4,class=CODE,delta=1
   196                           	psect	text174,global,reloc=2,class=CODE,delta=1
   197                           	psect	text175,global,reloc=4,class=CODE,delta=1
   198                           	psect	text176,global,reloc=2,class=CODE,delta=1
   199                           	psect	text177,global,reloc=4,class=CODE,delta=1
   200                           	psect	text178,global,reloc=2,class=CODE,delta=1
   201                           	psect	text179,global,reloc=2,class=CODE,delta=1
   202                           	psect	text180,global,reloc=4,class=CODE,delta=1
   203                           	psect	text181,global,reloc=4,class=CODE,delta=1
   204                           	psect	text182,global,reloc=4,class=CODE,delta=1
   205                           	psect	text183,global,reloc=4,class=CODE,delta=1
   206                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   207                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   208                           	psect	text184,global,reloc=4,class=CODE,delta=1
   209                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   210                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   211  0000                     
   212                           ; Version 2.10
   213                           ; Generated 31/07/2019 GMT
   214                           ; 
   215                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   216                           ; All rights reserved.
   217                           ; 
   218                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   219                           ; 
   220                           ; Redistribution and use in source and binary forms, with or without modification, are
   221                           ; permitted provided that the following conditions are met:
   222                           ; 
   223                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   224                           ;        conditions and the following disclaimer.
   225                           ; 
   226                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   227                           ;        of conditions and the following disclaimer in the documentation and/or other
   228                           ;        materials provided with the distribution.
   229                           ; 
   230                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   231                           ;        software without specific prior written permission.
   232                           ; 
   233                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   234                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   235                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   236                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   237                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   238                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   239                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   240                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   241                           ; 
   242                           ; 
   243                           ; Code-generator required, PIC18F57K42 Definitions
   244                           ; 
   245                           ; SFR Addresses
   246  0000                     
   247 ;;_main$3774	offset	0
   248 ;;_main$3770	offset	2
   249 ;;_esr_temp	offset	4
   250 ;;_i_esr	offset	8
   251 ;;_shape	offset	10
   252 ;;_inp_index	offset	11
   253 ;;_k	offset	12
   254 ;;_j	offset	13
   255 ;;_i	offset	14
   256 ;;_mode	offset	15
   257 ;;_i_ror	offset	16
   258 ;;_s	offset=-2 (param)
   259 ;;_c	offset	0
   260 ;;_shape	offset=-1 (param)
   261 ;;_reset	offset=-2 (param)
   262 ;;_voltage	offset=-4 (param)
   263 ;;_voltage	offset=-4 (param)
   264 ;;_voltage	offset=-4 (param)
   265 ;;_set	offset=-1 (param)
   266 ;;_data	offset=-1 (param)
   267 ;;_cmd	offset=-1 (param)
   268 ;;_cmd	offset=-1 (param)
   269 ;;_data	offset=-1 (param)
   270 ;;__this	offset=-2 (param)
   271 ;;_soc	offset	0
   272 ;;_slot	offset	2
   273 ;;_cvoltage	offset=-4 (param)
   274 ;;_h	offset=-2 (param)
   275 ;;_h	offset=-2 (param)
   276 ;;_i	offset=-1 (param)
   277 ;;_fsm	offset=-1 (param)
   278 ;;_channel	offset=-1 (param)
   279 ;;_mode	offset=-1 (param)
   280 ;;_mode	offset=-1 (param)
   281 ;;_cmd	offset=-1 (param)
   282 ;;_i	offset	0
   283 ;;_h	offset=-2 (param)
   284 ;;_flipper	offset=-1 (param)
   285 ;;_f	offset	0
   286 ;;_ap	offset	6
   287 ;;_s	offset=-3 (param)
   288 ;;_fmt	offset=-5 (param)
   289 ;;_line	offset=-1 (param)
   290 ;;_vterm	offset=-2 (param)
   291 ;;_numMilliseconds	offset=-2 (param)
   292 ;;_vterm	offset=-1 (param)
   293 ;;_row	offset	0
   294 ;;_r	offset=-1 (param)
   295 ;;_c	offset=-2 (param)
   296 ;;_strPtr	offset=-4 (param)
   297 ;;_strPtr	offset=-1 (param)
   298 ;;_delay	offset=-4 (param)
   299 ;;_strPtr	offset=-1 (param)
   300 ;;_strPtr	offset=-2 (param)
   301 ;;__this	offset=-2 (param)
   302 ;;_clearBuffer	offset=-3 (param)
   303 ;;_s	offset	0
   304 ;;_k	offset	2
   305 ;;_dest	offset=-2 (param)
   306 ;;_c	offset=-4 (param)
   307 ;;_n	offset=-6 (param)
   308 ;;_ap	offset	0
   309 ;;_fmt	offset=-3 (param)
   310 ;;_cfmt	offset	0
   311 ;;_fp	offset=-2 (param)
   312 ;;_fmt	offset=-4 (param)
   313 ;;_ap	offset=-6 (param)
   314 ;;_vfpfcnvrt$5808	offset	0
   315 ;;_vfpfcnvrt$5819	offset	2
   316 ;;_vfpfcnvrt$5807	offset	4
   317 ;;_llu	offset	6
   318 ;;_ll	offset	14
   319 ;;_f	offset	22
   320 ;;_ct	offset	26
   321 ;;_cp	offset	29
   322 ;;_c	offset	31
   323 ;;_fp	offset=-2 (param)
   324 ;;_fmt	offset=-4 (param)
   325 ;;_ap	offset=-6 (param)
   326 ;;_xtoa$5793	offset	0
   327 ;;_xtoa$5792	offset	2
   328 ;;_n	offset	4
   329 ;;_c	offset	12
   330 ;;_i	offset	14
   331 ;;_w	offset	16
   332 ;;_p	offset	18
   333 ;;_fp	offset=-2 (param)
   334 ;;_d	offset=-10 (param)
   335 ;;_x	offset=-11 (param)
   336 ;;_toupper$6599	offset	0
   337 ;;_c	offset=-2 (param)
   338 ;;_c	offset=-2 (param)
   339 ;;_c	offset=-2 (param)
   340 ;;_n	offset	0
   341 ;;_i	offset	8
   342 ;;_w	offset	10
   343 ;;_p	offset	12
   344 ;;_fp	offset=-2 (param)
   345 ;;_d	offset=-10 (param)
   346 ;;_counter	offset	0
   347 ;;_dividend	offset=-8 (param)
   348 ;;_divisor	offset=-16 (param)
   349 ;;_quotient	offset	0
   350 ;;_counter	offset	8
   351 ;;_dividend	offset=-8 (param)
   352 ;;_divisor	offset=-16 (param)
   353 ;;_r	offset	0
   354 ;;_l	offset	2
   355 ;;__l	offset=-2 (param)
   356 ;;__r	offset=-4 (param)
   357 ;;_n	offset=-6 (param)
   358 ;;_nuls	offset	0
   359 ;;_l	offset	7
   360 ;;_p	offset	9
   361 ;;_cp	offset	11
   362 ;;_w	offset	13
   363 ;;_i	offset	15
   364 ;;_fp	offset=-2 (param)
   365 ;;_s	offset=-4 (param)
   366 ;;_efgtoa$5765	offset	0
   367 ;;_efgtoa$5764	offset	2
   368 ;;_efgtoa$5763	offset	4
   369 ;;_efgtoa$5759	offset	6
   370 ;;_efgtoa$5755	offset	8
   371 ;;_efgtoa$5754	offset	10
   372 ;;_u	offset	12
   373 ;;_g	offset	16
   374 ;;_l	offset	20
   375 ;;_h	offset	24
   376 ;;_ou	offset	28
   377 ;;_n	offset	32
   378 ;;_e	offset	34
   379 ;;_i	offset	36
   380 ;;_w	offset	38
   381 ;;_p	offset	40
   382 ;;_sign	offset	42
   383 ;;_d	offset	44
   384 ;;_ne	offset	46
   385 ;;_m	offset	48
   386 ;;_pp	offset	50
   387 ;;_t	offset	52
   388 ;;_mode	offset	54
   389 ;;_nmode	offset	55
   390 ;;_fp	offset=-2 (param)
   391 ;;_f	offset=-6 (param)
   392 ;;_c	offset=-7 (param)
   393 ;;_tolower$6584	offset	0
   394 ;;_c	offset=-2 (param)
   395 ;;_c	offset=-2 (param)
   396 ;;_d	offset	0
   397 ;;_s	offset	2
   398 ;;_dest	offset=-2 (param)
   399 ;;_src	offset=-4 (param)
   400 ;;_u	offset	0
   401 ;;_m	offset	4
   402 ;;_e	offset	8
   403 ;;_x	offset=-4 (param)
   404 ;;_u	offset	0
   405 ;;_e	offset	4
   406 ;;_x	offset=-4 (param)
   407 ;;_exp1	offset	0
   408 ;;_sign1	offset	1
   409 ;;_f1	offset=-4 (param)
   410 ;;_f1	offset=-4 (param)
   411 ;;_ff1	offset=-4 (param)
   412 ;;_ff2	offset=-8 (param)
   413 ;;_sign	offset	0
   414 ;;_counter	offset	1
   415 ;;_dividend	offset=-2 (param)
   416 ;;_divisor	offset=-4 (param)
   417 ;;_quotient	offset	0
   418 ;;_sign	offset	2
   419 ;;_counter	offset	3
   420 ;;_dividend	offset=-2 (param)
   421 ;;_divisor	offset=-4 (param)
   422 ;;_dtoa$5731	offset	0
   423 ;;_n	offset	2
   424 ;;_i	offset	10
   425 ;;_s	offset	12
   426 ;;_w	offset	14
   427 ;;_p	offset	16
   428 ;;_fp	offset=-2 (param)
   429 ;;_d	offset=-10 (param)
   430 ;;_a	offset=-2 (param)
   431 ;;_sign	offset	0
   432 ;;_counter	offset	1
   433 ;;_dividend	offset=-8 (param)
   434 ;;_divisor	offset=-16 (param)
   435 ;;_quotient	offset	0
   436 ;;_sign	offset	8
   437 ;;_counter	offset	9
   438 ;;_dividend	offset=-8 (param)
   439 ;;_divisor	offset=-16 (param)
   440 ;;_w	offset	0
   441 ;;_fp	offset=-2 (param)
   442 ;;_c	offset=-3 (param)
   443 ;;_w	offset	0
   444 ;;_i	offset	2
   445 ;;_fp	offset=-2 (param)
   446 ;;_buf	offset=-4 (param)
   447 ;;_p	offset=-6 (param)
   448 ;;_a	offset	0
   449 ;;_s	offset=-2 (param)
   450 ;;_i	offset	0
   451 ;;_c	offset	2
   452 ;;_s	offset=-2 (param)
   453 ;;_fp	offset=-4 (param)
   454 ;;_c	offset=-2 (param)
   455 ;;_fp	offset=-4 (param)
   456 ;;_c	offset=-1 (param)
   457 ;;__this	offset=-2 (param)
   458 ;;_c	offset=-3 (param)
   459 ;;_atoi$6315	offset	0
   460 ;;_atoi$6313	offset	2
   461 ;;_atoi$6314	offset	4
   462 ;;_n	offset	5
   463 ;;_neg	offset	7
   464 ;;_s	offset=-2 (param)
   465 ;;_isspace$6364	offset	0
   466 ;;_c	offset=-2 (param)
   467 ;;_c	offset=-2 (param)
   468 ;;_vterm	offset=-1 (param)
   469 ;;_new_response_info	offset=-1 (param)
   470 ;;_new_response_info	offset=-1 (param)
   471 ;;_level	offset=-2 (param)
   472 ;;_dutyValue	offset=-2 (param)
   473 ;;_timer	offset=-1 (param)
   474 ;;_timer	offset=-1 (param)
   475 ;;_count	offset=-3 (param)
   476 ;;_h	offset=-2 (param)
   477 ;;_u	offset	0
   478 ;;_x	offset=-4 (param)
   479 ;;_chan	offset=-1 (param)
   480 ;;_to_what	offset=-2 (param)
   481 ;;_u	offset	0
   482 ;;_s	offset=-2 (param)
   483 ;;_index	offset=-1 (param)
   484 ;;_arg	offset	0
   485 ;;_exp	offset	4
   486 ;;_sign	offset=-1 (param)
   487 ;;_val	offset=-5 (param)
   488 ;;_grs	offset	0
   489 ;;_rem	offset	4
   490 ;;_new_exp	offset	8
   491 ;;_aexp	offset	10
   492 ;;_bexp	offset	11
   493 ;;_sign	offset	12
   494 ;;_b	offset=-4 (param)
   495 ;;_a	offset=-8 (param)
   496 ;;_ff1	offset=-4 (param)
   497 ;;_ff2	offset=-8 (param)
   498 ;;_lp_speed	offset	0
   499 ;;_new	offset=-4 (param)
   500 ;;_bn	offset=-5 (param)
   501 ;;_slow	offset=-6 (param)
   502 ;;_b	offset=-4 (param)
   503 ;;_a	offset=-8 (param)
   504 ;;_grs	offset	0
   505 ;;_bexp	offset	1
   506 ;;_aexp	offset	2
   507 ;;_signs	offset	3
   508 ;;_b	offset=-4 (param)
   509 ;;_a	offset=-8 (param)
   510 ;;_prod	offset	0
   511 ;;_grs	offset	4
   512 ;;_temp	offset	8
   513 ;;_bexp	offset	10
   514 ;;_aexp	offset	11
   515 ;;_sign	offset	12
   516 ;;_b	offset=-4 (param)
   517 ;;_a	offset=-8 (param)
   518 ;;_InterruptHandler	offset=-3 (param)
   519 ;;_InterruptHandler	offset=-3 (param)
   520 ;;_InterruptHandler	offset=-3 (param)
   521 ;;_InterruptHandler	offset=-3 (param)
   522 ;;_InterruptHandler	offset=-3 (param)
   523 ;;_InterruptHandler	offset=-3 (param)
   524 ;;_state	offset	0
   525 ;;_InterruptHandler	offset=-3 (param)
   526 ;;_InterruptHandler	offset=-3 (param)
   527 ;;_InterruptHandler	offset=-3 (param)
   528 ;;_InterruptHandler	offset=-3 (param)
   529 ;;_i	offset	0
   530 ;;_sw_value	offset	1
   531 ;;_timerVal	offset=-2 (param)
   532 ;;_light	offset	0
   533 ;;_mode	offset=-1 (param)
   534 ;;_chan	offset=-1 (param)
   535 ;;_to_what	offset=-2 (param)
   536 ;;_u	offset	0
   537 ;;_s	offset=-2 (param)
   538 ;;_index	offset=-1 (param)
   539 ;;_arg	offset	0
   540 ;;_exp	offset	4
   541 ;;_sign	offset=-1 (param)
   542 ;;_val	offset=-5 (param)
   543 ;;_b	offset=-4 (param)
   544 ;;_a	offset=-8 (param)
   545 ;;_grs	offset	0
   546 ;;_bexp	offset	1
   547 ;;_aexp	offset	2
   548 ;;_signs	offset	3
   549 ;;_b	offset=-4 (param)
   550 ;;_a	offset=-8 (param)
   551 ;;_prod	offset	0
   552 ;;_grs	offset	4
   553 ;;_temp	offset	8
   554 ;;_bexp	offset	10
   555 ;;_aexp	offset	11
   556 ;;_sign	offset	12
   557 ;;_b	offset=-4 (param)
   558 ;;_a	offset=-8 (param)
   559 ;;_grs	offset	0
   560 ;;_rem	offset	4
   561 ;;_new_exp	offset	8
   562 ;;_aexp	offset	10
   563 ;;_bexp	offset	11
   564 ;;_sign	offset	12
   565 ;;_b	offset=-4 (param)
   566 ;;_a	offset=-8 (param)
   567 ;;_ff1	offset=-4 (param)
   568 ;;_ff2	offset=-8 (param)
   569 ;;_timerVal	offset=-2 (param)
   570 ;;_adj	offset	0
   571 ;;_log_ptr	offset	4
   572 ;;_f	offset	0
   573 ;;_ap	offset	6
   574 ;;_s	offset=-3 (param)
   575 ;;_fmt	offset=-5 (param)
   576 ;;_cfmt	offset	0
   577 ;;_fp	offset=-2 (param)
   578 ;;_fmt	offset=-4 (param)
   579 ;;_ap	offset=-6 (param)
   580 ;;_vfpfcnvrt$5808	offset	0
   581 ;;_vfpfcnvrt$5819	offset	2
   582 ;;_vfpfcnvrt$5807	offset	4
   583 ;;_llu	offset	6
   584 ;;_ll	offset	14
   585 ;;_f	offset	22
   586 ;;_ct	offset	26
   587 ;;_cp	offset	29
   588 ;;_c	offset	31
   589 ;;_fp	offset=-2 (param)
   590 ;;_fmt	offset=-4 (param)
   591 ;;_ap	offset=-6 (param)
   592 ;;_xtoa$5793	offset	0
   593 ;;_xtoa$5792	offset	2
   594 ;;_n	offset	4
   595 ;;_c	offset	12
   596 ;;_i	offset	14
   597 ;;_w	offset	16
   598 ;;_p	offset	18
   599 ;;_fp	offset=-2 (param)
   600 ;;_d	offset=-10 (param)
   601 ;;_x	offset=-11 (param)
   602 ;;_toupper$6599	offset	0
   603 ;;_c	offset=-2 (param)
   604 ;;_c	offset=-2 (param)
   605 ;;_c	offset=-2 (param)
   606 ;;_n	offset	0
   607 ;;_i	offset	8
   608 ;;_w	offset	10
   609 ;;_p	offset	12
   610 ;;_fp	offset=-2 (param)
   611 ;;_d	offset=-10 (param)
   612 ;;_counter	offset	0
   613 ;;_dividend	offset=-8 (param)
   614 ;;_divisor	offset=-16 (param)
   615 ;;_quotient	offset	0
   616 ;;_counter	offset	8
   617 ;;_dividend	offset=-8 (param)
   618 ;;_divisor	offset=-16 (param)
   619 ;;_r	offset	0
   620 ;;_l	offset	2
   621 ;;__l	offset=-2 (param)
   622 ;;__r	offset=-4 (param)
   623 ;;_n	offset=-6 (param)
   624 ;;_nuls	offset	0
   625 ;;_l	offset	7
   626 ;;_p	offset	9
   627 ;;_cp	offset	11
   628 ;;_w	offset	13
   629 ;;_i	offset	15
   630 ;;_fp	offset=-2 (param)
   631 ;;_s	offset=-4 (param)
   632 ;;_efgtoa$5765	offset	0
   633 ;;_efgtoa$5764	offset	2
   634 ;;_efgtoa$5763	offset	4
   635 ;;_efgtoa$5759	offset	6
   636 ;;_efgtoa$5755	offset	8
   637 ;;_efgtoa$5754	offset	10
   638 ;;_u	offset	12
   639 ;;_g	offset	16
   640 ;;_l	offset	20
   641 ;;_h	offset	24
   642 ;;_ou	offset	28
   643 ;;_n	offset	32
   644 ;;_e	offset	34
   645 ;;_i	offset	36
   646 ;;_w	offset	38
   647 ;;_p	offset	40
   648 ;;_sign	offset	42
   649 ;;_d	offset	44
   650 ;;_ne	offset	46
   651 ;;_m	offset	48
   652 ;;_pp	offset	50
   653 ;;_t	offset	52
   654 ;;_mode	offset	54
   655 ;;_nmode	offset	55
   656 ;;_fp	offset=-2 (param)
   657 ;;_f	offset=-6 (param)
   658 ;;_c	offset=-7 (param)
   659 ;;_tolower$6584	offset	0
   660 ;;_c	offset=-2 (param)
   661 ;;_c	offset=-2 (param)
   662 ;;_d	offset	0
   663 ;;_s	offset	2
   664 ;;_dest	offset=-2 (param)
   665 ;;_src	offset=-4 (param)
   666 ;;_u	offset	0
   667 ;;_m	offset	4
   668 ;;_e	offset	8
   669 ;;_x	offset=-4 (param)
   670 ;;_u	offset	0
   671 ;;_e	offset	4
   672 ;;_x	offset=-4 (param)
   673 ;;_exp1	offset	0
   674 ;;_sign1	offset	1
   675 ;;_f1	offset=-4 (param)
   676 ;;_f1	offset=-4 (param)
   677 ;;_ff1	offset=-4 (param)
   678 ;;_ff2	offset=-8 (param)
   679 ;;_sign	offset	0
   680 ;;_counter	offset	1
   681 ;;_dividend	offset=-2 (param)
   682 ;;_divisor	offset=-4 (param)
   683 ;;_quotient	offset	0
   684 ;;_sign	offset	2
   685 ;;_counter	offset	3
   686 ;;_dividend	offset=-2 (param)
   687 ;;_divisor	offset=-4 (param)
   688 ;;_dtoa$5731	offset	0
   689 ;;_n	offset	2
   690 ;;_i	offset	10
   691 ;;_s	offset	12
   692 ;;_w	offset	14
   693 ;;_p	offset	16
   694 ;;_fp	offset=-2 (param)
   695 ;;_d	offset=-10 (param)
   696 ;;_a	offset=-2 (param)
   697 ;;_sign	offset	0
   698 ;;_counter	offset	1
   699 ;;_dividend	offset=-8 (param)
   700 ;;_divisor	offset=-16 (param)
   701 ;;_quotient	offset	0
   702 ;;_sign	offset	8
   703 ;;_counter	offset	9
   704 ;;_dividend	offset=-8 (param)
   705 ;;_divisor	offset=-16 (param)
   706 ;;_w	offset	0
   707 ;;_fp	offset=-2 (param)
   708 ;;_c	offset=-3 (param)
   709 ;;_w	offset	0
   710 ;;_i	offset	2
   711 ;;_fp	offset=-2 (param)
   712 ;;_buf	offset=-4 (param)
   713 ;;_p	offset=-6 (param)
   714 ;;_a	offset	0
   715 ;;_s	offset=-2 (param)
   716 ;;_i	offset	0
   717 ;;_c	offset	2
   718 ;;_s	offset=-2 (param)
   719 ;;_fp	offset=-4 (param)
   720 ;;_c	offset=-2 (param)
   721 ;;_fp	offset=-4 (param)
   722 ;;_c	offset=-1 (param)
   723 ;;__this	offset=-2 (param)
   724 ;;_c	offset=-3 (param)
   725 ;;_atoi$6315	offset	0
   726 ;;_atoi$6313	offset	2
   727 ;;_atoi$6314	offset	4
   728 ;;_n	offset	5
   729 ;;_neg	offset	7
   730 ;;_s	offset=-2 (param)
   731 ;;_isspace$6364	offset	0
   732 ;;_c	offset=-2 (param)
   733 ;;_c	offset=-2 (param)
   734 ;;_dsize	offset=-2 (param)
   735 ;;_u	offset	0
   736 ;;_x	offset=-4 (param)
   737 ;;_f1p	offset=-2 (param)
   738 ;;_f2	offset=-6 (param)
   739 ;;_timer	offset=-1 (param)
   740 ;;_count	offset=-3 (param)
   741 ;;_channel	offset=-1 (param)
   742 ;;_i	offset	0
   743                           
   744                           	psect	idataBIGRAM
   745  016BA8                     __pidataBIGRAM:
   746                           	opt callstack 0
   747                           
   748                           ;initializer for _port_data
   749  016BA8  FF                 	db	255
   750  016BA9  00                 	db	0
   751  016BAA  FF                 	db	255
   752  016BAB  00                 	db	0
   753  016BAC  FF                 	db	255
   754  016BAD  00                 	db	0
   755  016BAE  FF                 	db	255
   756  016BAF  00                 	db	0
   757  016BB0  FF                 	db	255
   758  016BB1  00                 	db	0
   759  016BB2  FF                 	db	255
   760  016BB3  00                 	db	0
   761  016BB4  FF                 	db	255
   762  016BB5  00                 	db	0
   763  016BB6  FF                 	db	255
   764  016BB7  00                 	db	0
   765  016BB8  00                 	db	0
   766  016BB9  00                 	db	0
   767  016BBA  00                 	db	0
   768  016BBB  00                 	db	0
   769  016BBC  00                 	db	0
   770  016BBD  00                 	db	0
   771  016BBE  00                 	db	0
   772  016BBF  00                 	db	0
   773  016BC0  00                 	db	0
   774  016BC1  00                 	db	0
   775  016BC2  00                 	db	0
   776  016BC3  00                 	db	0
   777  016BC4  00                 	db	0
   778  016BC5  00                 	db	0
   779  016BC6  00                 	db	0
   780  016BC7  00                 	db	0
   781  016BC8  00                 	db	0
   782  016BC9  00                 	db	0
   783  016BCA  00                 	db	0
   784  016BCB  00                 	db	0
   785  016BCC  00                 	db	0
   786  016BCD  00                 	db	0
   787  016BCE  00                 	db	0
   788  016BCF  00                 	db	0
   789  016BD0  00                 	db	0
   790  016BD1  00                 	db	0
   791  016BD2  00                 	db	0
   792  016BD3  00                 	db	0
   793  016BD4  00                 	db	0
   794  016BD5  00                 	db	0
   795  016BD6  00                 	db	0
   796  016BD7  00                 	db	0
   797  016BD8  00                 	db	0
   798  016BD9  00                 	db	0
   799  016BDA  00                 	db	0
   800  016BDB  00                 	db	0
   801  016BDC  00                 	db	0
   802  016BDD  00                 	db	0
   803  016BDE  00                 	db	0
   804  016BDF  00                 	db	0
   805  016BE0  00                 	db	0
   806  016BE1  00                 	db	0
   807  016BE2  00                 	db	0
   808  016BE3  00                 	db	0
   809  016BE4  00                 	db	0
   810  016BE5  00                 	db	0
   811  016BE6  00                 	db	0
   812  016BE7  00                 	db	0
   813  016BE8  00                 	db	0
   814  016BE9  00                 	db	0
   815  016BEA  00                 	db	0
   816  016BEB  00                 	db	0
   817  016BEC  00                 	db	0
   818  016BED  00                 	db	0
   819  016BEE  00                 	db	0
   820  016BEF  00                 	db	0
   821  016BF0  00                 	db	0
   822  016BF1  00                 	db	0
   823  016BF2  00                 	db	0
   824  016BF3  00                 	db	0
   825  016BF4  00                 	db	0
   826  016BF5  00                 	db	0
   827  016BF6  00                 	db	0
   828  016BF7  00                 	db	0
   829  016BF8  00                 	db	0
   830  016BF9  00                 	db	0
   831  016BFA  00                 	db	0
   832  016BFB  00                 	db	0
   833  016BFC  00                 	db	0
   834  016BFD  00                 	db	0
   835  016BFE  00                 	db	0
   836  016BFF  00                 	db	0
   837  016C00  00                 	db	0
   838  016C01  00                 	db	0
   839  016C02  00                 	db	0
   840  016C03  00                 	db	0
   841  016C04  00                 	db	0
   842  016C05  00                 	db	0
   843  016C06  00                 	db	0
   844  016C07  00                 	db	0
   845  016C08  00                 	db	0
   846  016C09  00                 	db	0
   847  016C0A  00                 	db	0
   848  016C0B  00                 	db	0
   849  016C0C  00                 	db	0
   850  016C0D  00                 	db	0
   851  016C0E  00                 	db	0
   852  016C0F  00                 	db	0
   853  016C10  00                 	db	0
   854  016C11  00                 	db	0
   855  016C12  00                 	db	0
   856  016C13  00                 	db	0
   857  016C14  00                 	db	0
   858  016C15  00                 	db	0
   859  016C16  00                 	db	0
   860  016C17  00                 	db	0
   861  016C18  00                 	db	0
   862  016C19  00                 	db	0
   863  016C1A  00                 	db	0
   864  016C1B  00                 	db	0
   865  016C1C  00                 	db	0
   866  016C1D  00                 	db	0
   867  016C1E  00                 	db	0
   868  016C1F  00                 	db	0
   869  016C20  00                 	db	0
   870  016C21  00                 	db	0
   871  016C22  00                 	db	0
   872  016C23  00                 	db	0
   873  016C24  00                 	db	0
   874  016C25  00                 	db	0
   875  016C26  00                 	db	0
   876  016C27  00                 	db	0
   877  016C28  00                 	db	0
   878  016C29  00                 	db	0
   879  016C2A  00                 	db	0
   880  016C2B  00                 	db	0
   881  016C2C  00                 	db	0
   882  016C2D  00                 	db	0
   883  016C2E  00                 	db	0
   884  016C2F  00                 	db	0
   885  016C30  00                 	db	0
   886  016C31  00                 	db	0
   887  016C32  00                 	db	0
   888  016C33  00                 	db	0
   889  016C34  00                 	db	0
   890  016C35  00                 	db	0
   891  016C36  00                 	db	0
   892  016C37  00                 	db	0
   893  016C38  00                 	db	0
   894  016C39  00                 	db	0
   895  016C3A  00                 	db	0
   896  016C3B  00                 	db	0
   897  016C3C  00                 	db	0
   898  016C3D  00                 	db	0
   899  016C3E  00                 	db	0
   900  016C3F  00                 	db	0
   901  016C40  00                 	db	0
   902  016C41  00                 	db	0
   903  016C42  00                 	db	0
   904  016C43  00                 	db	0
   905  016C44  00                 	db	0
   906  016C45  00                 	db	0
   907  016C46  00                 	db	0
   908  016C47  00                 	db	0
   909  016C48  00                 	db	0
   910  016C49  00                 	db	0
   911  016C4A  00                 	db	0
   912  016C4B  00                 	db	0
   913  016C4C  00                 	db	0
   914  016C4D  00                 	db	0
   915  016C4E  00                 	db	0
   916  016C4F  00                 	db	0
   917  016C50  00                 	db	0
   918  016C51  00                 	db	0
   919  016C52  00                 	db	0
   920  016C53  00                 	db	0
   921  016C54  00                 	db	0
   922  016C55  00                 	db	0
   923  016C56  00                 	db	0
   924  016C57  00                 	db	0
   925  016C58  00                 	db	0
   926  016C59  00                 	db	0
   927  016C5A  00                 	db	0
   928  016C5B  00                 	db	0
   929  016C5C  00                 	db	0
   930  016C5D  00                 	db	0
   931  016C5E  00                 	db	0
   932  016C5F  00                 	db	0
   933  016C60  00                 	db	0
   934  016C61  00                 	db	0
   935  016C62  00                 	db	0
   936  016C63  00                 	db	0
   937  016C64  00                 	db	0
   938  016C65  00                 	db	0
   939  016C66  00                 	db	0
   940  016C67  00                 	db	0
   941  016C68  00                 	db	0
   942  016C69  00                 	db	0
   943  016C6A  00                 	db	0
   944  016C6B  00                 	db	0
   945  016C6C  00                 	db	0
   946  016C6D  00                 	db	0
   947  016C6E  00                 	db	0
   948  016C6F  00                 	db	0
   949  016C70  00                 	db	0
   950  016C71  00                 	db	0
   951  016C72  00                 	db	0
   952  016C73  00                 	db	0
   953  016C74  00                 	db	0
   954  016C75  00                 	db	0
   955  016C76  00                 	db	0
   956  016C77  00                 	db	0
   957  016C78  00                 	db	0
   958  016C79  00                 	db	0
   959  016C7A  00                 	db	0
   960  016C7B  00                 	db	0
   961  016C7C  00                 	db	0
   962  016C7D  00                 	db	0
   963  016C7E  00                 	db	0
   964  016C7F  00                 	db	0
   965  016C80  00                 	db	0
   966  016C81  00                 	db	0
   967  016C82  00                 	db	0
   968  016C83  00                 	db	0
   969  016C84  00                 	db	0
   970  016C85  00                 	db	0
   971  016C86  00                 	db	0
   972  016C87  00                 	db	0
   973  016C88  00                 	db	0
   974  016C89  00                 	db	0
   975  016C8A  00                 	db	0
   976  016C8B  00                 	db	0
   977  016C8C  00                 	db	0
   978  016C8D  00                 	db	0
   979  016C8E  00                 	db	0
   980  016C8F  00                 	db	0
   981  016C90  00                 	db	0
   982  016C91  00                 	db	0
   983  016C92  00                 	db	0
   984  016C93  00                 	db	0
   985  016C94  00                 	db	0
   986  016C95  00                 	db	0
   987  016C96  00                 	db	0
   988  016C97  00                 	db	0
   989  016C98  00                 	db	0
   990  016C99  00                 	db	0
   991  016C9A  00                 	db	0
   992  016C9B  00                 	db	0
   993  016C9C  00                 	db	0
   994  016C9D  00                 	db	0
   995  016C9E  00                 	db	0
   996  016C9F  00                 	db	0
   997  016CA0  00                 	db	0
   998  016CA1  00                 	db	0
   999  016CA2  00                 	db	0
  1000  016CA3  00                 	db	0
  1001  016CA4  00                 	db	0
  1002  016CA5  00                 	db	0
  1003  016CA6  00                 	db	0
  1004  016CA7  00                 	db	0
  1005  016CA8  00                 	db	0
  1006  016CA9  00                 	db	0
  1007  016CAA  00                 	db	0
  1008  016CAB  00                 	db	0
  1009  016CAC  00                 	db	0
  1010  016CAD  00                 	db	0
  1011  016CAE  00                 	db	0
  1012  016CAF  00                 	db	0
  1013  016CB0  00                 	db	0
  1014  016CB1  00                 	db	0
  1015  016CB2  00                 	db	0
  1016  016CB3  00                 	db	0
  1017  016CB4  00                 	db	0
  1018  016CB5  00                 	db	0
  1019  016CB6  00                 	db	0
  1020  016CB7  00                 	db	0
  1021  016CB8  00                 	db	0
  1022  016CB9  00                 	db	0
  1023  016CBA  00                 	db	0
  1024  016CBB  00                 	db	0
  1025  016CBC  00                 	db	0
  1026  016CBD  00                 	db	0
  1027  016CBE  00                 	db	0
  1028  016CBF  00                 	db	0
  1029  016CC0  00                 	db	0
  1030  016CC1  00                 	db	0
  1031  016CC2  00                 	db	0
  1032  016CC3  00                 	db	0
  1033  016CC4  00                 	db	0
  1034  016CC5  00                 	db	0
  1035  016CC6  00                 	db	0
  1036  016CC7  00                 	db	0
  1037  016CC8  00                 	db	0
  1038  016CC9  00                 	db	0
  1039  016CCA  00                 	db	0
  1040  016CCB  00                 	db	0
  1041  016CCC  00                 	db	0
  1042  016CCD  00                 	db	0
  1043  016CCE  00                 	db	0
  1044  016CCF  00                 	db	0
  1045  016CD0  00                 	db	0
  1046  016CD1  00                 	db	0
  1047  016CD2  00                 	db	0
  1048  016CD3  00                 	db	0
  1049  016CD4  00                 	db	0
  1050  016CD5  00                 	db	0
  1051  016CD6  00                 	db	0
  1052  016CD7  00                 	db	0
  1053  016CD8  00                 	db	0
  1054  016CD9  00                 	db	0
  1055  016CDA  00                 	db	0
  1056  016CDB  00                 	db	0
  1057  016CDC  00                 	db	0
  1058  016CDD  00                 	db	0
  1059  016CDE  00                 	db	0
  1060  016CDF  00                 	db	0
  1061  016CE0  00                 	db	0
  1062  016CE1  00                 	db	0
  1063  016CE2  00                 	db	0
  1064  016CE3  00                 	db	0
  1065  016CE4  00                 	db	0
  1066  016CE5  00                 	db	0
  1067  016CE6  00                 	db	0
  1068  016CE7  00                 	db	0
  1069  016CE8  00                 	db	0
  1070  016CE9  00                 	db	0
  1071  016CEA  00                 	db	0
  1072  016CEB  00                 	db	0
  1073  016CEC  00                 	db	0
  1074  016CED  00                 	db	0
  1075  016CEE  00                 	db	0
  1076  016CEF  00                 	db	0
  1077  016CF0  00                 	db	0
  1078  016CF1  00                 	db	0
  1079  016CF2  00                 	db	0
  1080  016CF3  00                 	db	0
  1081  016CF4  00                 	db	0
  1082  016CF5  00                 	db	0
  1083  016CF6  00                 	db	0
  1084  016CF7  00                 	db	0
  1085  016CF8  00                 	db	0
  1086  016CF9  00                 	db	0
  1087  016CFA  00                 	db	0
  1088  016CFB  00                 	db	0
  1089  016CFC  00                 	db	0
  1090  016CFD  00                 	db	0
  1091  016CFE  00                 	db	0
  1092  016CFF  00                 	db	0
  1093  016D00  00                 	db	0
  1094  016D01  00                 	db	0
  1095  016D02  00                 	db	0
  1096  016D03  00                 	db	0
  1097  016D04  00                 	db	0
  1098  016D05  00                 	db	0
  1099  016D06  00                 	db	0
  1100  016D07  00                 	db	0
  1101  016D08  00                 	db	0
  1102  016D09  00                 	db	0
  1103  016D0A  00                 	db	0
  1104  016D0B  00                 	db	0
  1105  016D0C  00                 	db	0
  1106  016D0D  00                 	db	0
  1107  016D0E  00                 	db	0
  1108  016D0F  00                 	db	0
  1109  016D10  00                 	db	0
  1110  016D11  00                 	db	0
  1111  016D12  00                 	db	0
  1112  016D13  00                 	db	0
  1113  016D14  00                 	db	0
  1114  016D15  00                 	db	0
  1115  016D16  00                 	db	0
  1116  016D17  00                 	db	0
  1117  016D18  00                 	db	0
  1118  016D19  00                 	db	0
  1119  016D1A  00                 	db	0
  1120  016D1B  00                 	db	0
  1121  016D1C  00                 	db	0
  1122  016D1D  00                 	db	0
  1123  016D1E  00                 	db	0
  1124  016D1F  00                 	db	0
  1125  016D20  00                 	db	0
  1126  016D21  00                 	db	0
  1127  016D22  00                 	db	0
  1128  016D23  00                 	db	0
  1129  016D24  00                 	db	0
  1130  016D25  00                 	db	0
  1131  016D26  00                 	db	0
  1132  016D27  00                 	db	0
  1133  016D28  00                 	db	0
  1134  016D29  00                 	db	0
  1135  016D2A  00                 	db	0
  1136  016D2B  00                 	db	0
  1137  016D2C  00                 	db	0
  1138  016D2D  00                 	db	0
  1139  016D2E  00                 	db	0
  1140  016D2F  00                 	db	0
  1141  016D30  00                 	db	0
  1142  016D31  00                 	db	0
  1143  016D32  00                 	db	0
  1144  016D33  00                 	db	0
  1145  016D34  00                 	db	0
  1146  016D35  00                 	db	0
  1147  016D36  00                 	db	0
  1148  016D37  00                 	db	0
  1149  016D38  00                 	db	0
  1150  016D39  00                 	db	0
  1151  016D3A  00                 	db	0
  1152  016D3B  00                 	db	0
  1153  016D3C  00                 	db	0
  1154  016D3D  00                 	db	0
  1155  016D3E  00                 	db	0
  1156  016D3F  00                 	db	0
  1157  016D40  00                 	db	0
  1158  016D41  00                 	db	0
  1159  016D42  00                 	db	0
  1160  016D43  00                 	db	0
  1161  016D44  00                 	db	0
  1162  016D45  00                 	db	0
  1163  016D46  00                 	db	0
  1164  016D47  00                 	db	0
  1165  016D48  00                 	db	0
  1166  016D49  00                 	db	0
  1167  016D4A  00                 	db	0
  1168  016D4B  00                 	db	0
  1169  016D4C  00                 	db	0
  1170  016D4D  00                 	db	0
  1171  016D4E  00                 	db	0
  1172  016D4F  00                 	db	0
  1173  016D50  00                 	db	0
  1174  016D51  00                 	db	0
  1175  016D52  00                 	db	0
  1176  016D53  00                 	db	0
  1177  016D54  00                 	db	0
  1178  016D55  00                 	db	0
  1179  016D56  00                 	db	0
  1180  016D57  00                 	db	0
  1181  016D58  00                 	db	0
  1182  016D59  00                 	db	0
  1183  016D5A  00                 	db	0
  1184  016D5B  00                 	db	0
  1185  016D5C  00                 	db	0
  1186  016D5D  00                 	db	0
  1187  016D5E  00                 	db	0
  1188  016D5F  00                 	db	0
  1189  016D60  00                 	db	0
  1190  016D61  00                 	db	0
  1191  016D62  00                 	db	0
  1192  016D63  00                 	db	0
  1193  016D64  00                 	db	0
  1194  016D65  00                 	db	0
  1195  016D66  00                 	db	0
  1196  016D67  00                 	db	0
  1197  016D68  00                 	db	0
  1198  016D69  00                 	db	0
  1199  016D6A  00                 	db	0
  1200  016D6B  00                 	db	0
  1201  016D6C  00                 	db	0
  1202  016D6D  00                 	db	0
  1203  016D6E  00                 	db	0
  1204  016D6F  00                 	db	0
  1205  016D70  00                 	db	0
  1206  016D71  00                 	db	0
  1207  016D72  00                 	db	0
  1208  016D73  00                 	db	0
  1209  016D74  00                 	db	0
  1210  016D75  00                 	db	0
  1211  016D76  00                 	db	0
  1212  016D77  00                 	db	0
  1213  016D78  00                 	db	0
  1214  016D79  00                 	db	0
  1215  016D7A  00                 	db	0
  1216  016D7B  00                 	db	0
  1217  016D7C  00                 	db	0
  1218  016D7D  00                 	db	0
  1219  016D7E  00                 	db	0
  1220  016D7F  00                 	db	0
  1221  016D80  00                 	db	0
  1222  016D81  00                 	db	0
  1223  016D82  00                 	db	0
  1224  016D83  00                 	db	0
  1225  016D84  00                 	db	0
  1226  016D85  00                 	db	0
  1227  016D86  00                 	db	0
  1228  016D87  00                 	db	0
  1229  016D88  00                 	db	0
  1230  016D89  00                 	db	0
  1231  016D8A  00                 	db	0
  1232  016D8B  00                 	db	0
  1233  016D8C  00                 	db	0
  1234  016D8D  00                 	db	0
  1235  016D8E  00                 	db	0
  1236  016D8F  00                 	db	0
  1237  016D90  00                 	db	0
  1238  016D91  00                 	db	0
  1239  016D92  00                 	db	0
  1240  016D93  00                 	db	0
  1241  016D94  00                 	db	0
  1242  016D95  00                 	db	0
  1243  016D96  00                 	db	0
  1244  016D97  00                 	db	0
  1245  016D98  00                 	db	0
  1246  016D99  00                 	db	0
  1247  016D9A  00                 	db	0
  1248  016D9B  00                 	db	0
  1249  016D9C  00                 	db	0
  1250  016D9D  00                 	db	0
  1251  016D9E  00                 	db	0
  1252  016D9F  00                 	db	0
  1253  016DA0  00                 	db	0
  1254  016DA1  00                 	db	0
  1255  016DA2  00                 	db	0
  1256  016DA3  00                 	db	0
  1257  016DA4  00                 	db	0
  1258  016DA5  00                 	db	0
  1259  016DA6  00                 	db	0
  1260  016DA7  00                 	db	0
  1261                           
  1262                           ;initializer for _C
  1263  016DA8  0000               	dw	0
  1264  016DAA  0000               	dw	0
  1265  016DAC  0000               	dw	0
  1266  016DAE  0000               	dw	0
  1267  016DB0  0000               	dw	0
  1268  016DB2  0000               	dw	0
  1269  016DB4  0000               	dw	0
  1270  016DB6  0000               	dw	0
  1271  016DB8  0000               	dw	0
  1272  016DBA  0000               	dw	0
  1273  016DBC  0000               	dw	0
  1274  016DBE  0000               	dw	0
  1275  016DC0  0000               	dw	0
  1276  016DC2  0000               	dw	0
  1277  016DC4  0000               	dw	0
  1278  016DC6  0000               	dw	0
  1279  016DC8  0000               	dw	0
  1280  016DCA  0000               	dw	0
  1281  016DCC  0000               	dw	0
  1282  016DCE  0000               	dw	0
  1283  016DD0  0000               	dw	0
  1284  016DD2  0000               	dw	0
  1285  016DD4  0000               	dw	0
  1286  016DD6  0000               	dw	0
  1287  016DD8  0000               	dw	0
  1288  016DDA  0000               	dw	0
  1289  016DDC  0000               	dw	0
  1290  016DDE  0000               	dw	0
  1291  016DE0  0000               	dw	0
  1292  016DE2  0000               	dw	0
  1293  016DE4  0000               	dw	0
  1294  016DE6  0000               	dw	0
  1295  016DE8  0000               	dw	0
  1296  016DEA  0000               	dw	0
  1297  016DEC  0000               	dw	0
  1298  016DEE  0000               	dw	0
  1299  016DF0  0000               	dw	0
  1300  016DF2  0000               	dw	0
  1301  016DF4  0000               	dw	0
  1302  016DF6  0000               	dw	0
  1303  016DF8  0000               	dw	0
  1304  016DFA  0000               	dw	0
  1305  016DFC  0000               	dw	0
  1306  016DFE  0000               	dw	0
  1307  016E00  0000               	dw	0
  1308  016E02  0000               	dw	0
  1309  016E04  0000               	dw	0
  1310  016E06  0000               	dw	0
  1311  016E08  0000               	dw	0
  1312  016E0A  0000               	dw	0
  1313  016E0C  0000               	dw	0
  1314  016E0E  0000               	dw	0
  1315  016E10  0000               	dw	0
  1316  016E12  0000               	dw	0
  1317  016E14  0000               	dw	0
  1318  016E16  0000               	dw	0
  1319  016E18  0000               	dw	0
  1320  016E1A  0000               	dw	0
  1321  016E1C  0000               	dw	0
  1322  016E1E  0000               	dw	0
  1323  016E20  0000               	dw	0
  1324  016E22  0000               	dw	0
  1325  016E24  0000               	dw	0
  1326  016E26  0000               	dw	0
  1327  016E28  0000               	dw	0
  1328  016E2A  0000               	dw	0
  1329  016E2C  0000               	dw	0
  1330  016E2E  0000               	dw	0
  1331  016E30  0000               	dw	0
  1332  016E32  0000               	dw	0
  1333  016E34  0000               	dw	0
  1334  016E36  42FA               	dw	17146
  1335  016E38  0000               	dw	0
  1336  016E3A  0000               	dw	0
  1337  016E3C  0000               	dw	0
  1338  016E3E  0000               	dw	0
  1339  016E40  0000               	dw	0
  1340  016E42  0000               	dw	0
  1341  016E44  0000               	dw	0
  1342  016E46  0000               	dw	0
  1343  016E48  0000               	dw	0
  1344  016E4A  0000               	dw	0
  1345  016E4C  0000               	dw	0
  1346  016E4E  0000               	dw	0
  1347  016E50  0000               	dw	0
  1348  016E52  0000               	dw	0
  1349  016E54  0000               	dw	0
  1350  016E56  0000               	dw	0
  1351  016E58  0000               	dw	0
  1352  016E5A  0000               	dw	0
  1353  016E5C  0000               	dw	0
  1354  016E5E  0000               	dw	0
  1355  016E60  00                 	db	0
  1356  016E61  01                 	db	1
  1357  016E62  0000               	dw	0
  1358  016E64  3F80               	dw	16256
  1359  016E66  0000               	dw	0
  1360  016E68  3F80               	dw	16256
  1361  016E6A  00                 	db	0
  1362  016E6B  00                 	db	0
  1363  016E6C  00                 	db	0
  1364  016E6D  00                 	db	0
  1365  016E6E  00                 	db	0
  1366  016E6F  00                 	db	0
  1367  016E70  00                 	db	0
  1368  016E71  00                 	db	0
  1369  016E72  00                 	db	0
  1370  016E73  00                 	db	0
  1371  016E74  00                 	db	0
  1372  016E75  00                 	db	0
  1373  016E76  00                 	db	0
  1374  016E77  00                 	db	0
  1375  016E78  00                 	db	0
  1376  016E79  00                 	db	0
  1377  016E7A  00                 	db	0
  1378  016E7B  00                 	db	0
  1379  016E7C  00                 	db	0
  1380  016E7D  00                 	db	0
  1381  016E7E  00                 	db	0
  1382  016E7F  00                 	db	0
  1383  016E80  00                 	db	0
  1384  016E81  00                 	db	0
  1385  016E82  00                 	db	0
  1386  016E83  00                 	db	0
  1387  016E84  00                 	db	0
  1388  016E85  00                 	db	0
  1389  016E86  00                 	db	0
  1390  016E87  00                 	db	0
  1391  016E88  00                 	db	0
  1392  016E89  00                 	db	0
  1393  016E8A  00                 	db	0
  1394  016E8B  00                 	db	0
  1395  016E8C  00                 	db	0
  1396  016E8D  00                 	db	0
  1397  016E8E  00                 	db	0
  1398  016E8F  00                 	db	0
  1399  016E90  00                 	db	0
  1400  016E91  00                 	db	0
  1401  016E92  00                 	db	0
  1402  016E93  00                 	db	0
  1403  016E94  00                 	db	0
  1404  016E95  00                 	db	0
  1405  016E96  00                 	db	0
  1406  016E97  00                 	db	0
  1407  016E98  00                 	db	0
  1408  016E99  00                 	db	0
  1409  016E9A  00                 	db	0
  1410  016E9B  00                 	db	0
  1411  016E9C  00                 	db	0
  1412  016E9D  00                 	db	0
  1413  016E9E  00                 	db	0
  1414  016E9F  00                 	db	0
  1415  016EA0  00                 	db	0
  1416  016EA1  00                 	db	0
  1417  016EA2  00                 	db	0
  1418  016EA3  00                 	db	0
  1419  016EA4  00                 	db	0
  1420  016EA5  00                 	db	0
  1421  016EA6  00                 	db	0
  1422  016EA7  00                 	db	0
  1423  016EA8  00                 	db	0
  1424  016EA9  00                 	db	0
  1425  016EAA  00                 	db	0
  1426  016EAB  00                 	db	0
  1427  016EAC  00                 	db	0
  1428  016EAD  00                 	db	0
  1429  016EAE  00                 	db	0
  1430  016EAF  00                 	db	0
  1431  016EB0  00                 	db	0
  1432  016EB1  00                 	db	0
  1433  016EB2  00                 	db	0
  1434  016EB3  00                 	db	0
  1435  016EB4  00                 	db	0
  1436  016EB5  00                 	db	0
  1437  016EB6  0000               	dw	0
  1438  016EB8  0000               	dw	0
  1439  016EBA  0000               	dw	0
  1440  016EBC  0000               	dw	0
  1441  016EBE  0000               	dw	0
  1442  016EC0  0000               	dw	0
  1443  016EC2  0000               	dw	0
  1444  016EC4  0000               	dw	0
  1445  016EC6  0000               	dw	0
  1446  016EC8  0000               	dw	0
  1447  016ECA  01                 	db	1
  1448  016ECB  00                 	db	0
  1449  016ECC  00                 	db	0
  1450  016ECD  00                 	db	0
  1451  016ECE  00                 	db	0
  1452  016ECF  00                 	db	0
  1453  016ED0  00                 	db	0
  1454  016ED1  00                 	db	0
  1455  016ED2  00                 	db	0
  1456                           
  1457                           	psect	idataBANK0
  1458  01BD0C                     __pidataBANK0:
  1459                           	opt callstack 0
  1460                           
  1461                           ;initializer for _R
  1462  01BD0C  0000               	dw	0
  1463  01BD0E  0000               	dw	0
  1464  01BD10  0000               	dw	0
  1465  01BD12  0000               	dw	0
  1466  01BD14  0000               	dw	0
  1467  01BD16  0000               	dw	0
  1468  01BD18  0000               	dw	0
  1469  01BD1A  0000               	dw	0
  1470  01BD1C  0000               	dw	0
  1471  01BD1E  0000               	dw	0
  1472  01BD20  0000               	dw	0
  1473  01BD22  0000               	dw	0
  1474  01BD24  0000               	dw	0
  1475  01BD26  0000               	dw	0
  1476  01BD28  0000               	dw	0
  1477  01BD2A  0000               	dw	0
  1478  01BD2C  0FFF               	dw	4095
  1479  01BD2E  0777               	dw	1911
  1480  01BD30  0000               	dw	0
  1481  01BD32  0F62               	dw	3938
  1482  01BD34  0FA4               	dw	4004
  1483  01BD36  0000               	dw	0
  1484  01BD38  0000               	dw	0
  1485  01BD3A  0000               	dw	0
  1486  01BD3C  0000               	dw	0
  1487  01BD3E  00                 	db	0
  1488  01BD3F  0000               	dw	0
  1489  01BD41  00                 	db	0
  1490                           
  1491                           	psect	idataBANK1
  1492  01A5D0                     __pidataBANK1:
  1493                           	opt callstack 0
  1494                           
  1495                           ;initializer for stoa@F1166
  1496  01A5D0  28                 	db	40
  1497  01A5D1  6E                 	db	110
  1498  01A5D2  75                 	db	117
  1499  01A5D3  6C                 	db	108
  1500  01A5D4  6C                 	db	108
  1501  01A5D5  29                 	db	41
  1502  01A5D6  00                 	db	0
  1503                           
  1504                           ;initializer for _V
  1505  01A5D7  00                 	db	0
  1506  01A5D8  00                 	db	0
  1507  01A5D9  00                 	db	0
  1508  01A5DA  00                 	db	0
  1509  01A5DB  00                 	db	0
  1510  01A5DC  00                 	db	0
  1511  01A5DD  00                 	db	0
  1512  01A5DE  00                 	db	0
  1513  01A5DF  00                 	db	0
  1514  01A5E0  00                 	db	0
  1515  01A5E1  00                 	db	0
  1516  01A5E2  00                 	db	0
  1517  01A5E3  00                 	db	0
  1518  01A5E4  00                 	db	0
  1519  01A5E5  00                 	db	0
  1520  01A5E6  00                 	db	0
  1521  01A5E7  00                 	db	0
  1522  01A5E8  00                 	db	0
  1523  01A5E9  00                 	db	0
  1524  01A5EA  00                 	db	0
  1525  01A5EB  00                 	db	0
  1526  01A5EC  00                 	db	0
  1527  01A5ED  00                 	db	0
  1528  01A5EE  00                 	db	0
  1529  01A5EF  00                 	db	0
  1530  01A5F0  00                 	db	0
  1531  01A5F1  00                 	db	0
  1532  01A5F2  00                 	db	0
  1533  01A5F3  00                 	db	0
  1534  01A5F4  00                 	db	0
  1535  01A5F5  00                 	db	0
  1536  01A5F6  00                 	db	0
  1537  01A5F7  00                 	db	0
  1538  01A5F8  00                 	db	0
  1539  01A5F9  00                 	db	0
  1540  01A5FA  00                 	db	0
  1541  01A5FB  00                 	db	0
  1542  01A5FC  00                 	db	0
  1543  01A5FD  00                 	db	0
  1544  01A5FE  00                 	db	0
  1545  01A5FF  00                 	db	0
  1546  01A600  00                 	db	0
  1547  01A601  00                 	db	0
  1548  01A602  00                 	db	0
  1549  01A603  00                 	db	0
  1550  01A604  00                 	db	0
  1551  01A605  00                 	db	0
  1552  01A606  00                 	db	0
  1553  01A607  00                 	db	0
  1554  01A608  00                 	db	0
  1555  01A609  00                 	db	0
  1556  01A60A  00                 	db	0
  1557  01A60B  00                 	db	0
  1558  01A60C  00                 	db	0
  1559  01A60D  00                 	db	0
  1560  01A60E  00                 	db	0
  1561  01A60F  00                 	db	0
  1562  01A610  00                 	db	0
  1563  01A611  00                 	db	0
  1564  01A612  00                 	db	0
  1565  01A613  00                 	db	0
  1566  01A614  00                 	db	0
  1567  01A615  00                 	db	0
  1568  01A616  00                 	db	0
  1569  01A617  00                 	db	0
  1570  01A618  00                 	db	0
  1571  01A619  00                 	db	0
  1572  01A61A  00                 	db	0
  1573  01A61B  00                 	db	0
  1574  01A61C  00                 	db	0
  1575  01A61D  00                 	db	0
  1576  01A61E  00                 	db	0
  1577  01A61F  00                 	db	0
  1578  01A620  00                 	db	0
  1579  01A621  00                 	db	0
  1580  01A622  00                 	db	0
  1581  01A623  00                 	db	0
  1582  01A624  00                 	db	0
  1583  01A625  00                 	db	0
  1584  01A626  00                 	db	0
  1585  01A627  00                 	db	0
  1586  01A628  00                 	db	0
  1587  01A629  00                 	db	0
  1588  01A62A  00                 	db	0
  1589  01A62B  00                 	db	0
  1590  01A62C  00                 	db	0
  1591  01A62D  00                 	db	0
  1592  01A62E  00                 	db	0
  1593  01A62F  00                 	db	0
  1594  01A630  00                 	db	0
  1595  01A631  00                 	db	0
  1596  01A632  00                 	db	0
  1597  01A633  00                 	db	0
  1598  01A634  00                 	db	0
  1599  01A635  00                 	db	0
  1600  01A636  00                 	db	0
  1601  01A637  00                 	db	0
  1602  01A638  00                 	db	0
  1603  01A639  00                 	db	0
  1604  01A63A  00                 	db	0
  1605  01A63B  00                 	db	0
  1606  01A63C  00                 	db	0
  1607  01A63D  00                 	db	0
  1608  01A63E  00                 	db	0
  1609  01A63F  00                 	db	0
  1610  01A640  00                 	db	0
  1611  01A641  00                 	db	0
  1612  01A642  00                 	db	0
  1613  01A643  00                 	db	0
  1614  01A644  00                 	db	0
  1615  01A645  00                 	db	0
  1616  01A646  00                 	db	0
  1617  01A647  00                 	db	0
  1618  01A648  00                 	db	0
  1619  01A649  00                 	db	0
  1620  01A64A  00                 	db	0
  1621  01A64B  00                 	db	0
  1622  01A64C  00                 	db	0
  1623  01A64D  00                 	db	0
  1624  01A64E  00                 	db	0
  1625  01A64F  00                 	db	0
  1626  01A650  00                 	db	0
  1627  01A651  00                 	db	0
  1628  01A652  00                 	db	0
  1629  01A653  00                 	db	0
  1630  01A654  00                 	db	0
  1631  01A655  00                 	db	0
  1632  01A656  00                 	db	0
  1633  01A657  00                 	db	0
  1634  01A658  0000               	dw	0
  1635  01A65A  0000               	dw	0
  1636  01A65C  0000               	dw	0
  1637  01A65E  0000               	dw	0
  1638  01A660  00                 	db	0
  1639  01A661  00                 	db	0
  1640  01A662  00                 	db	0
  1641  01A663  00                 	db	0
  1642  01A664  00                 	db	0
  1643  01A665  00                 	db	0
  1644  01A666  0000               	dw	0
  1645  01A668  0000               	dw	0
  1646  01A66A  0000               	dw	0
  1647  01A66C  0000               	dw	0
  1648  01A66E  0000               	dw	0
  1649  01A670  0000               	dw	0
  1650  01A672  00                 	db	0
  1651  01A673  00                 	db	0
  1652  01A674  00                 	db	0
  1653  01A675  00                 	db	0
  1654  01A676  00                 	db	0
  1655  01A677  00                 	db	0
  1656  01A678  00                 	db	0
  1657  01A679  00                 	db	0
  1658  01A67A  00                 	db	0
  1659  01A67B  00                 	db	0
  1660  01A67C  00                 	db	0
  1661  01A67D  0000               	dw	0
  1662  01A67F  0000               	dw	0
  1663  01A681  2D                 	db	45
  1664  01A682  00                 	db	0
  1665  01A683  00                 	db	0
  1666  01A684  00                 	db	0
  1667  01A685  00                 	db	0
  1668  01A686  0000               	dw	0
  1669  01A688  0000               	dw	0
  1670  01A68A  0000               	dw	0
  1671  01A68C  0000               	dw	0
  1672  01A68E  0000               	dw	0
  1673  01A690  0000               	dw	0
  1674  01A692  0000               	dw	0
  1675  01A694  0000               	dw	0
  1676                           
  1677                           ;initializer for _H
  1678  01A696  00                 	db	0
  1679  01A697  00                 	db	0
  1680  01A698  01                 	db	1
  1681  01A699  00                 	db	0
  1682  01A69A  01                 	db	1
  1683  01A69B  00                 	db	0
  1684  01A69C  00                 	db	0
  1685                           
  1686                           	psect	mediumconst
  1687  00F9DE                     __pmediumconst:
  1688                           	opt callstack 0
  1689  00F9DE  00                 	db	0
  1690  00F9DF                     _BVSOC_TABLE:
  1691                           	opt callstack 0
  1692  00F9DF  59D8               	dw	23000
  1693  00F9E1  0000               	dw	0
  1694  00F9E3  0005               	dw	5
  1695  00F9E5  0000               	dw	0
  1696  00F9E7  5B68               	dw	23400
  1697  00F9E9  0000               	dw	0
  1698  00F9EB  000A               	dw	10
  1699  00F9ED  0000               	dw	0
  1700  00F9EF  5C30               	dw	23600
  1701  00F9F1  0000               	dw	0
  1702  00F9F3  0014               	dw	20
  1703  00F9F5  0000               	dw	0
  1704  00F9F7  5E38               	dw	24120
  1705  00F9F9  0000               	dw	0
  1706  00F9FB  0019               	dw	25
  1707  00F9FD  0000               	dw	0
  1708  00F9FF  5E88               	dw	24200
  1709  00FA01  0000               	dw	0
  1710  00FA03  001E               	dw	30
  1711  00FA05  0000               	dw	0
  1712  00FA07  5F78               	dw	24440
  1713  00FA09  0000               	dw	0
  1714  00FA0B  0028               	dw	40
  1715  00FA0D  0000               	dw	0
  1716  00FA0F  5FDC               	dw	24540
  1717  00FA11  0000               	dw	0
  1718  00FA13  002D               	dw	45
  1719  00FA15  0000               	dw	0
  1720  00FA17  6018               	dw	24600
  1721  00FA19  0000               	dw	0
  1722  00FA1B  0032               	dw	50
  1723  00FA1D  0000               	dw	0
  1724  00FA1F  6046               	dw	24646
  1725  00FA21  0000               	dw	0
  1726  00FA23  0035               	dw	53
  1727  00FA25  0000               	dw	0
  1728  00FA27  607C               	dw	24700
  1729  00FA29  0000               	dw	0
  1730  00FA2B  0037               	dw	55
  1731  00FA2D  0000               	dw	0
  1732  00FA2F  60AE               	dw	24750
  1733  00FA31  0000               	dw	0
  1734  00FA33  0039               	dw	57
  1735  00FA35  0000               	dw	0
  1736  00FA37  60E0               	dw	24800
  1737  00FA39  0000               	dw	0
  1738  00FA3B  003C               	dw	60
  1739  00FA3D  0000               	dw	0
  1740  00FA3F  6112               	dw	24850
  1741  00FA41  0000               	dw	0
  1742  00FA43  003F               	dw	63
  1743  00FA45  0000               	dw	0
  1744  00FA47  615D               	dw	24925
  1745  00FA49  0000               	dw	0
  1746  00FA4B  0043               	dw	67
  1747  00FA4D  0000               	dw	0
  1748  00FA4F  61A8               	dw	25000
  1749  00FA51  0000               	dw	0
  1750  00FA53  0046               	dw	70
  1751  00FA55  0000               	dw	0
  1752  00FA57  61BC               	dw	25020
  1753  00FA59  0000               	dw	0
  1754  00FA5B  0048               	dw	72
  1755  00FA5D  0000               	dw	0
  1756  00FA5F  61D0               	dw	25040
  1757  00FA61  0000               	dw	0
  1758  00FA63  004B               	dw	75
  1759  00FA65  0000               	dw	0
  1760  00FA67  61DA               	dw	25050
  1761  00FA69  0000               	dw	0
  1762  00FA6B  0050               	dw	80
  1763  00FA6D  0000               	dw	0
  1764  00FA6F  61E4               	dw	25060
  1765  00FA71  0000               	dw	0
  1766  00FA73  0055               	dw	85
  1767  00FA75  0000               	dw	0
  1768  00FA77  61F8               	dw	25080
  1769  00FA79  0000               	dw	0
  1770  00FA7B  005A               	dw	90
  1771  00FA7D  0000               	dw	0
  1772  00FA7F  6208               	dw	25096
  1773  00FA81  0000               	dw	0
  1774  00FA83  005C               	dw	92
  1775  00FA85  0000               	dw	0
  1776  00FA87  6222               	dw	25122
  1777  00FA89  0000               	dw	0
  1778  00FA8B  005D               	dw	93
  1779  00FA8D  0000               	dw	0
  1780  00FA8F  6234               	dw	25140
  1781  00FA91  0000               	dw	0
  1782  00FA93  005F               	dw	95
  1783  00FA95  0000               	dw	0
  1784  00FA97  6248               	dw	25160
  1785  00FA99  0000               	dw	0
  1786  00FA9B  0061               	dw	97
  1787  00FA9D  0000               	dw	0
  1788  00FA9F  625C               	dw	25180
  1789  00FAA1  0000               	dw	0
  1790  00FAA3  0064               	dw	100
  1791  00FAA5  0000               	dw	0
  1792  00FAA7  6784               	dw	26500
  1793  00FAA9  0000               	dw	0
  1794  00FAAB  0062               	dw	98
  1795  00FAAD  0000               	dw	0
  1796  00FAAF                     __end_of_BVSOC_TABLE:
  1797                           	opt callstack 0
  1798  00FAAF                     _T:
  1799                           	opt callstack 0
  1800  00FAAF  63                 	db	99
  1801  00FAB0  6F                 	db	111
  1802  00FAB1  6D                 	db	109
  1803  00FAB2  6D                 	db	109
  1804  00FAB3  61                 	db	97
  1805  00FAB4  6E                 	db	110
  1806  00FAB5  64                 	db	100
  1807  00FAB6  73                 	db	115
  1808  00FAB7  20                 	db	32
  1809  00FAB8  31                 	db	49
  1810  00FAB9  00                 	db	0
  1811  00FABA  00                 	db	0
  1812  00FABB  00                 	db	0
  1813  00FABC  00                 	db	0
  1814  00FABD  00                 	db	0
  1815  00FABE  00                 	db	0
  1816  00FABF  00                 	db	0
  1817  00FAC0  00                 	db	0
  1818  00FAC1  64                 	db	100
  1819  00FAC2  69                 	db	105
  1820  00FAC3  73                 	db	115
  1821  00FAC4  70                 	db	112
  1822  00FAC5  6C                 	db	108
  1823  00FAC6  61                 	db	97
  1824  00FAC7  79                 	db	121
  1825  00FAC8  73                 	db	115
  1826  00FAC9  20                 	db	32
  1827  00FACA  31                 	db	49
  1828  00FACB  00                 	db	0
  1829  00FACC  00                 	db	0
  1830  00FACD  00                 	db	0
  1831  00FACE  00                 	db	0
  1832  00FACF  00                 	db	0
  1833  00FAD0  00                 	db	0
  1834  00FAD1  00                 	db	0
  1835  00FAD2  00                 	db	0
  1836  00FAD3  63                 	db	99
  1837  00FAD4  6F                 	db	111
  1838  00FAD5  6D                 	db	109
  1839  00FAD6  6D                 	db	109
  1840  00FAD7  61                 	db	97
  1841  00FAD8  6E                 	db	110
  1842  00FAD9  64                 	db	100
  1843  00FADA  73                 	db	115
  1844  00FADB  20                 	db	32
  1845  00FADC  32                 	db	50
  1846  00FADD  00                 	db	0
  1847  00FADE  00                 	db	0
  1848  00FADF  00                 	db	0
  1849  00FAE0  00                 	db	0
  1850  00FAE1  00                 	db	0
  1851  00FAE2  00                 	db	0
  1852  00FAE3  00                 	db	0
  1853  00FAE4  00                 	db	0
  1854  00FAE5  64                 	db	100
  1855  00FAE6  69                 	db	105
  1856  00FAE7  73                 	db	115
  1857  00FAE8  70                 	db	112
  1858  00FAE9  6C                 	db	108
  1859  00FAEA  61                 	db	97
  1860  00FAEB  79                 	db	121
  1861  00FAEC  73                 	db	115
  1862  00FAED  20                 	db	32
  1863  00FAEE  32                 	db	50
  1864  00FAEF  00                 	db	0
  1865  00FAF0  00                 	db	0
  1866  00FAF1  00                 	db	0
  1867  00FAF2  00                 	db	0
  1868  00FAF3  00                 	db	0
  1869  00FAF4  00                 	db	0
  1870  00FAF5  00                 	db	0
  1871  00FAF6  00                 	db	0
  1872  00FAF7  63                 	db	99
  1873  00FAF8  6F                 	db	111
  1874  00FAF9  6D                 	db	109
  1875  00FAFA  6D                 	db	109
  1876  00FAFB  61                 	db	97
  1877  00FAFC  6E                 	db	110
  1878  00FAFD  64                 	db	100
  1879  00FAFE  73                 	db	115
  1880  00FAFF  20                 	db	32
  1881  00FB00  33                 	db	51
  1882  00FB01  00                 	db	0
  1883  00FB02  00                 	db	0
  1884  00FB03  00                 	db	0
  1885  00FB04  00                 	db	0
  1886  00FB05  00                 	db	0
  1887  00FB06  00                 	db	0
  1888  00FB07  00                 	db	0
  1889  00FB08  00                 	db	0
  1890  00FB09  64                 	db	100
  1891  00FB0A  69                 	db	105
  1892  00FB0B  73                 	db	115
  1893  00FB0C  70                 	db	112
  1894  00FB0D  6C                 	db	108
  1895  00FB0E  61                 	db	97
  1896  00FB0F  79                 	db	121
  1897  00FB10  73                 	db	115
  1898  00FB11  20                 	db	32
  1899  00FB12  33                 	db	51
  1900  00FB13  00                 	db	0
  1901  00FB14  00                 	db	0
  1902  00FB15  00                 	db	0
  1903  00FB16  00                 	db	0
  1904  00FB17  00                 	db	0
  1905  00FB18  00                 	db	0
  1906  00FB19  00                 	db	0
  1907  00FB1A  00                 	db	0
  1908  00FB1B  63                 	db	99
  1909  00FB1C  6F                 	db	111
  1910  00FB1D  6D                 	db	109
  1911  00FB1E  6D                 	db	109
  1912  00FB1F  61                 	db	97
  1913  00FB20  6E                 	db	110
  1914  00FB21  64                 	db	100
  1915  00FB22  73                 	db	115
  1916  00FB23  20                 	db	32
  1917  00FB24  34                 	db	52
  1918  00FB25  00                 	db	0
  1919  00FB26  00                 	db	0
  1920  00FB27  00                 	db	0
  1921  00FB28  00                 	db	0
  1922  00FB29  00                 	db	0
  1923  00FB2A  00                 	db	0
  1924  00FB2B  00                 	db	0
  1925  00FB2C  00                 	db	0
  1926  00FB2D  64                 	db	100
  1927  00FB2E  69                 	db	105
  1928  00FB2F  73                 	db	115
  1929  00FB30  70                 	db	112
  1930  00FB31  6C                 	db	108
  1931  00FB32  61                 	db	97
  1932  00FB33  79                 	db	121
  1933  00FB34  73                 	db	115
  1934  00FB35  20                 	db	32
  1935  00FB36  34                 	db	52
  1936  00FB37  00                 	db	0
  1937  00FB38  00                 	db	0
  1938  00FB39  00                 	db	0
  1939  00FB3A  00                 	db	0
  1940  00FB3B  00                 	db	0
  1941  00FB3C  00                 	db	0
  1942  00FB3D  00                 	db	0
  1943  00FB3E  00                 	db	0
  1944  00FB3F                     __end_of_T:
  1945                           	opt callstack 0
  1946  00FB3F                     _spin:
  1947                           	opt callstack 0
  1948  00FB3F  7C                 	db	124
  1949  00FB40  7C                 	db	124
  1950  00FB41  2F                 	db	47
  1951  00FB42  2F                 	db	47
  1952  00FB43  2D                 	db	45
  1953  00FB44  2D                 	db	45
  1954  00FB45  00                 	db	0
  1955  00FB46  00                 	db	0
  1956  00FB47  00                 	db	0
  1957  00FB48  00                 	db	0
  1958  00FB49  00                 	db	0
  1959  00FB4A  00                 	db	0
  1960  00FB4B  00                 	db	0
  1961  00FB4C  00                 	db	0
  1962  00FB4D  00                 	db	0
  1963  00FB4E  00                 	db	0
  1964  00FB4F  00                 	db	0
  1965  00FB50  00                 	db	0
  1966  00FB51  00                 	db	0
  1967  00FB52  00                 	db	0
  1968  00FB53  7C                 	db	124
  1969  00FB54  7C                 	db	124
  1970  00FB55  2F                 	db	47
  1971  00FB56  2F                 	db	47
  1972  00FB57  2D                 	db	45
  1973  00FB58  2D                 	db	45
  1974  00FB59  5C                 	db	92
  1975  00FB5A  5C                 	db	92
  1976  00FB5B  00                 	db	0
  1977  00FB5C  00                 	db	0
  1978  00FB5D  00                 	db	0
  1979  00FB5E  00                 	db	0
  1980  00FB5F  00                 	db	0
  1981  00FB60  00                 	db	0
  1982  00FB61  00                 	db	0
  1983  00FB62  00                 	db	0
  1984  00FB63  00                 	db	0
  1985  00FB64  00                 	db	0
  1986  00FB65  00                 	db	0
  1987  00FB66  00                 	db	0
  1988  00FB67  4F                 	db	79
  1989  00FB68  4F                 	db	79
  1990  00FB69  4F                 	db	79
  1991  00FB6A  4F                 	db	79
  1992  00FB6B  4F                 	db	79
  1993  00FB6C  4F                 	db	79
  1994  00FB6D  2D                 	db	45
  1995  00FB6E  2D                 	db	45
  1996  00FB6F  5F                 	db	95
  1997  00FB70  5F                 	db	95
  1998  00FB71  2D                 	db	45
  1999  00FB72  00                 	db	0
  2000  00FB73  00                 	db	0
  2001  00FB74  00                 	db	0
  2002  00FB75  00                 	db	0
  2003  00FB76  00                 	db	0
  2004  00FB77  00                 	db	0
  2005  00FB78  00                 	db	0
  2006  00FB79  00                 	db	0
  2007  00FB7A  00                 	db	0
  2008  00FB7B  76                 	db	118
  2009  00FB7C  76                 	db	118
  2010  00FB7D  3C                 	db	60
  2011  00FB7E  3C                 	db	60
  2012  00FB7F  5E                 	db	94
  2013  00FB80  5E                 	db	94
  2014  00FB81  3E                 	db	62
  2015  00FB82  3E                 	db	62
  2016  00FB83  00                 	db	0
  2017  00FB84  00                 	db	0
  2018  00FB85  00                 	db	0
  2019  00FB86  00                 	db	0
  2020  00FB87  00                 	db	0
  2021  00FB88  00                 	db	0
  2022  00FB89  00                 	db	0
  2023  00FB8A  00                 	db	0
  2024  00FB8B  00                 	db	0
  2025  00FB8C  00                 	db	0
  2026  00FB8D  00                 	db	0
  2027  00FB8E  00                 	db	0
  2028  00FB8F  2E                 	db	46
  2029  00FB90  2E                 	db	46
  2030  00FB91  2A                 	db	42
  2031  00FB92  2A                 	db	42
  2032  00FB93  78                 	db	120
  2033  00FB94  23                 	db	35
  2034  00FB95  78                 	db	120
  2035  00FB96  23                 	db	35
  2036  00FB97  58                 	db	88
  2037  00FB98  58                 	db	88
  2038  00FB99  7C                 	db	124
  2039  00FB9A  7C                 	db	124
  2040  00FB9B  2D                 	db	45
  2041  00FB9C  2D                 	db	45
  2042  00FB9D  00                 	db	0
  2043  00FB9E  00                 	db	0
  2044  00FB9F  00                 	db	0
  2045  00FBA0  00                 	db	0
  2046  00FBA1  00                 	db	0
  2047  00FBA2  00                 	db	0
  2048  00FBA3  2E                 	db	46
  2049  00FBA4  2E                 	db	46
  2050  00FBA5  6F                 	db	111
  2051  00FBA6  6F                 	db	111
  2052  00FBA7  4F                 	db	79
  2053  00FBA8  4F                 	db	79
  2054  00FBA9  6F                 	db	111
  2055  00FBAA  6F                 	db	111
  2056  00FBAB  00                 	db	0
  2057  00FBAC  00                 	db	0
  2058  00FBAD  00                 	db	0
  2059  00FBAE  00                 	db	0
  2060  00FBAF  00                 	db	0
  2061  00FBB0  00                 	db	0
  2062  00FBB1  00                 	db	0
  2063  00FBB2  00                 	db	0
  2064  00FBB3  00                 	db	0
  2065  00FBB4  00                 	db	0
  2066  00FBB5  00                 	db	0
  2067  00FBB6  00                 	db	0
  2068  00FBB7                     __end_of_spin:
  2069                           	opt callstack 0
  2070  00FBB7  0000               	dw	0
  2071  00FBB9  3F80               	dw	16256
  2072  00FBBB  0000               	dw	0
  2073  00FBBD  3FC0               	dw	16320
  2074  00FBBF                     __end_of_bp:
  2075                           	opt callstack 0
  2076  00FBBF  AA00               	dw	43520
  2077  00FBC1  3FB8               	dw	16312
  2078  00FBC3                     __end_of_ivln2_h:
  2079                           	opt callstack 0
  2080  00FBC3  23C6               	dw	9158
  2081  00FBC5  B8F6               	dw	47350
  2082  00FBC7                     __end_of_cp_l:
  2083                           	opt callstack 0
  2084  00FBC7  4000               	dw	16384
  2085  00FBC9  3F76               	dw	16246
  2086  00FBCB                     __end_of_cp_h:
  2087                           	opt callstack 0
  2088  0000                     _IVTADL	set	14493
  2089  0000                     _IVTADH	set	14494
  2090  0000                     _IVTADU	set	14495
  2091  0000                     _PIR6bits	set	14758
  2092  0000                     _PIR4bits	set	14756
  2093  0000                     _PIE8bits	set	14744
  2094  0000                     _PIR8bits	set	14760
  2095  0000                     _SCANPR	set	14839
  2096  0000                     _DMA2PR	set	14836
  2097  0000                     _DMA1PR	set	14835
  2098  0000                     _MAINPR	set	14834
  2099  0000                     _ISRPR	set	14833
  2100  0000                     _PIE2bits	set	14738
  2101  0000                     _PIR2bits	set	14754
  2102  0000                     _PIE9bits	set	14745
  2103  0000                     _PIR9bits	set	14761
  2104  0000                     _PIE6bits	set	14742
  2105  0000                     _PIE3bits	set	14739
  2106  0000                     _PMD7	set	14791
  2107  0000                     _PMD6	set	14790
  2108  0000                     _PMD5	set	14789
  2109  0000                     _PMD4	set	14788
  2110  0000                     _PMD3	set	14787
  2111  0000                     _PMD2	set	14786
  2112  0000                     _PMD1	set	14785
  2113  0000                     _PMD0	set	14784
  2114  0000                     _OSCTUNE	set	14814
  2115  0000                     _OSCFRQ	set	14815
  2116  0000                     _OSCEN	set	14813
  2117  0000                     _OSCCON3	set	14811
  2118  0000                     _OSCCON1	set	14809
  2119  0000                     _IPR8bits	set	14728
  2120  0000                     _IPR9bits	set	14729
  2121  0000                     _IPR5bits	set	14725
  2122  0000                     _IPR1bits	set	14721
  2123  0000                     _IPR3bits	set	14723
  2124  0000                     _IPR6bits	set	14726
  2125  0000                     _IPR2bits	set	14722
  2126  0000                     _PIE5bits	set	14741
  2127  0000                     _PIE1bits	set	14737
  2128  0000                     _PIR5bits	set	14757
  2129  0000                     _PIR1bits	set	14753
  2130  0000                     _PLLR	set	118496
  2131  0000                     _SPI1SDIPPS	set	15071
  2132  0000                     _U1RXPPS	set	15077
  2133  0000                     _RC6PPS	set	14870
  2134  0000                     _RC5PPS	set	14869
  2135  0000                     _INT1PPS	set	15041
  2136  0000                     _RD1PPS	set	14873
  2137  0000                     _INT0PPS	set	15040
  2138  0000                     _RC3PPS	set	14867
  2139  0000                     _RB6PPS	set	14862
  2140  0000                     _SPI1SCKPPS	set	15070
  2141  0000                     _U2RXPPS	set	15080
  2142  0000                     _SLRCONF	set	14995
  2143  0000                     _SLRCONE	set	14979
  2144  0000                     _SLRCOND	set	14963
  2145  0000                     _SLRCONC	set	14947
  2146  0000                     _SLRCONB	set	14931
  2147  0000                     _SLRCONA	set	14915
  2148  0000                     _ODCOND	set	14962
  2149  0000                     _ODCONC	set	14946
  2150  0000                     _ODCONB	set	14930
  2151  0000                     _ODCONA	set	14914
  2152  0000                     _ODCONF	set	14994
  2153  0000                     _ODCONE	set	14978
  2154  0000                     _WPUC	set	14945
  2155  0000                     _WPUA	set	14913
  2156  0000                     _WPUB	set	14929
  2157  0000                     _WPUE	set	14977
  2158  0000                     _WPUF	set	14993
  2159  0000                     _WPUD	set	14961
  2160  0000                     _ANSELA	set	14912
  2161  0000                     _ANSELF	set	14992
  2162  0000                     _ANSELE	set	14976
  2163  0000                     _ANSELB	set	14928
  2164  0000                     _ANSELC	set	14944
  2165  0000                     _ANSELD	set	14960
  2166  0000                     _DMA2SSA	set	15321
  2167  0000                     _DMA1SSA	set	15353
  2168  0000                     _DMA2DSZ	set	15310
  2169  0000                     _DMA2SSZ	set	15319
  2170  0000                     _DMA2DSA	set	15312
  2171  0000                     _DMA1DSZ	set	15342
  2172  0000                     _DMA1SSZ	set	15351
  2173  0000                     _DMA1DSA	set	15344
  2174  0000                     _DMA2CON0bits	set	15324
  2175  0000                     _DMA2CON1bits	set	15325
  2176  0000                     _DMA1CON0bits	set	15356
  2177  0000                     _DMA1CON1bits	set	15357
  2178  0000                     _DMA2CON0	set	15324
  2179  0000                     _DMA2AIRQ	set	15326
  2180  0000                     _DMA2SIRQ	set	15327
  2181  0000                     _DMA2CON1	set	15325
  2182  0000                     _DMA1CON0	set	15356
  2183  0000                     _DMA1AIRQ	set	15358
  2184  0000                     _DMA1SIRQ	set	15359
  2185  0000                     _DMA1CON1	set	15357
  2186  0000                     _CLKRCON	set	15589
  2187  0000                     _CLKRCLK	set	15590
  2188  0000                     _SPI1CON1bits	set	15637
  2189  0000                     _SPI1STATUSbits	set	15639
  2190  0000                     _SPI1INTFbits	set	15642
  2191  0000                     _SPI1CON0bits	set	15636
  2192  0000                     _SPI1RXB	set	15632
  2193  0000                     _SPI1TXB	set	15633
  2194  0000                     _SPI1TCNTL	set	15634
  2195  0000                     _SPI1CON0	set	15636
  2196  0000                     _SPI1CLK	set	15644
  2197  0000                     _SPI1BAUD	set	15641
  2198  0000                     _SPI1CON2	set	15638
  2199  0000                     _SPI1CON1	set	15637
  2200  0000                     _U2RXB	set	15824
  2201  0000                     _U2TXB	set	15826
  2202  0000                     _U2ERRIE	set	15842
  2203  0000                     _U2ERRIR	set	15841
  2204  0000                     _U2UIR	set	15840
  2205  0000                     _U2FIFO	set	15839
  2206  0000                     _U2BRGH	set	15838
  2207  0000                     _U2BRGL	set	15837
  2208  0000                     _U2CON2	set	15836
  2209  0000                     _U2CON1	set	15835
  2210  0000                     _U2CON0	set	15834
  2211  0000                     _U2P3L	set	15832
  2212  0000                     _U2P2L	set	15830
  2213  0000                     _U2P1L	set	15828
  2214  0000                     _U1RXB	set	15848
  2215  0000                     _U1ERRIE	set	15866
  2216  0000                     _U1ERRIR	set	15865
  2217  0000                     _U1UIR	set	15864
  2218  0000                     _U1FIFO	set	15863
  2219  0000                     _U1BRGH	set	15862
  2220  0000                     _U1BRGL	set	15861
  2221  0000                     _U1CON2	set	15860
  2222  0000                     _U1CON1	set	15859
  2223  0000                     _U1CON0	set	15858
  2224  0000                     _U1P3H	set	15857
  2225  0000                     _U1P3L	set	15856
  2226  0000                     _U1P2H	set	15855
  2227  0000                     _U1P2L	set	15854
  2228  0000                     _U1P1H	set	15853
  2229  0000                     _U1P1L	set	15852
  2230  0000                     _FVRCON	set	16065
  2231  0000                     _ADFLTRL	set	16102
  2232  0000                     _ADFLTRH	set	16103
  2233  0000                     _ADCON0bits	set	16120
  2234  0000                     _ADCON0	set	16120
  2235  0000                     _ADCLK	set	16127
  2236  0000                     _ADACT	set	16126
  2237  0000                     _ADREF	set	16125
  2238  0000                     _ADSTAT	set	16124
  2239  0000                     _ADCON3	set	16123
  2240  0000                     _ADCON2	set	16122
  2241  0000                     _ADCON1	set	16121
  2242  0000                     _ADPREH	set	16119
  2243  0000                     _ADPREL	set	16118
  2244  0000                     _ADCAP	set	16117
  2245  0000                     _ADACQH	set	16116
  2246  0000                     _ADACQL	set	16115
  2247  0000                     _ADPCH	set	16113
  2248  0000                     _ADRPT	set	16108
  2249  0000                     _ADACCU	set	16106
  2250  0000                     _ADSTPTH	set	16101
  2251  0000                     _ADSTPTL	set	16100
  2252  0000                     _ADUTHH	set	16097
  2253  0000                     _ADUTHL	set	16096
  2254  0000                     _ADLTHH	set	16095
  2255  0000                     _ADLTHL	set	16094
  2256  0000                     _CCPTMRS1bits	set	16223
  2257  0000                     _PORTFbits	set	16335
  2258  0000                     _LATFbits	set	16319
  2259  0000                     _LATCbits	set	16316
  2260  0000                     _LATDbits	set	16317
  2261  0000                     _PORTBbits	set	16331
  2262  0000                     _T3CONbits	set	16294
  2263  0000                     _T3CON	set	16294
  2264  0000                     _TMR3L	set	16292
  2265  0000                     _TMR3H	set	16293
  2266  0000                     _T3CLK	set	16297
  2267  0000                     _T3GATE	set	16296
  2268  0000                     _T3GCON	set	16295
  2269  0000                     _T2CON	set	16300
  2270  0000                     _T2TMR	set	16298
  2271  0000                     _T2PR	set	16299
  2272  0000                     _T2RST	set	16303
  2273  0000                     _T2HLT	set	16301
  2274  0000                     _T2CLKCON	set	16302
  2275  0000                     _PWM8DCL	set	16224
  2276  0000                     _PWM8DCH	set	16225
  2277  0000                     _PWM8CON	set	16226
  2278  0000                     _LATEbits	set	16318
  2279  0000                     _T5CONbits	set	16282
  2280  0000                     _T5CON	set	16282
  2281  0000                     _TMR5L	set	16280
  2282  0000                     _TMR5H	set	16281
  2283  0000                     _T5CLK	set	16285
  2284  0000                     _T5GATE	set	16284
  2285  0000                     _T5GCON	set	16283
  2286  0000                     _T6CON	set	16276
  2287  0000                     _T6TMR	set	16274
  2288  0000                     _T6PR	set	16275
  2289  0000                     _T6RST	set	16279
  2290  0000                     _T6HLT	set	16277
  2291  0000                     _T6CLKCON	set	16278
  2292  0000                     _TRISD	set	16325
  2293  0000                     _TRISC	set	16324
  2294  0000                     _TRISB	set	16323
  2295  0000                     _TRISA	set	16322
  2296  0000                     _TRISF	set	16327
  2297  0000                     _TRISE	set	16326
  2298  0000                     _LATC	set	16316
  2299  0000                     _LATB	set	16315
  2300  0000                     _LATF	set	16319
  2301  0000                     _LATA	set	16314
  2302  0000                     _LATD	set	16317
  2303  0000                     _LATE	set	16318
  2304  0000                     _IVTLOCKbits	set	16340
  2305  0000                     _IVTLOCK	set	16340
  2306  0000                     _INTCON0bits	set	16338
  2307  0000                     _GIE	set	130711
  2308  00FBCB                     STR_64:
  2309                           
  2310                           ; BSR set to: 57
  2311  00FBCB  20                 	db	32
  2312  00FBCC  25                 	db	37
  2313  00FBCD  63                 	db	99	;'c'
  2314  00FBCE  20                 	db	32
  2315  00FBCF  2C                 	db	44
  2316  00FBD0  25                 	db	37
  2317  00FBD1  6C                 	db	108	;'l'
  2318  00FBD2  75                 	db	117	;'u'
  2319  00FBD3  2C                 	db	44
  2320  00FBD4  25                 	db	37
  2321  00FBD5  34                 	db	52	;'4'
  2322  00FBD6  2E                 	db	46
  2323  00FBD7  34                 	db	52	;'4'
  2324  00FBD8  66                 	db	102	;'f'
  2325  00FBD9  2C                 	db	44
  2326  00FBDA  25                 	db	37
  2327  00FBDB  34                 	db	52	;'4'
  2328  00FBDC  2E                 	db	46
  2329  00FBDD  34                 	db	52	;'4'
  2330  00FBDE  66                 	db	102	;'f'
  2331  00FBDF  2C                 	db	44
  2332  00FBE0  25                 	db	37
  2333  00FBE1  34                 	db	52	;'4'
  2334  00FBE2  2E                 	db	46
  2335  00FBE3  34                 	db	52	;'4'
  2336  00FBE4  66                 	db	102	;'f'
  2337  00FBE5  2C                 	db	44
  2338  00FBE6  25                 	db	37
  2339  00FBE7  34                 	db	52	;'4'
  2340  00FBE8  2E                 	db	46
  2341  00FBE9  34                 	db	52	;'4'
  2342  00FBEA  66                 	db	102	;'f'
  2343  00FBEB  2C                 	db	44
  2344  00FBEC  25                 	db	37
  2345  00FBED  34                 	db	52	;'4'
  2346  00FBEE  2E                 	db	46
  2347  00FBEF  34                 	db	52	;'4'
  2348  00FBF0  66                 	db	102	;'f'
  2349  00FBF1  2C                 	db	44
  2350  00FBF2  25                 	db	37
  2351  00FBF3  34                 	db	52	;'4'
  2352  00FBF4  2E                 	db	46
  2353  00FBF5  33                 	db	51	;'3'
  2354  00FBF6  66                 	db	102	;'f'
  2355  00FBF7  2C                 	db	44
  2356  00FBF8  25                 	db	37
  2357  00FBF9  34                 	db	52	;'4'
  2358  00FBFA  2E                 	db	46
  2359  00FBFB  33                 	db	51	;'3'
  2360  00FBFC  66                 	db	102	;'f'
  2361  00FBFD  2C                 	db	44
  2362  00FBFE  25                 	db	37
  2363  00FBFF  34                 	db	52	;'4'
  2364  00FC00  2E                 	db	46
  2365  00FC01  33                 	db	51	;'3'
  2366  00FC02  66                 	db	102	;'f'
  2367  00FC03  2C                 	db	44
  2368  00FC04  25                 	db	37
  2369  00FC05  34                 	db	52	;'4'
  2370  00FC06  2E                 	db	46
  2371  00FC07  33                 	db	51	;'3'
  2372  00FC08  66                 	db	102	;'f'
  2373  00FC09  2C                 	db	44
  2374  00FC0A  25                 	db	37
  2375  00FC0B  34                 	db	52	;'4'
  2376  00FC0C  2E                 	db	46
  2377  00FC0D  33                 	db	51	;'3'
  2378  00FC0E  66                 	db	102	;'f'
  2379  00FC0F  2C                 	db	44
  2380  00FC10  25                 	db	37
  2381  00FC11  34                 	db	52	;'4'
  2382  00FC12  2E                 	db	46
  2383  00FC13  33                 	db	51	;'3'
  2384  00FC14  66                 	db	102	;'f'
  2385  00FC15  2C                 	db	44
  2386  00FC16  25                 	db	37
  2387  00FC17  64                 	db	100	;'d'
  2388  00FC18  2C                 	db	44
  2389  00FC19  25                 	db	37
  2390  00FC1A  64                 	db	100	;'d'
  2391  00FC1B  2C                 	db	44
  2392  00FC1C  25                 	db	37
  2393  00FC1D  32                 	db	50	;'2'
  2394  00FC1E  2E                 	db	46
  2395  00FC1F  36                 	db	54	;'6'
  2396  00FC20  66                 	db	102	;'f'
  2397  00FC21  2C                 	db	44
  2398  00FC22  25                 	db	37
  2399  00FC23  34                 	db	52	;'4'
  2400  00FC24  2E                 	db	46
  2401  00FC25  33                 	db	51	;'3'
  2402  00FC26  66                 	db	102	;'f'
  2403  00FC27  2C                 	db	44
  2404  00FC28  25                 	db	37
  2405  00FC29  64                 	db	100	;'d'
  2406  00FC2A  2C                 	db	44
  2407  00FC2B  25                 	db	37
  2408  00FC2C  64                 	db	100	;'d'
  2409  00FC2D  2C                 	db	44
  2410  00FC2E  25                 	db	37
  2411  00FC2F  6C                 	db	108	;'l'
  2412  00FC30  75                 	db	117	;'u'
  2413  00FC31  2C                 	db	44
  2414  00FC32  25                 	db	37
  2415  00FC33  6C                 	db	108	;'l'
  2416  00FC34  75                 	db	117	;'u'
  2417  00FC35  2C                 	db	44
  2418  00FC36  25                 	db	37
  2419  00FC37  34                 	db	52	;'4'
  2420  00FC38  2E                 	db	46
  2421  00FC39  33                 	db	51	;'3'
  2422  00FC3A  66                 	db	102	;'f'
  2423  00FC3B  2C                 	db	44
  2424  00FC3C  25                 	db	37
  2425  00FC3D  34                 	db	52	;'4'
  2426  00FC3E  2E                 	db	46
  2427  00FC3F  33                 	db	51	;'3'
  2428  00FC40  66                 	db	102	;'f'
  2429  00FC41  2C                 	db	44
  2430  00FC42  25                 	db	37
  2431  00FC43  34                 	db	52	;'4'
  2432  00FC44  2E                 	db	46
  2433  00FC45  33                 	db	51	;'3'
  2434  00FC46  66                 	db	102	;'f'
  2435  00FC47  0D                 	db	13
  2436  00FC48  0A                 	db	10
  2437  00FC49  00                 	db	0
  2438  00FC4A                     STR_36:
  2439                           
  2440                           ; BSR set to: 57
  2441  00FC4A  53                 	db	83	;'S'
  2442  00FC4B  25                 	db	37
  2443  00FC4C  63                 	db	99	;'c'
  2444  00FC4D  43                 	db	67	;'C'
  2445  00FC4E  20                 	db	32
  2446  00FC4F  25                 	db	37
  2447  00FC50  64                 	db	100	;'d'
  2448  00FC51  20                 	db	32
  2449  00FC52  52                 	db	82	;'R'
  2450  00FC53  55                 	db	85	;'U'
  2451  00FC54  4E                 	db	78	;'N'
  2452  00FC55  20                 	db	32
  2453  00FC56  25                 	db	37
  2454  00FC57  64                 	db	100	;'d'
  2455  00FC58  20                 	db	32
  2456  00FC59  56                 	db	86	;'V'
  2457  00FC5A  25                 	db	37
  2458  00FC5B  32                 	db	50	;'2'
  2459  00FC5C  2E                 	db	46
  2460  00FC5D  32                 	db	50	;'2'
  2461  00FC5E  66                 	db	102	;'f'
  2462  00FC5F  20                 	db	32
  2463  00FC60  20                 	db	32
  2464  00FC61  20                 	db	32
  2465  00FC62  20                 	db	32
  2466  00FC63  20                 	db	32
  2467  00FC64  20                 	db	32
  2468  00FC65  20                 	db	32
  2469  00FC66  00                 	db	0
  2470  00FC67                     STR_17:
  2471                           
  2472                           ; BSR set to: 57
  2473  00FC67  52                 	db	82	;'R'
  2474  00FC68  31                 	db	49	;'1'
  2475  00FC69  20                 	db	32
  2476  00FC6A  25                 	db	37
  2477  00FC6B  32                 	db	50	;'2'
  2478  00FC6C  2E                 	db	46
  2479  00FC6D  33                 	db	51	;'3'
  2480  00FC6E  66                 	db	102	;'f'
  2481  00FC6F  20                 	db	32
  2482  00FC70  25                 	db	37
  2483  00FC71  33                 	db	51	;'3'
  2484  00FC72  2E                 	db	46
  2485  00FC73  34                 	db	52	;'4'
  2486  00FC74  66                 	db	102	;'f'
  2487  00FC75  20                 	db	32
  2488  00FC76  20                 	db	32
  2489  00FC77  20                 	db	32
  2490  00FC78  20                 	db	32
  2491  00FC79  20                 	db	32
  2492  00FC7A  20                 	db	32
  2493  00FC7B  20                 	db	32
  2494  00FC7C  20                 	db	32
  2495  00FC7D  20                 	db	32
  2496  00FC7E  20                 	db	32
  2497  00FC7F  20                 	db	32
  2498  00FC80  00                 	db	0
  2499  00FC81                     STR_18:
  2500                           
  2501                           ; BSR set to: 57
  2502  00FC81  52                 	db	82	;'R'
  2503  00FC82  32                 	db	50	;'2'
  2504  00FC83  20                 	db	32
  2505  00FC84  25                 	db	37
  2506  00FC85  32                 	db	50	;'2'
  2507  00FC86  2E                 	db	46
  2508  00FC87  33                 	db	51	;'3'
  2509  00FC88  66                 	db	102	;'f'
  2510  00FC89  20                 	db	32
  2511  00FC8A  25                 	db	37
  2512  00FC8B  33                 	db	51	;'3'
  2513  00FC8C  2E                 	db	46
  2514  00FC8D  34                 	db	52	;'4'
  2515  00FC8E  66                 	db	102	;'f'
  2516  00FC8F  20                 	db	32
  2517  00FC90  20                 	db	32
  2518  00FC91  20                 	db	32
  2519  00FC92  20                 	db	32
  2520  00FC93  20                 	db	32
  2521  00FC94  20                 	db	32
  2522  00FC95  20                 	db	32
  2523  00FC96  20                 	db	32
  2524  00FC97  20                 	db	32
  2525  00FC98  20                 	db	32
  2526  00FC99  20                 	db	32
  2527  00FC9A  00                 	db	0
  2528  00FC9B                     STR_9:
  2529                           
  2530                           ; BSR set to: 57
  2531  00FC9B  53                 	db	83	;'S'
  2532  00FC9C  20                 	db	32
  2533  00FC9D  53                 	db	83	;'S'
  2534  00FC9E  25                 	db	37
  2535  00FC9F  63                 	db	99	;'c'
  2536  00FCA0  43                 	db	67	;'C'
  2537  00FCA1  20                 	db	32
  2538  00FCA2  25                 	db	37
  2539  00FCA3  64                 	db	100	;'d'
  2540  00FCA4  20                 	db	32
  2541  00FCA5  25                 	db	37
  2542  00FCA6  32                 	db	50	;'2'
  2543  00FCA7  2E                 	db	46
  2544  00FCA8  34                 	db	52	;'4'
  2545  00FCA9  66                 	db	102	;'f'
  2546  00FCAA  20                 	db	32
  2547  00FCAB  20                 	db	32
  2548  00FCAC  20                 	db	32
  2549  00FCAD  20                 	db	32
  2550  00FCAE  20                 	db	32
  2551  00FCAF  20                 	db	32
  2552  00FCB0  20                 	db	32
  2553  00FCB1  20                 	db	32
  2554  00FCB2  20                 	db	32
  2555  00FCB3  20                 	db	32
  2556  00FCB4  00                 	db	0
  2557  00FCB5                     
  2558                           ; BSR set to: 57
  2559  00FCB5  20                 	db	32
  2560  00FCB6  4D                 	db	77	;'M'
  2561  00FCB7  65                 	db	101	;'e'
  2562  00FCB8  73                 	db	115	;'s'
  2563  00FCB9  67                 	db	103	;'g'
  2564  00FCBA  20                 	db	32
  2565  00FCBB  25                 	db	37
  2566  00FCBC  64                 	db	100	;'d'
  2567  00FCBD  20                 	db	32
  2568  00FCBE  53                 	db	83	;'S'
  2569  00FCBF  74                 	db	116	;'t'
  2570  00FCC0  61                 	db	97	;'a'
  2571  00FCC1  63                 	db	99	;'c'
  2572  00FCC2  6B                 	db	107	;'k'
  2573  00FCC3  20                 	db	32
  2574  00FCC4  25                 	db	37
  2575  00FCC5  64                 	db	100	;'d'
  2576  00FCC6  20                 	db	32
  2577  00FCC7  20                 	db	32
  2578  00FCC8  20                 	db	32
  2579  00FCC9  20                 	db	32
  2580  00FCCA  20                 	db	32
  2581  00FCCB  20                 	db	32
  2582  00FCCC  00                 	db	0
  2583  00FCCD                     STR_37:
  2584                           
  2585                           ; BSR set to: 57
  2586  00FCCD  45                 	db	69	;'E'
  2587  00FCCE  53                 	db	83	;'S'
  2588  00FCCF  52                 	db	82	;'R'
  2589  00FCD0  20                 	db	32
  2590  00FCD1  20                 	db	32
  2591  00FCD2  25                 	db	37
  2592  00FCD3  32                 	db	50	;'2'
  2593  00FCD4  2E                 	db	46
  2594  00FCD5  36                 	db	54	;'6'
  2595  00FCD6  66                 	db	102	;'f'
  2596  00FCD7  20                 	db	32
  2597  00FCD8  20                 	db	32
  2598  00FCD9  20                 	db	32
  2599  00FCDA  20                 	db	32
  2600  00FCDB  20                 	db	32
  2601  00FCDC  20                 	db	32
  2602  00FCDD  20                 	db	32
  2603  00FCDE  20                 	db	32
  2604  00FCDF  20                 	db	32
  2605  00FCE0  20                 	db	32
  2606  00FCE1  20                 	db	32
  2607  00FCE2  20                 	db	32
  2608  00FCE3  00                 	db	0
  2609  00FCE4                     STR_34:
  2610                           
  2611                           ; BSR set to: 57
  2612  00FCE4  42                 	db	66	;'B'
  2613  00FCE5  41                 	db	65	;'A'
  2614  00FCE6  54                 	db	84	;'T'
  2615  00FCE7  54                 	db	84	;'T'
  2616  00FCE8  20                 	db	32
  2617  00FCE9  50                 	db	80	;'P'
  2618  00FCEA  57                 	db	87	;'W'
  2619  00FCEB  52                 	db	82	;'R'
  2620  00FCEC  20                 	db	32
  2621  00FCED  25                 	db	37
  2622  00FCEE  33                 	db	51	;'3'
  2623  00FCEF  2E                 	db	46
  2624  00FCF0  32                 	db	50	;'2'
  2625  00FCF1  66                 	db	102	;'f'
  2626  00FCF2  20                 	db	32
  2627  00FCF3  20                 	db	32
  2628  00FCF4  20                 	db	32
  2629  00FCF5  20                 	db	32
  2630  00FCF6  20                 	db	32
  2631  00FCF7  20                 	db	32
  2632  00FCF8  20                 	db	32
  2633  00FCF9  20                 	db	32
  2634  00FCFA  00                 	db	0
  2635  00FCFB                     STR_38:
  2636                           
  2637                           ; BSR set to: 57
  2638  00FCFB  52                 	db	82	;'R'
  2639  00FCFC  31                 	db	49	;'1'
  2640  00FCFD  20                 	db	32
  2641  00FCFE  25                 	db	37
  2642  00FCFF  32                 	db	50	;'2'
  2643  00FD00  2E                 	db	46
  2644  00FD01  33                 	db	51	;'3'
  2645  00FD02  66                 	db	102	;'f'
  2646  00FD03  20                 	db	32
  2647  00FD04  25                 	db	37
  2648  00FD05  33                 	db	51	;'3'
  2649  00FD06  2E                 	db	46
  2650  00FD07  34                 	db	52	;'4'
  2651  00FD08  66                 	db	102	;'f'
  2652  00FD09  20                 	db	32
  2653  00FD0A  20                 	db	32
  2654  00FD0B  20                 	db	32
  2655  00FD0C  20                 	db	32
  2656  00FD0D  20                 	db	32
  2657  00FD0E  20                 	db	32
  2658  00FD0F  20                 	db	32
  2659  00FD10  20                 	db	32
  2660  00FD11  00                 	db	0
  2661  00FD12                     STR_39:
  2662                           
  2663                           ; BSR set to: 57
  2664  00FD12  52                 	db	82	;'R'
  2665  00FD13  32                 	db	50	;'2'
  2666  00FD14  20                 	db	32
  2667  00FD15  25                 	db	37
  2668  00FD16  32                 	db	50	;'2'
  2669  00FD17  2E                 	db	46
  2670  00FD18  33                 	db	51	;'3'
  2671  00FD19  66                 	db	102	;'f'
  2672  00FD1A  20                 	db	32
  2673  00FD1B  25                 	db	37
  2674  00FD1C  33                 	db	51	;'3'
  2675  00FD1D  2E                 	db	46
  2676  00FD1E  34                 	db	52	;'4'
  2677  00FD1F  66                 	db	102	;'f'
  2678  00FD20  20                 	db	32
  2679  00FD21  20                 	db	32
  2680  00FD22  20                 	db	32
  2681  00FD23  20                 	db	32
  2682  00FD24  20                 	db	32
  2683  00FD25  20                 	db	32
  2684  00FD26  20                 	db	32
  2685  00FD27  20                 	db	32
  2686  00FD28  00                 	db	0
  2687  00FD29                     STR_35:
  2688                           
  2689                           ; BSR set to: 57
  2690  00FD29  42                 	db	66	;'B'
  2691  00FD2A  41                 	db	65	;'A'
  2692  00FD2B  48                 	db	72	;'H'
  2693  00FD2C  20                 	db	32
  2694  00FD2D  25                 	db	37
  2695  00FD2E  33                 	db	51	;'3'
  2696  00FD2F  2E                 	db	46
  2697  00FD30  32                 	db	50	;'2'
  2698  00FD31  66                 	db	102	;'f'
  2699  00FD32  20                 	db	32
  2700  00FD33  50                 	db	80	;'P'
  2701  00FD34  25                 	db	37
  2702  00FD35  33                 	db	51	;'3'
  2703  00FD36  2E                 	db	46
  2704  00FD37  32                 	db	50	;'2'
  2705  00FD38  66                 	db	102	;'f'
  2706  00FD39  20                 	db	32
  2707  00FD3A  20                 	db	32
  2708  00FD3B  20                 	db	32
  2709  00FD3C  20                 	db	32
  2710  00FD3D  20                 	db	32
  2711  00FD3E  20                 	db	32
  2712  00FD3F  00                 	db	0
  2713  00FD40                     STR_16:
  2714                           
  2715                           ; BSR set to: 57
  2716  00FD40  45                 	db	69	;'E'
  2717  00FD41  53                 	db	83	;'S'
  2718  00FD42  52                 	db	82	;'R'
  2719  00FD43  20                 	db	32
  2720  00FD44  20                 	db	32
  2721  00FD45  25                 	db	37
  2722  00FD46  32                 	db	50	;'2'
  2723  00FD47  2E                 	db	46
  2724  00FD48  36                 	db	54	;'6'
  2725  00FD49  66                 	db	102	;'f'
  2726  00FD4A  20                 	db	32
  2727  00FD4B  20                 	db	32
  2728  00FD4C  20                 	db	32
  2729  00FD4D  20                 	db	32
  2730  00FD4E  20                 	db	32
  2731  00FD4F  20                 	db	32
  2732  00FD50  20                 	db	32
  2733  00FD51  20                 	db	32
  2734  00FD52  20                 	db	32
  2735  00FD53  20                 	db	32
  2736  00FD54  20                 	db	32
  2737  00FD55  00                 	db	0
  2738  00FD56                     STR_10:
  2739                           
  2740                           ; BSR set to: 57
  2741  00FD56  53                 	db	83	;'S'
  2742  00FD57  74                 	db	116	;'t'
  2743  00FD58  61                 	db	97	;'a'
  2744  00FD59  74                 	db	116	;'t'
  2745  00FD5A  69                 	db	105	;'i'
  2746  00FD5B  63                 	db	99	;'c'
  2747  00FD5C  20                 	db	32
  2748  00FD5D  53                 	db	83	;'S'
  2749  00FD5E  4F                 	db	79	;'O'
  2750  00FD5F  43                 	db	67	;'C'
  2751  00FD60  20                 	db	32
  2752  00FD61  25                 	db	37
  2753  00FD62  64                 	db	100	;'d'
  2754  00FD63  20                 	db	32
  2755  00FD64  20                 	db	32
  2756  00FD65  20                 	db	32
  2757  00FD66  20                 	db	32
  2758  00FD67  20                 	db	32
  2759  00FD68  20                 	db	32
  2760  00FD69  20                 	db	32
  2761  00FD6A  20                 	db	32
  2762  00FD6B  00                 	db	0
  2763  00FD6C                     STR_31:
  2764                           
  2765                           ; BSR set to: 57
  2766  00FD6C  42                 	db	66	;'B'
  2767  00FD6D  41                 	db	65	;'A'
  2768  00FD6E  54                 	db	84	;'T'
  2769  00FD6F  20                 	db	32
  2770  00FD70  49                 	db	73	;'I'
  2771  00FD71  57                 	db	87	;'W'
  2772  00FD72  48                 	db	72	;'H'
  2773  00FD73  20                 	db	32
  2774  00FD74  25                 	db	37
  2775  00FD75  34                 	db	52	;'4'
  2776  00FD76  2E                 	db	46
  2777  00FD77  31                 	db	49	;'1'
  2778  00FD78  66                 	db	102	;'f'
  2779  00FD79  20                 	db	32
  2780  00FD7A  20                 	db	32
  2781  00FD7B  20                 	db	32
  2782  00FD7C  20                 	db	32
  2783  00FD7D  20                 	db	32
  2784  00FD7E  20                 	db	32
  2785  00FD7F  20                 	db	32
  2786  00FD80  20                 	db	32
  2787  00FD81  00                 	db	0
  2788  00FD82                     STR_32:
  2789                           
  2790                           ; BSR set to: 57
  2791  00FD82  42                 	db	66	;'B'
  2792  00FD83  41                 	db	65	;'A'
  2793  00FD84  54                 	db	84	;'T'
  2794  00FD85  20                 	db	32
  2795  00FD86  4F                 	db	79	;'O'
  2796  00FD87  57                 	db	87	;'W'
  2797  00FD88  48                 	db	72	;'H'
  2798  00FD89  20                 	db	32
  2799  00FD8A  25                 	db	37
  2800  00FD8B  34                 	db	52	;'4'
  2801  00FD8C  2E                 	db	46
  2802  00FD8D  31                 	db	49	;'1'
  2803  00FD8E  66                 	db	102	;'f'
  2804  00FD8F  20                 	db	32
  2805  00FD90  20                 	db	32
  2806  00FD91  20                 	db	32
  2807  00FD92  20                 	db	32
  2808  00FD93  20                 	db	32
  2809  00FD94  20                 	db	32
  2810  00FD95  20                 	db	32
  2811  00FD96  20                 	db	32
  2812  00FD97  00                 	db	0
  2813  00FD98                     STR_33:
  2814                           
  2815                           ; BSR set to: 57
  2816  00FD98  42                 	db	66	;'B'
  2817  00FD99  41                 	db	65	;'A'
  2818  00FD9A  54                 	db	84	;'T'
  2819  00FD9B  20                 	db	32
  2820  00FD9C  54                 	db	84	;'T'
  2821  00FD9D  57                 	db	87	;'W'
  2822  00FD9E  48                 	db	72	;'H'
  2823  00FD9F  20                 	db	32
  2824  00FDA0  25                 	db	37
  2825  00FDA1  34                 	db	52	;'4'
  2826  00FDA2  2E                 	db	46
  2827  00FDA3  31                 	db	49	;'1'
  2828  00FDA4  66                 	db	102	;'f'
  2829  00FDA5  20                 	db	32
  2830  00FDA6  20                 	db	32
  2831  00FDA7  20                 	db	32
  2832  00FDA8  20                 	db	32
  2833  00FDA9  20                 	db	32
  2834  00FDAA  20                 	db	32
  2835  00FDAB  20                 	db	32
  2836  00FDAC  20                 	db	32
  2837  00FDAD  00                 	db	0
  2838  00FDAE                     STR_27:
  2839                           
  2840                           ; BSR set to: 57
  2841  00FDAE  49                 	db	73	;'I'
  2842  00FDAF  4E                 	db	78	;'N'
  2843  00FDB0  56                 	db	86	;'V'
  2844  00FDB1  20                 	db	32
  2845  00FDB2  20                 	db	32
  2846  00FDB3  57                 	db	87	;'W'
  2847  00FDB4  48                 	db	72	;'H'
  2848  00FDB5  20                 	db	32
  2849  00FDB6  25                 	db	37
  2850  00FDB7  33                 	db	51	;'3'
  2851  00FDB8  2E                 	db	46
  2852  00FDB9  32                 	db	50	;'2'
  2853  00FDBA  66                 	db	102	;'f'
  2854  00FDBB  20                 	db	32
  2855  00FDBC  20                 	db	32
  2856  00FDBD  20                 	db	32
  2857  00FDBE  20                 	db	32
  2858  00FDBF  20                 	db	32
  2859  00FDC0  20                 	db	32
  2860  00FDC1  20                 	db	32
  2861  00FDC2  20                 	db	32
  2862  00FDC3  00                 	db	0
  2863  00FDC4                     STR_26:
  2864                           
  2865                           ; BSR set to: 57
  2866  00FDC4  4C                 	db	76	;'L'
  2867  00FDC5  4F                 	db	79	;'O'
  2868  00FDC6  41                 	db	65	;'A'
  2869  00FDC7  44                 	db	68	;'D'
  2870  00FDC8  20                 	db	32
  2871  00FDC9  57                 	db	87	;'W'
  2872  00FDCA  48                 	db	72	;'H'
  2873  00FDCB  20                 	db	32
  2874  00FDCC  25                 	db	37
  2875  00FDCD  33                 	db	51	;'3'
  2876  00FDCE  2E                 	db	46
  2877  00FDCF  32                 	db	50	;'2'
  2878  00FDD0  66                 	db	102	;'f'
  2879  00FDD1  20                 	db	32
  2880  00FDD2  20                 	db	32
  2881  00FDD3  20                 	db	32
  2882  00FDD4  20                 	db	32
  2883  00FDD5  20                 	db	32
  2884  00FDD6  20                 	db	32
  2885  00FDD7  20                 	db	32
  2886  00FDD8  20                 	db	32
  2887  00FDD9  00                 	db	0
  2888  00FDDA                     STR_25:
  2889                           
  2890                           ; BSR set to: 57
  2891  00FDDA  50                 	db	80	;'P'
  2892  00FDDB  56                 	db	86	;'V'
  2893  00FDDC  20                 	db	32
  2894  00FDDD  25                 	db	37
  2895  00FDDE  63                 	db	99	;'c'
  2896  00FDDF  20                 	db	32
  2897  00FDE0  57                 	db	87	;'W'
  2898  00FDE1  48                 	db	72	;'H'
  2899  00FDE2  20                 	db	32
  2900  00FDE3  25                 	db	37
  2901  00FDE4  33                 	db	51	;'3'
  2902  00FDE5  2E                 	db	46
  2903  00FDE6  32                 	db	50	;'2'
  2904  00FDE7  66                 	db	102	;'f'
  2905  00FDE8  20                 	db	32
  2906  00FDE9  20                 	db	32
  2907  00FDEA  20                 	db	32
  2908  00FDEB  20                 	db	32
  2909  00FDEC  20                 	db	32
  2910  00FDED  20                 	db	32
  2911  00FDEE  20                 	db	32
  2912  00FDEF  00                 	db	0
  2913  00FDF0                     STR_24:
  2914                           
  2915                           ; BSR set to: 57
  2916  00FDF0  49                 	db	73	;'I'
  2917  00FDF1  4E                 	db	78	;'N'
  2918  00FDF2  56                 	db	86	;'V'
  2919  00FDF3  20                 	db	32
  2920  00FDF4  20                 	db	32
  2921  00FDF5  50                 	db	80	;'P'
  2922  00FDF6  57                 	db	87	;'W'
  2923  00FDF7  52                 	db	82	;'R'
  2924  00FDF8  20                 	db	32
  2925  00FDF9  25                 	db	37
  2926  00FDFA  33                 	db	51	;'3'
  2927  00FDFB  2E                 	db	46
  2928  00FDFC  32                 	db	50	;'2'
  2929  00FDFD  66                 	db	102	;'f'
  2930  00FDFE  20                 	db	32
  2931  00FDFF  20                 	db	32
  2932  00FE00  20                 	db	32
  2933  00FE01  20                 	db	32
  2934  00FE02  20                 	db	32
  2935  00FE03  20                 	db	32
  2936  00FE04  20                 	db	32
  2937  00FE05  00                 	db	0
  2938  00FE06                     STR_23:
  2939                           
  2940                           ; BSR set to: 57
  2941  00FE06  4C                 	db	76	;'L'
  2942  00FE07  4F                 	db	79	;'O'
  2943  00FE08  41                 	db	65	;'A'
  2944  00FE09  44                 	db	68	;'D'
  2945  00FE0A  20                 	db	32
  2946  00FE0B  50                 	db	80	;'P'
  2947  00FE0C  57                 	db	87	;'W'
  2948  00FE0D  52                 	db	82	;'R'
  2949  00FE0E  20                 	db	32
  2950  00FE0F  25                 	db	37
  2951  00FE10  33                 	db	51	;'3'
  2952  00FE11  2E                 	db	46
  2953  00FE12  32                 	db	50	;'2'
  2954  00FE13  66                 	db	102	;'f'
  2955  00FE14  20                 	db	32
  2956  00FE15  20                 	db	32
  2957  00FE16  20                 	db	32
  2958  00FE17  20                 	db	32
  2959  00FE18  20                 	db	32
  2960  00FE19  20                 	db	32
  2961  00FE1A  20                 	db	32
  2962  00FE1B  00                 	db	0
  2963  00FE1C                     STR_22:
  2964                           
  2965                           ; BSR set to: 57
  2966  00FE1C  50                 	db	80	;'P'
  2967  00FE1D  56                 	db	86	;'V'
  2968  00FE1E  20                 	db	32
  2969  00FE1F  25                 	db	37
  2970  00FE20  63                 	db	99	;'c'
  2971  00FE21  20                 	db	32
  2972  00FE22  50                 	db	80	;'P'
  2973  00FE23  57                 	db	87	;'W'
  2974  00FE24  52                 	db	82	;'R'
  2975  00FE25  20                 	db	32
  2976  00FE26  25                 	db	37
  2977  00FE27  33                 	db	51	;'3'
  2978  00FE28  2E                 	db	46
  2979  00FE29  32                 	db	50	;'2'
  2980  00FE2A  66                 	db	102	;'f'
  2981  00FE2B  20                 	db	32
  2982  00FE2C  20                 	db	32
  2983  00FE2D  20                 	db	32
  2984  00FE2E  20                 	db	32
  2985  00FE2F  20                 	db	32
  2986  00FE30  20                 	db	32
  2987  00FE31  00                 	db	0
  2988  00FE32                     STR_11:
  2989                           
  2990                           ; BSR set to: 57
  2991  00FE32  42                 	db	66	;'B'
  2992  00FE33  61                 	db	97	;'a'
  2993  00FE34  74                 	db	116	;'t'
  2994  00FE35  74                 	db	116	;'t'
  2995  00FE36  65                 	db	101	;'e'
  2996  00FE37  72                 	db	114	;'r'
  2997  00FE38  79                 	db	121	;'y'
  2998  00FE39  20                 	db	32
  2999  00FE3A  41                 	db	65	;'A'
  3000  00FE3B  68                 	db	104	;'h'
  3001  00FE3C  20                 	db	32
  3002  00FE3D  25                 	db	37
  3003  00FE3E  33                 	db	51	;'3'
  3004  00FE3F  2E                 	db	46
  3005  00FE40  32                 	db	50	;'2'
  3006  00FE41  66                 	db	102	;'f'
  3007  00FE42  20                 	db	32
  3008  00FE43  20                 	db	32
  3009  00FE44  20                 	db	32
  3010  00FE45  20                 	db	32
  3011  00FE46  20                 	db	32
  3012  00FE47  00                 	db	0
  3013  00FE48                     STR_29:
  3014                           
  3015                           ; BSR set to: 57
  3016  00FE48  42                 	db	66	;'B'
  3017  00FE49  56                 	db	86	;'V'
  3018  00FE4A  20                 	db	32
  3019  00FE4B  25                 	db	37
  3020  00FE4C  32                 	db	50	;'2'
  3021  00FE4D  2E                 	db	46
  3022  00FE4E  32                 	db	50	;'2'
  3023  00FE4F  66                 	db	102	;'f'
  3024  00FE50  20                 	db	32
  3025  00FE51  42                 	db	66	;'B'
  3026  00FE52  41                 	db	65	;'A'
  3027  00FE53  20                 	db	32
  3028  00FE54  25                 	db	37
  3029  00FE55  32                 	db	50	;'2'
  3030  00FE56  2E                 	db	46
  3031  00FE57  32                 	db	50	;'2'
  3032  00FE58  66                 	db	102	;'f'
  3033  00FE59  20                 	db	32
  3034  00FE5A  20                 	db	32
  3035  00FE5B  20                 	db	32
  3036  00FE5C  20                 	db	32
  3037  00FE5D  00                 	db	0
  3038  00FE5E                     STR_30:
  3039                           
  3040                           ; BSR set to: 57
  3041  00FE5E  43                 	db	67	;'C'
  3042  00FE5F  56                 	db	86	;'V'
  3043  00FE60  20                 	db	32
  3044  00FE61  25                 	db	37
  3045  00FE62  32                 	db	50	;'2'
  3046  00FE63  2E                 	db	46
  3047  00FE64  32                 	db	50	;'2'
  3048  00FE65  66                 	db	102	;'f'
  3049  00FE66  20                 	db	32
  3050  00FE67  4C                 	db	76	;'L'
  3051  00FE68  41                 	db	65	;'A'
  3052  00FE69  20                 	db	32
  3053  00FE6A  25                 	db	37
  3054  00FE6B  32                 	db	50	;'2'
  3055  00FE6C  2E                 	db	46
  3056  00FE6D  32                 	db	50	;'2'
  3057  00FE6E  66                 	db	102	;'f'
  3058  00FE6F  20                 	db	32
  3059  00FE70  20                 	db	32
  3060  00FE71  20                 	db	32
  3061  00FE72  20                 	db	32
  3062  00FE73  00                 	db	0
  3063  00FE74                     STR_28:
  3064                           
  3065                           ; BSR set to: 57
  3066  00FE74  50                 	db	80	;'P'
  3067  00FE75  56                 	db	86	;'V'
  3068  00FE76  20                 	db	32
  3069  00FE77  25                 	db	37
  3070  00FE78  32                 	db	50	;'2'
  3071  00FE79  2E                 	db	46
  3072  00FE7A  32                 	db	50	;'2'
  3073  00FE7B  66                 	db	102	;'f'
  3074  00FE7C  20                 	db	32
  3075  00FE7D  50                 	db	80	;'P'
  3076  00FE7E  41                 	db	65	;'A'
  3077  00FE7F  20                 	db	32
  3078  00FE80  25                 	db	37
  3079  00FE81  32                 	db	50	;'2'
  3080  00FE82  2E                 	db	46
  3081  00FE83  32                 	db	50	;'2'
  3082  00FE84  66                 	db	102	;'f'
  3083  00FE85  20                 	db	32
  3084  00FE86  20                 	db	32
  3085  00FE87  20                 	db	32
  3086  00FE88  20                 	db	32
  3087  00FE89  00                 	db	0
  3088  00FE8A                     STR_40:
  3089                           
  3090                           ; BSR set to: 57
  3091  00FE8A  25                 	db	37
  3092  00FE8B  64                 	db	100	;'d'
  3093  00FE8C  20                 	db	32
  3094  00FE8D  25                 	db	37
  3095  00FE8E  32                 	db	50	;'2'
  3096  00FE8F  2E                 	db	46
  3097  00FE90  34                 	db	52	;'4'
  3098  00FE91  66                 	db	102	;'f'
  3099  00FE92  2C                 	db	44
  3100  00FE93  20                 	db	32
  3101  00FE94  25                 	db	37
  3102  00FE95  64                 	db	100	;'d'
  3103  00FE96  20                 	db	32
  3104  00FE97  20                 	db	32
  3105  00FE98  54                 	db	84	;'T'
  3106  00FE99  52                 	db	82	;'R'
  3107  00FE9A  49                 	db	73	;'I'
  3108  00FE9B  4D                 	db	77	;'M'
  3109  00FE9C  20                 	db	32
  3110  00FE9D  20                 	db	32
  3111  00FE9E  20                 	db	32
  3112  00FE9F  00                 	db	0
  3113  00FEA0                     STR_5:
  3114                           
  3115                           ; BSR set to: 57
  3116  00FEA0  20                 	db	32
  3117  00FEA1  20                 	db	32
  3118  00FEA2  20                 	db	32
  3119  00FEA3  20                 	db	32
  3120  00FEA4  20                 	db	32
  3121  00FEA5  20                 	db	32
  3122  00FEA6  20                 	db	32
  3123  00FEA7  20                 	db	32
  3124  00FEA8  20                 	db	32
  3125  00FEA9  20                 	db	32
  3126  00FEAA  20                 	db	32
  3127  00FEAB  20                 	db	32
  3128  00FEAC  20                 	db	32
  3129  00FEAD  20                 	db	32
  3130  00FEAE  20                 	db	32
  3131  00FEAF  20                 	db	32
  3132  00FEB0  20                 	db	32
  3133  00FEB1  20                 	db	32
  3134  00FEB2  20                 	db	32
  3135  00FEB3  20                 	db	32
  3136  00FEB4  00                 	db	0
  3137  00FEB5                     STR_8:
  3138                           
  3139                           ; BSR set to: 57
  3140  00FEB5  42                 	db	66	;'B'
  3141  00FEB6  56                 	db	86	;'V'
  3142  00FEB7  20                 	db	32
  3143  00FEB8  25                 	db	37
  3144  00FEB9  32                 	db	50	;'2'
  3145  00FEBA  2E                 	db	46
  3146  00FEBB  34                 	db	52	;'4'
  3147  00FEBC  66                 	db	102	;'f'
  3148  00FEBD  20                 	db	32
  3149  00FEBE  20                 	db	32
  3150  00FEBF  20                 	db	32
  3151  00FEC0  20                 	db	32
  3152  00FEC1  20                 	db	32
  3153  00FEC2  20                 	db	32
  3154  00FEC3  20                 	db	32
  3155  00FEC4  20                 	db	32
  3156  00FEC5  20                 	db	32
  3157  00FEC6  20                 	db	32
  3158  00FEC7  20                 	db	32
  3159  00FEC8  20                 	db	32
  3160  00FEC9  00                 	db	0
  3161  00FECA                     STR_4:
  3162                           
  3163                           ; BSR set to: 57
  3164  00FECA  20                 	db	32
  3165  00FECB  4E                 	db	78	;'N'
  3166  00FECC  53                 	db	83	;'S'
  3167  00FECD  41                 	db	65	;'A'
  3168  00FECE  53                 	db	83	;'S'
  3169  00FECF  50                 	db	80	;'P'
  3170  00FED0  4F                 	db	79	;'O'
  3171  00FED1  4F                 	db	79	;'O'
  3172  00FED2  4B                 	db	75	;'K'
  3173  00FED3  20                 	db	32
  3174  00FED4  20                 	db	32
  3175  00FED5  20                 	db	32
  3176  00FED6  20                 	db	32
  3177  00FED7  20                 	db	32
  3178  00FED8  20                 	db	32
  3179  00FED9  20                 	db	32
  3180  00FEDA  20                 	db	32
  3181  00FEDB  20                 	db	32
  3182  00FEDC  20                 	db	32
  3183  00FEDD  20                 	db	32
  3184  00FEDE  00                 	db	0
  3185  00FEDF                     STR_12:
  3186                           
  3187                           ; BSR set to: 57
  3188  00FEDF  42                 	db	66	;'B'
  3189  00FEE0  61                 	db	97	;'a'
  3190  00FEE1  74                 	db	116	;'t'
  3191  00FEE2  74                 	db	116	;'t'
  3192  00FEE3  65                 	db	101	;'e'
  3193  00FEE4  72                 	db	114	;'r'
  3194  00FEE5  79                 	db	121	;'y'
  3195  00FEE6  20                 	db	32
  3196  00FEE7  45                 	db	69	;'E'
  3197  00FEE8  53                 	db	83	;'S'
  3198  00FEE9  52                 	db	82	;'R'
  3199  00FEEA  20                 	db	32
  3200  00FEEB  20                 	db	32
  3201  00FEEC  20                 	db	32
  3202  00FEED  20                 	db	32
  3203  00FEEE  20                 	db	32
  3204  00FEEF  20                 	db	32
  3205  00FEF0  20                 	db	32
  3206  00FEF1  20                 	db	32
  3207  00FEF2  20                 	db	32
  3208  00FEF3  00                 	db	0
  3209  00FEF4                     STR_13:
  3210                           
  3211                           ; BSR set to: 57
  3212  00FEF4  43                 	db	67	;'C'
  3213  00FEF5  61                 	db	97	;'a'
  3214  00FEF6  6C                 	db	108	;'l'
  3215  00FEF7  63                 	db	99	;'c'
  3216  00FEF8  75                 	db	117	;'u'
  3217  00FEF9  6C                 	db	108	;'l'
  3218  00FEFA  61                 	db	97	;'a'
  3219  00FEFB  74                 	db	116	;'t'
  3220  00FEFC  69                 	db	105	;'i'
  3221  00FEFD  6F                 	db	111	;'o'
  3222  00FEFE  6E                 	db	110	;'n'
  3223  00FEFF  20                 	db	32
  3224  00FF00  20                 	db	32
  3225  00FF01  20                 	db	32
  3226  00FF02  20                 	db	32
  3227  00FF03  20                 	db	32
  3228  00FF04  20                 	db	32
  3229  00FF05  20                 	db	32
  3230  00FF06  20                 	db	32
  3231  00FF07  20                 	db	32
  3232  00FF08  00                 	db	0
  3233  00FF09                     STR_2:
  3234                           
  3235                           ; BSR set to: 57
  3236  00FF09  20                 	db	32
  3237  00FF0A  56                 	db	86	;'V'
  3238  00FF0B  65                 	db	101	;'e'
  3239  00FF0C  72                 	db	114	;'r'
  3240  00FF0D  73                 	db	115	;'s'
  3241  00FF0E  69                 	db	105	;'i'
  3242  00FF0F  6F                 	db	111	;'o'
  3243  00FF10  6E                 	db	110	;'n'
  3244  00FF11  20                 	db	32
  3245  00FF12  25                 	db	37
  3246  00FF13  73                 	db	115	;'s'
  3247  00FF14  20                 	db	32
  3248  00FF15  20                 	db	32
  3249  00FF16  20                 	db	32
  3250  00FF17  20                 	db	32
  3251  00FF18  20                 	db	32
  3252  00FF19  20                 	db	32
  3253  00FF1A  20                 	db	32
  3254  00FF1B  20                 	db	32
  3255  00FF1C  20                 	db	32
  3256  00FF1D  00                 	db	0
  3257  00FF1E                     STR_1:
  3258                           
  3259                           ; BSR set to: 57
  3260  00FF1E  20                 	db	32
  3261  00FF1F  4D                 	db	77	;'M'
  3262  00FF20  42                 	db	66	;'B'
  3263  00FF21  4D                 	db	77	;'M'
  3264  00FF22  43                 	db	67	;'C'
  3265  00FF23  20                 	db	32
  3266  00FF24  53                 	db	83	;'S'
  3267  00FF25  4F                 	db	79	;'O'
  3268  00FF26  4C                 	db	76	;'L'
  3269  00FF27  41                 	db	65	;'A'
  3270  00FF28  52                 	db	82	;'R'
  3271  00FF29  4D                 	db	77	;'M'
  3272  00FF2A  4F                 	db	79	;'O'
  3273  00FF2B  4E                 	db	78	;'N'
  3274  00FF2C  20                 	db	32
  3275  00FF2D  20                 	db	32
  3276  00FF2E  20                 	db	32
  3277  00FF2F  20                 	db	32
  3278  00FF30  20                 	db	32
  3279  00FF31  20                 	db	32
  3280  00FF32  00                 	db	0
  3281  00FF33                     STR_15:
  3282                           
  3283                           ; BSR set to: 57
  3284  00FF33  43                 	db	67	;'C'
  3285  00FF34  68                 	db	104	;'h'
  3286  00FF35  65                 	db	101	;'e'
  3287  00FF36  63                 	db	99	;'c'
  3288  00FF37  6B                 	db	107	;'k'
  3289  00FF38  69                 	db	105	;'i'
  3290  00FF39  6E                 	db	110	;'n'
  3291  00FF3A  67                 	db	103	;'g'
  3292  00FF3B  20                 	db	32
  3293  00FF3C  25                 	db	37
  3294  00FF3D  63                 	db	99	;'c'
  3295  00FF3E  20                 	db	32
  3296  00FF3F  25                 	db	37
  3297  00FF40  63                 	db	99	;'c'
  3298  00FF41  20                 	db	32
  3299  00FF42  20                 	db	32
  3300  00FF43  20                 	db	32
  3301  00FF44  20                 	db	32
  3302  00FF45  20                 	db	32
  3303  00FF46  20                 	db	32
  3304  00FF47  00                 	db	0
  3305  00FF48                     STR_14:
  3306                           
  3307                           ; BSR set to: 57
  3308  00FF48  43                 	db	67	;'C'
  3309  00FF49  68                 	db	104	;'h'
  3310  00FF4A  65                 	db	101	;'e'
  3311  00FF4B  63                 	db	99	;'c'
  3312  00FF4C  6B                 	db	107	;'k'
  3313  00FF4D  20                 	db	32
  3314  00FF4E  33                 	db	51	;'3'
  3315  00FF4F  30                 	db	48	;'0'
  3316  00FF50  20                 	db	32
  3317  00FF51  73                 	db	115	;'s'
  3318  00FF52  65                 	db	101	;'e'
  3319  00FF53  63                 	db	99	;'c'
  3320  00FF54  6F                 	db	111	;'o'
  3321  00FF55  6E                 	db	110	;'n'
  3322  00FF56  64                 	db	100	;'d'
  3323  00FF57  73                 	db	115	;'s'
  3324  00FF58  20                 	db	32
  3325  00FF59  20                 	db	32
  3326  00FF5A  20                 	db	32
  3327  00FF5B  20                 	db	32
  3328  00FF5C  00                 	db	0
  3329  00FF5D                     STR_47:
  3330                           
  3331                           ; BSR set to: 57
  3332  00FF5D  48                 	db	72	;'H'
  3333  00FF5E  45                 	db	69	;'E'
  3334  00FF5F  4C                 	db	76	;'L'
  3335  00FF60  50                 	db	80	;'P'
  3336  00FF61  20                 	db	32
  3337  00FF62  25                 	db	37
  3338  00FF63  73                 	db	115	;'s'
  3339  00FF64  20                 	db	32
  3340  00FF65  20                 	db	32
  3341  00FF66  20                 	db	32
  3342  00FF67  20                 	db	32
  3343  00FF68  20                 	db	32
  3344  00FF69  20                 	db	32
  3345  00FF6A  20                 	db	32
  3346  00FF6B  20                 	db	32
  3347  00FF6C  20                 	db	32
  3348  00FF6D  20                 	db	32
  3349  00FF6E  20                 	db	32
  3350  00FF6F  00                 	db	0
  3351  00FF70                     
  3352                           ; BSR set to: 57
  3353  00FF70  44                 	db	68	;'D'
  3354  00FF71  49                 	db	73	;'I'
  3355  00FF72  53                 	db	83	;'S'
  3356  00FF73  50                 	db	80	;'P'
  3357  00FF74  4C                 	db	76	;'L'
  3358  00FF75  41                 	db	65	;'A'
  3359  00FF76  59                 	db	89	;'Y'
  3360  00FF77  20                 	db	32
  3361  00FF78  25                 	db	37
  3362  00FF79  73                 	db	115	;'s'
  3363  00FF7A  20                 	db	32
  3364  00FF7B  20                 	db	32
  3365  00FF7C  20                 	db	32
  3366  00FF7D  20                 	db	32
  3367  00FF7E  20                 	db	32
  3368  00FF7F  20                 	db	32
  3369  00FF80  20                 	db	32
  3370  00FF81  20                 	db	32
  3371  00FF82  00                 	db	0
  3372  00FF83                     
  3373                           ; BSR set to: 57
  3374  00FF83  25                 	db	37
  3375  00FF84  64                 	db	100	;'d'
  3376  00FF85  20                 	db	32
  3377  00FF86  25                 	db	37
  3378  00FF87  32                 	db	50	;'2'
  3379  00FF88  2E                 	db	46
  3380  00FF89  34                 	db	52	;'4'
  3381  00FF8A  66                 	db	102	;'f'
  3382  00FF8B  2C                 	db	44
  3383  00FF8C  20                 	db	32
  3384  00FF8D  25                 	db	37
  3385  00FF8E  64                 	db	100	;'d'
  3386  00FF8F  20                 	db	32
  3387  00FF90  20                 	db	32
  3388  00FF91  20                 	db	32
  3389  00FF92  23                 	db	35
  3390  00FF93  00                 	db	0
  3391  00FF94                     STR_19:
  3392                           
  3393                           ; BSR set to: 57
  3394  00FF94  25                 	db	37
  3395  00FF95  64                 	db	100	;'d'
  3396  00FF96  20                 	db	32
  3397  00FF97  25                 	db	37
  3398  00FF98  32                 	db	50	;'2'
  3399  00FF99  2E                 	db	46
  3400  00FF9A  34                 	db	52	;'4'
  3401  00FF9B  66                 	db	102	;'f'
  3402  00FF9C  20                 	db	32
  3403  00FF9D  20                 	db	32
  3404  00FF9E  20                 	db	32
  3405  00FF9F  25                 	db	37
  3406  00FFA0  64                 	db	100	;'d'
  3407  00FFA1  20                 	db	32
  3408  00FFA2  20                 	db	32
  3409  00FFA3  00                 	db	0
  3410  00FFA4                     STR_51:
  3411                           
  3412                           ; BSR set to: 57
  3413  00FFA4  76                 	db	118	;'v'
  3414  00FFA5  74                 	db	116	;'t'
  3415  00FFA6  65                 	db	101	;'e'
  3416  00FFA7  72                 	db	114	;'r'
  3417  00FFA8  6D                 	db	109	;'m'
  3418  00FFA9  20                 	db	32
  3419  00FFAA  25                 	db	37
  3420  00FFAB  78                 	db	120	;'x'
  3421  00FFAC  3A                 	db	58	;':'
  3422  00FFAD  25                 	db	37
  3423  00FFAE  78                 	db	120	;'x'
  3424  00FFAF  20                 	db	32
  3425  00FFB0  20                 	db	32
  3426  00FFB1  20                 	db	32
  3427  00FFB2  00                 	db	0
  3428  00FFB3                     STR_45:
  3429                           
  3430                           ; BSR set to: 57
  3431  00FFB3  46                 	db	70	;'F'
  3432  00FFB4  65                 	db	101	;'e'
  3433  00FFB5  62                 	db	98	;'b'
  3434  00FFB6  20                 	db	32
  3435  00FFB7  20                 	db	32
  3436  00FFB8  33                 	db	51	;'3'
  3437  00FFB9  20                 	db	32
  3438  00FFBA  32                 	db	50	;'2'
  3439  00FFBB  30                 	db	48	;'0'
  3440  00FFBC  32                 	db	50	;'2'
  3441  00FFBD  30                 	db	48	;'0'
  3442  00FFBE  00                 	db	0
  3443  00FFBF                     STR_49:
  3444                           
  3445                           ; BSR set to: 57
  3446  00FFBF  25                 	db	37
  3447  00FFC0  73                 	db	115	;'s'
  3448  00FFC1  20                 	db	32
  3449  00FFC2  20                 	db	32
  3450  00FFC3  20                 	db	32
  3451  00FFC4  20                 	db	32
  3452  00FFC5  20                 	db	32
  3453  00FFC6  20                 	db	32
  3454  00FFC7  20                 	db	32
  3455  00FFC8  00                 	db	0
  3456  00FFC9                     STR_46:
  3457                           
  3458                           ; BSR set to: 57
  3459  00FFC9  31                 	db	49	;'1'
  3460  00FFCA  33                 	db	51	;'3'
  3461  00FFCB  3A                 	db	58	;':'
  3462  00FFCC  35                 	db	53	;'5'
  3463  00FFCD  35                 	db	53	;'5'
  3464  00FFCE  3A                 	db	58	;':'
  3465  00FFCF  33                 	db	51	;'3'
  3466  00FFD0  38                 	db	56	;'8'
  3467  00FFD1  00                 	db	0
  3468  00FFD2                     STR_3:
  3469                           
  3470                           ; BSR set to: 57
  3471  00FFD2  31                 	db	49	;'1'
  3472  00FFD3  2E                 	db	46
  3473  00FFD4  31                 	db	49	;'1'
  3474  00FFD5  36                 	db	54	;'6'
  3475  00FFD6  00                 	db	0
  3476  00FFD7                     STR_65:
  3477                           
  3478                           ; BSR set to: 57
  3479  00FFD7  49                 	db	73	;'I'
  3480  00FFD8  4E                 	db	78	;'N'
  3481  00FFD9  46                 	db	70	;'F'
  3482  00FFDA  00                 	db	0
  3483  00FFDB                     STR_69:
  3484                           
  3485                           ; BSR set to: 57
  3486  00FFDB  4E                 	db	78	;'N'
  3487  00FFDC  41                 	db	65	;'A'
  3488  00FFDD  4E                 	db	78	;'N'
  3489  00FFDE  00                 	db	0
  3490  00FFDF                     STR_66:
  3491                           
  3492                           ; BSR set to: 57
  3493  00FFDF  69                 	db	105	;'i'
  3494  00FFE0  6E                 	db	110	;'n'
  3495  00FFE1  66                 	db	102	;'f'
  3496  00FFE2  00                 	db	0
  3497  00FFE3                     STR_70:
  3498                           
  3499                           ; BSR set to: 57
  3500  00FFE3  6E                 	db	110	;'n'
  3501  00FFE4  61                 	db	97	;'a'
  3502  00FFE5  6E                 	db	110	;'n'
  3503  00FFE6  00                 	db	0
  3504  00FFE7                     STR_96:
  3505                           
  3506                           ; BSR set to: 57
  3507  00FFE7  6C                 	db	108	;'l'
  3508  00FFE8  58                 	db	88	;'X'
  3509  00FFE9  00                 	db	0
  3510  00FFEA                     STR_73:
  3511                           
  3512                           ; BSR set to: 57
  3513  00FFEA  6C                 	db	108	;'l'
  3514  00FFEB  64                 	db	100	;'d'
  3515  00FFEC  00                 	db	0
  3516  00FFED                     STR_82:
  3517                           
  3518                           ; BSR set to: 57
  3519  00FFED  6C                 	db	108	;'l'
  3520  00FFEE  66                 	db	102	;'f'
  3521  00FFEF  00                 	db	0
  3522  00FFF0                     STR_77:
  3523                           
  3524                           ; BSR set to: 57
  3525  00FFF0  6C                 	db	108	;'l'
  3526  00FFF1  69                 	db	105	;'i'
  3527  00FFF2  00                 	db	0
  3528  00FFF3                     STR_87:
  3529                           
  3530                           ; BSR set to: 57
  3531  00FFF3  6C                 	db	108	;'l'
  3532  00FFF4  75                 	db	117	;'u'
  3533  00FFF5  00                 	db	0
  3534  00FFF6                     STR_92:
  3535                           
  3536                           ; BSR set to: 57
  3537  00FFF6  6C                 	db	108	;'l'
  3538  00FFF7  78                 	db	120	;'x'
  3539  00FFF8  00                 	db	0
  3540  00FFF9                     STR_44:
  3541                           
  3542                           ; BSR set to: 57
  3543  00FFF9  25                 	db	37
  3544  00FFFA  63                 	db	99	;'c'
  3545  00FFFB  00                 	db	0
  3546  00FFFC                     STR_43:
  3547                           
  3548                           ; BSR set to: 57
  3549  00FFFC  25                 	db	37
  3550  00FFFD  73                 	db	115	;'s'
  3551  00FFFE  00                 	db	0
  3552  0000                     
  3553                           ; #config settings
  3554  00FFFF  00                 	db	0	; dummy byte at the end
  3555  0000                     
  3556                           	psect	cinit
  3557  01A34A                     __pcinit:
  3558                           	opt callstack 0
  3559  01A34A                     start_initialization:
  3560                           	opt callstack 0
  3561  01A34A                     __initialization:
  3562                           	opt callstack 0
  3563                           
  3564                           ; Initialize objects allocated to BIGRAM (811 bytes)
  3565                           ; load TBLPTR registers with __pidataBIGRAM
  3566  01A34A  0EA8               	movlw	low __pidataBIGRAM
  3567  01A34C  6EF6               	movwf	tblptrl,c
  3568  01A34E  0E6B               	movlw	high __pidataBIGRAM
  3569  01A350  6EF7               	movwf	tblptrh,c
  3570  01A352  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3571  01A354  6EF8               	movwf	tblptru,c
  3572  01A356  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3573  01A35A  EE20 F32B          	lfsr	2,811
  3574  01A35E                     copy_data0:
  3575  01A35E  0009               	tblrd		*+
  3576  01A360  006F FFD7 FFEE     	movff	tablat,postinc0
  3577  01A366  50DD               	movf	postdec2,w,c
  3578  01A368  50D9               	movf	fsr2l,w,c
  3579  01A36A  E1F9               	bnz	copy_data0
  3580  01A36C  50DA               	movf	fsr2h,w,c
  3581  01A36E  E1F7               	bnz	copy_data0
  3582                           
  3583                           ; Initialize objects allocated to BANK1 (205 bytes)
  3584                           ; load TBLPTR registers with __pidataBANK1
  3585  01A370  0ED0               	movlw	low __pidataBANK1
  3586  01A372  6EF6               	movwf	tblptrl,c
  3587  01A374  0EA5               	movlw	high __pidataBANK1
  3588  01A376  6EF7               	movwf	tblptrh,c
  3589  01A378  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3590  01A37A  6EF8               	movwf	tblptru,c
  3591  01A37C  EE00  F100         	lfsr	0,__pdataBANK1
  3592  01A380  EE20 F0CD          	lfsr	2,205
  3593  01A384                     copy_data1:
  3594  01A384  0009               	tblrd		*+
  3595  01A386  006F FFD7 FFEE     	movff	tablat,postinc0
  3596  01A38C  50DD               	movf	postdec2,w,c
  3597  01A38E  50D9               	movf	fsr2l,w,c
  3598  01A390  E1F9               	bnz	copy_data1
  3599                           
  3600                           ; Initialize objects allocated to BANK0 (54 bytes)
  3601                           ; load TBLPTR registers with __pidataBANK0
  3602  01A392  0E0C               	movlw	low __pidataBANK0
  3603  01A394  6EF6               	movwf	tblptrl,c
  3604  01A396  0EBD               	movlw	high __pidataBANK0
  3605  01A398  6EF7               	movwf	tblptrh,c
  3606  01A39A  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3607  01A39C  6EF8               	movwf	tblptru,c
  3608  01A39E  EE00  F0AF         	lfsr	0,__pdataBANK0
  3609  01A3A2  EE20 F036          	lfsr	2,54
  3610  01A3A6                     copy_data2:
  3611  01A3A6  0009               	tblrd		*+
  3612  01A3A8  006F FFD7 FFEE     	movff	tablat,postinc0
  3613  01A3AE  50DD               	movf	postdec2,w,c
  3614  01A3B0  50D9               	movf	fsr2l,w,c
  3615  01A3B2  E1F9               	bnz	copy_data2
  3616                           
  3617                           ; Clear objects allocated to BIGRAM (482 bytes)
  3618  01A3B4  EE02  F02A         	lfsr	0,__pbssBIGRAM
  3619  01A3B8  EE20 F1E2          	lfsr	2,482
  3620  01A3BC                     clear_0:
  3621  01A3BC  6AEE               	clrf	postinc0,c
  3622  01A3BE  50DD               	movf	postdec2,w,c
  3623  01A3C0  50D9               	movf	fsr2l,w,c
  3624  01A3C2  E1FC               	bnz	clear_0
  3625  01A3C4  50DA               	movf	fsr2h,w,c
  3626  01A3C6  E1FA               	bnz	clear_0
  3627                           
  3628                           ; Clear objects allocated to BANK4 (255 bytes)
  3629  01A3C8  EE01  F000         	lfsr	0,__pbssBANK4
  3630  01A3CC  EE20 F0FF          	lfsr	2,255
  3631  01A3D0                     clear_1:
  3632  01A3D0  6AEE               	clrf	postinc0,c
  3633  01A3D2  50DD               	movf	postdec2,w,c
  3634  01A3D4  50D9               	movf	fsr2l,w,c
  3635  01A3D6  E1FC               	bnz	clear_1
  3636  01A3D8  50DA               	movf	fsr2h,w,c
  3637  01A3DA  E1FA               	bnz	clear_1
  3638                           
  3639                           ; Clear objects allocated to BANK3 (198 bytes)
  3640  01A3DC  EE00  F300         	lfsr	0,__pbssBANK3
  3641  01A3E0  0EC6               	movlw	198
  3642  01A3E2                     clear_2:
  3643  01A3E2  6AEE               	clrf	postinc0,c
  3644  01A3E4  06E8               	decf	wreg,f,c
  3645  01A3E6  E1FD               	bnz	clear_2
  3646                           
  3647                           ; Clear objects allocated to BANK2 (231 bytes)
  3648  01A3E8  EE00  F200         	lfsr	0,__pbssBANK2
  3649  01A3EC  0EE7               	movlw	231
  3650  01A3EE                     clear_3:
  3651  01A3EE  6AEE               	clrf	postinc0,c
  3652  01A3F0  06E8               	decf	wreg,f,c
  3653  01A3F2  E1FD               	bnz	clear_3
  3654                           
  3655                           ; Clear objects allocated to BANK1 (46 bytes)
  3656  01A3F4  EE00  F1CD         	lfsr	0,__pbssBANK1
  3657  01A3F8  0E2E               	movlw	46
  3658  01A3FA                     clear_4:
  3659  01A3FA  6AEE               	clrf	postinc0,c
  3660  01A3FC  06E8               	decf	wreg,f,c
  3661  01A3FE  E1FD               	bnz	clear_4
  3662                           
  3663                           ; Clear objects allocated to BANK0 (79 bytes)
  3664  01A400  EE00  F060         	lfsr	0,__pbssBANK0
  3665  01A404  0E4F               	movlw	79
  3666  01A406                     clear_5:
  3667  01A406  6AEE               	clrf	postinc0,c
  3668  01A408  06E8               	decf	wreg,f,c
  3669  01A40A  E1FD               	bnz	clear_5
  3670                           
  3671                           ; Clear objects allocated to COMRAM (14 bytes)
  3672  01A40C  EE00  F03A         	lfsr	0,__pbssCOMRAM
  3673  01A410  0E0E               	movlw	14
  3674  01A412                     clear_6:
  3675  01A412  6AEE               	clrf	postinc0,c
  3676  01A414  06E8               	decf	wreg,f,c
  3677  01A416  E1FD               	bnz	clear_6
  3678                           
  3679                           ;
  3680                           ; Setup IVTBASE
  3681                           ;
  3682  01A418  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3683  01A41A  6ED5               	movwf	213,c
  3684  01A41C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3685  01A41E  6ED6               	movwf	214,c
  3686  01A420  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3687  01A422  6ED7               	movwf	215,c
  3688  01A424                     end_of_initialization:
  3689                           	opt callstack 0
  3690  01A424                     __end_of__initialization:
  3691                           	opt callstack 0
  3692  01A424  0100               	movlb	0
  3693  01A426  EF22  F089         	goto	_main	;jump to C main() function
  3694                           
  3695                           	psect	bssCOMRAM
  3696  00003A                     __pbssCOMRAM:
  3697                           	opt callstack 0
  3698  00003A                     _width:
  3699                           	opt callstack 0
  3700  00003A                     	ds	2
  3701  00003C                     _prec:
  3702                           	opt callstack 0
  3703  00003C                     	ds	2
  3704  00003E                     _flags:
  3705                           	opt callstack 0
  3706  00003E                     	ds	2
  3707  000040                     calc_bsoc@log_update_wait:
  3708                           	opt callstack 0
  3709  000040                     	ds	1
  3710  000041                     check_day_time@day_delay:
  3711                           	opt callstack 0
  3712  000041                     	ds	1
  3713  000042                     dac_spi_control@S0:
  3714                           	opt callstack 0
  3715  000042                     	ds	1
  3716  000043                     dac_spi_control@init:
  3717                           	opt callstack 0
  3718  000043                     	ds	1
  3719  000044                     _uart2RxHead:
  3720                           	opt callstack 0
  3721  000044                     	ds	1
  3722  000045                     _uart2TxBufferRemaining:
  3723                           	opt callstack 0
  3724  000045                     	ds	1
  3725  000046                     _uart2TxTail:
  3726                           	opt callstack 0
  3727  000046                     	ds	1
  3728  000047                     _uart1RxHead:
  3729                           	opt callstack 0
  3730  000047                     	ds	1
  3731                           
  3732                           	psect	bssBANK0
  3733  000060                     __pbssBANK0:
  3734                           	opt callstack 0
  3735  000060                     fabsf@F463:
  3736                           	opt callstack 0
  3737  000060                     	ds	4
  3738  000064                     ___fpclassifyf@F463:
  3739                           	opt callstack 0
  3740  000064                     	ds	4
  3741  000068                     calc_ror_data@bcror:
  3742                           	opt callstack 0
  3743  000068                     	ds	4
  3744  00006C                     calc_ror_data@bvror:
  3745                           	opt callstack 0
  3746  00006C                     	ds	4
  3747  000070                     calc_model_data@bcror:
  3748                           	opt callstack 0
  3749  000070                     	ds	4
  3750  000074                     calc_model_data@bvror:
  3751                           	opt callstack 0
  3752  000074                     	ds	4
  3753  000078                     wdtdelay@dcount:
  3754                           	opt callstack 0
  3755  000078                     	ds	4
  3756  00007C                     _TMR3_InterruptHandler:
  3757                           	opt callstack 0
  3758  00007C                     	ds	3
  3759  00007F                     _TMR5_InterruptHandler:
  3760                           	opt callstack 0
  3761  00007F                     	ds	3
  3762  000082                     _TMR6_InterruptHandler:
  3763                           	opt callstack 0
  3764  000082                     	ds	3
  3765  000085                     _ADCC_ADTI_InterruptHandler:
  3766                           	opt callstack 0
  3767  000085                     	ds	3
  3768  000088                     _ADCC_ADI_InterruptHandler:
  3769                           	opt callstack 0
  3770  000088                     	ds	3
  3771  00008B                     _UART1_RxInterruptHandler:
  3772                           	opt callstack 0
  3773  00008B                     	ds	3
  3774  00008E                     _UART2_TxInterruptHandler:
  3775                           	opt callstack 0
  3776  00008E                     	ds	3
  3777  000091                     _UART2_RxInterruptHandler:
  3778                           	opt callstack 0
  3779  000091                     	ds	3
  3780  000094                     _INT1_InterruptHandler:
  3781                           	opt callstack 0
  3782  000094                     	ds	3
  3783  000097                     _INT0_InterruptHandler:
  3784                           	opt callstack 0
  3785  000097                     	ds	3
  3786  00009A                     _nout:
  3787                           	opt callstack 0
  3788  00009A                     	ds	2
  3789  00009C                     TMR3_ISR@CountCallBack:
  3790                           	opt callstack 0
  3791  00009C                     	ds	2
  3792  00009E                     _timer3ReloadVal:
  3793                           	opt callstack 0
  3794  00009E                     	ds	2
  3795  0000A0                     TMR5_ISR@CountCallBack:
  3796                           	opt callstack 0
  3797  0000A0                     	ds	2
  3798  0000A2                     _timer5ReloadVal:
  3799                           	opt callstack 0
  3800  0000A2                     	ds	2
  3801  0000A4                     esr_check@esr_state:
  3802                           	opt callstack 0
  3803  0000A4                     	ds	1
  3804  0000A5                     dac_spi_control@SB:
  3805                           	opt callstack 0
  3806  0000A5                     	ds	1
  3807  0000A6                     dac_spi_control@SC:
  3808                           	opt callstack 0
  3809  0000A6                     	ds	1
  3810  0000A7                     dac_spi_control@S2:
  3811                           	opt callstack 0
  3812  0000A7                     	ds	1
  3813  0000A8                     dac_spi_control@S1:
  3814                           	opt callstack 0
  3815  0000A8                     	ds	1
  3816  0000A9                     _mode_sw:
  3817                           	opt callstack 0
  3818  0000A9                     	ds	1
  3819  0000AA                     _uart2RxCount:
  3820                           	opt callstack 0
  3821  0000AA                     	ds	1
  3822  0000AB                     _uart2RxTail:
  3823                           	opt callstack 0
  3824  0000AB                     	ds	1
  3825  0000AC                     _uart2TxHead:
  3826                           	opt callstack 0
  3827  0000AC                     	ds	1
  3828  0000AD                     _uart1RxCount:
  3829                           	opt callstack 0
  3830  0000AD                     	ds	1
  3831  0000AE                     _uart1RxTail:
  3832                           	opt callstack 0
  3833  0000AE                     	ds	1
  3834                           
  3835                           	psect	dataBANK0
  3836  0000AF                     __pdataBANK0:
  3837                           	opt callstack 0
  3838  0000AF                     _R:
  3839                           	opt callstack 0
  3840  0000AF                     	ds	54
  3841                           
  3842                           	psect	bssBANK1
  3843  0001CD                     __pbssBANK1:
  3844                           	opt callstack 0
  3845  0001CD                     _spi_link:
  3846                           	opt callstack 0
  3847  0001CD                     	ds	12
  3848  0001D9                     _uart1RxBuffer:
  3849                           	opt callstack 0
  3850  0001D9                     	ds	8
  3851  0001E1                     spinners@s:
  3852                           	opt callstack 0
  3853  0001E1                     	ds	6
  3854  0001E7                     floorf@F524:
  3855                           	opt callstack 0
  3856  0001E7                     	ds	4
  3857  0001EB                     _utctime:
  3858                           	opt callstack 0
  3859  0001EB                     	ds	4
  3860  0001EF                     _P:
  3861                           	opt callstack 0
  3862  0001EF                     	ds	4
  3863  0001F3                     _seed:
  3864                           	opt callstack 0
  3865  0001F3                     	ds	8
  3866                           
  3867                           	psect	dataBANK1
  3868  000100                     __pdataBANK1:
  3869                           	opt callstack 0
  3870  000100                     stoa@F1166:
  3871                           	opt callstack 0
  3872  000100                     	ds	7
  3873  000107                     _V:
  3874                           	opt callstack 0
  3875  000107                     	ds	191
  3876  0001C6                     _H:
  3877                           	opt callstack 0
  3878  0001C6                     	ds	7
  3879                           
  3880                           	psect	bssBANK2
  3881  000200                     __pbssBANK2:
  3882                           	opt callstack 0
  3883  000200                     lp_filter@smooth:
  3884                           	opt callstack 0
  3885  000200                     	ds	84
  3886  000254                     _S:
  3887                           	opt callstack 0
  3888  000254                     	ds	41
  3889  00027D                     _tickCount:
  3890                           	opt callstack 0
  3891  00027D                     	ds	26
  3892  000297                     _dbuf:
  3893                           	opt callstack 0
  3894  000297                     	ds	80
  3895                           
  3896                           	psect	bssBANK3
  3897  000300                     __pbssBANK3:
  3898                           	opt callstack 0
  3899  000300                     _uart2TxBuffer:
  3900                           	opt callstack 0
  3901  000300                     	ds	64
  3902  000340                     _ring_buf2:
  3903                           	opt callstack 0
  3904  000340                     	ds	67
  3905  000383                     _ring_buf1:
  3906                           	opt callstack 0
  3907  000383                     	ds	67
  3908                           
  3909                           	psect	bssBANK4
  3910  000400                     __pbssBANK4:
  3911                           	opt callstack 0
  3912  000400                     _uart2RxBuffer:
  3913                           	opt callstack 0
  3914  000400                     	ds	255
  3915                           
  3916                           	psect	bssBIGRAM
  3917  00082A                     __pbssBIGRAM:
  3918                           	opt callstack 0
  3919  00082A                     _D:
  3920                           	opt callstack 0
  3921  00082A                     	ds	482
  3922                           
  3923                           	psect	dataBIGRAM
  3924  0004FF                     __pdataBIGRAM:
  3925                           	opt callstack 0
  3926  0004FF                     _port_data:
  3927                           	opt callstack 0
  3928  0004FF                     	ds	512
  3929  0006FF                     _C:
  3930                           	opt callstack 0
  3931  0006FF                     	ds	299
  3932                           
  3933                           	psect	cstackBANK0
  3934  0000E5                     __pcstackBANK0:
  3935                           	opt callstack 0
  3936  0000E5                     ??_TMR3_ISR:
  3937                           
  3938                           ; 1 bytes @ 0x0
  3939  0000E5                     	ds	25
  3940                           
  3941                           	psect	cstackCOMRAM
  3942  000021                     __pcstackCOMRAM:
  3943                           	opt callstack 0
  3944  000021                     ??_ADCC_ThresholdISR:
  3945  000021                     
  3946                           ; 1 bytes @ 0x0
  3947  000021                     	ds	5
  3948  000026                     ??_TMR6_ISR:
  3949                           
  3950                           ; 1 bytes @ 0x5
  3951  000026                     	ds	1
  3952  000027                     ??_INT1_ISR:
  3953  000027                     
  3954                           ; 1 bytes @ 0x6
  3955  000027                     	ds	4
  3956  00002B                     ??_TMR5_ISR:
  3957                           
  3958                           ; 1 bytes @ 0xA
  3959  00002B                     	ds	15
  3960                           
  3961 ;;
  3962 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  3963 ;;
  3964 ;; *************** function _main *****************
  3965 ;; Defined at:
  3966 ;;		line 187 in file "main.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;		None
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;  esr_temp        4  [STACK] float 
  3971 ;;  i_esr           2  [STACK] unsigned short 
  3972 ;;  shape           1  [STACK] unsigned char 
  3973 ;;  inp_index       1  [STACK] unsigned char 
  3974 ;;  k               1  [STACK] unsigned char 
  3975 ;;  j               1  [STACK] unsigned char 
  3976 ;;  i               1  [STACK] unsigned char 
  3977 ;;  mode            1  [STACK] enum E17013
  3978 ;;  i_ror           1  [STACK] unsigned char 
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  1  [STACK] void 
  3981 ;; Registers used:
  3982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3992 ;;Total ram usage:        0 bytes
  3993 ;; Hardware stack levels required when called:   29
  3994 ;; This function calls:
  3995 ;;		_SYSTEM_Initialize
  3996 ;;		_StartTimer
  3997 ;;		_TimerDone
  3998 ;;		_WaitMs
  3999 ;;		___fladd
  4000 ;;		___flge
  4001 ;;		___fltol
  4002 ;;		_calc_model_data
  4003 ;;		_calc_ror_data
  4004 ;;		_check_adc_scan
  4005 ;;		_check_enter_button
  4006 ;;		_check_help
  4007 ;;		_clear_adc_scan
  4008 ;;		_clear_hid_pflags
  4009 ;;		_conv_raw_result
  4010 ;;		_convert_adc_data
  4011 ;;		_eaDogM_WriteCommand
  4012 ;;		_esr_check
  4013 ;;		_fabsf
  4014 ;;		_get_raw_result
  4015 ;;		_get_switch
  4016 ;;		_get_vterm_ptr
  4017 ;;		_hid_display
  4018 ;;		_init_bsoc
  4019 ;;		_init_display
  4020 ;;		_init_port_dma
  4021 ;;		_lp_filter
  4022 ;;		_mode_lamp_dim
  4023 ;;		_set_dac
  4024 ;;		_set_dac_a
  4025 ;;		_set_dac_b
  4026 ;;		_set_display_info
  4027 ;;		_set_load_relay_one
  4028 ;;		_set_load_relay_two
  4029 ;;		_set_vterm
  4030 ;;		_spinners
  4031 ;;		_sprintf
  4032 ;;		_srand
  4033 ;;		_start_adc_scan
  4034 ;;		_start_switch_handler
  4035 ;;		_static_soc
  4036 ;;		_update_lcd
  4037 ;;		_wait_lcd_done
  4038 ;; This function is called by:
  4039 ;;		Startup code after reset
  4040 ;; This function uses a reentrant model
  4041 ;;
  4042                           
  4043                           	psect	text0
  4044  011244                     __ptext0:
  4045                           	opt callstack 0
  4046  011244                     _main:
  4047                           	opt callstack 0
  4048                           
  4049                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4050  011244  0E11               	movlw	17
  4051  011246  26E1               	addwf	fsr1l,f,c
  4052  011248  0E00               	movlw	0
  4053  01124A  22E2               	addwfc	fsr1h,f,c
  4054                           
  4055                           ;main.c: 189:  UI_STATES mode;;main.c: 190:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4056                           ;stkvar	_inp_index @ sp[(-17)+11]
  4057                           
  4058                           ;incstack = 0
  4059  01124C  0EFA               	movlw	-6
  4060  01124E  6AE3               	clrf	plusw1,c
  4061                           
  4062                           ;stkvar	_i @ sp[(-17)+14]
  4063  011250  0EFD               	movlw	-3
  4064  011252  6AE3               	clrf	plusw1,c
  4065                           
  4066                           ;stkvar	_j @ sp[(-17)+13]
  4067  011254  0EFC               	movlw	-4
  4068  011256  6AE3               	clrf	plusw1,c
  4069  011258  2AE3               	incf	plusw1,f,c
  4070                           
  4071                           ;stkvar	_k @ sp[(-17)+12]
  4072  01125A  0EFB               	movlw	-5
  4073  01125C  6AE3               	clrf	plusw1,c
  4074  01125E  82E3               	bsf	plusw1,1,c
  4075                           
  4076                           ;main.c: 193:  SYSTEM_Initialize();
  4077  011260  EC11  F0DC         	call	_SYSTEM_Initialize	;wreg free
  4078                           
  4079                           ; BSR set to: 60
  4080                           ;main.c: 196:  (INTCON0bits.GIEH = 1);
  4081  011264  8ED2               	bsf	210,7,c	;volatile
  4082                           
  4083                           ; BSR set to: 60
  4084                           ;main.c: 199:  (INTCON0bits.GIEL = 1);
  4085  011266  8CD2               	bsf	210,6,c	;volatile
  4086                           
  4087                           ; BSR set to: 60
  4088                           ;main.c: 201:  V.ui_state = UI_STATE_INIT;
  4089  011268  0101               	movlb	1	; () banked
  4090  01126A  6B07               	clrf	_V& (0+255),b	;volatile
  4091                           
  4092                           ; BSR set to: 1
  4093                           ;main.c: 206:  WaitMs(300);
  4094  01126C  0E2C               	movlw	44
  4095  01126E  6EE6               	movwf	postinc1,c
  4096  011270  0E01               	movlw	1
  4097  011272  6EE6               	movwf	postinc1,c
  4098  011274  ECA1  F0DE         	call	_WaitMs	;wreg free
  4099                           
  4100                           ;main.c: 207:  if (PORTBbits.RB0) {
  4101  011278  A0CB               	btfss	203,0,c	;volatile
  4102  01127A  D004               	goto	l13386
  4103                           
  4104                           ;main.c: 208:   mode = UI_STATE_HOST;
  4105                           ;stkvar	_mode @ sp[(-17)+15]
  4106  01127C  0EFE               	movlw	-2
  4107  01127E  6AE3               	clrf	plusw1,c
  4108  011280  2AE3               	incf	plusw1,f,c
  4109                           
  4110                           ;main.c: 209:  } else {
  4111  011282  D004               	goto	l13388
  4112  011284                     l13386:
  4113                           
  4114                           ;main.c: 210:   mode = UI_STATE_LOG;
  4115                           ;stkvar	_mode @ sp[(-17)+15]
  4116  011284  0EFE               	movlw	-2
  4117  011286  6AE3               	clrf	plusw1,c
  4118  011288  80E3               	bsf	plusw1,0,c
  4119  01128A  82E3               	bsf	plusw1,1,c	;indir
  4120  01128C                     l13388:
  4121                           
  4122                           ;main.c: 213:  if (mode == UI_STATE_HOST) {
  4123                           ;stkvar	_mode @ sp[(-17)+15]
  4124  01128C  0EFE               	movlw	-2
  4125  01128E  04E3               	decf	plusw1,w,c
  4126  011290  A4D8               	btfss	status,2,c
  4127  011292  D007               	goto	l1332
  4128                           
  4129                           ;main.c: 214:   do { LATDbits.LATD0 = 1; } while(0);
  4130  011294  80BD               	bsf	189,0,c	;volatile
  4131                           
  4132                           ;main.c: 215:   V.mode_pwm = 70;
  4133  011296  0E00               	movlw	0
  4134  011298  0101               	movlb	1	; () banked
  4135  01129A  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  4136  01129C  0E46               	movlw	70
  4137  01129E  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  4138                           
  4139                           ;main.c: 216:  } else {
  4140  0112A0  D004               	goto	l13392
  4141  0112A2                     l1332:
  4142  0112A2  90BD               	bcf	189,0,c	;volatile
  4143                           
  4144                           ;main.c: 218:   V.mode_pwm = 0;
  4145  0112A4  0101               	movlb	1	; () banked
  4146  0112A6  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  4147  0112A8  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  4148  0112AA                     l13392:
  4149                           
  4150                           ; BSR set to: 1
  4151                           ;main.c: 220:  mode_lamp_dim(V.mode_pwm);
  4152  0112AA  0060  F673  FFE6   	movff	_V+149,postinc1
  4153  0112B0  0060  F677  FFE6   	movff	_V+150,postinc1
  4154  0112B6  EC45  F0E2         	call	_mode_lamp_dim	;wreg free
  4155  0112BA  D325               	goto	l13512
  4156  0112BC                     l13394:
  4157                           
  4158                           ; BSR set to: 1
  4159                           ;main.c: 228:    init_port_dma();
  4160  0112BC  EC24  F0DF         	call	_init_port_dma	;wreg free
  4161                           
  4162                           ; BSR set to: 59
  4163                           ;main.c: 230:    init_display();
  4164  0112C0  ECBE  F0D0         	call	_init_display	;wreg free
  4165                           
  4166                           ; BSR set to: 61
  4167                           ;main.c: 231:    eaDogM_WriteCommand(0b00001100);
  4168  0112C4  0E0C               	movlw	12
  4169  0112C6  6EE6               	movwf	postinc1,c
  4170  0112C8  ECB1  F0E2         	call	_eaDogM_WriteCommand	;wreg free
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;main.c: 235:    set_load_relay_one(1);
  4174  0112CC  0E01               	movlw	1
  4175  0112CE  6EE6               	movwf	postinc1,c
  4176  0112D0  EC99  F0E2         	call	_set_load_relay_one	;wreg free
  4177                           
  4178                           ;main.c: 236:    set_load_relay_two(1);
  4179  0112D4  0E01               	movlw	1
  4180  0112D6  6EE6               	movwf	postinc1,c
  4181  0112D8  EC91  F0E2         	call	_set_load_relay_two	;wreg free
  4182                           
  4183                           ;main.c: 238:    V.ui_state = mode;
  4184                           ;stkvar	_mode @ sp[(-17)+15]
  4185  0112DC  0EFE               	movlw	-2
  4186  0112DE  006F FF8C  F107    	movff	plusw1,_V	;volatile
  4187                           
  4188                           ;main.c: 239:    srand(1957);
  4189  0112E4  0EA5               	movlw	165
  4190  0112E6  6EE6               	movwf	postinc1,c
  4191  0112E8  0E07               	movlw	7
  4192  0112EA  6EE6               	movwf	postinc1,c
  4193  0112EC  ECBC  F0DE         	call	_srand	;wreg free
  4194                           
  4195                           ; BSR set to: 1
  4196                           ;main.c: 240:    set_vterm(0);
  4197  0112F0  0E00               	movlw	0
  4198  0112F2  6EE6               	movwf	postinc1,c
  4199  0112F4  ECFD  F0E1         	call	_set_vterm	;wreg free
  4200                           
  4201                           ;main.c: 241:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4202  0112F8  0E1E               	movlw	low STR_1
  4203  0112FA  6EE6               	movwf	postinc1,c
  4204  0112FC  0EFF               	movlw	high STR_1
  4205  0112FE  6EE6               	movwf	postinc1,c
  4206  011300  0E00               	movlw	0
  4207  011302  6EE6               	movwf	postinc1,c
  4208  011304  0E00               	movlw	0
  4209  011306  6EE6               	movwf	postinc1,c
  4210  011308  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  4211  01130C  0060  F007  FFE6   	movff	btemp,postinc1
  4212  011312  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4213  011318  0E04               	movlw	4
  4214  01131A  6EE6               	movwf	postinc1,c
  4215  01131C  ECBE  F0CF         	call	_sprintf	;wreg free
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;main.c: 242:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.16");
  4219  011320  0ED2               	movlw	low STR_3
  4220  011322  6EE6               	movwf	postinc1,c
  4221  011324  0EFF               	movlw	high STR_3
  4222  011326  6EE6               	movwf	postinc1,c
  4223  011328  0E09               	movlw	low STR_2
  4224  01132A  6EE6               	movwf	postinc1,c
  4225  01132C  0EFF               	movlw	high STR_2
  4226  01132E  6EE6               	movwf	postinc1,c
  4227  011330  0E00               	movlw	0
  4228  011332  6EE6               	movwf	postinc1,c
  4229  011334  0E01               	movlw	1
  4230  011336  6EE6               	movwf	postinc1,c
  4231  011338  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  4232  01133C  0060  F007  FFE6   	movff	btemp,postinc1
  4233  011342  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4234  011348  0E06               	movlw	6
  4235  01134A  6EE6               	movwf	postinc1,c
  4236  01134C  ECBE  F0CF         	call	_sprintf	;wreg free
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;main.c: 243:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4240  011350  0ECA               	movlw	low STR_4
  4241  011352  6EE6               	movwf	postinc1,c
  4242  011354  0EFE               	movlw	high STR_4
  4243  011356  6EE6               	movwf	postinc1,c
  4244  011358  0E00               	movlw	0
  4245  01135A  6EE6               	movwf	postinc1,c
  4246  01135C  0E02               	movlw	2
  4247  01135E  6EE6               	movwf	postinc1,c
  4248  011360  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  4249  011364  0060  F007  FFE6   	movff	btemp,postinc1
  4250  01136A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4251  011370  0E04               	movlw	4
  4252  011372  6EE6               	movwf	postinc1,c
  4253  011374  ECBE  F0CF         	call	_sprintf	;wreg free
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4257  011378  0EA0               	movlw	low STR_5
  4258  01137A  6EE6               	movwf	postinc1,c
  4259  01137C  0EFE               	movlw	high STR_5
  4260  01137E  6EE6               	movwf	postinc1,c
  4261  011380  0E02               	movlw	2
  4262  011382  6EE6               	movwf	postinc1,c
  4263  011384  0E00               	movlw	0
  4264  011386  6EE6               	movwf	postinc1,c
  4265  011388  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  4266  01138C  0060  F007  FFE6   	movff	btemp,postinc1
  4267  011392  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4268  011398  0E04               	movlw	4
  4269  01139A  6EE6               	movwf	postinc1,c
  4270  01139C  ECBE  F0CF         	call	_sprintf	;wreg free
  4271                           
  4272                           ; BSR set to: 0
  4273                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4274  0113A0  0EA0               	movlw	low STR_5
  4275  0113A2  6EE6               	movwf	postinc1,c
  4276  0113A4  0EFE               	movlw	high STR_5
  4277  0113A6  6EE6               	movwf	postinc1,c
  4278  0113A8  0E02               	movlw	2
  4279  0113AA  6EE6               	movwf	postinc1,c
  4280  0113AC  0E01               	movlw	1
  4281  0113AE  6EE6               	movwf	postinc1,c
  4282  0113B0  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  4283  0113B4  0060  F007  FFE6   	movff	btemp,postinc1
  4284  0113BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4285  0113C0  0E04               	movlw	4
  4286  0113C2  6EE6               	movwf	postinc1,c
  4287  0113C4  ECBE  F0CF         	call	_sprintf	;wreg free
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4291  0113C8  0EA0               	movlw	low STR_5
  4292  0113CA  6EE6               	movwf	postinc1,c
  4293  0113CC  0EFE               	movlw	high STR_5
  4294  0113CE  6EE6               	movwf	postinc1,c
  4295  0113D0  0E02               	movlw	2
  4296  0113D2  6EE6               	movwf	postinc1,c
  4297  0113D4  0E02               	movlw	2
  4298  0113D6  6EE6               	movwf	postinc1,c
  4299  0113D8  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  4300  0113DC  0060  F007  FFE6   	movff	btemp,postinc1
  4301  0113E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4302  0113E8  0E04               	movlw	4
  4303  0113EA  6EE6               	movwf	postinc1,c
  4304  0113EC  ECBE  F0CF         	call	_sprintf	;wreg free
  4305                           
  4306                           ; BSR set to: 0
  4307                           ;main.c: 247:    update_lcd(0);
  4308  0113F0  0E00               	movlw	0
  4309  0113F2  6EE6               	movwf	postinc1,c
  4310  0113F4  EC36  F0CF         	call	_update_lcd	;wreg free
  4311                           
  4312                           ;main.c: 248:    WaitMs(1000);
  4313  0113F8  0EE8               	movlw	232
  4314  0113FA  6EE6               	movwf	postinc1,c
  4315  0113FC  0E03               	movlw	3
  4316  0113FE  6EE6               	movwf	postinc1,c
  4317  011400  ECA1  F0DE         	call	_WaitMs	;wreg free
  4318                           
  4319                           ;main.c: 249:    StartTimer(TMR_DISPLAY, 250);
  4320  011404  0EFA               	movlw	250
  4321  011406  6EE6               	movwf	postinc1,c
  4322  011408  0E00               	movlw	0
  4323  01140A  6EE6               	movwf	postinc1,c
  4324  01140C  0E0A               	movlw	10
  4325  01140E  6EE6               	movwf	postinc1,c
  4326  011410  ECB2  F0DD         	call	_StartTimer	;wreg free
  4327                           
  4328                           ;main.c: 250:    StartTimer(TMR_ADC, 200);
  4329  011414  0EC8               	movlw	200
  4330  011416  6EE6               	movwf	postinc1,c
  4331  011418  0E00               	movlw	0
  4332  01141A  6EE6               	movwf	postinc1,c
  4333  01141C  0E01               	movlw	1
  4334  01141E  6EE6               	movwf	postinc1,c
  4335  011420  ECB2  F0DD         	call	_StartTimer	;wreg free
  4336                           
  4337                           ;main.c: 251:    StartTimer(TMR_INFO, 3000);
  4338  011424  0EB8               	movlw	184
  4339  011426  6EE6               	movwf	postinc1,c
  4340  011428  0E0B               	movlw	11
  4341  01142A  6EE6               	movwf	postinc1,c
  4342  01142C  0E07               	movlw	7
  4343  01142E  6EE6               	movwf	postinc1,c
  4344  011430  ECB2  F0DD         	call	_StartTimer	;wreg free
  4345                           
  4346                           ;main.c: 252:    StartTimer(TMR_FLIPPER, 1500);
  4347  011434  0EDC               	movlw	220
  4348  011436  6EE6               	movwf	postinc1,c
  4349  011438  0E05               	movlw	5
  4350  01143A  6EE6               	movwf	postinc1,c
  4351  01143C  0E0B               	movlw	11
  4352  01143E  6EE6               	movwf	postinc1,c
  4353  011440  ECB2  F0DD         	call	_StartTimer	;wreg free
  4354                           
  4355                           ;main.c: 253:    StartTimer(TMR_HELPDIS, 3000);
  4356  011444  0EB8               	movlw	184
  4357  011446  6EE6               	movwf	postinc1,c
  4358  011448  0E0B               	movlw	11
  4359  01144A  6EE6               	movwf	postinc1,c
  4360  01144C  0E09               	movlw	9
  4361  01144E  6EE6               	movwf	postinc1,c
  4362  011450  ECB2  F0DD         	call	_StartTimer	;wreg free
  4363                           
  4364                           ;main.c: 255:    start_adc_scan();
  4365  011454  EC28  F0DA         	call	_start_adc_scan	;wreg free
  4366                           
  4367                           ;main.c: 256:    start_switch_handler();
  4368  011458  ECBF  F0E1         	call	_start_switch_handler	;wreg free
  4369                           
  4370                           ; BSR set to: 57
  4371                           ;main.c: 257:    WaitMs(1000);
  4372  01145C  0EE8               	movlw	232
  4373  01145E  6EE6               	movwf	postinc1,c
  4374  011460  0E03               	movlw	3
  4375  011462  6EE6               	movwf	postinc1,c
  4376  011464  ECA1  F0DE         	call	_WaitMs	;wreg free
  4377                           
  4378                           ;main.c: 262:    i_ror = 1;
  4379                           ;stkvar	_i_ror @ sp[(-17)+16]
  4380  011468  0EFF               	movlw	-1
  4381  01146A  6AE3               	clrf	plusw1,c
  4382  01146C  2AE3               	incf	plusw1,f,c
  4383  01146E                     l13444:
  4384                           
  4385                           ;main.c: 264:     calc_ror_data();
  4386  01146E  ECEA  F0C6         	call	_calc_ror_data	;wreg free
  4387                           
  4388                           ;main.c: 265:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4389  011472  0E00               	movlw	0
  4390  011474  6EE6               	movwf	postinc1,c
  4391  011476  0E04               	movlw	4
  4392  011478  6EE6               	movwf	postinc1,c
  4393  01147A  ECB1  F0A9         	call	_conv_raw_result	;wreg free
  4394  01147E  0060  F007  FFE6   	movff	btemp,postinc1
  4395  011484  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4396  01148A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4397  011490  0060  F013  FFE6   	movff	btemp+3,postinc1
  4398  011496  0EB5               	movlw	low STR_8
  4399  011498  6EE6               	movwf	postinc1,c
  4400  01149A  0EFE               	movlw	high STR_8
  4401  01149C  6EE6               	movwf	postinc1,c
  4402  01149E  0E00               	movlw	0
  4403  0114A0  6EE6               	movwf	postinc1,c
  4404  0114A2  0E01               	movlw	1
  4405  0114A4  6EE6               	movwf	postinc1,c
  4406  0114A6  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  4407  0114AA  0060  F007  FFE6   	movff	btemp,postinc1
  4408  0114B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4409  0114B6  0E08               	movlw	8
  4410  0114B8  6EE6               	movwf	postinc1,c
  4411  0114BA  ECBE  F0CF         	call	_sprintf	;wreg free
  4412                           
  4413                           ; BSR set to: 0
  4414                           ;main.c: 266:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4415  0114BE  EE21  F36B         	lfsr	2,_C+108	;volatile
  4416  0114C2  006F FF7B FFE6     	movff	postinc2,postinc1
  4417  0114C8  006F FF7B FFE6     	movff	postinc2,postinc1
  4418  0114CE  006F FF7B FFE6     	movff	postinc2,postinc1
  4419  0114D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4420                           
  4421                           ;stkvar	_i_ror @ sp[(-21)+16]
  4422  0114DA  0EFB               	movlw	-5
  4423  0114DC  50E3               	movf	plusw1,w,c
  4424  0114DE  6EE6               	movwf	postinc1,c
  4425  0114E0  0E00               	movlw	0
  4426  0114E2  6EE6               	movwf	postinc1,c
  4427  0114E4  0E00               	movlw	0
  4428  0114E6  6EE6               	movwf	postinc1,c
  4429  0114E8  0E05               	movlw	5
  4430  0114EA  6EE6               	movwf	postinc1,c
  4431  0114EC  EC43  F0D0         	call	_spinners	;wreg free
  4432  0114F0  5001               	movf	btemp^0,w,c
  4433  0114F2  6EE6               	movwf	postinc1,c
  4434  0114F4  0E00               	movlw	0
  4435  0114F6  6EE6               	movwf	postinc1,c
  4436  0114F8  0E9B               	movlw	low STR_9
  4437  0114FA  6EE6               	movwf	postinc1,c
  4438  0114FC  0EFC               	movlw	high STR_9
  4439  0114FE  6EE6               	movwf	postinc1,c
  4440  011500  0E00               	movlw	0
  4441  011502  6EE6               	movwf	postinc1,c
  4442  011504  0E02               	movlw	2
  4443  011506  6EE6               	movwf	postinc1,c
  4444  011508  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  4445  01150C  0060  F007  FFE6   	movff	btemp,postinc1
  4446  011512  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4447  011518  0E0C               	movlw	12
  4448  01151A  6EE6               	movwf	postinc1,c
  4449  01151C  ECBE  F0CF         	call	_sprintf	;wreg free
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;main.c: 267:     update_lcd(0);
  4453  011520  0E00               	movlw	0
  4454  011522  6EE6               	movwf	postinc1,c
  4455  011524  EC36  F0CF         	call	_update_lcd	;wreg free
  4456                           
  4457                           ;main.c: 268:     clear_adc_scan();
  4458  011528  EC05  F0E3         	call	_clear_adc_scan	;wreg free
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;main.c: 269:     start_adc_scan();
  4462  01152C  EC28  F0DA         	call	_start_adc_scan	;wreg free
  4463                           
  4464                           ;main.c: 270:     WaitMs(2000);
  4465  011530  0ED0               	movlw	208
  4466  011532  6EE6               	movwf	postinc1,c
  4467  011534  0E07               	movlw	7
  4468  011536  6EE6               	movwf	postinc1,c
  4469  011538  ECA1  F0DE         	call	_WaitMs	;wreg free
  4470                           
  4471                           ;main.c: 273:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4472                           ;stkvar	_i_ror @ sp[(-17)+16]
  4473  01153C  0EFF               	movlw	-1
  4474  01153E  006F FF8C  F00C    	movff	plusw1,btemp+11
  4475  011544  2A0C               	incf	(btemp+11)^0,f,c
  4476  011546  0060  F033  FFE3   	movff	btemp+11,plusw1
  4477  01154C  060C               	decf	(btemp+11)^0,f,c
  4478  01154E  0E1E               	movlw	30
  4479  011550  600C               	cpfslt	(btemp+11)^0,c
  4480  011552  D01A               	goto	u12820
  4481  011554  EE21  F36B         	lfsr	2,_C+108	;volatile
  4482  011558  006F FF7B FFE6     	movff	postinc2,postinc1
  4483  01155E  006F FF7B FFE6     	movff	postinc2,postinc1
  4484  011564  006F FF7B FFE6     	movff	postinc2,postinc1
  4485  01156A  006F FF7B FFE6     	movff	postinc2,postinc1
  4486  011570  0E42               	movlw	66
  4487  011572  6EE6               	movwf	postinc1,c
  4488  011574  0E60               	movlw	96
  4489  011576  6EE6               	movwf	postinc1,c
  4490  011578  0E65               	movlw	101
  4491  01157A  6EE6               	movwf	postinc1,c
  4492  01157C  0E3C               	movlw	60
  4493  01157E  6EE6               	movwf	postinc1,c
  4494  011580  EC26  F0C9         	call	___flge	;wreg free
  4495  011584  A001               	btfss	btemp& (0+255),0,c
  4496  011586  D773               	goto	l13444
  4497  011588                     u12820:
  4498                           
  4499                           ;main.c: 275:    static_soc();
  4500  011588  ECEC  F0DA         	call	_static_soc	;wreg free
  4501                           
  4502                           ;main.c: 276:    init_bsoc();
  4503  01158C  EC25  F0BE         	call	_init_bsoc	;wreg free
  4504                           
  4505                           ;main.c: 277:    set_load_relay_one(0);
  4506  011590  0E00               	movlw	0
  4507  011592  6EE6               	movwf	postinc1,c
  4508  011594  EC99  F0E2         	call	_set_load_relay_one	;wreg free
  4509                           
  4510                           ;main.c: 278:    set_load_relay_two(0);
  4511  011598  0E00               	movlw	0
  4512  01159A  6EE6               	movwf	postinc1,c
  4513  01159C  EC91  F0E2         	call	_set_load_relay_two	;wreg free
  4514                           
  4515                           ;main.c: 279:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4516  0115A0  EE21  F3B5         	lfsr	2,_C+182	;volatile
  4517  0115A4  006F FF78  F00B    	movff	postinc2,btemp+10
  4518  0115AA  006F FF74  F00C    	movff	postdec2,btemp+11
  4519  0115B0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4520  0115B6  0060  F033  FFE6   	movff	btemp+11,postinc1
  4521  0115BC  0E56               	movlw	low STR_10
  4522  0115BE  6EE6               	movwf	postinc1,c
  4523  0115C0  0EFD               	movlw	high STR_10
  4524  0115C2  6EE6               	movwf	postinc1,c
  4525  0115C4  0E00               	movlw	0
  4526  0115C6  6EE6               	movwf	postinc1,c
  4527  0115C8  0E00               	movlw	0
  4528  0115CA  6EE6               	movwf	postinc1,c
  4529  0115CC  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  4530  0115D0  0060  F007  FFE6   	movff	btemp,postinc1
  4531  0115D6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4532  0115DC  0E06               	movlw	6
  4533  0115DE  6EE6               	movwf	postinc1,c
  4534  0115E0  ECBE  F0CF         	call	_sprintf	;wreg free
  4535                           
  4536                           ; BSR set to: 0
  4537                           ;main.c: 280:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4538  0115E4  EE21  F38F         	lfsr	2,_C+144	;volatile
  4539  0115E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4540  0115EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4541  0115F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4542  0115FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4543  011600  0E32               	movlw	low STR_11
  4544  011602  6EE6               	movwf	postinc1,c
  4545  011604  0EFE               	movlw	high STR_11
  4546  011606  6EE6               	movwf	postinc1,c
  4547  011608  0E00               	movlw	0
  4548  01160A  6EE6               	movwf	postinc1,c
  4549  01160C  0E01               	movlw	1
  4550  01160E  6EE6               	movwf	postinc1,c
  4551  011610  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  4552  011614  0060  F007  FFE6   	movff	btemp,postinc1
  4553  01161A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4554  011620  0E08               	movlw	8
  4555  011622  6EE6               	movwf	postinc1,c
  4556  011624  ECBE  F0CF         	call	_sprintf	;wreg free
  4557                           
  4558                           ; BSR set to: 0
  4559                           ;main.c: 281:    update_lcd(0);
  4560  011628  0E00               	movlw	0
  4561  01162A  6EE6               	movwf	postinc1,c
  4562  01162C  EC36  F0CF         	call	_update_lcd	;wreg free
  4563                           
  4564                           ;main.c: 282:    WaitMs(2000);
  4565  011630  0ED0               	movlw	208
  4566  011632  6EE6               	movwf	postinc1,c
  4567  011634  0E07               	movlw	7
  4568  011636  6EE6               	movwf	postinc1,c
  4569  011638  ECA1  F0DE         	call	_WaitMs	;wreg free
  4570                           
  4571                           ;main.c: 283:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  4572  01163C  0EDF               	movlw	low STR_12
  4573  01163E  6EE6               	movwf	postinc1,c
  4574  011640  0EFE               	movlw	high STR_12
  4575  011642  6EE6               	movwf	postinc1,c
  4576  011644  0E00               	movlw	0
  4577  011646  6EE6               	movwf	postinc1,c
  4578  011648  0E00               	movlw	0
  4579  01164A  6EE6               	movwf	postinc1,c
  4580  01164C  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  4581  011650  0060  F007  FFE6   	movff	btemp,postinc1
  4582  011656  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4583  01165C  0E04               	movlw	4
  4584  01165E  6EE6               	movwf	postinc1,c
  4585  011660  ECBE  F0CF         	call	_sprintf	;wreg free
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;main.c: 284:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  4589  011664  0EF4               	movlw	low STR_13
  4590  011666  6EE6               	movwf	postinc1,c
  4591  011668  0EFE               	movlw	high STR_13
  4592  01166A  6EE6               	movwf	postinc1,c
  4593  01166C  0E00               	movlw	0
  4594  01166E  6EE6               	movwf	postinc1,c
  4595  011670  0E01               	movlw	1
  4596  011672  6EE6               	movwf	postinc1,c
  4597  011674  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  4598  011678  0060  F007  FFE6   	movff	btemp,postinc1
  4599  01167E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4600  011684  0E04               	movlw	4
  4601  011686  6EE6               	movwf	postinc1,c
  4602  011688  ECBE  F0CF         	call	_sprintf	;wreg free
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;main.c: 285:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  4606  01168C  0E48               	movlw	low STR_14
  4607  01168E  6EE6               	movwf	postinc1,c
  4608  011690  0EFF               	movlw	high STR_14
  4609  011692  6EE6               	movwf	postinc1,c
  4610  011694  0E00               	movlw	0
  4611  011696  6EE6               	movwf	postinc1,c
  4612  011698  0E02               	movlw	2
  4613  01169A  6EE6               	movwf	postinc1,c
  4614  01169C  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  4615  0116A0  0060  F007  FFE6   	movff	btemp,postinc1
  4616  0116A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4617  0116AC  0E04               	movlw	4
  4618  0116AE  6EE6               	movwf	postinc1,c
  4619  0116B0  ECBE  F0CF         	call	_sprintf	;wreg free
  4620                           
  4621                           ; BSR set to: 0
  4622                           ;main.c: 286:    update_lcd(0);
  4623  0116B4  0E00               	movlw	0
  4624  0116B6  6EE6               	movwf	postinc1,c
  4625  0116B8  EC36  F0CF         	call	_update_lcd	;wreg free
  4626                           
  4627                           ;main.c: 287:    uint16_t i_esr = 1;
  4628  0116BC  0E01               	movlw	1
  4629  0116BE  6E0B               	movwf	(btemp+10)^0,c
  4630  0116C0  0E00               	movlw	0
  4631  0116C2  6E0C               	movwf	(btemp+11)^0,c
  4632                           
  4633                           ;stkvar	_i_esr @ sp[(-17)+8]
  4634  0116C4  0EF7               	movlw	-9
  4635  0116C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4636  0116CC  0EF8               	movlw	-8
  4637  0116CE  0060  F033  FFE3   	movff	btemp+11,plusw1
  4638                           
  4639                           ;main.c: 289:    float esr_temp;;main.c: 290:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4640  0116D4  D06D               	goto	l13502
  4641  0116D6                     l13490:
  4642                           
  4643                           ;main.c: 291:     WaitMs(110);
  4644  0116D6  0E6E               	movlw	110
  4645  0116D8  6EE6               	movwf	postinc1,c
  4646  0116DA  0E00               	movlw	0
  4647  0116DC  6EE6               	movwf	postinc1,c
  4648  0116DE  ECA1  F0DE         	call	_WaitMs	;wreg free
  4649                           
  4650                           ;main.c: 292:     shape = (uint8_t) fabsf(esr_temp);
  4651                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4652  0116E2  0EF3               	movlw	-13
  4653  0116E4  006F FF8F FFE6     	movff	plusw1,postinc1
  4654  0116EA  006F FF8F FFE6     	movff	plusw1,postinc1
  4655  0116F0  006F FF8F FFE6     	movff	plusw1,postinc1
  4656  0116F6  006F FF8F FFE6     	movff	plusw1,postinc1
  4657  0116FC  ECC5  F0D4         	call	_fabsf	;wreg free
  4658  011700  0060  F007  FFE6   	movff	btemp,postinc1
  4659  011706  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4660  01170C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4661  011712  0060  F013  FFE6   	movff	btemp+3,postinc1
  4662  011718  EC6D  F0C8         	call	___fltol	;wreg free
  4663  01171C  0060  F004  F00C   	movff	btemp,btemp+11
  4664                           
  4665                           ;stkvar	_shape @ sp[(-17)+10]
  4666  011722  0EF9               	movlw	-7
  4667  011724  0060  F033  FFE3   	movff	btemp+11,plusw1
  4668                           
  4669                           ;main.c: 293:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4670  01172A  0E00               	movlw	0
  4671  01172C  6EE6               	movwf	postinc1,c
  4672                           
  4673                           ;stkvar	_shape @ sp[(-18)+10]
  4674  01172E  0EF8               	movlw	-8
  4675  011730  50E3               	movf	plusw1,w,c
  4676  011732  6EE6               	movwf	postinc1,c
  4677  011734  EC43  F0D0         	call	_spinners	;wreg free
  4678  011738  5001               	movf	btemp^0,w,c
  4679  01173A  6EE6               	movwf	postinc1,c
  4680  01173C  0E00               	movlw	0
  4681  01173E  6EE6               	movwf	postinc1,c
  4682  011740  0E00               	movlw	0
  4683  011742  6EE6               	movwf	postinc1,c
  4684  011744  0E00               	movlw	0
  4685  011746  6EE6               	movwf	postinc1,c
  4686  011748  EC43  F0D0         	call	_spinners	;wreg free
  4687  01174C  5001               	movf	btemp^0,w,c
  4688  01174E  6EE6               	movwf	postinc1,c
  4689  011750  0E00               	movlw	0
  4690  011752  6EE6               	movwf	postinc1,c
  4691  011754  0E33               	movlw	low STR_15
  4692  011756  6EE6               	movwf	postinc1,c
  4693  011758  0EFF               	movlw	high STR_15
  4694  01175A  6EE6               	movwf	postinc1,c
  4695  01175C  0E00               	movlw	0
  4696  01175E  6EE6               	movwf	postinc1,c
  4697  011760  0E02               	movlw	2
  4698  011762  6EE6               	movwf	postinc1,c
  4699  011764  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  4700  011768  0060  F007  FFE6   	movff	btemp,postinc1
  4701  01176E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4702  011774  0E08               	movlw	8
  4703  011776  6EE6               	movwf	postinc1,c
  4704  011778  ECBE  F0CF         	call	_sprintf	;wreg free
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;main.c: 294:     update_lcd(0);
  4708  01177C  0E00               	movlw	0
  4709  01177E  6EE6               	movwf	postinc1,c
  4710  011780  EC36  F0CF         	call	_update_lcd	;wreg free
  4711                           
  4712                           ;main.c: 296:     if (i_esr++ > 512)
  4713                           ;stkvar	_i_esr @ sp[(-17)+8]
  4714  011784  50E1               	movf	fsr1l,w,c
  4715  011786  0FF7               	addlw	-9
  4716  011788  6ED9               	movwf	fsr2l,c
  4717  01178A  50E2               	movf	fsr1h,w,c
  4718  01178C  6EDA               	movwf	fsr2h,c
  4719  01178E  0EFF               	movlw	255
  4720  011790  22DA               	addwfc	fsr2h,f,c
  4721  011792  006F FF7C  F00B    	movff	indf2,btemp+10
  4722  011798  0E01               	movlw	1
  4723  01179A  26DE               	addwf	postinc2,f,c
  4724  01179C  006F FF7C  F00C    	movff	indf2,btemp+11
  4725  0117A2  0E00               	movlw	0
  4726  0117A4  22DD               	addwfc	postdec2,f,c
  4727  0117A6  040B               	decf	(btemp+10)^0,w,c
  4728  0117A8  0E02               	movlw	2
  4729  0117AA  580C               	subwfb	(btemp+11)^0,w,c
  4730  0117AC  B0D8               	btfsc	status,0,c
  4731  0117AE  D017               	goto	u12840
  4732  0117B0                     l13502:
  4733                           
  4734                           ;main.c: 290:    while ((esr_temp = esr_check(0)) < 0.0) {
  4735  0117B0  0E00               	movlw	0
  4736  0117B2  6EE6               	movwf	postinc1,c
  4737  0117B4  ECE0  F0B8         	call	_esr_check	;wreg free
  4738                           
  4739                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4740  0117B8  0EF3               	movlw	-13
  4741  0117BA  0060  F007  FFE3   	movff	btemp,plusw1
  4742  0117C0  0EF4               	movlw	-12
  4743  0117C2  0060  F00B  FFE3   	movff	btemp+1,plusw1
  4744  0117C8  0EF5               	movlw	-11
  4745  0117CA  0060  F00F  FFE3   	movff	btemp+2,plusw1
  4746  0117D0  0EF6               	movlw	-10
  4747  0117D2  0060  F013  FFE3   	movff	btemp+3,plusw1
  4748  0117D8  0EF6               	movlw	-10
  4749  0117DA  BEE3               	btfsc	plusw1,7,c
  4750  0117DC  D77C               	goto	l13490
  4751  0117DE                     u12840:
  4752                           
  4753                           ;main.c: 299:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4754  0117DE  EE21  F387         	lfsr	2,_C+136	;volatile
  4755  0117E2  006F FF7B FFE6     	movff	postinc2,postinc1
  4756  0117E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4757  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4758  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4759  0117FA  0E40               	movlw	low STR_16
  4760  0117FC  6EE6               	movwf	postinc1,c
  4761  0117FE  0EFD               	movlw	high STR_16
  4762  011800  6EE6               	movwf	postinc1,c
  4763  011802  0E00               	movlw	0
  4764  011804  6EE6               	movwf	postinc1,c
  4765  011806  0E00               	movlw	0
  4766  011808  6EE6               	movwf	postinc1,c
  4767  01180A  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  4768  01180E  0060  F007  FFE6   	movff	btemp,postinc1
  4769  011814  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4770  01181A  0E08               	movlw	8
  4771  01181C  6EE6               	movwf	postinc1,c
  4772  01181E  ECBE  F0CF         	call	_sprintf	;wreg free
  4773                           
  4774                           ;main.c: 300:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4775  011822  EE22  F00D         	lfsr	2,_C+270	;volatile
  4776  011826  006F FF7B FFE6     	movff	postinc2,postinc1
  4777  01182C  006F FF7B FFE6     	movff	postinc2,postinc1
  4778  011832  006F FF7B FFE6     	movff	postinc2,postinc1
  4779  011838  006F FF7B FFE6     	movff	postinc2,postinc1
  4780  01183E  EE22  F019         	lfsr	2,_C+282	;volatile
  4781  011842  006F FF7B FFE6     	movff	postinc2,postinc1
  4782  011848  006F FF7B FFE6     	movff	postinc2,postinc1
  4783  01184E  006F FF7B FFE6     	movff	postinc2,postinc1
  4784  011854  006F FF7B FFE6     	movff	postinc2,postinc1
  4785  01185A  0E67               	movlw	low STR_17
  4786  01185C  6EE6               	movwf	postinc1,c
  4787  01185E  0EFC               	movlw	high STR_17
  4788  011860  6EE6               	movwf	postinc1,c
  4789  011862  0E00               	movlw	0
  4790  011864  6EE6               	movwf	postinc1,c
  4791  011866  0E01               	movlw	1
  4792  011868  6EE6               	movwf	postinc1,c
  4793  01186A  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  4794  01186E  0060  F007  FFE6   	movff	btemp,postinc1
  4795  011874  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4796  01187A  0E0C               	movlw	12
  4797  01187C  6EE6               	movwf	postinc1,c
  4798  01187E  ECBE  F0CF         	call	_sprintf	;wreg free
  4799                           
  4800                           ;main.c: 301:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4801  011882  EE22  F011         	lfsr	2,_C+274	;volatile
  4802  011886  006F FF7B FFE6     	movff	postinc2,postinc1
  4803  01188C  006F FF7B FFE6     	movff	postinc2,postinc1
  4804  011892  006F FF7B FFE6     	movff	postinc2,postinc1
  4805  011898  006F FF7B FFE6     	movff	postinc2,postinc1
  4806  01189E  EE22  F01D         	lfsr	2,_C+286	;volatile
  4807  0118A2  006F FF7B FFE6     	movff	postinc2,postinc1
  4808  0118A8  006F FF7B FFE6     	movff	postinc2,postinc1
  4809  0118AE  006F FF7B FFE6     	movff	postinc2,postinc1
  4810  0118B4  006F FF7B FFE6     	movff	postinc2,postinc1
  4811  0118BA  0E81               	movlw	low STR_18
  4812  0118BC  6EE6               	movwf	postinc1,c
  4813  0118BE  0EFC               	movlw	high STR_18
  4814  0118C0  6EE6               	movwf	postinc1,c
  4815  0118C2  0E00               	movlw	0
  4816  0118C4  6EE6               	movwf	postinc1,c
  4817  0118C6  0E02               	movlw	2
  4818  0118C8  6EE6               	movwf	postinc1,c
  4819  0118CA  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  4820  0118CE  0060  F007  FFE6   	movff	btemp,postinc1
  4821  0118D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4822  0118DA  0E0C               	movlw	12
  4823  0118DC  6EE6               	movwf	postinc1,c
  4824  0118DE  ECBE  F0CF         	call	_sprintf	;wreg free
  4825                           
  4826                           ;main.c: 302:    update_lcd(0);
  4827  0118E2  0E00               	movlw	0
  4828  0118E4  6EE6               	movwf	postinc1,c
  4829  0118E6  EC36  F0CF         	call	_update_lcd	;wreg free
  4830                           
  4831                           ;main.c: 303:    WaitMs(5000);
  4832  0118EA  0E88               	movlw	136
  4833  0118EC  6EE6               	movwf	postinc1,c
  4834  0118EE  0E13               	movlw	19
  4835  0118F0  6EE6               	movwf	postinc1,c
  4836  0118F2  ECA1  F0DE         	call	_WaitMs	;wreg free
  4837                           
  4838                           ;main.c: 304:    V.system_stable = 1;
  4839  0118F6  0E01               	movlw	1
  4840  0118F8  0101               	movlb	1	; () banked
  4841  0118FA  6FB5               	movwf	(_V+174)& (0+255),b	;volatile
  4842                           
  4843                           ;main.c: 305:    break;
  4844  0118FC  D01B               	goto	l13514
  4845  0118FE                     l1348:
  4846                           
  4847                           ; BSR set to: 1
  4848                           ;main.c: 311:    P.SYSTEM_STABLE = 1;
  4849  0118FE  81F0               	bsf	(_P+1)& (0+255),0,b	;volatile
  4850                           
  4851                           ;main.c: 312:    break;
  4852  011900  D019               	goto	l13514
  4853  011902                     l1350:
  4854                           
  4855                           ; BSR set to: 1
  4856                           ;main.c: 315:    V.ui_state = UI_STATE_INIT;
  4857  011902  6B07               	clrf	_V& (0+255),b	;volatile
  4858                           
  4859                           ;main.c: 316:    break;
  4860  011904  D017               	goto	l13514
  4861  011906                     l13512:
  4862  011906  0101               	movlb	1	; () banked
  4863  011908  5107               	movf	_V& (0+255),w,b	;volatile
  4864  01190A  6E0B               	movwf	(btemp+10)^0,c
  4865  01190C  6A0C               	clrf	(btemp+11)^0,c
  4866                           
  4867                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4868                           ; Switch size 1, requested type "simple"
  4869                           ; Number of cases is 1, Range of values is 0 to 0
  4870                           ; switch strategies available:
  4871                           ; Name         Instructions Cycles
  4872                           ; simple_byte            4     3 (average)
  4873                           ;	Chosen strategy is simple_byte
  4874  01190E  500C               	movf	(btemp+11)^0,w,c
  4875  011910  0A00               	xorlw	0	; case 0
  4876  011912  A4D8               	btfss	status,2,c
  4877  011914  D7F6               	goto	l1350
  4878                           
  4879                           ; BSR set to: 1
  4880                           ; Switch size 1, requested type "simple"
  4881                           ; Number of cases is 5, Range of values is 0 to 5
  4882                           ; switch strategies available:
  4883                           ; Name         Instructions Cycles
  4884                           ; simple_byte           16     9 (average)
  4885                           ;	Chosen strategy is simple_byte
  4886  011916  500B               	movf	(btemp+10)^0,w,c
  4887  011918  0A00               	xorlw	0	; case 0
  4888  01191A  B4D8               	btfsc	status,2,c
  4889  01191C  D4CF               	goto	l13394
  4890  01191E  0A01               	xorlw	1	; case 1
  4891  011920  B4D8               	btfsc	status,2,c
  4892  011922  D008               	goto	l13514
  4893  011924  0A02               	xorlw	2	; case 3
  4894  011926  B4D8               	btfsc	status,2,c
  4895  011928  D005               	goto	l13514
  4896  01192A  0A07               	xorlw	7	; case 4
  4897  01192C  B4D8               	btfsc	status,2,c
  4898  01192E  D7E7               	goto	l1348
  4899  011930  0A01               	xorlw	1	; case 5
  4900  011932  D7E7               	goto	l1350
  4901  011934                     l13514:
  4902                           
  4903                           ; BSR set to: 1
  4904                           ;main.c: 319:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4905  011934  0E01               	movlw	1
  4906  011936  6EE6               	movwf	postinc1,c
  4907  011938  EC07  F0E0         	call	_TimerDone	;wreg free
  4908  01193C  5001               	movf	btemp^0,w,c
  4909  01193E  B4D8               	btfsc	status,2,c
  4910  011940  D013               	goto	l13526
  4911  011942  ECF5  F0E2         	call	_check_adc_scan	;wreg free
  4912  011946  5001               	movf	btemp^0,w,c
  4913  011948  B4D8               	btfsc	status,2,c
  4914  01194A  D00E               	goto	l13526
  4915                           
  4916                           ;main.c: 323:    convert_adc_data();
  4917  01194C  EC0E  F0D4         	call	_convert_adc_data	;wreg free
  4918                           
  4919                           ;main.c: 327:    clear_adc_scan();
  4920  011950  EC05  F0E3         	call	_clear_adc_scan	;wreg free
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;main.c: 328:    start_adc_scan();
  4924  011954  EC28  F0DA         	call	_start_adc_scan	;wreg free
  4925                           
  4926                           ;main.c: 329:    StartTimer(TMR_ADC, 200);
  4927  011958  0EC8               	movlw	200
  4928  01195A  6EE6               	movwf	postinc1,c
  4929  01195C  0E00               	movlw	0
  4930  01195E  6EE6               	movwf	postinc1,c
  4931  011960  0E01               	movlw	1
  4932  011962  6EE6               	movwf	postinc1,c
  4933  011964  ECB2  F0DD         	call	_StartTimer	;wreg free
  4934  011968                     l13526:
  4935                           
  4936                           ;main.c: 336:   if (TimerDone(TMR_DISPLAY)) {
  4937                           
  4938                           ;main.c: 332:   if (V.ticks) {
  4939  011968  0E0A               	movlw	10
  4940  01196A  6EE6               	movwf	postinc1,c
  4941  01196C  EC07  F0E0         	call	_TimerDone	;wreg free
  4942  011970  5001               	movf	btemp^0,w,c
  4943  011972  B4D8               	btfsc	status,2,c
  4944  011974  EF69  F091         	goto	l13610
  4945                           
  4946                           ;main.c: 337:    if (TimerDone(TMR_HELPDIS)) {
  4947  011978  0E09               	movlw	9
  4948  01197A  6EE6               	movwf	postinc1,c
  4949  01197C  EC07  F0E0         	call	_TimerDone	;wreg free
  4950  011980  5001               	movf	btemp^0,w,c
  4951  011982  B4D8               	btfsc	status,2,c
  4952  011984  D004               	goto	l13534
  4953                           
  4954                           ;main.c: 338:     set_display_info(DIS_STR);
  4955  011986  0E00               	movlw	0
  4956  011988  6EE6               	movwf	postinc1,c
  4957  01198A  EC0C  F0E2         	call	_set_display_info	;wreg free
  4958  01198E                     l13534:
  4959                           
  4960                           ;main.c: 340:    calc_model_data();
  4961  01198E  EC7B  F0AE         	call	_calc_model_data	;wreg free
  4962                           
  4963                           ; BSR set to: 57
  4964                           ;main.c: 347:     hid_display(&H);
  4965                           
  4966                           ;main.c: 342:    if (0) {
  4967  011992  0EC6               	movlw	low _H
  4968  011994  6EE6               	movwf	postinc1,c
  4969  011996  0E01               	movlw	high _H
  4970  011998  6EE6               	movwf	postinc1,c
  4971  01199A  EC83  F0C3         	call	_hid_display	;wreg free
  4972                           
  4973                           ;main.c: 348:     switch (H.hid_display) {
  4974  01199E  EFFF  F090         	goto	l13582
  4975  0119A2                     l1358:
  4976                           
  4977                           ; BSR set to: 1
  4978                           ;main.c: 350:      V.calib = 0;
  4979  0119A2  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  4980                           
  4981                           ; BSR set to: 1
  4982                           ;main.c: 351:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  4983  0119A4  EE22  F021         	lfsr	2,_C+290	;volatile
  4984  0119A8  50DF               	movf	indf2,w,c
  4985  0119AA  A4D8               	btfss	status,2,c
  4986  0119AC  D002               	goto	l13544
  4987                           
  4988                           ; BSR set to: 1
  4989  0119AE  0E20               	movlw	32
  4990  0119B0  D001               	goto	L1
  4991  0119B2                     l13544:
  4992                           
  4993                           ; BSR set to: 1
  4994  0119B2  0E44               	movlw	68
  4995  0119B4                     L1:
  4996  0119B4  6E0B               	movwf	(btemp+10)^0,c
  4997  0119B6  0E00               	movlw	0
  4998  0119B8  6E0C               	movwf	(btemp+11)^0,c
  4999                           
  5000                           ;stkvar	_main$3770 @ sp[(-17)+2]
  5001  0119BA  0EF1               	movlw	-15
  5002  0119BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5003  0119C2  0EF2               	movlw	-14
  5004  0119C4  0060  F033  FFE3   	movff	btemp+11,plusw1
  5005                           
  5006                           ; BSR set to: 1
  5007  0119CA  EE21  F37B         	lfsr	2,_C+124	;volatile
  5008  0119CE  006F FF7B FFE6     	movff	postinc2,postinc1
  5009  0119D4  006F FF7B FFE6     	movff	postinc2,postinc1
  5010  0119DA  006F FF7B FFE6     	movff	postinc2,postinc1
  5011  0119E0  006F FF7B FFE6     	movff	postinc2,postinc1
  5012                           
  5013                           ;stkvar	_main$3770 @ sp[(-21)+2]
  5014  0119E6  0EED               	movlw	-19
  5015  0119E8  006F FF8F FFE6     	movff	plusw1,postinc1
  5016  0119EE  006F FF8F FFE6     	movff	plusw1,postinc1
  5017  0119F4  0E1C               	movlw	low STR_22
  5018  0119F6  6EE6               	movwf	postinc1,c
  5019  0119F8  0EFE               	movlw	high STR_22
  5020  0119FA  6EE6               	movwf	postinc1,c
  5021  0119FC  0E00               	movlw	0
  5022  0119FE  6EE6               	movwf	postinc1,c
  5023  011A00  0E00               	movlw	0
  5024  011A02  6EE6               	movwf	postinc1,c
  5025  011A04  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  5026  011A08  0060  F007  FFE6   	movff	btemp,postinc1
  5027  011A0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5028  011A14  0E0A               	movlw	10
  5029  011A16  6EE6               	movwf	postinc1,c
  5030  011A18  ECBE  F0CF         	call	_sprintf	;wreg free
  5031                           
  5032                           ; BSR set to: 0
  5033                           ;main.c: 352:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  5034  011A1C  EE21  F373         	lfsr	2,_C+116	;volatile
  5035  011A20  006F FF7B FFE6     	movff	postinc2,postinc1
  5036  011A26  006F FF7B FFE6     	movff	postinc2,postinc1
  5037  011A2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5038  011A32  006F FF7B FFE6     	movff	postinc2,postinc1
  5039  011A38  0E06               	movlw	low STR_23
  5040  011A3A  6EE6               	movwf	postinc1,c
  5041  011A3C  0EFE               	movlw	high STR_23
  5042  011A3E  6EE6               	movwf	postinc1,c
  5043  011A40  0E00               	movlw	0
  5044  011A42  6EE6               	movwf	postinc1,c
  5045  011A44  0E01               	movlw	1
  5046  011A46  6EE6               	movwf	postinc1,c
  5047  011A48  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  5048  011A4C  0060  F007  FFE6   	movff	btemp,postinc1
  5049  011A52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5050  011A58  0E08               	movlw	8
  5051  011A5A  6EE6               	movwf	postinc1,c
  5052  011A5C  ECBE  F0CF         	call	_sprintf	;wreg free
  5053                           
  5054                           ; BSR set to: 0
  5055                           ;main.c: 353:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  5056  011A60  EE21  F377         	lfsr	2,_C+120	;volatile
  5057  011A64  006F FF7B FFE6     	movff	postinc2,postinc1
  5058  011A6A  006F FF7B FFE6     	movff	postinc2,postinc1
  5059  011A70  006F FF7B FFE6     	movff	postinc2,postinc1
  5060  011A76  006F FF7B FFE6     	movff	postinc2,postinc1
  5061  011A7C  0EF0               	movlw	low STR_24
  5062  011A7E  6EE6               	movwf	postinc1,c
  5063  011A80  0EFD               	movlw	high STR_24
  5064  011A82  6EE6               	movwf	postinc1,c
  5065  011A84  0E00               	movlw	0
  5066  011A86  6EE6               	movwf	postinc1,c
  5067  011A88  0E02               	movlw	2
  5068  011A8A  6EE6               	movwf	postinc1,c
  5069  011A8C  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  5070  011A90  0060  F007  FFE6   	movff	btemp,postinc1
  5071  011A96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5072  011A9C  0E08               	movlw	8
  5073  011A9E  6EE6               	movwf	postinc1,c
  5074  011AA0  ECBE  F0CF         	call	_sprintf	;wreg free
  5075                           
  5076                           ; BSR set to: 0
  5077                           ;main.c: 355:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5078  011AA4  EE22  F021         	lfsr	2,_C+290	;volatile
  5079  011AA8  50DF               	movf	indf2,w,c
  5080  011AAA  A4D8               	btfss	status,2,c
  5081  011AAC  D002               	goto	l13556
  5082                           
  5083                           ; BSR set to: 0
  5084  011AAE  0E20               	movlw	32
  5085  011AB0  D001               	goto	L2
  5086  011AB2                     l13556:
  5087                           
  5088                           ; BSR set to: 0
  5089  011AB2  0E44               	movlw	68
  5090  011AB4                     L2:
  5091  011AB4  6E0B               	movwf	(btemp+10)^0,c
  5092  011AB6  0E00               	movlw	0
  5093  011AB8  6E0C               	movwf	(btemp+11)^0,c
  5094                           
  5095                           ;stkvar	_main$3774 @ sp[(-17)+0]
  5096  011ABA  0EEF               	movlw	-17
  5097  011ABC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5098  011AC2  0EF0               	movlw	-16
  5099  011AC4  0060  F033  FFE3   	movff	btemp+11,plusw1
  5100                           
  5101                           ; BSR set to: 0
  5102  011ACA  EE21  F3A7         	lfsr	2,_C+168	;volatile
  5103  011ACE  006F FF7B FFE6     	movff	postinc2,postinc1
  5104  011AD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5105  011ADA  006F FF7B FFE6     	movff	postinc2,postinc1
  5106  011AE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5107                           
  5108                           ;stkvar	_main$3774 @ sp[(-21)+0]
  5109  011AE6  0EEB               	movlw	-21
  5110  011AE8  006F FF8F FFE6     	movff	plusw1,postinc1
  5111  011AEE  006F FF8F FFE6     	movff	plusw1,postinc1
  5112  011AF4  0EDA               	movlw	low STR_25
  5113  011AF6  6EE6               	movwf	postinc1,c
  5114  011AF8  0EFD               	movlw	high STR_25
  5115  011AFA  6EE6               	movwf	postinc1,c
  5116  011AFC  0E01               	movlw	1
  5117  011AFE  6EE6               	movwf	postinc1,c
  5118  011B00  0E00               	movlw	0
  5119  011B02  6EE6               	movwf	postinc1,c
  5120  011B04  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  5121  011B08  0060  F007  FFE6   	movff	btemp,postinc1
  5122  011B0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5123  011B14  0E0A               	movlw	10
  5124  011B16  6EE6               	movwf	postinc1,c
  5125  011B18  ECBE  F0CF         	call	_sprintf	;wreg free
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;main.c: 356:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5129  011B1C  EE21  F3AF         	lfsr	2,_C+176	;volatile
  5130  011B20  006F FF7B FFE6     	movff	postinc2,postinc1
  5131  011B26  006F FF7B FFE6     	movff	postinc2,postinc1
  5132  011B2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5133  011B32  006F FF7B FFE6     	movff	postinc2,postinc1
  5134  011B38  0EC4               	movlw	low STR_26
  5135  011B3A  6EE6               	movwf	postinc1,c
  5136  011B3C  0EFD               	movlw	high STR_26
  5137  011B3E  6EE6               	movwf	postinc1,c
  5138  011B40  0E01               	movlw	1
  5139  011B42  6EE6               	movwf	postinc1,c
  5140  011B44  0E01               	movlw	1
  5141  011B46  6EE6               	movwf	postinc1,c
  5142  011B48  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  5143  011B4C  0060  F007  FFE6   	movff	btemp,postinc1
  5144  011B52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5145  011B58  0E08               	movlw	8
  5146  011B5A  6EE6               	movwf	postinc1,c
  5147  011B5C  ECBE  F0CF         	call	_sprintf	;wreg free
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;main.c: 357:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5151  011B60  EE21  F3AB         	lfsr	2,_C+172	;volatile
  5152  011B64  006F FF7B FFE6     	movff	postinc2,postinc1
  5153  011B6A  006F FF7B FFE6     	movff	postinc2,postinc1
  5154  011B70  006F FF7B FFE6     	movff	postinc2,postinc1
  5155  011B76  006F FF7B FFE6     	movff	postinc2,postinc1
  5156  011B7C  0EAE               	movlw	low STR_27
  5157  011B7E  6EE6               	movwf	postinc1,c
  5158  011B80  0EFD               	movlw	high STR_27
  5159  011B82  6EE6               	movwf	postinc1,c
  5160  011B84  0E01               	movlw	1
  5161  011B86  6EE6               	movwf	postinc1,c
  5162  011B88  0E02               	movlw	2
  5163  011B8A  6EE6               	movwf	postinc1,c
  5164  011B8C  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  5165  011B90  0060  F007  FFE6   	movff	btemp,postinc1
  5166  011B96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5167  011B9C  0E08               	movlw	8
  5168  011B9E  6EE6               	movwf	postinc1,c
  5169  011BA0  ECBE  F0CF         	call	_sprintf	;wreg free
  5170                           
  5171                           ;main.c: 358:      break;
  5172  011BA4  D342               	goto	l13584
  5173  011BA6                     l1368:
  5174                           
  5175                           ; BSR set to: 1
  5176                           ;main.c: 360:      V.calib = 0;
  5177  011BA6  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5178                           
  5179                           ; BSR set to: 1
  5180                           ;main.c: 361:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5181  011BA8  EE21  F303         	lfsr	2,_C+4	;volatile
  5182  011BAC  006F FF7B FFE6     	movff	postinc2,postinc1
  5183  011BB2  006F FF7B FFE6     	movff	postinc2,postinc1
  5184  011BB8  006F FF7B FFE6     	movff	postinc2,postinc1
  5185  011BBE  006F FF7B FFE6     	movff	postinc2,postinc1
  5186  011BC4  EE21  F313         	lfsr	2,_C+20	;volatile
  5187  011BC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5188  011BCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5189  011BD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5190  011BDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5191  011BE0  0E74               	movlw	low STR_28
  5192  011BE2  6EE6               	movwf	postinc1,c
  5193  011BE4  0EFE               	movlw	high STR_28
  5194  011BE6  6EE6               	movwf	postinc1,c
  5195  011BE8  0E00               	movlw	0
  5196  011BEA  6EE6               	movwf	postinc1,c
  5197  011BEC  0E00               	movlw	0
  5198  011BEE  6EE6               	movwf	postinc1,c
  5199  011BF0  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  5200  011BF4  0060  F007  FFE6   	movff	btemp,postinc1
  5201  011BFA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5202  011C00  0E0C               	movlw	12
  5203  011C02  6EE6               	movwf	postinc1,c
  5204  011C04  ECBE  F0CF         	call	_sprintf	;wreg free
  5205                           
  5206                           ;main.c: 362:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5207  011C08  EE21  F2FF         	lfsr	2,_C
  5208  011C0C  006F FF7B FFE6     	movff	postinc2,postinc1
  5209  011C12  006F FF7B FFE6     	movff	postinc2,postinc1
  5210  011C18  006F FF7B FFE6     	movff	postinc2,postinc1
  5211  011C1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5212  011C24  EE21  F30F         	lfsr	2,_C+16	;volatile
  5213  011C28  006F FF7B FFE6     	movff	postinc2,postinc1
  5214  011C2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5215  011C34  006F FF7B FFE6     	movff	postinc2,postinc1
  5216  011C3A  006F FF7B FFE6     	movff	postinc2,postinc1
  5217  011C40  0E48               	movlw	low STR_29
  5218  011C42  6EE6               	movwf	postinc1,c
  5219  011C44  0EFE               	movlw	high STR_29
  5220  011C46  6EE6               	movwf	postinc1,c
  5221  011C48  0E00               	movlw	0
  5222  011C4A  6EE6               	movwf	postinc1,c
  5223  011C4C  0E01               	movlw	1
  5224  011C4E  6EE6               	movwf	postinc1,c
  5225  011C50  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  5226  011C54  0060  F007  FFE6   	movff	btemp,postinc1
  5227  011C5A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5228  011C60  0E0C               	movlw	12
  5229  011C62  6EE6               	movwf	postinc1,c
  5230  011C64  ECBE  F0CF         	call	_sprintf	;wreg free
  5231                           
  5232                           ;main.c: 363:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5233  011C68  EE21  F33F         	lfsr	2,_C+64	;volatile
  5234  011C6C  006F FF7B FFE6     	movff	postinc2,postinc1
  5235  011C72  006F FF7B FFE6     	movff	postinc2,postinc1
  5236  011C78  006F FF7B FFE6     	movff	postinc2,postinc1
  5237  011C7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5238  011C84  EE21  F307         	lfsr	2,_C+8	;volatile
  5239  011C88  006F FF7B FFE6     	movff	postinc2,postinc1
  5240  011C8E  006F FF7B FFE6     	movff	postinc2,postinc1
  5241  011C94  006F FF7B FFE6     	movff	postinc2,postinc1
  5242  011C9A  006F FF7B FFE6     	movff	postinc2,postinc1
  5243  011CA0  0E5E               	movlw	low STR_30
  5244  011CA2  6EE6               	movwf	postinc1,c
  5245  011CA4  0EFE               	movlw	high STR_30
  5246  011CA6  6EE6               	movwf	postinc1,c
  5247  011CA8  0E00               	movlw	0
  5248  011CAA  6EE6               	movwf	postinc1,c
  5249  011CAC  0E02               	movlw	2
  5250  011CAE  6EE6               	movwf	postinc1,c
  5251  011CB0  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  5252  011CB4  0060  F007  FFE6   	movff	btemp,postinc1
  5253  011CBA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5254  011CC0  0E0C               	movlw	12
  5255  011CC2  6EE6               	movwf	postinc1,c
  5256  011CC4  ECBE  F0CF         	call	_sprintf	;wreg free
  5257                           
  5258                           ;main.c: 365:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  5259  011CC8  EE21  F39F         	lfsr	2,_C+160	;volatile
  5260  011CCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5261  011CD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5262  011CD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5263  011CDE  006F FF7B FFE6     	movff	postinc2,postinc1
  5264  011CE4  0E6C               	movlw	low STR_31
  5265  011CE6  6EE6               	movwf	postinc1,c
  5266  011CE8  0EFD               	movlw	high STR_31
  5267  011CEA  6EE6               	movwf	postinc1,c
  5268  011CEC  0E01               	movlw	1
  5269  011CEE  6EE6               	movwf	postinc1,c
  5270  011CF0  0E00               	movlw	0
  5271  011CF2  6EE6               	movwf	postinc1,c
  5272  011CF4  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  5273  011CF8  0060  F007  FFE6   	movff	btemp,postinc1
  5274  011CFE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5275  011D04  0E08               	movlw	8
  5276  011D06  6EE6               	movwf	postinc1,c
  5277  011D08  ECBE  F0CF         	call	_sprintf	;wreg free
  5278                           
  5279                           ;main.c: 366:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  5280  011D0C  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5281  011D10  006F FF7B FFE6     	movff	postinc2,postinc1
  5282  011D16  006F FF7B FFE6     	movff	postinc2,postinc1
  5283  011D1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5284  011D22  006F FF7B FFE6     	movff	postinc2,postinc1
  5285  011D28  0E82               	movlw	low STR_32
  5286  011D2A  6EE6               	movwf	postinc1,c
  5287  011D2C  0EFD               	movlw	high STR_32
  5288  011D2E  6EE6               	movwf	postinc1,c
  5289  011D30  0E01               	movlw	1
  5290  011D32  6EE6               	movwf	postinc1,c
  5291  011D34  0E01               	movlw	1
  5292  011D36  6EE6               	movwf	postinc1,c
  5293  011D38  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  5294  011D3C  0060  F007  FFE6   	movff	btemp,postinc1
  5295  011D42  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5296  011D48  0E08               	movlw	8
  5297  011D4A  6EE6               	movwf	postinc1,c
  5298  011D4C  ECBE  F0CF         	call	_sprintf	;wreg free
  5299                           
  5300                           ;main.c: 367:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  5301  011D50  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5302  011D54  006F FF7B FFE6     	movff	postinc2,postinc1
  5303  011D5A  006F FF7B FFE6     	movff	postinc2,postinc1
  5304  011D60  006F FF7B FFE6     	movff	postinc2,postinc1
  5305  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
  5306  011D6C  EE21  F39F         	lfsr	2,_C+160	;volatile
  5307  011D70  006F FF7B FFE6     	movff	postinc2,postinc1
  5308  011D76  006F FF7B FFE6     	movff	postinc2,postinc1
  5309  011D7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5310  011D82  006F FF7B FFE6     	movff	postinc2,postinc1
  5311  011D88  EC16  F0A3         	call	___fladd	;wreg free
  5312  011D8C  0060  F007  FFE6   	movff	btemp,postinc1
  5313  011D92  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5314  011D98  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5315  011D9E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5316  011DA4  0E98               	movlw	low STR_33
  5317  011DA6  6EE6               	movwf	postinc1,c
  5318  011DA8  0EFD               	movlw	high STR_33
  5319  011DAA  6EE6               	movwf	postinc1,c
  5320  011DAC  0E01               	movlw	1
  5321  011DAE  6EE6               	movwf	postinc1,c
  5322  011DB0  0E02               	movlw	2
  5323  011DB2  6EE6               	movwf	postinc1,c
  5324  011DB4  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  5325  011DB8  0060  F007  FFE6   	movff	btemp,postinc1
  5326  011DBE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5327  011DC4  0E08               	movlw	8
  5328  011DC6  6EE6               	movwf	postinc1,c
  5329  011DC8  ECBE  F0CF         	call	_sprintf	;wreg free
  5330                           
  5331                           ;main.c: 368:      break;
  5332  011DCC  D22E               	goto	l13584
  5333  011DCE                     l1369:
  5334                           
  5335                           ; BSR set to: 1
  5336                           ;main.c: 370:      V.calib = 0;
  5337  011DCE  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5338                           
  5339                           ; BSR set to: 1
  5340                           ;main.c: 371:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  5341  011DD0  EE21  F37F         	lfsr	2,_C+128	;volatile
  5342  011DD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5343  011DDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5344  011DE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5345  011DE6  006F FF7B FFE6     	movff	postinc2,postinc1
  5346  011DEC  0EE4               	movlw	low STR_34
  5347  011DEE  6EE6               	movwf	postinc1,c
  5348  011DF0  0EFC               	movlw	high STR_34
  5349  011DF2  6EE6               	movwf	postinc1,c
  5350  011DF4  0E00               	movlw	0
  5351  011DF6  6EE6               	movwf	postinc1,c
  5352  011DF8  0E00               	movlw	0
  5353  011DFA  6EE6               	movwf	postinc1,c
  5354  011DFC  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  5355  011E00  0060  F007  FFE6   	movff	btemp,postinc1
  5356  011E06  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5357  011E0C  0E08               	movlw	8
  5358  011E0E  6EE6               	movwf	postinc1,c
  5359  011E10  ECBE  F0CF         	call	_sprintf	;wreg free
  5360                           
  5361                           ;main.c: 372:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  5362  011E14  EE21  F393         	lfsr	2,_C+148	;volatile
  5363  011E18  006F FF7B FFE6     	movff	postinc2,postinc1
  5364  011E1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5365  011E24  006F FF7B FFE6     	movff	postinc2,postinc1
  5366  011E2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5367  011E30  EE21  F38F         	lfsr	2,_C+144	;volatile
  5368  011E34  006F FF7B FFE6     	movff	postinc2,postinc1
  5369  011E3A  006F FF7B FFE6     	movff	postinc2,postinc1
  5370  011E40  006F FF7B FFE6     	movff	postinc2,postinc1
  5371  011E46  006F FF7B FFE6     	movff	postinc2,postinc1
  5372  011E4C  0E29               	movlw	low STR_35
  5373  011E4E  6EE6               	movwf	postinc1,c
  5374  011E50  0EFD               	movlw	high STR_35
  5375  011E52  6EE6               	movwf	postinc1,c
  5376  011E54  0E00               	movlw	0
  5377  011E56  6EE6               	movwf	postinc1,c
  5378  011E58  0E01               	movlw	1
  5379  011E5A  6EE6               	movwf	postinc1,c
  5380  011E5C  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  5381  011E60  0060  F007  FFE6   	movff	btemp,postinc1
  5382  011E66  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5383  011E6C  0E0C               	movlw	12
  5384  011E6E  6EE6               	movwf	postinc1,c
  5385  011E70  ECBE  F0CF         	call	_sprintf	;wreg free
  5386                           
  5387                           ;main.c: 373:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  5388  011E74  EE21  F30F         	lfsr	2,_C+16	;volatile
  5389  011E78  006F FF7B FFE6     	movff	postinc2,postinc1
  5390  011E7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5391  011E84  006F FF7B FFE6     	movff	postinc2,postinc1
  5392  011E8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5393  011E90  EE21  F3B3         	lfsr	2,_C+180	;volatile
  5394  011E94  006F FF78  F00B    	movff	postinc2,btemp+10
  5395  011E9A  006F FF74  F00C    	movff	postdec2,btemp+11
  5396  011EA0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5397  011EA6  0060  F033  FFE6   	movff	btemp+11,postinc1
  5398  011EAC  EE21  F3B5         	lfsr	2,_C+182	;volatile
  5399  011EB0  006F FF78  F00B    	movff	postinc2,btemp+10
  5400  011EB6  006F FF74  F00C    	movff	postdec2,btemp+11
  5401  011EBC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5402  011EC2  0060  F033  FFE6   	movff	btemp+11,postinc1
  5403  011EC8  0E00               	movlw	0
  5404  011ECA  6EE6               	movwf	postinc1,c
  5405  011ECC  0E05               	movlw	5
  5406  011ECE  6EE6               	movwf	postinc1,c
  5407  011ED0  EC43  F0D0         	call	_spinners	;wreg free
  5408  011ED4  5001               	movf	btemp^0,w,c
  5409  011ED6  6EE6               	movwf	postinc1,c
  5410  011ED8  0E00               	movlw	0
  5411  011EDA  6EE6               	movwf	postinc1,c
  5412  011EDC  0E4A               	movlw	low STR_36
  5413  011EDE  6EE6               	movwf	postinc1,c
  5414  011EE0  0EFC               	movlw	high STR_36
  5415  011EE2  6EE6               	movwf	postinc1,c
  5416  011EE4  0E00               	movlw	0
  5417  011EE6  6EE6               	movwf	postinc1,c
  5418  011EE8  0E02               	movlw	2
  5419  011EEA  6EE6               	movwf	postinc1,c
  5420  011EEC  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  5421  011EF0  0060  F007  FFE6   	movff	btemp,postinc1
  5422  011EF6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5423  011EFC  0E0E               	movlw	14
  5424  011EFE  6EE6               	movwf	postinc1,c
  5425  011F00  ECBE  F0CF         	call	_sprintf	;wreg free
  5426                           
  5427                           ;main.c: 375:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  5428  011F04  EE21  F387         	lfsr	2,_C+136	;volatile
  5429  011F08  006F FF7B FFE6     	movff	postinc2,postinc1
  5430  011F0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5431  011F14  006F FF7B FFE6     	movff	postinc2,postinc1
  5432  011F1A  006F FF7B FFE6     	movff	postinc2,postinc1
  5433  011F20  0ECD               	movlw	low STR_37
  5434  011F22  6EE6               	movwf	postinc1,c
  5435  011F24  0EFC               	movlw	high STR_37
  5436  011F26  6EE6               	movwf	postinc1,c
  5437  011F28  0E01               	movlw	1
  5438  011F2A  6EE6               	movwf	postinc1,c
  5439  011F2C  0E00               	movlw	0
  5440  011F2E  6EE6               	movwf	postinc1,c
  5441  011F30  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  5442  011F34  0060  F007  FFE6   	movff	btemp,postinc1
  5443  011F3A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5444  011F40  0E08               	movlw	8
  5445  011F42  6EE6               	movwf	postinc1,c
  5446  011F44  ECBE  F0CF         	call	_sprintf	;wreg free
  5447                           
  5448                           ;main.c: 376:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  5449  011F48  EE22  F00D         	lfsr	2,_C+270	;volatile
  5450  011F4C  006F FF7B FFE6     	movff	postinc2,postinc1
  5451  011F52  006F FF7B FFE6     	movff	postinc2,postinc1
  5452  011F58  006F FF7B FFE6     	movff	postinc2,postinc1
  5453  011F5E  006F FF7B FFE6     	movff	postinc2,postinc1
  5454  011F64  EE22  F019         	lfsr	2,_C+282	;volatile
  5455  011F68  006F FF7B FFE6     	movff	postinc2,postinc1
  5456  011F6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5457  011F74  006F FF7B FFE6     	movff	postinc2,postinc1
  5458  011F7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5459  011F80  0EFB               	movlw	low STR_38
  5460  011F82  6EE6               	movwf	postinc1,c
  5461  011F84  0EFC               	movlw	high STR_38
  5462  011F86  6EE6               	movwf	postinc1,c
  5463  011F88  0E01               	movlw	1
  5464  011F8A  6EE6               	movwf	postinc1,c
  5465  011F8C  0E01               	movlw	1
  5466  011F8E  6EE6               	movwf	postinc1,c
  5467  011F90  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  5468  011F94  0060  F007  FFE6   	movff	btemp,postinc1
  5469  011F9A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5470  011FA0  0E0C               	movlw	12
  5471  011FA2  6EE6               	movwf	postinc1,c
  5472  011FA4  ECBE  F0CF         	call	_sprintf	;wreg free
  5473                           
  5474                           ;main.c: 377:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  5475  011FA8  EE22  F011         	lfsr	2,_C+274	;volatile
  5476  011FAC  006F FF7B FFE6     	movff	postinc2,postinc1
  5477  011FB2  006F FF7B FFE6     	movff	postinc2,postinc1
  5478  011FB8  006F FF7B FFE6     	movff	postinc2,postinc1
  5479  011FBE  006F FF7B FFE6     	movff	postinc2,postinc1
  5480  011FC4  EE22  F01D         	lfsr	2,_C+286	;volatile
  5481  011FC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5482  011FCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5483  011FD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5484  011FDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5485  011FE0  0E12               	movlw	low STR_39
  5486  011FE2  6EE6               	movwf	postinc1,c
  5487  011FE4  0EFD               	movlw	high STR_39
  5488  011FE6  6EE6               	movwf	postinc1,c
  5489  011FE8  0E01               	movlw	1
  5490  011FEA  6EE6               	movwf	postinc1,c
  5491  011FEC  0E02               	movlw	2
  5492  011FEE  6EE6               	movwf	postinc1,c
  5493  011FF0  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  5494  011FF4  0060  F007  FFE6   	movff	btemp,postinc1
  5495  011FFA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5496  012000  0E0C               	movlw	12
  5497  012002  6EE6               	movwf	postinc1,c
  5498  012004  ECBE  F0CF         	call	_sprintf	;wreg free
  5499                           
  5500                           ;main.c: 378:      break;
  5501  012008  D110               	goto	l13584
  5502  01200A                     l13568:
  5503                           
  5504                           ; BSR set to: 1
  5505                           ;main.c: 380:      if (!V.calib) {
  5506  01200A  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  5507  01200C  A4D8               	btfss	status,2,c
  5508  01200E  D02D               	goto	l13572
  5509                           
  5510                           ; BSR set to: 1
  5511                           ;main.c: 381:       lp_filter(0.0, i, -1);
  5512  012010  0EFF               	movlw	255
  5513  012012  6EE6               	movwf	postinc1,c
  5514                           
  5515                           ;stkvar	_i @ sp[(-18)+14]
  5516  012014  0EFC               	movlw	-4
  5517  012016  50E3               	movf	plusw1,w,c
  5518  012018  6EE6               	movwf	postinc1,c
  5519  01201A  0E00               	movlw	0
  5520  01201C  6EE6               	movwf	postinc1,c
  5521  01201E  0E00               	movlw	0
  5522  012020  6EE6               	movwf	postinc1,c
  5523  012022  0E00               	movlw	0
  5524  012024  6EE6               	movwf	postinc1,c
  5525  012026  0E00               	movlw	0
  5526  012028  6EE6               	movwf	postinc1,c
  5527  01202A  EC71  F0C4         	call	_lp_filter	;wreg free
  5528                           
  5529                           ;main.c: 382:       lp_filter(0.0, j, -1);
  5530  01202E  0EFF               	movlw	255
  5531  012030  6EE6               	movwf	postinc1,c
  5532                           
  5533                           ;stkvar	_j @ sp[(-18)+13]
  5534  012032  0EFB               	movlw	-5
  5535  012034  50E3               	movf	plusw1,w,c
  5536  012036  6EE6               	movwf	postinc1,c
  5537  012038  0E00               	movlw	0
  5538  01203A  6EE6               	movwf	postinc1,c
  5539  01203C  0E00               	movlw	0
  5540  01203E  6EE6               	movwf	postinc1,c
  5541  012040  0E00               	movlw	0
  5542  012042  6EE6               	movwf	postinc1,c
  5543  012044  0E00               	movlw	0
  5544  012046  6EE6               	movwf	postinc1,c
  5545  012048  EC71  F0C4         	call	_lp_filter	;wreg free
  5546                           
  5547                           ;main.c: 383:       lp_filter(0.0, k, -1);
  5548  01204C  0EFF               	movlw	255
  5549  01204E  6EE6               	movwf	postinc1,c
  5550                           
  5551                           ;stkvar	_k @ sp[(-18)+12]
  5552  012050  0EFA               	movlw	-6
  5553  012052  50E3               	movf	plusw1,w,c
  5554  012054  6EE6               	movwf	postinc1,c
  5555  012056  0E00               	movlw	0
  5556  012058  6EE6               	movwf	postinc1,c
  5557  01205A  0E00               	movlw	0
  5558  01205C  6EE6               	movwf	postinc1,c
  5559  01205E  0E00               	movlw	0
  5560  012060  6EE6               	movwf	postinc1,c
  5561  012062  0E00               	movlw	0
  5562  012064  6EE6               	movwf	postinc1,c
  5563  012066  EC71  F0C4         	call	_lp_filter	;wreg free
  5564  01206A                     l13572:
  5565                           
  5566                           ;main.c: 385:      V.calib = 1;
  5567  01206A  0E01               	movlw	1
  5568  01206C  0101               	movlb	1	; () banked
  5569  01206E  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  5570                           
  5571                           ; BSR set to: 1
  5572                           ;main.c: 386:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index + 1);
  5573                           ;stkvar	_inp_index @ sp[(-17)+11]
  5574  012070  0EFA               	movlw	-6
  5575  012072  50E3               	movf	plusw1,w,c
  5576  012074  6E0B               	movwf	(btemp+10)^0,c
  5577  012076  6A0C               	clrf	(btemp+11)^0,c
  5578  012078  0E01               	movlw	1
  5579  01207A  260B               	addwf	(btemp+10)^0,f,c
  5580  01207C  0E00               	movlw	0
  5581  01207E  220C               	addwfc	(btemp+11)^0,f,c
  5582  012080  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5583  012086  0060  F033  FFE6   	movff	btemp+11,postinc1
  5584                           
  5585                           ;stkvar	_i @ sp[(-19)+14]
  5586  01208C  0EFB               	movlw	-5
  5587  01208E  50E3               	movf	plusw1,w,c
  5588  012090  0D04               	mullw	4
  5589  012092  0EFF               	movlw	low _C
  5590  012094  24F3               	addwf	243,w,c
  5591  012096  6ED9               	movwf	fsr2l,c
  5592  012098  0E06               	movlw	high _C
  5593  01209A  20F4               	addwfc	prodh,w,c
  5594  01209C  6EDA               	movwf	fsr2h,c
  5595  01209E  006F FF7B FFE6     	movff	postinc2,postinc1
  5596  0120A4  006F FF7B FFE6     	movff	postinc2,postinc1
  5597  0120AA  006F FF7B FFE6     	movff	postinc2,postinc1
  5598  0120B0  006F FF7B FFE6     	movff	postinc2,postinc1
  5599                           
  5600                           ;stkvar	_i @ sp[(-23)+14]
  5601  0120B6  0EF7               	movlw	-9
  5602  0120B8  50E3               	movf	plusw1,w,c
  5603  0120BA  6EE6               	movwf	postinc1,c
  5604  0120BC  EC1B  F0E2         	call	_get_raw_result	;wreg free
  5605  0120C0  0060  F007  FFE6   	movff	btemp,postinc1
  5606  0120C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5607  0120CC  0E8A               	movlw	low STR_40
  5608  0120CE  6EE6               	movwf	postinc1,c
  5609  0120D0  0EFE               	movlw	high STR_40
  5610  0120D2  6EE6               	movwf	postinc1,c
  5611  0120D4  0E00               	movlw	0
  5612  0120D6  6EE6               	movwf	postinc1,c
  5613  0120D8  0E00               	movlw	0
  5614  0120DA  6EE6               	movwf	postinc1,c
  5615  0120DC  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  5616  0120E0  0060  F007  FFE6   	movff	btemp,postinc1
  5617  0120E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5618  0120EC  0E0C               	movlw	12
  5619  0120EE  6EE6               	movwf	postinc1,c
  5620  0120F0  ECBE  F0CF         	call	_sprintf	;wreg free
  5621                           
  5622                           ; BSR set to: 0
  5623                           ;main.c: 387:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 2);
  5624                           ;stkvar	_inp_index @ sp[(-17)+11]
  5625  0120F4  0EFA               	movlw	-6
  5626  0120F6  50E3               	movf	plusw1,w,c
  5627  0120F8  6E0B               	movwf	(btemp+10)^0,c
  5628  0120FA  6A0C               	clrf	(btemp+11)^0,c
  5629  0120FC  0E02               	movlw	2
  5630  0120FE  260B               	addwf	(btemp+10)^0,f,c
  5631  012100  0E00               	movlw	0
  5632  012102  220C               	addwfc	(btemp+11)^0,f,c
  5633  012104  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5634  01210A  0060  F033  FFE6   	movff	btemp+11,postinc1
  5635                           
  5636                           ;stkvar	_j @ sp[(-19)+13]
  5637  012110  0EFA               	movlw	-6
  5638  012112  50E3               	movf	plusw1,w,c
  5639  012114  0D04               	mullw	4
  5640  012116  0EFF               	movlw	low _C
  5641  012118  24F3               	addwf	243,w,c
  5642  01211A  6ED9               	movwf	fsr2l,c
  5643  01211C  0E06               	movlw	high _C
  5644  01211E  20F4               	addwfc	prodh,w,c
  5645  012120  6EDA               	movwf	fsr2h,c
  5646  012122  006F FF7B FFE6     	movff	postinc2,postinc1
  5647  012128  006F FF7B FFE6     	movff	postinc2,postinc1
  5648  01212E  006F FF7B FFE6     	movff	postinc2,postinc1
  5649  012134  006F FF7B FFE6     	movff	postinc2,postinc1
  5650                           
  5651                           ;stkvar	_j @ sp[(-23)+13]
  5652  01213A  0EF6               	movlw	-10
  5653  01213C  50E3               	movf	plusw1,w,c
  5654  01213E  6EE6               	movwf	postinc1,c
  5655  012140  EC1B  F0E2         	call	_get_raw_result	;wreg free
  5656  012144  0060  F007  FFE6   	movff	btemp,postinc1
  5657  01214A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5658  012150  0E8A               	movlw	low STR_40
  5659  012152  6EE6               	movwf	postinc1,c
  5660  012154  0EFE               	movlw	high STR_40
  5661  012156  6EE6               	movwf	postinc1,c
  5662  012158  0E00               	movlw	0
  5663  01215A  6EE6               	movwf	postinc1,c
  5664  01215C  0E01               	movlw	1
  5665  01215E  6EE6               	movwf	postinc1,c
  5666  012160  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  5667  012164  0060  F007  FFE6   	movff	btemp,postinc1
  5668  01216A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5669  012170  0E0C               	movlw	12
  5670  012172  6EE6               	movwf	postinc1,c
  5671  012174  ECBE  F0CF         	call	_sprintf	;wreg free
  5672                           
  5673                           ; BSR set to: 0
  5674                           ;main.c: 388:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 3);
  5675                           ;stkvar	_inp_index @ sp[(-17)+11]
  5676  012178  0EFA               	movlw	-6
  5677  01217A  50E3               	movf	plusw1,w,c
  5678  01217C  6E0B               	movwf	(btemp+10)^0,c
  5679  01217E  6A0C               	clrf	(btemp+11)^0,c
  5680  012180  0E03               	movlw	3
  5681  012182  260B               	addwf	(btemp+10)^0,f,c
  5682  012184  0E00               	movlw	0
  5683  012186  220C               	addwfc	(btemp+11)^0,f,c
  5684  012188  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5685  01218E  0060  F033  FFE6   	movff	btemp+11,postinc1
  5686                           
  5687                           ;stkvar	_k @ sp[(-19)+12]
  5688  012194  0EF9               	movlw	-7
  5689  012196  50E3               	movf	plusw1,w,c
  5690  012198  0D04               	mullw	4
  5691  01219A  0EFF               	movlw	low _C
  5692  01219C  24F3               	addwf	243,w,c
  5693  01219E  6ED9               	movwf	fsr2l,c
  5694  0121A0  0E06               	movlw	high _C
  5695  0121A2  20F4               	addwfc	prodh,w,c
  5696  0121A4  6EDA               	movwf	fsr2h,c
  5697  0121A6  006F FF7B FFE6     	movff	postinc2,postinc1
  5698  0121AC  006F FF7B FFE6     	movff	postinc2,postinc1
  5699  0121B2  006F FF7B FFE6     	movff	postinc2,postinc1
  5700  0121B8  006F FF7B FFE6     	movff	postinc2,postinc1
  5701                           
  5702                           ;stkvar	_k @ sp[(-23)+12]
  5703  0121BE  0EF5               	movlw	-11
  5704  0121C0  50E3               	movf	plusw1,w,c
  5705  0121C2  6EE6               	movwf	postinc1,c
  5706  0121C4  EC1B  F0E2         	call	_get_raw_result	;wreg free
  5707  0121C8  0060  F007  FFE6   	movff	btemp,postinc1
  5708  0121CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5709  0121D4  0E8A               	movlw	low STR_40
  5710  0121D6  6EE6               	movwf	postinc1,c
  5711  0121D8  0EFE               	movlw	high STR_40
  5712  0121DA  6EE6               	movwf	postinc1,c
  5713  0121DC  0E00               	movlw	0
  5714  0121DE  6EE6               	movwf	postinc1,c
  5715  0121E0  0E02               	movlw	2
  5716  0121E2  6EE6               	movwf	postinc1,c
  5717  0121E4  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  5718  0121E8  0060  F007  FFE6   	movff	btemp,postinc1
  5719  0121EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5720  0121F4  0E0C               	movlw	12
  5721  0121F6  6EE6               	movwf	postinc1,c
  5722  0121F8  ECBE  F0CF         	call	_sprintf	;wreg free
  5723                           
  5724                           ;main.c: 389:      break;
  5725  0121FC  D016               	goto	l13584
  5726  0121FE                     l13582:
  5727  0121FE  0101               	movlb	1	; () banked
  5728  012200  51C6               	movf	_H& (0+255),w,b
  5729  012202  6E0B               	movwf	(btemp+10)^0,c
  5730  012204  6A0C               	clrf	(btemp+11)^0,c
  5731                           
  5732                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5733                           ; Switch size 1, requested type "simple"
  5734                           ; Number of cases is 1, Range of values is 0 to 0
  5735                           ; switch strategies available:
  5736                           ; Name         Instructions Cycles
  5737                           ; simple_byte            4     3 (average)
  5738                           ;	Chosen strategy is simple_byte
  5739  012206  500C               	movf	(btemp+11)^0,w,c
  5740  012208  0A00               	xorlw	0	; case 0
  5741  01220A  A4D8               	btfss	status,2,c
  5742  01220C  D00E               	goto	l13584
  5743                           
  5744                           ; BSR set to: 1
  5745                           ; Switch size 1, requested type "simple"
  5746                           ; Number of cases is 4, Range of values is 0 to 3
  5747                           ; switch strategies available:
  5748                           ; Name         Instructions Cycles
  5749                           ; simple_byte           13     7 (average)
  5750                           ;	Chosen strategy is simple_byte
  5751  01220E  500B               	movf	(btemp+10)^0,w,c
  5752  012210  0A00               	xorlw	0	; case 0
  5753  012212  B4D8               	btfsc	status,2,c
  5754  012214  D4C8               	goto	l1368
  5755  012216  0A01               	xorlw	1	; case 1
  5756  012218  B4D8               	btfsc	status,2,c
  5757  01221A  EFD1  F08C         	goto	l1358
  5758  01221E  0A03               	xorlw	3	; case 2
  5759  012220  B4D8               	btfsc	status,2,c
  5760  012222  D5D5               	goto	l1369
  5761  012224  0A01               	xorlw	1	; case 3
  5762  012226  B4D8               	btfsc	status,2,c
  5763  012228  D6F0               	goto	l13568
  5764  01222A                     l13584:
  5765                           
  5766                           ;main.c: 393:     clear_hid_pflags(&H);
  5767  01222A  0EC6               	movlw	low _H
  5768  01222C  6EE6               	movwf	postinc1,c
  5769  01222E  0E01               	movlw	high _H
  5770  012230  6EE6               	movwf	postinc1,c
  5771  012232  ECC6  F0DC         	call	_clear_hid_pflags	;wreg free
  5772                           
  5773                           ;main.c: 395:    StartTimer(TMR_DISPLAY, 250);
  5774  012236  0EFA               	movlw	250
  5775  012238  6EE6               	movwf	postinc1,c
  5776  01223A  0E00               	movlw	0
  5777  01223C  6EE6               	movwf	postinc1,c
  5778  01223E  0E0A               	movlw	10
  5779  012240  6EE6               	movwf	postinc1,c
  5780  012242  ECB2  F0DD         	call	_StartTimer	;wreg free
  5781                           
  5782                           ;main.c: 396:    V.enter = check_enter_button(&H);
  5783  012246  0EC6               	movlw	low _H
  5784  012248  6EE6               	movwf	postinc1,c
  5785  01224A  0E01               	movlw	high _H
  5786  01224C  6EE6               	movwf	postinc1,c
  5787  01224E  EC1D  F0D9         	call	_check_enter_button	;wreg free
  5788  012252  5001               	movf	btemp^0,w,c
  5789  012254  0101               	movlb	1	; () banked
  5790  012256  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  5791                           
  5792                           ; BSR set to: 1
  5793                           ;main.c: 397:    if (V.enter && (H.hid_display != HID_AUX)) {
  5794  012258  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5795  01225A  B4D8               	btfsc	status,2,c
  5796  01225C  D011               	goto	l13598
  5797                           
  5798                           ; BSR set to: 1
  5799  01225E  0E03               	movlw	3
  5800  012260  19C6               	xorwf	_H& (0+255),w,b
  5801  012262  B4D8               	btfsc	status,2,c
  5802  012264  D00D               	goto	l13598
  5803                           
  5804                           ; BSR set to: 1
  5805                           ;main.c: 398:     V.enter = 0;
  5806  012266  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5807                           
  5808                           ; BSR set to: 1
  5809                           ;main.c: 399:     V.screen = ~V.screen;
  5810  012268  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5811  01226A  D002               	goto	u12940
  5812  01226C  0E01               	movlw	1
  5813  01226E  D001               	goto	u12946
  5814  012270                     u12940:
  5815  012270  0E00               	movlw	0
  5816  012272                     u12946:
  5817  012272  0AFF               	xorlw	255
  5818  012274  6E0C               	movwf	(btemp+11)^0,c
  5819  012276  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  5820  012278  180C               	xorwf	(btemp+11)^0,w,c
  5821  01227A  0BFE               	andlw	-2
  5822  01227C  180C               	xorwf	(btemp+11)^0,w,c
  5823  01227E  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  5824  012280                     l13598:
  5825                           
  5826                           ; BSR set to: 1
  5827                           ;main.c: 401:    set_vterm(V.screen);
  5828  012280  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5829  012282  D002               	goto	u12950
  5830  012284  0E01               	movlw	1
  5831  012286  D001               	goto	u12956
  5832  012288                     u12950:
  5833  012288  0E00               	movlw	0
  5834  01228A                     u12956:
  5835  01228A  6EE6               	movwf	postinc1,c
  5836  01228C  ECFD  F0E1         	call	_set_vterm	;wreg free
  5837                           
  5838                           ;main.c: 402:    update_lcd(V.screen);
  5839  012290  0101               	movlb	1	; () banked
  5840  012292  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5841  012294  D002               	goto	u12960
  5842  012296  0E01               	movlw	1
  5843  012298  D001               	goto	u12966
  5844  01229A                     u12960:
  5845  01229A  0E00               	movlw	0
  5846  01229C                     u12966:
  5847  01229C  6EE6               	movwf	postinc1,c
  5848  01229E  EC36  F0CF         	call	_update_lcd	;wreg free
  5849                           
  5850                           ;main.c: 404:    wait_lcd_done();
  5851  0122A2  EC8C  F0E1         	call	_wait_lcd_done	;wreg free
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;main.c: 405:    set_dac_a(3.333);
  5855  0122A6  0EDF               	movlw	223
  5856  0122A8  6EE6               	movwf	postinc1,c
  5857  0122AA  0E4F               	movlw	79
  5858  0122AC  6EE6               	movwf	postinc1,c
  5859  0122AE  0E55               	movlw	85
  5860  0122B0  6EE6               	movwf	postinc1,c
  5861  0122B2  0E40               	movlw	64
  5862  0122B4  6EE6               	movwf	postinc1,c
  5863  0122B6  ECF0  F0DE         	call	_set_dac_a	;wreg free
  5864                           
  5865                           ;main.c: 406:    set_dac_b(6.666);
  5866  0122BA  0EDF               	movlw	223
  5867  0122BC  6EE6               	movwf	postinc1,c
  5868  0122BE  0E4F               	movlw	79
  5869  0122C0  6EE6               	movwf	postinc1,c
  5870  0122C2  0ED5               	movlw	213
  5871  0122C4  6EE6               	movwf	postinc1,c
  5872  0122C6  0E40               	movlw	64
  5873  0122C8  6EE6               	movwf	postinc1,c
  5874  0122CA  ECD6  F0DE         	call	_set_dac_b	;wreg free
  5875                           
  5876                           ;main.c: 407:    set_dac();
  5877  0122CE  EC6A  F0D4         	call	_set_dac	;wreg free
  5878  0122D2                     l13610:
  5879                           
  5880                           ;main.c: 413:   check_help(V.flipper);
  5881  0122D2  0101               	movlb	1	; () banked
  5882  0122D4  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  5883  0122D6  6EE6               	movwf	postinc1,c
  5884  0122D8  EC78  F0C1         	call	_check_help	;wreg free
  5885                           
  5886                           ;main.c: 415:   if (V.enter) {
  5887  0122DC  0101               	movlb	1	; () banked
  5888  0122DE  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5889  0122E0  B4D8               	btfsc	status,2,c
  5890  0122E2  D062               	goto	l1374
  5891                           
  5892                           ; BSR set to: 1
  5893                           ;main.c: 416:    V.enter = 0;
  5894  0122E4  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5895                           
  5896                           ;main.c: 417:    V.calib = 0;
  5897  0122E6  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5898                           
  5899                           ; BSR set to: 1
  5900                           ;main.c: 418:    inp_index += 3;
  5901                           ;stkvar	_inp_index @ sp[(-17)+11]
  5902  0122E8  0EFA               	movlw	-6
  5903  0122EA  006F FF8C  F001    	movff	plusw1,btemp
  5904  0122F0  0E03               	movlw	3
  5905  0122F2  2601               	addwf	btemp^0,f,c
  5906  0122F4  0EFA               	movlw	-6
  5907  0122F6  0060  F007  FFE3   	movff	btemp,plusw1
  5908                           
  5909                           ;main.c: 419:    if (inp_index > 9)
  5910                           ;stkvar	_inp_index @ sp[(-17)+11]
  5911  0122FC  0EFA               	movlw	-6
  5912  0122FE  006F FF8C  F001    	movff	plusw1,btemp
  5913  012304  0E09               	movlw	9
  5914  012306  6401               	cpfsgt	btemp^0,c
  5915  012308  D03A               	goto	l13638
  5916                           
  5917                           ; BSR set to: 1
  5918                           ;main.c: 420:     inp_index = 0;
  5919                           ;stkvar	_inp_index @ sp[(-17)+11]
  5920  01230A  0EFA               	movlw	-6
  5921  01230C  6AE3               	clrf	plusw1,c
  5922  01230E  D037               	goto	l13638
  5923  012310                     l13620:
  5924                           
  5925                           ; BSR set to: 1
  5926                           ;main.c: 423:     i = C_BATT;
  5927                           ;stkvar	_i @ sp[(-17)+14]
  5928  012310  0EFD               	movlw	-3
  5929  012312  6AE3               	clrf	plusw1,c
  5930                           
  5931                           ; BSR set to: 1
  5932                           ;main.c: 424:     j = C_PV;
  5933                           ;stkvar	_j @ sp[(-17)+13]
  5934  012314  0EFC               	movlw	-4
  5935  012316  6AE3               	clrf	plusw1,c
  5936  012318  2AE3               	incf	plusw1,f,c
  5937                           
  5938                           ; BSR set to: 1
  5939                           ;main.c: 425:     k = V_CC;
  5940                           ;stkvar	_k @ sp[(-17)+12]
  5941  01231A  0EFB               	movlw	-5
  5942  01231C  6AE3               	clrf	plusw1,c
  5943  01231E  82E3               	bsf	plusw1,1,c
  5944                           
  5945                           ;main.c: 426:     break;
  5946  012320  D043               	goto	l1374
  5947  012322                     l13626:
  5948                           
  5949                           ; BSR set to: 1
  5950                           ;main.c: 428:     i = V_BAT;
  5951                           ;stkvar	_i @ sp[(-17)+14]
  5952  012322  0EFD               	movlw	-3
  5953  012324  6AE3               	clrf	plusw1,c
  5954  012326  84E3               	bsf	plusw1,2,c
  5955                           
  5956                           ;main.c: 429:     j = V_PV;
  5957                           ;stkvar	_j @ sp[(-17)+13]
  5958  012328  0EFC               	movlw	-4
  5959  01232A  6AE3               	clrf	plusw1,c
  5960  01232C  80E3               	bsf	plusw1,0,c
  5961  01232E  84E3               	bsf	plusw1,2,c	;indir
  5962                           
  5963                           ;main.c: 430:     k = V_CBUS;
  5964                           ;stkvar	_k @ sp[(-17)+12]
  5965  012330  0EFB               	movlw	-5
  5966  012332  6AE3               	clrf	plusw1,c
  5967  012334  82E3               	bsf	plusw1,1,c
  5968  012336  84E3               	bsf	plusw1,2,c	;indir
  5969                           
  5970                           ;main.c: 431:     break;
  5971  012338  D037               	goto	l1374
  5972  01233A                     l13628:
  5973                           
  5974                           ; BSR set to: 1
  5975                           ;main.c: 433:     i = V_BBAT;
  5976                           ;stkvar	_i @ sp[(-17)+14]
  5977  01233A  0EFD               	movlw	-3
  5978  01233C  6AE3               	clrf	plusw1,c
  5979  01233E  82E3               	bsf	plusw1,1,c
  5980  012340  86E3               	bsf	plusw1,3,c	;indir
  5981                           
  5982                           ; BSR set to: 1
  5983                           ;main.c: 434:     j = V_TEMP;
  5984  012342  0E0B               	movlw	11
  5985  012344  6E0C               	movwf	(btemp+11)^0,c
  5986                           
  5987                           ;stkvar	_j @ sp[(-17)+13]
  5988  012346  0EFC               	movlw	-4
  5989  012348  0060  F033  FFE3   	movff	btemp+11,plusw1
  5990                           
  5991                           ; BSR set to: 1
  5992                           ;main.c: 435:     k = V_INVERTER;
  5993                           ;stkvar	_k @ sp[(-17)+12]
  5994  01234E  0EFB               	movlw	-5
  5995  012350  6AE3               	clrf	plusw1,c
  5996  012352  84E3               	bsf	plusw1,2,c
  5997  012354  86E3               	bsf	plusw1,3,c	;indir
  5998                           
  5999                           ;main.c: 436:     break;
  6000  012356  D028               	goto	l1374
  6001  012358                     l13634:
  6002                           
  6003                           ; BSR set to: 1
  6004                           ;main.c: 438:     i = V_LIGHT_SENSOR;
  6005  012358  0E0D               	movlw	13
  6006  01235A  6E0C               	movwf	(btemp+11)^0,c
  6007                           
  6008                           ;stkvar	_i @ sp[(-17)+14]
  6009  01235C  0EFD               	movlw	-3
  6010  01235E  0060  F033  FFE3   	movff	btemp+11,plusw1
  6011                           
  6012                           ;main.c: 439:     j = V_LIGHT_SENSOR;
  6013  012364  0E0D               	movlw	13
  6014  012366  6E0C               	movwf	(btemp+11)^0,c
  6015                           
  6016                           ;stkvar	_j @ sp[(-17)+13]
  6017  012368  0EFC               	movlw	-4
  6018  01236A  0060  F033  FFE3   	movff	btemp+11,plusw1
  6019                           
  6020                           ;main.c: 440:     k = V_LIGHT_SENSOR;
  6021  012370  0E0D               	movlw	13
  6022  012372  6E0C               	movwf	(btemp+11)^0,c
  6023                           
  6024                           ;stkvar	_k @ sp[(-17)+12]
  6025  012374  0EFB               	movlw	-5
  6026  012376  0060  F033  FFE3   	movff	btemp+11,plusw1
  6027                           
  6028                           ;main.c: 441:     break;
  6029  01237C  D015               	goto	l1374
  6030  01237E                     l13638:
  6031                           
  6032                           ; BSR set to: 1
  6033                           ;stkvar	_inp_index @ sp[(-17)+11]
  6034  01237E  0EFA               	movlw	-6
  6035  012380  50E3               	movf	plusw1,w,c
  6036  012382  6E0B               	movwf	(btemp+10)^0,c
  6037  012384  6A0C               	clrf	(btemp+11)^0,c
  6038                           
  6039                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6040                           ; Switch size 1, requested type "simple"
  6041                           ; Number of cases is 1, Range of values is 0 to 0
  6042                           ; switch strategies available:
  6043                           ; Name         Instructions Cycles
  6044                           ; simple_byte            4     3 (average)
  6045                           ;	Chosen strategy is simple_byte
  6046  012386  500C               	movf	(btemp+11)^0,w,c
  6047  012388  0A00               	xorlw	0	; case 0
  6048  01238A  A4D8               	btfss	status,2,c
  6049  01238C  D00D               	goto	l1374
  6050                           
  6051                           ; BSR set to: 1
  6052                           ; Switch size 1, requested type "simple"
  6053                           ; Number of cases is 4, Range of values is 0 to 9
  6054                           ; switch strategies available:
  6055                           ; Name         Instructions Cycles
  6056                           ; simple_byte           13     7 (average)
  6057                           ;	Chosen strategy is simple_byte
  6058  01238E  500B               	movf	(btemp+10)^0,w,c
  6059  012390  0A00               	xorlw	0	; case 0
  6060  012392  B4D8               	btfsc	status,2,c
  6061  012394  D7BD               	goto	l13620
  6062  012396  0A03               	xorlw	3	; case 3
  6063  012398  B4D8               	btfsc	status,2,c
  6064  01239A  D7C3               	goto	l13626
  6065  01239C  0A05               	xorlw	5	; case 6
  6066  01239E  B4D8               	btfsc	status,2,c
  6067  0123A0  D7CC               	goto	l13628
  6068  0123A2  0A0F               	xorlw	15	; case 9
  6069  0123A4  B4D8               	btfsc	status,2,c
  6070  0123A6  D7D8               	goto	l13634
  6071  0123A8                     l1374:
  6072                           
  6073                           ; BSR set to: 1
  6074                           ;main.c: 450:   if (V.set_sequ) {
  6075  0123A8  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  6076  0123AA  EF83  F08C         	goto	l13512
  6077                           
  6078                           ; BSR set to: 1
  6079                           ;main.c: 451:    if (TimerDone(TMR_INFO)) {
  6080  0123AE  0E07               	movlw	7
  6081  0123B0  6EE6               	movwf	postinc1,c
  6082  0123B2  EC07  F0E0         	call	_TimerDone	;wreg free
  6083  0123B6  5001               	movf	btemp^0,w,c
  6084  0123B8  B4D8               	btfsc	status,2,c
  6085  0123BA  D00C               	goto	l13648
  6086                           
  6087                           ;main.c: 452:     V.set_sequ = 0;
  6088  0123BC  0101               	movlb	1	; () banked
  6089  0123BE  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  6090                           
  6091                           ; BSR set to: 1
  6092                           ;main.c: 453:     set_vterm(0);
  6093  0123C0  0E00               	movlw	0
  6094  0123C2  6EE6               	movwf	postinc1,c
  6095  0123C4  ECFD  F0E1         	call	_set_vterm	;wreg free
  6096                           
  6097                           ;main.c: 454:     update_lcd(0);
  6098  0123C8  0E00               	movlw	0
  6099  0123CA  6EE6               	movwf	postinc1,c
  6100  0123CC  EC36  F0CF         	call	_update_lcd	;wreg free
  6101                           
  6102                           ;main.c: 455:    } else {
  6103  0123D0  EF83  F08C         	goto	l13512
  6104  0123D4                     l13648:
  6105                           
  6106                           ;main.c: 456:     set_vterm(2);
  6107  0123D4  0E02               	movlw	2
  6108  0123D6  6EE6               	movwf	postinc1,c
  6109  0123D8  ECFD  F0E1         	call	_set_vterm	;wreg free
  6110                           
  6111                           ;main.c: 457:     update_lcd(2);
  6112  0123DC  0E02               	movlw	2
  6113  0123DE  6EE6               	movwf	postinc1,c
  6114  0123E0  EC36  F0CF         	call	_update_lcd	;wreg free
  6115  0123E4  EF83  F08C         	goto	l13512
  6116  0123E8                     __end_of_main:
  6117                           	opt callstack 0
  6118                           
  6119 ;; *************** function _static_soc *****************
  6120 ;; Defined at:
  6121 ;;		line 117 in file "mbmc.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;		None
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;		None
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  1  [STACK] void 
  6128 ;; Registers used:
  6129 ;;		wreg, fsr2l, fsr2h
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6139 ;;Total ram usage:        0 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:   15
  6142 ;; This function calls:
  6143 ;;		Nothing
  6144 ;; This function is called by:
  6145 ;;		_main
  6146 ;; This function uses a reentrant model
  6147 ;;
  6148                           
  6149                           	psect	text1
  6150  01B5D8                     __ptext1:
  6151                           	opt callstack 0
  6152  01B5D8                     _static_soc:
  6153                           	opt callstack 15
  6154                           
  6155                           ;mbmc.c: 119:  C.runtime = 120;
  6156                           
  6157                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6158                           ;incstack = 0
  6159  01B5D8  0E78               	movlw	120
  6160  01B5DA  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
  6161  01B5E0  0E00               	movlw	0
  6162  01B5E2  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
  6163                           
  6164                           ;mbmc.c: 120:  C.soc = 100;
  6165  01B5E8  0E64               	movlw	100
  6166  01B5EA  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
  6167  01B5F0  0E00               	movlw	0
  6168  01B5F2  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
  6169                           
  6170                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  6171  01B5F8  EE21  F38B         	lfsr	2,_C+140	;volatile
  6172  01B5FC  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  6173  01B602  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  6174  01B608  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  6175  01B60E  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  6176                           
  6177                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  6178  01B614  EE21  F38F         	lfsr	2,_C+144	;volatile
  6179  01B618  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  6180  01B61E  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  6181  01B624  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  6182  01B62A  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  6183                           
  6184                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6185  01B630  0012               	return		;funcret
  6186  01B632                     __end_of_static_soc:
  6187                           	opt callstack 0
  6188                           
  6189 ;; *************** function _start_switch_handler *****************
  6190 ;; Defined at:
  6191 ;;		line 122 in file "dio.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;		None
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;		None
  6196 ;; Return value:  Size  Location     Type
  6197 ;;                  1  [STACK] void 
  6198 ;; Registers used:
  6199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6200 ;; Tracked objects:
  6201 ;;		On entry : 1/0
  6202 ;;		On exit  : 3F/39
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6209 ;;Total ram usage:        0 bytes
  6210 ;; Hardware stack levels used:    1
  6211 ;; Hardware stack levels required when called:   16
  6212 ;; This function calls:
  6213 ;;		_INT1_SetInterruptHandler
  6214 ;; This function is called by:
  6215 ;;		_main
  6216 ;; This function uses a reentrant model
  6217 ;;
  6218                           
  6219                           	psect	text2
  6220  01C37E                     __ptext2:
  6221                           	opt callstack 0
  6222  01C37E                     _start_switch_handler:
  6223                           	opt callstack 14
  6224                           
  6225                           ;dio.c: 124:  (PIE5bits.INT1IE = 0);
  6226                           
  6227                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6228                           ;incstack = 0
  6229  01C37E  0139               	movlb	57	; () banked
  6230  01C380  9195               	bcf	149,0,b	;volatile
  6231                           
  6232                           ; BSR set to: 57
  6233                           ;dio.c: 125:  INT1_SetInterruptHandler(switch_handler);
  6234  01C382  0EA0               	movlw	low _switch_handler
  6235  01C384  6EE6               	movwf	postinc1,c
  6236  01C386  0E97               	movlw	high _switch_handler
  6237  01C388  6EE6               	movwf	postinc1,c
  6238  01C38A  0E01               	movlw	low (_switch_handler shr (0+16))
  6239  01C38C  6EE6               	movwf	postinc1,c
  6240  01C38E  EC93  F0E0         	call	_INT1_SetInterruptHandler	;wreg free
  6241                           
  6242                           ;dio.c: 126:  S.button[SNULL].sw = SW_INVALID;
  6243  01C392  0E02               	movlw	2
  6244  01C394  0102               	movlb	2	; () banked
  6245  01C396  6F77               	movwf	(_S+35)& (0+255),b	;volatile
  6246                           
  6247                           ; BSR set to: 2
  6248                           ;dio.c: 127:  (PIE5bits.INT1IE = 1);
  6249  01C398  0139               	movlb	57	; () banked
  6250  01C39A  8195               	bsf	149,0,b	;volatile
  6251                           
  6252                           ; BSR set to: 57
  6253                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6254  01C39C  0012               	return		;funcret
  6255  01C39E                     __end_of_start_switch_handler:
  6256                           	opt callstack 0
  6257                           
  6258 ;; *************** function _srand *****************
  6259 ;; Defined at:
  6260 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6261 ;; Parameters:    Size  Location     Type
  6262 ;;  s               2  [STACK] unsigned int 
  6263 ;; Auto vars:     Size  Location     Type
  6264 ;;		None
  6265 ;; Return value:  Size  Location     Type
  6266 ;;                  1  [STACK] void 
  6267 ;; Registers used:
  6268 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6269 ;; Tracked objects:
  6270 ;;		On entry : 0/0
  6271 ;;		On exit  : 3F/1
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6278 ;;Total ram usage:        0 bytes
  6279 ;; Hardware stack levels used:    1
  6280 ;; Hardware stack levels required when called:   15
  6281 ;; This function calls:
  6282 ;;		Nothing
  6283 ;; This function is called by:
  6284 ;;		_main
  6285 ;; This function uses a reentrant model
  6286 ;;
  6287                           
  6288                           	psect	text3
  6289  01BD78                     __ptext3:
  6290                           	opt callstack 0
  6291  01BD78                     _srand:
  6292                           	opt callstack 15
  6293                           
  6294                           ;stkvar	_s @ sp[(0)+-2]
  6295                           
  6296                           ; BSR set to: 57
  6297                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6298                           ;incstack = 0
  6299  01BD78  0EFE               	movlw	-2
  6300  01BD7A  50E3               	movf	plusw1,w,c
  6301  01BD7C  0FFF               	addlw	255
  6302  01BD7E  6E0B               	movwf	(btemp+10)^0,c
  6303  01BD80  0EFF               	movlw	-1
  6304  01BD82  006F FF8C  F00C    	movff	plusw1,btemp+11
  6305  01BD88  0EFF               	movlw	255
  6306  01BD8A  220C               	addwfc	(btemp+11)^0,f,c
  6307  01BD8C  0060  F02C  F1F3   	movff	btemp+10,_seed
  6308  01BD92  0060  F030  F1F4   	movff	btemp+11,_seed+1
  6309  01BD98  0101               	movlb	1	; () banked
  6310  01BD9A  6BF5               	clrf	(_seed+2)& (0+255),b
  6311  01BD9C  6BF6               	clrf	(_seed+3)& (0+255),b
  6312  01BD9E  6BF7               	clrf	(_seed+4)& (0+255),b
  6313  01BDA0  6BF8               	clrf	(_seed+5)& (0+255),b
  6314  01BDA2  6BF9               	clrf	(_seed+6)& (0+255),b
  6315  01BDA4  6BFA               	clrf	(_seed+7)& (0+255),b
  6316                           
  6317                           ; BSR set to: 1
  6318                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6319  01BDA6  52E5               	movf	postdec1,f,c
  6320  01BDA8  52E5               	movf	postdec1,f,c
  6321  01BDAA  0012               	return		;funcret
  6322  01BDAC                     __end_of_srand:
  6323                           	opt callstack 0
  6324                           
  6325 ;; *************** function _spinners *****************
  6326 ;; Defined at:
  6327 ;;		line 146 in file "mbmc.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;  shape           1  [STACK] unsigned char 
  6330 ;;  reset           1  [STACK] const unsigned char 
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;  c               1  [STACK] unsigned char 
  6333 ;; Return value:  Size  Location     Type
  6334 ;;                  1  [STACK] unsigned char 
  6335 ;; Registers used:
  6336 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6337 ;; Tracked objects:
  6338 ;;		On entry : 0/0
  6339 ;;		On exit  : 0/0
  6340 ;;		Unchanged: 0/0
  6341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6346 ;;Total ram usage:        0 bytes
  6347 ;; Hardware stack levels used:    1
  6348 ;; Hardware stack levels required when called:   16
  6349 ;; This function calls:
  6350 ;;		_strlen
  6351 ;; This function is called by:
  6352 ;;		_main
  6353 ;; This function uses a reentrant model
  6354 ;;
  6355                           
  6356                           	psect	text4
  6357  01A086                     __ptext4:
  6358                           	opt callstack 0
  6359  01A086                     _spinners:
  6360                           	opt callstack 0
  6361                           
  6362                           ; BSR set to: 1
  6363                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6364  01A086  52E6               	movf	postinc1,f,c
  6365                           
  6366                           ;mbmc.c: 146: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 147: {;mbmc.c: 1
      +                          48:  static uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
  6367                           ;stkvar	_shape @ sp[(-1)+-1]
  6368                           
  6369                           ;incstack = 0
  6370  01A088  0EFE               	movlw	-2
  6371  01A08A  006F FF8C  F001    	movff	plusw1,btemp
  6372  01A090  0E05               	movlw	5
  6373  01A092  6401               	cpfsgt	btemp^0,c
  6374  01A094  D002               	goto	l1965
  6375                           
  6376                           ;mbmc.c: 152:   shape = 0;
  6377                           ;stkvar	_shape @ sp[(-1)+-1]
  6378  01A096  0EFE               	movlw	-2
  6379  01A098  6AE3               	clrf	plusw1,c
  6380  01A09A                     l1965:
  6381                           
  6382                           ;mbmc.c: 153:  if (reset)
  6383                           ;stkvar	_reset @ sp[(-1)+-2]
  6384  01A09A  0EFD               	movlw	-3
  6385  01A09C  50E3               	movf	plusw1,w,c
  6386  01A09E  B4D8               	btfsc	status,2,c
  6387  01A0A0  D00C               	goto	l11120
  6388                           
  6389                           ;mbmc.c: 154:   s[shape] = 0;
  6390                           ;stkvar	_shape @ sp[(-1)+-1]
  6391  01A0A2  0EFE               	movlw	-2
  6392  01A0A4  50E3               	movf	plusw1,w,c
  6393  01A0A6  6E0B               	movwf	(btemp+10)^0,c
  6394  01A0A8  6A0C               	clrf	(btemp+11)^0,c
  6395  01A0AA  0EE1               	movlw	low spinners@s
  6396  01A0AC  240B               	addwf	(btemp+10)^0,w,c
  6397  01A0AE  6ED9               	movwf	fsr2l,c
  6398  01A0B0  0E01               	movlw	high spinners@s
  6399  01A0B2  200C               	addwfc	(btemp+11)^0,w,c
  6400  01A0B4  6EDA               	movwf	fsr2h,c
  6401  01A0B6  0E00               	movlw	0
  6402  01A0B8  6EDF               	movwf	indf2,c
  6403  01A0BA                     l11120:
  6404                           
  6405                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
  6406                           ;stkvar	_shape @ sp[(-1)+-1]
  6407  01A0BA  0EFE               	movlw	-2
  6408  01A0BC  50E3               	movf	plusw1,w,c
  6409  01A0BE  0D14               	mullw	20
  6410  01A0C0  0E3F               	movlw	low _spin
  6411  01A0C2  6E0B               	movwf	(btemp+10)^0,c
  6412  01A0C4  0EFB               	movlw	high _spin
  6413  01A0C6  6E0C               	movwf	(btemp+11)^0,c
  6414  01A0C8  50F3               	movf	243,w,c
  6415  01A0CA  260B               	addwf	(btemp+10)^0,f,c
  6416  01A0CC  50F4               	movf	244,w,c
  6417  01A0CE  220C               	addwfc	(btemp+11)^0,f,c
  6418                           
  6419                           ;stkvar	_shape @ sp[(-1)+-1]
  6420  01A0D0  0EFE               	movlw	-2
  6421  01A0D2  50E3               	movf	plusw1,w,c
  6422  01A0D4  6E09               	movwf	(btemp+8)^0,c
  6423  01A0D6  6A0A               	clrf	(btemp+9)^0,c
  6424  01A0D8  0EE1               	movlw	low spinners@s
  6425  01A0DA  2409               	addwf	(btemp+8)^0,w,c
  6426  01A0DC  6ED9               	movwf	fsr2l,c
  6427  01A0DE  0E01               	movlw	high spinners@s
  6428  01A0E0  200A               	addwfc	(btemp+9)^0,w,c
  6429  01A0E2  6EDA               	movwf	fsr2h,c
  6430  01A0E4  50DF               	movf	indf2,w,c
  6431  01A0E6  260B               	addwf	(btemp+10)^0,f,c
  6432  01A0E8  0E00               	movlw	0
  6433  01A0EA  220C               	addwfc	(btemp+11)^0,f,c
  6434  01A0EC  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  6435  01A0F2  0060  F033  FFF7   	movff	btemp+11,tblptrh
  6436  01A0F8                     	if	0	;tblptru may be non-zero
  6437  01A0F8                     	endif
  6438  01A0F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6439  01A0F8  0E00               	movlw	low (__mediumconst shr (0+16))
  6440  01A0FA  6EF8               	movwf	tblptru,c
  6441  01A0FC                     	endif
  6442                           
  6443                           ;stkvar	_c @ sp[(-1)+0]
  6444  01A0FC  0008               	tblrd		*
  6445  01A0FE  0EFF               	movlw	-1
  6446  01A100  006F FFD7 FFE3     	movff	tablat,plusw1
  6447                           
  6448                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
  6449                           ;stkvar	_shape @ sp[(-1)+-1]
  6450  01A106  0EFE               	movlw	-2
  6451  01A108  50E3               	movf	plusw1,w,c
  6452  01A10A  0D14               	mullw	20
  6453  01A10C  0E3F               	movlw	low _spin
  6454  01A10E  6E0B               	movwf	(btemp+10)^0,c
  6455  01A110  0EFB               	movlw	high _spin
  6456  01A112  6E0C               	movwf	(btemp+11)^0,c
  6457  01A114  50F3               	movf	243,w,c
  6458  01A116  260B               	addwf	(btemp+10)^0,f,c
  6459  01A118  50F4               	movf	244,w,c
  6460  01A11A  220C               	addwfc	(btemp+11)^0,f,c
  6461  01A11C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6462  01A122  0060  F033  FFE6   	movff	btemp+11,postinc1
  6463  01A128  EC6E  F0D6         	call	_strlen	;wreg free
  6464                           
  6465                           ;stkvar	_shape @ sp[(-1)+-1]
  6466  01A12C  0EFE               	movlw	-2
  6467  01A12E  50E3               	movf	plusw1,w,c
  6468  01A130  6E0B               	movwf	(btemp+10)^0,c
  6469  01A132  6A0C               	clrf	(btemp+11)^0,c
  6470  01A134  0EE1               	movlw	low spinners@s
  6471  01A136  240B               	addwf	(btemp+10)^0,w,c
  6472  01A138  6ED9               	movwf	fsr2l,c
  6473  01A13A  0E01               	movlw	high spinners@s
  6474  01A13C  200C               	addwfc	(btemp+11)^0,w,c
  6475  01A13E  6EDA               	movwf	fsr2h,c
  6476  01A140  2ADF               	incf	indf2,f,c
  6477  01A142  50DF               	movf	indf2,w,c
  6478  01A144  6E0B               	movwf	(btemp+10)^0,c
  6479  01A146  6A0C               	clrf	(btemp+11)^0,c
  6480  01A148  5001               	movf	btemp^0,w,c
  6481  01A14A  5C0B               	subwf	(btemp+10)^0,w,c
  6482  01A14C  5002               	movf	(btemp+1)^0,w,c
  6483  01A14E  580C               	subwfb	(btemp+11)^0,w,c
  6484  01A150  A0D8               	btfss	status,0,c
  6485  01A152  D00C               	goto	l11126
  6486                           
  6487                           ;mbmc.c: 157:   s[shape] = 0;
  6488                           ;stkvar	_shape @ sp[(-1)+-1]
  6489  01A154  0EFE               	movlw	-2
  6490  01A156  50E3               	movf	plusw1,w,c
  6491  01A158  6E0B               	movwf	(btemp+10)^0,c
  6492  01A15A  6A0C               	clrf	(btemp+11)^0,c
  6493  01A15C  0EE1               	movlw	low spinners@s
  6494  01A15E  240B               	addwf	(btemp+10)^0,w,c
  6495  01A160  6ED9               	movwf	fsr2l,c
  6496  01A162  0E01               	movlw	high spinners@s
  6497  01A164  200C               	addwfc	(btemp+11)^0,w,c
  6498  01A166  6EDA               	movwf	fsr2h,c
  6499  01A168  0E00               	movlw	0
  6500  01A16A  6EDF               	movwf	indf2,c
  6501  01A16C                     l11126:
  6502                           
  6503                           ;mbmc.c: 158:  return c;
  6504                           ;stkvar	_c @ sp[(-1)+0]
  6505  01A16C  0EFF               	movlw	-1
  6506  01A16E  006F FF8C  F001    	movff	plusw1,btemp
  6507                           
  6508                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6509  01A174  52E5               	movf	postdec1,f,c
  6510  01A176  52E5               	movf	postdec1,f,c
  6511  01A178  52E5               	movf	postdec1,f,c
  6512  01A17A  0012               	return		;funcret
  6513  01A17C                     __end_of_spinners:
  6514                           	opt callstack 0
  6515                           
  6516 ;; *************** function _set_dac_b *****************
  6517 ;; Defined at:
  6518 ;;		line 295 in file "daq.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;  voltage         4  [STACK] const float 
  6521 ;; Auto vars:     Size  Location     Type
  6522 ;;		None
  6523 ;; Return value:  Size  Location     Type
  6524 ;;                  2  [STACK] unsigned short 
  6525 ;; Registers used:
  6526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6527 ;; Tracked objects:
  6528 ;;		On entry : 0/0
  6529 ;;		On exit  : 0/0
  6530 ;;		Unchanged: 0/0
  6531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6536 ;;Total ram usage:        0 bytes
  6537 ;; Hardware stack levels used:    1
  6538 ;; Hardware stack levels required when called:   17
  6539 ;; This function calls:
  6540 ;;		_convert_dac_raw
  6541 ;; This function is called by:
  6542 ;;		_main
  6543 ;; This function uses a reentrant model
  6544 ;;
  6545                           
  6546                           	psect	text5
  6547  01BDAC                     __ptext5:
  6548                           	opt callstack 0
  6549  01BDAC                     _set_dac_b:
  6550                           	opt callstack 13
  6551                           
  6552                           ;daq.c: 295: uint16_t set_dac_b(const float voltage);daq.c: 296: {;daq.c: 297:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  6553                           ;stkvar	_voltage @ sp[(0)+-4]
  6554                           
  6555                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6556                           ;incstack = 0
  6557  01BDAC  0EFC               	movlw	-4
  6558  01BDAE  006F FF8F FFE6     	movff	plusw1,postinc1
  6559  01BDB4  006F FF8F FFE6     	movff	plusw1,postinc1
  6560  01BDBA  006F FF8F FFE6     	movff	plusw1,postinc1
  6561  01BDC0  006F FF8F FFE6     	movff	plusw1,postinc1
  6562  01BDC6  EC94  F0CD         	call	_convert_dac_raw	;wreg free
  6563  01BDCA  0060  F004  F0D1   	movff	btemp,_R+34	;volatile
  6564  01BDD0  0060  F008  F0D2   	movff	btemp+1,_R+35	;volatile
  6565                           
  6566                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6567                           
  6568                           ;daq.c: 298:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  6569  01BDD6  52E5               	movf	postdec1,f,c
  6570  01BDD8  52E5               	movf	postdec1,f,c
  6571  01BDDA  52E5               	movf	postdec1,f,c
  6572  01BDDC  52E5               	movf	postdec1,f,c
  6573  01BDDE  0012               	return		;funcret
  6574  01BDE0                     __end_of_set_dac_b:
  6575                           	opt callstack 0
  6576                           
  6577 ;; *************** function _set_dac_a *****************
  6578 ;; Defined at:
  6579 ;;		line 286 in file "daq.c"
  6580 ;; Parameters:    Size  Location     Type
  6581 ;;  voltage         4  [STACK] const float 
  6582 ;; Auto vars:     Size  Location     Type
  6583 ;;		None
  6584 ;; Return value:  Size  Location     Type
  6585 ;;                  2  [STACK] unsigned short 
  6586 ;; Registers used:
  6587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6588 ;; Tracked objects:
  6589 ;;		On entry : 3F/0
  6590 ;;		On exit  : 0/0
  6591 ;;		Unchanged: 0/0
  6592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6597 ;;Total ram usage:        0 bytes
  6598 ;; Hardware stack levels used:    1
  6599 ;; Hardware stack levels required when called:   17
  6600 ;; This function calls:
  6601 ;;		_convert_dac_raw
  6602 ;; This function is called by:
  6603 ;;		_main
  6604 ;; This function uses a reentrant model
  6605 ;;
  6606                           
  6607                           	psect	text6
  6608  01BDE0                     __ptext6:
  6609                           	opt callstack 0
  6610  01BDE0                     _set_dac_a:
  6611                           	opt callstack 13
  6612                           
  6613                           ;daq.c: 286: uint16_t set_dac_a(const float voltage);daq.c: 287: {;daq.c: 288:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  6614                           ;stkvar	_voltage @ sp[(0)+-4]
  6615                           
  6616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6617                           ;incstack = 0
  6618  01BDE0  0EFC               	movlw	-4
  6619  01BDE2  006F FF8F FFE6     	movff	plusw1,postinc1
  6620  01BDE8  006F FF8F FFE6     	movff	plusw1,postinc1
  6621  01BDEE  006F FF8F FFE6     	movff	plusw1,postinc1
  6622  01BDF4  006F FF8F FFE6     	movff	plusw1,postinc1
  6623  01BDFA  EC94  F0CD         	call	_convert_dac_raw	;wreg free
  6624  01BDFE  0060  F004  F0CF   	movff	btemp,_R+32	;volatile
  6625  01BE04  0060  F008  F0D0   	movff	btemp+1,_R+33	;volatile
  6626                           
  6627                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6628                           
  6629                           ;daq.c: 289:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  6630  01BE0A  52E5               	movf	postdec1,f,c
  6631  01BE0C  52E5               	movf	postdec1,f,c
  6632  01BE0E  52E5               	movf	postdec1,f,c
  6633  01BE10  52E5               	movf	postdec1,f,c
  6634  01BE12  0012               	return		;funcret
  6635  01BE14                     __end_of_set_dac_a:
  6636                           	opt callstack 0
  6637                           
  6638 ;; *************** function _convert_dac_raw *****************
  6639 ;; Defined at:
  6640 ;;		line 268 in file "daq.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;  voltage         4  [STACK] float 
  6643 ;; Auto vars:     Size  Location     Type
  6644 ;;		None
  6645 ;; Return value:  Size  Location     Type
  6646 ;;                  2  [STACK] unsigned short 
  6647 ;; Registers used:
  6648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6649 ;; Tracked objects:
  6650 ;;		On entry : 0/0
  6651 ;;		On exit  : 0/0
  6652 ;;		Unchanged: 0/0
  6653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6658 ;;Total ram usage:        0 bytes
  6659 ;; Hardware stack levels used:    1
  6660 ;; Hardware stack levels required when called:   16
  6661 ;; This function calls:
  6662 ;;		___fldiv
  6663 ;;		___flge
  6664 ;;		___fltol
  6665 ;; This function is called by:
  6666 ;;		_set_dac_a
  6667 ;;		_set_dac_b
  6668 ;; This function uses a reentrant model
  6669 ;;
  6670                           
  6671                           	psect	text7
  6672  019B28                     __ptext7:
  6673                           	opt callstack 0
  6674  019B28                     _convert_dac_raw:
  6675                           	opt callstack 13
  6676                           
  6677                           ;daq.c: 268: static uint16_t convert_dac_raw(float voltage);daq.c: 269: {;daq.c: 273:  i
      +                          f (voltage < 0.001)
  6678                           
  6679                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6680                           ;incstack = 0
  6681  019B28  0E6F               	movlw	111
  6682  019B2A  6EE6               	movwf	postinc1,c
  6683  019B2C  0E12               	movlw	18
  6684  019B2E  6EE6               	movwf	postinc1,c
  6685  019B30  0E83               	movlw	131
  6686  019B32  6EE6               	movwf	postinc1,c
  6687  019B34  0E3A               	movlw	58
  6688  019B36  6EE6               	movwf	postinc1,c
  6689                           
  6690                           ;stkvar	_voltage @ sp[(-4)+-4]
  6691  019B38  0EF8               	movlw	-8
  6692  019B3A  006F FF8F FFE6     	movff	plusw1,postinc1
  6693  019B40  006F FF8F FFE6     	movff	plusw1,postinc1
  6694  019B46  006F FF8F FFE6     	movff	plusw1,postinc1
  6695  019B4C  006F FF8F FFE6     	movff	plusw1,postinc1
  6696  019B52  EC26  F0C9         	call	___flge	;wreg free
  6697  019B56  B001               	btfsc	btemp& (0+255),0,c
  6698  019B58  D018               	goto	l10732
  6699                           
  6700                           ;daq.c: 274:   voltage = 0.001;
  6701  019B5A  0E6F               	movlw	111
  6702  019B5C  6E09               	movwf	(btemp+8)^0,c
  6703  019B5E  0E12               	movlw	18
  6704  019B60  6E0A               	movwf	(btemp+9)^0,c
  6705  019B62  0E83               	movlw	131
  6706  019B64  6E0B               	movwf	(btemp+10)^0,c
  6707  019B66  0E3A               	movlw	58
  6708  019B68  6E0C               	movwf	(btemp+11)^0,c
  6709                           
  6710                           ;stkvar	_voltage @ sp[(0)+-4]
  6711  019B6A  0EFC               	movlw	-4
  6712  019B6C  0060  F027  FFE3   	movff	btemp+8,plusw1
  6713  019B72  0EFD               	movlw	-3
  6714  019B74  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6715  019B7A  0EFE               	movlw	-2
  6716  019B7C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6717  019B82  0EFF               	movlw	-1
  6718  019B84  0060  F033  FFE3   	movff	btemp+11,plusw1
  6719  019B8A                     l10732:
  6720                           
  6721                           ;daq.c: 275:  if (voltage > 10.0)
  6722                           ;stkvar	_voltage @ sp[(0)+-4]
  6723  019B8A  0EFC               	movlw	-4
  6724  019B8C  006F FF8F FFE6     	movff	plusw1,postinc1
  6725  019B92  006F FF8F FFE6     	movff	plusw1,postinc1
  6726  019B98  006F FF8F FFE6     	movff	plusw1,postinc1
  6727  019B9E  006F FF8F FFE6     	movff	plusw1,postinc1
  6728  019BA4  0E00               	movlw	0
  6729  019BA6  6EE6               	movwf	postinc1,c
  6730  019BA8  0E00               	movlw	0
  6731  019BAA  6EE6               	movwf	postinc1,c
  6732  019BAC  0E20               	movlw	32
  6733  019BAE  6EE6               	movwf	postinc1,c
  6734  019BB0  0E41               	movlw	65
  6735  019BB2  6EE6               	movwf	postinc1,c
  6736  019BB4  EC26  F0C9         	call	___flge	;wreg free
  6737  019BB8  B001               	btfsc	btemp& (0+255),0,c
  6738  019BBA  D018               	goto	l10736
  6739                           
  6740                           ;daq.c: 276:   voltage = 10.0;
  6741  019BBC  0E00               	movlw	0
  6742  019BBE  6E09               	movwf	(btemp+8)^0,c
  6743  019BC0  0E00               	movlw	0
  6744  019BC2  6E0A               	movwf	(btemp+9)^0,c
  6745  019BC4  0E20               	movlw	32
  6746  019BC6  6E0B               	movwf	(btemp+10)^0,c
  6747  019BC8  0E41               	movlw	65
  6748  019BCA  6E0C               	movwf	(btemp+11)^0,c
  6749                           
  6750                           ;stkvar	_voltage @ sp[(0)+-4]
  6751  019BCC  0EFC               	movlw	-4
  6752  019BCE  0060  F027  FFE3   	movff	btemp+8,plusw1
  6753  019BD4  0EFD               	movlw	-3
  6754  019BD6  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6755  019BDC  0EFE               	movlw	-2
  6756  019BDE  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6757  019BE4  0EFF               	movlw	-1
  6758  019BE6  0060  F033  FFE3   	movff	btemp+11,plusw1
  6759  019BEC                     l10736:
  6760                           
  6761                           ;daq.c: 280:  return(uint16_t) (voltage / 0.002442);
  6762  019BEC  0EF6               	movlw	246
  6763  019BEE  6EE6               	movwf	postinc1,c
  6764  019BF0  0E09               	movlw	9
  6765  019BF2  6EE6               	movwf	postinc1,c
  6766  019BF4  0E20               	movlw	32
  6767  019BF6  6EE6               	movwf	postinc1,c
  6768  019BF8  0E3B               	movlw	59
  6769  019BFA  6EE6               	movwf	postinc1,c
  6770                           
  6771                           ;stkvar	_voltage @ sp[(-4)+-4]
  6772  019BFC  0EF8               	movlw	-8
  6773  019BFE  006F FF8F FFE6     	movff	plusw1,postinc1
  6774  019C04  006F FF8F FFE6     	movff	plusw1,postinc1
  6775  019C0A  006F FF8F FFE6     	movff	plusw1,postinc1
  6776  019C10  006F FF8F FFE6     	movff	plusw1,postinc1
  6777  019C16  ECF4  F0A6         	call	___fldiv	;wreg free
  6778  019C1A  0060  F007  FFE6   	movff	btemp,postinc1
  6779  019C20  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6780  019C26  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6781  019C2C  0060  F013  FFE6   	movff	btemp+3,postinc1
  6782  019C32  EC6D  F0C8         	call	___fltol	;wreg free
  6783                           
  6784                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  6785  019C36  52E5               	movf	postdec1,f,c
  6786  019C38  52E5               	movf	postdec1,f,c
  6787  019C3A  52E5               	movf	postdec1,f,c
  6788  019C3C  52E5               	movf	postdec1,f,c
  6789  019C3E  0012               	return		;funcret
  6790  019C40                     __end_of_convert_dac_raw:
  6791                           	opt callstack 0
  6792                           
  6793 ;; *************** function _set_dac *****************
  6794 ;; Defined at:
  6795 ;;		line 244 in file "daq.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;		None
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;		None
  6800 ;; Return value:  Size  Location     Type
  6801 ;;                  1  [STACK] void 
  6802 ;; Registers used:
  6803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  6804 ;; Tracked objects:
  6805 ;;		On entry : 0/0
  6806 ;;		On exit  : 0/0
  6807 ;;		Unchanged: 0/0
  6808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6813 ;;Total ram usage:        0 bytes
  6814 ;; Hardware stack levels used:    1
  6815 ;; Hardware stack levels required when called:   16
  6816 ;; This function calls:
  6817 ;;		_SPI1_Exchange8bit
  6818 ;;		_dac_spi_control
  6819 ;; This function is called by:
  6820 ;;		_main
  6821 ;; This function uses a reentrant model
  6822 ;;
  6823                           
  6824                           	psect	text8
  6825  01A8D4                     __ptext8:
  6826                           	opt callstack 0
  6827  01A8D4                     _set_dac:
  6828                           	opt callstack 14
  6829                           
  6830                           ;daq.c: 246:  while (!SPI1STATUSbits.TXBE);
  6831                           
  6832                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6833                           ;incstack = 0
  6834  01A8D4  013D               	movlb	61	; () banked
  6835  01A8D6  AB17               	btfss	23,5,b	;volatile
  6836  01A8D8  D7FD               	goto	_set_dac
  6837                           
  6838                           ; BSR set to: 61
  6839                           
  6840                           ;daq.c: 247:  do { LATCbits.LATC2 = 1; } while(0);
  6841  01A8DA  84BC               	bsf	188,2,c	;volatile
  6842                           
  6843                           ; BSR set to: 61
  6844                           
  6845                           ;daq.c: 248:  do { LATCbits.LATC0 = 1; } while(0);
  6846  01A8DC  80BC               	bsf	188,0,c	;volatile
  6847                           
  6848                           ; BSR set to: 61
  6849                           ;daq.c: 249:  dac_spi_control(1);
  6850  01A8DE  0E01               	movlw	1
  6851  01A8E0  6EE6               	movwf	postinc1,c
  6852  01A8E2  ECA4  F0D8         	call	_dac_spi_control	;wreg free
  6853                           
  6854                           ;daq.c: 250:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  6855  01A8E6  C0CF  F0D3         	movff	_R+32,_R+36	;volatile
  6856                           
  6857                           ;daq.c: 251:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  6858  01A8EA  EE20  F0CF         	lfsr	2,_R+32	;volatile
  6859  01A8EE  006F FF78  F00B    	movff	postinc2,btemp+10
  6860  01A8F4  006F FF74  F00C    	movff	postdec2,btemp+11
  6861  01A8FA  0060  F030  F00B   	movff	btemp+11,btemp+10
  6862  01A900  6A0C               	clrf	(btemp+11)^0,c
  6863  01A902  0E0F               	movlw	15
  6864  01A904  160B               	andwf	(btemp+10)^0,f,c
  6865  01A906  0100               	movlb	0	; () banked
  6866  01A908  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6867  01A90A  180B               	xorwf	(btemp+10)^0,w,c
  6868  01A90C  0BF0               	andlw	-16
  6869  01A90E  180B               	xorwf	(btemp+10)^0,w,c
  6870  01A910  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6871                           
  6872                           ; BSR set to: 0
  6873                           ;daq.c: 252:  R.max5322_cmd.map.cont = 0b0100;
  6874  01A912  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6875  01A914  0B0F               	andlw	-241
  6876  01A916  0940               	iorlw	64
  6877  01A918  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6878                           
  6879                           ; BSR set to: 0
  6880  01A91A  90BF               	bcf	191,0,c	;volatile
  6881                           
  6882                           ; BSR set to: 0
  6883                           ;daq.c: 254:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  6884  01A91C  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6885  01A91E  6EE6               	movwf	postinc1,c
  6886  01A920  ECDF  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  6887                           
  6888                           ; BSR set to: 57
  6889                           ;daq.c: 255:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  6890  01A924  0100               	movlb	0	; () banked
  6891  01A926  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  6892  01A928  6EE6               	movwf	postinc1,c
  6893  01A92A  ECDF  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  6894                           
  6895                           ; BSR set to: 57
  6896  01A92E  80BF               	bsf	191,0,c	;volatile
  6897                           
  6898                           ; BSR set to: 57
  6899                           ;daq.c: 257:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  6900  01A930  C0D1  F0D3         	movff	_R+34,_R+36	;volatile
  6901                           
  6902                           ; BSR set to: 57
  6903                           ;daq.c: 258:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  6904  01A934  EE20  F0D1         	lfsr	2,_R+34	;volatile
  6905  01A938  006F FF78  F00B    	movff	postinc2,btemp+10
  6906  01A93E  006F FF74  F00C    	movff	postdec2,btemp+11
  6907  01A944  0060  F030  F00B   	movff	btemp+11,btemp+10
  6908  01A94A  6A0C               	clrf	(btemp+11)^0,c
  6909  01A94C  0E0F               	movlw	15
  6910  01A94E  160B               	andwf	(btemp+10)^0,f,c
  6911  01A950  0100               	movlb	0	; () banked
  6912  01A952  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6913  01A954  180B               	xorwf	(btemp+10)^0,w,c
  6914  01A956  0BF0               	andlw	-16
  6915  01A958  180B               	xorwf	(btemp+10)^0,w,c
  6916  01A95A  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6917                           
  6918                           ; BSR set to: 0
  6919                           ;daq.c: 259:  R.max5322_cmd.map.cont = 0b0101;
  6920  01A95C  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6921  01A95E  0B0F               	andlw	-241
  6922  01A960  0950               	iorlw	80
  6923  01A962  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6924                           
  6925                           ; BSR set to: 0
  6926  01A964  90BF               	bcf	191,0,c	;volatile
  6927                           
  6928                           ; BSR set to: 0
  6929                           ;daq.c: 261:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  6930  01A966  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6931  01A968  6EE6               	movwf	postinc1,c
  6932  01A96A  ECDF  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  6933                           
  6934                           ; BSR set to: 57
  6935                           ;daq.c: 262:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  6936  01A96E  0100               	movlb	0	; () banked
  6937  01A970  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  6938  01A972  6EE6               	movwf	postinc1,c
  6939  01A974  ECDF  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  6940  01A978                     l1872:
  6941  01A978  013D               	movlb	61	; () banked
  6942  01A97A  AB17               	btfss	23,5,b	;volatile
  6943  01A97C  D7FD               	goto	l1872
  6944                           
  6945                           ; BSR set to: 61
  6946                           
  6947                           ;daq.c: 264:  do { LATFbits.LATF0 = 1; } while(0);
  6948  01A97E  80BF               	bsf	191,0,c	;volatile
  6949                           
  6950                           ; BSR set to: 61
  6951                           ;daq.c: 265:  dac_spi_control(0);
  6952  01A980  0E00               	movlw	0
  6953  01A982  6EE6               	movwf	postinc1,c
  6954  01A984  ECA4  F0D8         	call	_dac_spi_control	;wreg free
  6955                           
  6956                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  6957  01A988  0012               	return		;funcret
  6958  01A98A                     __end_of_set_dac:
  6959                           	opt callstack 0
  6960                           
  6961 ;; *************** function _dac_spi_control *****************
  6962 ;; Defined at:
  6963 ;;		line 196 in file "daq.c"
  6964 ;; Parameters:    Size  Location     Type
  6965 ;;  set             1  [STACK] _Bool 
  6966 ;; Auto vars:     Size  Location     Type
  6967 ;;		None
  6968 ;; Return value:  Size  Location     Type
  6969 ;;                  1  [STACK] void 
  6970 ;; Registers used:
  6971 ;;		wreg, fsr1l, fsr1h, status,2
  6972 ;; Tracked objects:
  6973 ;;		On entry : 3F/3D
  6974 ;;		On exit  : 0/0
  6975 ;;		Unchanged: 0/0
  6976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6981 ;;Total ram usage:        0 bytes
  6982 ;; Hardware stack levels used:    1
  6983 ;; Hardware stack levels required when called:   15
  6984 ;; This function calls:
  6985 ;;		Nothing
  6986 ;; This function is called by:
  6987 ;;		_set_dac
  6988 ;; This function uses a reentrant model
  6989 ;;
  6990                           
  6991                           	psect	text9
  6992  01B148                     __ptext9:
  6993                           	opt callstack 0
  6994  01B148                     _dac_spi_control:
  6995                           	opt callstack 14
  6996                           
  6997                           ;daq.c: 196: void dac_spi_control(_Bool set);daq.c: 197: {;daq.c: 198:  static _Bool ini
      +                          t = 0;;daq.c: 199:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 201:  if (set) {
  6998                           ;stkvar	_set @ sp[(0)+-1]
  6999                           
  7000                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7001                           ;incstack = 0
  7002  01B148  0EFF               	movlw	-1
  7003  01B14A  50E3               	movf	plusw1,w,c
  7004  01B14C  B4D8               	btfsc	status,2,c
  7005  01B14E  D022               	goto	l10724
  7006                           
  7007                           ;daq.c: 202:   SPI1CON0bits.EN = 0;
  7008  01B150  013D               	movlb	61	; () banked
  7009  01B152  9F14               	bcf	20,7,b	;volatile
  7010                           
  7011                           ; BSR set to: 61
  7012                           ;daq.c: 203:   if (!init) {
  7013  01B154  5043               	movf	dac_spi_control@init^0,w,c
  7014  01B156  A4D8               	btfss	status,2,c
  7015  01B158  D011               	goto	l10712
  7016                           
  7017                           ; BSR set to: 61
  7018                           ;daq.c: 204:    init = 1;
  7019  01B15A  0E01               	movlw	1
  7020  01B15C  6E43               	movwf	dac_spi_control@init^0,c
  7021                           
  7022                           ; BSR set to: 61
  7023                           ;daq.c: 205:    S0 = SPI1CON0;
  7024  01B15E  006F F450  F042    	movff	15636,dac_spi_control@S0	;volatile
  7025                           
  7026                           ; BSR set to: 61
  7027                           ;daq.c: 206:    S1 = SPI1CON1;
  7028  01B164  006F F454  F0A8    	movff	15637,dac_spi_control@S1	;volatile
  7029                           
  7030                           ; BSR set to: 61
  7031                           ;daq.c: 207:    S2 = SPI1CON2;
  7032  01B16A  006F F458  F0A7    	movff	15638,dac_spi_control@S2	;volatile
  7033                           
  7034                           ; BSR set to: 61
  7035                           ;daq.c: 208:    SC = SPI1CLK;
  7036  01B170  006F F470  F0A6    	movff	15644,dac_spi_control@SC	;volatile
  7037                           
  7038                           ; BSR set to: 61
  7039                           ;daq.c: 209:    SB = SPI1BAUD;
  7040  01B176  006F F464  F0A5    	movff	15641,dac_spi_control@SB	;volatile
  7041  01B17C                     l10712:
  7042                           
  7043                           ; BSR set to: 61
  7044                           ;daq.c: 215:   SPI1CON1 = 0x00;
  7045  01B17C  6B15               	clrf	21,b	;volatile
  7046                           
  7047                           ; BSR set to: 61
  7048                           ;daq.c: 216:   SPI1CON1bits.CKE=1;
  7049  01B17E  8D15               	bsf	21,6,b	;volatile
  7050                           
  7051                           ; BSR set to: 61
  7052                           ;daq.c: 217:   SPI1CON1bits.CKP=0;
  7053  01B180  9B15               	bcf	21,5,b	;volatile
  7054                           
  7055                           ; BSR set to: 61
  7056                           ;daq.c: 218:   SPI1CON1bits.SMP=0;
  7057  01B182  9F15               	bcf	21,7,b	;volatile
  7058                           
  7059                           ;daq.c: 220:   SPI1CON2 = 0x03;
  7060  01B184  0E03               	movlw	3
  7061  01B186  6F16               	movwf	22,b	;volatile
  7062                           
  7063                           ;daq.c: 222:   SPI1BAUD = 0x0f;
  7064  01B188  0E0F               	movlw	15
  7065  01B18A  6F19               	movwf	25,b	;volatile
  7066                           
  7067                           ; BSR set to: 61
  7068                           ;daq.c: 224:   SPI1CLK = 0x00;
  7069  01B18C  6B1C               	clrf	28,b	;volatile
  7070                           
  7071                           ;daq.c: 226:   SPI1CON0 = 0x83;
  7072  01B18E  0E83               	movlw	131
  7073  01B190  6F14               	movwf	20,b	;volatile
  7074  01B192  D014               	goto	L3
  7075  01B194                     l10724:
  7076                           
  7077                           ;daq.c: 229:   if (init) {
  7078  01B194  5043               	movf	dac_spi_control@init^0,w,c
  7079  01B196  B4D8               	btfsc	status,2,c
  7080  01B198  D012               	goto	l1856
  7081                           
  7082                           ;daq.c: 233:    SPI1CON0bits.EN = 0;
  7083  01B19A  013D               	movlb	61	; () banked
  7084  01B19C  9F14               	bcf	20,7,b	;volatile
  7085                           
  7086                           ;daq.c: 234:    SPI1CON1 = S1;
  7087  01B19E  0060  F2A3  FD15   	movff	dac_spi_control@S1,15637	;volatile
  7088                           
  7089                           ;daq.c: 235:    SPI1CON2 = S2;
  7090  01B1A4  0060  F29F  FD16   	movff	dac_spi_control@S2,15638	;volatile
  7091                           
  7092                           ;daq.c: 236:    SPI1CLK = SC;
  7093  01B1AA  0060  F29B  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  7094                           
  7095                           ;daq.c: 237:    SPI1BAUD = SB;
  7096  01B1B0  0060  F297  FD19   	movff	dac_spi_control@SB,15641	;volatile
  7097                           
  7098                           ;daq.c: 238:    SPI1CON0 = S0;
  7099  01B1B6  0060  F10B  FD14   	movff	dac_spi_control@S0,15636	;volatile
  7100  01B1BC                     L3:
  7101                           
  7102                           ;daq.c: 239:    SPI1CON0bits.EN = 1;
  7103  01B1BC  8F14               	bsf	20,7,b	;volatile
  7104  01B1BE                     l1856:
  7105                           
  7106                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  7107  01B1BE  52E5               	movf	postdec1,f,c
  7108  01B1C0  0012               	return		;funcret
  7109  01B1C2                     __end_of_dac_spi_control:
  7110                           	opt callstack 0
  7111                           
  7112 ;; *************** function _init_port_dma *****************
  7113 ;; Defined at:
  7114 ;;		line 104 in file "eadog.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;		None
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;		None
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  1  [STACK] void 
  7121 ;; Registers used:
  7122 ;;		wreg, status,2
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/1
  7125 ;;		On exit  : 3F/3B
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7132 ;;Total ram usage:        0 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; Hardware stack levels required when called:   15
  7135 ;; This function calls:
  7136 ;;		Nothing
  7137 ;; This function is called by:
  7138 ;;		_main
  7139 ;; This function uses a reentrant model
  7140 ;;
  7141                           
  7142                           	psect	text10
  7143  01BE48                     __ptext10:
  7144                           	opt callstack 0
  7145  01BE48                     _init_port_dma:
  7146                           	opt callstack 15
  7147                           
  7148                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  7149                           
  7150                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7151                           ;incstack = 0
  7152  01BE48  0E3F               	movlw	-193
  7153  01BE4A  013B               	movlb	59	; () banked
  7154  01BE4C  17DD               	andwf	221,f,b	;volatile
  7155                           
  7156                           ; BSR set to: 59
  7157                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  7158  01BE4E  9BDD               	bcf	221,5,b	;volatile
  7159                           
  7160                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  7161  01BE50  51DD               	movf	221,w,b	;volatile
  7162  01BE52  0BF9               	andlw	-7
  7163  01BE54  0902               	iorlw	2
  7164  01BE56  6FDD               	movwf	221,b	;volatile
  7165                           
  7166                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  7167  01BE58  0EE7               	movlw	-25
  7168  01BE5A  17DD               	andwf	221,f,b	;volatile
  7169                           
  7170                           ; BSR set to: 59
  7171                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  7172  01BE5C  81DD               	bsf	221,0,b	;volatile
  7173                           
  7174                           ; BSR set to: 59
  7175                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  7176  01BE5E  9DDC               	bcf	220,6,b	;volatile
  7177                           
  7178                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  7179  01BE60  0E3D               	movlw	61
  7180  01BE62  6FD1               	movwf	209,b	;volatile
  7181  01BE64  0EEA               	movlw	234
  7182  01BE66  6FD0               	movwf	208,b	;volatile
  7183                           
  7184                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  7185  01BE68  0EFF               	movlw	low _port_data
  7186  01BE6A  6FD9               	movwf	217,b	;volatile
  7187  01BE6C  0E04               	movlw	high _port_data
  7188  01BE6E  6FDA               	movwf	218,b	;volatile
  7189  01BE70  0E00               	movlw	low (_port_data shr (0+16))
  7190  01BE72  6FDB               	movwf	219,b	;volatile
  7191                           
  7192                           ; BSR set to: 59
  7193                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  7194  01BE74  9BDC               	bcf	220,5,b	;volatile
  7195                           
  7196                           ; BSR set to: 59
  7197                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7198  01BE76  0012               	return		;funcret
  7199  01BE78                     __end_of_init_port_dma:
  7200                           	opt callstack 0
  7201                           
  7202 ;; *************** function _init_display *****************
  7203 ;; Defined at:
  7204 ;;		line 38 in file "eadog.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;		None
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;		None
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  1  [STACK] void 
  7211 ;; Registers used:
  7212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7213 ;; Tracked objects:
  7214 ;;		On entry : 3F/3B
  7215 ;;		On exit  : 3F/3D
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7222 ;;Total ram usage:        0 bytes
  7223 ;; Hardware stack levels used:    1
  7224 ;; Hardware stack levels required when called:   17
  7225 ;; This function calls:
  7226 ;;		_ringBufS_init
  7227 ;;		_send_lcd_cmd
  7228 ;;		_send_lcd_cmd_long
  7229 ;;		_send_lcd_data
  7230 ;;		_wdtdelay
  7231 ;; This function is called by:
  7232 ;;		_main
  7233 ;; This function uses a reentrant model
  7234 ;;
  7235                           
  7236                           	psect	text11
  7237  01A17C                     __ptext11:
  7238                           	opt callstack 0
  7239  01A17C                     _init_display:
  7240                           	opt callstack 13
  7241                           
  7242                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  7243                           
  7244                           ; BSR set to: 59
  7245                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7246                           ;incstack = 0
  7247  01A17C  0E83               	movlw	low _ring_buf1
  7248  01A17E  0101               	movlb	1	; () banked
  7249  01A180  6FD3               	movwf	(_spi_link+6)& (0+255),b	;volatile
  7250  01A182  0E03               	movlw	high _ring_buf1
  7251  01A184  6FD4               	movwf	(_spi_link+7)& (0+255),b	;volatile
  7252                           
  7253                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  7254  01A186  0E40               	movlw	low _ring_buf2
  7255  01A188  6FD1               	movwf	(_spi_link+4)& (0+255),b	;volatile
  7256  01A18A  0E03               	movlw	high _ring_buf2
  7257  01A18C  6FD2               	movwf	(_spi_link+5)& (0+255),b	;volatile
  7258                           
  7259                           ; BSR set to: 1
  7260                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  7261  01A18E  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
  7262  01A194  0060  F753  FFE6   	movff	_spi_link+7,postinc1
  7263  01A19A  ECF3  F0DF         	call	_ringBufS_init	;wreg free
  7264                           
  7265                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  7266  01A19E  0060  F747  FFE6   	movff	_spi_link+4,postinc1
  7267  01A1A4  0060  F74B  FFE6   	movff	_spi_link+5,postinc1
  7268  01A1AA  ECF3  F0DF         	call	_ringBufS_init	;wreg free
  7269                           
  7270                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  7271  01A1AE  84BE               	bsf	190,2,c	;volatile
  7272                           
  7273                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  7274  01A1B0  013D               	movlb	61	; () banked
  7275  01A1B2  9F14               	bcf	20,7,b	;volatile
  7276                           
  7277                           ; BSR set to: 61
  7278                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  7279  01A1B4  0E20               	movlw	32
  7280  01A1B6  6F15               	movwf	21,b	;volatile
  7281                           
  7282                           ; BSR set to: 61
  7283                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  7284  01A1B8  0E03               	movlw	3
  7285  01A1BA  6F16               	movwf	22,b	;volatile
  7286                           
  7287                           ; BSR set to: 61
  7288                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  7289  01A1BC  0E04               	movlw	4
  7290  01A1BE  6F19               	movwf	25,b	;volatile
  7291                           
  7292                           ; BSR set to: 61
  7293                           ;eadog.c: 55:  SPI1CLK = 0x02;
  7294  01A1C0  0E02               	movlw	2
  7295  01A1C2  6F1C               	movwf	28,b	;volatile
  7296                           
  7297                           ; BSR set to: 61
  7298                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  7299  01A1C4  0E83               	movlw	131
  7300  01A1C6  6F14               	movwf	20,b	;volatile
  7301                           
  7302                           ; BSR set to: 61
  7303                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  7304  01A1C8  8F14               	bsf	20,7,b	;volatile
  7305                           
  7306                           ; BSR set to: 61
  7307                           ;eadog.c: 60:  wdtdelay(350000);
  7308  01A1CA  0E30               	movlw	48
  7309  01A1CC  6EE6               	movwf	postinc1,c
  7310  01A1CE  0E57               	movlw	87
  7311  01A1D0  6EE6               	movwf	postinc1,c
  7312  01A1D2  0E05               	movlw	5
  7313  01A1D4  6EE6               	movwf	postinc1,c
  7314  01A1D6  0E00               	movlw	0
  7315  01A1D8  6EE6               	movwf	postinc1,c
  7316  01A1DA  EC19  F0DB         	call	_wdtdelay	;wreg free
  7317                           
  7318                           ; BSR set to: 0
  7319                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  7320  01A1DE  0E46               	movlw	70
  7321  01A1E0  6EE6               	movwf	postinc1,c
  7322  01A1E2  EC72  F0DD         	call	_send_lcd_cmd_long	;wreg free
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  7326  01A1E6  0E41               	movlw	65
  7327  01A1E8  6EE6               	movwf	postinc1,c
  7328  01A1EA  EC92  F0DD         	call	_send_lcd_cmd	;wreg free
  7329                           
  7330                           ; BSR set to: 0
  7331                           ;eadog.c: 63:  wdtdelay(80);
  7332  01A1EE  0E50               	movlw	80
  7333  01A1F0  6EE6               	movwf	postinc1,c
  7334  01A1F2  0E00               	movlw	0
  7335  01A1F4  6EE6               	movwf	postinc1,c
  7336  01A1F6  0E00               	movlw	0
  7337  01A1F8  6EE6               	movwf	postinc1,c
  7338  01A1FA  0E00               	movlw	0
  7339  01A1FC  6EE6               	movwf	postinc1,c
  7340  01A1FE  EC19  F0DB         	call	_wdtdelay	;wreg free
  7341                           
  7342                           ; BSR set to: 0
  7343                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  7344  01A202  0E53               	movlw	83
  7345  01A204  6EE6               	movwf	postinc1,c
  7346  01A206  EC92  F0DD         	call	_send_lcd_cmd	;wreg free
  7347                           
  7348                           ; BSR set to: 0
  7349                           ;eadog.c: 65:  send_lcd_data(2);
  7350  01A20A  0E02               	movlw	2
  7351  01A20C  6EE6               	movwf	postinc1,c
  7352  01A20E  EC20  F0E1         	call	_send_lcd_data	;wreg free
  7353                           
  7354                           ; BSR set to: 0
  7355                           ;eadog.c: 66:  wdtdelay(80);
  7356  01A212  0E50               	movlw	80
  7357  01A214  6EE6               	movwf	postinc1,c
  7358  01A216  0E00               	movlw	0
  7359  01A218  6EE6               	movwf	postinc1,c
  7360  01A21A  0E00               	movlw	0
  7361  01A21C  6EE6               	movwf	postinc1,c
  7362  01A21E  0E00               	movlw	0
  7363  01A220  6EE6               	movwf	postinc1,c
  7364  01A222  EC19  F0DB         	call	_wdtdelay	;wreg free
  7365                           
  7366                           ; BSR set to: 0
  7367                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  7368  01A226  0E51               	movlw	81
  7369  01A228  6EE6               	movwf	postinc1,c
  7370  01A22A  EC72  F0DD         	call	_send_lcd_cmd_long	;wreg free
  7371                           
  7372                           ; BSR set to: 0
  7373                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  7374  01A22E  013D               	movlb	61	; () banked
  7375  01A230  9F14               	bcf	20,7,b	;volatile
  7376                           
  7377                           ; BSR set to: 61
  7378                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  7379  01A232  0E02               	movlw	2
  7380  01A234  6F16               	movwf	22,b	;volatile
  7381                           
  7382                           ; BSR set to: 61
  7383                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  7384  01A236  8F14               	bsf	20,7,b	;volatile
  7385                           
  7386                           ; BSR set to: 61
  7387                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  7388  01A238  931A               	bcf	26,1,b	;volatile
  7389                           
  7390                           ; BSR set to: 61
  7391                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  7392  01A23A  0E3F               	movlw	-193
  7393  01A23C  013B               	movlb	59	; () banked
  7394  01A23E  17FD               	andwf	253,f,b	;volatile
  7395                           
  7396                           ; BSR set to: 59
  7397                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  7398  01A240  9BFD               	bcf	253,5,b	;volatile
  7399                           
  7400                           ; BSR set to: 59
  7401                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  7402  01A242  51FD               	movf	253,w,b	;volatile
  7403  01A244  0BF9               	andlw	-7
  7404  01A246  0902               	iorlw	2
  7405  01A248  6FFD               	movwf	253,b	;volatile
  7406                           
  7407                           ; BSR set to: 59
  7408                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  7409  01A24A  0EE7               	movlw	-25
  7410  01A24C  17FD               	andwf	253,f,b	;volatile
  7411                           
  7412                           ; BSR set to: 59
  7413                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  7414  01A24E  81FD               	bsf	253,0,b	;volatile
  7415                           
  7416                           ; BSR set to: 59
  7417                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  7418  01A250  0E83               	movlw	low _ring_buf1
  7419  01A252  6FF9               	movwf	249,b	;volatile
  7420  01A254  0E03               	movlw	high _ring_buf1
  7421  01A256  6FFA               	movwf	250,b	;volatile
  7422  01A258  0E00               	movlw	low (_ring_buf1 shr (0+16))
  7423  01A25A  6FFB               	movwf	251,b	;volatile
  7424                           
  7425                           ; BSR set to: 59
  7426                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  7427  01A25C  9BFC               	bcf	252,5,b	;volatile
  7428                           
  7429                           ; BSR set to: 59
  7430                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  7431  01A25E  013D               	movlb	61	; () banked
  7432  01A260  831A               	bsf	26,1,b	;volatile
  7433                           
  7434                           ; BSR set to: 61
  7435                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  7436  01A262  94BE               	bcf	190,2,c	;volatile
  7437                           
  7438                           ; BSR set to: 61
  7439                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7440  01A264  0012               	return		;funcret
  7441  01A266                     __end_of_init_display:
  7442                           	opt callstack 0
  7443                           
  7444 ;; *************** function _send_lcd_data *****************
  7445 ;; Defined at:
  7446 ;;		line 123 in file "eadog.c"
  7447 ;; Parameters:    Size  Location     Type
  7448 ;;  data            1  [STACK] const unsigned char 
  7449 ;; Auto vars:     Size  Location     Type
  7450 ;;		None
  7451 ;; Return value:  Size  Location     Type
  7452 ;;                  1  [STACK] void 
  7453 ;; Registers used:
  7454 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7455 ;; Tracked objects:
  7456 ;;		On entry : 3F/0
  7457 ;;		On exit  : 3F/0
  7458 ;;		Unchanged: 0/0
  7459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7464 ;;Total ram usage:        0 bytes
  7465 ;; Hardware stack levels used:    1
  7466 ;; Hardware stack levels required when called:   16
  7467 ;; This function calls:
  7468 ;;		_SPI1_Exchange8bit
  7469 ;;		_wdtdelay
  7470 ;; This function is called by:
  7471 ;;		_init_display
  7472 ;; This function uses a reentrant model
  7473 ;;
  7474                           
  7475                           	psect	text12
  7476  01C240                     __ptext12:
  7477                           	opt callstack 0
  7478  01C240                     _send_lcd_data:
  7479                           	opt callstack 13
  7480                           
  7481                           ; BSR set to: 61
  7482                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7483                           ;incstack = 0
  7484                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  7485  01C240  94BC               	bcf	188,2,c	;volatile
  7486                           
  7487                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  7488                           ;stkvar	_data @ sp[(0)+-1]
  7489  01C242  0EFF               	movlw	-1
  7490  01C244  50E3               	movf	plusw1,w,c
  7491  01C246  6EE6               	movwf	postinc1,c
  7492  01C248  ECDF  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7493                           
  7494                           ; BSR set to: 57
  7495                           ;eadog.c: 127:  wdtdelay(8);
  7496  01C24C  0E08               	movlw	8
  7497  01C24E  6EE6               	movwf	postinc1,c
  7498  01C250  0E00               	movlw	0
  7499  01C252  6EE6               	movwf	postinc1,c
  7500  01C254  0E00               	movlw	0
  7501  01C256  6EE6               	movwf	postinc1,c
  7502  01C258  0E00               	movlw	0
  7503  01C25A  6EE6               	movwf	postinc1,c
  7504  01C25C  EC19  F0DB         	call	_wdtdelay	;wreg free
  7505                           
  7506                           ; BSR set to: 0
  7507                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  7508  01C260  52E5               	movf	postdec1,f,c
  7509  01C262  0012               	return		;funcret
  7510  01C264                     __end_of_send_lcd_data:
  7511                           	opt callstack 0
  7512                           
  7513 ;; *************** function _send_lcd_cmd_long *****************
  7514 ;; Defined at:
  7515 ;;		line 139 in file "eadog.c"
  7516 ;; Parameters:    Size  Location     Type
  7517 ;;  cmd             1  [STACK] const unsigned char 
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;		None
  7520 ;; Return value:  Size  Location     Type
  7521 ;;                  1  [STACK] void 
  7522 ;; Registers used:
  7523 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7524 ;; Tracked objects:
  7525 ;;		On entry : 3F/0
  7526 ;;		On exit  : 3F/0
  7527 ;;		Unchanged: 0/0
  7528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7533 ;;Total ram usage:        0 bytes
  7534 ;; Hardware stack levels used:    1
  7535 ;; Hardware stack levels required when called:   16
  7536 ;; This function calls:
  7537 ;;		_SPI1_Exchange8bit
  7538 ;;		_wdtdelay
  7539 ;; This function is called by:
  7540 ;;		_init_display
  7541 ;; This function uses a reentrant model
  7542 ;;
  7543                           
  7544                           	psect	text13
  7545  01BAE4                     __ptext13:
  7546                           	opt callstack 0
  7547  01BAE4                     _send_lcd_cmd_long:
  7548                           	opt callstack 13
  7549                           
  7550                           ; BSR set to: 0
  7551                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7552                           ;incstack = 0
  7553                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  7554  01BAE4  94BC               	bcf	188,2,c	;volatile
  7555                           
  7556                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  7557  01BAE6  0EFE               	movlw	254
  7558  01BAE8  6EE6               	movwf	postinc1,c
  7559  01BAEA  ECDF  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7560                           
  7561                           ; BSR set to: 57
  7562                           ;eadog.c: 143:  wdtdelay(8);
  7563  01BAEE  0E08               	movlw	8
  7564  01BAF0  6EE6               	movwf	postinc1,c
  7565  01BAF2  0E00               	movlw	0
  7566  01BAF4  6EE6               	movwf	postinc1,c
  7567  01BAF6  0E00               	movlw	0
  7568  01BAF8  6EE6               	movwf	postinc1,c
  7569  01BAFA  0E00               	movlw	0
  7570  01BAFC  6EE6               	movwf	postinc1,c
  7571  01BAFE  EC19  F0DB         	call	_wdtdelay	;wreg free
  7572                           
  7573                           ; BSR set to: 0
  7574                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  7575                           ;stkvar	_cmd @ sp[(0)+-1]
  7576  01BB02  0EFF               	movlw	-1
  7577  01BB04  50E3               	movf	plusw1,w,c
  7578  01BB06  6EE6               	movwf	postinc1,c
  7579  01BB08  ECDF  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7580                           
  7581                           ;eadog.c: 145:  wdtdelay(800);
  7582  01BB0C  0E20               	movlw	32
  7583  01BB0E  6EE6               	movwf	postinc1,c
  7584  01BB10  0E03               	movlw	3
  7585  01BB12  6EE6               	movwf	postinc1,c
  7586  01BB14  0E00               	movlw	0
  7587  01BB16  6EE6               	movwf	postinc1,c
  7588  01BB18  0E00               	movlw	0
  7589  01BB1A  6EE6               	movwf	postinc1,c
  7590  01BB1C  EC19  F0DB         	call	_wdtdelay	;wreg free
  7591                           
  7592                           ; BSR set to: 0
  7593                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7594  01BB20  52E5               	movf	postdec1,f,c
  7595  01BB22  0012               	return		;funcret
  7596  01BB24                     __end_of_send_lcd_cmd_long:
  7597                           	opt callstack 0
  7598                           
  7599 ;; *************** function _send_lcd_cmd *****************
  7600 ;; Defined at:
  7601 ;;		line 130 in file "eadog.c"
  7602 ;; Parameters:    Size  Location     Type
  7603 ;;  cmd             1  [STACK] const unsigned char 
  7604 ;; Auto vars:     Size  Location     Type
  7605 ;;		None
  7606 ;; Return value:  Size  Location     Type
  7607 ;;                  1  [STACK] void 
  7608 ;; Registers used:
  7609 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7610 ;; Tracked objects:
  7611 ;;		On entry : 3F/0
  7612 ;;		On exit  : 3F/0
  7613 ;;		Unchanged: 0/0
  7614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7619 ;;Total ram usage:        0 bytes
  7620 ;; Hardware stack levels used:    1
  7621 ;; Hardware stack levels required when called:   16
  7622 ;; This function calls:
  7623 ;;		_SPI1_Exchange8bit
  7624 ;;		_wdtdelay
  7625 ;; This function is called by:
  7626 ;;		_init_display
  7627 ;; This function uses a reentrant model
  7628 ;;
  7629                           
  7630                           	psect	text14
  7631  01BB24                     __ptext14:
  7632                           	opt callstack 0
  7633  01BB24                     _send_lcd_cmd:
  7634                           	opt callstack 13
  7635                           
  7636                           ; BSR set to: 0
  7637                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7638                           ;incstack = 0
  7639                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  7640  01BB24  94BC               	bcf	188,2,c	;volatile
  7641                           
  7642                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  7643  01BB26  0EFE               	movlw	254
  7644  01BB28  6EE6               	movwf	postinc1,c
  7645  01BB2A  ECDF  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7646                           
  7647                           ; BSR set to: 57
  7648                           ;eadog.c: 134:  wdtdelay(8);
  7649  01BB2E  0E08               	movlw	8
  7650  01BB30  6EE6               	movwf	postinc1,c
  7651  01BB32  0E00               	movlw	0
  7652  01BB34  6EE6               	movwf	postinc1,c
  7653  01BB36  0E00               	movlw	0
  7654  01BB38  6EE6               	movwf	postinc1,c
  7655  01BB3A  0E00               	movlw	0
  7656  01BB3C  6EE6               	movwf	postinc1,c
  7657  01BB3E  EC19  F0DB         	call	_wdtdelay	;wreg free
  7658                           
  7659                           ; BSR set to: 0
  7660                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  7661                           ;stkvar	_cmd @ sp[(0)+-1]
  7662  01BB42  0EFF               	movlw	-1
  7663  01BB44  50E3               	movf	plusw1,w,c
  7664  01BB46  6EE6               	movwf	postinc1,c
  7665  01BB48  ECDF  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7666                           
  7667                           ;eadog.c: 136:  wdtdelay(8);
  7668  01BB4C  0E08               	movlw	8
  7669  01BB4E  6EE6               	movwf	postinc1,c
  7670  01BB50  0E00               	movlw	0
  7671  01BB52  6EE6               	movwf	postinc1,c
  7672  01BB54  0E00               	movlw	0
  7673  01BB56  6EE6               	movwf	postinc1,c
  7674  01BB58  0E00               	movlw	0
  7675  01BB5A  6EE6               	movwf	postinc1,c
  7676  01BB5C  EC19  F0DB         	call	_wdtdelay	;wreg free
  7677                           
  7678                           ; BSR set to: 0
  7679                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  7680  01BB60  52E5               	movf	postdec1,f,c
  7681  01BB62  0012               	return		;funcret
  7682  01BB64                     __end_of_send_lcd_cmd:
  7683                           	opt callstack 0
  7684                           
  7685 ;; *************** function _SPI1_Exchange8bit *****************
  7686 ;; Defined at:
  7687 ;;		line 79 in file "mcc_generated_files/spi1.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;  data            1  [STACK] unsigned char 
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;		None
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  1  [STACK] unsigned char 
  7694 ;; Registers used:
  7695 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 3F/39
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7705 ;;Total ram usage:        0 bytes
  7706 ;; Hardware stack levels used:    1
  7707 ;; Hardware stack levels required when called:   15
  7708 ;; This function calls:
  7709 ;;		Nothing
  7710 ;; This function is called by:
  7711 ;;		_send_lcd_data
  7712 ;;		_send_lcd_cmd
  7713 ;;		_send_lcd_cmd_long
  7714 ;;		_set_dac
  7715 ;; This function uses a reentrant model
  7716 ;;
  7717                           
  7718                           	psect	text15
  7719  01C3BE                     __ptext15:
  7720                           	opt callstack 0
  7721  01C3BE                     _SPI1_Exchange8bit:
  7722                           	opt callstack 14
  7723                           
  7724                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  7725                           
  7726                           ; BSR set to: 0
  7727                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7728                           ;incstack = 0
  7729  01C3BE  0E01               	movlw	1
  7730  01C3C0  013D               	movlb	61	; () banked
  7731  01C3C2  6F12               	movwf	18,b	;volatile
  7732                           
  7733                           ; BSR set to: 61
  7734                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  7735                           ;stkvar	_data @ sp[(0)+-1]
  7736  01C3C4  0EFF               	movlw	-1
  7737  01C3C6  006F FF8F FD11     	movff	plusw1,15633	;volatile
  7738  01C3CC                     l807:
  7739                           
  7740                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7741  01C3CC  0139               	movlb	57	; () banked
  7742  01C3CE  A9A2               	btfss	162,4,b	;volatile
  7743  01C3D0  D7FD               	goto	l807
  7744                           
  7745                           ; BSR set to: 57
  7746                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7747  01C3D2  006F F440  F001    	movff	15632,btemp	;volatile
  7748                           
  7749                           ; BSR set to: 57
  7750                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7751  01C3D8  52E5               	movf	postdec1,f,c
  7752  01C3DA  0012               	return		;funcret
  7753  01C3DC                     __end_of_SPI1_Exchange8bit:
  7754                           	opt callstack 0
  7755                           
  7756 ;; *************** function _ringBufS_init *****************
  7757 ;; Defined at:
  7758 ;;		line 22 in file "ringbufs.c"
  7759 ;; Parameters:    Size  Location     Type
  7760 ;;  _this           2  [STACK] PTR volatile struct ring
  7761 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7762 ;; Auto vars:     Size  Location     Type
  7763 ;;		None
  7764 ;; Return value:  Size  Location     Type
  7765 ;;                  1  [STACK] void 
  7766 ;; Registers used:
  7767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7768 ;; Tracked objects:
  7769 ;;		On entry : 0/1
  7770 ;;		On exit  : 0/0
  7771 ;;		Unchanged: 0/0
  7772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7777 ;;Total ram usage:        0 bytes
  7778 ;; Hardware stack levels used:    1
  7779 ;; Hardware stack levels required when called:   16
  7780 ;; This function calls:
  7781 ;;		_memset
  7782 ;; This function is called by:
  7783 ;;		_init_display
  7784 ;; This function uses a reentrant model
  7785 ;;
  7786                           
  7787                           	psect	text16
  7788  01BFE6                     __ptext16:
  7789                           	opt callstack 0
  7790  01BFE6                     _ringBufS_init:
  7791                           	opt callstack 13
  7792                           
  7793                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7794                           
  7795                           ; BSR set to: 57
  7796                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7797                           ;incstack = 0
  7798  01BFE6  0E43               	movlw	67
  7799  01BFE8  6EE6               	movwf	postinc1,c
  7800  01BFEA  0E00               	movlw	0
  7801  01BFEC  6EE6               	movwf	postinc1,c
  7802  01BFEE  0E00               	movlw	0
  7803  01BFF0  6EE6               	movwf	postinc1,c
  7804  01BFF2  0E00               	movlw	0
  7805  01BFF4  6EE6               	movwf	postinc1,c
  7806                           
  7807                           ;stkvar	__this @ sp[(-4)+-2]
  7808  01BFF6  0EFA               	movlw	-6
  7809  01BFF8  006F FF8F FFE6     	movff	plusw1,postinc1
  7810  01BFFE  006F FF8F FFE6     	movff	plusw1,postinc1
  7811  01C004  EC6A  F0B7         	call	_memset	;wreg free
  7812                           
  7813                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7814  01C008  52E5               	movf	postdec1,f,c
  7815  01C00A  52E5               	movf	postdec1,f,c
  7816  01C00C  0012               	return		;funcret
  7817  01C00E                     __end_of_ringBufS_init:
  7818                           	opt callstack 0
  7819                           
  7820 ;; *************** function _init_bsoc *****************
  7821 ;; Defined at:
  7822 ;;		line 110 in file "bsoc.c"
  7823 ;; Parameters:    Size  Location     Type
  7824 ;;		None
  7825 ;; Auto vars:     Size  Location     Type
  7826 ;;		None
  7827 ;; Return value:  Size  Location     Type
  7828 ;;                  1  [STACK] void 
  7829 ;; Registers used:
  7830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7831 ;; Tracked objects:
  7832 ;;		On entry : 0/0
  7833 ;;		On exit  : 0/0
  7834 ;;		Unchanged: 0/0
  7835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7840 ;;Total ram usage:        0 bytes
  7841 ;; Hardware stack levels used:    1
  7842 ;; Hardware stack levels required when called:   18
  7843 ;; This function calls:
  7844 ;;		_TMR3_SetInterruptHandler
  7845 ;;		_Volts_to_SOC
  7846 ;;		___fldiv
  7847 ;;		___flmul
  7848 ;;		___fltol
  7849 ;;		___xxtofl
  7850 ;;		_conv_raw_result
  7851 ;; This function is called by:
  7852 ;;		_main
  7853 ;; This function uses a reentrant model
  7854 ;;
  7855                           
  7856                           	psect	text17
  7857  017C4A                     __ptext17:
  7858                           	opt callstack 0
  7859  017C4A                     _init_bsoc:
  7860                           	opt callstack 12
  7861                           
  7862                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  7863                           
  7864                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7865                           ;incstack = 0
  7866  017C4A  0E00               	movlw	0
  7867  017C4C  6EE6               	movwf	postinc1,c
  7868  017C4E  0E00               	movlw	0
  7869  017C50  6EE6               	movwf	postinc1,c
  7870  017C52  0E7A               	movlw	122
  7871  017C54  6EE6               	movwf	postinc1,c
  7872  017C56  0E44               	movlw	68
  7873  017C58  6EE6               	movwf	postinc1,c
  7874  017C5A  0E00               	movlw	0
  7875  017C5C  6EE6               	movwf	postinc1,c
  7876  017C5E  0E04               	movlw	4
  7877  017C60  6EE6               	movwf	postinc1,c
  7878  017C62  ECB1  F0A9         	call	_conv_raw_result	;wreg free
  7879  017C66  0060  F007  FFE6   	movff	btemp,postinc1
  7880  017C6C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7881  017C72  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7882  017C78  0060  F013  FFE6   	movff	btemp+3,postinc1
  7883  017C7E  EC6D  F0C8         	call	___fltol	;wreg free
  7884  017C82  0060  F007  FFE6   	movff	btemp,postinc1
  7885  017C88  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7886  017C8E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7887  017C94  0060  F013  FFE6   	movff	btemp+3,postinc1
  7888  017C9A  0E00               	movlw	0
  7889  017C9C  6EE6               	movwf	postinc1,c
  7890  017C9E  EC81  F0C2         	call	___xxtofl	;wreg free
  7891  017CA2  0060  F007  FFE6   	movff	btemp,postinc1
  7892  017CA8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7893  017CAE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7894  017CB4  0060  F013  FFE6   	movff	btemp+3,postinc1
  7895  017CBA  EC01  F09F         	call	___flmul	;wreg free
  7896  017CBE  0060  F007  FFE6   	movff	btemp,postinc1
  7897  017CC4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7898  017CCA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7899  017CD0  0060  F013  FFE6   	movff	btemp+3,postinc1
  7900  017CD6  EC6D  F0C8         	call	___fltol	;wreg free
  7901  017CDA  0060  F007  FFE6   	movff	btemp,postinc1
  7902  017CE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7903  017CE6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7904  017CEC  0060  F013  FFE6   	movff	btemp+3,postinc1
  7905  017CF2  ECB1  F0D3         	call	_Volts_to_SOC	;wreg free
  7906  017CF6  0060  F004  F7B5   	movff	btemp,_C+182	;volatile
  7907  017CFC  0060  F008  F7B6   	movff	btemp+1,_C+183	;volatile
  7908                           
  7909                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  7910  017D02  EE21  F38B         	lfsr	2,_C+140	;volatile
  7911  017D06  006F FF7B FFE6     	movff	postinc2,postinc1
  7912  017D0C  006F FF7B FFE6     	movff	postinc2,postinc1
  7913  017D12  006F FF7B FFE6     	movff	postinc2,postinc1
  7914  017D18  006F FF7B FFE6     	movff	postinc2,postinc1
  7915  017D1E  0E00               	movlw	0
  7916  017D20  6EE6               	movwf	postinc1,c
  7917  017D22  0E00               	movlw	0
  7918  017D24  6EE6               	movwf	postinc1,c
  7919  017D26  0EC8               	movlw	200
  7920  017D28  6EE6               	movwf	postinc1,c
  7921  017D2A  0E42               	movlw	66
  7922  017D2C  6EE6               	movwf	postinc1,c
  7923  017D2E  0E00               	movlw	0
  7924  017D30  6EE6               	movwf	postinc1,c
  7925  017D32  0E00               	movlw	0
  7926  017D34  6EE6               	movwf	postinc1,c
  7927  017D36  0E7A               	movlw	122
  7928  017D38  6EE6               	movwf	postinc1,c
  7929  017D3A  0E44               	movlw	68
  7930  017D3C  6EE6               	movwf	postinc1,c
  7931  017D3E  0E00               	movlw	0
  7932  017D40  6EE6               	movwf	postinc1,c
  7933  017D42  0E04               	movlw	4
  7934  017D44  6EE6               	movwf	postinc1,c
  7935  017D46  ECB1  F0A9         	call	_conv_raw_result	;wreg free
  7936  017D4A  0060  F007  FFE6   	movff	btemp,postinc1
  7937  017D50  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7938  017D56  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7939  017D5C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7940  017D62  EC6D  F0C8         	call	___fltol	;wreg free
  7941  017D66  0060  F007  FFE6   	movff	btemp,postinc1
  7942  017D6C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7943  017D72  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7944  017D78  0060  F013  FFE6   	movff	btemp+3,postinc1
  7945  017D7E  0E00               	movlw	0
  7946  017D80  6EE6               	movwf	postinc1,c
  7947  017D82  EC81  F0C2         	call	___xxtofl	;wreg free
  7948  017D86  0060  F007  FFE6   	movff	btemp,postinc1
  7949  017D8C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7950  017D92  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7951  017D98  0060  F013  FFE6   	movff	btemp+3,postinc1
  7952  017D9E  EC01  F09F         	call	___flmul	;wreg free
  7953  017DA2  0060  F007  FFE6   	movff	btemp,postinc1
  7954  017DA8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7955  017DAE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7956  017DB4  0060  F013  FFE6   	movff	btemp+3,postinc1
  7957  017DBA  EC6D  F0C8         	call	___fltol	;wreg free
  7958  017DBE  0060  F007  FFE6   	movff	btemp,postinc1
  7959  017DC4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7960  017DCA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7961  017DD0  0060  F013  FFE6   	movff	btemp+3,postinc1
  7962  017DD6  ECB1  F0D3         	call	_Volts_to_SOC	;wreg free
  7963  017DDA  0060  F004  F00B   	movff	btemp,btemp+10
  7964  017DE0  0060  F008  F00C   	movff	btemp+1,btemp+11
  7965  017DE6  500B               	movf	(btemp+10)^0,w,c
  7966  017DE8  6E05               	movwf	(btemp+4)^0,c
  7967  017DEA  500C               	movf	(btemp+11)^0,w,c
  7968  017DEC  6E06               	movwf	(btemp+5)^0,c
  7969  017DEE  6A07               	clrf	(btemp+6)^0,c
  7970  017DF0  6A08               	clrf	(btemp+7)^0,c
  7971  017DF2  0060  F017  FFE6   	movff	btemp+4,postinc1
  7972  017DF8  0060  F01B  FFE6   	movff	btemp+5,postinc1
  7973  017DFE  0060  F01F  FFE6   	movff	btemp+6,postinc1
  7974  017E04  0060  F023  FFE6   	movff	btemp+7,postinc1
  7975  017E0A  0E00               	movlw	0
  7976  017E0C  6EE6               	movwf	postinc1,c
  7977  017E0E  EC81  F0C2         	call	___xxtofl	;wreg free
  7978  017E12  0060  F007  FFE6   	movff	btemp,postinc1
  7979  017E18  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7980  017E1E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7981  017E24  0060  F013  FFE6   	movff	btemp+3,postinc1
  7982  017E2A  ECF4  F0A6         	call	___fldiv	;wreg free
  7983  017E2E  0060  F007  FFE6   	movff	btemp,postinc1
  7984  017E34  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7985  017E3A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7986  017E40  0060  F013  FFE6   	movff	btemp+3,postinc1
  7987  017E46  EC01  F09F         	call	___flmul	;wreg free
  7988  017E4A  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  7989  017E50  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  7990  017E56  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  7991  017E5C  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  7992                           
  7993                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
  7994  017E62  EE21  F38F         	lfsr	2,_C+144	;volatile
  7995  017E66  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  7996  017E6C  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  7997  017E72  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  7998  017E78  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  7999                           
  8000                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
  8001  017E7E  0E94               	movlw	low _calc_bsoc
  8002  017E80  6EE6               	movwf	postinc1,c
  8003  017E82  0E33               	movlw	high _calc_bsoc
  8004  017E84  6EE6               	movwf	postinc1,c
  8005  017E86  0E01               	movlw	low (_calc_bsoc shr (0+16))
  8006  017E88  6EE6               	movwf	postinc1,c
  8007  017E8A  EC7F  F0E0         	call	_TMR3_SetInterruptHandler	;wreg free
  8008                           
  8009                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8010  017E8E  0012               	return		;funcret
  8011  017E90                     __end_of_init_bsoc:
  8012                           	opt callstack 0
  8013                           
  8014 ;; *************** function _Volts_to_SOC *****************
  8015 ;; Defined at:
  8016 ;;		line 175 in file "bsoc.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;  cvoltage        4  [STACK] const unsigned long 
  8019 ;; Auto vars:     Size  Location     Type
  8020 ;;  soc             2  [STACK] unsigned short 
  8021 ;;  slot            1  [STACK] unsigned char 
  8022 ;; Return value:  Size  Location     Type
  8023 ;;                  2  [STACK] unsigned short 
  8024 ;; Registers used:
  8025 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8026 ;; Tracked objects:
  8027 ;;		On entry : 0/0
  8028 ;;		On exit  : 0/0
  8029 ;;		Unchanged: 0/0
  8030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8035 ;;Total ram usage:        0 bytes
  8036 ;; Hardware stack levels used:    1
  8037 ;; Hardware stack levels required when called:   15
  8038 ;; This function calls:
  8039 ;;		Nothing
  8040 ;; This function is called by:
  8041 ;;		_init_bsoc
  8042 ;; This function uses a reentrant model
  8043 ;;
  8044                           
  8045                           	psect	text18
  8046  01A762                     __ptext18:
  8047                           	opt callstack 0
  8048  01A762                     _Volts_to_SOC:
  8049                           	opt callstack 0
  8050                           
  8051                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8052  01A762  52E6               	movf	postinc1,f,c
  8053  01A764  52E6               	movf	postinc1,f,c
  8054  01A766  52E6               	movf	postinc1,f,c
  8055                           
  8056                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
  8057                           ;stkvar	_soc @ sp[(-3)+0]
  8058                           
  8059                           ;incstack = 0
  8060  01A768  0EFD               	movlw	-3
  8061  01A76A  6AE3               	clrf	plusw1,c
  8062  01A76C  0EFE               	movlw	-2
  8063  01A76E  6AE3               	clrf	plusw1,c
  8064                           
  8065                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
  8066                           ;stkvar	_slot @ sp[(-3)+2]
  8067  01A770  0EFF               	movlw	-1
  8068  01A772  6AE3               	clrf	plusw1,c
  8069  01A774                     l10892:
  8070                           
  8071                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  8072                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  8073                           ;stkvar	_slot @ sp[(-3)+2]
  8074  01A774  0EFF               	movlw	-1
  8075  01A776  50E3               	movf	plusw1,w,c
  8076  01A778  0D08               	mullw	8
  8077  01A77A  0EDF               	movlw	low _BVSOC_TABLE
  8078  01A77C  24F3               	addwf	243,w,c
  8079  01A77E  6EF6               	movwf	tblptrl,c
  8080  01A780  0EF9               	movlw	high _BVSOC_TABLE
  8081  01A782  20F4               	addwfc	244,w,c
  8082  01A784  6EF7               	movwf	tblptrh,c
  8083  01A786                     	if	1	;There are 3 active tblptr bytes
  8084  01A786  6AF8               	clrf	tblptru,c
  8085  01A788  0E00               	movlw	low (__mediumconst shr (0+16))
  8086  01A78A  22F8               	addwfc	tblptru,f,c
  8087  01A78C                     	endif
  8088  01A78C  0EF9               	movlw	-7
  8089  01A78E  50E3               	movf	plusw1,w,c
  8090  01A790  0009               	tblrd		*+
  8091  01A792  5CF5               	subwf	tablat,w,c
  8092  01A794  0EFA               	movlw	-6
  8093  01A796  50E3               	movf	plusw1,w,c
  8094  01A798  0009               	tblrd		*+
  8095  01A79A  58F5               	subwfb	tablat,w,c
  8096  01A79C  0EFB               	movlw	-5
  8097  01A79E  50E3               	movf	plusw1,w,c
  8098  01A7A0  0009               	tblrd		*+
  8099  01A7A2  58F5               	subwfb	tablat,w,c
  8100  01A7A4  0EFC               	movlw	-4
  8101  01A7A6  50E3               	movf	plusw1,w,c
  8102  01A7A8  0009               	tblrd		*+
  8103  01A7AA  58F5               	subwfb	tablat,w,c
  8104  01A7AC  B0D8               	btfsc	status,0,c
  8105  01A7AE  D020               	goto	l10896
  8106                           
  8107                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
  8108                           ;stkvar	_slot @ sp[(-3)+2]
  8109  01A7B0  0EFF               	movlw	-1
  8110  01A7B2  50E3               	movf	plusw1,w,c
  8111  01A7B4  0D08               	mullw	8
  8112  01A7B6  0E04               	movlw	4
  8113  01A7B8  26F3               	addwf	243,f,c
  8114  01A7BA  0E00               	movlw	0
  8115  01A7BC  22F4               	addwfc	244,f,c
  8116  01A7BE  0EDF               	movlw	low _BVSOC_TABLE
  8117  01A7C0  24F3               	addwf	243,w,c
  8118  01A7C2  6EF6               	movwf	tblptrl,c
  8119  01A7C4  0EF9               	movlw	high _BVSOC_TABLE
  8120  01A7C6  20F4               	addwfc	244,w,c
  8121  01A7C8  6EF7               	movwf	tblptrh,c
  8122  01A7CA                     	if	1	;There are 3 active tblptr bytes
  8123  01A7CA  6AF8               	clrf	tblptru,c
  8124  01A7CC  0E00               	movlw	low (__mediumconst shr (0+16))
  8125  01A7CE  22F8               	addwfc	tblptru,f,c
  8126  01A7D0                     	endif
  8127  01A7D0  0009               	tblrd		*+
  8128  01A7D2  006F FFD4  F00B    	movff	tablat,btemp+10
  8129  01A7D8  0009               	tblrd		*+
  8130  01A7DA  006F FFD4  F00C    	movff	tablat,btemp+11
  8131                           
  8132                           ;stkvar	_soc @ sp[(-3)+0]
  8133  01A7E0  0EFD               	movlw	-3
  8134  01A7E2  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8135  01A7E8  0EFE               	movlw	-2
  8136  01A7EA  0060  F033  FFE3   	movff	btemp+11,plusw1
  8137  01A7F0                     l10896:
  8138                           
  8139                           ;bsoc.c: 187:  }
  8140                           ;stkvar	_slot @ sp[(-3)+2]
  8141  01A7F0  0EFF               	movlw	-1
  8142  01A7F2  2AE3               	incf	plusw1,f,c
  8143                           
  8144                           ;stkvar	_slot @ sp[(-3)+2]
  8145  01A7F4  0EFF               	movlw	-1
  8146  01A7F6  006F FF8C  F001    	movff	plusw1,btemp
  8147  01A7FC  0E19               	movlw	25
  8148  01A7FE  6401               	cpfsgt	btemp^0,c
  8149  01A800  D7B9               	goto	l10892
  8150                           
  8151                           ;bsoc.c: 188:  return soc;
  8152                           ;stkvar	_soc @ sp[(-3)+0]
  8153  01A802  0EFD               	movlw	-3
  8154  01A804  006F FF8C  F001    	movff	plusw1,btemp
  8155  01A80A  0EFE               	movlw	-2
  8156  01A80C  006F FF8C  F002    	movff	plusw1,btemp+1
  8157                           
  8158                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  8159  01A812  0EF9               	movlw	249
  8160  01A814  26E1               	addwf	fsr1l,f,c
  8161  01A816  0EFF               	movlw	255
  8162  01A818  22E2               	addwfc	fsr1h,f,c
  8163  01A81A  0012               	return		;funcret
  8164  01A81C                     __end_of_Volts_to_SOC:
  8165                           	opt callstack 0
  8166                           
  8167 ;; *************** function _hid_display *****************
  8168 ;; Defined at:
  8169 ;;		line 17 in file "hid.c"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;  h               2  [STACK] PTR struct H_data
  8172 ;;		 -> H(7), 
  8173 ;; Auto vars:     Size  Location     Type
  8174 ;;		None
  8175 ;; Return value:  Size  Location     Type
  8176 ;;                  2  [STACK] PTR struct H_data
  8177 ;; Registers used:
  8178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  8179 ;; Tracked objects:
  8180 ;;		On entry : 3F/39
  8181 ;;		On exit  : 0/0
  8182 ;;		Unchanged: 0/0
  8183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8188 ;;Total ram usage:        0 bytes
  8189 ;; Hardware stack levels used:    1
  8190 ;; Hardware stack levels required when called:   17
  8191 ;; This function calls:
  8192 ;;		_hid_input
  8193 ;; This function is called by:
  8194 ;;		_main
  8195 ;; This function uses a reentrant model
  8196 ;;
  8197                           
  8198                           	psect	text19
  8199  018706                     __ptext19:
  8200                           	opt callstack 0
  8201  018706                     _hid_display:
  8202                           	opt callstack 13
  8203                           
  8204                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  8205                           ;stkvar	_h @ sp[(0)+-2]
  8206                           
  8207                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8208                           ;incstack = 0
  8209  018706  0EFE               	movlw	-2
  8210  018708  006F FF8F FFE6     	movff	plusw1,postinc1
  8211  01870E  006F FF8F FFE6     	movff	plusw1,postinc1
  8212  018714  EC7F  F0D2         	call	_hid_input	;wreg free
  8213                           
  8214                           ;hid.c: 21:  switch (h->h_state) {
  8215  018718  D0C6               	goto	l13280
  8216  01871A                     l13258:
  8217                           
  8218                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  8219                           ;stkvar	_h @ sp[(0)+-2]
  8220  01871A  0EFE               	movlw	-2
  8221  01871C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8222  018722  0EFF               	movlw	-1
  8223  018724  006F FF8C  F00C    	movff	plusw1,btemp+11
  8224  01872A  0E01               	movlw	1
  8225  01872C  240B               	addwf	(btemp+10)^0,w,c
  8226  01872E  6ED9               	movwf	fsr2l,c
  8227  018730  0E00               	movlw	0
  8228  018732  200C               	addwfc	(btemp+11)^0,w,c
  8229  018734  6EDA               	movwf	fsr2h,c
  8230  018736  0E01               	movlw	1
  8231  018738  6EDF               	movwf	indf2,c
  8232                           
  8233                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  8234                           ;stkvar	_h @ sp[(0)+-2]
  8235  01873A  0EFE               	movlw	-2
  8236  01873C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8237  018742  0EFF               	movlw	-1
  8238  018744  006F FF8F FFDA     	movff	plusw1,fsr2h
  8239  01874A  0E00               	movlw	0
  8240  01874C  6EDF               	movwf	indf2,c
  8241                           
  8242                           ;hid.c: 25:   h->wait_enter = 1;
  8243                           ;stkvar	_h @ sp[(0)+-2]
  8244  01874E  0EFE               	movlw	-2
  8245  018750  006F FF8C  F00B    	movff	plusw1,btemp+10
  8246  018756  0EFF               	movlw	-1
  8247  018758  006F FF8C  F00C    	movff	plusw1,btemp+11
  8248  01875E  0E04               	movlw	4
  8249  018760  240B               	addwf	(btemp+10)^0,w,c
  8250  018762  6ED9               	movwf	fsr2l,c
  8251  018764  0E00               	movlw	0
  8252  018766  200C               	addwfc	(btemp+11)^0,w,c
  8253  018768  6EDA               	movwf	fsr2h,c
  8254  01876A  0E01               	movlw	1
  8255  01876C  6EDF               	movwf	indf2,c
  8256                           
  8257                           ;hid.c: 26:   h->wait_select = 1;
  8258                           ;stkvar	_h @ sp[(0)+-2]
  8259  01876E  0EFE               	movlw	-2
  8260  018770  006F FF8C  F00B    	movff	plusw1,btemp+10
  8261  018776  0EFF               	movlw	-1
  8262  018778  006F FF8C  F00C    	movff	plusw1,btemp+11
  8263  01877E  0E02               	movlw	2
  8264  018780  240B               	addwf	(btemp+10)^0,w,c
  8265  018782  6ED9               	movwf	fsr2l,c
  8266  018784  0E00               	movlw	0
  8267  018786  200C               	addwfc	(btemp+11)^0,w,c
  8268  018788  6EDA               	movwf	fsr2h,c
  8269  01878A  0E01               	movlw	1
  8270  01878C  6EDF               	movwf	indf2,c
  8271                           
  8272                           ;hid.c: 27:   h->select_p = SW_OFF;
  8273                           ;stkvar	_h @ sp[(0)+-2]
  8274  01878E  0EFE               	movlw	-2
  8275  018790  006F FF8C  F00B    	movff	plusw1,btemp+10
  8276  018796  0EFF               	movlw	-1
  8277  018798  006F FF8C  F00C    	movff	plusw1,btemp+11
  8278  01879E  0E03               	movlw	3
  8279  0187A0  240B               	addwf	(btemp+10)^0,w,c
  8280  0187A2  6ED9               	movwf	fsr2l,c
  8281  0187A4  0E00               	movlw	0
  8282  0187A6  200C               	addwfc	(btemp+11)^0,w,c
  8283  0187A8  6EDA               	movwf	fsr2h,c
  8284  0187AA  0E00               	movlw	0
  8285  0187AC  6EDF               	movwf	indf2,c
  8286                           
  8287                           ;hid.c: 28:   h->enter_p = SW_OFF;
  8288                           ;stkvar	_h @ sp[(0)+-2]
  8289  0187AE  0EFE               	movlw	-2
  8290  0187B0  006F FF8C  F00B    	movff	plusw1,btemp+10
  8291  0187B6  0EFF               	movlw	-1
  8292  0187B8  006F FF8C  F00C    	movff	plusw1,btemp+11
  8293  0187BE  0E05               	movlw	5
  8294  0187C0  240B               	addwf	(btemp+10)^0,w,c
  8295  0187C2  6ED9               	movwf	fsr2l,c
  8296  0187C4  0E00               	movlw	0
  8297  0187C6  200C               	addwfc	(btemp+11)^0,w,c
  8298  0187C8  6EDA               	movwf	fsr2h,c
  8299  0187CA  0E00               	movlw	0
  8300  0187CC  D06A               	goto	L4
  8301  0187CE                     l13270:
  8302                           
  8303                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  8304                           ;stkvar	_h @ sp[(0)+-2]
  8305  0187CE  0EFE               	movlw	-2
  8306  0187D0  006F FF8C  F00B    	movff	plusw1,btemp+10
  8307  0187D6  0EFF               	movlw	-1
  8308  0187D8  006F FF8C  F00C    	movff	plusw1,btemp+11
  8309  0187DE  0E02               	movlw	2
  8310  0187E0  240B               	addwf	(btemp+10)^0,w,c
  8311  0187E2  6ED9               	movwf	fsr2l,c
  8312  0187E4  0E00               	movlw	0
  8313  0187E6  200C               	addwfc	(btemp+11)^0,w,c
  8314  0187E8  6EDA               	movwf	fsr2h,c
  8315  0187EA  50DF               	movf	indf2,w,c
  8316  0187EC  A4D8               	btfss	status,2,c
  8317  0187EE  D076               	goto	l2053
  8318                           
  8319                           ;stkvar	_h @ sp[(0)+-2]
  8320  0187F0  0EFE               	movlw	-2
  8321  0187F2  006F FF8C  F00B    	movff	plusw1,btemp+10
  8322  0187F8  0EFF               	movlw	-1
  8323  0187FA  006F FF8C  F00C    	movff	plusw1,btemp+11
  8324  018800  0E03               	movlw	3
  8325  018802  240B               	addwf	(btemp+10)^0,w,c
  8326  018804  6ED9               	movwf	fsr2l,c
  8327  018806  0E00               	movlw	0
  8328  018808  200C               	addwfc	(btemp+11)^0,w,c
  8329  01880A  6EDA               	movwf	fsr2h,c
  8330  01880C  50DF               	movf	indf2,w,c
  8331  01880E  A4D8               	btfss	status,2,c
  8332  018810  D065               	goto	l2053
  8333                           
  8334                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  8335                           ;stkvar	_h @ sp[(0)+-2]
  8336  018812  0EFE               	movlw	-2
  8337  018814  006F FF8C  F00B    	movff	plusw1,btemp+10
  8338  01881A  0EFF               	movlw	-1
  8339  01881C  006F FF8C  F00C    	movff	plusw1,btemp+11
  8340  018822  0E06               	movlw	6
  8341  018824  240B               	addwf	(btemp+10)^0,w,c
  8342  018826  6ED9               	movwf	fsr2l,c
  8343  018828  0E00               	movlw	0
  8344  01882A  200C               	addwfc	(btemp+11)^0,w,c
  8345  01882C  6EDA               	movwf	fsr2h,c
  8346                           
  8347                           ;stkvar	_h @ sp[(0)+-2]
  8348  01882E  0EFE               	movlw	-2
  8349  018830  006F FF8C  F00B    	movff	plusw1,btemp+10
  8350  018836  0EFF               	movlw	-1
  8351  018838  006F FF8C  F00C    	movff	plusw1,btemp+11
  8352  01883E  0E06               	movlw	6
  8353  018840  240B               	addwf	(btemp+10)^0,w,c
  8354  018842  6EE9               	movwf	fsr0l,c
  8355  018844  0E00               	movlw	0
  8356  018846  200C               	addwfc	(btemp+11)^0,w,c
  8357  018848  6EEA               	movwf	fsr0h,c
  8358  01884A  2AEF               	incf	indf0,f,c
  8359  01884C  50EF               	movf	indf0,w,c
  8360  01884E  0B03               	andlw	3
  8361  018850  6EDF               	movwf	indf2,c
  8362                           
  8363                           ;hid.c: 34:    h->hid_display = h->sequence;
  8364                           ;stkvar	_h @ sp[(0)+-2]
  8365  018852  0EFE               	movlw	-2
  8366  018854  006F FF8C  F00B    	movff	plusw1,btemp+10
  8367  01885A  0EFF               	movlw	-1
  8368  01885C  006F FF8C  F00C    	movff	plusw1,btemp+11
  8369  018862  0E06               	movlw	6
  8370  018864  240B               	addwf	(btemp+10)^0,w,c
  8371  018866  6ED9               	movwf	fsr2l,c
  8372  018868  0E00               	movlw	0
  8373  01886A  200C               	addwfc	(btemp+11)^0,w,c
  8374  01886C  6EDA               	movwf	fsr2h,c
  8375                           
  8376                           ;stkvar	_h @ sp[(0)+-2]
  8377  01886E  0EFE               	movlw	-2
  8378  018870  006F FF8F FFE9     	movff	plusw1,fsr0l
  8379  018876  0EFF               	movlw	-1
  8380  018878  006F FF8F FFEA     	movff	plusw1,fsr0h
  8381  01887E  006F FF7F FFEF     	movff	indf2,indf0
  8382                           
  8383                           ;hid.c: 35:    h->wait_select = 1;
  8384                           ;stkvar	_h @ sp[(0)+-2]
  8385  018884  0EFE               	movlw	-2
  8386  018886  006F FF8C  F00B    	movff	plusw1,btemp+10
  8387  01888C  0EFF               	movlw	-1
  8388  01888E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8389  018894  0E02               	movlw	2
  8390  018896  240B               	addwf	(btemp+10)^0,w,c
  8391  018898  6ED9               	movwf	fsr2l,c
  8392  01889A  0E00               	movlw	0
  8393  01889C  200C               	addwfc	(btemp+11)^0,w,c
  8394  01889E  6EDA               	movwf	fsr2h,c
  8395  0188A0  0E01               	movlw	1
  8396  0188A2                     L4:
  8397  0188A2  6EDF               	movwf	indf2,c
  8398  0188A4  D01B               	goto	l2053
  8399  0188A6                     l13280:
  8400                           
  8401                           ;stkvar	_h @ sp[(0)+-2]
  8402  0188A6  0EFE               	movlw	-2
  8403  0188A8  006F FF8C  F00B    	movff	plusw1,btemp+10
  8404  0188AE  0EFF               	movlw	-1
  8405  0188B0  006F FF8C  F00C    	movff	plusw1,btemp+11
  8406  0188B6  0E01               	movlw	1
  8407  0188B8  240B               	addwf	(btemp+10)^0,w,c
  8408  0188BA  6ED9               	movwf	fsr2l,c
  8409  0188BC  0E00               	movlw	0
  8410  0188BE  200C               	addwfc	(btemp+11)^0,w,c
  8411  0188C0  6EDA               	movwf	fsr2h,c
  8412  0188C2  50DF               	movf	indf2,w,c
  8413  0188C4  6E0B               	movwf	(btemp+10)^0,c
  8414  0188C6  6A0C               	clrf	(btemp+11)^0,c
  8415                           
  8416                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8417                           ; Switch size 1, requested type "simple"
  8418                           ; Number of cases is 1, Range of values is 0 to 0
  8419                           ; switch strategies available:
  8420                           ; Name         Instructions Cycles
  8421                           ; simple_byte            4     3 (average)
  8422                           ;	Chosen strategy is simple_byte
  8423  0188C8  500C               	movf	(btemp+11)^0,w,c
  8424  0188CA  0A00               	xorlw	0	; case 0
  8425  0188CC  A4D8               	btfss	status,2,c
  8426  0188CE  D77F               	goto	l13270
  8427                           
  8428                           ; Switch size 1, requested type "simple"
  8429                           ; Number of cases is 2, Range of values is 0 to 1
  8430                           ; switch strategies available:
  8431                           ; Name         Instructions Cycles
  8432                           ; simple_byte            7     4 (average)
  8433                           ;	Chosen strategy is simple_byte
  8434  0188D0  500B               	movf	(btemp+10)^0,w,c
  8435  0188D2  0A00               	xorlw	0	; case 0
  8436  0188D4  B4D8               	btfsc	status,2,c
  8437  0188D6  D721               	goto	l13258
  8438  0188D8  0A01               	xorlw	1	; case 1
  8439  0188DA  D779               	goto	l13270
  8440  0188DC                     l2053:
  8441                           
  8442                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  8443  0188DC  52E5               	movf	postdec1,f,c
  8444  0188DE  52E5               	movf	postdec1,f,c
  8445  0188E0  0012               	return		;funcret
  8446  0188E2                     __end_of_hid_display:
  8447                           	opt callstack 0
  8448                           
  8449 ;; *************** function _hid_input *****************
  8450 ;; Defined at:
  8451 ;;		line 3 in file "hid.c"
  8452 ;; Parameters:    Size  Location     Type
  8453 ;;  h               2  [STACK] PTR struct H_data
  8454 ;;		 -> H(7), 
  8455 ;; Auto vars:     Size  Location     Type
  8456 ;;		None
  8457 ;; Return value:  Size  Location     Type
  8458 ;;                  2  [STACK] PTR struct H_data
  8459 ;; Registers used:
  8460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8461 ;; Tracked objects:
  8462 ;;		On entry : 0/39
  8463 ;;		On exit  : 0/0
  8464 ;;		Unchanged: 0/0
  8465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8470 ;;Total ram usage:        0 bytes
  8471 ;; Hardware stack levels used:    1
  8472 ;; Hardware stack levels required when called:   16
  8473 ;; This function calls:
  8474 ;;		_get_switch
  8475 ;; This function is called by:
  8476 ;;		_hid_display
  8477 ;; This function uses a reentrant model
  8478 ;;
  8479                           
  8480                           	psect	text20
  8481  01A4FE                     __ptext20:
  8482                           	opt callstack 0
  8483  01A4FE                     _hid_input:
  8484                           	opt callstack 13
  8485                           
  8486                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  8487                           
  8488                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8489                           ;incstack = 0
  8490  01A4FE  0E02               	movlw	2
  8491  01A500  6EE6               	movwf	postinc1,c
  8492  01A502  EC9B  F0DF         	call	_get_switch	;wreg free
  8493  01A506  5001               	movf	btemp^0,w,c
  8494  01A508  B4D8               	btfsc	status,2,c
  8495  01A50A  D02C               	goto	l13098
  8496                           
  8497                           ;hid.c: 6:   h->wait_select = 0;
  8498                           ;stkvar	_h @ sp[(0)+-2]
  8499  01A50C  0EFE               	movlw	-2
  8500  01A50E  006F FF8C  F00B    	movff	plusw1,btemp+10
  8501  01A514  0EFF               	movlw	-1
  8502  01A516  006F FF8C  F00C    	movff	plusw1,btemp+11
  8503  01A51C  0E02               	movlw	2
  8504  01A51E  240B               	addwf	(btemp+10)^0,w,c
  8505  01A520  6ED9               	movwf	fsr2l,c
  8506  01A522  0E00               	movlw	0
  8507  01A524  200C               	addwfc	(btemp+11)^0,w,c
  8508  01A526  6EDA               	movwf	fsr2h,c
  8509  01A528  0E00               	movlw	0
  8510  01A52A  6EDF               	movwf	indf2,c
  8511                           
  8512                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  8513  01A52C  0E02               	movlw	2
  8514  01A52E  6EE6               	movwf	postinc1,c
  8515  01A530  EC9B  F0DF         	call	_get_switch	;wreg free
  8516  01A534  5001               	movf	btemp^0,w,c
  8517  01A536  B4D8               	btfsc	status,2,c
  8518  01A538  D003               	goto	u12450
  8519  01A53A  6A0C               	clrf	(btemp+11)^0,c
  8520  01A53C  2A0C               	incf	(btemp+11)^0,f,c
  8521  01A53E  D001               	goto	u12468
  8522  01A540                     u12450:
  8523  01A540  6A0C               	clrf	(btemp+11)^0,c
  8524  01A542                     u12468:
  8525                           
  8526                           ;stkvar	_h @ sp[(0)+-2]
  8527  01A542  0EFE               	movlw	-2
  8528  01A544  006F FF8C  F009    	movff	plusw1,btemp+8
  8529  01A54A  0EFF               	movlw	-1
  8530  01A54C  006F FF8C  F00A    	movff	plusw1,btemp+9
  8531  01A552  0E03               	movlw	3
  8532  01A554  2409               	addwf	(btemp+8)^0,w,c
  8533  01A556  6ED9               	movwf	fsr2l,c
  8534  01A558  0E00               	movlw	0
  8535  01A55A  200A               	addwfc	(btemp+9)^0,w,c
  8536  01A55C  6EDA               	movwf	fsr2h,c
  8537  01A55E  0060  F033  FFDF   	movff	btemp+11,indf2
  8538  01A564                     l13098:
  8539                           
  8540                           ;hid.c: 10:  if (get_switch(SENTER)) {
  8541  01A564  0E03               	movlw	3
  8542  01A566  6EE6               	movwf	postinc1,c
  8543  01A568  EC9B  F0DF         	call	_get_switch	;wreg free
  8544  01A56C  5001               	movf	btemp^0,w,c
  8545  01A56E  B4D8               	btfsc	status,2,c
  8546  01A570  D02C               	goto	l2044
  8547                           
  8548                           ;hid.c: 11:   h->wait_enter = 0;
  8549                           ;stkvar	_h @ sp[(0)+-2]
  8550  01A572  0EFE               	movlw	-2
  8551  01A574  006F FF8C  F00B    	movff	plusw1,btemp+10
  8552  01A57A  0EFF               	movlw	-1
  8553  01A57C  006F FF8C  F00C    	movff	plusw1,btemp+11
  8554  01A582  0E04               	movlw	4
  8555  01A584  240B               	addwf	(btemp+10)^0,w,c
  8556  01A586  6ED9               	movwf	fsr2l,c
  8557  01A588  0E00               	movlw	0
  8558  01A58A  200C               	addwfc	(btemp+11)^0,w,c
  8559  01A58C  6EDA               	movwf	fsr2h,c
  8560  01A58E  0E00               	movlw	0
  8561  01A590  6EDF               	movwf	indf2,c
  8562                           
  8563                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  8564  01A592  0E03               	movlw	3
  8565  01A594  6EE6               	movwf	postinc1,c
  8566  01A596  EC9B  F0DF         	call	_get_switch	;wreg free
  8567  01A59A  5001               	movf	btemp^0,w,c
  8568  01A59C  B4D8               	btfsc	status,2,c
  8569  01A59E  D003               	goto	u12480
  8570  01A5A0  6A0C               	clrf	(btemp+11)^0,c
  8571  01A5A2  2A0C               	incf	(btemp+11)^0,f,c
  8572  01A5A4  D001               	goto	u12498
  8573  01A5A6                     u12480:
  8574  01A5A6  6A0C               	clrf	(btemp+11)^0,c
  8575  01A5A8                     u12498:
  8576                           
  8577                           ;stkvar	_h @ sp[(0)+-2]
  8578  01A5A8  0EFE               	movlw	-2
  8579  01A5AA  006F FF8C  F009    	movff	plusw1,btemp+8
  8580  01A5B0  0EFF               	movlw	-1
  8581  01A5B2  006F FF8C  F00A    	movff	plusw1,btemp+9
  8582  01A5B8  0E05               	movlw	5
  8583  01A5BA  2409               	addwf	(btemp+8)^0,w,c
  8584  01A5BC  6ED9               	movwf	fsr2l,c
  8585  01A5BE  0E00               	movlw	0
  8586  01A5C0  200A               	addwfc	(btemp+9)^0,w,c
  8587  01A5C2  6EDA               	movwf	fsr2h,c
  8588  01A5C4  0060  F033  FFDF   	movff	btemp+11,indf2
  8589  01A5CA                     l2044:
  8590                           
  8591                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
  8592  01A5CA  52E5               	movf	postdec1,f,c
  8593  01A5CC  52E5               	movf	postdec1,f,c
  8594  01A5CE  0012               	return		;funcret
  8595  01A5D0                     __end_of_hid_input:
  8596                           	opt callstack 0
  8597                           
  8598 ;; *************** function _get_switch *****************
  8599 ;; Defined at:
  8600 ;;		line 18 in file "dio.c"
  8601 ;; Parameters:    Size  Location     Type
  8602 ;;  i               1  [STACK] const unsigned char 
  8603 ;; Auto vars:     Size  Location     Type
  8604 ;;		None
  8605 ;; Return value:  Size  Location     Type
  8606 ;;                  1  [STACK] enum E17021
  8607 ;; Registers used:
  8608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  8609 ;; Tracked objects:
  8610 ;;		On entry : 0/39
  8611 ;;		On exit  : 0/0
  8612 ;;		Unchanged: 0/0
  8613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8618 ;;Total ram usage:        0 bytes
  8619 ;; Hardware stack levels used:    1
  8620 ;; Hardware stack levels required when called:   15
  8621 ;; This function calls:
  8622 ;;		Nothing
  8623 ;; This function is called by:
  8624 ;;		_main
  8625 ;;		_hid_input
  8626 ;; This function uses a reentrant model
  8627 ;;
  8628                           
  8629                           	psect	text21
  8630  01BF36                     __ptext21:
  8631                           	opt callstack 0
  8632  01BF36                     _get_switch:
  8633                           	opt callstack 13
  8634                           
  8635                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  8636                           ;stkvar	_i @ sp[(0)+-1]
  8637                           
  8638                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8639                           ;incstack = 0
  8640  01BF36  0EFF               	movlw	-1
  8641  01BF38  006F FF8C  F001    	movff	plusw1,btemp
  8642  01BF3E  0E03               	movlw	3
  8643  01BF40  6401               	cpfsgt	btemp^0,c
  8644  01BF42  D002               	goto	l10108
  8645                           
  8646                           ;dio.c: 21:   return SW_OFF;
  8647  01BF44  0E00               	movlw	0
  8648  01BF46  D00A               	goto	L5
  8649  01BF48                     l10108:
  8650                           
  8651                           ;dio.c: 23:  return S.button[i].sw;
  8652                           ;stkvar	_i @ sp[(0)+-1]
  8653  01BF48  0EFF               	movlw	-1
  8654  01BF4A  50E3               	movf	plusw1,w,c
  8655  01BF4C  0D05               	mullw	5
  8656  01BF4E  0E54               	movlw	low _S
  8657  01BF50  24F3               	addwf	243,w,c
  8658  01BF52  6ED9               	movwf	fsr2l,c
  8659  01BF54  0E02               	movlw	high _S
  8660  01BF56  20F4               	addwfc	prodh,w,c
  8661  01BF58  6EDA               	movwf	fsr2h,c
  8662  01BF5A  50DF               	movf	indf2,w,c
  8663  01BF5C                     L5:
  8664  01BF5C  6E01               	movwf	btemp^0,c
  8665                           
  8666                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8667  01BF5E  52E5               	movf	postdec1,f,c
  8668  01BF60  0012               	return		;funcret
  8669  01BF62                     __end_of_get_switch:
  8670                           	opt callstack 0
  8671                           
  8672 ;; *************** function _esr_check *****************
  8673 ;; Defined at:
  8674 ;;		line 197 in file "bsoc.c"
  8675 ;; Parameters:    Size  Location     Type
  8676 ;;  fsm             1  [STACK] const unsigned char 
  8677 ;; Auto vars:     Size  Location     Type
  8678 ;;		None
  8679 ;; Return value:  Size  Location     Type
  8680 ;;                  4  [STACK] float 
  8681 ;; Registers used:
  8682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8683 ;; Tracked objects:
  8684 ;;		On entry : 0/0
  8685 ;;		On exit  : 0/0
  8686 ;;		Unchanged: 0/0
  8687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8692 ;;Total ram usage:        0 bytes
  8693 ;; Hardware stack levels used:    1
  8694 ;; Hardware stack levels required when called:   18
  8695 ;; This function calls:
  8696 ;;		_StartTimer
  8697 ;;		_TimerDone
  8698 ;;		___fldiv
  8699 ;;		___flsub
  8700 ;;		_conv_raw_result
  8701 ;;		_fabsf
  8702 ;;		_set_load_relay_one
  8703 ;;		_set_load_relay_two
  8704 ;;		_update_adc_result
  8705 ;; This function is called by:
  8706 ;;		_main
  8707 ;; This function uses a reentrant model
  8708 ;;
  8709                           
  8710                           	psect	text22
  8711  0171C0                     __ptext22:
  8712                           	opt callstack 0
  8713  0171C0                     _esr_check:
  8714                           	opt callstack 12
  8715                           
  8716                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
  8717                           ;stkvar	_fsm @ sp[(0)+-1]
  8718                           
  8719                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8720                           ;incstack = 0
  8721  0171C0  0EFF               	movlw	-1
  8722  0171C2  50E3               	movf	plusw1,w,c
  8723  0171C4  B4D8               	btfsc	status,2,c
  8724  0171C6  D149               	goto	l11216
  8725                           
  8726                           ;bsoc.c: 202:   esr_state = 0;
  8727  0171C8  0100               	movlb	0	; () banked
  8728  0171CA  6BA4               	clrf	esr_check@esr_state& (0+255),b
  8729                           
  8730                           ; BSR set to: 0
  8731                           ;bsoc.c: 203:   return -10.0;
  8732  0171CC  0E00               	movlw	0
  8733  0171CE  6E01               	movwf	btemp^0,c
  8734  0171D0  0E00               	movlw	0
  8735  0171D2  6E02               	movwf	(btemp+1)^0,c
  8736  0171D4  0E20               	movlw	32
  8737  0171D6  6E03               	movwf	(btemp+2)^0,c
  8738  0171D8  0EC1               	movlw	193
  8739  0171DA  D15B               	goto	L6
  8740  0171DC                     l11148:
  8741                           
  8742                           ; BSR set to: 0
  8743                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
  8744  0171DC  0E10               	movlw	16
  8745  0171DE  6EE6               	movwf	postinc1,c
  8746  0171E0  0E27               	movlw	39
  8747  0171E2  6EE6               	movwf	postinc1,c
  8748  0171E4  0E0C               	movlw	12
  8749  0171E6  6EE6               	movwf	postinc1,c
  8750  0171E8  ECB2  F0DD         	call	_StartTimer	;wreg free
  8751  0171EC                     l11150:
  8752                           
  8753                           ;bsoc.c: 209:   esr_state++;
  8754  0171EC  0100               	movlb	0	; () banked
  8755  0171EE  2BA4               	incf	esr_check@esr_state& (0+255),f,b
  8756                           
  8757                           ;bsoc.c: 210:   break;
  8758  0171F0  D149               	goto	l11218
  8759  0171F2                     l11152:
  8760                           
  8761                           ; BSR set to: 0
  8762                           ;bsoc.c: 215:   set_load_relay_one(0);
  8763  0171F2  0E00               	movlw	0
  8764  0171F4  6EE6               	movwf	postinc1,c
  8765  0171F6  EC99  F0E2         	call	_set_load_relay_one	;wreg free
  8766                           
  8767                           ;bsoc.c: 216:   set_load_relay_two(0);
  8768  0171FA  0E00               	movlw	0
  8769  0171FC  6EE6               	movwf	postinc1,c
  8770  0171FE  EC91  F0E2         	call	_set_load_relay_two	;wreg free
  8771                           
  8772                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
  8773  017202  0E0C               	movlw	12
  8774  017204  6EE6               	movwf	postinc1,c
  8775  017206  EC07  F0E0         	call	_TimerDone	;wreg free
  8776  01720A  5001               	movf	btemp^0,w,c
  8777  01720C  B4D8               	btfsc	status,2,c
  8778  01720E  D009               	goto	l11158
  8779                           
  8780                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
  8781  017210  0E10               	movlw	16
  8782  017212  6EE6               	movwf	postinc1,c
  8783  017214  0E27               	movlw	39
  8784  017216  6EE6               	movwf	postinc1,c
  8785  017218  0E0C               	movlw	12
  8786  01721A  6EE6               	movwf	postinc1,c
  8787  01721C  ECB2  F0DD         	call	_StartTimer	;wreg free
  8788                           
  8789                           ;bsoc.c: 219:   } else {
  8790  017220  D006               	goto	l11162
  8791  017222                     l11158:
  8792                           
  8793                           ;bsoc.c: 220:    return -2.0;
  8794  017222  0E00               	movlw	0
  8795  017224  6E01               	movwf	btemp^0,c
  8796  017226  0E00               	movlw	0
  8797  017228  6E02               	movwf	(btemp+1)^0,c
  8798  01722A  0E00               	movlw	0
  8799  01722C  D066               	goto	L8
  8800  01722E                     l11162:
  8801                           
  8802                           ;bsoc.c: 225:   update_adc_result();
  8803  01722E  EC31  F0DE         	call	_update_adc_result	;wreg free
  8804                           
  8805                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  8806  017232  0E00               	movlw	0
  8807  017234  6EE6               	movwf	postinc1,c
  8808  017236  0E04               	movlw	4
  8809  017238  6EE6               	movwf	postinc1,c
  8810  01723A  ECB1  F0A9         	call	_conv_raw_result	;wreg free
  8811  01723E  0060  F004  F815   	movff	btemp,_C+278	;volatile
  8812  017244  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  8813  01724A  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  8814  017250  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  8815  017256  D7CA               	goto	l11150
  8816  017258                     l11168:
  8817                           
  8818                           ; BSR set to: 0
  8819                           ;bsoc.c: 230:   set_load_relay_one(1);
  8820  017258  0E01               	movlw	1
  8821  01725A  6EE6               	movwf	postinc1,c
  8822  01725C  EC99  F0E2         	call	_set_load_relay_one	;wreg free
  8823                           
  8824                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
  8825  017260  0E0C               	movlw	12
  8826  017262  6EE6               	movwf	postinc1,c
  8827  017264  EC07  F0E0         	call	_TimerDone	;wreg free
  8828  017268  5001               	movf	btemp^0,w,c
  8829  01726A  B4D8               	btfsc	status,2,c
  8830  01726C  D009               	goto	l11174
  8831                           
  8832                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
  8833  01726E  0E10               	movlw	16
  8834  017270  6EE6               	movwf	postinc1,c
  8835  017272  0E27               	movlw	39
  8836  017274  6EE6               	movwf	postinc1,c
  8837  017276  0E0C               	movlw	12
  8838  017278  6EE6               	movwf	postinc1,c
  8839  01727A  ECB2  F0DD         	call	_StartTimer	;wreg free
  8840                           
  8841                           ;bsoc.c: 233:   } else {
  8842  01727E  D006               	goto	l11178
  8843  017280                     l11174:
  8844                           
  8845                           ;bsoc.c: 234:    return -3.0;
  8846  017280  0E00               	movlw	0
  8847  017282  6E01               	movwf	btemp^0,c
  8848  017284  0E00               	movlw	0
  8849  017286  6E02               	movwf	(btemp+1)^0,c
  8850  017288  0E40               	movlw	64
  8851  01728A  D037               	goto	L8
  8852  01728C                     l11178:
  8853                           
  8854                           ;bsoc.c: 237:   update_adc_result();
  8855  01728C  EC31  F0DE         	call	_update_adc_result	;wreg free
  8856                           
  8857                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  8858  017290  0E00               	movlw	0
  8859  017292  6EE6               	movwf	postinc1,c
  8860  017294  0E04               	movlw	4
  8861  017296  6EE6               	movwf	postinc1,c
  8862  017298  ECB1  F0A9         	call	_conv_raw_result	;wreg free
  8863  01729C  0060  F004  F819   	movff	btemp,_C+282	;volatile
  8864  0172A2  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  8865  0172A8  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  8866  0172AE  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  8867                           
  8868                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  8869  0172B4  0E00               	movlw	0
  8870  0172B6  6EE6               	movwf	postinc1,c
  8871  0172B8  0E00               	movlw	0
  8872  0172BA  6EE6               	movwf	postinc1,c
  8873  0172BC  ECB1  F0A9         	call	_conv_raw_result	;wreg free
  8874  0172C0  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  8875  0172C6  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  8876  0172CC  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  8877  0172D2  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  8878  0172D8  D789               	goto	l11150
  8879  0172DA                     l11186:
  8880                           
  8881                           ; BSR set to: 0
  8882                           ;bsoc.c: 243:   set_load_relay_two(1);
  8883  0172DA  0E01               	movlw	1
  8884  0172DC  6EE6               	movwf	postinc1,c
  8885  0172DE  EC91  F0E2         	call	_set_load_relay_two	;wreg free
  8886                           
  8887                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
  8888  0172E2  0E0C               	movlw	12
  8889  0172E4  6EE6               	movwf	postinc1,c
  8890  0172E6  EC07  F0E0         	call	_TimerDone	;wreg free
  8891  0172EA  5001               	movf	btemp^0,w,c
  8892  0172EC  A4D8               	btfss	status,2,c
  8893  0172EE  D008               	goto	l11194
  8894                           
  8895                           ;bsoc.c: 245:    return -4.0;
  8896  0172F0  0E00               	movlw	0
  8897  0172F2  6E01               	movwf	btemp^0,c
  8898  0172F4  0E00               	movlw	0
  8899  0172F6  6E02               	movwf	(btemp+1)^0,c
  8900  0172F8  0E80               	movlw	128
  8901  0172FA                     L8:
  8902  0172FA  6E03               	movwf	(btemp+2)^0,c
  8903  0172FC  0EC0               	movlw	192
  8904  0172FE  D0C9               	goto	L6
  8905  017300                     l11194:
  8906                           
  8907                           ;bsoc.c: 247:   update_adc_result();
  8908  017300  EC31  F0DE         	call	_update_adc_result	;wreg free
  8909                           
  8910                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  8911  017304  0E00               	movlw	0
  8912  017306  6EE6               	movwf	postinc1,c
  8913  017308  0E04               	movlw	4
  8914  01730A  6EE6               	movwf	postinc1,c
  8915  01730C  ECB1  F0A9         	call	_conv_raw_result	;wreg free
  8916  017310  0060  F004  F81D   	movff	btemp,_C+286	;volatile
  8917  017316  0060  F008  F81E   	movff	btemp+1,_C+287	;volatile
  8918  01731C  0060  F00C  F81F   	movff	btemp+2,_C+288	;volatile
  8919  017322  0060  F010  F820   	movff	btemp+3,_C+289	;volatile
  8920                           
  8921                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  8922  017328  0E00               	movlw	0
  8923  01732A  6EE6               	movwf	postinc1,c
  8924  01732C  0E00               	movlw	0
  8925  01732E  6EE6               	movwf	postinc1,c
  8926  017330  ECB1  F0A9         	call	_conv_raw_result	;wreg free
  8927  017334  0060  F004  F811   	movff	btemp,_C+274	;volatile
  8928  01733A  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  8929  017340  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  8930  017346  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  8931                           
  8932                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  8933  01734C  EE22  F011         	lfsr	2,_C+274	;volatile
  8934  017350  006F FF7B FFE6     	movff	postinc2,postinc1
  8935  017356  006F FF7B FFE6     	movff	postinc2,postinc1
  8936  01735C  006F FF7B FFE6     	movff	postinc2,postinc1
  8937  017362  006F FF7B FFE6     	movff	postinc2,postinc1
  8938  017368  EE22  F00D         	lfsr	2,_C+270	;volatile
  8939  01736C  006F FF7B FFE6     	movff	postinc2,postinc1
  8940  017372  006F FF7B FFE6     	movff	postinc2,postinc1
  8941  017378  006F FF7B FFE6     	movff	postinc2,postinc1
  8942  01737E  006F FF7B FFE6     	movff	postinc2,postinc1
  8943  017384  EC0C  F0DD         	call	___flsub	;wreg free
  8944  017388  0060  F007  FFE6   	movff	btemp,postinc1
  8945  01738E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8946  017394  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8947  01739A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8948  0173A0  EE22  F01D         	lfsr	2,_C+286	;volatile
  8949  0173A4  006F FF7B FFE6     	movff	postinc2,postinc1
  8950  0173AA  006F FF7B FFE6     	movff	postinc2,postinc1
  8951  0173B0  006F FF7B FFE6     	movff	postinc2,postinc1
  8952  0173B6  006F FF7B FFE6     	movff	postinc2,postinc1
  8953  0173BC  EE22  F019         	lfsr	2,_C+282	;volatile
  8954  0173C0  006F FF7B FFE6     	movff	postinc2,postinc1
  8955  0173C6  006F FF7B FFE6     	movff	postinc2,postinc1
  8956  0173CC  006F FF7B FFE6     	movff	postinc2,postinc1
  8957  0173D2  006F FF7B FFE6     	movff	postinc2,postinc1
  8958  0173D8  EC0C  F0DD         	call	___flsub	;wreg free
  8959  0173DC  0060  F007  FFE6   	movff	btemp,postinc1
  8960  0173E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8961  0173E8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8962  0173EE  0060  F013  FFE6   	movff	btemp+3,postinc1
  8963  0173F4  ECF4  F0A6         	call	___fldiv	;wreg free
  8964  0173F8  0060  F007  FFE6   	movff	btemp,postinc1
  8965  0173FE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8966  017404  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8967  01740A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8968  017410  ECC5  F0D4         	call	_fabsf	;wreg free
  8969  017414  0060  F004  F787   	movff	btemp,_C+136	;volatile
  8970  01741A  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  8971  017420  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  8972  017426  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  8973                           
  8974                           ;bsoc.c: 252:   set_load_relay_one(0);
  8975  01742C  0E00               	movlw	0
  8976  01742E  6EE6               	movwf	postinc1,c
  8977  017430  EC99  F0E2         	call	_set_load_relay_one	;wreg free
  8978                           
  8979                           ;bsoc.c: 253:   set_load_relay_two(0);
  8980  017434  0E00               	movlw	0
  8981  017436  6EE6               	movwf	postinc1,c
  8982  017438  EC91  F0E2         	call	_set_load_relay_two	;wreg free
  8983                           
  8984                           ;bsoc.c: 254:   esr_state = 0;
  8985  01743C  0100               	movlb	0	; () banked
  8986  01743E  6BA4               	clrf	esr_check@esr_state& (0+255),b
  8987                           
  8988                           ; BSR set to: 0
  8989                           ;bsoc.c: 255:   return C.esr;
  8990  017440  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  8991  017446  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  8992  01744C  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  8993  017452  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  8994  017458  D01D               	goto	l2165
  8995  01745A                     l11216:
  8996  01745A  0100               	movlb	0	; () banked
  8997  01745C  51A4               	movf	esr_check@esr_state& (0+255),w,b
  8998  01745E  6E0B               	movwf	(btemp+10)^0,c
  8999  017460  6A0C               	clrf	(btemp+11)^0,c
  9000                           
  9001                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9002                           ; Switch size 1, requested type "simple"
  9003                           ; Number of cases is 1, Range of values is 0 to 0
  9004                           ; switch strategies available:
  9005                           ; Name         Instructions Cycles
  9006                           ; simple_byte            4     3 (average)
  9007                           ;	Chosen strategy is simple_byte
  9008  017462  500C               	movf	(btemp+11)^0,w,c
  9009  017464  0A00               	xorlw	0	; case 0
  9010  017466  A4D8               	btfss	status,2,c
  9011  017468  D00D               	goto	l11218
  9012                           
  9013                           ; BSR set to: 0
  9014                           ; Switch size 1, requested type "simple"
  9015                           ; Number of cases is 4, Range of values is 0 to 3
  9016                           ; switch strategies available:
  9017                           ; Name         Instructions Cycles
  9018                           ; simple_byte           13     7 (average)
  9019                           ;	Chosen strategy is simple_byte
  9020  01746A  500B               	movf	(btemp+10)^0,w,c
  9021  01746C  0A00               	xorlw	0	; case 0
  9022  01746E  B4D8               	btfsc	status,2,c
  9023  017470  D6B5               	goto	l11148
  9024  017472  0A01               	xorlw	1	; case 1
  9025  017474  B4D8               	btfsc	status,2,c
  9026  017476  D6BD               	goto	l11152
  9027  017478  0A03               	xorlw	3	; case 2
  9028  01747A  B4D8               	btfsc	status,2,c
  9029  01747C  D6ED               	goto	l11168
  9030  01747E  0A01               	xorlw	1	; case 3
  9031  017480  B4D8               	btfsc	status,2,c
  9032  017482  D72B               	goto	l11186
  9033  017484                     l11218:
  9034                           
  9035                           ; BSR set to: 0
  9036                           ;bsoc.c: 260:  return -1.0;
  9037  017484  0E00               	movlw	0
  9038  017486  6E01               	movwf	btemp^0,c
  9039  017488  0E00               	movlw	0
  9040  01748A  6E02               	movwf	(btemp+1)^0,c
  9041  01748C  0E80               	movlw	128
  9042  01748E  6E03               	movwf	(btemp+2)^0,c
  9043  017490  0EBF               	movlw	191
  9044  017492                     L6:
  9045  017492  6E04               	movwf	(btemp+3)^0,c
  9046  017494                     l2165:
  9047                           
  9048                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9049  017494  52E5               	movf	postdec1,f,c
  9050  017496  0012               	return		;funcret
  9051  017498                     __end_of_esr_check:
  9052                           	opt callstack 0
  9053                           
  9054 ;; *************** function _update_adc_result *****************
  9055 ;; Defined at:
  9056 ;;		line 98 in file "daq.c"
  9057 ;; Parameters:    Size  Location     Type
  9058 ;;		None
  9059 ;; Auto vars:     Size  Location     Type
  9060 ;;		None
  9061 ;; Return value:  Size  Location     Type
  9062 ;;                  1  [STACK] _Bool 
  9063 ;; Registers used:
  9064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  9065 ;; Tracked objects:
  9066 ;;		On entry : 0/0
  9067 ;;		On exit  : 0/0
  9068 ;;		Unchanged: 0/0
  9069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9074 ;;Total ram usage:        0 bytes
  9075 ;; Hardware stack levels used:    1
  9076 ;; Hardware stack levels required when called:   17
  9077 ;; This function calls:
  9078 ;;		_StartTimer
  9079 ;;		_TimerDone
  9080 ;;		_check_adc_scan
  9081 ;;		_clear_adc_scan
  9082 ;;		_start_adc_scan
  9083 ;; This function is called by:
  9084 ;;		_esr_check
  9085 ;; This function uses a reentrant model
  9086 ;;
  9087                           
  9088                           	psect	text23
  9089  01BC62                     __ptext23:
  9090                           	opt callstack 0
  9091  01BC62                     _update_adc_result:
  9092                           	opt callstack 12
  9093                           
  9094                           ;daq.c: 100:  if (R.done) {
  9095                           
  9096                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9097                           ;incstack = 0
  9098  01BC62  0100               	movlb	0	; () banked
  9099  01BC64  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  9100  01BC66  B4D8               	btfsc	status,2,c
  9101  01BC68  0012               	return	
  9102                           
  9103                           ; BSR set to: 0
  9104                           ;daq.c: 101:   clear_adc_scan();
  9105  01BC6A  EC05  F0E3         	call	_clear_adc_scan	;wreg free
  9106                           
  9107                           ; BSR set to: 0
  9108                           ;daq.c: 102:   start_adc_scan();
  9109  01BC6E  EC28  F0DA         	call	_start_adc_scan	;wreg free
  9110                           
  9111                           ;daq.c: 103:   StartTimer(TMR_ADC, 200);
  9112  01BC72  0EC8               	movlw	200
  9113  01BC74  6EE6               	movwf	postinc1,c
  9114  01BC76  0E00               	movlw	0
  9115  01BC78  6EE6               	movwf	postinc1,c
  9116  01BC7A  0E01               	movlw	1
  9117  01BC7C  6EE6               	movwf	postinc1,c
  9118  01BC7E  ECB2  F0DD         	call	_StartTimer	;wreg free
  9119  01BC82                     l10688:
  9120  01BC82  0E01               	movlw	1
  9121  01BC84  6EE6               	movwf	postinc1,c
  9122  01BC86  EC07  F0E0         	call	_TimerDone	;wreg free
  9123  01BC8A  5001               	movf	btemp^0,w,c
  9124  01BC8C  A4D8               	btfss	status,2,c
  9125  01BC8E  0012               	return	
  9126  01BC90  ECF5  F0E2         	call	_check_adc_scan	;wreg free
  9127  01BC94  5001               	movf	btemp^0,w,c
  9128  01BC96  A4D8               	btfss	status,2,c
  9129  01BC98  0012               	return	
  9130  01BC9A  D7F3               	goto	l10688
  9131  01BC9C                     __end_of_update_adc_result:
  9132                           	opt callstack 0
  9133                           
  9134 ;; *************** function _start_adc_scan *****************
  9135 ;; Defined at:
  9136 ;;		line 59 in file "daq.c"
  9137 ;; Parameters:    Size  Location     Type
  9138 ;;		None
  9139 ;; Auto vars:     Size  Location     Type
  9140 ;;		None
  9141 ;; Return value:  Size  Location     Type
  9142 ;;                  1  [STACK] _Bool 
  9143 ;; Registers used:
  9144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  9145 ;; Tracked objects:
  9146 ;;		On entry : 0/0
  9147 ;;		On exit  : 1/0
  9148 ;;		Unchanged: 0/0
  9149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9154 ;;Total ram usage:        0 bytes
  9155 ;; Hardware stack levels used:    1
  9156 ;; Hardware stack levels required when called:   16
  9157 ;; This function calls:
  9158 ;;		_ADCC_DischargeSampleCapacitor
  9159 ;;		_ADCC_SetADIInterruptHandler
  9160 ;;		_ADCC_SetADTIInterruptHandler
  9161 ;;		_ADCC_StartConversion
  9162 ;; This function is called by:
  9163 ;;		_main
  9164 ;;		_update_adc_result
  9165 ;; This function uses a reentrant model
  9166 ;;
  9167                           
  9168                           	psect	text24
  9169  01B450                     __ptext24:
  9170                           	opt callstack 0
  9171  01B450                     _start_adc_scan:
  9172                           	opt callstack 14
  9173                           
  9174                           ;daq.c: 61:  if (R.done)
  9175                           
  9176                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9177                           ;incstack = 0
  9178  01B450  0100               	movlb	0	; () banked
  9179  01B452  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  9180  01B454  A4D8               	btfss	status,2,c
  9181  01B456  0012               	return	
  9182                           
  9183                           ; BSR set to: 0
  9184                           ;daq.c: 64:  R.scan_index = 0;
  9185  01B458  6BE1               	clrf	(_R+50)& (0+255),b	;volatile
  9186                           
  9187                           ; BSR set to: 0
  9188                           ;daq.c: 65:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  9189  01B45A  013A               	movlb	58	; () banked
  9190  01B45C  5140               	movf	64,w,b	;volatile
  9191  01B45E  006E F940  F001    	movff	14928,btemp	;volatile
  9192  01B464  6A02               	clrf	(btemp+1)^0,c
  9193  01B466  0060  F004  F002   	movff	btemp,btemp+1
  9194  01B46C  6A01               	clrf	btemp^0,c
  9195  01B46E  2601               	addwf	btemp^0,f,c
  9196  01B470  0E00               	movlw	0
  9197  01B472  2202               	addwfc	(btemp+1)^0,f,c
  9198  01B474  0E77               	movlw	119
  9199  01B476  1401               	andwf	btemp^0,w,c
  9200  01B478  0100               	movlb	0	; () banked
  9201  01B47A  6FE2               	movwf	(_R+51)& (0+255),b	;volatile
  9202  01B47C  0E3C               	movlw	60
  9203  01B47E  1402               	andwf	(btemp+1)^0,w,c
  9204  01B480  6FE3               	movwf	(_R+52)& (0+255),b	;volatile
  9205                           
  9206                           ; BSR set to: 0
  9207                           ;daq.c: 66:  ADCC_SetADIInterruptHandler(adc_int_handler);
  9208  01B482  0E32               	movlw	low _adc_int_handler
  9209  01B484  6EE6               	movwf	postinc1,c
  9210  01B486  0EC6               	movlw	high _adc_int_handler
  9211  01B488  6EE6               	movwf	postinc1,c
  9212  01B48A  0E01               	movlw	low (_adc_int_handler shr (0+16))
  9213  01B48C  6EE6               	movwf	postinc1,c
  9214  01B48E  ECCF  F0E0         	call	_ADCC_SetADIInterruptHandler	;wreg free
  9215                           
  9216                           ;daq.c: 67:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  9217  01B492  0ECA               	movlw	low _adc_int_t_handler
  9218  01B494  6EE6               	movwf	postinc1,c
  9219  01B496  0EB0               	movlw	high _adc_int_t_handler
  9220  01B498  6EE6               	movwf	postinc1,c
  9221  01B49A  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  9222  01B49C  6EE6               	movwf	postinc1,c
  9223  01B49E  ECBB  F0E0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  9224                           
  9225                           ;daq.c: 68:  ADCC_DischargeSampleCapacitor();
  9226  01B4A2  ECF1  F0E2         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  9227                           
  9228                           ; BSR set to: 62
  9229                           ;daq.c: 69:  ADCC_StartConversion(R.scan_index & 0xf);
  9230  01B4A6  0100               	movlb	0	; () banked
  9231  01B4A8  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
  9232  01B4AA  0B0F               	andlw	15
  9233  01B4AC  6EE6               	movwf	postinc1,c
  9234  01B4AE  EC88  F0E2         	call	_ADCC_StartConversion	;wreg free
  9235                           
  9236                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9237  01B4B2  0012               	return		;funcret
  9238  01B4B4                     __end_of_start_adc_scan:
  9239                           	opt callstack 0
  9240                           
  9241 ;; *************** function _ADCC_StartConversion *****************
  9242 ;; Defined at:
  9243 ;;		line 128 in file "mcc_generated_files/adcc.c"
  9244 ;; Parameters:    Size  Location     Type
  9245 ;;  channel         1  [STACK] enum E16136
  9246 ;; Auto vars:     Size  Location     Type
  9247 ;;		None
  9248 ;; Return value:  Size  Location     Type
  9249 ;;                  1  [STACK] void 
  9250 ;; Registers used:
  9251 ;;		fsr1l, fsr1h
  9252 ;; Tracked objects:
  9253 ;;		On entry : 3F/0
  9254 ;;		On exit  : 3F/3E
  9255 ;;		Unchanged: 0/0
  9256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9261 ;;Total ram usage:        0 bytes
  9262 ;; Hardware stack levels used:    1
  9263 ;; Hardware stack levels required when called:   15
  9264 ;; This function calls:
  9265 ;;		Nothing
  9266 ;; This function is called by:
  9267 ;;		_start_adc_scan
  9268 ;;		_adc_int_t_handler
  9269 ;; This function uses a reentrant model
  9270 ;;
  9271                           
  9272                           	psect	text25
  9273  01C510                     __ptext25:
  9274                           	opt callstack 0
  9275  01C510                     _ADCC_StartConversion:
  9276                           	opt callstack 0
  9277                           
  9278                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  9279                           ;stkvar	_channel @ sp[(0)+-1]
  9280                           
  9281                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9282                           ;incstack = 0
  9283 ;; hardware stack exceeded
  9284  01C510  0EFF               	movlw	-1
  9285  01C512  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  9286                           
  9287                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  9288  01C518  013E               	movlb	62	; () banked
  9289  01C51A  8FF8               	bsf	248,7,b	;volatile
  9290                           
  9291                           ; BSR set to: 62
  9292                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  9293  01C51C  81F8               	bsf	248,0,b	;volatile
  9294                           
  9295                           ; BSR set to: 62
  9296                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  9297  01C51E  52E5               	movf	postdec1,f,c
  9298  01C520  0012               	return		;funcret
  9299  01C522                     __end_of_ADCC_StartConversion:
  9300                           	opt callstack 0
  9301                           
  9302 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  9303 ;; Defined at:
  9304 ;;		line 189 in file "mcc_generated_files/adcc.c"
  9305 ;; Parameters:    Size  Location     Type
  9306 ;;		None
  9307 ;; Auto vars:     Size  Location     Type
  9308 ;;		None
  9309 ;; Return value:  Size  Location     Type
  9310 ;;                  1  [STACK] void 
  9311 ;; Registers used:
  9312 ;;		wreg, status,2
  9313 ;; Tracked objects:
  9314 ;;		On entry : 0/0
  9315 ;;		On exit  : 3F/3E
  9316 ;;		Unchanged: 0/0
  9317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9322 ;;Total ram usage:        0 bytes
  9323 ;; Hardware stack levels used:    1
  9324 ;; Hardware stack levels required when called:   15
  9325 ;; This function calls:
  9326 ;;		Nothing
  9327 ;; This function is called by:
  9328 ;;		_start_adc_scan
  9329 ;;		_adc_int_t_handler
  9330 ;; This function uses a reentrant model
  9331 ;;
  9332                           
  9333                           	psect	text26
  9334  01C5E2                     __ptext26:
  9335                           	opt callstack 0
  9336  01C5E2                     _ADCC_DischargeSampleCapacitor:
  9337                           	opt callstack 0
  9338                           
  9339                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  9340                           
  9341                           ; BSR set to: 62
  9342                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9343                           ;incstack = 0
  9344 ;; hardware stack exceeded
  9345  01C5E2  0E3B               	movlw	59
  9346  01C5E4  013E               	movlb	62	; () banked
  9347  01C5E6  6FF1               	movwf	241,b	;volatile
  9348                           
  9349                           ; BSR set to: 62
  9350                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  9351  01C5E8  0012               	return		;funcret
  9352  01C5EA                     __end_of_ADCC_DischargeSampleCapacitor:
  9353                           	opt callstack 0
  9354                           
  9355 ;; *************** function _clear_adc_scan *****************
  9356 ;; Defined at:
  9357 ;;		line 90 in file "daq.c"
  9358 ;; Parameters:    Size  Location     Type
  9359 ;;		None
  9360 ;; Auto vars:     Size  Location     Type
  9361 ;;		None
  9362 ;; Return value:  Size  Location     Type
  9363 ;;                  1  [STACK] void 
  9364 ;; Registers used:
  9365 ;;		None
  9366 ;; Tracked objects:
  9367 ;;		On entry : 0/0
  9368 ;;		On exit  : 3F/0
  9369 ;;		Unchanged: 0/0
  9370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9375 ;;Total ram usage:        0 bytes
  9376 ;; Hardware stack levels used:    1
  9377 ;; Hardware stack levels required when called:   15
  9378 ;; This function calls:
  9379 ;;		Nothing
  9380 ;; This function is called by:
  9381 ;;		_main
  9382 ;;		_update_adc_result
  9383 ;; This function uses a reentrant model
  9384 ;;
  9385                           
  9386                           	psect	text27
  9387  01C60A                     __ptext27:
  9388                           	opt callstack 0
  9389  01C60A                     _clear_adc_scan:
  9390                           	opt callstack 13
  9391                           
  9392                           ;daq.c: 92:  R.done = 0;
  9393                           
  9394                           ; BSR set to: 62
  9395                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9396                           ;incstack = 0
  9397  01C60A  0100               	movlb	0	; () banked
  9398  01C60C  6BE4               	clrf	(_R+53)& (0+255),b	;volatile
  9399                           
  9400                           ; BSR set to: 0
  9401                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9402  01C60E  0012               	return		;funcret
  9403  01C610                     __end_of_clear_adc_scan:
  9404                           	opt callstack 0
  9405                           
  9406 ;; *************** function _check_adc_scan *****************
  9407 ;; Defined at:
  9408 ;;		line 82 in file "daq.c"
  9409 ;; Parameters:    Size  Location     Type
  9410 ;;		None
  9411 ;; Auto vars:     Size  Location     Type
  9412 ;;		None
  9413 ;; Return value:  Size  Location     Type
  9414 ;;                  1  [STACK] _Bool 
  9415 ;; Registers used:
  9416 ;;		btemp
  9417 ;; Tracked objects:
  9418 ;;		On entry : 0/1
  9419 ;;		On exit  : 0/0
  9420 ;;		Unchanged: 0/0
  9421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9426 ;;Total ram usage:        0 bytes
  9427 ;; Hardware stack levels used:    1
  9428 ;; Hardware stack levels required when called:   15
  9429 ;; This function calls:
  9430 ;;		Nothing
  9431 ;; This function is called by:
  9432 ;;		_main
  9433 ;;		_update_adc_result
  9434 ;; This function uses a reentrant model
  9435 ;;
  9436                           
  9437                           	psect	text28
  9438  01C5EA                     __ptext28:
  9439                           	opt callstack 0
  9440  01C5EA                     _check_adc_scan:
  9441                           	opt callstack 13
  9442                           
  9443                           ;daq.c: 84:  return R.done;
  9444                           
  9445                           ; BSR set to: 0
  9446                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9447                           ;incstack = 0
  9448  01C5EA  0060  F390  F001   	movff	_R+53,btemp	;volatile
  9449                           
  9450                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9451  01C5F0  0012               	return		;funcret
  9452  01C5F2                     __end_of_check_adc_scan:
  9453                           	opt callstack 0
  9454                           
  9455 ;; *************** function _set_load_relay_two *****************
  9456 ;; Defined at:
  9457 ;;		line 130 in file "mbmc.c"
  9458 ;; Parameters:    Size  Location     Type
  9459 ;;  mode            1  [STACK] const _Bool 
  9460 ;; Auto vars:     Size  Location     Type
  9461 ;;		None
  9462 ;; Return value:  Size  Location     Type
  9463 ;;                  1  [STACK] void 
  9464 ;; Registers used:
  9465 ;;		wreg, fsr1l, fsr1h
  9466 ;; Tracked objects:
  9467 ;;		On entry : 0/0
  9468 ;;		On exit  : 0/0
  9469 ;;		Unchanged: 0/0
  9470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9475 ;;Total ram usage:        0 bytes
  9476 ;; Hardware stack levels used:    1
  9477 ;; Hardware stack levels required when called:   15
  9478 ;; This function calls:
  9479 ;;		Nothing
  9480 ;; This function is called by:
  9481 ;;		_main
  9482 ;;		_esr_check
  9483 ;; This function uses a reentrant model
  9484 ;;
  9485                           
  9486                           	psect	text29
  9487  01C522                     __ptext29:
  9488                           	opt callstack 0
  9489  01C522                     _set_load_relay_two:
  9490                           	opt callstack 15
  9491                           
  9492                           ;mbmc.c: 130: void set_load_relay_two(const _Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LAT
      +                          Dbits.LATD5 = mode;
  9493                           ;stkvar	_mode @ sp[(0)+-1]
  9494                           
  9495                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9496                           ;incstack = 0
  9497  01C522  0EFF               	movlw	-1
  9498  01C524  B0E3               	btfsc	plusw1,0,c
  9499  01C526  D002               	bra	u9585
  9500  01C528  9ABD               	bcf	189,5,c	;volatile
  9501  01C52A  D001               	bra	u9586
  9502  01C52C                     u9585:
  9503  01C52C  8ABD               	bsf	189,5,c	;volatile
  9504  01C52E                     u9586:
  9505                           
  9506                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9507  01C52E  52E5               	movf	postdec1,f,c
  9508  01C530  0012               	return		;funcret
  9509  01C532                     __end_of_set_load_relay_two:
  9510                           	opt callstack 0
  9511                           
  9512 ;; *************** function _set_load_relay_one *****************
  9513 ;; Defined at:
  9514 ;;		line 125 in file "mbmc.c"
  9515 ;; Parameters:    Size  Location     Type
  9516 ;;  mode            1  [STACK] const _Bool 
  9517 ;; Auto vars:     Size  Location     Type
  9518 ;;		None
  9519 ;; Return value:  Size  Location     Type
  9520 ;;                  1  [STACK] void 
  9521 ;; Registers used:
  9522 ;;		wreg, fsr1l, fsr1h
  9523 ;; Tracked objects:
  9524 ;;		On entry : 0/0
  9525 ;;		On exit  : 0/0
  9526 ;;		Unchanged: 0/0
  9527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9532 ;;Total ram usage:        0 bytes
  9533 ;; Hardware stack levels used:    1
  9534 ;; Hardware stack levels required when called:   15
  9535 ;; This function calls:
  9536 ;;		Nothing
  9537 ;; This function is called by:
  9538 ;;		_main
  9539 ;;		_esr_check
  9540 ;; This function uses a reentrant model
  9541 ;;
  9542                           
  9543                           	psect	text30
  9544  01C532                     __ptext30:
  9545                           	opt callstack 0
  9546  01C532                     _set_load_relay_one:
  9547                           	opt callstack 15
  9548                           
  9549                           ;mbmc.c: 125: void set_load_relay_one(const _Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LAT
      +                          Dbits.LATD4 = mode;
  9550                           ;stkvar	_mode @ sp[(0)+-1]
  9551                           
  9552                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9553                           ;incstack = 0
  9554  01C532  0EFF               	movlw	-1
  9555  01C534  B0E3               	btfsc	plusw1,0,c
  9556  01C536  D002               	bra	u9575
  9557  01C538  98BD               	bcf	189,4,c	;volatile
  9558  01C53A  D001               	bra	u9576
  9559  01C53C                     u9575:
  9560  01C53C  88BD               	bsf	189,4,c	;volatile
  9561  01C53E                     u9576:
  9562                           
  9563                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9564  01C53E  52E5               	movf	postdec1,f,c
  9565  01C540  0012               	return		;funcret
  9566  01C542                     __end_of_set_load_relay_one:
  9567                           	opt callstack 0
  9568                           
  9569 ;; *************** function _eaDogM_WriteCommand *****************
  9570 ;; Defined at:
  9571 ;;		line 385 in file "eadog.c"
  9572 ;; Parameters:    Size  Location     Type
  9573 ;;  cmd             1  [STACK] const unsigned char 
  9574 ;; Auto vars:     Size  Location     Type
  9575 ;;		None
  9576 ;; Return value:  Size  Location     Type
  9577 ;;                  1  [STACK] void 
  9578 ;; Registers used:
  9579 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9580 ;; Tracked objects:
  9581 ;;		On entry : 3F/3D
  9582 ;;		On exit  : 3F/0
  9583 ;;		Unchanged: 0/0
  9584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9589 ;;Total ram usage:        0 bytes
  9590 ;; Hardware stack levels used:    1
  9591 ;; Hardware stack levels required when called:   26
  9592 ;; This function calls:
  9593 ;;		_send_lcd_cmd_dma
  9594 ;; This function is called by:
  9595 ;;		_main
  9596 ;; This function uses a reentrant model
  9597 ;;
  9598                           
  9599                           	psect	text31
  9600  01C562                     __ptext31:
  9601                           	opt callstack 0
  9602  01C562                     _eaDogM_WriteCommand:
  9603                           	opt callstack 4
  9604                           
  9605                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
  9606                           ;stkvar	_cmd @ sp[(0)+-1]
  9607                           
  9608                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9609                           ;incstack = 0
  9610  01C562  0EFF               	movlw	-1
  9611  01C564  50E3               	movf	plusw1,w,c
  9612  01C566  6EE6               	movwf	postinc1,c
  9613  01C568  ECEE  F0E1         	call	_send_lcd_cmd_dma	;wreg free
  9614                           
  9615                           ; BSR set to: 0
  9616                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  9617  01C56C  52E5               	movf	postdec1,f,c
  9618  01C56E  0012               	return		;funcret
  9619  01C570                     __end_of_eaDogM_WriteCommand:
  9620                           	opt callstack 0
  9621                           
  9622 ;; *************** function _convert_adc_data *****************
  9623 ;; Defined at:
  9624 ;;		line 51 in file "mbmc.c"
  9625 ;; Parameters:    Size  Location     Type
  9626 ;;		None
  9627 ;; Auto vars:     Size  Location     Type
  9628 ;;  i               1  [STACK] unsigned char 
  9629 ;; Return value:  Size  Location     Type
  9630 ;;                  1  [STACK] void 
  9631 ;; Registers used:
  9632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9633 ;; Tracked objects:
  9634 ;;		On entry : 0/1
  9635 ;;		On exit  : 0/0
  9636 ;;		Unchanged: 0/0
  9637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9642 ;;Total ram usage:        0 bytes
  9643 ;; Hardware stack levels used:    1
  9644 ;; Hardware stack levels required when called:   18
  9645 ;; This function calls:
  9646 ;;		_conv_raw_result
  9647 ;;		_lp_filter
  9648 ;; This function is called by:
  9649 ;;		_main
  9650 ;; This function uses a reentrant model
  9651 ;;
  9652                           
  9653                           	psect	text32
  9654  01A81C                     __ptext32:
  9655                           	opt callstack 0
  9656  01A81C                     _convert_adc_data:
  9657                           	opt callstack 0
  9658                           
  9659                           ; BSR set to: 0
  9660                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9661  01A81C  52E6               	movf	postinc1,f,c
  9662                           
  9663                           ;mbmc.c: 53:  uint8_t i = 0;
  9664                           ;stkvar	_i @ sp[(-1)+0]
  9665                           
  9666                           ;incstack = 0
  9667  01A81E  0EFF               	movlw	-1
  9668  01A820  6AE3               	clrf	plusw1,c
  9669  01A822                     l11230:
  9670                           
  9671                           ;mbmc.c: 56:   if (V.calib) {
  9672  01A822  0101               	movlb	1	; () banked
  9673  01A824  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  9674  01A826  B4D8               	btfsc	status,2,c
  9675  01A828  D01B               	goto	l11234
  9676                           
  9677                           ; BSR set to: 1
  9678                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  9679  01A82A  0E01               	movlw	1
  9680  01A82C  6EE6               	movwf	postinc1,c
  9681                           
  9682                           ;stkvar	_i @ sp[(-2)+0]
  9683  01A82E  0EFE               	movlw	-2
  9684  01A830  50E3               	movf	plusw1,w,c
  9685  01A832  6EE6               	movwf	postinc1,c
  9686  01A834  0E01               	movlw	1
  9687  01A836  6EE6               	movwf	postinc1,c
  9688                           
  9689                           ;stkvar	_i @ sp[(-4)+0]
  9690  01A838  0EFC               	movlw	-4
  9691  01A83A  50E3               	movf	plusw1,w,c
  9692  01A83C  6EE6               	movwf	postinc1,c
  9693  01A83E  ECB1  F0A9         	call	_conv_raw_result	;wreg free
  9694  01A842  0060  F007  FFE6   	movff	btemp,postinc1
  9695  01A848  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9696  01A84E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9697  01A854  0060  F013  FFE6   	movff	btemp+3,postinc1
  9698  01A85A  EC71  F0C4         	call	_lp_filter	;wreg free
  9699  01A85E  D01A               	goto	L9
  9700  01A860                     l11234:
  9701                           
  9702                           ; BSR set to: 1
  9703                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  9704  01A860  0E00               	movlw	0
  9705  01A862  6EE6               	movwf	postinc1,c
  9706                           
  9707                           ;stkvar	_i @ sp[(-2)+0]
  9708  01A864  0EFE               	movlw	-2
  9709  01A866  50E3               	movf	plusw1,w,c
  9710  01A868  6EE6               	movwf	postinc1,c
  9711  01A86A  0E00               	movlw	0
  9712  01A86C  6EE6               	movwf	postinc1,c
  9713                           
  9714                           ;stkvar	_i @ sp[(-4)+0]
  9715  01A86E  0EFC               	movlw	-4
  9716  01A870  50E3               	movf	plusw1,w,c
  9717  01A872  6EE6               	movwf	postinc1,c
  9718  01A874  ECB1  F0A9         	call	_conv_raw_result	;wreg free
  9719  01A878  0060  F007  FFE6   	movff	btemp,postinc1
  9720  01A87E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9721  01A884  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9722  01A88A  0060  F013  FFE6   	movff	btemp+3,postinc1
  9723  01A890  EC71  F0C4         	call	_lp_filter	;wreg free
  9724  01A894                     L9:
  9725                           
  9726                           ;stkvar	_i @ sp[(-1)+0]
  9727  01A894  0EFF               	movlw	-1
  9728  01A896  50E3               	movf	plusw1,w,c
  9729  01A898  0D04               	mullw	4
  9730  01A89A  0EFF               	movlw	low _C
  9731  01A89C  24F3               	addwf	243,w,c
  9732  01A89E  6ED9               	movwf	fsr2l,c
  9733  01A8A0  0E06               	movlw	high _C
  9734  01A8A2  20F4               	addwfc	prodh,w,c
  9735  01A8A4  6EDA               	movwf	fsr2h,c
  9736  01A8A6  0060  F007  FFDE   	movff	btemp,postinc2
  9737  01A8AC  0060  F00B  FFDE   	movff	btemp+1,postinc2
  9738  01A8B2  0060  F00F  FFDE   	movff	btemp+2,postinc2
  9739  01A8B8  0060  F013  FFDE   	movff	btemp+3,postinc2
  9740                           
  9741                           ;mbmc.c: 61:  } while (++i < 16);
  9742                           ;stkvar	_i @ sp[(-1)+0]
  9743  01A8BE  0EFF               	movlw	-1
  9744  01A8C0  2AE3               	incf	plusw1,f,c
  9745  01A8C2  0EFF               	movlw	-1
  9746  01A8C4  006F FF8C  F001    	movff	plusw1,btemp
  9747  01A8CA  0E0F               	movlw	15
  9748  01A8CC  6401               	cpfsgt	btemp^0,c
  9749  01A8CE  D7A9               	goto	l11230
  9750                           
  9751                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  9752  01A8D0  52E5               	movf	postdec1,f,c
  9753  01A8D2  0012               	return		;funcret
  9754  01A8D4                     __end_of_convert_adc_data:
  9755                           	opt callstack 0
  9756                           
  9757 ;; *************** function _clear_hid_pflags *****************
  9758 ;; Defined at:
  9759 ;;		line 51 in file "hid.c"
  9760 ;; Parameters:    Size  Location     Type
  9761 ;;  h               2  [STACK] PTR struct H_data
  9762 ;;		 -> H(7), 
  9763 ;; Auto vars:     Size  Location     Type
  9764 ;;		None
  9765 ;; Return value:  Size  Location     Type
  9766 ;;                  1  [STACK] void 
  9767 ;; Registers used:
  9768 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  9769 ;; Tracked objects:
  9770 ;;		On entry : 3E/0
  9771 ;;		On exit  : 0/0
  9772 ;;		Unchanged: 0/0
  9773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9778 ;;Total ram usage:        0 bytes
  9779 ;; Hardware stack levels used:    1
  9780 ;; Hardware stack levels required when called:   15
  9781 ;; This function calls:
  9782 ;;		Nothing
  9783 ;; This function is called by:
  9784 ;;		_main
  9785 ;; This function uses a reentrant model
  9786 ;;
  9787                           
  9788                           	psect	text33
  9789  01B98C                     __ptext33:
  9790                           	opt callstack 0
  9791  01B98C                     _clear_hid_pflags:
  9792                           	opt callstack 15
  9793                           
  9794                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  9795                           ;stkvar	_h @ sp[(0)+-2]
  9796                           
  9797                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9798                           ;incstack = 0
  9799  01B98C  0EFE               	movlw	-2
  9800  01B98E  006F FF8C  F00B    	movff	plusw1,btemp+10
  9801  01B994  0EFF               	movlw	-1
  9802  01B996  006F FF8C  F00C    	movff	plusw1,btemp+11
  9803  01B99C  0E03               	movlw	3
  9804  01B99E  240B               	addwf	(btemp+10)^0,w,c
  9805  01B9A0  6ED9               	movwf	fsr2l,c
  9806  01B9A2  0E00               	movlw	0
  9807  01B9A4  200C               	addwfc	(btemp+11)^0,w,c
  9808  01B9A6  6EDA               	movwf	fsr2h,c
  9809  01B9A8  0E00               	movlw	0
  9810  01B9AA  6EDF               	movwf	indf2,c
  9811                           
  9812                           ;hid.c: 54:  h->enter_p = SW_OFF;
  9813                           ;stkvar	_h @ sp[(0)+-2]
  9814  01B9AC  0EFE               	movlw	-2
  9815  01B9AE  006F FF8C  F00B    	movff	plusw1,btemp+10
  9816  01B9B4  0EFF               	movlw	-1
  9817  01B9B6  006F FF8C  F00C    	movff	plusw1,btemp+11
  9818  01B9BC  0E05               	movlw	5
  9819  01B9BE  240B               	addwf	(btemp+10)^0,w,c
  9820  01B9C0  6ED9               	movwf	fsr2l,c
  9821  01B9C2  0E00               	movlw	0
  9822  01B9C4  200C               	addwfc	(btemp+11)^0,w,c
  9823  01B9C6  6EDA               	movwf	fsr2h,c
  9824  01B9C8  0E00               	movlw	0
  9825  01B9CA  6EDF               	movwf	indf2,c
  9826                           
  9827                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
  9828  01B9CC  52E5               	movf	postdec1,f,c
  9829  01B9CE  52E5               	movf	postdec1,f,c
  9830  01B9D0  0012               	return		;funcret
  9831  01B9D2                     __end_of_clear_hid_pflags:
  9832                           	opt callstack 0
  9833                           
  9834 ;; *************** function _check_help *****************
  9835 ;; Defined at:
  9836 ;;		line 40 in file "mconfig.c"
  9837 ;; Parameters:    Size  Location     Type
  9838 ;;  flipper         1  [STACK] const _Bool 
  9839 ;; Auto vars:     Size  Location     Type
  9840 ;;  estatus         1    0        _Bool 
  9841 ;; Return value:  Size  Location     Type
  9842 ;;                  1  [STACK] _Bool 
  9843 ;; Registers used:
  9844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9845 ;; Tracked objects:
  9846 ;;		On entry : 3F/1
  9847 ;;		On exit  : 0/0
  9848 ;;		Unchanged: 0/0
  9849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9854 ;;Total ram usage:        0 bytes
  9855 ;; Hardware stack levels used:    1
  9856 ;; Hardware stack levels required when called:   28
  9857 ;; This function calls:
  9858 ;;		_StartTimer
  9859 ;;		_TimerDone
  9860 ;;		_display_help
  9861 ;;		_display_info
  9862 ;;		_get_vterm_ptr
  9863 ;;		_help_button
  9864 ;;		_mode_lamp_bright
  9865 ;;		_mode_lamp_dim
  9866 ;;		_set_display_info
  9867 ;;		_set_temp_display_help
  9868 ;;		_set_vterm
  9869 ;;		_sprintf
  9870 ;;		_update_lcd
  9871 ;;		_vterm_dump
  9872 ;; This function is called by:
  9873 ;;		_main
  9874 ;; This function uses a reentrant model
  9875 ;;
  9876                           
  9877                           	psect	text34
  9878  0182F0                     __ptext34:
  9879                           	opt callstack 0
  9880  0182F0                     _check_help:
  9881                           	opt callstack 2
  9882                           
  9883                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  9884                           
  9885                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9886                           ;incstack = 0
  9887  0182F0  EC4E  F0DE         	call	_help_button	;wreg free
  9888  0182F4  5001               	movf	btemp^0,w,c
  9889  0182F6  B4D8               	btfsc	status,2,c
  9890  0182F8  D0D0               	goto	l13338
  9891  0182FA  ECF9  F0E2         	call	_display_info	;wreg free
  9892  0182FE  0401               	decf	btemp^0,w,c
  9893  018300  B4D8               	btfsc	status,2,c
  9894  018302  D0CB               	goto	l13338
  9895                           
  9896                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  9897  018304  0EDC               	movlw	220
  9898  018306  6EE6               	movwf	postinc1,c
  9899  018308  0E05               	movlw	5
  9900  01830A  6EE6               	movwf	postinc1,c
  9901  01830C  0E0B               	movlw	11
  9902  01830E  6EE6               	movwf	postinc1,c
  9903  018310  ECB2  F0DD         	call	_StartTimer	;wreg free
  9904                           
  9905                           ;mconfig.c: 48:   if (V.debug)
  9906  018314  0101               	movlb	1	; () banked
  9907  018316  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
  9908                           
  9909                           ; BSR set to: 1
  9910                           ;mconfig.c: 49:    vterm_dump();
  9911  018318  EC6B  F0CC         	call	_vterm_dump	;wreg free
  9912                           
  9913                           ;mconfig.c: 51:   set_vterm(1);
  9914  01831C  0E01               	movlw	1
  9915  01831E  6EE6               	movwf	postinc1,c
  9916  018320  ECFD  F0E1         	call	_set_vterm	;wreg free
  9917                           
  9918                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  9919  018324  ECF9  F0E2         	call	_display_info	;wreg free
  9920  018328  5001               	movf	btemp^0,w,c
  9921  01832A  6EE6               	movwf	postinc1,c
  9922  01832C  ECA1  F0E2         	call	_set_temp_display_help	;wreg free
  9923                           
  9924                           ; BSR set to: 1
  9925                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  9926  018330  0E01               	movlw	1
  9927  018332  6EE6               	movwf	postinc1,c
  9928  018334  EC0C  F0E2         	call	_set_display_info	;wreg free
  9929                           
  9930                           ;mconfig.c: 54:   if (flipper) {
  9931                           ;stkvar	_flipper @ sp[(0)+-1]
  9932  018338  0EFF               	movlw	-1
  9933  01833A  50E3               	movf	plusw1,w,c
  9934  01833C  B4D8               	btfsc	status,2,c
  9935  01833E  D019               	goto	l13324
  9936                           
  9937                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  9938  018340  0EB3               	movlw	low STR_45
  9939  018342  6EE6               	movwf	postinc1,c
  9940  018344  0EFF               	movlw	high STR_45
  9941  018346  6EE6               	movwf	postinc1,c
  9942  018348  0E5D               	movlw	low STR_47
  9943  01834A  6EE6               	movwf	postinc1,c
  9944  01834C  0EFF               	movlw	high STR_47
  9945  01834E  6EE6               	movwf	postinc1,c
  9946  018350  0E01               	movlw	1
  9947  018352  6EE6               	movwf	postinc1,c
  9948  018354  0E00               	movlw	0
  9949  018356  6EE6               	movwf	postinc1,c
  9950  018358  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  9951  01835C  0060  F007  FFE6   	movff	btemp,postinc1
  9952  018362  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9953  018368  0E06               	movlw	6
  9954  01836A  6EE6               	movwf	postinc1,c
  9955  01836C  ECBE  F0CF         	call	_sprintf	;wreg free
  9956                           
  9957                           ;mconfig.c: 56:   } else {
  9958  018370  D018               	goto	l1684
  9959  018372                     l13324:
  9960                           
  9961                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  9962  018372  0EC9               	movlw	low STR_46
  9963  018374  6EE6               	movwf	postinc1,c
  9964  018376  0EFF               	movlw	high STR_46
  9965  018378  6EE6               	movwf	postinc1,c
  9966  01837A  0E5D               	movlw	low STR_47
  9967  01837C  6EE6               	movwf	postinc1,c
  9968  01837E  0EFF               	movlw	high STR_47
  9969  018380  6EE6               	movwf	postinc1,c
  9970  018382  0E01               	movlw	1
  9971  018384  6EE6               	movwf	postinc1,c
  9972  018386  0E00               	movlw	0
  9973  018388  6EE6               	movwf	postinc1,c
  9974  01838A  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
  9975  01838E  0060  F007  FFE6   	movff	btemp,postinc1
  9976  018394  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9977  01839A  0E06               	movlw	6
  9978  01839C  6EE6               	movwf	postinc1,c
  9979  01839E  ECBE  F0CF         	call	_sprintf	;wreg free
  9980  0183A2                     l1684:
  9981                           
  9982                           ; BSR set to: 0
  9983                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  9984  0183A2  0101               	movlb	1	; () banked
  9985  0183A4  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
  9986  0183A6  32E8               	rrcf	wreg,f,c
  9987  0183A8  32E8               	rrcf	wreg,f,c
  9988  0183AA  0B03               	andlw	3
  9989  0183AC  0D24               	mullw	36
  9990  0183AE  0E12               	movlw	18
  9991  0183B0  26F3               	addwf	243,f,c
  9992  0183B2  0E00               	movlw	0
  9993  0183B4  22F4               	addwfc	244,f,c
  9994  0183B6  0EAF               	movlw	low _T
  9995  0183B8  6E0B               	movwf	(btemp+10)^0,c
  9996  0183BA  0EFA               	movlw	high _T
  9997  0183BC  6E0C               	movwf	(btemp+11)^0,c
  9998  0183BE  50F3               	movf	243,w,c
  9999  0183C0  260B               	addwf	(btemp+10)^0,f,c
 10000  0183C2  50F4               	movf	244,w,c
 10001  0183C4  220C               	addwfc	(btemp+11)^0,f,c
 10002  0183C6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10003  0183CC  0060  F033  FFE6   	movff	btemp+11,postinc1
 10004  0183D2  0EBF               	movlw	low STR_49
 10005  0183D4  6EE6               	movwf	postinc1,c
 10006  0183D6  0EFF               	movlw	high STR_49
 10007  0183D8  6EE6               	movwf	postinc1,c
 10008  0183DA  0E01               	movlw	1
 10009  0183DC  6EE6               	movwf	postinc1,c
 10010  0183DE  0E01               	movlw	1
 10011  0183E0  6EE6               	movwf	postinc1,c
 10012  0183E2  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
 10013  0183E6  0060  F007  FFE6   	movff	btemp,postinc1
 10014  0183EC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10015  0183F2  0E06               	movlw	6
 10016  0183F4  6EE6               	movwf	postinc1,c
 10017  0183F6  ECBE  F0CF         	call	_sprintf	;wreg free
 10018                           
 10019                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 10020  0183FA  0101               	movlb	1	; () banked
 10021  0183FC  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 10022  0183FE  32E8               	rrcf	wreg,f,c
 10023  018400  32E8               	rrcf	wreg,f,c
 10024  018402  0B03               	andlw	3
 10025  018404  0D24               	mullw	36
 10026  018406  0EAF               	movlw	low _T
 10027  018408  6E0B               	movwf	(btemp+10)^0,c
 10028  01840A  0EFA               	movlw	high _T
 10029  01840C  6E0C               	movwf	(btemp+11)^0,c
 10030  01840E  50F3               	movf	243,w,c
 10031  018410  260B               	addwf	(btemp+10)^0,f,c
 10032  018412  50F4               	movf	244,w,c
 10033  018414  220C               	addwfc	(btemp+11)^0,f,c
 10034  018416  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10035  01841C  0060  F033  FFE6   	movff	btemp+11,postinc1
 10036  018422  0EBF               	movlw	low STR_49
 10037  018424  6EE6               	movwf	postinc1,c
 10038  018426  0EFF               	movlw	high STR_49
 10039  018428  6EE6               	movwf	postinc1,c
 10040  01842A  0E01               	movlw	1
 10041  01842C  6EE6               	movwf	postinc1,c
 10042  01842E  0E02               	movlw	2
 10043  018430  6EE6               	movwf	postinc1,c
 10044  018432  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
 10045  018436  0060  F007  FFE6   	movff	btemp,postinc1
 10046  01843C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10047  018442  0E06               	movlw	6
 10048  018444  6EE6               	movwf	postinc1,c
 10049  018446  ECBE  F0CF         	call	_sprintf	;wreg free
 10050                           
 10051                           ; BSR set to: 0
 10052                           ;mconfig.c: 61:   V.help_id++;
 10053  01844A  EE20  F1A2         	lfsr	2,_V+155	;volatile
 10054  01844E  38DF               	swapf	223,w,c
 10055  018450  6E0C               	movwf	(btemp+11)^0,c
 10056  018452  320C               	rrcf	(btemp+11)^0,f,c
 10057  018454  300C               	rrcf	(btemp+11)^0,w,c
 10058  018456  0B03               	andlw	3
 10059  018458  6E0C               	movwf	(btemp+11)^0,c
 10060  01845A  2A0C               	incf	(btemp+11)^0,f,c
 10061  01845C  3A0C               	swapf	(btemp+11)^0,f,c
 10062  01845E  360C               	rlcf	(btemp+11)^0,f,c
 10063  018460  360C               	rlcf	(btemp+11)^0,f,c
 10064  018462  50DF               	movf	223,w,c
 10065  018464  180C               	xorwf	(btemp+11)^0,w,c
 10066  018466  0B3F               	andlw	-193
 10067  018468  180C               	xorwf	(btemp+11)^0,w,c
 10068  01846A  6EDF               	movwf	223,c
 10069                           
 10070                           ; BSR set to: 0
 10071                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 10072  01846C  0EB8               	movlw	184
 10073  01846E  6EE6               	movwf	postinc1,c
 10074  018470  0E0B               	movlw	11
 10075  018472  6EE6               	movwf	postinc1,c
 10076  018474  0E09               	movlw	9
 10077  018476  6EE6               	movwf	postinc1,c
 10078  018478  ECB2  F0DD         	call	_StartTimer	;wreg free
 10079                           
 10080                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 10081  01847C  0EB8               	movlw	184
 10082  01847E  6EE6               	movwf	postinc1,c
 10083  018480  0E0B               	movlw	11
 10084  018482  6EE6               	movwf	postinc1,c
 10085  018484  0E07               	movlw	7
 10086  018486  6EE6               	movwf	postinc1,c
 10087  018488  ECB2  F0DD         	call	_StartTimer	;wreg free
 10088                           
 10089                           ;mconfig.c: 64:   mode_lamp_bright();
 10090  01848C  ECB8  F0E2         	call	_mode_lamp_bright	;wreg free
 10091                           
 10092                           ;mconfig.c: 65:   update_lcd(1);
 10093  018490  0E01               	movlw	1
 10094  018492  6EE6               	movwf	postinc1,c
 10095  018494  EC36  F0CF         	call	_update_lcd	;wreg free
 10096                           
 10097                           ;mconfig.c: 67:  } else {
 10098  018498  D032               	goto	l1685
 10099  01849A                     l13338:
 10100                           
 10101                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 10102  01849A  0E09               	movlw	9
 10103  01849C  6EE6               	movwf	postinc1,c
 10104  01849E  EC07  F0E0         	call	_TimerDone	;wreg free
 10105  0184A2  5001               	movf	btemp^0,w,c
 10106  0184A4  B4D8               	btfsc	status,2,c
 10107  0184A6  D02B               	goto	l1685
 10108                           
 10109                           ;mconfig.c: 69:    set_vterm(0);
 10110  0184A8  0E00               	movlw	0
 10111  0184AA  6EE6               	movwf	postinc1,c
 10112  0184AC  ECFD  F0E1         	call	_set_vterm	;wreg free
 10113                           
 10114                           ;mconfig.c: 70:    V.help = 0;
 10115  0184B0  0101               	movlb	1	; () banked
 10116  0184B2  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
 10117                           
 10118                           ; BSR set to: 1
 10119                           ;mconfig.c: 71:    set_display_info(display_help());
 10120  0184B4  ECFD  F0E2         	call	_display_help	;wreg free
 10121  0184B8  5001               	movf	btemp^0,w,c
 10122  0184BA  6EE6               	movwf	postinc1,c
 10123  0184BC  EC0C  F0E2         	call	_set_display_info	;wreg free
 10124                           
 10125                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 10126  0184C0  0060  F673  FFE6   	movff	_V+149,postinc1
 10127  0184C6  0060  F677  FFE6   	movff	_V+150,postinc1
 10128  0184CC  EC45  F0E2         	call	_mode_lamp_dim	;wreg free
 10129                           
 10130                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 10131  0184D0  0E0B               	movlw	11
 10132  0184D2  6EE6               	movwf	postinc1,c
 10133  0184D4  EC07  F0E0         	call	_TimerDone	;wreg free
 10134  0184D8  5001               	movf	btemp^0,w,c
 10135  0184DA  B4D8               	btfsc	status,2,c
 10136  0184DC  D010               	goto	l1685
 10137                           
 10138                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 10139  0184DE  0101               	movlb	1	; () banked
 10140  0184E0  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
 10141  0184E2  A4D8               	btfss	status,2,c
 10142  0184E4  D002               	goto	u12760
 10143  0184E6  0E01               	movlw	1
 10144  0184E8  D001               	goto	u12770
 10145  0184EA                     u12760:
 10146  0184EA  0E00               	movlw	0
 10147  0184EC                     u12770:
 10148  0184EC  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
 10149                           
 10150                           ; BSR set to: 1
 10151                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 10152  0184EE  0EDC               	movlw	220
 10153  0184F0  6EE6               	movwf	postinc1,c
 10154  0184F2  0E05               	movlw	5
 10155  0184F4  6EE6               	movwf	postinc1,c
 10156  0184F6  0E0B               	movlw	11
 10157  0184F8  6EE6               	movwf	postinc1,c
 10158  0184FA  ECB2  F0DD         	call	_StartTimer	;wreg free
 10159  0184FE                     l1685:
 10160                           
 10161                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10162  0184FE  52E5               	movf	postdec1,f,c
 10163  018500  0012               	return		;funcret
 10164  018502                     __end_of_check_help:
 10165                           	opt callstack 0
 10166                           
 10167 ;; *************** function _vterm_dump *****************
 10168 ;; Defined at:
 10169 ;;		line 121 in file "mconfig.c"
 10170 ;; Parameters:    Size  Location     Type
 10171 ;;		None
 10172 ;; Auto vars:     Size  Location     Type
 10173 ;;		None
 10174 ;; Return value:  Size  Location     Type
 10175 ;;                  1  [STACK] void 
 10176 ;; Registers used:
 10177 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10178 ;; Tracked objects:
 10179 ;;		On entry : 3F/1
 10180 ;;		On exit  : 0/0
 10181 ;;		Unchanged: 0/0
 10182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10187 ;;Total ram usage:        0 bytes
 10188 ;; Hardware stack levels used:    1
 10189 ;; Hardware stack levels required when called:   27
 10190 ;; This function calls:
 10191 ;;		_WaitMs
 10192 ;;		_eaDogM_WriteStringAtPos
 10193 ;;		_get_vterm_ptr
 10194 ;;		_sprintf
 10195 ;;		_wait_lcd_done
 10196 ;; This function is called by:
 10197 ;;		_check_help
 10198 ;; This function uses a reentrant model
 10199 ;;
 10200                           
 10201                           	psect	text35
 10202  0198D6                     __ptext35:
 10203                           	opt callstack 0
 10204  0198D6                     _vterm_dump:
 10205                           	opt callstack 2
 10206                           
 10207                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 10208                           
 10209                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10210                           ;incstack = 0
 10211  0198D6  0E01               	movlw	1
 10212  0198D8  6EE6               	movwf	postinc1,c
 10213  0198DA  0E00               	movlw	0
 10214  0198DC  6EE6               	movwf	postinc1,c
 10215  0198DE  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
 10216  0198E2  0060  F007  FFE6   	movff	btemp,postinc1
 10217  0198E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10218  0198EE  0E00               	movlw	0
 10219  0198F0  6EE6               	movwf	postinc1,c
 10220  0198F2  0E00               	movlw	0
 10221  0198F4  6EE6               	movwf	postinc1,c
 10222  0198F6  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
 10223  0198FA  0060  F007  FFE6   	movff	btemp,postinc1
 10224  019900  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10225  019906  0EA4               	movlw	low STR_51
 10226  019908  6EE6               	movwf	postinc1,c
 10227  01990A  0EFF               	movlw	high STR_51
 10228  01990C  6EE6               	movwf	postinc1,c
 10229  01990E  0E08               	movlw	low (_V+1)
 10230  019910  6EE6               	movwf	postinc1,c
 10231  019912  0E01               	movlw	high (_V+1)
 10232  019914  6EE6               	movwf	postinc1,c
 10233  019916  0E08               	movlw	8
 10234  019918  6EE6               	movwf	postinc1,c
 10235  01991A  ECBE  F0CF         	call	_sprintf	;wreg free
 10236                           
 10237                           ; BSR set to: 0
 10238                           ;mconfig.c: 124:  wait_lcd_done();
 10239  01991E  EC8C  F0E1         	call	_wait_lcd_done	;wreg free
 10240                           
 10241                           ; BSR set to: 0
 10242                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 10243  019922  0E08               	movlw	low (_V+1)
 10244  019924  6EE6               	movwf	postinc1,c
 10245  019926  0E01               	movlw	high (_V+1)
 10246  019928  6EE6               	movwf	postinc1,c
 10247  01992A  0E00               	movlw	0
 10248  01992C  6EE6               	movwf	postinc1,c
 10249  01992E  0E00               	movlw	0
 10250  019930  6EE6               	movwf	postinc1,c
 10251  019932  ECC7  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10252                           
 10253                           ; BSR set to: 59
 10254                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 10255  019936  0E01               	movlw	1
 10256  019938  6EE6               	movwf	postinc1,c
 10257  01993A  0E01               	movlw	1
 10258  01993C  6EE6               	movwf	postinc1,c
 10259  01993E  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
 10260  019942  0060  F007  FFE6   	movff	btemp,postinc1
 10261  019948  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10262  01994E  0E00               	movlw	0
 10263  019950  6EE6               	movwf	postinc1,c
 10264  019952  0E01               	movlw	1
 10265  019954  6EE6               	movwf	postinc1,c
 10266  019956  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
 10267  01995A  0060  F007  FFE6   	movff	btemp,postinc1
 10268  019960  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10269  019966  0EA4               	movlw	low STR_51
 10270  019968  6EE6               	movwf	postinc1,c
 10271  01996A  0EFF               	movlw	high STR_51
 10272  01996C  6EE6               	movwf	postinc1,c
 10273  01996E  0E08               	movlw	low (_V+1)
 10274  019970  6EE6               	movwf	postinc1,c
 10275  019972  0E01               	movlw	high (_V+1)
 10276  019974  6EE6               	movwf	postinc1,c
 10277  019976  0E08               	movlw	8
 10278  019978  6EE6               	movwf	postinc1,c
 10279  01997A  ECBE  F0CF         	call	_sprintf	;wreg free
 10280                           
 10281                           ; BSR set to: 0
 10282                           ;mconfig.c: 127:  wait_lcd_done();
 10283  01997E  EC8C  F0E1         	call	_wait_lcd_done	;wreg free
 10284                           
 10285                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 10286  019982  0E08               	movlw	low (_V+1)
 10287  019984  6EE6               	movwf	postinc1,c
 10288  019986  0E01               	movlw	high (_V+1)
 10289  019988  6EE6               	movwf	postinc1,c
 10290  01998A  0E00               	movlw	0
 10291  01998C  6EE6               	movwf	postinc1,c
 10292  01998E  0E01               	movlw	1
 10293  019990  6EE6               	movwf	postinc1,c
 10294  019992  ECC7  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10295                           
 10296                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 10297  019996  0E01               	movlw	1
 10298  019998  6EE6               	movwf	postinc1,c
 10299  01999A  0E02               	movlw	2
 10300  01999C  6EE6               	movwf	postinc1,c
 10301  01999E  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
 10302  0199A2  0060  F007  FFE6   	movff	btemp,postinc1
 10303  0199A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10304  0199AE  0E00               	movlw	0
 10305  0199B0  6EE6               	movwf	postinc1,c
 10306  0199B2  0E02               	movlw	2
 10307  0199B4  6EE6               	movwf	postinc1,c
 10308  0199B6  EC84  F0DF         	call	_get_vterm_ptr	;wreg free
 10309  0199BA  0060  F007  FFE6   	movff	btemp,postinc1
 10310  0199C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10311  0199C6  0EA4               	movlw	low STR_51
 10312  0199C8  6EE6               	movwf	postinc1,c
 10313  0199CA  0EFF               	movlw	high STR_51
 10314  0199CC  6EE6               	movwf	postinc1,c
 10315  0199CE  0E08               	movlw	low (_V+1)
 10316  0199D0  6EE6               	movwf	postinc1,c
 10317  0199D2  0E01               	movlw	high (_V+1)
 10318  0199D4  6EE6               	movwf	postinc1,c
 10319  0199D6  0E08               	movlw	8
 10320  0199D8  6EE6               	movwf	postinc1,c
 10321  0199DA  ECBE  F0CF         	call	_sprintf	;wreg free
 10322                           
 10323                           ; BSR set to: 0
 10324                           ;mconfig.c: 130:  wait_lcd_done();
 10325  0199DE  EC8C  F0E1         	call	_wait_lcd_done	;wreg free
 10326                           
 10327                           ; BSR set to: 0
 10328                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 10329  0199E2  0E08               	movlw	low (_V+1)
 10330  0199E4  6EE6               	movwf	postinc1,c
 10331  0199E6  0E01               	movlw	high (_V+1)
 10332  0199E8  6EE6               	movwf	postinc1,c
 10333  0199EA  0E00               	movlw	0
 10334  0199EC  6EE6               	movwf	postinc1,c
 10335  0199EE  0E02               	movlw	2
 10336  0199F0  6EE6               	movwf	postinc1,c
 10337  0199F2  ECC7  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10338                           
 10339                           ; BSR set to: 59
 10340                           ;mconfig.c: 132:  WaitMs(3000);
 10341  0199F6  0EB8               	movlw	184
 10342  0199F8  6EE6               	movwf	postinc1,c
 10343  0199FA  0E0B               	movlw	11
 10344  0199FC  6EE6               	movwf	postinc1,c
 10345  0199FE  ECA1  F0DE         	call	_WaitMs	;wreg free
 10346                           
 10347                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 10348  019A02  0012               	return		;funcret
 10349  019A04                     __end_of_vterm_dump:
 10350                           	opt callstack 0
 10351                           
 10352 ;; *************** function _sprintf *****************
 10353 ;; Defined at:
 10354 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 10355 ;; Parameters:    Size  Location     Type
 10356 ;;  s               2  [STACK] PTR unsigned char 
 10357 ;;		 -> D.lcd(480), D(482), port_data(512), V(191), 
 10358 ;;  fmt             2  [STACK] PTR const unsigned char 
 10359 ;;		 -> STR_64(127), STR_62(3), STR_61(3), STR_60(19), 
 10360 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 10361 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 10362 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 10363 ;;		 -> STR_47(19), STR_42(22), STR_41(22), STR_40(22), 
 10364 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(29), 
 10365 ;;		 -> STR_35(23), STR_34(23), STR_33(22), STR_32(22), 
 10366 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 10367 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(22), 
 10368 ;;		 -> STR_23(22), STR_22(22), STR_21(17), STR_20(16), 
 10369 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 10370 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
 10371 ;;		 -> STR_11(22), STR_10(22), STR_9(26), STR_8(21), 
 10372 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 10373 ;;		 -> STR_2(21), STR_1(21), 
 10374 ;; Auto vars:     Size  Location     Type
 10375 ;;  f               6  [STACK] struct _IO_FILE
 10376 ;;  ap              2  [STACK] PTR void [1]
 10377 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10378 ;;  ret             2    0        int 
 10379 ;; Return value:  Size  Location     Type
 10380 ;;                  2  [STACK] int 
 10381 ;; Registers used:
 10382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10383 ;; Tracked objects:
 10384 ;;		On entry : 0/1
 10385 ;;		On exit  : 3F/0
 10386 ;;		Unchanged: 0/0
 10387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10392 ;;Total ram usage:        0 bytes
 10393 ;; Hardware stack levels used:    1
 10394 ;; Hardware stack levels required when called:   23
 10395 ;; This function calls:
 10396 ;;		_vfprintf
 10397 ;; This function is called by:
 10398 ;;		_main
 10399 ;;		_check_help
 10400 ;;		_vterm_dump
 10401 ;;		_calc_bsoc
 10402 ;; This function uses a reentrant model
 10403 ;;
 10404                           
 10405                           	psect	text36
 10406  019F7C                     __ptext36:
 10407                           	opt callstack 0
 10408  019F7C                     _sprintf:
 10409                           	opt callstack 0
 10410                           
 10411                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10412  019F7C  0E08               	movlw	8
 10413  019F7E  26E1               	addwf	fsr1l,f,c
 10414  019F80  0E00               	movlw	0
 10415  019F82  22E2               	addwfc	fsr1h,f,c
 10416                           
 10417                           ;incstack = 0
 10418 ;; hardware stack exceeded
 10419  019F84  0EFE               	movlw	254
 10420  019F86  6E0B               	movwf	(btemp+10)^0,c
 10421  019F88  0EFF               	movlw	255
 10422  019F8A  6E0C               	movwf	(btemp+11)^0,c
 10423                           
 10424                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 10425  019F8C  0EF5               	movlw	245
 10426  019F8E  24E1               	addwf	fsr1l,w,c
 10427  019F90  6E09               	movwf	(btemp+8)^0,c
 10428  019F92  0EFF               	movlw	255
 10429  019F94  20E2               	addwfc	fsr1h,w,c
 10430  019F96  6E0A               	movwf	(btemp+9)^0,c
 10431  019F98  500B               	movf	(btemp+10)^0,w,c
 10432  019F9A  2609               	addwf	(btemp+8)^0,f,c
 10433  019F9C  500C               	movf	(btemp+11)^0,w,c
 10434  019F9E  220A               	addwfc	(btemp+9)^0,f,c
 10435                           
 10436                           ;stkvar	_ap @ sp[(-8)+6]
 10437  019FA0  0EFF               	movlw	-1
 10438  019FA2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10439  019FA8  0EFE               	movlw	-2
 10440  019FAA  0060  F027  FFE3   	movff	btemp+8,plusw1
 10441                           
 10442                           ;stkvar	_s @ sp[(-8)+-3]
 10443  019FB0  0EF5               	movlw	-11
 10444  019FB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 10445  019FB8  0EF6               	movlw	-10
 10446  019FBA  006F FF8C  F00C    	movff	plusw1,btemp+11
 10447                           
 10448                           ;stkvar	_f @ sp[(-8)+0]
 10449  019FC0  0EF9               	movlw	-7
 10450  019FC2  0060  F033  FFE3   	movff	btemp+11,plusw1
 10451  019FC8  0EF8               	movlw	-8
 10452  019FCA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10453                           
 10454                           ;stkvar	_f @ sp[(-8)+0]
 10455  019FD0  0EFA               	movlw	250
 10456  019FD2  24E1               	addwf	fsr1l,w,c
 10457  019FD4  6ED9               	movwf	fsr2l,c
 10458  019FD6  0EFF               	movlw	255
 10459  019FD8  20E2               	addwfc	fsr1h,w,c
 10460  019FDA  6EDA               	movwf	fsr2h,c
 10461  019FDC  0E00               	movlw	0
 10462  019FDE  6EDE               	movwf	postinc2,c
 10463  019FE0  0E00               	movlw	0
 10464  019FE2  6EDD               	movwf	postdec2,c
 10465                           
 10466                           ;stkvar	_f @ sp[(-8)+0]
 10467  019FE4  0EFC               	movlw	252
 10468  019FE6  24E1               	addwf	fsr1l,w,c
 10469  019FE8  6ED9               	movwf	fsr2l,c
 10470  019FEA  0EFF               	movlw	255
 10471  019FEC  20E2               	addwfc	fsr1h,w,c
 10472  019FEE  6EDA               	movwf	fsr2h,c
 10473  019FF0  0E00               	movlw	0
 10474  019FF2  6EDE               	movwf	postinc2,c
 10475  019FF4  0E00               	movlw	0
 10476  019FF6  6EDD               	movwf	postdec2,c
 10477                           
 10478                           ;stkvar	_ap @ sp[(-8)+6]
 10479  019FF8  0EFE               	movlw	254
 10480  019FFA  24E1               	addwf	fsr1l,w,c
 10481  019FFC  6E01               	movwf	btemp^0,c
 10482  019FFE  0EFF               	movlw	255
 10483  01A000  20E2               	addwfc	fsr1h,w,c
 10484  01A002  6E02               	movwf	(btemp+1)^0,c
 10485  01A004  0060  F007  FFE6   	movff	btemp,postinc1
 10486  01A00A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10487                           
 10488                           ;stkvar	_fmt @ sp[(-10)+-5]
 10489  01A010  0EF1               	movlw	-15
 10490  01A012  006F FF8F FFE6     	movff	plusw1,postinc1
 10491  01A018  006F FF8F FFE6     	movff	plusw1,postinc1
 10492                           
 10493                           ;stkvar	_f @ sp[(-12)+0]
 10494  01A01E  0EF4               	movlw	244
 10495  01A020  24E1               	addwf	fsr1l,w,c
 10496  01A022  6E01               	movwf	btemp^0,c
 10497  01A024  0EFF               	movlw	255
 10498  01A026  20E2               	addwfc	fsr1h,w,c
 10499  01A028  6E02               	movwf	(btemp+1)^0,c
 10500  01A02A  0060  F007  FFE6   	movff	btemp,postinc1
 10501  01A030  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10502  01A036  EC1C  F0D5         	call	_vfprintf	;wreg free
 10503                           
 10504                           ; BSR set to: 0
 10505                           ;stkvar	_f @ sp[(-8)+0]
 10506  01A03A  0EFA               	movlw	250
 10507  01A03C  24E1               	addwf	fsr1l,w,c
 10508  01A03E  6ED9               	movwf	fsr2l,c
 10509  01A040  0EFF               	movlw	255
 10510  01A042  20E2               	addwfc	fsr1h,w,c
 10511  01A044  6EDA               	movwf	fsr2h,c
 10512  01A046  006F FF78  F00B    	movff	postinc2,btemp+10
 10513  01A04C  006F FF74  F00C    	movff	postdec2,btemp+11
 10514                           
 10515                           ;stkvar	_s @ sp[(-8)+-3]
 10516  01A052  0EF5               	movlw	-11
 10517  01A054  006F FF8C  F009    	movff	plusw1,btemp+8
 10518  01A05A  0EF6               	movlw	-10
 10519  01A05C  006F FF8C  F00A    	movff	plusw1,btemp+9
 10520  01A062  500B               	movf	(btemp+10)^0,w,c
 10521  01A064  2409               	addwf	(btemp+8)^0,w,c
 10522  01A066  6ED9               	movwf	fsr2l,c
 10523  01A068  500C               	movf	(btemp+11)^0,w,c
 10524  01A06A  200A               	addwfc	(btemp+9)^0,w,c
 10525  01A06C  6EDA               	movwf	fsr2h,c
 10526  01A06E  0E00               	movlw	0
 10527  01A070  6EDF               	movwf	indf2,c
 10528                           
 10529                           ; BSR set to: 0
 10530                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 10531  01A072  0EF8               	movlw	248
 10532  01A074  26E1               	addwf	fsr1l,f,c
 10533  01A076  0EFF               	movlw	255
 10534  01A078  22E2               	addwfc	fsr1h,f,c
 10535  01A07A  52E5               	movf	postdec1,f,c
 10536  01A07C  50E7               	movf	indf1,w,c
 10537  01A07E  5EE1               	subwf	fsr1l,f,c
 10538  01A080  0E00               	movlw	0
 10539  01A082  5AE2               	subwfb	fsr1h,f,c
 10540  01A084  0012               	return		;funcret
 10541  01A086                     __end_of_sprintf:
 10542                           	opt callstack 0
 10543                           
 10544 ;; *************** function _get_vterm_ptr *****************
 10545 ;; Defined at:
 10546 ;;		line 116 in file "mconfig.c"
 10547 ;; Parameters:    Size  Location     Type
 10548 ;;  line            1  [STACK] const unsigned char 
 10549 ;;  vterm           1  [STACK] const unsigned char 
 10550 ;; Auto vars:     Size  Location     Type
 10551 ;;		None
 10552 ;; Return value:  Size  Location     Type
 10553 ;;                  2  [STACK] PTR unsigned char 
 10554 ;; Registers used:
 10555 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 10556 ;; Tracked objects:
 10557 ;;		On entry : 0/1
 10558 ;;		On exit  : 0/0
 10559 ;;		Unchanged: 0/0
 10560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10565 ;;Total ram usage:        0 bytes
 10566 ;; Hardware stack levels used:    1
 10567 ;; Hardware stack levels required when called:   15
 10568 ;; This function calls:
 10569 ;;		Nothing
 10570 ;; This function is called by:
 10571 ;;		_main
 10572 ;;		_check_help
 10573 ;;		_vterm_dump
 10574 ;; This function uses a reentrant model
 10575 ;;
 10576                           
 10577                           	psect	text37
 10578  01BF08                     __ptext37:
 10579                           	opt callstack 0
 10580  01BF08                     _get_vterm_ptr:
 10581                           	opt callstack 15
 10582                           
 10583                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
 10584                           ;stkvar	_vterm @ sp[(0)+-2]
 10585                           
 10586                           ; BSR set to: 0
 10587                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10588                           ;incstack = 0
 10589  01BF08  0EFE               	movlw	-2
 10590  01BF0A  50E3               	movf	plusw1,w,c
 10591  01BF0C  0B03               	andlw	3
 10592  01BF0E  0D78               	mullw	120
 10593  01BF10  0E2A               	movlw	low _D
 10594  01BF12  6E01               	movwf	btemp^0,c
 10595  01BF14  0E08               	movlw	high _D
 10596  01BF16  6E02               	movwf	(btemp+1)^0,c
 10597  01BF18  50F3               	movf	243,w,c
 10598  01BF1A  2601               	addwf	btemp^0,f,c
 10599  01BF1C  50F4               	movf	244,w,c
 10600  01BF1E  2202               	addwfc	(btemp+1)^0,f,c
 10601                           
 10602                           ;stkvar	_line @ sp[(0)+-1]
 10603  01BF20  0EFF               	movlw	-1
 10604  01BF22  50E3               	movf	plusw1,w,c
 10605  01BF24  0B03               	andlw	3
 10606  01BF26  0D28               	mullw	40
 10607  01BF28  50F3               	movf	243,w,c
 10608  01BF2A  2601               	addwf	btemp^0,f,c
 10609  01BF2C  50F4               	movf	244,w,c
 10610  01BF2E  2202               	addwfc	(btemp+1)^0,f,c
 10611                           
 10612                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 10613  01BF30  52E5               	movf	postdec1,f,c
 10614  01BF32  52E5               	movf	postdec1,f,c
 10615  01BF34  0012               	return		;funcret
 10616  01BF36                     __end_of_get_vterm_ptr:
 10617                           	opt callstack 0
 10618                           
 10619 ;; *************** function _WaitMs *****************
 10620 ;; Defined at:
 10621 ;;		line 32 in file "timers.c"
 10622 ;; Parameters:    Size  Location     Type
 10623 ;;  numMilliseco    2  [STACK] const unsigned short 
 10624 ;; Auto vars:     Size  Location     Type
 10625 ;;		None
 10626 ;; Return value:  Size  Location     Type
 10627 ;;                  1  [STACK] void 
 10628 ;; Registers used:
 10629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10630 ;; Tracked objects:
 10631 ;;		On entry : 0/1
 10632 ;;		On exit  : 0/0
 10633 ;;		Unchanged: 0/0
 10634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10639 ;;Total ram usage:        0 bytes
 10640 ;; Hardware stack levels used:    1
 10641 ;; Hardware stack levels required when called:   16
 10642 ;; This function calls:
 10643 ;;		_StartTimer
 10644 ;;		_TimerDone
 10645 ;; This function is called by:
 10646 ;;		_main
 10647 ;;		_vterm_dump
 10648 ;; This function uses a reentrant model
 10649 ;;
 10650                           
 10651                           	psect	text38
 10652  01BD42                     __ptext38:
 10653                           	opt callstack 0
 10654  01BD42                     _WaitMs:
 10655                           	opt callstack 12
 10656                           
 10657                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 10658                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 10659                           
 10660                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10661                           ;incstack = 0
 10662  01BD42  0EFE               	movlw	-2
 10663  01BD44  006F FF8F FFE6     	movff	plusw1,postinc1
 10664  01BD4A  006F FF8F FFE6     	movff	plusw1,postinc1
 10665  01BD50  0E00               	movlw	0
 10666  01BD52  6EE6               	movwf	postinc1,c
 10667  01BD54  ECB2  F0DD         	call	_StartTimer	;wreg free
 10668                           
 10669                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 10670  01BD58  D005               	goto	l10050
 10671  01BD5A                     l1616:
 10672                           
 10673                           ;timers.c: 36:   __nop();
 10674  01BD5A  F000               	nop	
 10675                           
 10676                           ;timers.c: 37:   __nop();
 10677  01BD5C  F000               	nop	
 10678                           
 10679                           ;timers.c: 38:   __nop();
 10680  01BD5E  F000               	nop	
 10681                           
 10682                           ;timers.c: 39:   __nop();
 10683  01BD60  F000               	nop	
 10684  01BD62  0004               	clrwdt		;# 
 10685  01BD64                     l10050:
 10686                           
 10687                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 10688  01BD64  0E00               	movlw	0
 10689  01BD66  6EE6               	movwf	postinc1,c
 10690  01BD68  EC07  F0E0         	call	_TimerDone	;wreg free
 10691  01BD6C  5001               	movf	btemp^0,w,c
 10692  01BD6E  B4D8               	btfsc	status,2,c
 10693  01BD70  D7F4               	goto	l1616
 10694                           
 10695                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 10696  01BD72  52E5               	movf	postdec1,f,c
 10697  01BD74  52E5               	movf	postdec1,f,c
 10698  01BD76  0012               	return		;funcret
 10699  01BD78                     __end_of_WaitMs:
 10700                           	opt callstack 0
 10701                           
 10702 ;; *************** function _update_lcd *****************
 10703 ;; Defined at:
 10704 ;;		line 85 in file "mconfig.c"
 10705 ;; Parameters:    Size  Location     Type
 10706 ;;  vterm           1  [STACK] unsigned char 
 10707 ;; Auto vars:     Size  Location     Type
 10708 ;;		None
 10709 ;; Return value:  Size  Location     Type
 10710 ;;                  1  [STACK] unsigned char 
 10711 ;; Registers used:
 10712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10713 ;; Tracked objects:
 10714 ;;		On entry : 0/0
 10715 ;;		On exit  : 0/0
 10716 ;;		Unchanged: 0/0
 10717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10722 ;;Total ram usage:        0 bytes
 10723 ;; Hardware stack levels used:    1
 10724 ;; Hardware stack levels required when called:   27
 10725 ;; This function calls:
 10726 ;;		_eaDogM_WriteStringAtPos
 10727 ;;		_wait_lcd_done
 10728 ;; This function is called by:
 10729 ;;		_main
 10730 ;;		_check_help
 10731 ;; This function uses a reentrant model
 10732 ;;
 10733                           
 10734                           	psect	text39
 10735  019E6C                     __ptext39:
 10736                           	opt callstack 0
 10737  019E6C                     _update_lcd:
 10738                           	opt callstack 3
 10739                           
 10740                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 10741                           ;stkvar	_vterm @ sp[(0)+-1]
 10742                           
 10743                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10744                           ;incstack = 0
 10745  019E6C  0EFF               	movlw	-1
 10746  019E6E  006F FF8C  F001    	movff	plusw1,btemp
 10747  019E74  0E03               	movlw	3
 10748  019E76  1601               	andwf	btemp^0,f,c
 10749  019E78  0EFF               	movlw	-1
 10750  019E7A  0060  F007  FFE3   	movff	btemp,plusw1
 10751                           
 10752                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 10753  019E80  EE22  F20A         	lfsr	2,_D+480
 10754  019E84  A0DF               	btfss	indf2,0,c
 10755  019E86  D004               	goto	l13058
 10756                           
 10757                           ;stkvar	_vterm @ sp[(0)+-1]
 10758  019E88  0EFF               	movlw	-1
 10759  019E8A  50E3               	movf	plusw1,w,c
 10760  019E8C  B4D8               	btfsc	status,2,c
 10761  019E8E  D074               	goto	l1692
 10762  019E90                     l13058:
 10763                           
 10764                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 10765                           ;stkvar	_vterm @ sp[(0)+-1]
 10766  019E90  0EFF               	movlw	-1
 10767  019E92  50E3               	movf	plusw1,w,c
 10768  019E94  0D78               	mullw	120
 10769  019E96  0E3E               	movlw	low (_D+20)
 10770  019E98  24F3               	addwf	243,w,c
 10771  019E9A  6ED9               	movwf	fsr2l,c
 10772  019E9C  0E08               	movlw	high (_D+20)
 10773  019E9E  20F4               	addwfc	prodh,w,c
 10774  019EA0  6EDA               	movwf	fsr2h,c
 10775  019EA2  0E00               	movlw	0
 10776  019EA4  6EDF               	movwf	indf2,c
 10777                           
 10778                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 10779                           ;stkvar	_vterm @ sp[(0)+-1]
 10780  019EA6  0EFF               	movlw	-1
 10781  019EA8  50E3               	movf	plusw1,w,c
 10782  019EAA  0D78               	mullw	120
 10783  019EAC  0E66               	movlw	low (_D+60)
 10784  019EAE  24F3               	addwf	243,w,c
 10785  019EB0  6ED9               	movwf	fsr2l,c
 10786  019EB2  0E08               	movlw	high (_D+60)
 10787  019EB4  20F4               	addwfc	prodh,w,c
 10788  019EB6  6EDA               	movwf	fsr2h,c
 10789  019EB8  0E00               	movlw	0
 10790  019EBA  6EDF               	movwf	indf2,c
 10791                           
 10792                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 10793                           ;stkvar	_vterm @ sp[(0)+-1]
 10794  019EBC  0EFF               	movlw	-1
 10795  019EBE  50E3               	movf	plusw1,w,c
 10796  019EC0  0D78               	mullw	120
 10797  019EC2  0E8E               	movlw	low (_D+100)
 10798  019EC4  24F3               	addwf	243,w,c
 10799  019EC6  6ED9               	movwf	fsr2l,c
 10800  019EC8  0E08               	movlw	high (_D+100)
 10801  019ECA  20F4               	addwfc	prodh,w,c
 10802  019ECC  6EDA               	movwf	fsr2h,c
 10803  019ECE  0E00               	movlw	0
 10804  019ED0  6EDF               	movwf	indf2,c
 10805                           
 10806                           ;mconfig.c: 95:  wait_lcd_done();
 10807  019ED2  EC8C  F0E1         	call	_wait_lcd_done	;wreg free
 10808                           
 10809                           ; BSR set to: 0
 10810                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 10811                           ;stkvar	_vterm @ sp[(0)+-1]
 10812  019ED6  0EFF               	movlw	-1
 10813  019ED8  50E3               	movf	plusw1,w,c
 10814  019EDA  0D78               	mullw	120
 10815  019EDC  0E2A               	movlw	low _D
 10816  019EDE  6E0B               	movwf	(btemp+10)^0,c
 10817  019EE0  0E08               	movlw	high _D
 10818  019EE2  6E0C               	movwf	(btemp+11)^0,c
 10819  019EE4  50F3               	movf	243,w,c
 10820  019EE6  260B               	addwf	(btemp+10)^0,f,c
 10821  019EE8  50F4               	movf	244,w,c
 10822  019EEA  220C               	addwfc	(btemp+11)^0,f,c
 10823  019EEC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10824  019EF2  0060  F033  FFE6   	movff	btemp+11,postinc1
 10825  019EF8  0E00               	movlw	0
 10826  019EFA  6EE6               	movwf	postinc1,c
 10827  019EFC  0E00               	movlw	0
 10828  019EFE  6EE6               	movwf	postinc1,c
 10829  019F00  ECC7  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10830                           
 10831                           ; BSR set to: 59
 10832                           ;mconfig.c: 97:  wait_lcd_done();
 10833  019F04  EC8C  F0E1         	call	_wait_lcd_done	;wreg free
 10834                           
 10835                           ; BSR set to: 0
 10836                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 10837                           ;stkvar	_vterm @ sp[(0)+-1]
 10838  019F08  0EFF               	movlw	-1
 10839  019F0A  50E3               	movf	plusw1,w,c
 10840  019F0C  0D78               	mullw	120
 10841  019F0E  0E2A               	movlw	low _D
 10842  019F10  6E0B               	movwf	(btemp+10)^0,c
 10843  019F12  0E08               	movlw	high _D
 10844  019F14  6E0C               	movwf	(btemp+11)^0,c
 10845  019F16  0E28               	movlw	40
 10846  019F18  260B               	addwf	(btemp+10)^0,f,c
 10847  019F1A  0E00               	movlw	0
 10848  019F1C  220C               	addwfc	(btemp+11)^0,f,c
 10849  019F1E  50F3               	movf	243,w,c
 10850  019F20  260B               	addwf	(btemp+10)^0,f,c
 10851  019F22  50F4               	movf	244,w,c
 10852  019F24  220C               	addwfc	(btemp+11)^0,f,c
 10853  019F26  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10854  019F2C  0060  F033  FFE6   	movff	btemp+11,postinc1
 10855  019F32  0E00               	movlw	0
 10856  019F34  6EE6               	movwf	postinc1,c
 10857  019F36  0E01               	movlw	1
 10858  019F38  6EE6               	movwf	postinc1,c
 10859  019F3A  ECC7  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10860                           
 10861                           ; BSR set to: 59
 10862                           ;mconfig.c: 99:  wait_lcd_done();
 10863  019F3E  EC8C  F0E1         	call	_wait_lcd_done	;wreg free
 10864                           
 10865                           ; BSR set to: 0
 10866                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 10867                           ;stkvar	_vterm @ sp[(0)+-1]
 10868  019F42  0EFF               	movlw	-1
 10869  019F44  50E3               	movf	plusw1,w,c
 10870  019F46  0D78               	mullw	120
 10871  019F48  0E2A               	movlw	low _D
 10872  019F4A  6E0B               	movwf	(btemp+10)^0,c
 10873  019F4C  0E08               	movlw	high _D
 10874  019F4E  6E0C               	movwf	(btemp+11)^0,c
 10875  019F50  0E50               	movlw	80
 10876  019F52  260B               	addwf	(btemp+10)^0,f,c
 10877  019F54  0E00               	movlw	0
 10878  019F56  220C               	addwfc	(btemp+11)^0,f,c
 10879  019F58  50F3               	movf	243,w,c
 10880  019F5A  260B               	addwf	(btemp+10)^0,f,c
 10881  019F5C  50F4               	movf	244,w,c
 10882  019F5E  220C               	addwfc	(btemp+11)^0,f,c
 10883  019F60  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10884  019F66  0060  F033  FFE6   	movff	btemp+11,postinc1
 10885  019F6C  0E00               	movlw	0
 10886  019F6E  6EE6               	movwf	postinc1,c
 10887  019F70  0E02               	movlw	2
 10888  019F72  6EE6               	movwf	postinc1,c
 10889  019F74  ECC7  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10890  019F78                     l1692:
 10891                           
 10892                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10893  019F78  52E5               	movf	postdec1,f,c
 10894  019F7A  0012               	return		;funcret
 10895  019F7C                     __end_of_update_lcd:
 10896                           	opt callstack 0
 10897                           
 10898 ;; *************** function _eaDogM_WriteStringAtPos *****************
 10899 ;; Defined at:
 10900 ;;		line 195 in file "eadog.c"
 10901 ;; Parameters:    Size  Location     Type
 10902 ;;  r               1  [STACK] const unsigned char 
 10903 ;;  c               1  [STACK] const unsigned char 
 10904 ;;  strPtr          2  [STACK] PTR unsigned char 
 10905 ;;		 -> D.lcd(480), D(482), V(191), 
 10906 ;; Auto vars:     Size  Location     Type
 10907 ;;  row             1  [STACK] unsigned char 
 10908 ;; Return value:  Size  Location     Type
 10909 ;;                  1  [STACK] void 
 10910 ;; Registers used:
 10911 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10912 ;; Tracked objects:
 10913 ;;		On entry : 3F/0
 10914 ;;		On exit  : 3F/3B
 10915 ;;		Unchanged: 0/0
 10916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10921 ;;Total ram usage:        0 bytes
 10922 ;; Hardware stack levels used:    1
 10923 ;; Hardware stack levels required when called:   26
 10924 ;; This function calls:
 10925 ;;		_eaDogM_WriteString
 10926 ;;		_send_lcd_cmd_dma
 10927 ;;		_send_lcd_data_dma
 10928 ;;		_wait_lcd_done
 10929 ;;		_wdtdelay
 10930 ;; This function is called by:
 10931 ;;		_update_lcd
 10932 ;;		_vterm_dump
 10933 ;; This function uses a reentrant model
 10934 ;;
 10935                           
 10936                           	psect	text40
 10937  01AB8E                     __ptext40:
 10938                           	opt callstack 0
 10939  01AB8E                     _eaDogM_WriteStringAtPos:
 10940                           	opt callstack 0
 10941                           
 10942                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10943  01AB8E  52E6               	movf	postinc1,f,c
 10944                           
 10945                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 10946                           
 10947                           ;incstack = 0
 10948  01AB90  D014               	goto	l13034
 10949  01AB92                     l13022:
 10950                           
 10951                           ;eadog.c: 201:   row = 0x40;
 10952                           ;stkvar	_row @ sp[(-1)+0]
 10953  01AB92  0EFF               	movlw	-1
 10954  01AB94  6AE3               	clrf	plusw1,c
 10955  01AB96  8CE3               	bsf	plusw1,6,c
 10956                           
 10957                           ;eadog.c: 202:   break;
 10958  01AB98  D026               	goto	l13036
 10959  01AB9A                     l13024:
 10960                           
 10961                           ;eadog.c: 204:   row = 0x14;
 10962                           ;stkvar	_row @ sp[(-1)+0]
 10963  01AB9A  0EFF               	movlw	-1
 10964  01AB9C  6AE3               	clrf	plusw1,c
 10965  01AB9E  84E3               	bsf	plusw1,2,c
 10966  01ABA0  88E3               	bsf	plusw1,4,c	;indir
 10967                           
 10968                           ;eadog.c: 205:   break;
 10969  01ABA2  D021               	goto	l13036
 10970  01ABA4                     l13026:
 10971                           
 10972                           ;eadog.c: 207:   row = 0x54;
 10973  01ABA4  0E54               	movlw	84
 10974  01ABA6  6E0C               	movwf	(btemp+11)^0,c
 10975                           
 10976                           ;stkvar	_row @ sp[(-1)+0]
 10977  01ABA8  0EFF               	movlw	-1
 10978  01ABAA  0060  F033  FFE3   	movff	btemp+11,plusw1
 10979                           
 10980                           ;eadog.c: 208:   break;
 10981  01ABB0  D01A               	goto	l13036
 10982  01ABB2                     l13028:
 10983                           
 10984                           ;eadog.c: 210:   row = 0x1;
 10985                           ;stkvar	_row @ sp[(-1)+0]
 10986  01ABB2  0EFF               	movlw	-1
 10987  01ABB4  6AE3               	clrf	plusw1,c
 10988  01ABB6  2AE3               	incf	plusw1,f,c
 10989                           
 10990                           ;eadog.c: 211:   break;
 10991  01ABB8  D016               	goto	l13036
 10992  01ABBA                     l13034:
 10993                           
 10994                           ;stkvar	_r @ sp[(-1)+-1]
 10995  01ABBA  0EFE               	movlw	-2
 10996  01ABBC  50E3               	movf	plusw1,w,c
 10997  01ABBE  6E0B               	movwf	(btemp+10)^0,c
 10998  01ABC0  6A0C               	clrf	(btemp+11)^0,c
 10999                           
 11000                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11001                           ; Switch size 1, requested type "simple"
 11002                           ; Number of cases is 1, Range of values is 0 to 0
 11003                           ; switch strategies available:
 11004                           ; Name         Instructions Cycles
 11005                           ; simple_byte            4     3 (average)
 11006                           ;	Chosen strategy is simple_byte
 11007  01ABC2  500C               	movf	(btemp+11)^0,w,c
 11008  01ABC4  0A00               	xorlw	0	; case 0
 11009  01ABC6  A4D8               	btfss	status,2,c
 11010  01ABC8  D7E4               	goto	l13022
 11011                           
 11012                           ; Switch size 1, requested type "simple"
 11013                           ; Number of cases is 4, Range of values is 0 to 3
 11014                           ; switch strategies available:
 11015                           ; Name         Instructions Cycles
 11016                           ; simple_byte           13     7 (average)
 11017                           ;	Chosen strategy is simple_byte
 11018  01ABCA  500B               	movf	(btemp+10)^0,w,c
 11019  01ABCC  0A00               	xorlw	0	; case 0
 11020  01ABCE  B4D8               	btfsc	status,2,c
 11021  01ABD0  D7E0               	goto	l13022
 11022  01ABD2  0A01               	xorlw	1	; case 1
 11023  01ABD4  B4D8               	btfsc	status,2,c
 11024  01ABD6  D7E1               	goto	l13024
 11025  01ABD8  0A03               	xorlw	3	; case 2
 11026  01ABDA  B4D8               	btfsc	status,2,c
 11027  01ABDC  D7E3               	goto	l13026
 11028  01ABDE  0A01               	xorlw	1	; case 3
 11029  01ABE0  B4D8               	btfsc	status,2,c
 11030  01ABE2  D7E7               	goto	l13028
 11031  01ABE4  D7D6               	goto	l13022
 11032  01ABE6                     l13036:
 11033                           
 11034                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 11035  01ABE6  0E45               	movlw	69
 11036  01ABE8  6EE6               	movwf	postinc1,c
 11037  01ABEA  ECEE  F0E1         	call	_send_lcd_cmd_dma	;wreg free
 11038                           
 11039                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 11040                           ;stkvar	_c @ sp[(-1)+-2]
 11041  01ABEE  0EFD               	movlw	-3
 11042  01ABF0  006F FF8C  F00C    	movff	plusw1,btemp+11
 11043                           
 11044                           ;stkvar	_row @ sp[(-1)+0]
 11045  01ABF6  0EFF               	movlw	-1
 11046  01ABF8  50E3               	movf	plusw1,w,c
 11047  01ABFA  240C               	addwf	(btemp+11)^0,w,c
 11048  01ABFC  6EE6               	movwf	postinc1,c
 11049  01ABFE  ECEC  F0DB         	call	_send_lcd_data_dma	;wreg free
 11050                           
 11051                           ; BSR set to: 59
 11052                           ;eadog.c: 218:  wait_lcd_done();
 11053  01AC02  EC8C  F0E1         	call	_wait_lcd_done	;wreg free
 11054                           
 11055                           ; BSR set to: 0
 11056                           ;eadog.c: 219:  wdtdelay(8);
 11057  01AC06  0E08               	movlw	8
 11058  01AC08  6EE6               	movwf	postinc1,c
 11059  01AC0A  0E00               	movlw	0
 11060  01AC0C  6EE6               	movwf	postinc1,c
 11061  01AC0E  0E00               	movlw	0
 11062  01AC10  6EE6               	movwf	postinc1,c
 11063  01AC12  0E00               	movlw	0
 11064  01AC14  6EE6               	movwf	postinc1,c
 11065  01AC16  EC19  F0DB         	call	_wdtdelay	;wreg free
 11066                           
 11067                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 11068                           ;stkvar	_strPtr @ sp[(-1)+-4]
 11069  01AC1A  0EFB               	movlw	-5
 11070  01AC1C  006F FF8F FFE6     	movff	plusw1,postinc1
 11071  01AC22  006F FF8F FFE6     	movff	plusw1,postinc1
 11072  01AC28  EC1B  F0D6         	call	_eaDogM_WriteString	;wreg free
 11073                           
 11074                           ; BSR set to: 59
 11075                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 11076  01AC2C  0EFB               	movlw	251
 11077  01AC2E  26E1               	addwf	fsr1l,f,c
 11078  01AC30  0EFF               	movlw	255
 11079  01AC32  22E2               	addwfc	fsr1h,f,c
 11080  01AC34  0012               	return		;funcret
 11081  01AC36                     __end_of_eaDogM_WriteStringAtPos:
 11082                           	opt callstack 0
 11083                           
 11084 ;; *************** function _send_lcd_cmd_dma *****************
 11085 ;; Defined at:
 11086 ;;		line 171 in file "eadog.c"
 11087 ;; Parameters:    Size  Location     Type
 11088 ;;  strPtr          1  [STACK] const unsigned char 
 11089 ;; Auto vars:     Size  Location     Type
 11090 ;;		None
 11091 ;; Return value:  Size  Location     Type
 11092 ;;                  1  [STACK] void 
 11093 ;; Registers used:
 11094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11095 ;; Tracked objects:
 11096 ;;		On entry : 0/3D
 11097 ;;		On exit  : 3F/0
 11098 ;;		Unchanged: 0/0
 11099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11104 ;;Total ram usage:        0 bytes
 11105 ;; Hardware stack levels used:    1
 11106 ;; Hardware stack levels required when called:   25
 11107 ;; This function calls:
 11108 ;;		_send_lcd_data_dma
 11109 ;;		_wait_lcd_done
 11110 ;; This function is called by:
 11111 ;;		_eaDogM_WriteStringAtPos
 11112 ;;		_eaDogM_WriteCommand
 11113 ;; This function uses a reentrant model
 11114 ;;
 11115                           
 11116                           	psect	text41
 11117  01C3DC                     __ptext41:
 11118                           	opt callstack 0
 11119  01C3DC                     _send_lcd_cmd_dma:
 11120                           	opt callstack 3
 11121                           
 11122                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 11123                           
 11124                           ; BSR set to: 59
 11125                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11126                           ;incstack = 0
 11127  01C3DC  0EFE               	movlw	254
 11128  01C3DE  6EE6               	movwf	postinc1,c
 11129  01C3E0  ECEC  F0DB         	call	_send_lcd_data_dma	;wreg free
 11130                           
 11131                           ; BSR set to: 59
 11132                           ;eadog.c: 174:  wait_lcd_done();
 11133  01C3E4  EC8C  F0E1         	call	_wait_lcd_done	;wreg free
 11134                           
 11135                           ; BSR set to: 0
 11136                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 11137                           ;stkvar	_strPtr @ sp[(0)+-1]
 11138  01C3E8  0EFF               	movlw	-1
 11139  01C3EA  50E3               	movf	plusw1,w,c
 11140  01C3EC  6EE6               	movwf	postinc1,c
 11141  01C3EE  ECEC  F0DB         	call	_send_lcd_data_dma	;wreg free
 11142                           
 11143                           ;eadog.c: 176:  wait_lcd_done();
 11144  01C3F2  EC8C  F0E1         	call	_wait_lcd_done	;wreg free
 11145                           
 11146                           ; BSR set to: 0
 11147                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 11148  01C3F6  52E5               	movf	postdec1,f,c
 11149  01C3F8  0012               	return		;funcret
 11150  01C3FA                     __end_of_send_lcd_cmd_dma:
 11151                           	opt callstack 0
 11152                           
 11153 ;; *************** function _wait_lcd_done *****************
 11154 ;; Defined at:
 11155 ;;		line 444 in file "eadog.c"
 11156 ;; Parameters:    Size  Location     Type
 11157 ;;		None
 11158 ;; Auto vars:     Size  Location     Type
 11159 ;;		None
 11160 ;; Return value:  Size  Location     Type
 11161 ;;                  1  [STACK] void 
 11162 ;; Registers used:
 11163 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 11164 ;; Tracked objects:
 11165 ;;		On entry : 0/1
 11166 ;;		On exit  : 3F/0
 11167 ;;		Unchanged: 0/0
 11168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11173 ;;Total ram usage:        0 bytes
 11174 ;; Hardware stack levels used:    1
 11175 ;; Hardware stack levels required when called:   16
 11176 ;; This function calls:
 11177 ;;		_wdtdelay
 11178 ;; This function is called by:
 11179 ;;		_main
 11180 ;;		_send_lcd_cmd_dma
 11181 ;;		_eaDogM_WriteStringAtPos
 11182 ;;		_update_lcd
 11183 ;;		_vterm_dump
 11184 ;; This function uses a reentrant model
 11185 ;;
 11186                           
 11187                           	psect	text42
 11188  01C318                     __ptext42:
 11189                           	opt callstack 0
 11190  01C318                     _wait_lcd_done:
 11191                           	opt callstack 14
 11192                           
 11193                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 11194                           
 11195                           ; BSR set to: 0
 11196                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11197                           ;incstack = 0
 11198  01C318  0101               	movlb	1	; () banked
 11199  01C31A  B7CD               	btfsc	_spi_link& (0+255),3,b	;volatile
 11200  01C31C  D7FD               	goto	_wait_lcd_done
 11201  01C31E                     u8730:
 11202  01C31E  013D               	movlb	61	; () banked
 11203  01C320  AB17               	btfss	23,5,b	;volatile
 11204  01C322  D7FD               	goto	u8730
 11205                           
 11206                           ; BSR set to: 61
 11207                           ;eadog.c: 448:  wdtdelay(50);
 11208  01C324  0E32               	movlw	50
 11209  01C326  6EE6               	movwf	postinc1,c
 11210  01C328  0E00               	movlw	0
 11211  01C32A  6EE6               	movwf	postinc1,c
 11212  01C32C  0E00               	movlw	0
 11213  01C32E  6EE6               	movwf	postinc1,c
 11214  01C330  0E00               	movlw	0
 11215  01C332  6EE6               	movwf	postinc1,c
 11216  01C334  EC19  F0DB         	call	_wdtdelay	;wreg free
 11217                           
 11218                           ; BSR set to: 0
 11219                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 11220  01C338  0012               	return		;funcret
 11221  01C33A                     __end_of_wait_lcd_done:
 11222                           	opt callstack 0
 11223                           
 11224 ;; *************** function _wdtdelay *****************
 11225 ;; Defined at:
 11226 ;;		line 23 in file "eadog.c"
 11227 ;; Parameters:    Size  Location     Type
 11228 ;;  delay           4  [STACK] const unsigned long 
 11229 ;; Auto vars:     Size  Location     Type
 11230 ;;		None
 11231 ;; Return value:  Size  Location     Type
 11232 ;;                  1  [STACK] void 
 11233 ;; Registers used:
 11234 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 11235 ;; Tracked objects:
 11236 ;;		On entry : 2/3D
 11237 ;;		On exit  : 3F/0
 11238 ;;		Unchanged: 0/0
 11239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11244 ;;Total ram usage:        0 bytes
 11245 ;; Hardware stack levels used:    1
 11246 ;; Hardware stack levels required when called:   15
 11247 ;; This function calls:
 11248 ;;		Nothing
 11249 ;; This function is called by:
 11250 ;;		_init_display
 11251 ;;		_send_lcd_data
 11252 ;;		_send_lcd_cmd
 11253 ;;		_send_lcd_cmd_long
 11254 ;;		_eaDogM_WriteStringAtPos
 11255 ;;		_wait_lcd_done
 11256 ;; This function uses a reentrant model
 11257 ;;
 11258                           
 11259                           	psect	text43
 11260  01B632                     __ptext43:
 11261                           	opt callstack 0
 11262  01B632                     _wdtdelay:
 11263                           	opt callstack 14
 11264                           
 11265                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 11266                           
 11267                           ; BSR set to: 0
 11268                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11269                           ;incstack = 0
 11270  01B632  0100               	movlb	0	; () banked
 11271  01B634  6B78               	clrf	wdtdelay@dcount& (0+255),b
 11272  01B636  6B79               	clrf	(wdtdelay@dcount+1)& (0+255),b
 11273  01B638  6B7A               	clrf	(wdtdelay@dcount+2)& (0+255),b
 11274  01B63A  6B7B               	clrf	(wdtdelay@dcount+3)& (0+255),b
 11275  01B63C                     l1469:
 11276                           
 11277                           ; BSR set to: 0
 11278                           ;eadog.c: 28:   __nop();
 11279  01B63C  F000               	nop	
 11280  01B63E  0004               	clrwdt		;# 
 11281                           
 11282                           ;eadog.c: 30:  };
 11283  01B640  0E01               	movlw	1
 11284  01B642  0100               	movlb	0	; () banked
 11285  01B644  2778               	addwf	wdtdelay@dcount& (0+255),f,b
 11286  01B646  0E00               	movlw	0
 11287  01B648  2379               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 11288  01B64A  237A               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 11289  01B64C  237B               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 11290                           
 11291                           ; BSR set to: 0
 11292                           ;stkvar	_delay @ sp[(0)+-4]
 11293  01B64E  0EFC               	movlw	-4
 11294  01B650  006F FF8C  F001    	movff	plusw1,btemp
 11295  01B656  5178               	movf	wdtdelay@dcount& (0+255),w,b
 11296  01B658  5C01               	subwf	btemp^0,w,c
 11297  01B65A  0EFD               	movlw	-3
 11298  01B65C  006F FF8C  F001    	movff	plusw1,btemp
 11299  01B662  5179               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 11300  01B664  5801               	subwfb	btemp^0,w,c
 11301  01B666  0EFE               	movlw	-2
 11302  01B668  006F FF8C  F001    	movff	plusw1,btemp
 11303  01B66E  517A               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 11304  01B670  5801               	subwfb	btemp^0,w,c
 11305  01B672  0EFF               	movlw	-1
 11306  01B674  006F FF8C  F001    	movff	plusw1,btemp
 11307  01B67A  517B               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 11308  01B67C  5801               	subwfb	btemp^0,w,c
 11309  01B67E  B0D8               	btfsc	status,0,c
 11310  01B680  D7DD               	goto	l1469
 11311                           
 11312                           ; BSR set to: 0
 11313                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 11314  01B682  52E5               	movf	postdec1,f,c
 11315  01B684  52E5               	movf	postdec1,f,c
 11316  01B686  52E5               	movf	postdec1,f,c
 11317  01B688  52E5               	movf	postdec1,f,c
 11318  01B68A  0012               	return		;funcret
 11319  01B68C                     __end_of_wdtdelay:
 11320                           	opt callstack 0
 11321                           
 11322 ;; *************** function _send_lcd_data_dma *****************
 11323 ;; Defined at:
 11324 ;;		line 182 in file "eadog.c"
 11325 ;; Parameters:    Size  Location     Type
 11326 ;;  strPtr          1  [STACK] const unsigned char 
 11327 ;; Auto vars:     Size  Location     Type
 11328 ;;		None
 11329 ;; Return value:  Size  Location     Type
 11330 ;;                  1  [STACK] void 
 11331 ;; Registers used:
 11332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11333 ;; Tracked objects:
 11334 ;;		On entry : 0/0
 11335 ;;		On exit  : 3F/3B
 11336 ;;		Unchanged: 0/0
 11337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11342 ;;Total ram usage:        0 bytes
 11343 ;; Hardware stack levels used:    1
 11344 ;; Hardware stack levels required when called:   24
 11345 ;; This function calls:
 11346 ;;		_printf
 11347 ;;		_ringBufS_flush
 11348 ;;		_start_lcd
 11349 ;;		_wait_lcd_set
 11350 ;; This function is called by:
 11351 ;;		_send_lcd_cmd_dma
 11352 ;;		_eaDogM_WriteStringAtPos
 11353 ;; This function uses a reentrant model
 11354 ;;
 11355                           
 11356                           	psect	text44
 11357  01B7D8                     __ptext44:
 11358                           	opt callstack 0
 11359  01B7D8                     _send_lcd_data_dma:
 11360                           	opt callstack 4
 11361                           
 11362                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 11363                           
 11364                           ; BSR set to: 0
 11365                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11366                           ;incstack = 0
 11367  01B7D8  EC08  F0E3         	call	_wait_lcd_set	;wreg free
 11368                           
 11369                           ; BSR set to: 1
 11370                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 11371  01B7DC  0E00               	movlw	0
 11372  01B7DE  6EE6               	movwf	postinc1,c
 11373  01B7E0  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
 11374  01B7E6  0060  F753  FFE6   	movff	_spi_link+7,postinc1
 11375  01B7EC  EC0B  F0D7         	call	_ringBufS_flush	;wreg free
 11376  01B7F0  94BC               	bcf	188,2,c	;volatile
 11377                           
 11378                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 11379  01B7F2  013B               	movlb	59	; () banked
 11380  01B7F4  9FFC               	bcf	252,7,b	;volatile
 11381                           
 11382                           ; BSR set to: 59
 11383                           ;eadog.c: 189:  DMA1SSZ = 1;
 11384  01B7F6  0E00               	movlw	0
 11385  01B7F8  6FF8               	movwf	248,b	;volatile
 11386  01B7FA  0E01               	movlw	1
 11387  01B7FC  6FF7               	movwf	247,b	;volatile
 11388                           
 11389                           ; BSR set to: 59
 11390                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 11391  01B7FE  8FFC               	bsf	252,7,b	;volatile
 11392                           
 11393                           ; BSR set to: 59
 11394                           ;eadog.c: 191:  printf("%c", strPtr);
 11395                           ;stkvar	_strPtr @ sp[(0)+-1]
 11396  01B800  0EFF               	movlw	-1
 11397  01B802  50E3               	movf	plusw1,w,c
 11398  01B804  6EE6               	movwf	postinc1,c
 11399  01B806  0E00               	movlw	0
 11400  01B808  6EE6               	movwf	postinc1,c
 11401  01B80A  0EF9               	movlw	low STR_44
 11402  01B80C  6EE6               	movwf	postinc1,c
 11403  01B80E  0EFF               	movlw	high STR_44
 11404  01B810  6EE6               	movwf	postinc1,c
 11405  01B812  0E04               	movlw	4
 11406  01B814  6EE6               	movwf	postinc1,c
 11407  01B816  EC5A  F0DA         	call	_printf	;wreg free
 11408                           
 11409                           ; BSR set to: 0
 11410                           ;eadog.c: 192:  start_lcd();
 11411  01B81A  EC0B  F0E3         	call	_start_lcd	;wreg free
 11412                           
 11413                           ; BSR set to: 59
 11414                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 11415  01B81E  52E5               	movf	postdec1,f,c
 11416  01B820  0012               	return		;funcret
 11417  01B822                     __end_of_send_lcd_data_dma:
 11418                           	opt callstack 0
 11419                           
 11420 ;; *************** function _eaDogM_WriteString *****************
 11421 ;; Defined at:
 11422 ;;		line 151 in file "eadog.c"
 11423 ;; Parameters:    Size  Location     Type
 11424 ;;  strPtr          2  [STACK] PTR unsigned char 
 11425 ;;		 -> D.lcd(480), D(482), V(191), 
 11426 ;; Auto vars:     Size  Location     Type
 11427 ;;		None
 11428 ;; Return value:  Size  Location     Type
 11429 ;;                  1  [STACK] void 
 11430 ;; Registers used:
 11431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11432 ;; Tracked objects:
 11433 ;;		On entry : 3F/0
 11434 ;;		On exit  : 3F/3B
 11435 ;;		Unchanged: 0/0
 11436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11441 ;;Total ram usage:        0 bytes
 11442 ;; Hardware stack levels used:    1
 11443 ;; Hardware stack levels required when called:   24
 11444 ;; This function calls:
 11445 ;;		_printf
 11446 ;;		_ringBufS_flush
 11447 ;;		_start_lcd
 11448 ;;		_strlen
 11449 ;;		_wait_lcd_set
 11450 ;; This function is called by:
 11451 ;;		_eaDogM_WriteStringAtPos
 11452 ;; This function uses a reentrant model
 11453 ;;
 11454                           
 11455                           	psect	text45
 11456  01AC36                     __ptext45:
 11457                           	opt callstack 0
 11458  01AC36                     _eaDogM_WriteString:
 11459                           	opt callstack 4
 11460                           
 11461                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 11462                           
 11463                           ; BSR set to: 59
 11464                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11465                           ;incstack = 0
 11466  01AC36  EC08  F0E3         	call	_wait_lcd_set	;wreg free
 11467                           
 11468                           ; BSR set to: 1
 11469                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 11470  01AC3A  0E00               	movlw	0
 11471  01AC3C  6EE6               	movwf	postinc1,c
 11472  01AC3E  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
 11473  01AC44  0060  F753  FFE6   	movff	_spi_link+7,postinc1
 11474  01AC4A  EC0B  F0D7         	call	_ringBufS_flush	;wreg free
 11475  01AC4E  94BC               	bcf	188,2,c	;volatile
 11476                           
 11477                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 11478                           ;stkvar	_strPtr @ sp[(0)+-2]
 11479  01AC50  0EFE               	movlw	-2
 11480  01AC52  006F FF8F FFE6     	movff	plusw1,postinc1
 11481  01AC58  006F FF8F FFE6     	movff	plusw1,postinc1
 11482  01AC5E  EC6E  F0D6         	call	_strlen	;wreg free
 11483  01AC62  5002               	movf	(btemp+1)^0,w,c
 11484  01AC64  E104               	bnz	u12400
 11485  01AC66  0E41               	movlw	65
 11486  01AC68  5C01               	subwf	btemp^0,w,c
 11487  01AC6A  A0D8               	btfss	status,0,c
 11488  01AC6C  D010               	goto	l12978
 11489  01AC6E                     u12400:
 11490                           
 11491                           ;stkvar	_strPtr @ sp[(0)+-2]
 11492  01AC6E  0EFE               	movlw	-2
 11493  01AC70  006F FF8C  F00B    	movff	plusw1,btemp+10
 11494  01AC76  0EFF               	movlw	-1
 11495  01AC78  006F FF8C  F00C    	movff	plusw1,btemp+11
 11496  01AC7E  0E40               	movlw	64
 11497  01AC80  240B               	addwf	(btemp+10)^0,w,c
 11498  01AC82  6ED9               	movwf	fsr2l,c
 11499  01AC84  0E00               	movlw	0
 11500  01AC86  200C               	addwfc	(btemp+11)^0,w,c
 11501  01AC88  6EDA               	movwf	fsr2h,c
 11502  01AC8A  0E00               	movlw	0
 11503  01AC8C  6EDF               	movwf	indf2,c
 11504  01AC8E                     l12978:
 11505                           
 11506                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 11507  01AC8E  013B               	movlb	59	; () banked
 11508  01AC90  9FFC               	bcf	252,7,b	;volatile
 11509                           
 11510                           ; BSR set to: 59
 11511                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 11512                           ;stkvar	_strPtr @ sp[(0)+-2]
 11513  01AC92  0EFE               	movlw	-2
 11514  01AC94  006F FF8F FFE6     	movff	plusw1,postinc1
 11515  01AC9A  006F FF8F FFE6     	movff	plusw1,postinc1
 11516  01ACA0  EC6E  F0D6         	call	_strlen	;wreg free
 11517  01ACA4  0060  F007  FBF7   	movff	btemp,15351	;volatile
 11518  01ACAA  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 11519                           
 11520                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 11521  01ACB0  013B               	movlb	59	; () banked
 11522  01ACB2  8FFC               	bsf	252,7,b	;volatile
 11523                           
 11524                           ; BSR set to: 59
 11525                           ;eadog.c: 161:  printf("%s", strPtr);
 11526                           ;stkvar	_strPtr @ sp[(0)+-2]
 11527  01ACB4  0EFE               	movlw	-2
 11528  01ACB6  006F FF8F FFE6     	movff	plusw1,postinc1
 11529  01ACBC  006F FF8F FFE6     	movff	plusw1,postinc1
 11530  01ACC2  0EFC               	movlw	low STR_43
 11531  01ACC4  6EE6               	movwf	postinc1,c
 11532  01ACC6  0EFF               	movlw	high STR_43
 11533  01ACC8  6EE6               	movwf	postinc1,c
 11534  01ACCA  0E04               	movlw	4
 11535  01ACCC  6EE6               	movwf	postinc1,c
 11536  01ACCE  EC5A  F0DA         	call	_printf	;wreg free
 11537                           
 11538                           ; BSR set to: 0
 11539                           ;eadog.c: 162:  start_lcd();
 11540  01ACD2  EC0B  F0E3         	call	_start_lcd	;wreg free
 11541                           
 11542                           ; BSR set to: 59
 11543                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 11544  01ACD6  52E5               	movf	postdec1,f,c
 11545  01ACD8  52E5               	movf	postdec1,f,c
 11546  01ACDA  0012               	return		;funcret
 11547  01ACDC                     __end_of_eaDogM_WriteString:
 11548                           	opt callstack 0
 11549                           
 11550 ;; *************** function _wait_lcd_set *****************
 11551 ;; Defined at:
 11552 ;;		line 434 in file "eadog.c"
 11553 ;; Parameters:    Size  Location     Type
 11554 ;;		None
 11555 ;; Auto vars:     Size  Location     Type
 11556 ;;		None
 11557 ;; Return value:  Size  Location     Type
 11558 ;;                  1  [STACK] void 
 11559 ;; Registers used:
 11560 ;;		None
 11561 ;; Tracked objects:
 11562 ;;		On entry : 0/0
 11563 ;;		On exit  : 3F/1
 11564 ;;		Unchanged: 0/0
 11565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11570 ;;Total ram usage:        0 bytes
 11571 ;; Hardware stack levels used:    1
 11572 ;; Hardware stack levels required when called:   15
 11573 ;; This function calls:
 11574 ;;		Nothing
 11575 ;; This function is called by:
 11576 ;;		_eaDogM_WriteString
 11577 ;;		_send_lcd_data_dma
 11578 ;; This function uses a reentrant model
 11579 ;;
 11580                           
 11581                           	psect	text46
 11582  01C610                     __ptext46:
 11583                           	opt callstack 0
 11584  01C610                     _wait_lcd_set:
 11585                           	opt callstack 12
 11586                           
 11587                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 11588                           
 11589                           ; BSR set to: 59
 11590                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11591                           ;incstack = 0
 11592  01C610  0101               	movlb	1	; () banked
 11593  01C612  87CD               	bsf	_spi_link& (0+255),3,b	;volatile
 11594                           
 11595                           ; BSR set to: 1
 11596                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 11597  01C614  0012               	return		;funcret
 11598  01C616                     __end_of_wait_lcd_set:
 11599                           	opt callstack 0
 11600                           
 11601 ;; *************** function _start_lcd *****************
 11602 ;; Defined at:
 11603 ;;		line 429 in file "eadog.c"
 11604 ;; Parameters:    Size  Location     Type
 11605 ;;		None
 11606 ;; Auto vars:     Size  Location     Type
 11607 ;;		None
 11608 ;; Return value:  Size  Location     Type
 11609 ;;                  1  [STACK] void 
 11610 ;; Registers used:
 11611 ;;		None
 11612 ;; Tracked objects:
 11613 ;;		On entry : 3F/0
 11614 ;;		On exit  : 3F/3B
 11615 ;;		Unchanged: 0/0
 11616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11621 ;;Total ram usage:        0 bytes
 11622 ;; Hardware stack levels used:    1
 11623 ;; Hardware stack levels required when called:   15
 11624 ;; This function calls:
 11625 ;;		Nothing
 11626 ;; This function is called by:
 11627 ;;		_eaDogM_WriteString
 11628 ;;		_send_lcd_data_dma
 11629 ;; This function uses a reentrant model
 11630 ;;
 11631                           
 11632                           	psect	text47
 11633  01C616                     __ptext47:
 11634                           	opt callstack 0
 11635  01C616                     _start_lcd:
 11636                           	opt callstack 12
 11637                           
 11638                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 11639                           
 11640                           ; BSR set to: 1
 11641                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11642                           ;incstack = 0
 11643  01C616  013B               	movlb	59	; () banked
 11644  01C618  8DFC               	bsf	252,6,b	;volatile
 11645                           
 11646                           ; BSR set to: 59
 11647                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 11648  01C61A  0012               	return		;funcret
 11649  01C61C                     __end_of_start_lcd:
 11650                           	opt callstack 0
 11651                           
 11652 ;; *************** function _ringBufS_flush *****************
 11653 ;; Defined at:
 11654 ;;		line 76 in file "ringbufs.c"
 11655 ;; Parameters:    Size  Location     Type
 11656 ;;  _this           2  [STACK] PTR struct ringBufS_t
 11657 ;;		 -> ring_buf1(67), 
 11658 ;;  clearBuffer     1  [STACK] const char 
 11659 ;; Auto vars:     Size  Location     Type
 11660 ;;		None
 11661 ;; Return value:  Size  Location     Type
 11662 ;;                  1  [STACK] void 
 11663 ;; Registers used:
 11664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 11665 ;; Tracked objects:
 11666 ;;		On entry : 3F/1
 11667 ;;		On exit  : 0/0
 11668 ;;		Unchanged: 0/0
 11669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11674 ;;Total ram usage:        0 bytes
 11675 ;; Hardware stack levels used:    1
 11676 ;; Hardware stack levels required when called:   16
 11677 ;; This function calls:
 11678 ;;		_memset
 11679 ;; This function is called by:
 11680 ;;		_eaDogM_WriteString
 11681 ;;		_send_lcd_data_dma
 11682 ;; This function uses a reentrant model
 11683 ;;
 11684                           
 11685                           	psect	text48
 11686  01AE16                     __ptext48:
 11687                           	opt callstack 0
 11688  01AE16                     _ringBufS_flush:
 11689                           	opt callstack 11
 11690                           
 11691                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 11692                           ;stkvar	__this @ sp[(0)+-2]
 11693                           
 11694                           ; BSR set to: 59
 11695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11696                           ;incstack = 0
 11697  01AE16  0EFE               	movlw	-2
 11698  01AE18  006F FF8C  F00B    	movff	plusw1,btemp+10
 11699  01AE1E  0EFF               	movlw	-1
 11700  01AE20  006F FF8C  F00C    	movff	plusw1,btemp+11
 11701  01AE26  0E42               	movlw	66
 11702  01AE28  240B               	addwf	(btemp+10)^0,w,c
 11703  01AE2A  6ED9               	movwf	fsr2l,c
 11704  01AE2C  0E00               	movlw	0
 11705  01AE2E  200C               	addwfc	(btemp+11)^0,w,c
 11706  01AE30  6EDA               	movwf	fsr2h,c
 11707  01AE32  0E00               	movlw	0
 11708  01AE34  6EDF               	movwf	indf2,c
 11709                           
 11710                           ;ringbufs.c: 79:  _this->head = 0;
 11711                           ;stkvar	__this @ sp[(0)+-2]
 11712  01AE36  0EFE               	movlw	-2
 11713  01AE38  006F FF8C  F00B    	movff	plusw1,btemp+10
 11714  01AE3E  0EFF               	movlw	-1
 11715  01AE40  006F FF8C  F00C    	movff	plusw1,btemp+11
 11716  01AE46  0E40               	movlw	64
 11717  01AE48  240B               	addwf	(btemp+10)^0,w,c
 11718  01AE4A  6ED9               	movwf	fsr2l,c
 11719  01AE4C  0E00               	movlw	0
 11720  01AE4E  200C               	addwfc	(btemp+11)^0,w,c
 11721  01AE50  6EDA               	movwf	fsr2h,c
 11722  01AE52  0E00               	movlw	0
 11723  01AE54  6EDF               	movwf	indf2,c
 11724                           
 11725                           ;ringbufs.c: 80:  _this->tail = 0;
 11726                           ;stkvar	__this @ sp[(0)+-2]
 11727  01AE56  0EFE               	movlw	-2
 11728  01AE58  006F FF8C  F00B    	movff	plusw1,btemp+10
 11729  01AE5E  0EFF               	movlw	-1
 11730  01AE60  006F FF8C  F00C    	movff	plusw1,btemp+11
 11731  01AE66  0E41               	movlw	65
 11732  01AE68  240B               	addwf	(btemp+10)^0,w,c
 11733  01AE6A  6ED9               	movwf	fsr2l,c
 11734  01AE6C  0E00               	movlw	0
 11735  01AE6E  200C               	addwfc	(btemp+11)^0,w,c
 11736  01AE70  6EDA               	movwf	fsr2h,c
 11737  01AE72  0E00               	movlw	0
 11738  01AE74  6EDF               	movwf	indf2,c
 11739                           
 11740                           ;ringbufs.c: 81:  if (clearBuffer) {
 11741                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 11742  01AE76  0EFD               	movlw	-3
 11743  01AE78  50E3               	movf	plusw1,w,c
 11744  01AE7A  B4D8               	btfsc	status,2,c
 11745  01AE7C  D011               	goto	l1601
 11746                           
 11747                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 11748  01AE7E  0E40               	movlw	64
 11749  01AE80  6EE6               	movwf	postinc1,c
 11750  01AE82  0E00               	movlw	0
 11751  01AE84  6EE6               	movwf	postinc1,c
 11752  01AE86  0E00               	movlw	0
 11753  01AE88  6EE6               	movwf	postinc1,c
 11754  01AE8A  0E00               	movlw	0
 11755  01AE8C  6EE6               	movwf	postinc1,c
 11756                           
 11757                           ;stkvar	__this @ sp[(-4)+-2]
 11758  01AE8E  0EFA               	movlw	-6
 11759  01AE90  006F FF8F FFE6     	movff	plusw1,postinc1
 11760  01AE96  006F FF8F FFE6     	movff	plusw1,postinc1
 11761  01AE9C  EC6A  F0B7         	call	_memset	;wreg free
 11762  01AEA0                     l1601:
 11763                           
 11764                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 11765  01AEA0  52E5               	movf	postdec1,f,c
 11766  01AEA2  52E5               	movf	postdec1,f,c
 11767  01AEA4  52E5               	movf	postdec1,f,c
 11768  01AEA6  0012               	return		;funcret
 11769  01AEA8                     __end_of_ringBufS_flush:
 11770                           	opt callstack 0
 11771                           
 11772 ;; *************** function _memset *****************
 11773 ;; Defined at:
 11774 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 11775 ;; Parameters:    Size  Location     Type
 11776 ;;  dest            2  [STACK] PTR void 
 11777 ;;		 -> ring_buf2(67), ring_buf1(67), 
 11778 ;;  c               2  [STACK] int 
 11779 ;;  n               2  [STACK] unsigned int 
 11780 ;; Auto vars:     Size  Location     Type
 11781 ;;  s               2  [STACK] PTR unsigned char 
 11782 ;;		 -> ring_buf2(67), ring_buf1(67), 
 11783 ;;  k               2  [STACK] unsigned int 
 11784 ;; Return value:  Size  Location     Type
 11785 ;;                  2  [STACK] PTR void 
 11786 ;; Registers used:
 11787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 11788 ;; Tracked objects:
 11789 ;;		On entry : 0/1
 11790 ;;		On exit  : 0/0
 11791 ;;		Unchanged: 0/0
 11792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11797 ;;Total ram usage:        0 bytes
 11798 ;; Hardware stack levels used:    1
 11799 ;; Hardware stack levels required when called:   15
 11800 ;; This function calls:
 11801 ;;		Nothing
 11802 ;; This function is called by:
 11803 ;;		_ringBufS_init
 11804 ;;		_ringBufS_flush
 11805 ;; This function uses a reentrant model
 11806 ;;
 11807                           
 11808                           	psect	text49
 11809  016ED4                     __ptext49:
 11810                           	opt callstack 0
 11811  016ED4                     _memset:
 11812                           	opt callstack 0
 11813                           
 11814                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11815  016ED4  52E6               	movf	postinc1,f,c
 11816  016ED6  52E6               	movf	postinc1,f,c
 11817  016ED8  52E6               	movf	postinc1,f,c
 11818  016EDA  52E6               	movf	postinc1,f,c
 11819                           
 11820                           ;stkvar	_dest @ sp[(-4)+-2]
 11821                           
 11822                           ;incstack = 0
 11823  016EDC  0EFA               	movlw	-6
 11824  016EDE  006F FF8C  F00B    	movff	plusw1,btemp+10
 11825  016EE4  0EFB               	movlw	-5
 11826  016EE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 11827                           
 11828                           ;stkvar	_s @ sp[(-4)+0]
 11829  016EEC  0EFD               	movlw	-3
 11830  016EEE  0060  F033  FFE3   	movff	btemp+11,plusw1
 11831  016EF4  0EFC               	movlw	-4
 11832  016EF6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11833                           
 11834                           ;stkvar	_n @ sp[(-4)+-6]
 11835  016EFC  0EF6               	movlw	-10
 11836  016EFE  006F FF8C  F001    	movff	plusw1,btemp
 11837  016F04  0EF7               	movlw	-9
 11838  016F06  50E3               	movf	plusw1,w,c
 11839  016F08  1001               	iorwf	btemp^0,w,c
 11840  016F0A  B4D8               	btfsc	status,2,c
 11841  016F0C  D154               	goto	u10950
 11842                           
 11843                           ;stkvar	_c @ sp[(-4)+-4]
 11844                           ;stkvar	_s @ sp[(-4)+0]
 11845  016F0E  0EFC               	movlw	-4
 11846  016F10  006F FF8F FFD9     	movff	plusw1,fsr2l
 11847  016F16  0EFD               	movlw	-3
 11848  016F18  006F FF8F FFDA     	movff	plusw1,fsr2h
 11849  016F1E  0EF8               	movlw	-8
 11850  016F20  006F FF8F FFDF     	movff	plusw1,indf2
 11851                           
 11852                           ;stkvar	_c @ sp[(-4)+-4]
 11853                           ;stkvar	_n @ sp[(-4)+-6]
 11854                           ;stkvar	_s @ sp[(-4)+0]
 11855  016F26  0EFC               	movlw	-4
 11856  016F28  006F FF8C  F00B    	movff	plusw1,btemp+10
 11857  016F2E  0EFD               	movlw	-3
 11858  016F30  006F FF8C  F00C    	movff	plusw1,btemp+11
 11859  016F36  0EF6               	movlw	-10
 11860  016F38  50E3               	movf	plusw1,w,c
 11861  016F3A  260B               	addwf	(btemp+10)^0,f,c
 11862  016F3C  0EF7               	movlw	-9
 11863  016F3E  50E3               	movf	plusw1,w,c
 11864  016F40  220C               	addwfc	(btemp+11)^0,f,c
 11865  016F42  0EFF               	movlw	255
 11866  016F44  240B               	addwf	(btemp+10)^0,w,c
 11867  016F46  6ED9               	movwf	fsr2l,c
 11868  016F48  0EFF               	movlw	255
 11869  016F4A  200C               	addwfc	(btemp+11)^0,w,c
 11870  016F4C  6EDA               	movwf	fsr2h,c
 11871  016F4E  0EF8               	movlw	-8
 11872  016F50  006F FF8F FFDF     	movff	plusw1,indf2
 11873                           
 11874                           ;stkvar	_n @ sp[(-4)+-6]
 11875  016F56  0EF7               	movlw	-9
 11876  016F58  50E3               	movf	plusw1,w,c
 11877  016F5A  E108               	bnz	l12130
 11878  016F5C  0EF6               	movlw	-10
 11879  016F5E  006F FF8C  F001    	movff	plusw1,btemp
 11880  016F64  0E03               	movlw	3
 11881  016F66  5E01               	subwf	btemp^0,f,c
 11882  016F68  A0D8               	btfss	status,0,c
 11883  016F6A  D125               	goto	u10950
 11884  016F6C                     l12130:
 11885                           
 11886                           ;stkvar	_c @ sp[(-4)+-4]
 11887                           ;stkvar	_s @ sp[(-4)+0]
 11888  016F6C  0EFC               	movlw	-4
 11889  016F6E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11890  016F74  0EFD               	movlw	-3
 11891  016F76  006F FF8C  F00C    	movff	plusw1,btemp+11
 11892  016F7C  0E01               	movlw	1
 11893  016F7E  240B               	addwf	(btemp+10)^0,w,c
 11894  016F80  6ED9               	movwf	fsr2l,c
 11895  016F82  0E00               	movlw	0
 11896  016F84  200C               	addwfc	(btemp+11)^0,w,c
 11897  016F86  6EDA               	movwf	fsr2h,c
 11898  016F88  0EF8               	movlw	-8
 11899  016F8A  006F FF8F FFDF     	movff	plusw1,indf2
 11900                           
 11901                           ;stkvar	_c @ sp[(-4)+-4]
 11902                           ;stkvar	_s @ sp[(-4)+0]
 11903  016F90  0EFC               	movlw	-4
 11904  016F92  006F FF8C  F00B    	movff	plusw1,btemp+10
 11905  016F98  0EFD               	movlw	-3
 11906  016F9A  006F FF8C  F00C    	movff	plusw1,btemp+11
 11907  016FA0  0E02               	movlw	2
 11908  016FA2  240B               	addwf	(btemp+10)^0,w,c
 11909  016FA4  6ED9               	movwf	fsr2l,c
 11910  016FA6  0E00               	movlw	0
 11911  016FA8  200C               	addwfc	(btemp+11)^0,w,c
 11912  016FAA  6EDA               	movwf	fsr2h,c
 11913  016FAC  0EF8               	movlw	-8
 11914  016FAE  006F FF8F FFDF     	movff	plusw1,indf2
 11915                           
 11916                           ;stkvar	_c @ sp[(-4)+-4]
 11917                           ;stkvar	_n @ sp[(-4)+-6]
 11918                           ;stkvar	_s @ sp[(-4)+0]
 11919  016FB4  0EFC               	movlw	-4
 11920  016FB6  006F FF8C  F00B    	movff	plusw1,btemp+10
 11921  016FBC  0EFD               	movlw	-3
 11922  016FBE  006F FF8C  F00C    	movff	plusw1,btemp+11
 11923  016FC4  0EF6               	movlw	-10
 11924  016FC6  50E3               	movf	plusw1,w,c
 11925  016FC8  260B               	addwf	(btemp+10)^0,f,c
 11926  016FCA  0EF7               	movlw	-9
 11927  016FCC  50E3               	movf	plusw1,w,c
 11928  016FCE  220C               	addwfc	(btemp+11)^0,f,c
 11929  016FD0  0EFE               	movlw	254
 11930  016FD2  240B               	addwf	(btemp+10)^0,w,c
 11931  016FD4  6ED9               	movwf	fsr2l,c
 11932  016FD6  0EFF               	movlw	255
 11933  016FD8  200C               	addwfc	(btemp+11)^0,w,c
 11934  016FDA  6EDA               	movwf	fsr2h,c
 11935  016FDC  0EF8               	movlw	-8
 11936  016FDE  006F FF8F FFDF     	movff	plusw1,indf2
 11937                           
 11938                           ;stkvar	_c @ sp[(-4)+-4]
 11939                           ;stkvar	_n @ sp[(-4)+-6]
 11940                           ;stkvar	_s @ sp[(-4)+0]
 11941  016FE4  0EFC               	movlw	-4
 11942  016FE6  006F FF8C  F00B    	movff	plusw1,btemp+10
 11943  016FEC  0EFD               	movlw	-3
 11944  016FEE  006F FF8C  F00C    	movff	plusw1,btemp+11
 11945  016FF4  0EF6               	movlw	-10
 11946  016FF6  50E3               	movf	plusw1,w,c
 11947  016FF8  260B               	addwf	(btemp+10)^0,f,c
 11948  016FFA  0EF7               	movlw	-9
 11949  016FFC  50E3               	movf	plusw1,w,c
 11950  016FFE  220C               	addwfc	(btemp+11)^0,f,c
 11951  017000  0EFD               	movlw	253
 11952  017002  240B               	addwf	(btemp+10)^0,w,c
 11953  017004  6ED9               	movwf	fsr2l,c
 11954  017006  0EFF               	movlw	255
 11955  017008  200C               	addwfc	(btemp+11)^0,w,c
 11956  01700A  6EDA               	movwf	fsr2h,c
 11957  01700C  0EF8               	movlw	-8
 11958  01700E  006F FF8F FFDF     	movff	plusw1,indf2
 11959                           
 11960                           ;stkvar	_n @ sp[(-4)+-6]
 11961  017014  0EF7               	movlw	-9
 11962  017016  50E3               	movf	plusw1,w,c
 11963  017018  E108               	bnz	l12136
 11964  01701A  0EF6               	movlw	-10
 11965  01701C  006F FF8C  F001    	movff	plusw1,btemp
 11966  017022  0E07               	movlw	7
 11967  017024  5E01               	subwf	btemp^0,f,c
 11968  017026  A0D8               	btfss	status,0,c
 11969  017028  D0C6               	goto	u10950
 11970  01702A                     l12136:
 11971                           
 11972                           ;stkvar	_c @ sp[(-4)+-4]
 11973                           ;stkvar	_s @ sp[(-4)+0]
 11974  01702A  0EFC               	movlw	-4
 11975  01702C  006F FF8C  F00B    	movff	plusw1,btemp+10
 11976  017032  0EFD               	movlw	-3
 11977  017034  006F FF8C  F00C    	movff	plusw1,btemp+11
 11978  01703A  0E03               	movlw	3
 11979  01703C  240B               	addwf	(btemp+10)^0,w,c
 11980  01703E  6ED9               	movwf	fsr2l,c
 11981  017040  0E00               	movlw	0
 11982  017042  200C               	addwfc	(btemp+11)^0,w,c
 11983  017044  6EDA               	movwf	fsr2h,c
 11984  017046  0EF8               	movlw	-8
 11985  017048  006F FF8F FFDF     	movff	plusw1,indf2
 11986                           
 11987                           ;stkvar	_c @ sp[(-4)+-4]
 11988                           ;stkvar	_n @ sp[(-4)+-6]
 11989                           ;stkvar	_s @ sp[(-4)+0]
 11990  01704E  0EFC               	movlw	-4
 11991  017050  006F FF8C  F00B    	movff	plusw1,btemp+10
 11992  017056  0EFD               	movlw	-3
 11993  017058  006F FF8C  F00C    	movff	plusw1,btemp+11
 11994  01705E  0EF6               	movlw	-10
 11995  017060  50E3               	movf	plusw1,w,c
 11996  017062  260B               	addwf	(btemp+10)^0,f,c
 11997  017064  0EF7               	movlw	-9
 11998  017066  50E3               	movf	plusw1,w,c
 11999  017068  220C               	addwfc	(btemp+11)^0,f,c
 12000  01706A  0EFC               	movlw	252
 12001  01706C  240B               	addwf	(btemp+10)^0,w,c
 12002  01706E  6ED9               	movwf	fsr2l,c
 12003  017070  0EFF               	movlw	255
 12004  017072  200C               	addwfc	(btemp+11)^0,w,c
 12005  017074  6EDA               	movwf	fsr2h,c
 12006  017076  0EF8               	movlw	-8
 12007  017078  006F FF8F FFDF     	movff	plusw1,indf2
 12008                           
 12009                           ;stkvar	_n @ sp[(-4)+-6]
 12010  01707E  0EF7               	movlw	-9
 12011  017080  50E3               	movf	plusw1,w,c
 12012  017082  E108               	bnz	l12142
 12013  017084  0EF6               	movlw	-10
 12014  017086  006F FF8C  F001    	movff	plusw1,btemp
 12015  01708C  0E09               	movlw	9
 12016  01708E  5E01               	subwf	btemp^0,f,c
 12017  017090  A0D8               	btfss	status,0,c
 12018  017092  D091               	goto	u10950
 12019  017094                     l12142:
 12020                           
 12021                           ;stkvar	_s @ sp[(-4)+0]
 12022  017094  0EFC               	movlw	-4
 12023  017096  006F FF8C  F00B    	movff	plusw1,btemp+10
 12024  01709C  1E0B               	comf	(btemp+10)^0,f,c
 12025  01709E  0EFD               	movlw	-3
 12026  0170A0  006F FF8C  F00C    	movff	plusw1,btemp+11
 12027  0170A6  1E0C               	comf	(btemp+11)^0,f,c
 12028  0170A8  2A0B               	incf	(btemp+10)^0,f,c
 12029  0170AA  B4D8               	btfsc	status,2,c
 12030  0170AC  2A0C               	incf	(btemp+11)^0,f,c
 12031  0170AE  0E03               	movlw	3
 12032  0170B0  160B               	andwf	(btemp+10)^0,f,c
 12033  0170B2  0E00               	movlw	0
 12034  0170B4  160C               	andwf	(btemp+11)^0,f,c
 12035                           
 12036                           ;stkvar	_k @ sp[(-4)+2]
 12037  0170B6  0EFE               	movlw	-2
 12038  0170B8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12039  0170BE  0EFF               	movlw	-1
 12040  0170C0  0060  F033  FFE3   	movff	btemp+11,plusw1
 12041                           
 12042                           ;stkvar	_k @ sp[(-4)+2]
 12043                           ;stkvar	_s @ sp[(-4)+0]
 12044  0170C6  0EFC               	movlw	-4
 12045  0170C8  50E3               	movf	plusw1,w,c
 12046  0170CA  6E01               	movwf	btemp^0,c
 12047  0170CC  0EFE               	movlw	-2
 12048  0170CE  50E3               	movf	plusw1,w,c
 12049  0170D0  2601               	addwf	btemp^0,f,c
 12050  0170D2  0EFC               	movlw	-4
 12051  0170D4  0060  F007  FFE3   	movff	btemp,plusw1
 12052  0170DA  0EFD               	movlw	-3
 12053  0170DC  50E3               	movf	plusw1,w,c
 12054  0170DE  6E01               	movwf	btemp^0,c
 12055  0170E0  0EFF               	movlw	-1
 12056  0170E2  50E3               	movf	plusw1,w,c
 12057  0170E4  2201               	addwfc	btemp^0,f,c
 12058  0170E6  0EFD               	movlw	-3
 12059  0170E8  0060  F007  FFE3   	movff	btemp,plusw1
 12060                           
 12061                           ;stkvar	_k @ sp[(-4)+2]
 12062                           ;stkvar	_n @ sp[(-4)+-6]
 12063  0170EE  0EF6               	movlw	-10
 12064  0170F0  50E3               	movf	plusw1,w,c
 12065  0170F2  6E01               	movwf	btemp^0,c
 12066  0170F4  0EFE               	movlw	-2
 12067  0170F6  50E3               	movf	plusw1,w,c
 12068  0170F8  5E01               	subwf	btemp^0,f,c
 12069  0170FA  0EF6               	movlw	-10
 12070  0170FC  0060  F007  FFE3   	movff	btemp,plusw1
 12071  017102  0EF7               	movlw	-9
 12072  017104  50E3               	movf	plusw1,w,c
 12073  017106  6E01               	movwf	btemp^0,c
 12074  017108  0EFF               	movlw	-1
 12075  01710A  50E3               	movf	plusw1,w,c
 12076  01710C  5A01               	subwfb	btemp^0,f,c
 12077  01710E  0EF7               	movlw	-9
 12078  017110  0060  F007  FFE3   	movff	btemp,plusw1
 12079  017116  0EFC               	movlw	252
 12080  017118  6E0B               	movwf	(btemp+10)^0,c
 12081  01711A  0EFF               	movlw	255
 12082  01711C  6E0C               	movwf	(btemp+11)^0,c
 12083                           
 12084                           ;stkvar	_n @ sp[(-4)+-6]
 12085  01711E  0EF6               	movlw	-10
 12086  017120  006F FF8C  F001    	movff	plusw1,btemp
 12087  017126  500B               	movf	(btemp+10)^0,w,c
 12088  017128  1601               	andwf	btemp^0,f,c
 12089  01712A  0EF6               	movlw	-10
 12090  01712C  0060  F007  FFE3   	movff	btemp,plusw1
 12091  017132  0EF7               	movlw	-9
 12092  017134  006F FF8C  F001    	movff	plusw1,btemp
 12093  01713A  500C               	movf	(btemp+11)^0,w,c
 12094  01713C  1601               	andwf	btemp^0,f,c
 12095  01713E  0EF7               	movlw	-9
 12096  017140  D02E               	goto	L10
 12097  017142                     l12150:
 12098                           
 12099                           ;stkvar	_c @ sp[(-4)+-4]
 12100                           ;stkvar	_s @ sp[(-4)+0]
 12101  017142  0EFC               	movlw	-4
 12102  017144  006F FF8F FFD9     	movff	plusw1,fsr2l
 12103  01714A  0EFD               	movlw	-3
 12104  01714C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12105  017152  0EF8               	movlw	-8
 12106  017154  006F FF8F FFDF     	movff	plusw1,indf2
 12107                           
 12108                           ;stkvar	_n @ sp[(-4)+-6]
 12109  01715A  0EF6               	movlw	-10
 12110  01715C  006F FF8C  F001    	movff	plusw1,btemp
 12111  017162  0E01               	movlw	1
 12112  017164  5E01               	subwf	btemp^0,f,c
 12113  017166  0EF6               	movlw	-10
 12114  017168  0060  F007  FFE3   	movff	btemp,plusw1
 12115  01716E  0EF7               	movlw	-9
 12116  017170  006F FF8C  F001    	movff	plusw1,btemp
 12117  017176  0E00               	movlw	0
 12118  017178  5A01               	subwfb	btemp^0,f,c
 12119  01717A  0EF7               	movlw	-9
 12120  01717C  0060  F007  FFE3   	movff	btemp,plusw1
 12121                           
 12122                           ;stkvar	_s @ sp[(-4)+0]
 12123  017182  0EFC               	movlw	-4
 12124  017184  50E3               	movf	plusw1,w,c
 12125  017186  0F01               	addlw	1
 12126  017188  6E01               	movwf	btemp^0,c
 12127  01718A  0EFC               	movlw	-4
 12128  01718C  0060  F007  FFE3   	movff	btemp,plusw1
 12129  017192  6A01               	clrf	btemp^0,c
 12130  017194  0EFD               	movlw	-3
 12131  017196  50E3               	movf	plusw1,w,c
 12132  017198  2001               	addwfc	btemp^0,w,c
 12133  01719A  6E01               	movwf	btemp^0,c
 12134  01719C  0EFD               	movlw	-3
 12135  01719E                     L10:
 12136  01719E  0060  F007  FFE3   	movff	btemp,plusw1
 12137                           
 12138                           ;stkvar	_n @ sp[(-4)+-6]
 12139  0171A4  0EF6               	movlw	-10
 12140  0171A6  006F FF8C  F001    	movff	plusw1,btemp
 12141  0171AC  0EF7               	movlw	-9
 12142  0171AE  50E3               	movf	plusw1,w,c
 12143  0171B0  1001               	iorwf	btemp^0,w,c
 12144  0171B2  A4D8               	btfss	status,2,c
 12145  0171B4  D7C6               	goto	l12150
 12146  0171B6                     u10950:
 12147                           
 12148                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 12149  0171B6  0EF6               	movlw	246
 12150  0171B8  26E1               	addwf	fsr1l,f,c
 12151  0171BA  0EFF               	movlw	255
 12152  0171BC  22E2               	addwfc	fsr1h,f,c
 12153  0171BE  0012               	return		;funcret
 12154  0171C0                     __end_of_memset:
 12155                           	opt callstack 0
 12156                           
 12157 ;; *************** function _printf *****************
 12158 ;; Defined at:
 12159 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 12160 ;; Parameters:    Size  Location     Type
 12161 ;;  fmt             2  [STACK] PTR const unsigned char 
 12162 ;;		 -> STR_44(3), STR_43(3), 
 12163 ;; Auto vars:     Size  Location     Type
 12164 ;;  ap              2  [STACK] PTR void [1]
 12165 ;;		 -> ?_printf(2), ?_sprintf(2), 
 12166 ;;  ret             2    0        int 
 12167 ;; Return value:  Size  Location     Type
 12168 ;;                  2  [STACK] int 
 12169 ;; Registers used:
 12170 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12171 ;; Tracked objects:
 12172 ;;		On entry : 3F/3B
 12173 ;;		On exit  : 3F/0
 12174 ;;		Unchanged: 0/0
 12175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12180 ;;Total ram usage:        0 bytes
 12181 ;; Hardware stack levels used:    1
 12182 ;; Hardware stack levels required when called:   23
 12183 ;; This function calls:
 12184 ;;		_vfprintf
 12185 ;; This function is called by:
 12186 ;;		_eaDogM_WriteString
 12187 ;;		_send_lcd_data_dma
 12188 ;; This function uses a reentrant model
 12189 ;;
 12190                           
 12191                           	psect	text50
 12192  01B4B4                     __ptext50:
 12193                           	opt callstack 0
 12194  01B4B4                     _printf:
 12195                           	opt callstack 0
 12196                           
 12197                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12198  01B4B4  52E6               	movf	postinc1,f,c
 12199  01B4B6  52E6               	movf	postinc1,f,c
 12200                           
 12201                           ;stkvar	?_printf @ sp[(-2)+-3]
 12202                           
 12203                           ;incstack = 0
 12204  01B4B8  0EFB               	movlw	251
 12205  01B4BA  24E1               	addwf	fsr1l,w,c
 12206  01B4BC  6E0B               	movwf	(btemp+10)^0,c
 12207  01B4BE  0EFF               	movlw	255
 12208  01B4C0  20E2               	addwfc	fsr1h,w,c
 12209  01B4C2  6E0C               	movwf	(btemp+11)^0,c
 12210                           
 12211                           ;stkvar	_ap @ sp[(-2)+0]
 12212  01B4C4  0EFF               	movlw	-1
 12213  01B4C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 12214  01B4CC  0EFE               	movlw	-2
 12215  01B4CE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12216                           
 12217                           ;stkvar	_ap @ sp[(-2)+0]
 12218  01B4D4  0EFE               	movlw	254
 12219  01B4D6  24E1               	addwf	fsr1l,w,c
 12220  01B4D8  6E01               	movwf	btemp^0,c
 12221  01B4DA  0EFF               	movlw	255
 12222  01B4DC  20E2               	addwfc	fsr1h,w,c
 12223  01B4DE  6E02               	movwf	(btemp+1)^0,c
 12224  01B4E0  0060  F007  FFE6   	movff	btemp,postinc1
 12225  01B4E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12226                           
 12227                           ;stkvar	_fmt @ sp[(-4)+-3]
 12228  01B4EC  0EF9               	movlw	-7
 12229  01B4EE  006F FF8F FFE6     	movff	plusw1,postinc1
 12230  01B4F4  006F FF8F FFE6     	movff	plusw1,postinc1
 12231  01B4FA  0E00               	movlw	0
 12232  01B4FC  6EE6               	movwf	postinc1,c
 12233  01B4FE  0E00               	movlw	0
 12234  01B500  6EE6               	movwf	postinc1,c
 12235  01B502  EC1C  F0D5         	call	_vfprintf	;wreg free
 12236                           
 12237                           ; BSR set to: 0
 12238                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 12239  01B506  52E5               	movf	postdec1,f,c
 12240  01B508  52E5               	movf	postdec1,f,c
 12241  01B50A  52E5               	movf	postdec1,f,c
 12242  01B50C  50E7               	movf	indf1,w,c
 12243  01B50E  5EE1               	subwf	fsr1l,f,c
 12244  01B510  0E00               	movlw	0
 12245  01B512  5AE2               	subwfb	fsr1h,f,c
 12246  01B514  0012               	return		;funcret
 12247  01B516                     __end_of_printf:
 12248                           	opt callstack 0
 12249                           
 12250 ;; *************** function _vfprintf *****************
 12251 ;; Defined at:
 12252 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12253 ;; Parameters:    Size  Location     Type
 12254 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12255 ;;		 -> f(6), NULL(0), 
 12256 ;;  fmt             2  [STACK] PTR const unsigned char 
 12257 ;;		 -> STR_64(127), STR_62(3), STR_61(3), STR_60(19), 
 12258 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 12259 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 12260 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 12261 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 12262 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 12263 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 12264 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 12265 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 12266 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 12267 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 12268 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 12269 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 12270 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 12271 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 12272 ;;  ap              2  [STACK] PTR PTR void 
 12273 ;;		 -> ap(2), ap(2), 
 12274 ;; Auto vars:     Size  Location     Type
 12275 ;;  cfmt            2  [STACK] PTR unsigned char 
 12276 ;;		 -> STR_64(127), STR_62(3), STR_61(3), STR_60(19), 
 12277 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 12278 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 12279 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 12280 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 12281 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 12282 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 12283 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 12284 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 12285 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 12286 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 12287 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 12288 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 12289 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 12290 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 12291 ;; Return value:  Size  Location     Type
 12292 ;;                  2  [STACK] int 
 12293 ;; Registers used:
 12294 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12295 ;; Tracked objects:
 12296 ;;		On entry : 0/1
 12297 ;;		On exit  : 3F/0
 12298 ;;		Unchanged: 0/0
 12299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12304 ;;Total ram usage:        0 bytes
 12305 ;; Hardware stack levels used:    1
 12306 ;; Hardware stack levels required when called:   22
 12307 ;; This function calls:
 12308 ;;		_vfpfcnvrt
 12309 ;; This function is called by:
 12310 ;;		_sprintf
 12311 ;;		_printf
 12312 ;; This function uses a reentrant model
 12313 ;;
 12314                           
 12315                           	psect	text51
 12316  01AA38                     __ptext51:
 12317                           	opt callstack 0
 12318  01AA38                     _vfprintf:
 12319                           	opt callstack 0
 12320                           
 12321                           ; BSR set to: 0
 12322                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12323  01AA38  52E6               	movf	postinc1,f,c
 12324  01AA3A  52E6               	movf	postinc1,f,c
 12325                           
 12326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 12327                           ;stkvar	_fmt @ sp[(-2)+-4]
 12328                           
 12329                           ;incstack = 0
 12330 ;; hardware stack exceeded
 12331  01AA3C  0EFA               	movlw	-6
 12332  01AA3E  006F FF8C  F00B    	movff	plusw1,btemp+10
 12333  01AA44  0EFB               	movlw	-5
 12334  01AA46  006F FF8C  F00C    	movff	plusw1,btemp+11
 12335                           
 12336                           ;stkvar	_cfmt @ sp[(-2)+0]
 12337  01AA4C  0EFF               	movlw	-1
 12338  01AA4E  0060  F033  FFE3   	movff	btemp+11,plusw1
 12339  01AA54  0EFE               	movlw	-2
 12340  01AA56  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12341                           
 12342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 12343  01AA5C  0100               	movlb	0	; () banked
 12344  01AA5E  6B9A               	clrf	_nout& (0+255),b
 12345  01AA60  6B9B               	clrf	(_nout+1)& (0+255),b
 12346                           
 12347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 12348  01AA62  D021               	goto	l13000
 12349  01AA64                     l12998:
 12350                           
 12351                           ; BSR set to: 0
 12352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 12353                           ;stkvar	_ap @ sp[(-2)+-6]
 12354  01AA64  0EF8               	movlw	-8
 12355  01AA66  006F FF8F FFE6     	movff	plusw1,postinc1
 12356  01AA6C  006F FF8F FFE6     	movff	plusw1,postinc1
 12357                           
 12358                           ;stkvar	_cfmt @ sp[(-4)+0]
 12359  01AA72  0EFC               	movlw	252
 12360  01AA74  24E1               	addwf	fsr1l,w,c
 12361  01AA76  6E01               	movwf	btemp^0,c
 12362  01AA78  0EFF               	movlw	255
 12363  01AA7A  20E2               	addwfc	fsr1h,w,c
 12364  01AA7C  6E02               	movwf	(btemp+1)^0,c
 12365  01AA7E  0060  F007  FFE6   	movff	btemp,postinc1
 12366  01AA84  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12367                           
 12368                           ;stkvar	_fp @ sp[(-6)+-2]
 12369  01AA8A  0EF8               	movlw	-8
 12370  01AA8C  006F FF8F FFE6     	movff	plusw1,postinc1
 12371  01AA92  006F FF8F FFE6     	movff	plusw1,postinc1
 12372  01AA98  ECF4  F091         	call	_vfpfcnvrt	;wreg free
 12373  01AA9C  5001               	movf	btemp^0,w,c
 12374  01AA9E  0100               	movlb	0	; () banked
 12375  01AAA0  279A               	addwf	_nout& (0+255),f,b
 12376  01AAA2  5002               	movf	(btemp+1)^0,w,c
 12377  01AAA4  239B               	addwfc	(_nout+1)& (0+255),f,b
 12378  01AAA6                     l13000:
 12379                           
 12380                           ; BSR set to: 0
 12381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 12382                           ;stkvar	_cfmt @ sp[(-2)+0]
 12383  01AAA6  50E1               	movf	fsr1l,w,c
 12384  01AAA8  0FFE               	addlw	-2
 12385  01AAAA  6ED9               	movwf	fsr2l,c
 12386  01AAAC  50E2               	movf	fsr1h,w,c
 12387  01AAAE  6EDA               	movwf	fsr2h,c
 12388  01AAB0  0EFF               	movlw	255
 12389  01AAB2  22DA               	addwfc	fsr2h,f,c
 12390  01AAB4  006F FF7B FFF6     	movff	postinc2,tblptrl
 12391  01AABA  006F FF77 FFF7     	movff	postdec2,tblptrh
 12392  01AAC0                     	if	0	;tblptru may be non-zero
 12393  01AAC0                     	endif
 12394  01AAC0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12395  01AAC0  0E00               	movlw	low (__mediumconst shr (0+16))
 12396  01AAC2  6EF8               	movwf	tblptru,c
 12397  01AAC4                     	endif
 12398  01AAC4  0008               	tblrd		*
 12399  01AAC6  50F5               	movf	tablat,w,c
 12400  01AAC8  0900               	iorlw	0
 12401  01AACA  A4D8               	btfss	status,2,c
 12402  01AACC  D7CB               	goto	l12998
 12403                           
 12404                           ; BSR set to: 0
 12405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 12406  01AACE  0060  F268  F001   	movff	_nout,btemp
 12407  01AAD4  0060  F26C  F002   	movff	_nout+1,btemp+1
 12408                           
 12409                           ; BSR set to: 0
 12410                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 12411  01AADA  0EF8               	movlw	248
 12412  01AADC  26E1               	addwf	fsr1l,f,c
 12413  01AADE  0EFF               	movlw	255
 12414  01AAE0  22E2               	addwfc	fsr1h,f,c
 12415  01AAE2  0012               	return		;funcret
 12416  01AAE4                     __end_of_vfprintf:
 12417                           	opt callstack 0
 12418                           
 12419 ;; *************** function _vfpfcnvrt *****************
 12420 ;; Defined at:
 12421 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12422 ;; Parameters:    Size  Location     Type
 12423 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12424 ;;		 -> f(6), NULL(0), 
 12425 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 12426 ;;		 -> cfmt(2), 
 12427 ;;  ap              2  [STACK] PTR PTR void 
 12428 ;;		 -> ap(2), ap(2), 
 12429 ;; Auto vars:     Size  Location     Type
 12430 ;;  llu             8  [STACK] unsigned long long 
 12431 ;;  ll              8  [STACK] long long 
 12432 ;;  f               4  [STACK] long long 
 12433 ;;  ct              3  [STACK] unsigned char [3]
 12434 ;;  vp              3    0        PTR void 
 12435 ;;  cp              2  [STACK] PTR unsigned char 
 12436 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 12437 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 12438 ;;		 -> V(191), 
 12439 ;;  i               2    0        int 
 12440 ;;  done            2    0        int 
 12441 ;;  c               1  [STACK] unsigned char 
 12442 ;; Return value:  Size  Location     Type
 12443 ;;                  2  [STACK] int 
 12444 ;; Registers used:
 12445 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12446 ;; Tracked objects:
 12447 ;;		On entry : 0/0
 12448 ;;		On exit  : 0/0
 12449 ;;		Unchanged: 0/0
 12450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12455 ;;Total ram usage:        0 bytes
 12456 ;; Hardware stack levels used:    1
 12457 ;; Hardware stack levels required when called:   21
 12458 ;; This function calls:
 12459 ;;		_atoi
 12460 ;;		_ctoa
 12461 ;;		_dtoa
 12462 ;;		_efgtoa
 12463 ;;		_fputc
 12464 ;;		_isdigit
 12465 ;;		_isupper
 12466 ;;		_stoa
 12467 ;;		_strncmp
 12468 ;;		_tolower
 12469 ;;		_utoa
 12470 ;;		_xtoa
 12471 ;; This function is called by:
 12472 ;;		_vfprintf
 12473 ;; This function uses a reentrant model
 12474 ;;
 12475                           
 12476                           	psect	text52
 12477  0123E8                     __ptext52:
 12478                           	opt callstack 0
 12479  0123E8                     _vfpfcnvrt:
 12480                           	opt callstack 0
 12481                           
 12482                           ; BSR set to: 0
 12483                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12484  0123E8  0E20               	movlw	32
 12485  0123EA  26E1               	addwf	fsr1l,f,c
 12486  0123EC  0E00               	movlw	0
 12487  0123EE  22E2               	addwfc	fsr1h,f,c
 12488                           
 12489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 12490                           ;stkvar	_fmt @ sp[(-32)+-4]
 12491                           
 12492                           ;incstack = 0
 12493 ;; hardware stack exceeded
 12494  0123F0  0EDC               	movlw	-36
 12495  0123F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12496  0123F8  0EDD               	movlw	-35
 12497  0123FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12498  012400  006F FF7B FFF6     	movff	postinc2,tblptrl
 12499  012406  006F FF77 FFF7     	movff	postdec2,tblptrh
 12500  01240C                     	if	0	;tblptru may be non-zero
 12501  01240C                     	endif
 12502  01240C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12503  01240C  0E00               	movlw	low (__mediumconst shr (0+16))
 12504  01240E  6EF8               	movwf	tblptru,c
 12505  012410                     	endif
 12506  012410  0008               	tblrd		*
 12507  012412  50F5               	movf	tablat,w,c
 12508  012414  0A25               	xorlw	37
 12509  012416  A4D8               	btfss	status,2,c
 12510  012418  EF9B  F099         	goto	l12960
 12511                           
 12512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 12513                           ;stkvar	_fmt @ sp[(-32)+-4]
 12514  01241C  0EDC               	movlw	-36
 12515  01241E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12516  012424  0EDD               	movlw	-35
 12517  012426  006F FF8F FFDA     	movff	plusw1,fsr2h
 12518  01242C  2ADE               	incf	postinc2,f,c
 12519  01242E  0E00               	movlw	0
 12520  012430  22DD               	addwfc	postdec2,f,c
 12521                           
 12522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 12523  012432  6A3A               	clrf	_width^0,c
 12524  012434  6A3B               	clrf	(_width+1)^0,c
 12525  012436  6A3E               	clrf	_flags^0,c
 12526  012438  6A3F               	clrf	(_flags+1)^0,c
 12527                           
 12528                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 12529  01243A  683C               	setf	_prec^0,c
 12530  01243C  683D               	setf	(_prec+1)^0,c
 12531                           
 12532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 12533                           ;stkvar	_fmt @ sp[(-32)+-4]
 12534  01243E  0EDC               	movlw	-36
 12535  012440  006F FF8F FFD9     	movff	plusw1,fsr2l
 12536  012446  0EDD               	movlw	-35
 12537  012448  006F FF8F FFDA     	movff	plusw1,fsr2h
 12538  01244E  006F FF7B FFF6     	movff	postinc2,tblptrl
 12539  012454  006F FF77 FFF7     	movff	postdec2,tblptrh
 12540  01245A                     	if	0	;tblptru may be non-zero
 12541  01245A                     	endif
 12542  01245A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12543  01245A  0E00               	movlw	low (__mediumconst shr (0+16))
 12544  01245C  6EF8               	movwf	tblptru,c
 12545  01245E                     	endif
 12546  01245E  0008               	tblrd		*
 12547  012460  50F5               	movf	tablat,w,c
 12548  012462  0A2A               	xorlw	42
 12549  012464  A4D8               	btfss	status,2,c
 12550  012466  D031               	goto	l12778
 12551                           
 12552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 12553                           ;stkvar	_fmt @ sp[(-32)+-4]
 12554  012468  0EDC               	movlw	-36
 12555  01246A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12556  012470  0EDD               	movlw	-35
 12557  012472  006F FF8F FFDA     	movff	plusw1,fsr2h
 12558  012478  2ADE               	incf	postinc2,f,c
 12559  01247A  0E00               	movlw	0
 12560  01247C  22DD               	addwfc	postdec2,f,c
 12561                           
 12562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 12563                           ;stkvar	_ap @ sp[(-32)+-6]
 12564  01247E  0EDA               	movlw	-38
 12565  012480  006F FF8F FFD9     	movff	plusw1,fsr2l
 12566  012486  0EDB               	movlw	-37
 12567  012488  006F FF8F FFDA     	movff	plusw1,fsr2h
 12568  01248E  0E02               	movlw	2
 12569  012490  5EDE               	subwf	postinc2,f,c
 12570  012492  0E00               	movlw	0
 12571  012494  5ADD               	subwfb	postdec2,f,c
 12572  012496  006F FF78  F00B    	movff	postinc2,btemp+10
 12573  01249C  006F FF74  F00C    	movff	postdec2,btemp+11
 12574  0124A2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12575  0124A8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12576  0124AE  006F FF78  F03A    	movff	postinc2,_width
 12577  0124B4  006F FF74  F03B    	movff	postdec2,_width+1
 12578                           
 12579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 12580  0124BA  AE3B               	btfss	(_width+1)^0,7,c
 12581  0124BC  D066               	goto	u12140
 12582                           
 12583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 12584  0124BE  803E               	bsf	_flags^0,0,c
 12585                           
 12586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 12587  0124C0  6C3A               	negf	_width^0,c
 12588  0124C2  1E3B               	comf	(_width+1)^0,f,c
 12589  0124C4  B0D8               	btfsc	status,0,c
 12590  0124C6  2A3B               	incf	(_width+1)^0,f,c
 12591  0124C8  D060               	goto	u12140
 12592  0124CA                     l12778:
 12593                           
 12594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 12595                           ;stkvar	_fmt @ sp[(-32)+-4]
 12596  0124CA  0EDC               	movlw	-36
 12597  0124CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12598  0124D2  0EDD               	movlw	-35
 12599  0124D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 12600  0124DA  006F FF78  F00B    	movff	postinc2,btemp+10
 12601  0124E0  006F FF74  F00C    	movff	postdec2,btemp+11
 12602  0124E6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12603  0124EC  0060  F033  FFE6   	movff	btemp+11,postinc1
 12604  0124F2  ECEB  F0BC         	call	_atoi	;wreg free
 12605  0124F6  0060  F004  F03A   	movff	btemp,_width
 12606  0124FC  0060  F008  F03B   	movff	btemp+1,_width+1
 12607                           
 12608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 12609  012502  D00B               	goto	l12782
 12610  012504                     l12780:
 12611                           
 12612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 12613                           ;stkvar	_fmt @ sp[(-32)+-4]
 12614  012504  0EDC               	movlw	-36
 12615  012506  006F FF8F FFD9     	movff	plusw1,fsr2l
 12616  01250C  0EDD               	movlw	-35
 12617  01250E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12618  012514  2ADE               	incf	postinc2,f,c
 12619  012516  0E00               	movlw	0
 12620  012518  22DD               	addwfc	postdec2,f,c
 12621  01251A                     l12782:
 12622  01251A  0ED0               	movlw	208
 12623  01251C  6E0B               	movwf	(btemp+10)^0,c
 12624  01251E  0EFF               	movlw	255
 12625  012520  6E0C               	movwf	(btemp+11)^0,c
 12626                           
 12627                           ;stkvar	_fmt @ sp[(-32)+-4]
 12628  012522  0EDC               	movlw	-36
 12629  012524  006F FF8F FFD9     	movff	plusw1,fsr2l
 12630  01252A  0EDD               	movlw	-35
 12631  01252C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12632  012532  006F FF7B FFF6     	movff	postinc2,tblptrl
 12633  012538  006F FF77 FFF7     	movff	postdec2,tblptrh
 12634  01253E                     	if	0	;tblptru may be non-zero
 12635  01253E                     	endif
 12636  01253E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12637  01253E  0E00               	movlw	low (__mediumconst shr (0+16))
 12638  012540  6EF8               	movwf	tblptru,c
 12639  012542                     	endif
 12640  012542  0008               	tblrd		*
 12641  012544  50F5               	movf	tablat,w,c
 12642  012546  6E09               	movwf	(btemp+8)^0,c
 12643  012548  6A0A               	clrf	(btemp+9)^0,c
 12644  01254A  500B               	movf	(btemp+10)^0,w,c
 12645  01254C  2609               	addwf	(btemp+8)^0,f,c
 12646  01254E  500C               	movf	(btemp+11)^0,w,c
 12647  012550  220A               	addwfc	(btemp+9)^0,f,c
 12648  012552  500A               	movf	(btemp+9)^0,w,c
 12649  012554  E106               	bnz	u12120
 12650  012556  0E0A               	movlw	10
 12651  012558  5C09               	subwf	(btemp+8)^0,w,c
 12652  01255A  B0D8               	btfsc	status,0,c
 12653  01255C  D002               	goto	u12120
 12654  01255E  0E01               	movlw	1
 12655  012560  D001               	goto	u12130
 12656  012562                     u12120:
 12657  012562  0E00               	movlw	0
 12658  012564                     u12130:
 12659  012564  6E0B               	movwf	(btemp+10)^0,c
 12660  012566  6A0C               	clrf	(btemp+11)^0,c
 12661                           
 12662                           ;stkvar	_vfpfcnvrt$5807 @ sp[(-32)+4]
 12663  012568  0EE4               	movlw	-28
 12664  01256A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12665  012570  0EE5               	movlw	-27
 12666  012572  0060  F033  FFE3   	movff	btemp+11,plusw1
 12667                           
 12668                           ;stkvar	_vfpfcnvrt$5807 @ sp[(-32)+4]
 12669  012578  0EE4               	movlw	-28
 12670  01257A  006F FF8C  F001    	movff	plusw1,btemp
 12671  012580  0EE5               	movlw	-27
 12672  012582  50E3               	movf	plusw1,w,c
 12673  012584  1001               	iorwf	btemp^0,w,c
 12674  012586  A4D8               	btfss	status,2,c
 12675  012588  D7BD               	goto	l12780
 12676  01258A                     u12140:
 12677                           
 12678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 12679                           ;stkvar	_fmt @ sp[(-32)+-4]
 12680  01258A  0EDC               	movlw	-36
 12681  01258C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12682  012592  0EDD               	movlw	-35
 12683  012594  006F FF8F FFDA     	movff	plusw1,fsr2h
 12684  01259A  006F FF7B FFF6     	movff	postinc2,tblptrl
 12685  0125A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 12686  0125A6                     	if	0	;tblptru may be non-zero
 12687  0125A6                     	endif
 12688  0125A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12689  0125A6  0E00               	movlw	low (__mediumconst shr (0+16))
 12690  0125A8  6EF8               	movwf	tblptru,c
 12691  0125AA                     	endif
 12692  0125AA  0008               	tblrd		*
 12693  0125AC  50F5               	movf	tablat,w,c
 12694  0125AE  0A2E               	xorlw	46
 12695  0125B0  A4D8               	btfss	status,2,c
 12696  0125B2  D0AC               	goto	u12190
 12697                           
 12698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 12699  0125B4  6A3C               	clrf	_prec^0,c
 12700  0125B6  6A3D               	clrf	(_prec+1)^0,c
 12701                           
 12702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 12703                           ;stkvar	_fmt @ sp[(-32)+-4]
 12704  0125B8  0EDC               	movlw	-36
 12705  0125BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12706  0125C0  0EDD               	movlw	-35
 12707  0125C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12708  0125C8  2ADE               	incf	postinc2,f,c
 12709  0125CA  0E00               	movlw	0
 12710  0125CC  22DD               	addwfc	postdec2,f,c
 12711                           
 12712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 12713                           ;stkvar	_fmt @ sp[(-32)+-4]
 12714  0125CE  0EDC               	movlw	-36
 12715  0125D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12716  0125D6  0EDD               	movlw	-35
 12717  0125D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12718  0125DE  006F FF7B FFF6     	movff	postinc2,tblptrl
 12719  0125E4  006F FF77 FFF7     	movff	postdec2,tblptrh
 12720  0125EA                     	if	0	;tblptru may be non-zero
 12721  0125EA                     	endif
 12722  0125EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12723  0125EA  0E00               	movlw	low (__mediumconst shr (0+16))
 12724  0125EC  6EF8               	movwf	tblptru,c
 12725  0125EE                     	endif
 12726  0125EE  0008               	tblrd		*
 12727  0125F0  50F5               	movf	tablat,w,c
 12728  0125F2  0A2A               	xorlw	42
 12729  0125F4  A4D8               	btfss	status,2,c
 12730  0125F6  D02A               	goto	l12800
 12731                           
 12732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 12733                           ;stkvar	_fmt @ sp[(-32)+-4]
 12734  0125F8  0EDC               	movlw	-36
 12735  0125FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12736  012600  0EDD               	movlw	-35
 12737  012602  006F FF8F FFDA     	movff	plusw1,fsr2h
 12738  012608  2ADE               	incf	postinc2,f,c
 12739  01260A  0E00               	movlw	0
 12740  01260C  22DD               	addwfc	postdec2,f,c
 12741                           
 12742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 12743                           ;stkvar	_ap @ sp[(-32)+-6]
 12744  01260E  0EDA               	movlw	-38
 12745  012610  006F FF8F FFD9     	movff	plusw1,fsr2l
 12746  012616  0EDB               	movlw	-37
 12747  012618  006F FF8F FFDA     	movff	plusw1,fsr2h
 12748  01261E  0E02               	movlw	2
 12749  012620  5EDE               	subwf	postinc2,f,c
 12750  012622  0E00               	movlw	0
 12751  012624  5ADD               	subwfb	postdec2,f,c
 12752  012626  006F FF78  F00B    	movff	postinc2,btemp+10
 12753  01262C  006F FF74  F00C    	movff	postdec2,btemp+11
 12754  012632  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12755  012638  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12756  01263E  006F FF78  F03C    	movff	postinc2,_prec
 12757  012644  006F FF74  F03D    	movff	postdec2,_prec+1
 12758                           
 12759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 12760  01264A  D060               	goto	u12190
 12761  01264C                     l12800:
 12762                           
 12763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 12764                           ;stkvar	_fmt @ sp[(-32)+-4]
 12765  01264C  0EDC               	movlw	-36
 12766  01264E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12767  012654  0EDD               	movlw	-35
 12768  012656  006F FF8F FFDA     	movff	plusw1,fsr2h
 12769  01265C  006F FF78  F00B    	movff	postinc2,btemp+10
 12770  012662  006F FF74  F00C    	movff	postdec2,btemp+11
 12771  012668  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12772  01266E  0060  F033  FFE6   	movff	btemp+11,postinc1
 12773  012674  ECEB  F0BC         	call	_atoi	;wreg free
 12774  012678  0060  F004  F03C   	movff	btemp,_prec
 12775  01267E  0060  F008  F03D   	movff	btemp+1,_prec+1
 12776                           
 12777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 12778  012684  D00B               	goto	l12804
 12779  012686                     l12802:
 12780                           
 12781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 12782                           ;stkvar	_fmt @ sp[(-32)+-4]
 12783  012686  0EDC               	movlw	-36
 12784  012688  006F FF8F FFD9     	movff	plusw1,fsr2l
 12785  01268E  0EDD               	movlw	-35
 12786  012690  006F FF8F FFDA     	movff	plusw1,fsr2h
 12787  012696  2ADE               	incf	postinc2,f,c
 12788  012698  0E00               	movlw	0
 12789  01269A  22DD               	addwfc	postdec2,f,c
 12790  01269C                     l12804:
 12791  01269C  0ED0               	movlw	208
 12792  01269E  6E0B               	movwf	(btemp+10)^0,c
 12793  0126A0  0EFF               	movlw	255
 12794  0126A2  6E0C               	movwf	(btemp+11)^0,c
 12795                           
 12796                           ;stkvar	_fmt @ sp[(-32)+-4]
 12797  0126A4  0EDC               	movlw	-36
 12798  0126A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12799  0126AC  0EDD               	movlw	-35
 12800  0126AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12801  0126B4  006F FF7B FFF6     	movff	postinc2,tblptrl
 12802  0126BA  006F FF77 FFF7     	movff	postdec2,tblptrh
 12803  0126C0                     	if	0	;tblptru may be non-zero
 12804  0126C0                     	endif
 12805  0126C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12806  0126C0  0E00               	movlw	low (__mediumconst shr (0+16))
 12807  0126C2  6EF8               	movwf	tblptru,c
 12808  0126C4                     	endif
 12809  0126C4  0008               	tblrd		*
 12810  0126C6  50F5               	movf	tablat,w,c
 12811  0126C8  6E09               	movwf	(btemp+8)^0,c
 12812  0126CA  6A0A               	clrf	(btemp+9)^0,c
 12813  0126CC  500B               	movf	(btemp+10)^0,w,c
 12814  0126CE  2609               	addwf	(btemp+8)^0,f,c
 12815  0126D0  500C               	movf	(btemp+11)^0,w,c
 12816  0126D2  220A               	addwfc	(btemp+9)^0,f,c
 12817  0126D4  500A               	movf	(btemp+9)^0,w,c
 12818  0126D6  E106               	bnz	u12170
 12819  0126D8  0E0A               	movlw	10
 12820  0126DA  5C09               	subwf	(btemp+8)^0,w,c
 12821  0126DC  B0D8               	btfsc	status,0,c
 12822  0126DE  D002               	goto	u12170
 12823  0126E0  0E01               	movlw	1
 12824  0126E2  D001               	goto	u12180
 12825  0126E4                     u12170:
 12826  0126E4  0E00               	movlw	0
 12827  0126E6                     u12180:
 12828  0126E6  6E0B               	movwf	(btemp+10)^0,c
 12829  0126E8  6A0C               	clrf	(btemp+11)^0,c
 12830                           
 12831                           ;stkvar	_vfpfcnvrt$5808 @ sp[(-32)+0]
 12832  0126EA  0EE0               	movlw	-32
 12833  0126EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12834  0126F2  0EE1               	movlw	-31
 12835  0126F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 12836                           
 12837                           ;stkvar	_vfpfcnvrt$5808 @ sp[(-32)+0]
 12838  0126FA  0EE0               	movlw	-32
 12839  0126FC  006F FF8C  F001    	movff	plusw1,btemp
 12840  012702  0EE1               	movlw	-31
 12841  012704  50E3               	movf	plusw1,w,c
 12842  012706  1001               	iorwf	btemp^0,w,c
 12843  012708  A4D8               	btfss	status,2,c
 12844  01270A  D7BD               	goto	l12802
 12845  01270C                     u12190:
 12846                           
 12847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 12848                           ;stkvar	_fmt @ sp[(-32)+-4]
 12849  01270C  0EDC               	movlw	-36
 12850  01270E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12851  012714  0EDD               	movlw	-35
 12852  012716  006F FF8F FFDA     	movff	plusw1,fsr2h
 12853  01271C  006F FF7B FFF6     	movff	postinc2,tblptrl
 12854  012722  006F FF77 FFF7     	movff	postdec2,tblptrh
 12855  012728                     	if	0	;tblptru may be non-zero
 12856  012728                     	endif
 12857  012728                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12858  012728  0E00               	movlw	low (__mediumconst shr (0+16))
 12859  01272A  6EF8               	movwf	tblptru,c
 12860  01272C                     	endif
 12861  01272C  0008               	tblrd		*
 12862  01272E  50F5               	movf	tablat,w,c
 12863  012730  6EE6               	movwf	postinc1,c
 12864  012732  0E00               	movlw	0
 12865  012734  6EE6               	movwf	postinc1,c
 12866  012736  EC23  F0D8         	call	_tolower	;wreg free
 12867                           
 12868                           ;stkvar	_ct @ sp[(-32)+26]
 12869  01273A  0EFA               	movlw	-6
 12870  01273C  0060  F007  FFE3   	movff	btemp,plusw1
 12871                           
 12872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 12873                           ;stkvar	_ct @ sp[(-32)+26]
 12874  012742  0EFA               	movlw	-6
 12875  012744  50E3               	movf	plusw1,w,c
 12876  012746  B4D8               	btfsc	status,2,c
 12877  012748  D05B               	goto	l12820
 12878                           
 12879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 12880                           ;stkvar	_ct @ sp[(-32)+26]
 12881  01274A  0EFB               	movlw	251
 12882  01274C  24E1               	addwf	fsr1l,w,c
 12883  01274E  6ED9               	movwf	fsr2l,c
 12884  012750  0EFF               	movlw	255
 12885  012752  20E2               	addwfc	fsr1h,w,c
 12886  012754  6EDA               	movwf	fsr2h,c
 12887                           
 12888                           ;stkvar	_fmt @ sp[(-32)+-4]
 12889  012756  0EDC               	movlw	-36
 12890  012758  006F FF8F FFE9     	movff	plusw1,fsr0l
 12891  01275E  0EDD               	movlw	-35
 12892  012760  006F FF8F FFEA     	movff	plusw1,fsr0h
 12893  012766  006F FFB8  F00B    	movff	postinc0,btemp+10
 12894  01276C  006F FFB4  F00C    	movff	postdec0,btemp+11
 12895  012772  0E01               	movlw	1
 12896  012774  260B               	addwf	(btemp+10)^0,f,c
 12897  012776  0E00               	movlw	0
 12898  012778  220C               	addwfc	(btemp+11)^0,f,c
 12899  01277A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12900  012780  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12901  012786                     	if	0	;tblptru may be non-zero
 12902  012786                     	endif
 12903  012786                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12904  012786  0E00               	movlw	low (__mediumconst shr (0+16))
 12905  012788  6EF8               	movwf	tblptru,c
 12906  01278A                     	endif
 12907  01278A  0008               	tblrd		*
 12908  01278C  50F5               	movf	tablat,w,c
 12909  01278E  6EE6               	movwf	postinc1,c
 12910  012790  0E00               	movlw	0
 12911  012792  6EE6               	movwf	postinc1,c
 12912  012794  EC23  F0D8         	call	_tolower	;wreg free
 12913  012798  5001               	movf	btemp^0,w,c
 12914  01279A  6EDF               	movwf	indf2,c
 12915                           
 12916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 12917                           ;stkvar	_ct @ sp[(-32)+26]
 12918  01279C  0EFB               	movlw	251
 12919  01279E  24E1               	addwf	fsr1l,w,c
 12920  0127A0  6ED9               	movwf	fsr2l,c
 12921  0127A2  0EFF               	movlw	255
 12922  0127A4  20E2               	addwfc	fsr1h,w,c
 12923  0127A6  6EDA               	movwf	fsr2h,c
 12924  0127A8  50DF               	movf	indf2,w,c
 12925  0127AA  B4D8               	btfsc	status,2,c
 12926  0127AC  D029               	goto	l12820
 12927                           
 12928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 12929                           ;stkvar	_ct @ sp[(-32)+26]
 12930  0127AE  0EFC               	movlw	252
 12931  0127B0  24E1               	addwf	fsr1l,w,c
 12932  0127B2  6ED9               	movwf	fsr2l,c
 12933  0127B4  0EFF               	movlw	255
 12934  0127B6  20E2               	addwfc	fsr1h,w,c
 12935  0127B8  6EDA               	movwf	fsr2h,c
 12936                           
 12937                           ;stkvar	_fmt @ sp[(-32)+-4]
 12938  0127BA  0EDC               	movlw	-36
 12939  0127BC  006F FF8F FFE9     	movff	plusw1,fsr0l
 12940  0127C2  0EDD               	movlw	-35
 12941  0127C4  006F FF8F FFEA     	movff	plusw1,fsr0h
 12942  0127CA  006F FFB8  F00B    	movff	postinc0,btemp+10
 12943  0127D0  006F FFB4  F00C    	movff	postdec0,btemp+11
 12944  0127D6  0E02               	movlw	2
 12945  0127D8  260B               	addwf	(btemp+10)^0,f,c
 12946  0127DA  0E00               	movlw	0
 12947  0127DC  220C               	addwfc	(btemp+11)^0,f,c
 12948  0127DE  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12949  0127E4  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12950  0127EA                     	if	0	;tblptru may be non-zero
 12951  0127EA                     	endif
 12952  0127EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12953  0127EA  0E00               	movlw	low (__mediumconst shr (0+16))
 12954  0127EC  6EF8               	movwf	tblptru,c
 12955  0127EE                     	endif
 12956  0127EE  0008               	tblrd		*
 12957  0127F0  50F5               	movf	tablat,w,c
 12958  0127F2  6EE6               	movwf	postinc1,c
 12959  0127F4  0E00               	movlw	0
 12960  0127F6  6EE6               	movwf	postinc1,c
 12961  0127F8  EC23  F0D8         	call	_tolower	;wreg free
 12962  0127FC  5001               	movf	btemp^0,w,c
 12963  0127FE  6EDF               	movwf	indf2,c
 12964  012800                     l12820:
 12965                           
 12966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 12967                           ;stkvar	_fmt @ sp[(-32)+-4]
 12968  012800  0EDC               	movlw	-36
 12969  012802  006F FF8F FFD9     	movff	plusw1,fsr2l
 12970  012808  0EDD               	movlw	-35
 12971  01280A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12972  012810  006F FF7B FFF6     	movff	postinc2,tblptrl
 12973  012816  006F FF77 FFF7     	movff	postdec2,tblptrh
 12974  01281C                     	if	0	;tblptru may be non-zero
 12975  01281C                     	endif
 12976  01281C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12977  01281C  0E00               	movlw	low (__mediumconst shr (0+16))
 12978  01281E  6EF8               	movwf	tblptru,c
 12979  012820                     	endif
 12980  012820  0008               	tblrd		*
 12981  012822  50F5               	movf	tablat,w,c
 12982  012824  0A63               	xorlw	99
 12983  012826  A4D8               	btfss	status,2,c
 12984  012828  D037               	goto	l12830
 12985                           
 12986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 12987                           ;stkvar	_fmt @ sp[(-32)+-4]
 12988  01282A  0EDC               	movlw	-36
 12989  01282C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12990  012832  0EDD               	movlw	-35
 12991  012834  006F FF8F FFDA     	movff	plusw1,fsr2h
 12992  01283A  2ADE               	incf	postinc2,f,c
 12993  01283C  0E00               	movlw	0
 12994  01283E  22DD               	addwfc	postdec2,f,c
 12995                           
 12996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 12997                           ;stkvar	_ap @ sp[(-32)+-6]
 12998  012840  0EDA               	movlw	-38
 12999  012842  006F FF8F FFD9     	movff	plusw1,fsr2l
 13000  012848  0EDB               	movlw	-37
 13001  01284A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13002  012850  0E02               	movlw	2
 13003  012852  5EDE               	subwf	postinc2,f,c
 13004  012854  0E00               	movlw	0
 13005  012856  5ADD               	subwfb	postdec2,f,c
 13006  012858  006F FF78  F00B    	movff	postinc2,btemp+10
 13007  01285E  006F FF74  F00C    	movff	postdec2,btemp+11
 13008  012864  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13009  01286A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13010  012870  50DF               	movf	indf2,w,c
 13011  012872  6E0C               	movwf	(btemp+11)^0,c
 13012                           
 13013                           ;stkvar	_c @ sp[(-32)+31]
 13014  012874  0EFF               	movlw	-1
 13015  012876  0060  F033  FFE3   	movff	btemp+11,plusw1
 13016                           
 13017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 13018                           ;stkvar	_c @ sp[(-32)+31]
 13019  01287C  0EFF               	movlw	-1
 13020  01287E  50E3               	movf	plusw1,w,c
 13021  012880  6EE6               	movwf	postinc1,c
 13022                           
 13023                           ;stkvar	_fp @ sp[(-33)+-2]
 13024  012882  0EDD               	movlw	-35
 13025  012884  006F FF8F FFE6     	movff	plusw1,postinc1
 13026  01288A  006F FF8F FFE6     	movff	plusw1,postinc1
 13027  012890  EC9D  F0D7         	call	_ctoa	;wreg free
 13028  012894  EFC5  F099         	goto	l2448
 13029  012898                     l12830:
 13030                           
 13031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 13032                           ;stkvar	_fmt @ sp[(-32)+-4]
 13033  012898  0EDC               	movlw	-36
 13034  01289A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13035  0128A0  0EDD               	movlw	-35
 13036  0128A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13037  0128A8  006F FF7B FFF6     	movff	postinc2,tblptrl
 13038  0128AE  006F FF77 FFF7     	movff	postdec2,tblptrh
 13039  0128B4                     	if	0	;tblptru may be non-zero
 13040  0128B4                     	endif
 13041  0128B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13042  0128B4  0E00               	movlw	low (__mediumconst shr (0+16))
 13043  0128B6  6EF8               	movwf	tblptru,c
 13044  0128B8                     	endif
 13045  0128B8  0008               	tblrd		*
 13046  0128BA  50F5               	movf	tablat,w,c
 13047  0128BC  0A64               	xorlw	100
 13048  0128BE  B4D8               	btfsc	status,2,c
 13049  0128C0  D015               	goto	u12240
 13050                           
 13051                           ;stkvar	_fmt @ sp[(-32)+-4]
 13052  0128C2  0EDC               	movlw	-36
 13053  0128C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 13054  0128CA  0EDD               	movlw	-35
 13055  0128CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 13056  0128D2  006F FF7B FFF6     	movff	postinc2,tblptrl
 13057  0128D8  006F FF77 FFF7     	movff	postdec2,tblptrh
 13058  0128DE                     	if	0	;tblptru may be non-zero
 13059  0128DE                     	endif
 13060  0128DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13061  0128DE  0E00               	movlw	low (__mediumconst shr (0+16))
 13062  0128E0  6EF8               	movwf	tblptru,c
 13063  0128E2                     	endif
 13064  0128E2  0008               	tblrd		*
 13065  0128E4  50F5               	movf	tablat,w,c
 13066  0128E6  0A69               	xorlw	105
 13067  0128E8  A4D8               	btfss	status,2,c
 13068  0128EA  D076               	goto	l12842
 13069  0128EC                     u12240:
 13070                           
 13071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 13072                           ;stkvar	_fmt @ sp[(-32)+-4]
 13073  0128EC  0EDC               	movlw	-36
 13074  0128EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13075  0128F4  0EDD               	movlw	-35
 13076  0128F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13077  0128FC  2ADE               	incf	postinc2,f,c
 13078  0128FE  0E00               	movlw	0
 13079  012900  22DD               	addwfc	postdec2,f,c
 13080                           
 13081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 13082                           ;stkvar	_ap @ sp[(-32)+-6]
 13083  012902  0EDA               	movlw	-38
 13084  012904  006F FF8F FFD9     	movff	plusw1,fsr2l
 13085  01290A  0EDB               	movlw	-37
 13086  01290C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13087  012912  0E02               	movlw	2
 13088  012914  5EDE               	subwf	postinc2,f,c
 13089  012916  0E00               	movlw	0
 13090  012918  5ADD               	subwfb	postdec2,f,c
 13091  01291A  006F FF78  F00B    	movff	postinc2,btemp+10
 13092  012920  006F FF74  F00C    	movff	postdec2,btemp+11
 13093  012926  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13094  01292C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13095  012932  006F FF78  F00B    	movff	postinc2,btemp+10
 13096  012938  006F FF74  F00C    	movff	postdec2,btemp+11
 13097                           
 13098                           ;stkvar	_ll @ sp[(-32)+14]
 13099  01293E  0EEE               	movlw	-18
 13100  012940  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13101  012946  0EEF               	movlw	-17
 13102  012948  0060  F033  FFE3   	movff	btemp+11,plusw1
 13103  01294E  6A01               	clrf	btemp^0,c
 13104  012950  BEE3               	btfsc	plusw1,7,c
 13105  012952  6801               	setf	btemp^0,c
 13106  012954  0EF0               	movlw	-16
 13107  012956  0060  F007  FFE3   	movff	btemp,plusw1
 13108  01295C  0EF1               	movlw	-15
 13109  01295E  0060  F007  FFE3   	movff	btemp,plusw1
 13110  012964  0EF2               	movlw	-14
 13111  012966  0060  F007  FFE3   	movff	btemp,plusw1
 13112  01296C  0EF3               	movlw	-13
 13113  01296E  0060  F007  FFE3   	movff	btemp,plusw1
 13114  012974  0EF4               	movlw	-12
 13115  012976  0060  F007  FFE3   	movff	btemp,plusw1
 13116  01297C  0EF5               	movlw	-11
 13117  01297E  0060  F007  FFE3   	movff	btemp,plusw1
 13118  012984                     l12838:
 13119                           
 13120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 13121                           ;stkvar	_ll @ sp[(-32)+14]
 13122  012984  50E1               	movf	fsr1l,w,c
 13123  012986  0FEE               	addlw	-18
 13124  012988  6ED9               	movwf	fsr2l,c
 13125  01298A  50E2               	movf	fsr1h,w,c
 13126  01298C  6EDA               	movwf	fsr2h,c
 13127  01298E  0EFF               	movlw	255
 13128  012990  22DA               	addwfc	fsr2h,f,c
 13129  012992  006F FF7B FFE6     	movff	postinc2,postinc1
 13130  012998  006F FF7B FFE6     	movff	postinc2,postinc1
 13131  01299E  006F FF7B FFE6     	movff	postinc2,postinc1
 13132  0129A4  006F FF7B FFE6     	movff	postinc2,postinc1
 13133  0129AA  006F FF7B FFE6     	movff	postinc2,postinc1
 13134  0129B0  006F FF7B FFE6     	movff	postinc2,postinc1
 13135  0129B6  006F FF7B FFE6     	movff	postinc2,postinc1
 13136  0129BC  006F FF7B FFE6     	movff	postinc2,postinc1
 13137                           
 13138                           ;stkvar	_fp @ sp[(-40)+-2]
 13139  0129C2  0ED6               	movlw	-42
 13140  0129C4  006F FF8F FFE6     	movff	plusw1,postinc1
 13141  0129CA  006F FF8F FFE6     	movff	plusw1,postinc1
 13142  0129D0  EC3B  F0AC         	call	_dtoa	;wreg free
 13143  0129D4  EFC5  F099         	goto	l2448
 13144  0129D8                     l12842:
 13145                           
 13146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 13147  0129D8  0E02               	movlw	2
 13148  0129DA  6EE6               	movwf	postinc1,c
 13149  0129DC  0E00               	movlw	0
 13150  0129DE  6EE6               	movwf	postinc1,c
 13151  0129E0  0EEA               	movlw	low STR_73
 13152  0129E2  6EE6               	movwf	postinc1,c
 13153  0129E4  0EFF               	movlw	high STR_73
 13154  0129E6  6EE6               	movwf	postinc1,c
 13155                           
 13156                           ;stkvar	_fmt @ sp[(-36)+-4]
 13157  0129E8  0ED8               	movlw	-40
 13158  0129EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13159  0129F0  0ED9               	movlw	-39
 13160  0129F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13161  0129F8  006F FF78  F00B    	movff	postinc2,btemp+10
 13162  0129FE  006F FF74  F00C    	movff	postdec2,btemp+11
 13163  012A04  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13164  012A0A  0060  F033  FFE6   	movff	btemp+11,postinc1
 13165  012A10  EC68  F0C0         	call	_strncmp	;wreg free
 13166  012A14  5001               	movf	btemp^0,w,c
 13167  012A16  1002               	iorwf	(btemp+1)^0,w,c
 13168  012A18  B4D8               	btfsc	status,2,c
 13169  012A1A  D022               	goto	u12260
 13170  012A1C  0E02               	movlw	2
 13171  012A1E  6EE6               	movwf	postinc1,c
 13172  012A20  0E00               	movlw	0
 13173  012A22  6EE6               	movwf	postinc1,c
 13174  012A24  0EF0               	movlw	low STR_77
 13175  012A26  6EE6               	movwf	postinc1,c
 13176  012A28  0EFF               	movlw	high STR_77
 13177  012A2A  6EE6               	movwf	postinc1,c
 13178                           
 13179                           ;stkvar	_fmt @ sp[(-36)+-4]
 13180  012A2C  0ED8               	movlw	-40
 13181  012A2E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13182  012A34  0ED9               	movlw	-39
 13183  012A36  006F FF8F FFDA     	movff	plusw1,fsr2h
 13184  012A3C  006F FF78  F00B    	movff	postinc2,btemp+10
 13185  012A42  006F FF74  F00C    	movff	postdec2,btemp+11
 13186  012A48  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13187  012A4E  0060  F033  FFE6   	movff	btemp+11,postinc1
 13188  012A54  EC68  F0C0         	call	_strncmp	;wreg free
 13189  012A58  5001               	movf	btemp^0,w,c
 13190  012A5A  1002               	iorwf	(btemp+1)^0,w,c
 13191  012A5C  A4D8               	btfss	status,2,c
 13192  012A5E  D069               	goto	l12854
 13193  012A60                     u12260:
 13194                           
 13195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 13196                           ;stkvar	_fmt @ sp[(-32)+-4]
 13197  012A60  0EDC               	movlw	-36
 13198  012A62  006F FF8F FFD9     	movff	plusw1,fsr2l
 13199  012A68  0EDD               	movlw	-35
 13200  012A6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13201  012A70  0E02               	movlw	2
 13202  012A72  26DE               	addwf	postinc2,f,c
 13203  012A74  0E00               	movlw	0
 13204  012A76  22DD               	addwfc	postdec2,f,c
 13205                           
 13206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 13207                           ;stkvar	_ap @ sp[(-32)+-6]
 13208  012A78  0EDA               	movlw	-38
 13209  012A7A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13210  012A80  0EDB               	movlw	-37
 13211  012A82  006F FF8F FFDA     	movff	plusw1,fsr2h
 13212  012A88  0E04               	movlw	4
 13213  012A8A  5EDE               	subwf	postinc2,f,c
 13214  012A8C  0E00               	movlw	0
 13215  012A8E  5ADD               	subwfb	postdec2,f,c
 13216  012A90  006F FF78  F00B    	movff	postinc2,btemp+10
 13217  012A96  006F FF74  F00C    	movff	postdec2,btemp+11
 13218  012A9C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13219  012AA2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13220  012AA8  006F FF78  F009    	movff	postinc2,btemp+8
 13221  012AAE  006F FF78  F00A    	movff	postinc2,btemp+9
 13222  012AB4  006F FF78  F00B    	movff	postinc2,btemp+10
 13223  012ABA  006F FF78  F00C    	movff	postinc2,btemp+11
 13224  012AC0  0060  F024  F011   	movff	btemp+8,btemp+16
 13225  012AC6  0060  F028  F012   	movff	btemp+9,btemp+17
 13226  012ACC  0060  F02C  F013   	movff	btemp+10,btemp+18
 13227  012AD2  0060  F030  F014   	movff	btemp+11,btemp+19
 13228  012AD8  6A15               	clrf	(btemp+20)^0,c
 13229  012ADA  BE14               	btfsc	(btemp+19)^0,7,c
 13230  012ADC  6815               	setf	(btemp+20)^0,c
 13231  012ADE  0060  F054  F016   	movff	btemp+20,btemp+21
 13232  012AE4  0060  F054  F017   	movff	btemp+20,btemp+22
 13233  012AEA  0060  F054  F018   	movff	btemp+20,btemp+23
 13234                           
 13235                           ;stkvar	_ll @ sp[(-32)+14]
 13236  012AF0  0EEE               	movlw	-18
 13237  012AF2  0060  F047  FFE3   	movff	btemp+16,plusw1
 13238  012AF8  0EEF               	movlw	-17
 13239  012AFA  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13240  012B00  0EF0               	movlw	-16
 13241  012B02  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13242  012B08  0EF1               	movlw	-15
 13243  012B0A  0060  F053  FFE3   	movff	btemp+19,plusw1
 13244  012B10  0EF2               	movlw	-14
 13245  012B12  0060  F057  FFE3   	movff	btemp+20,plusw1
 13246  012B18  0EF3               	movlw	-13
 13247  012B1A  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13248  012B20  0EF4               	movlw	-12
 13249  012B22  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13250  012B28  0EF5               	movlw	-11
 13251  012B2A  0060  F063  FFE3   	movff	btemp+23,plusw1
 13252  012B30  D729               	goto	l12838
 13253  012B32                     l12854:
 13254                           
 13255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 13256                           ;stkvar	_ct @ sp[(-32)+26]
 13257  012B32  0EFA               	movlw	-6
 13258  012B34  006F FF8C  F001    	movff	plusw1,btemp
 13259  012B3A  0E66               	movlw	102
 13260  012B3C  1801               	xorwf	btemp^0,w,c
 13261  012B3E  A4D8               	btfss	status,2,c
 13262  012B40  D06E               	goto	l12866
 13263                           
 13264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 13265                           ;stkvar	_fmt @ sp[(-32)+-4]
 13266  012B42  0EDC               	movlw	-36
 13267  012B44  006F FF8F FFD9     	movff	plusw1,fsr2l
 13268  012B4A  0EDD               	movlw	-35
 13269  012B4C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13270  012B52  006F FF7B FFF6     	movff	postinc2,tblptrl
 13271  012B58  006F FF77 FFF7     	movff	postdec2,tblptrh
 13272  012B5E                     	if	0	;tblptru may be non-zero
 13273  012B5E                     	endif
 13274  012B5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13275  012B5E  0E00               	movlw	low (__mediumconst shr (0+16))
 13276  012B60  6EF8               	movwf	tblptru,c
 13277  012B62                     	endif
 13278                           
 13279                           ;stkvar	_c @ sp[(-32)+31]
 13280  012B62  0008               	tblrd		*
 13281  012B64  0EFF               	movlw	-1
 13282  012B66  006F FFD7 FFE3     	movff	tablat,plusw1
 13283                           
 13284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 13285                           ;stkvar	_fmt @ sp[(-32)+-4]
 13286  012B6C  0EDC               	movlw	-36
 13287  012B6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13288  012B74  0EDD               	movlw	-35
 13289  012B76  006F FF8F FFDA     	movff	plusw1,fsr2h
 13290  012B7C  2ADE               	incf	postinc2,f,c
 13291  012B7E  0E00               	movlw	0
 13292  012B80  22DD               	addwfc	postdec2,f,c
 13293                           
 13294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 13295                           ;stkvar	_ap @ sp[(-32)+-6]
 13296  012B82  0EDA               	movlw	-38
 13297  012B84  006F FF8F FFD9     	movff	plusw1,fsr2l
 13298  012B8A  0EDB               	movlw	-37
 13299  012B8C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13300  012B92  0E04               	movlw	4
 13301  012B94  5EDE               	subwf	postinc2,f,c
 13302  012B96  0E00               	movlw	0
 13303  012B98  5ADD               	subwfb	postdec2,f,c
 13304  012B9A  006F FF78  F00B    	movff	postinc2,btemp+10
 13305  012BA0  006F FF74  F00C    	movff	postdec2,btemp+11
 13306  012BA6  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13307  012BAC  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13308  012BB2  006F FF78  F009    	movff	postinc2,btemp+8
 13309  012BB8  006F FF78  F00A    	movff	postinc2,btemp+9
 13310  012BBE  006F FF78  F00B    	movff	postinc2,btemp+10
 13311  012BC4  006F FF78  F00C    	movff	postinc2,btemp+11
 13312                           
 13313                           ;stkvar	_f @ sp[(-32)+22]
 13314  012BCA  0EF6               	movlw	-10
 13315  012BCC  0060  F027  FFE3   	movff	btemp+8,plusw1
 13316  012BD2  0EF7               	movlw	-9
 13317  012BD4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13318  012BDA  0EF8               	movlw	-8
 13319  012BDC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13320  012BE2  0EF9               	movlw	-7
 13321  012BE4  0060  F033  FFE3   	movff	btemp+11,plusw1
 13322  012BEA                     l12862:
 13323                           
 13324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 13325                           ;stkvar	_c @ sp[(-32)+31]
 13326  012BEA  0EFF               	movlw	-1
 13327  012BEC  50E3               	movf	plusw1,w,c
 13328  012BEE  6EE6               	movwf	postinc1,c
 13329                           
 13330                           ;stkvar	_f @ sp[(-33)+22]
 13331  012BF0  0EF5               	movlw	-11
 13332  012BF2  006F FF8F FFE6     	movff	plusw1,postinc1
 13333  012BF8  006F FF8F FFE6     	movff	plusw1,postinc1
 13334  012BFE  006F FF8F FFE6     	movff	plusw1,postinc1
 13335  012C04  006F FF8F FFE6     	movff	plusw1,postinc1
 13336                           
 13337                           ;stkvar	_fp @ sp[(-37)+-2]
 13338  012C0A  0ED9               	movlw	-39
 13339  012C0C  006F FF8F FFE6     	movff	plusw1,postinc1
 13340  012C12  006F FF8F FFE6     	movff	plusw1,postinc1
 13341  012C18  EC00  F080         	call	_efgtoa	;wreg free
 13342  012C1C  D3B6               	goto	l2448
 13343  012C1E                     l12866:
 13344                           
 13345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 13346  012C1E  0E02               	movlw	2
 13347  012C20  6EE6               	movwf	postinc1,c
 13348  012C22  0E00               	movlw	0
 13349  012C24  6EE6               	movwf	postinc1,c
 13350  012C26  0EED               	movlw	low STR_82
 13351  012C28  6EE6               	movwf	postinc1,c
 13352  012C2A  0EFF               	movlw	high STR_82
 13353  012C2C  6EE6               	movwf	postinc1,c
 13354                           
 13355                           ;stkvar	_ct @ sp[(-36)+26]
 13356  012C2E  0EF6               	movlw	246
 13357  012C30  24E1               	addwf	fsr1l,w,c
 13358  012C32  6E01               	movwf	btemp^0,c
 13359  012C34  0EFF               	movlw	255
 13360  012C36  20E2               	addwfc	fsr1h,w,c
 13361  012C38  6E02               	movwf	(btemp+1)^0,c
 13362  012C3A  0060  F007  FFE6   	movff	btemp,postinc1
 13363  012C40  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13364  012C46  EC68  F0C0         	call	_strncmp	;wreg free
 13365  012C4A  5001               	movf	btemp^0,w,c
 13366  012C4C  1002               	iorwf	(btemp+1)^0,w,c
 13367  012C4E  A4D8               	btfss	status,2,c
 13368  012C50  D096               	goto	l12886
 13369                           
 13370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 13371                           ;stkvar	_fmt @ sp[(-32)+-4]
 13372  012C52  0EDC               	movlw	-36
 13373  012C54  006F FF8F FFD9     	movff	plusw1,fsr2l
 13374  012C5A  0EDD               	movlw	-35
 13375  012C5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13376  012C62  006F FF78  F00B    	movff	postinc2,btemp+10
 13377  012C68  006F FF74  F00C    	movff	postdec2,btemp+11
 13378  012C6E  0E01               	movlw	1
 13379  012C70  260B               	addwf	(btemp+10)^0,f,c
 13380  012C72  0E00               	movlw	0
 13381  012C74  220C               	addwfc	(btemp+11)^0,f,c
 13382  012C76  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13383  012C7C  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13384  012C82                     	if	0	;tblptru may be non-zero
 13385  012C82                     	endif
 13386  012C82                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13387  012C82  0E00               	movlw	low (__mediumconst shr (0+16))
 13388  012C84  6EF8               	movwf	tblptru,c
 13389  012C86                     	endif
 13390                           
 13391                           ;stkvar	_c @ sp[(-32)+31]
 13392  012C86  0008               	tblrd		*
 13393  012C88  0EFF               	movlw	-1
 13394  012C8A  006F FFD7 FFE3     	movff	tablat,plusw1
 13395  012C90  0EBF               	movlw	191
 13396  012C92  6E0B               	movwf	(btemp+10)^0,c
 13397  012C94  0EFF               	movlw	255
 13398  012C96  6E0C               	movwf	(btemp+11)^0,c
 13399                           
 13400                           ;stkvar	_fmt @ sp[(-32)+-4]
 13401  012C98  0EDC               	movlw	-36
 13402  012C9A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13403  012CA0  0EDD               	movlw	-35
 13404  012CA2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13405  012CA8  006F FF7B FFF6     	movff	postinc2,tblptrl
 13406  012CAE  006F FF77 FFF7     	movff	postdec2,tblptrh
 13407  012CB4                     	if	0	;tblptru may be non-zero
 13408  012CB4                     	endif
 13409  012CB4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13410  012CB4  0E00               	movlw	low (__mediumconst shr (0+16))
 13411  012CB6  6EF8               	movwf	tblptru,c
 13412  012CB8                     	endif
 13413  012CB8  0008               	tblrd		*
 13414  012CBA  50F5               	movf	tablat,w,c
 13415  012CBC  6E09               	movwf	(btemp+8)^0,c
 13416  012CBE  6A0A               	clrf	(btemp+9)^0,c
 13417  012CC0  500B               	movf	(btemp+10)^0,w,c
 13418  012CC2  2609               	addwf	(btemp+8)^0,f,c
 13419  012CC4  500C               	movf	(btemp+11)^0,w,c
 13420  012CC6  220A               	addwfc	(btemp+9)^0,f,c
 13421  012CC8  500A               	movf	(btemp+9)^0,w,c
 13422  012CCA  E106               	bnz	u12290
 13423  012CCC  0E1A               	movlw	26
 13424  012CCE  5C09               	subwf	(btemp+8)^0,w,c
 13425  012CD0  B0D8               	btfsc	status,0,c
 13426  012CD2  D002               	goto	u12290
 13427  012CD4  0E01               	movlw	1
 13428  012CD6  D001               	goto	u12300
 13429  012CD8                     u12290:
 13430  012CD8  0E00               	movlw	0
 13431  012CDA                     u12300:
 13432  012CDA  6E0B               	movwf	(btemp+10)^0,c
 13433  012CDC  6A0C               	clrf	(btemp+11)^0,c
 13434                           
 13435                           ;stkvar	_vfpfcnvrt$5819 @ sp[(-32)+2]
 13436  012CDE  0EE2               	movlw	-30
 13437  012CE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13438  012CE6  0EE3               	movlw	-29
 13439  012CE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 13440                           
 13441                           ;stkvar	_vfpfcnvrt$5819 @ sp[(-32)+2]
 13442  012CEE  0EE2               	movlw	-30
 13443  012CF0  006F FF8C  F001    	movff	plusw1,btemp
 13444  012CF6  0EE3               	movlw	-29
 13445  012CF8  50E3               	movf	plusw1,w,c
 13446  012CFA  1001               	iorwf	btemp^0,w,c
 13447                           
 13448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 13449                           ;stkvar	_ap @ sp[(-32)+-6]
 13450                           
 13451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 13452                           
 13453                           ;stkvar	_f @ sp[(-32)+22]
 13454                           
 13455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 13456                           ;stkvar	_ap @ sp[(-32)+-6]
 13457  012CFC  0EDA               	movlw	-38
 13458  012CFE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13459  012D04  0EDB               	movlw	-37
 13460  012D06  006F FF8F FFDA     	movff	plusw1,fsr2h
 13461  012D0C  0E04               	movlw	4
 13462  012D0E  5EDE               	subwf	postinc2,f,c
 13463  012D10  0E00               	movlw	0
 13464  012D12  5ADD               	subwfb	postdec2,f,c
 13465  012D14  006F FF78  F00B    	movff	postinc2,btemp+10
 13466  012D1A  006F FF74  F00C    	movff	postdec2,btemp+11
 13467  012D20  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13468  012D26  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13469  012D2C  006F FF78  F009    	movff	postinc2,btemp+8
 13470  012D32  006F FF78  F00A    	movff	postinc2,btemp+9
 13471  012D38  006F FF78  F00B    	movff	postinc2,btemp+10
 13472  012D3E  006F FF78  F00C    	movff	postinc2,btemp+11
 13473                           
 13474                           ;stkvar	_f @ sp[(-32)+22]
 13475  012D44  0EF6               	movlw	-10
 13476  012D46  0060  F027  FFE3   	movff	btemp+8,plusw1
 13477  012D4C  0EF7               	movlw	-9
 13478  012D4E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13479  012D54  0EF8               	movlw	-8
 13480  012D56  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13481  012D5C  0EF9               	movlw	-7
 13482  012D5E  0060  F033  FFE3   	movff	btemp+11,plusw1
 13483                           
 13484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 13485                           ;stkvar	_fmt @ sp[(-32)+-4]
 13486  012D64  0EDC               	movlw	-36
 13487  012D66  006F FF8F FFD9     	movff	plusw1,fsr2l
 13488  012D6C  0EDD               	movlw	-35
 13489  012D6E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13490  012D74  0E02               	movlw	2
 13491  012D76  26DE               	addwf	postinc2,f,c
 13492  012D78  0E00               	movlw	0
 13493  012D7A  22DD               	addwfc	postdec2,f,c
 13494  012D7C  D736               	goto	l12862
 13495  012D7E                     l12886:
 13496                           
 13497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 13498                           ;stkvar	_fmt @ sp[(-32)+-4]
 13499  012D7E  0EDC               	movlw	-36
 13500  012D80  006F FF8F FFD9     	movff	plusw1,fsr2l
 13501  012D86  0EDD               	movlw	-35
 13502  012D88  006F FF8F FFDA     	movff	plusw1,fsr2h
 13503  012D8E  006F FF7B FFF6     	movff	postinc2,tblptrl
 13504  012D94  006F FF77 FFF7     	movff	postdec2,tblptrh
 13505  012D9A                     	if	0	;tblptru may be non-zero
 13506  012D9A                     	endif
 13507  012D9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13508  012D9A  0E00               	movlw	low (__mediumconst shr (0+16))
 13509  012D9C  6EF8               	movwf	tblptru,c
 13510  012D9E                     	endif
 13511  012D9E  0008               	tblrd		*
 13512  012DA0  50F5               	movf	tablat,w,c
 13513  012DA2  0A73               	xorlw	115
 13514  012DA4  A4D8               	btfss	status,2,c
 13515  012DA6  D042               	goto	l12896
 13516                           
 13517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 13518                           ;stkvar	_fmt @ sp[(-32)+-4]
 13519  012DA8  0EDC               	movlw	-36
 13520  012DAA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13521  012DB0  0EDD               	movlw	-35
 13522  012DB2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13523  012DB8  2ADE               	incf	postinc2,f,c
 13524  012DBA  0E00               	movlw	0
 13525  012DBC  22DD               	addwfc	postdec2,f,c
 13526                           
 13527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 13528                           ;stkvar	_ap @ sp[(-32)+-6]
 13529  012DBE  0EDA               	movlw	-38
 13530  012DC0  006F FF8F FFD9     	movff	plusw1,fsr2l
 13531  012DC6  0EDB               	movlw	-37
 13532  012DC8  006F FF8F FFDA     	movff	plusw1,fsr2h
 13533  012DCE  0E02               	movlw	2
 13534  012DD0  5EDE               	subwf	postinc2,f,c
 13535  012DD2  0E00               	movlw	0
 13536  012DD4  5ADD               	subwfb	postdec2,f,c
 13537  012DD6  006F FF78  F00B    	movff	postinc2,btemp+10
 13538  012DDC  006F FF74  F00C    	movff	postdec2,btemp+11
 13539  012DE2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13540  012DE8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13541  012DEE  006F FF78  F00B    	movff	postinc2,btemp+10
 13542  012DF4  006F FF74  F00C    	movff	postdec2,btemp+11
 13543                           
 13544                           ;stkvar	_cp @ sp[(-32)+29]
 13545  012DFA  0EFE               	movlw	-2
 13546  012DFC  0060  F033  FFE3   	movff	btemp+11,plusw1
 13547  012E02  0EFD               	movlw	-3
 13548  012E04  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13549                           
 13550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 13551                           ;stkvar	_cp @ sp[(-32)+29]
 13552  012E0A  0EFD               	movlw	-3
 13553  012E0C  006F FF8F FFE6     	movff	plusw1,postinc1
 13554  012E12  006F FF8F FFE6     	movff	plusw1,postinc1
 13555                           
 13556                           ;stkvar	_fp @ sp[(-34)+-2]
 13557  012E18  0EDC               	movlw	-36
 13558  012E1A  006F FF8F FFE6     	movff	plusw1,postinc1
 13559  012E20  006F FF8F FFE6     	movff	plusw1,postinc1
 13560  012E26  EC4C  F0BA         	call	_stoa	;wreg free
 13561  012E2A  D2AF               	goto	l2448
 13562  012E2C                     l12896:
 13563                           
 13564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 13565                           ;stkvar	_fmt @ sp[(-32)+-4]
 13566  012E2C  0EDC               	movlw	-36
 13567  012E2E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13568  012E34  0EDD               	movlw	-35
 13569  012E36  006F FF8F FFDA     	movff	plusw1,fsr2h
 13570  012E3C  006F FF7B FFF6     	movff	postinc2,tblptrl
 13571  012E42  006F FF77 FFF7     	movff	postdec2,tblptrh
 13572  012E48                     	if	0	;tblptru may be non-zero
 13573  012E48                     	endif
 13574  012E48                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13575  012E48  0E00               	movlw	low (__mediumconst shr (0+16))
 13576  012E4A  6EF8               	movwf	tblptru,c
 13577  012E4C                     	endif
 13578  012E4C  0008               	tblrd		*
 13579  012E4E  50F5               	movf	tablat,w,c
 13580  012E50  0A75               	xorlw	117
 13581  012E52  A4D8               	btfss	status,2,c
 13582  012E54  D07C               	goto	l12906
 13583                           
 13584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 13585                           ;stkvar	_fmt @ sp[(-32)+-4]
 13586  012E56  0EDC               	movlw	-36
 13587  012E58  006F FF8F FFD9     	movff	plusw1,fsr2l
 13588  012E5E  0EDD               	movlw	-35
 13589  012E60  006F FF8F FFDA     	movff	plusw1,fsr2h
 13590  012E66  2ADE               	incf	postinc2,f,c
 13591  012E68  0E00               	movlw	0
 13592  012E6A  22DD               	addwfc	postdec2,f,c
 13593                           
 13594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 13595                           ;stkvar	_ap @ sp[(-32)+-6]
 13596  012E6C  0EDA               	movlw	-38
 13597  012E6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13598  012E74  0EDB               	movlw	-37
 13599  012E76  006F FF8F FFDA     	movff	plusw1,fsr2h
 13600  012E7C  0E02               	movlw	2
 13601  012E7E  5EDE               	subwf	postinc2,f,c
 13602  012E80  0E00               	movlw	0
 13603  012E82  5ADD               	subwfb	postdec2,f,c
 13604  012E84  006F FF78  F00B    	movff	postinc2,btemp+10
 13605  012E8A  006F FF74  F00C    	movff	postdec2,btemp+11
 13606  012E90  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13607  012E96  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13608  012E9C  006F FF78  F00B    	movff	postinc2,btemp+10
 13609  012EA2  006F FF74  F00C    	movff	postdec2,btemp+11
 13610  012EA8  500B               	movf	(btemp+10)^0,w,c
 13611  012EAA  6E11               	movwf	(btemp+16)^0,c
 13612  012EAC  500C               	movf	(btemp+11)^0,w,c
 13613  012EAE  6E12               	movwf	(btemp+17)^0,c
 13614  012EB0  6A13               	clrf	(btemp+18)^0,c
 13615  012EB2  6A14               	clrf	(btemp+19)^0,c
 13616  012EB4  6A15               	clrf	(btemp+20)^0,c
 13617  012EB6  6A16               	clrf	(btemp+21)^0,c
 13618  012EB8  6A17               	clrf	(btemp+22)^0,c
 13619  012EBA  6A18               	clrf	(btemp+23)^0,c
 13620                           
 13621                           ;stkvar	_llu @ sp[(-32)+6]
 13622  012EBC  0EE6               	movlw	-26
 13623  012EBE  0060  F047  FFE3   	movff	btemp+16,plusw1
 13624  012EC4  0EE7               	movlw	-25
 13625  012EC6  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13626  012ECC  0EE8               	movlw	-24
 13627  012ECE  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13628  012ED4  0EE9               	movlw	-23
 13629  012ED6  0060  F053  FFE3   	movff	btemp+19,plusw1
 13630  012EDC  0EEA               	movlw	-22
 13631  012EDE  0060  F057  FFE3   	movff	btemp+20,plusw1
 13632  012EE4  0EEB               	movlw	-21
 13633  012EE6  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13634  012EEC  0EEC               	movlw	-20
 13635  012EEE  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13636  012EF4  0EED               	movlw	-19
 13637  012EF6  0060  F063  FFE3   	movff	btemp+23,plusw1
 13638                           
 13639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 13640                           ;stkvar	_llu @ sp[(-32)+6]
 13641  012EFC  50E1               	movf	fsr1l,w,c
 13642  012EFE  0FE6               	addlw	-26
 13643  012F00  6ED9               	movwf	fsr2l,c
 13644  012F02  50E2               	movf	fsr1h,w,c
 13645  012F04  6EDA               	movwf	fsr2h,c
 13646  012F06  0EFF               	movlw	255
 13647  012F08  22DA               	addwfc	fsr2h,f,c
 13648  012F0A  006F FF7B FFE6     	movff	postinc2,postinc1
 13649  012F10  006F FF7B FFE6     	movff	postinc2,postinc1
 13650  012F16  006F FF7B FFE6     	movff	postinc2,postinc1
 13651  012F1C  006F FF7B FFE6     	movff	postinc2,postinc1
 13652  012F22  006F FF7B FFE6     	movff	postinc2,postinc1
 13653  012F28  006F FF7B FFE6     	movff	postinc2,postinc1
 13654  012F2E  006F FF7B FFE6     	movff	postinc2,postinc1
 13655  012F34  006F FF7B FFE6     	movff	postinc2,postinc1
 13656                           
 13657                           ;stkvar	_fp @ sp[(-40)+-2]
 13658  012F3A  0ED6               	movlw	-42
 13659  012F3C  006F FF8F FFE6     	movff	plusw1,postinc1
 13660  012F42  006F FF8F FFE6     	movff	plusw1,postinc1
 13661  012F48  EC34  F0B4         	call	_utoa	;wreg free
 13662  012F4C  D21E               	goto	l2448
 13663  012F4E                     l12906:
 13664                           
 13665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 13666  012F4E  0E02               	movlw	2
 13667  012F50  6EE6               	movwf	postinc1,c
 13668  012F52  0E00               	movlw	0
 13669  012F54  6EE6               	movwf	postinc1,c
 13670  012F56  0EF3               	movlw	low STR_87
 13671  012F58  6EE6               	movwf	postinc1,c
 13672  012F5A  0EFF               	movlw	high STR_87
 13673  012F5C  6EE6               	movwf	postinc1,c
 13674                           
 13675                           ;stkvar	_fmt @ sp[(-36)+-4]
 13676  012F5E  0ED8               	movlw	-40
 13677  012F60  006F FF8F FFD9     	movff	plusw1,fsr2l
 13678  012F66  0ED9               	movlw	-39
 13679  012F68  006F FF8F FFDA     	movff	plusw1,fsr2h
 13680  012F6E  006F FF78  F00B    	movff	postinc2,btemp+10
 13681  012F74  006F FF74  F00C    	movff	postdec2,btemp+11
 13682  012F7A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13683  012F80  0060  F033  FFE6   	movff	btemp+11,postinc1
 13684  012F86  EC68  F0C0         	call	_strncmp	;wreg free
 13685  012F8A  5001               	movf	btemp^0,w,c
 13686  012F8C  1002               	iorwf	(btemp+1)^0,w,c
 13687  012F8E  A4D8               	btfss	status,2,c
 13688  012F90  D039               	goto	l12916
 13689                           
 13690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 13691                           ;stkvar	_fmt @ sp[(-32)+-4]
 13692  012F92  0EDC               	movlw	-36
 13693  012F94  006F FF8F FFD9     	movff	plusw1,fsr2l
 13694  012F9A  0EDD               	movlw	-35
 13695  012F9C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13696  012FA2  0E02               	movlw	2
 13697  012FA4  26DE               	addwf	postinc2,f,c
 13698  012FA6  0E00               	movlw	0
 13699  012FA8  22DD               	addwfc	postdec2,f,c
 13700                           
 13701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 13702                           ;stkvar	_ap @ sp[(-32)+-6]
 13703  012FAA  0EDA               	movlw	-38
 13704  012FAC  006F FF8F FFD9     	movff	plusw1,fsr2l
 13705  012FB2  0EDB               	movlw	-37
 13706  012FB4  006F FF8F FFDA     	movff	plusw1,fsr2h
 13707  012FBA  0E04               	movlw	4
 13708  012FBC  5EDE               	subwf	postinc2,f,c
 13709  012FBE  0E00               	movlw	0
 13710  012FC0  5ADD               	subwfb	postdec2,f,c
 13711  012FC2  006F FF78  F00B    	movff	postinc2,btemp+10
 13712  012FC8  006F FF74  F00C    	movff	postdec2,btemp+11
 13713  012FCE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13714  012FD4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13715  012FDA  006F FF78  F009    	movff	postinc2,btemp+8
 13716  012FE0  006F FF78  F00A    	movff	postinc2,btemp+9
 13717  012FE6  006F FF78  F00B    	movff	postinc2,btemp+10
 13718  012FEC  006F FF78  F00C    	movff	postinc2,btemp+11
 13719  012FF2  5009               	movf	(btemp+8)^0,w,c
 13720  012FF4  6E11               	movwf	(btemp+16)^0,c
 13721  012FF6  500A               	movf	(btemp+9)^0,w,c
 13722  012FF8  6E12               	movwf	(btemp+17)^0,c
 13723  012FFA  500B               	movf	(btemp+10)^0,w,c
 13724  012FFC  6E13               	movwf	(btemp+18)^0,c
 13725  012FFE  500C               	movf	(btemp+11)^0,w,c
 13726  013000  6E14               	movwf	(btemp+19)^0,c
 13727  013002  D758               	goto	L11
 13728  013004                     l12916:
 13729                           
 13730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 13731                           ;stkvar	_fmt @ sp[(-32)+-4]
 13732  013004  0EDC               	movlw	-36
 13733  013006  006F FF8F FFD9     	movff	plusw1,fsr2l
 13734  01300C  0EDD               	movlw	-35
 13735  01300E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13736  013014  006F FF7B FFF6     	movff	postinc2,tblptrl
 13737  01301A  006F FF77 FFF7     	movff	postdec2,tblptrh
 13738  013020                     	if	0	;tblptru may be non-zero
 13739  013020                     	endif
 13740  013020                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13741  013020  0E00               	movlw	low (__mediumconst shr (0+16))
 13742  013022  6EF8               	movwf	tblptru,c
 13743  013024                     	endif
 13744  013024  0008               	tblrd		*
 13745  013026  50F5               	movf	tablat,w,c
 13746  013028  0A78               	xorlw	120
 13747  01302A  B4D8               	btfsc	status,2,c
 13748  01302C  D015               	goto	u12360
 13749                           
 13750                           ;stkvar	_fmt @ sp[(-32)+-4]
 13751  01302E  0EDC               	movlw	-36
 13752  013030  006F FF8F FFD9     	movff	plusw1,fsr2l
 13753  013036  0EDD               	movlw	-35
 13754  013038  006F FF8F FFDA     	movff	plusw1,fsr2h
 13755  01303E  006F FF7B FFF6     	movff	postinc2,tblptrl
 13756  013044  006F FF77 FFF7     	movff	postdec2,tblptrh
 13757  01304A                     	if	0	;tblptru may be non-zero
 13758  01304A                     	endif
 13759  01304A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13760  01304A  0E00               	movlw	low (__mediumconst shr (0+16))
 13761  01304C  6EF8               	movwf	tblptru,c
 13762  01304E                     	endif
 13763  01304E  0008               	tblrd		*
 13764  013050  50F5               	movf	tablat,w,c
 13765  013052  0A58               	xorlw	88
 13766  013054  A4D8               	btfss	status,2,c
 13767  013056  D094               	goto	l12930
 13768  013058                     u12360:
 13769                           
 13770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 13771                           ;stkvar	_fmt @ sp[(-32)+-4]
 13772  013058  0EDC               	movlw	-36
 13773  01305A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13774  013060  0EDD               	movlw	-35
 13775  013062  006F FF8F FFDA     	movff	plusw1,fsr2h
 13776  013068  006F FF7B FFF6     	movff	postinc2,tblptrl
 13777  01306E  006F FF77 FFF7     	movff	postdec2,tblptrh
 13778  013074                     	if	0	;tblptru may be non-zero
 13779  013074                     	endif
 13780  013074                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13781  013074  0E00               	movlw	low (__mediumconst shr (0+16))
 13782  013076  6EF8               	movwf	tblptru,c
 13783  013078                     	endif
 13784                           
 13785                           ;stkvar	_c @ sp[(-32)+31]
 13786  013078  0008               	tblrd		*
 13787  01307A  0EFF               	movlw	-1
 13788  01307C  006F FFD7 FFE3     	movff	tablat,plusw1
 13789                           
 13790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 13791                           ;stkvar	_fmt @ sp[(-32)+-4]
 13792  013082  0EDC               	movlw	-36
 13793  013084  006F FF8F FFD9     	movff	plusw1,fsr2l
 13794  01308A  0EDD               	movlw	-35
 13795  01308C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13796  013092  2ADE               	incf	postinc2,f,c
 13797  013094  0E00               	movlw	0
 13798  013096  22DD               	addwfc	postdec2,f,c
 13799                           
 13800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 13801                           ;stkvar	_ap @ sp[(-32)+-6]
 13802  013098  0EDA               	movlw	-38
 13803  01309A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13804  0130A0  0EDB               	movlw	-37
 13805  0130A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13806  0130A8  0E02               	movlw	2
 13807  0130AA  5EDE               	subwf	postinc2,f,c
 13808  0130AC  0E00               	movlw	0
 13809  0130AE  5ADD               	subwfb	postdec2,f,c
 13810  0130B0  006F FF78  F00B    	movff	postinc2,btemp+10
 13811  0130B6  006F FF74  F00C    	movff	postdec2,btemp+11
 13812  0130BC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13813  0130C2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13814  0130C8  006F FF78  F00B    	movff	postinc2,btemp+10
 13815  0130CE  006F FF74  F00C    	movff	postdec2,btemp+11
 13816  0130D4  500B               	movf	(btemp+10)^0,w,c
 13817  0130D6  6E11               	movwf	(btemp+16)^0,c
 13818  0130D8  500C               	movf	(btemp+11)^0,w,c
 13819  0130DA  6E12               	movwf	(btemp+17)^0,c
 13820  0130DC  6A13               	clrf	(btemp+18)^0,c
 13821  0130DE  6A14               	clrf	(btemp+19)^0,c
 13822  0130E0  6A15               	clrf	(btemp+20)^0,c
 13823  0130E2  6A16               	clrf	(btemp+21)^0,c
 13824  0130E4  6A17               	clrf	(btemp+22)^0,c
 13825  0130E6  6A18               	clrf	(btemp+23)^0,c
 13826                           
 13827                           ;stkvar	_llu @ sp[(-32)+6]
 13828  0130E8  0EE6               	movlw	-26
 13829  0130EA  0060  F047  FFE3   	movff	btemp+16,plusw1
 13830  0130F0  0EE7               	movlw	-25
 13831  0130F2  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13832  0130F8  0EE8               	movlw	-24
 13833  0130FA  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13834  013100  0EE9               	movlw	-23
 13835  013102  0060  F053  FFE3   	movff	btemp+19,plusw1
 13836  013108  0EEA               	movlw	-22
 13837  01310A  0060  F057  FFE3   	movff	btemp+20,plusw1
 13838  013110  0EEB               	movlw	-21
 13839  013112  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13840  013118  0EEC               	movlw	-20
 13841  01311A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13842  013120  0EED               	movlw	-19
 13843  013122  0060  F063  FFE3   	movff	btemp+23,plusw1
 13844                           
 13845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 13846                           ;stkvar	_c @ sp[(-32)+31]
 13847  013128  0EFF               	movlw	-1
 13848  01312A  50E3               	movf	plusw1,w,c
 13849  01312C  6EE6               	movwf	postinc1,c
 13850                           
 13851                           ;stkvar	_llu @ sp[(-33)+6]
 13852  01312E  50E1               	movf	fsr1l,w,c
 13853  013130  0FE5               	addlw	-27
 13854  013132  6ED9               	movwf	fsr2l,c
 13855  013134  50E2               	movf	fsr1h,w,c
 13856  013136  6EDA               	movwf	fsr2h,c
 13857  013138  0EFF               	movlw	255
 13858  01313A  22DA               	addwfc	fsr2h,f,c
 13859  01313C  006F FF7B FFE6     	movff	postinc2,postinc1
 13860  013142  006F FF7B FFE6     	movff	postinc2,postinc1
 13861  013148  006F FF7B FFE6     	movff	postinc2,postinc1
 13862  01314E  006F FF7B FFE6     	movff	postinc2,postinc1
 13863  013154  006F FF7B FFE6     	movff	postinc2,postinc1
 13864  01315A  006F FF7B FFE6     	movff	postinc2,postinc1
 13865  013160  006F FF7B FFE6     	movff	postinc2,postinc1
 13866  013166  006F FF7B FFE6     	movff	postinc2,postinc1
 13867                           
 13868                           ;stkvar	_fp @ sp[(-41)+-2]
 13869  01316C  0ED5               	movlw	-43
 13870  01316E  006F FF8F FFE6     	movff	plusw1,postinc1
 13871  013174  006F FF8F FFE6     	movff	plusw1,postinc1
 13872  01317A  ECA1  F0B0         	call	_xtoa	;wreg free
 13873  01317E  D105               	goto	l2448
 13874  013180                     l12930:
 13875                           
 13876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 13877  013180  0E02               	movlw	2
 13878  013182  6EE6               	movwf	postinc1,c
 13879  013184  0E00               	movlw	0
 13880  013186  6EE6               	movwf	postinc1,c
 13881  013188  0EF6               	movlw	low STR_92
 13882  01318A  6EE6               	movwf	postinc1,c
 13883  01318C  0EFF               	movlw	high STR_92
 13884  01318E  6EE6               	movwf	postinc1,c
 13885                           
 13886                           ;stkvar	_fmt @ sp[(-36)+-4]
 13887  013190  0ED8               	movlw	-40
 13888  013192  006F FF8F FFD9     	movff	plusw1,fsr2l
 13889  013198  0ED9               	movlw	-39
 13890  01319A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13891  0131A0  006F FF78  F00B    	movff	postinc2,btemp+10
 13892  0131A6  006F FF74  F00C    	movff	postdec2,btemp+11
 13893  0131AC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13894  0131B2  0060  F033  FFE6   	movff	btemp+11,postinc1
 13895  0131B8  EC68  F0C0         	call	_strncmp	;wreg free
 13896  0131BC  5001               	movf	btemp^0,w,c
 13897  0131BE  1002               	iorwf	(btemp+1)^0,w,c
 13898  0131C0  B4D8               	btfsc	status,2,c
 13899  0131C2  D022               	goto	u12380
 13900  0131C4  0E02               	movlw	2
 13901  0131C6  6EE6               	movwf	postinc1,c
 13902  0131C8  0E00               	movlw	0
 13903  0131CA  6EE6               	movwf	postinc1,c
 13904  0131CC  0EE7               	movlw	low STR_96
 13905  0131CE  6EE6               	movwf	postinc1,c
 13906  0131D0  0EFF               	movlw	high STR_96
 13907  0131D2  6EE6               	movwf	postinc1,c
 13908                           
 13909                           ;stkvar	_fmt @ sp[(-36)+-4]
 13910  0131D4  0ED8               	movlw	-40
 13911  0131D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 13912  0131DC  0ED9               	movlw	-39
 13913  0131DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 13914  0131E4  006F FF78  F00B    	movff	postinc2,btemp+10
 13915  0131EA  006F FF74  F00C    	movff	postdec2,btemp+11
 13916  0131F0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13917  0131F6  0060  F033  FFE6   	movff	btemp+11,postinc1
 13918  0131FC  EC68  F0C0         	call	_strncmp	;wreg free
 13919  013200  5001               	movf	btemp^0,w,c
 13920  013202  1002               	iorwf	(btemp+1)^0,w,c
 13921  013204  A4D8               	btfss	status,2,c
 13922  013206  D058               	goto	l12944
 13923  013208                     u12380:
 13924                           
 13925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 13926                           ;stkvar	_fmt @ sp[(-32)+-4]
 13927  013208  0EDC               	movlw	-36
 13928  01320A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13929  013210  0EDD               	movlw	-35
 13930  013212  006F FF8F FFDA     	movff	plusw1,fsr2h
 13931  013218  006F FF78  F00B    	movff	postinc2,btemp+10
 13932  01321E  006F FF74  F00C    	movff	postdec2,btemp+11
 13933  013224  0E01               	movlw	1
 13934  013226  260B               	addwf	(btemp+10)^0,f,c
 13935  013228  0E00               	movlw	0
 13936  01322A  220C               	addwfc	(btemp+11)^0,f,c
 13937  01322C  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13938  013232  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13939  013238                     	if	0	;tblptru may be non-zero
 13940  013238                     	endif
 13941  013238                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13942  013238  0E00               	movlw	low (__mediumconst shr (0+16))
 13943  01323A  6EF8               	movwf	tblptru,c
 13944  01323C                     	endif
 13945                           
 13946                           ;stkvar	_c @ sp[(-32)+31]
 13947  01323C  0008               	tblrd		*
 13948  01323E  0EFF               	movlw	-1
 13949  013240  006F FFD7 FFE3     	movff	tablat,plusw1
 13950                           
 13951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 13952                           ;stkvar	_fmt @ sp[(-32)+-4]
 13953  013246  0EDC               	movlw	-36
 13954  013248  006F FF8F FFD9     	movff	plusw1,fsr2l
 13955  01324E  0EDD               	movlw	-35
 13956  013250  006F FF8F FFDA     	movff	plusw1,fsr2h
 13957  013256  0E02               	movlw	2
 13958  013258  26DE               	addwf	postinc2,f,c
 13959  01325A  0E00               	movlw	0
 13960  01325C  22DD               	addwfc	postdec2,f,c
 13961                           
 13962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 13963                           ;stkvar	_ap @ sp[(-32)+-6]
 13964  01325E  0EDA               	movlw	-38
 13965  013260  006F FF8F FFD9     	movff	plusw1,fsr2l
 13966  013266  0EDB               	movlw	-37
 13967  013268  006F FF8F FFDA     	movff	plusw1,fsr2h
 13968  01326E  0E04               	movlw	4
 13969  013270  5EDE               	subwf	postinc2,f,c
 13970  013272  0E00               	movlw	0
 13971  013274  5ADD               	subwfb	postdec2,f,c
 13972  013276  006F FF78  F00B    	movff	postinc2,btemp+10
 13973  01327C  006F FF74  F00C    	movff	postdec2,btemp+11
 13974  013282  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13975  013288  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13976  01328E  006F FF78  F009    	movff	postinc2,btemp+8
 13977  013294  006F FF78  F00A    	movff	postinc2,btemp+9
 13978  01329A  006F FF78  F00B    	movff	postinc2,btemp+10
 13979  0132A0  006F FF78  F00C    	movff	postinc2,btemp+11
 13980  0132A6  5009               	movf	(btemp+8)^0,w,c
 13981  0132A8  6E11               	movwf	(btemp+16)^0,c
 13982  0132AA  500A               	movf	(btemp+9)^0,w,c
 13983  0132AC  6E12               	movwf	(btemp+17)^0,c
 13984  0132AE  500B               	movf	(btemp+10)^0,w,c
 13985  0132B0  6E13               	movwf	(btemp+18)^0,c
 13986  0132B2  500C               	movf	(btemp+11)^0,w,c
 13987  0132B4  6E14               	movwf	(btemp+19)^0,c
 13988  0132B6  D714               	goto	L12
 13989  0132B8                     l12944:
 13990                           
 13991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 13992                           ;stkvar	_fmt @ sp[(-32)+-4]
 13993  0132B8  0EDC               	movlw	-36
 13994  0132BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13995  0132C0  0EDD               	movlw	-35
 13996  0132C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13997  0132C8  006F FF7B FFF6     	movff	postinc2,tblptrl
 13998  0132CE  006F FF77 FFF7     	movff	postdec2,tblptrh
 13999  0132D4                     	if	0	;tblptru may be non-zero
 14000  0132D4                     	endif
 14001  0132D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14002  0132D4  0E00               	movlw	low (__mediumconst shr (0+16))
 14003  0132D6  6EF8               	movwf	tblptru,c
 14004  0132D8                     	endif
 14005  0132D8  0008               	tblrd		*
 14006  0132DA  50F5               	movf	tablat,w,c
 14007  0132DC  0A25               	xorlw	37
 14008  0132DE  A4D8               	btfss	status,2,c
 14009  0132E0  D01A               	goto	l12954
 14010                           
 14011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 14012                           ;stkvar	_fmt @ sp[(-32)+-4]
 14013  0132E2  0EDC               	movlw	-36
 14014  0132E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 14015  0132EA  0EDD               	movlw	-35
 14016  0132EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 14017  0132F2  2ADE               	incf	postinc2,f,c
 14018  0132F4  0E00               	movlw	0
 14019  0132F6  22DD               	addwfc	postdec2,f,c
 14020                           
 14021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 14022                           ;stkvar	_fp @ sp[(-32)+-2]
 14023  0132F8  0EDE               	movlw	-34
 14024  0132FA  006F FF8F FFE6     	movff	plusw1,postinc1
 14025  013300  006F FF8F FFE6     	movff	plusw1,postinc1
 14026  013306  0E25               	movlw	37
 14027  013308  6EE6               	movwf	postinc1,c
 14028  01330A  0E00               	movlw	0
 14029  01330C  6EE6               	movwf	postinc1,c
 14030  01330E  EC02  F0CD         	call	_fputc	;wreg free
 14031  013312                     l12950:
 14032                           
 14033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 14034  013312  0E01               	movlw	1
 14035  013314  D00C               	goto	L13
 14036  013316                     l12954:
 14037                           
 14038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 14039                           ;stkvar	_fmt @ sp[(-32)+-4]
 14040  013316  0EDC               	movlw	-36
 14041  013318  006F FF8F FFD9     	movff	plusw1,fsr2l
 14042  01331E  0EDD               	movlw	-35
 14043  013320  006F FF8F FFDA     	movff	plusw1,fsr2h
 14044  013326  2ADE               	incf	postinc2,f,c
 14045  013328  0E00               	movlw	0
 14046  01332A  22DD               	addwfc	postdec2,f,c
 14047                           
 14048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 14049  01332C  0E00               	movlw	0
 14050  01332E                     L13:
 14051  01332E  6E01               	movwf	btemp^0,c
 14052  013330  0E00               	movlw	0
 14053  013332  6E02               	movwf	(btemp+1)^0,c
 14054  013334  D02A               	goto	l2448
 14055  013336                     l12960:
 14056                           
 14057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 14058                           ;stkvar	_fp @ sp[(-32)+-2]
 14059  013336  0EDE               	movlw	-34
 14060  013338  006F FF8F FFE6     	movff	plusw1,postinc1
 14061  01333E  006F FF8F FFE6     	movff	plusw1,postinc1
 14062                           
 14063                           ;stkvar	_fmt @ sp[(-34)+-4]
 14064  013344  0EDA               	movlw	-38
 14065  013346  006F FF8F FFD9     	movff	plusw1,fsr2l
 14066  01334C  0EDB               	movlw	-37
 14067  01334E  006F FF8F FFDA     	movff	plusw1,fsr2h
 14068  013354  006F FF7B FFF6     	movff	postinc2,tblptrl
 14069  01335A  006F FF77 FFF7     	movff	postdec2,tblptrh
 14070  013360                     	if	0	;tblptru may be non-zero
 14071  013360                     	endif
 14072  013360                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14073  013360  0E00               	movlw	low (__mediumconst shr (0+16))
 14074  013362  6EF8               	movwf	tblptru,c
 14075  013364                     	endif
 14076  013364  0008               	tblrd		*
 14077  013366  50F5               	movf	tablat,w,c
 14078  013368  6EE6               	movwf	postinc1,c
 14079  01336A  0E00               	movlw	0
 14080  01336C  6EE6               	movwf	postinc1,c
 14081  01336E  EC02  F0CD         	call	_fputc	;wreg free
 14082                           
 14083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 14084                           ;stkvar	_fmt @ sp[(-32)+-4]
 14085  013372  0EDC               	movlw	-36
 14086  013374  006F FF8F FFD9     	movff	plusw1,fsr2l
 14087  01337A  0EDD               	movlw	-35
 14088  01337C  006F FF8F FFDA     	movff	plusw1,fsr2h
 14089  013382  2ADE               	incf	postinc2,f,c
 14090  013384  0E00               	movlw	0
 14091  013386  22DD               	addwfc	postdec2,f,c
 14092  013388  D7C4               	goto	l12950
 14093  01338A                     l2448:
 14094                           
 14095                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 14096  01338A  0EDA               	movlw	218
 14097  01338C  26E1               	addwf	fsr1l,f,c
 14098  01338E  0EFF               	movlw	255
 14099  013390  22E2               	addwfc	fsr1h,f,c
 14100  013392  0012               	return		;funcret
 14101  013394                     __end_of_vfpfcnvrt:
 14102                           	opt callstack 0
 14103                           
 14104 ;; *************** function _xtoa *****************
 14105 ;; Defined at:
 14106 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14107 ;; Parameters:    Size  Location     Type
 14108 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14109 ;;		 -> f(6), NULL(0), 
 14110 ;;  d               8  [STACK] unsigned long long 
 14111 ;;  x               1  [STACK] unsigned char 
 14112 ;; Auto vars:     Size  Location     Type
 14113 ;;  n               8  [STACK] unsigned long long 
 14114 ;;  c               2  [STACK] int 
 14115 ;;  i               2  [STACK] int 
 14116 ;;  w               2  [STACK] int 
 14117 ;;  p               2  [STACK] int 
 14118 ;; Return value:  Size  Location     Type
 14119 ;;                  2  [STACK] int 
 14120 ;; Registers used:
 14121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 14122 ;; Tracked objects:
 14123 ;;		On entry : 0/0
 14124 ;;		On exit  : 0/0
 14125 ;;		Unchanged: 0/0
 14126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14131 ;;Total ram usage:        0 bytes
 14132 ;; Hardware stack levels used:    1
 14133 ;; Hardware stack levels required when called:   20
 14134 ;; This function calls:
 14135 ;;		_isalpha
 14136 ;;		_isupper
 14137 ;;		_pad
 14138 ;;		_toupper
 14139 ;; This function is called by:
 14140 ;;		_vfpfcnvrt
 14141 ;; This function uses a reentrant model
 14142 ;;
 14143                           
 14144                           	psect	text53
 14145  016142                     __ptext53:
 14146                           	opt callstack 0
 14147  016142                     _xtoa:
 14148                           	opt callstack 0
 14149                           
 14150                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 14151  016142  0E14               	movlw	20
 14152  016144  26E1               	addwf	fsr1l,f,c
 14153  016146  0E00               	movlw	0
 14154  016148  22E2               	addwfc	fsr1h,f,c
 14155                           
 14156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 14157                           
 14158                           ;incstack = 0
 14159 ;; hardware stack exceeded
 14160  01614A  AE3D               	btfss	(_prec+1)^0,7,c
 14161                           
 14162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 14163  01614C  923E               	bcf	_flags^0,1,c
 14164                           
 14165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 14166  01614E  BE3D               	btfsc	(_prec+1)^0,7,c
 14167  016150  D005               	goto	u11920
 14168  016152  503D               	movf	(_prec+1)^0,w,c
 14169  016154  E110               	bnz	l12680
 14170  016156  043C               	decf	_prec^0,w,c
 14171  016158  B0D8               	btfsc	status,0,c
 14172  01615A  D00D               	goto	l12680
 14173  01615C                     u11920:
 14174  01615C  0E01               	movlw	1
 14175  01615E  6E0B               	movwf	(btemp+10)^0,c
 14176  016160  0E00               	movlw	0
 14177  016162  6E0C               	movwf	(btemp+11)^0,c
 14178                           
 14179                           ;stkvar	_p @ sp[(-20)+18]
 14180  016164  0EFE               	movlw	-2
 14181  016166  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14182  01616C  0EFF               	movlw	-1
 14183  01616E  0060  F033  FFE3   	movff	btemp+11,plusw1
 14184  016174  D008               	goto	l2398
 14185  016176                     l12680:
 14186                           
 14187                           ;stkvar	_p @ sp[(-20)+18]
 14188  016176  0EFE               	movlw	-2
 14189  016178  0060  F0F3  FFE3   	movff	_prec,plusw1
 14190  01617E  0EFF               	movlw	-1
 14191  016180  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 14192  016186                     l2398:
 14193                           
 14194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 14195                           ;stkvar	_w @ sp[(-20)+16]
 14196  016186  0EFC               	movlw	-4
 14197  016188  0060  F0EB  FFE3   	movff	_width,plusw1
 14198  01618E  0EFD               	movlw	-3
 14199  016190  0060  F0EF  FFE3   	movff	_width+1,plusw1
 14200                           
 14201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 14202  016196  A83E               	btfss	_flags^0,4,c
 14203  016198  D00B               	goto	l12686
 14204                           
 14205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 14206                           ;stkvar	_w @ sp[(-20)+16]
 14207  01619A  50E1               	movf	fsr1l,w,c
 14208  01619C  0FFC               	addlw	-4
 14209  01619E  6ED9               	movwf	fsr2l,c
 14210  0161A0  50E2               	movf	fsr1h,w,c
 14211  0161A2  6EDA               	movwf	fsr2h,c
 14212  0161A4  0EFF               	movlw	255
 14213  0161A6  22DA               	addwfc	fsr2h,f,c
 14214  0161A8  0EFE               	movlw	254
 14215  0161AA  26DE               	addwf	postinc2,f,c
 14216  0161AC  0EFF               	movlw	255
 14217  0161AE  22DD               	addwfc	postdec2,f,c
 14218  0161B0                     l12686:
 14219                           
 14220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 14221                           ;stkvar	_d @ sp[(-20)+-10]
 14222  0161B0  0EE2               	movlw	226
 14223  0161B2  24E1               	addwf	fsr1l,w,c
 14224  0161B4  6ED9               	movwf	fsr2l,c
 14225  0161B6  0EFF               	movlw	255
 14226  0161B8  20E2               	addwfc	fsr1h,w,c
 14227  0161BA  6EDA               	movwf	fsr2h,c
 14228                           
 14229                           ;stkvar	_n @ sp[(-20)+4]
 14230  0161BC  0E08               	movlw	8
 14231  0161BE  6E01               	movwf	btemp^0,c
 14232  0161C0  0EF0               	movlw	-16
 14233  0161C2                     us1194999:
 14234  0161C2  006F FF7B FFE3     	movff	postinc2,plusw1
 14235  0161C8  28E8               	incf	wreg,w,c
 14236  0161CA  2E01               	decfsz	btemp^0,f,c
 14237  0161CC  D7FA               	bra	us1194999
 14238                           
 14239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 14240  0161CE  0E4F               	movlw	79
 14241  0161D0  6E0B               	movwf	(btemp+10)^0,c
 14242  0161D2  0E00               	movlw	0
 14243  0161D4  6E0C               	movwf	(btemp+11)^0,c
 14244                           
 14245                           ;stkvar	_i @ sp[(-20)+14]
 14246  0161D6  0EFA               	movlw	-6
 14247  0161D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14248  0161DE  0EFB               	movlw	-5
 14249  0161E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 14250                           
 14251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 14252  0161E6  0102               	movlb	2	; () banked
 14253  0161E8  6BE6               	clrf	(_dbuf+79)& (0+255),b
 14254                           
 14255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14256  0161EA  D0EE               	goto	l12724
 14257  0161EC                     l12692:
 14258                           
 14259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 14260                           ;stkvar	_i @ sp[(-20)+14]
 14261  0161EC  50E1               	movf	fsr1l,w,c
 14262  0161EE  0FFA               	addlw	-6
 14263  0161F0  6ED9               	movwf	fsr2l,c
 14264  0161F2  50E2               	movf	fsr1h,w,c
 14265  0161F4  6EDA               	movwf	fsr2h,c
 14266  0161F6  0EFF               	movlw	255
 14267  0161F8  22DA               	addwfc	fsr2h,f,c
 14268  0161FA  06DE               	decf	postinc2,f,c
 14269  0161FC  0E00               	movlw	0
 14270  0161FE  5ADD               	subwfb	postdec2,f,c
 14271                           
 14272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 14273                           ;stkvar	_n @ sp[(-20)+4]
 14274  016200  0EF0               	movlw	-16
 14275  016202  006F FF8C  F00B    	movff	plusw1,btemp+10
 14276  016208  0EF1               	movlw	-15
 14277  01620A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14278  016210  0E0F               	movlw	15
 14279  016212  160B               	andwf	(btemp+10)^0,f,c
 14280  016214  0E00               	movlw	0
 14281  016216  160C               	andwf	(btemp+11)^0,f,c
 14282                           
 14283                           ;stkvar	_c @ sp[(-20)+12]
 14284  016218  0EF8               	movlw	-8
 14285  01621A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14286  016220  0EF9               	movlw	-7
 14287  016222  0060  F033  FFE3   	movff	btemp+11,plusw1
 14288                           
 14289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 14290                           ;stkvar	_c @ sp[(-20)+12]
 14291  016228  0EF9               	movlw	-7
 14292  01622A  BEE3               	btfsc	plusw1,7,c
 14293  01622C  D00F               	goto	l12700
 14294  01622E  0EF9               	movlw	-7
 14295  016230  50E3               	movf	plusw1,w,c
 14296  016232  E108               	bnz	u11950
 14297  016234  0EF8               	movlw	-8
 14298  016236  006F FF8C  F001    	movff	plusw1,btemp
 14299  01623C  0E0A               	movlw	10
 14300  01623E  5E01               	subwf	btemp^0,f,c
 14301  016240  A0D8               	btfss	status,0,c
 14302  016242  D004               	goto	l12700
 14303  016244                     u11950:
 14304                           
 14305                           ;stkvar	_c @ sp[(-20)+12]
 14306  016244  0EF8               	movlw	-8
 14307  016246  50E3               	movf	plusw1,w,c
 14308  016248  0F57               	addlw	87
 14309  01624A  D003               	goto	L14
 14310  01624C                     l12700:
 14311                           
 14312                           ;stkvar	_c @ sp[(-20)+12]
 14313  01624C  0EF8               	movlw	-8
 14314  01624E  50E3               	movf	plusw1,w,c
 14315  016250  0F30               	addlw	48
 14316  016252                     L14:
 14317  016252  6E0B               	movwf	(btemp+10)^0,c
 14318  016254  0EF9               	movlw	-7
 14319  016256  006F FF8C  F00C    	movff	plusw1,btemp+11
 14320  01625C  0E00               	movlw	0
 14321  01625E  220C               	addwfc	(btemp+11)^0,f,c
 14322                           
 14323                           ;stkvar	_c @ sp[(-20)+12]
 14324  016260  0EF8               	movlw	-8
 14325  016262  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14326  016268  0EF9               	movlw	-7
 14327  01626A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14328  016270  0EBF               	movlw	191
 14329  016272  6E0B               	movwf	(btemp+10)^0,c
 14330  016274  0EFF               	movlw	255
 14331  016276  6E0C               	movwf	(btemp+11)^0,c
 14332                           
 14333                           ;stkvar	_x @ sp[(-20)+-11]
 14334  016278  0EE1               	movlw	-31
 14335  01627A  50E3               	movf	plusw1,w,c
 14336  01627C  6E09               	movwf	(btemp+8)^0,c
 14337  01627E  6A0A               	clrf	(btemp+9)^0,c
 14338  016280  500B               	movf	(btemp+10)^0,w,c
 14339  016282  2609               	addwf	(btemp+8)^0,f,c
 14340  016284  500C               	movf	(btemp+11)^0,w,c
 14341  016286  220A               	addwfc	(btemp+9)^0,f,c
 14342  016288  500A               	movf	(btemp+9)^0,w,c
 14343  01628A  E106               	bnz	u11960
 14344  01628C  0E1A               	movlw	26
 14345  01628E  5C09               	subwf	(btemp+8)^0,w,c
 14346  016290  B0D8               	btfsc	status,0,c
 14347  016292  D002               	goto	u11960
 14348  016294  0E01               	movlw	1
 14349  016296  D001               	goto	u11970
 14350  016298                     u11960:
 14351  016298  0E00               	movlw	0
 14352  01629A                     u11970:
 14353  01629A  6E0B               	movwf	(btemp+10)^0,c
 14354  01629C  6A0C               	clrf	(btemp+11)^0,c
 14355                           
 14356                           ;stkvar	_xtoa$5792 @ sp[(-20)+2]
 14357  01629E  0EEE               	movlw	-18
 14358  0162A0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14359  0162A6  0EEF               	movlw	-17
 14360  0162A8  0060  F033  FFE3   	movff	btemp+11,plusw1
 14361                           
 14362                           ;stkvar	_xtoa$5792 @ sp[(-20)+2]
 14363  0162AE  0EEE               	movlw	-18
 14364  0162B0  006F FF8C  F001    	movff	plusw1,btemp
 14365  0162B6  0EEF               	movlw	-17
 14366  0162B8  50E3               	movf	plusw1,w,c
 14367  0162BA  1001               	iorwf	btemp^0,w,c
 14368  0162BC  B4D8               	btfsc	status,2,c
 14369  0162BE  D041               	goto	l12716
 14370  0162C0  0E9F               	movlw	159
 14371  0162C2  6E0B               	movwf	(btemp+10)^0,c
 14372  0162C4  0EFF               	movlw	255
 14373  0162C6  6E0C               	movwf	(btemp+11)^0,c
 14374                           
 14375                           ;stkvar	_c @ sp[(-20)+12]
 14376  0162C8  0EF8               	movlw	-8
 14377  0162CA  006F FF8C  F009    	movff	plusw1,btemp+8
 14378  0162D0  0EF9               	movlw	-7
 14379  0162D2  006F FF8C  F00A    	movff	plusw1,btemp+9
 14380  0162D8  0E20               	movlw	32
 14381  0162DA  1209               	iorwf	(btemp+8)^0,f,c
 14382  0162DC  0E00               	movlw	0
 14383  0162DE  120A               	iorwf	(btemp+9)^0,f,c
 14384  0162E0  500B               	movf	(btemp+10)^0,w,c
 14385  0162E2  2609               	addwf	(btemp+8)^0,f,c
 14386  0162E4  500C               	movf	(btemp+11)^0,w,c
 14387  0162E6  220A               	addwfc	(btemp+9)^0,f,c
 14388  0162E8  500A               	movf	(btemp+9)^0,w,c
 14389  0162EA  E106               	bnz	u11990
 14390  0162EC  0E1A               	movlw	26
 14391  0162EE  5C09               	subwf	(btemp+8)^0,w,c
 14392  0162F0  B0D8               	btfsc	status,0,c
 14393  0162F2  D002               	goto	u11990
 14394  0162F4  0E01               	movlw	1
 14395  0162F6  D001               	goto	u12000
 14396  0162F8                     u11990:
 14397  0162F8  0E00               	movlw	0
 14398  0162FA                     u12000:
 14399  0162FA  6E0B               	movwf	(btemp+10)^0,c
 14400  0162FC  6A0C               	clrf	(btemp+11)^0,c
 14401                           
 14402                           ;stkvar	_xtoa$5793 @ sp[(-20)+0]
 14403  0162FE  0EEC               	movlw	-20
 14404  016300  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14405  016306  0EED               	movlw	-19
 14406  016308  0060  F033  FFE3   	movff	btemp+11,plusw1
 14407                           
 14408                           ;stkvar	_xtoa$5793 @ sp[(-20)+0]
 14409  01630E  0EEC               	movlw	-20
 14410  016310  006F FF8C  F001    	movff	plusw1,btemp
 14411  016316  0EED               	movlw	-19
 14412  016318  50E3               	movf	plusw1,w,c
 14413  01631A  1001               	iorwf	btemp^0,w,c
 14414  01631C  B4D8               	btfsc	status,2,c
 14415  01631E  D011               	goto	l12716
 14416                           
 14417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 14418                           ;stkvar	_c @ sp[(-20)+12]
 14419  016320  0EF8               	movlw	-8
 14420  016322  006F FF8F FFE6     	movff	plusw1,postinc1
 14421  016328  006F FF8F FFE6     	movff	plusw1,postinc1
 14422  01632E  ECE1  F0D7         	call	_toupper	;wreg free
 14423                           
 14424                           ;stkvar	_c @ sp[(-20)+12]
 14425  016332  0EF8               	movlw	-8
 14426  016334  0060  F007  FFE3   	movff	btemp,plusw1
 14427  01633A  0EF9               	movlw	-7
 14428  01633C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14429  016342                     l12716:
 14430                           
 14431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 14432                           ;stkvar	_c @ sp[(-20)+12]
 14433                           ;stkvar	_i @ sp[(-20)+14]
 14434  016342  0EFA               	movlw	-6
 14435  016344  006F FF8C  F00B    	movff	plusw1,btemp+10
 14436  01634A  0EFB               	movlw	-5
 14437  01634C  006F FF8C  F00C    	movff	plusw1,btemp+11
 14438  016352  0E97               	movlw	low _dbuf
 14439  016354  240B               	addwf	(btemp+10)^0,w,c
 14440  016356  6ED9               	movwf	fsr2l,c
 14441  016358  0E02               	movlw	high _dbuf
 14442  01635A  200C               	addwfc	(btemp+11)^0,w,c
 14443  01635C  6EDA               	movwf	fsr2h,c
 14444  01635E  0EF8               	movlw	-8
 14445  016360  006F FF8F FFDF     	movff	plusw1,indf2
 14446                           
 14447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 14448                           ;stkvar	_p @ sp[(-20)+18]
 14449  016366  50E1               	movf	fsr1l,w,c
 14450  016368  0FFE               	addlw	-2
 14451  01636A  6ED9               	movwf	fsr2l,c
 14452  01636C  50E2               	movf	fsr1h,w,c
 14453  01636E  6EDA               	movwf	fsr2h,c
 14454  016370  0EFF               	movlw	255
 14455  016372  22DA               	addwfc	fsr2h,f,c
 14456  016374  06DE               	decf	postinc2,f,c
 14457  016376  0E00               	movlw	0
 14458  016378  5ADD               	subwfb	postdec2,f,c
 14459                           
 14460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 14461                           ;stkvar	_w @ sp[(-20)+16]
 14462  01637A  50E1               	movf	fsr1l,w,c
 14463  01637C  0FFC               	addlw	-4
 14464  01637E  6ED9               	movwf	fsr2l,c
 14465  016380  50E2               	movf	fsr1h,w,c
 14466  016382  6EDA               	movwf	fsr2h,c
 14467  016384  0EFF               	movlw	255
 14468  016386  22DA               	addwfc	fsr2h,f,c
 14469  016388  06DE               	decf	postinc2,f,c
 14470  01638A  0E00               	movlw	0
 14471  01638C  5ADD               	subwfb	postdec2,f,c
 14472                           
 14473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 14474  01638E  0E04               	movlw	4
 14475  016390  6E0C               	movwf	(btemp+11)^0,c
 14476                           
 14477                           ;stkvar	_n @ sp[(-20)+4]
 14478  016392  50E1               	movf	fsr1l,w,c
 14479  016394  0FF0               	addlw	-16
 14480  016396  6ED9               	movwf	fsr2l,c
 14481  016398  50E2               	movf	fsr1h,w,c
 14482  01639A  6EDA               	movwf	fsr2h,c
 14483  01639C  0EFF               	movlw	255
 14484  01639E  22DA               	addwfc	fsr2h,f,c
 14485  0163A0  280C               	incf	(btemp+11)^0,w,c
 14486  0163A2  52DE               	movf	postinc2,f,c
 14487  0163A4  D00F               	goto	u12020
 14488  0163A6                     u12025:
 14489  0163A6  52DE               	movf	postinc2,f,c
 14490  0163A8  52DE               	movf	postinc2,f,c
 14491  0163AA  52DE               	movf	postinc2,f,c
 14492  0163AC  52DE               	movf	postinc2,f,c
 14493  0163AE  52DE               	movf	postinc2,f,c
 14494  0163B0  52DE               	movf	postinc2,f,c
 14495  0163B2  90D8               	bcf	status,0,c
 14496  0163B4  32DD               	rrcf	postdec2,f,c
 14497  0163B6  32DD               	rrcf	postdec2,f,c
 14498  0163B8  32DD               	rrcf	postdec2,f,c
 14499  0163BA  32DD               	rrcf	postdec2,f,c
 14500  0163BC  32DD               	rrcf	postdec2,f,c
 14501  0163BE  32DD               	rrcf	postdec2,f,c
 14502  0163C0  32DD               	rrcf	postdec2,f,c
 14503  0163C2  32DE               	rrcf	postinc2,f,c
 14504  0163C4                     u12020:
 14505  0163C4  2EE8               	decfsz	wreg,f,c
 14506  0163C6  D7EF               	goto	u12025
 14507  0163C8                     l12724:
 14508                           
 14509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14510                           ;stkvar	_i @ sp[(-20)+14]
 14511  0163C8  0EFB               	movlw	-5
 14512  0163CA  BEE3               	btfsc	plusw1,7,c
 14513  0163CC  D03A               	goto	u12070
 14514  0163CE  0EFB               	movlw	-5
 14515  0163D0  50E3               	movf	plusw1,w,c
 14516  0163D2  E108               	bnz	u12030
 14517  0163D4  0EFA               	movlw	-6
 14518  0163D6  006F FF8C  F001    	movff	plusw1,btemp
 14519  0163DC  0E02               	movlw	2
 14520  0163DE  5E01               	subwf	btemp^0,f,c
 14521  0163E0  A0D8               	btfss	status,0,c
 14522  0163E2  D02F               	goto	u12070
 14523  0163E4                     u12030:
 14524                           
 14525                           ;stkvar	_n @ sp[(-20)+4]
 14526  0163E4  0EF0               	movlw	-16
 14527  0163E6  50E3               	movf	plusw1,w,c
 14528  0163E8  E115               	bnz	u12041
 14529  0163EA  0EF1               	movlw	-15
 14530  0163EC  50E3               	movf	plusw1,w,c
 14531  0163EE  E112               	bnz	u12041
 14532  0163F0  0EF2               	movlw	-14
 14533  0163F2  50E3               	movf	plusw1,w,c
 14534  0163F4  E10F               	bnz	u12041
 14535  0163F6  0EF3               	movlw	-13
 14536  0163F8  50E3               	movf	plusw1,w,c
 14537  0163FA  E10C               	bnz	u12041
 14538  0163FC  0EF4               	movlw	-12
 14539  0163FE  50E3               	movf	plusw1,w,c
 14540  016400  E109               	bnz	u12041
 14541  016402  0EF5               	movlw	-11
 14542  016404  50E3               	movf	plusw1,w,c
 14543  016406  E106               	bnz	u12041
 14544  016408  0EF6               	movlw	-10
 14545  01640A  50E3               	movf	plusw1,w,c
 14546  01640C  E103               	bnz	u12041
 14547  01640E  0EF7               	movlw	-9
 14548  016410  50E3               	movf	plusw1,w,c
 14549  016412  A4D8               	btfss	status,2,c
 14550  016414                     u12041:
 14551  016414  D6EB               	goto	l12692
 14552                           
 14553                           ;stkvar	_p @ sp[(-20)+18]
 14554  016416  0EFF               	movlw	-1
 14555  016418  BEE3               	btfsc	plusw1,7,c
 14556  01641A  D007               	goto	u12050
 14557  01641C  0EFF               	movlw	-1
 14558  01641E  50E3               	movf	plusw1,w,c
 14559  016420  E103               	bnz	u12051
 14560  016422  0EFE               	movlw	-2
 14561  016424  04E3               	decf	plusw1,w,c
 14562  016426  B0D8               	btfsc	status,0,c
 14563  016428                     u12051:
 14564  016428  D6E1               	goto	l12692
 14565  01642A                     u12050:
 14566                           
 14567                           ;stkvar	_w @ sp[(-20)+16]
 14568  01642A  0EFD               	movlw	-3
 14569  01642C  BEE3               	btfsc	plusw1,7,c
 14570  01642E  D009               	goto	u12070
 14571  016430  0EFD               	movlw	-3
 14572  016432  50E3               	movf	plusw1,w,c
 14573  016434  E104               	bnz	u12060
 14574  016436  0EFC               	movlw	-4
 14575  016438  04E3               	decf	plusw1,w,c
 14576  01643A  A0D8               	btfss	status,0,c
 14577  01643C  D002               	goto	u12070
 14578  01643E                     u12060:
 14579  01643E  B23E               	btfsc	_flags^0,1,c
 14580  016440  D6D5               	goto	l12692
 14581  016442                     u12070:
 14582                           
 14583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 14584  016442  A83E               	btfss	_flags^0,4,c
 14585  016444  D036               	goto	l12740
 14586                           
 14587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 14588                           ;stkvar	_i @ sp[(-20)+14]
 14589  016446  50E1               	movf	fsr1l,w,c
 14590  016448  0FFA               	addlw	-6
 14591  01644A  6ED9               	movwf	fsr2l,c
 14592  01644C  50E2               	movf	fsr1h,w,c
 14593  01644E  6EDA               	movwf	fsr2h,c
 14594  016450  0EFF               	movlw	255
 14595  016452  22DA               	addwfc	fsr2h,f,c
 14596  016454  06DE               	decf	postinc2,f,c
 14597  016456  0E00               	movlw	0
 14598  016458  5ADD               	subwfb	postdec2,f,c
 14599                           
 14600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 14601                           ;stkvar	_x @ sp[(-20)+-11]
 14602                           ;stkvar	_i @ sp[(-20)+14]
 14603  01645A  0EFA               	movlw	-6
 14604  01645C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14605  016462  0EFB               	movlw	-5
 14606  016464  006F FF8C  F00C    	movff	plusw1,btemp+11
 14607  01646A  0E97               	movlw	low _dbuf
 14608  01646C  240B               	addwf	(btemp+10)^0,w,c
 14609  01646E  6ED9               	movwf	fsr2l,c
 14610  016470  0E02               	movlw	high _dbuf
 14611  016472  200C               	addwfc	(btemp+11)^0,w,c
 14612  016474  6EDA               	movwf	fsr2h,c
 14613  016476  0EE1               	movlw	-31
 14614  016478  006F FF8F FFDF     	movff	plusw1,indf2
 14615                           
 14616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 14617                           ;stkvar	_i @ sp[(-20)+14]
 14618  01647E  50E1               	movf	fsr1l,w,c
 14619  016480  0FFA               	addlw	-6
 14620  016482  6ED9               	movwf	fsr2l,c
 14621  016484  50E2               	movf	fsr1h,w,c
 14622  016486  6EDA               	movwf	fsr2h,c
 14623  016488  0EFF               	movlw	255
 14624  01648A  22DA               	addwfc	fsr2h,f,c
 14625  01648C  06DE               	decf	postinc2,f,c
 14626  01648E  0E00               	movlw	0
 14627  016490  5ADD               	subwfb	postdec2,f,c
 14628                           
 14629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 14630                           ;stkvar	_i @ sp[(-20)+14]
 14631  016492  0EFA               	movlw	-6
 14632  016494  006F FF8C  F00B    	movff	plusw1,btemp+10
 14633  01649A  0EFB               	movlw	-5
 14634  01649C  006F FF8C  F00C    	movff	plusw1,btemp+11
 14635  0164A2  0E97               	movlw	low _dbuf
 14636  0164A4  240B               	addwf	(btemp+10)^0,w,c
 14637  0164A6  6ED9               	movwf	fsr2l,c
 14638  0164A8  0E02               	movlw	high _dbuf
 14639  0164AA  200C               	addwfc	(btemp+11)^0,w,c
 14640  0164AC  6EDA               	movwf	fsr2h,c
 14641  0164AE  0E30               	movlw	48
 14642  0164B0  6EDF               	movwf	indf2,c
 14643  0164B2                     l12740:
 14644                           
 14645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 14646                           ;stkvar	_w @ sp[(-20)+16]
 14647  0164B2  0EFC               	movlw	-4
 14648  0164B4  006F FF8F FFE6     	movff	plusw1,postinc1
 14649  0164BA  006F FF8F FFE6     	movff	plusw1,postinc1
 14650                           
 14651                           ;stkvar	_i @ sp[(-22)+14]
 14652  0164C0  0E97               	movlw	low _dbuf
 14653  0164C2  6E0B               	movwf	(btemp+10)^0,c
 14654  0164C4  0E02               	movlw	high _dbuf
 14655  0164C6  6E0C               	movwf	(btemp+11)^0,c
 14656  0164C8  0EF8               	movlw	-8
 14657  0164CA  50E3               	movf	plusw1,w,c
 14658  0164CC  260B               	addwf	(btemp+10)^0,f,c
 14659  0164CE  0EF9               	movlw	-7
 14660  0164D0  50E3               	movf	plusw1,w,c
 14661  0164D2  220C               	addwfc	(btemp+11)^0,f,c
 14662  0164D4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14663  0164DA  0060  F033  FFE6   	movff	btemp+11,postinc1
 14664                           
 14665                           ;stkvar	_fp @ sp[(-24)+-2]
 14666  0164E0  0EE6               	movlw	-26
 14667  0164E2  006F FF8F FFE6     	movff	plusw1,postinc1
 14668  0164E8  006F FF8F FFE6     	movff	plusw1,postinc1
 14669  0164EE  ECAC  F0CE         	call	_pad	;wreg free
 14670                           
 14671                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 14672  0164F2  0EE1               	movlw	225
 14673  0164F4  26E1               	addwf	fsr1l,f,c
 14674  0164F6  0EFF               	movlw	255
 14675  0164F8  22E2               	addwfc	fsr1h,f,c
 14676  0164FA  0012               	return		;funcret
 14677  0164FC                     __end_of_xtoa:
 14678                           	opt callstack 0
 14679                           
 14680 ;; *************** function _toupper *****************
 14681 ;; Defined at:
 14682 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 14683 ;; Parameters:    Size  Location     Type
 14684 ;;  c               2  [STACK] int 
 14685 ;; Auto vars:     Size  Location     Type
 14686 ;;		None
 14687 ;; Return value:  Size  Location     Type
 14688 ;;                  2  [STACK] int 
 14689 ;; Registers used:
 14690 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 14691 ;; Tracked objects:
 14692 ;;		On entry : 0/2
 14693 ;;		On exit  : 0/0
 14694 ;;		Unchanged: 0/0
 14695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14700 ;;Total ram usage:        0 bytes
 14701 ;; Hardware stack levels used:    1
 14702 ;; Hardware stack levels required when called:   16
 14703 ;; This function calls:
 14704 ;;		_islower
 14705 ;; This function is called by:
 14706 ;;		_xtoa
 14707 ;; This function uses a reentrant model
 14708 ;;
 14709                           
 14710                           	psect	text54
 14711  01AFC2                     __ptext54:
 14712                           	opt callstack 0
 14713  01AFC2                     _toupper:
 14714                           	opt callstack 0
 14715                           
 14716                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14717  01AFC2  52E6               	movf	postinc1,f,c
 14718  01AFC4  52E6               	movf	postinc1,f,c
 14719                           
 14720                           ;stkvar	_c @ sp[(-2)+-2]
 14721                           
 14722                           ;incstack = 0
 14723 ;; hardware stack exceeded
 14724  01AFC6  0EFC               	movlw	-4
 14725  01AFC8  50E3               	movf	plusw1,w,c
 14726  01AFCA  0F9F               	addlw	159
 14727  01AFCC  6E0B               	movwf	(btemp+10)^0,c
 14728  01AFCE  0EFD               	movlw	-3
 14729  01AFD0  006F FF8C  F00C    	movff	plusw1,btemp+11
 14730  01AFD6  0EFF               	movlw	255
 14731  01AFD8  220C               	addwfc	(btemp+11)^0,f,c
 14732  01AFDA  500C               	movf	(btemp+11)^0,w,c
 14733  01AFDC  E106               	bnz	u6310
 14734  01AFDE  0E1A               	movlw	26
 14735  01AFE0  5C0B               	subwf	(btemp+10)^0,w,c
 14736  01AFE2  B0D8               	btfsc	status,0,c
 14737  01AFE4  D002               	goto	u6310
 14738  01AFE6  0E01               	movlw	1
 14739  01AFE8  D001               	goto	u6320
 14740  01AFEA                     u6310:
 14741  01AFEA  0E00               	movlw	0
 14742  01AFEC                     u6320:
 14743  01AFEC  6E0B               	movwf	(btemp+10)^0,c
 14744  01AFEE  6A0C               	clrf	(btemp+11)^0,c
 14745                           
 14746                           ;stkvar	_toupper$6599 @ sp[(-2)+0]
 14747  01AFF0  0EFE               	movlw	-2
 14748  01AFF2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14749  01AFF8  0EFF               	movlw	-1
 14750  01AFFA  0060  F033  FFE3   	movff	btemp+11,plusw1
 14751                           
 14752                           ;stkvar	_toupper$6599 @ sp[(-2)+0]
 14753  01B000  0EFE               	movlw	-2
 14754  01B002  006F FF8C  F001    	movff	plusw1,btemp
 14755  01B008  0EFF               	movlw	-1
 14756  01B00A  50E3               	movf	plusw1,w,c
 14757  01B00C  1001               	iorwf	btemp^0,w,c
 14758  01B00E  B4D8               	btfsc	status,2,c
 14759  01B010  D00D               	goto	l8284
 14760                           
 14761                           ;stkvar	_c @ sp[(-2)+-2]
 14762  01B012  0EFC               	movlw	-4
 14763  01B014  006F FF8C  F001    	movff	plusw1,btemp
 14764  01B01A  0EFD               	movlw	-3
 14765  01B01C  006F FF8C  F002    	movff	plusw1,btemp+1
 14766  01B022  0E5F               	movlw	95
 14767  01B024  1601               	andwf	btemp^0,f,c
 14768  01B026  0E00               	movlw	0
 14769  01B028  1602               	andwf	(btemp+1)^0,f,c
 14770  01B02A  D008               	goto	l3565
 14771  01B02C                     l8284:
 14772                           
 14773                           ;stkvar	_c @ sp[(-2)+-2]
 14774  01B02C  0EFC               	movlw	-4
 14775  01B02E  006F FF8C  F001    	movff	plusw1,btemp
 14776  01B034  0EFD               	movlw	-3
 14777  01B036  006F FF8C  F002    	movff	plusw1,btemp+1
 14778  01B03C                     l3565:
 14779                           
 14780                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14781  01B03C  52E5               	movf	postdec1,f,c
 14782  01B03E  52E5               	movf	postdec1,f,c
 14783  01B040  52E5               	movf	postdec1,f,c
 14784  01B042  52E5               	movf	postdec1,f,c
 14785  01B044  0012               	return		;funcret
 14786  01B046                     __end_of_toupper:
 14787                           	opt callstack 0
 14788                           
 14789 ;; *************** function _islower *****************
 14790 ;; Defined at:
 14791 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 14792 ;; Parameters:    Size  Location     Type
 14793 ;;  c               2  [STACK] int 
 14794 ;; Auto vars:     Size  Location     Type
 14795 ;;		None
 14796 ;; Return value:  Size  Location     Type
 14797 ;;                  2  [STACK] int 
 14798 ;; Registers used:
 14799 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14800 ;; Tracked objects:
 14801 ;;		On entry : 0/0
 14802 ;;		On exit  : 0/0
 14803 ;;		Unchanged: 0/0
 14804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14809 ;;Total ram usage:        0 bytes
 14810 ;; Hardware stack levels used:    1
 14811 ;; Hardware stack levels required when called:   15
 14812 ;; This function calls:
 14813 ;;		Nothing
 14814 ;; This function is called by:
 14815 ;;		_toupper
 14816 ;; This function uses a reentrant model
 14817 ;;
 14818                           
 14819                           	psect	text55
 14820  01BE78                     __ptext55:
 14821                           	opt callstack 0
 14822  01BE78                     _islower:
 14823                           	opt callstack 0
 14824                           
 14825                           ;stkvar	_c @ sp[(0)+-2]
 14826                           
 14827                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14828                           ;incstack = 0
 14829 ;; hardware stack exceeded
 14830  01BE78  0EFE               	movlw	-2
 14831  01BE7A  50E3               	movf	plusw1,w,c
 14832  01BE7C  0F9F               	addlw	159
 14833  01BE7E  6E0B               	movwf	(btemp+10)^0,c
 14834  01BE80  0EFF               	movlw	-1
 14835  01BE82  006F FF8C  F00C    	movff	plusw1,btemp+11
 14836  01BE88  0EFF               	movlw	255
 14837  01BE8A  220C               	addwfc	(btemp+11)^0,f,c
 14838  01BE8C  500C               	movf	(btemp+11)^0,w,c
 14839  01BE8E  E106               	bnz	u5950
 14840  01BE90  0E1A               	movlw	26
 14841  01BE92  5C0B               	subwf	(btemp+10)^0,w,c
 14842  01BE94  B0D8               	btfsc	status,0,c
 14843  01BE96  D002               	goto	u5950
 14844  01BE98  0E01               	movlw	1
 14845  01BE9A  D001               	goto	u5960
 14846  01BE9C                     u5950:
 14847  01BE9C  0E00               	movlw	0
 14848  01BE9E                     u5960:
 14849  01BE9E  6E01               	movwf	btemp^0,c
 14850  01BEA0  6A02               	clrf	(btemp+1)^0,c
 14851                           
 14852                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14853  01BEA2  52E5               	movf	postdec1,f,c
 14854  01BEA4  52E5               	movf	postdec1,f,c
 14855  01BEA6  0012               	return		;funcret
 14856  01BEA8                     __end_of_islower:
 14857                           	opt callstack 0
 14858                           
 14859 ;; *************** function _isalpha *****************
 14860 ;; Defined at:
 14861 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 14862 ;; Parameters:    Size  Location     Type
 14863 ;;  c               2  [STACK] int 
 14864 ;; Auto vars:     Size  Location     Type
 14865 ;;		None
 14866 ;; Return value:  Size  Location     Type
 14867 ;;                  2  [STACK] int 
 14868 ;; Registers used:
 14869 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 14870 ;; Tracked objects:
 14871 ;;		On entry : 0/0
 14872 ;;		On exit  : 0/0
 14873 ;;		Unchanged: 0/0
 14874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14879 ;;Total ram usage:        0 bytes
 14880 ;; Hardware stack levels used:    1
 14881 ;; Hardware stack levels required when called:   15
 14882 ;; This function calls:
 14883 ;;		Nothing
 14884 ;; This function is called by:
 14885 ;;		_xtoa
 14886 ;; This function uses a reentrant model
 14887 ;;
 14888                           
 14889                           	psect	text56
 14890  01BA5E                     __ptext56:
 14891                           	opt callstack 0
 14892  01BA5E                     _isalpha:
 14893                           	opt callstack 0
 14894                           
 14895                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14896                           ;incstack = 0
 14897 ;; hardware stack exceeded
 14898  01BA5E  0E9F               	movlw	159
 14899  01BA60  6E0B               	movwf	(btemp+10)^0,c
 14900  01BA62  0EFF               	movlw	255
 14901  01BA64  6E0C               	movwf	(btemp+11)^0,c
 14902                           
 14903                           ;stkvar	_c @ sp[(0)+-2]
 14904  01BA66  0EFE               	movlw	-2
 14905  01BA68  006F FF8C  F009    	movff	plusw1,btemp+8
 14906  01BA6E  0EFF               	movlw	-1
 14907  01BA70  006F FF8C  F00A    	movff	plusw1,btemp+9
 14908  01BA76  0E20               	movlw	32
 14909  01BA78  1209               	iorwf	(btemp+8)^0,f,c
 14910  01BA7A  0E00               	movlw	0
 14911  01BA7C  120A               	iorwf	(btemp+9)^0,f,c
 14912  01BA7E  500B               	movf	(btemp+10)^0,w,c
 14913  01BA80  2609               	addwf	(btemp+8)^0,f,c
 14914  01BA82  500C               	movf	(btemp+11)^0,w,c
 14915  01BA84  220A               	addwfc	(btemp+9)^0,f,c
 14916  01BA86  500A               	movf	(btemp+9)^0,w,c
 14917  01BA88  E106               	bnz	u6290
 14918  01BA8A  0E1A               	movlw	26
 14919  01BA8C  5C09               	subwf	(btemp+8)^0,w,c
 14920  01BA8E  B0D8               	btfsc	status,0,c
 14921  01BA90  D002               	goto	u6290
 14922  01BA92  0E01               	movlw	1
 14923  01BA94  D001               	goto	u6300
 14924  01BA96                     u6290:
 14925  01BA96  0E00               	movlw	0
 14926  01BA98                     u6300:
 14927  01BA98  6E01               	movwf	btemp^0,c
 14928  01BA9A  6A02               	clrf	(btemp+1)^0,c
 14929                           
 14930                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14931  01BA9C  52E5               	movf	postdec1,f,c
 14932  01BA9E  52E5               	movf	postdec1,f,c
 14933  01BAA0  0012               	return		;funcret
 14934  01BAA2                     __end_of_isalpha:
 14935                           	opt callstack 0
 14936                           
 14937 ;; *************** function _utoa *****************
 14938 ;; Defined at:
 14939 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14940 ;; Parameters:    Size  Location     Type
 14941 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14942 ;;		 -> f(6), NULL(0), 
 14943 ;;  d               8  [STACK] unsigned long long 
 14944 ;; Auto vars:     Size  Location     Type
 14945 ;;  n               8  [STACK] unsigned long long 
 14946 ;;  i               2  [STACK] int 
 14947 ;;  w               2  [STACK] int 
 14948 ;;  p               2  [STACK] int 
 14949 ;; Return value:  Size  Location     Type
 14950 ;;                  2  [STACK] int 
 14951 ;; Registers used:
 14952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 14953 ;; Tracked objects:
 14954 ;;		On entry : 0/0
 14955 ;;		On exit  : 0/0
 14956 ;;		Unchanged: 0/0
 14957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14962 ;;Total ram usage:        0 bytes
 14963 ;; Hardware stack levels used:    1
 14964 ;; Hardware stack levels required when called:   20
 14965 ;; This function calls:
 14966 ;;		___lodiv
 14967 ;;		___lomod
 14968 ;;		_pad
 14969 ;; This function is called by:
 14970 ;;		_vfpfcnvrt
 14971 ;; This function uses a reentrant model
 14972 ;;
 14973                           
 14974                           	psect	text57
 14975  016868                     __ptext57:
 14976                           	opt callstack 0
 14977  016868                     _utoa:
 14978                           	opt callstack 0
 14979                           
 14980                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 14981  016868  0E0E               	movlw	14
 14982  01686A  26E1               	addwf	fsr1l,f,c
 14983  01686C  0E00               	movlw	0
 14984  01686E  22E2               	addwfc	fsr1h,f,c
 14985                           
 14986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 14987                           
 14988                           ;incstack = 0
 14989 ;; hardware stack exceeded
 14990  016870  AE3D               	btfss	(_prec+1)^0,7,c
 14991                           
 14992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 14993  016872  923E               	bcf	_flags^0,1,c
 14994                           
 14995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 14996  016874  BE3D               	btfsc	(_prec+1)^0,7,c
 14997  016876  D005               	goto	u11840
 14998  016878  503D               	movf	(_prec+1)^0,w,c
 14999  01687A  E110               	bnz	l12640
 15000  01687C  043C               	decf	_prec^0,w,c
 15001  01687E  B0D8               	btfsc	status,0,c
 15002  016880  D00D               	goto	l12640
 15003  016882                     u11840:
 15004  016882  0E01               	movlw	1
 15005  016884  6E0B               	movwf	(btemp+10)^0,c
 15006  016886  0E00               	movlw	0
 15007  016888  6E0C               	movwf	(btemp+11)^0,c
 15008                           
 15009                           ;stkvar	_p @ sp[(-14)+12]
 15010  01688A  0EFE               	movlw	-2
 15011  01688C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15012  016892  0EFF               	movlw	-1
 15013  016894  0060  F033  FFE3   	movff	btemp+11,plusw1
 15014  01689A  D008               	goto	l2383
 15015  01689C                     l12640:
 15016                           
 15017                           ;stkvar	_p @ sp[(-14)+12]
 15018  01689C  0EFE               	movlw	-2
 15019  01689E  0060  F0F3  FFE3   	movff	_prec,plusw1
 15020  0168A4  0EFF               	movlw	-1
 15021  0168A6  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 15022  0168AC                     l2383:
 15023                           
 15024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 15025                           ;stkvar	_w @ sp[(-14)+10]
 15026  0168AC  0EFC               	movlw	-4
 15027  0168AE  0060  F0EB  FFE3   	movff	_width,plusw1
 15028  0168B4  0EFD               	movlw	-3
 15029  0168B6  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15030                           
 15031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 15032                           ;stkvar	_d @ sp[(-14)+-10]
 15033  0168BC  0EE8               	movlw	232
 15034  0168BE  24E1               	addwf	fsr1l,w,c
 15035  0168C0  6ED9               	movwf	fsr2l,c
 15036  0168C2  0EFF               	movlw	255
 15037  0168C4  20E2               	addwfc	fsr1h,w,c
 15038  0168C6  6EDA               	movwf	fsr2h,c
 15039                           
 15040                           ;stkvar	_n @ sp[(-14)+0]
 15041  0168C8  0E08               	movlw	8
 15042  0168CA  6E01               	movwf	btemp^0,c
 15043  0168CC  0EF2               	movlw	-14
 15044  0168CE                     us1185999:
 15045  0168CE  006F FF7B FFE3     	movff	postinc2,plusw1
 15046  0168D4  28E8               	incf	wreg,w,c
 15047  0168D6  2E01               	decfsz	btemp^0,f,c
 15048  0168D8  D7FA               	bra	us1185999
 15049                           
 15050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 15051  0168DA  0E4F               	movlw	79
 15052  0168DC  6E0B               	movwf	(btemp+10)^0,c
 15053  0168DE  0E00               	movlw	0
 15054  0168E0  6E0C               	movwf	(btemp+11)^0,c
 15055                           
 15056                           ;stkvar	_i @ sp[(-14)+8]
 15057  0168E2  0EFA               	movlw	-6
 15058  0168E4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15059  0168EA  0EFB               	movlw	-5
 15060  0168EC  0060  F033  FFE3   	movff	btemp+11,plusw1
 15061                           
 15062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 15063  0168F2  0102               	movlb	2	; () banked
 15064  0168F4  6BE6               	clrf	(_dbuf+79)& (0+255),b
 15065                           
 15066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 15067  0168F6  D0FB               	goto	l12658
 15068  0168F8                     l12648:
 15069                           
 15070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 15071                           ;stkvar	_i @ sp[(-14)+8]
 15072  0168F8  50E1               	movf	fsr1l,w,c
 15073  0168FA  0FFA               	addlw	-6
 15074  0168FC  6ED9               	movwf	fsr2l,c
 15075  0168FE  50E2               	movf	fsr1h,w,c
 15076  016900  6EDA               	movwf	fsr2h,c
 15077  016902  0EFF               	movlw	255
 15078  016904  22DA               	addwfc	fsr2h,f,c
 15079  016906  06DE               	decf	postinc2,f,c
 15080  016908  0E00               	movlw	0
 15081  01690A  5ADD               	subwfb	postdec2,f,c
 15082                           
 15083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 15084  01690C  0E0A               	movlw	10
 15085  01690E  6EE6               	movwf	postinc1,c
 15086  016910  0E00               	movlw	0
 15087  016912  6EE6               	movwf	postinc1,c
 15088  016914  0E00               	movlw	0
 15089  016916  6EE6               	movwf	postinc1,c
 15090  016918  0E00               	movlw	0
 15091  01691A  6EE6               	movwf	postinc1,c
 15092  01691C  0E00               	movlw	0
 15093  01691E  6EE6               	movwf	postinc1,c
 15094  016920  0E00               	movlw	0
 15095  016922  6EE6               	movwf	postinc1,c
 15096  016924  0E00               	movlw	0
 15097  016926  6EE6               	movwf	postinc1,c
 15098  016928  0E00               	movlw	0
 15099  01692A  6EE6               	movwf	postinc1,c
 15100                           
 15101                           ;stkvar	_n @ sp[(-22)+0]
 15102  01692C  50E1               	movf	fsr1l,w,c
 15103  01692E  0FEA               	addlw	-22
 15104  016930  6ED9               	movwf	fsr2l,c
 15105  016932  50E2               	movf	fsr1h,w,c
 15106  016934  6EDA               	movwf	fsr2h,c
 15107  016936  0EFF               	movlw	255
 15108  016938  22DA               	addwfc	fsr2h,f,c
 15109  01693A  006F FF7B FFE6     	movff	postinc2,postinc1
 15110  016940  006F FF7B FFE6     	movff	postinc2,postinc1
 15111  016946  006F FF7B FFE6     	movff	postinc2,postinc1
 15112  01694C  006F FF7B FFE6     	movff	postinc2,postinc1
 15113  016952  006F FF7B FFE6     	movff	postinc2,postinc1
 15114  016958  006F FF7B FFE6     	movff	postinc2,postinc1
 15115  01695E  006F FF7B FFE6     	movff	postinc2,postinc1
 15116  016964  006F FF7B FFE6     	movff	postinc2,postinc1
 15117  01696A  EC30  F0CB         	call	___lomod	;wreg free
 15118  01696E  52E5               	movf	postdec1,f,c
 15119  016970  006F FF9C  F018    	movff	indf1,btemp+23
 15120  016976  52E5               	movf	postdec1,f,c
 15121  016978  006F FF9C  F017    	movff	indf1,btemp+22
 15122  01697E  52E5               	movf	postdec1,f,c
 15123  016980  006F FF9C  F016    	movff	indf1,btemp+21
 15124  016986  52E5               	movf	postdec1,f,c
 15125  016988  006F FF9C  F015    	movff	indf1,btemp+20
 15126  01698E  52E5               	movf	postdec1,f,c
 15127  016990  006F FF9C  F014    	movff	indf1,btemp+19
 15128  016996  52E5               	movf	postdec1,f,c
 15129  016998  006F FF9C  F013    	movff	indf1,btemp+18
 15130  01699E  52E5               	movf	postdec1,f,c
 15131  0169A0  006F FF9C  F012    	movff	indf1,btemp+17
 15132  0169A6  52E5               	movf	postdec1,f,c
 15133  0169A8  006F FF9C  F011    	movff	indf1,btemp+16
 15134  0169AE  0EF8               	movlw	248
 15135  0169B0  26E1               	addwf	fsr1l,f,c
 15136  0169B2  0EFF               	movlw	255
 15137  0169B4  22E2               	addwfc	fsr1h,f,c
 15138  0169B6  0E30               	movlw	48
 15139  0169B8  2611               	addwf	(btemp+16)^0,f,c
 15140                           
 15141                           ;stkvar	_i @ sp[(-14)+8]
 15142  0169BA  0EFA               	movlw	-6
 15143  0169BC  006F FF8C  F00B    	movff	plusw1,btemp+10
 15144  0169C2  0EFB               	movlw	-5
 15145  0169C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 15146  0169CA  0E97               	movlw	low _dbuf
 15147  0169CC  240B               	addwf	(btemp+10)^0,w,c
 15148  0169CE  6ED9               	movwf	fsr2l,c
 15149  0169D0  0E02               	movlw	high _dbuf
 15150  0169D2  200C               	addwfc	(btemp+11)^0,w,c
 15151  0169D4  6EDA               	movwf	fsr2h,c
 15152  0169D6  0060  F047  FFDF   	movff	btemp+16,indf2
 15153                           
 15154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 15155                           ;stkvar	_p @ sp[(-14)+12]
 15156  0169DC  50E1               	movf	fsr1l,w,c
 15157  0169DE  0FFE               	addlw	-2
 15158  0169E0  6ED9               	movwf	fsr2l,c
 15159  0169E2  50E2               	movf	fsr1h,w,c
 15160  0169E4  6EDA               	movwf	fsr2h,c
 15161  0169E6  0EFF               	movlw	255
 15162  0169E8  22DA               	addwfc	fsr2h,f,c
 15163  0169EA  06DE               	decf	postinc2,f,c
 15164  0169EC  0E00               	movlw	0
 15165  0169EE  5ADD               	subwfb	postdec2,f,c
 15166                           
 15167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 15168                           ;stkvar	_w @ sp[(-14)+10]
 15169  0169F0  50E1               	movf	fsr1l,w,c
 15170  0169F2  0FFC               	addlw	-4
 15171  0169F4  6ED9               	movwf	fsr2l,c
 15172  0169F6  50E2               	movf	fsr1h,w,c
 15173  0169F8  6EDA               	movwf	fsr2h,c
 15174  0169FA  0EFF               	movlw	255
 15175  0169FC  22DA               	addwfc	fsr2h,f,c
 15176  0169FE  06DE               	decf	postinc2,f,c
 15177  016A00  0E00               	movlw	0
 15178  016A02  5ADD               	subwfb	postdec2,f,c
 15179                           
 15180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 15181  016A04  0E0A               	movlw	10
 15182  016A06  6EE6               	movwf	postinc1,c
 15183  016A08  0E00               	movlw	0
 15184  016A0A  6EE6               	movwf	postinc1,c
 15185  016A0C  0E00               	movlw	0
 15186  016A0E  6EE6               	movwf	postinc1,c
 15187  016A10  0E00               	movlw	0
 15188  016A12  6EE6               	movwf	postinc1,c
 15189  016A14  0E00               	movlw	0
 15190  016A16  6EE6               	movwf	postinc1,c
 15191  016A18  0E00               	movlw	0
 15192  016A1A  6EE6               	movwf	postinc1,c
 15193  016A1C  0E00               	movlw	0
 15194  016A1E  6EE6               	movwf	postinc1,c
 15195  016A20  0E00               	movlw	0
 15196  016A22  6EE6               	movwf	postinc1,c
 15197                           
 15198                           ;stkvar	_n @ sp[(-22)+0]
 15199  016A24  50E1               	movf	fsr1l,w,c
 15200  016A26  0FEA               	addlw	-22
 15201  016A28  6ED9               	movwf	fsr2l,c
 15202  016A2A  50E2               	movf	fsr1h,w,c
 15203  016A2C  6EDA               	movwf	fsr2h,c
 15204  016A2E  0EFF               	movlw	255
 15205  016A30  22DA               	addwfc	fsr2h,f,c
 15206  016A32  006F FF7B FFE6     	movff	postinc2,postinc1
 15207  016A38  006F FF7B FFE6     	movff	postinc2,postinc1
 15208  016A3E  006F FF7B FFE6     	movff	postinc2,postinc1
 15209  016A44  006F FF7B FFE6     	movff	postinc2,postinc1
 15210  016A4A  006F FF7B FFE6     	movff	postinc2,postinc1
 15211  016A50  006F FF7B FFE6     	movff	postinc2,postinc1
 15212  016A56  006F FF7B FFE6     	movff	postinc2,postinc1
 15213  016A5C  006F FF7B FFE6     	movff	postinc2,postinc1
 15214  016A62  ECAD  F0C7         	call	___lodiv	;wreg free
 15215  016A66  52E5               	movf	postdec1,f,c
 15216  016A68  006F FF9C  F018    	movff	indf1,btemp+23
 15217  016A6E  52E5               	movf	postdec1,f,c
 15218  016A70  006F FF9C  F017    	movff	indf1,btemp+22
 15219  016A76  52E5               	movf	postdec1,f,c
 15220  016A78  006F FF9C  F016    	movff	indf1,btemp+21
 15221  016A7E  52E5               	movf	postdec1,f,c
 15222  016A80  006F FF9C  F015    	movff	indf1,btemp+20
 15223  016A86  52E5               	movf	postdec1,f,c
 15224  016A88  006F FF9C  F014    	movff	indf1,btemp+19
 15225  016A8E  52E5               	movf	postdec1,f,c
 15226  016A90  006F FF9C  F013    	movff	indf1,btemp+18
 15227  016A96  52E5               	movf	postdec1,f,c
 15228  016A98  006F FF9C  F012    	movff	indf1,btemp+17
 15229  016A9E  52E5               	movf	postdec1,f,c
 15230  016AA0  006F FF9C  F011    	movff	indf1,btemp+16
 15231  016AA6  0EF8               	movlw	248
 15232  016AA8  26E1               	addwf	fsr1l,f,c
 15233  016AAA  0EFF               	movlw	255
 15234  016AAC  22E2               	addwfc	fsr1h,f,c
 15235                           
 15236                           ;stkvar	_n @ sp[(-14)+0]
 15237  016AAE  0EF2               	movlw	-14
 15238  016AB0  0060  F047  FFE3   	movff	btemp+16,plusw1
 15239  016AB6  0EF3               	movlw	-13
 15240  016AB8  0060  F04B  FFE3   	movff	btemp+17,plusw1
 15241  016ABE  0EF4               	movlw	-12
 15242  016AC0  0060  F04F  FFE3   	movff	btemp+18,plusw1
 15243  016AC6  0EF5               	movlw	-11
 15244  016AC8  0060  F053  FFE3   	movff	btemp+19,plusw1
 15245  016ACE  0EF6               	movlw	-10
 15246  016AD0  0060  F057  FFE3   	movff	btemp+20,plusw1
 15247  016AD6  0EF7               	movlw	-9
 15248  016AD8  0060  F05B  FFE3   	movff	btemp+21,plusw1
 15249  016ADE  0EF8               	movlw	-8
 15250  016AE0  0060  F05F  FFE3   	movff	btemp+22,plusw1
 15251  016AE6  0EF9               	movlw	-7
 15252  016AE8  0060  F063  FFE3   	movff	btemp+23,plusw1
 15253  016AEE                     l12658:
 15254                           
 15255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 15256                           ;stkvar	_i @ sp[(-14)+8]
 15257  016AEE  0EFA               	movlw	-6
 15258  016AF0  006F FF8C  F001    	movff	plusw1,btemp
 15259  016AF6  0EFB               	movlw	-5
 15260  016AF8  50E3               	movf	plusw1,w,c
 15261  016AFA  1001               	iorwf	btemp^0,w,c
 15262  016AFC  B4D8               	btfsc	status,2,c
 15263  016AFE  D02F               	goto	u11900
 15264                           
 15265                           ;stkvar	_n @ sp[(-14)+0]
 15266  016B00  0EF2               	movlw	-14
 15267  016B02  50E3               	movf	plusw1,w,c
 15268  016B04  E115               	bnz	u11871
 15269  016B06  0EF3               	movlw	-13
 15270  016B08  50E3               	movf	plusw1,w,c
 15271  016B0A  E112               	bnz	u11871
 15272  016B0C  0EF4               	movlw	-12
 15273  016B0E  50E3               	movf	plusw1,w,c
 15274  016B10  E10F               	bnz	u11871
 15275  016B12  0EF5               	movlw	-11
 15276  016B14  50E3               	movf	plusw1,w,c
 15277  016B16  E10C               	bnz	u11871
 15278  016B18  0EF6               	movlw	-10
 15279  016B1A  50E3               	movf	plusw1,w,c
 15280  016B1C  E109               	bnz	u11871
 15281  016B1E  0EF7               	movlw	-9
 15282  016B20  50E3               	movf	plusw1,w,c
 15283  016B22  E106               	bnz	u11871
 15284  016B24  0EF8               	movlw	-8
 15285  016B26  50E3               	movf	plusw1,w,c
 15286  016B28  E103               	bnz	u11871
 15287  016B2A  0EF9               	movlw	-7
 15288  016B2C  50E3               	movf	plusw1,w,c
 15289  016B2E  A4D8               	btfss	status,2,c
 15290  016B30                     u11871:
 15291  016B30  D6E3               	goto	l12648
 15292                           
 15293                           ;stkvar	_p @ sp[(-14)+12]
 15294  016B32  0EFF               	movlw	-1
 15295  016B34  BEE3               	btfsc	plusw1,7,c
 15296  016B36  D007               	goto	u11880
 15297  016B38  0EFF               	movlw	-1
 15298  016B3A  50E3               	movf	plusw1,w,c
 15299  016B3C  E103               	bnz	u11881
 15300  016B3E  0EFE               	movlw	-2
 15301  016B40  04E3               	decf	plusw1,w,c
 15302  016B42  B0D8               	btfsc	status,0,c
 15303  016B44                     u11881:
 15304  016B44  D6D9               	goto	l12648
 15305  016B46                     u11880:
 15306                           
 15307                           ;stkvar	_w @ sp[(-14)+10]
 15308  016B46  0EFD               	movlw	-3
 15309  016B48  BEE3               	btfsc	plusw1,7,c
 15310  016B4A  D009               	goto	u11900
 15311  016B4C  0EFD               	movlw	-3
 15312  016B4E  50E3               	movf	plusw1,w,c
 15313  016B50  E104               	bnz	u11890
 15314  016B52  0EFC               	movlw	-4
 15315  016B54  04E3               	decf	plusw1,w,c
 15316  016B56  A0D8               	btfss	status,0,c
 15317  016B58  D002               	goto	u11900
 15318  016B5A                     u11890:
 15319  016B5A  B23E               	btfsc	_flags^0,1,c
 15320  016B5C  D6CD               	goto	l12648
 15321  016B5E                     u11900:
 15322                           
 15323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 15324                           ;stkvar	_w @ sp[(-14)+10]
 15325  016B5E  0EFC               	movlw	-4
 15326  016B60  006F FF8F FFE6     	movff	plusw1,postinc1
 15327  016B66  006F FF8F FFE6     	movff	plusw1,postinc1
 15328                           
 15329                           ;stkvar	_i @ sp[(-16)+8]
 15330  016B6C  0E97               	movlw	low _dbuf
 15331  016B6E  6E0B               	movwf	(btemp+10)^0,c
 15332  016B70  0E02               	movlw	high _dbuf
 15333  016B72  6E0C               	movwf	(btemp+11)^0,c
 15334  016B74  0EF8               	movlw	-8
 15335  016B76  50E3               	movf	plusw1,w,c
 15336  016B78  260B               	addwf	(btemp+10)^0,f,c
 15337  016B7A  0EF9               	movlw	-7
 15338  016B7C  50E3               	movf	plusw1,w,c
 15339  016B7E  220C               	addwfc	(btemp+11)^0,f,c
 15340  016B80  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15341  016B86  0060  F033  FFE6   	movff	btemp+11,postinc1
 15342                           
 15343                           ;stkvar	_fp @ sp[(-18)+-2]
 15344  016B8C  0EEC               	movlw	-20
 15345  016B8E  006F FF8F FFE6     	movff	plusw1,postinc1
 15346  016B94  006F FF8F FFE6     	movff	plusw1,postinc1
 15347  016B9A  ECAC  F0CE         	call	_pad	;wreg free
 15348                           
 15349                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 15350  016B9E  0EE8               	movlw	232
 15351  016BA0  26E1               	addwf	fsr1l,f,c
 15352  016BA2  0EFF               	movlw	255
 15353  016BA4  22E2               	addwfc	fsr1h,f,c
 15354  016BA6  0012               	return		;funcret
 15355  016BA8                     __end_of_utoa:
 15356                           	opt callstack 0
 15357                           
 15358 ;; *************** function ___lomod *****************
 15359 ;; Defined at:
 15360 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 15361 ;; Parameters:    Size  Location     Type
 15362 ;;  dividend        8  [STACK] unsigned long long 
 15363 ;;  divisor         8  [STACK] unsigned long long 
 15364 ;; Auto vars:     Size  Location     Type
 15365 ;;  counter         1  [STACK] unsigned char 
 15366 ;; Return value:  Size  Location     Type
 15367 ;;                  8  [STACK] unsigned long long 
 15368 ;; Registers used:
 15369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 15370 ;; Tracked objects:
 15371 ;;		On entry : 0/2
 15372 ;;		On exit  : 0/0
 15373 ;;		Unchanged: 0/0
 15374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15379 ;;Total ram usage:        0 bytes
 15380 ;; Hardware stack levels used:    1
 15381 ;; Hardware stack levels required when called:   15
 15382 ;; This function calls:
 15383 ;;		Nothing
 15384 ;; This function is called by:
 15385 ;;		_utoa
 15386 ;; This function uses a reentrant model
 15387 ;;
 15388                           
 15389                           	psect	text58
 15390  019660                     __ptext58:
 15391                           	opt callstack 0
 15392  019660                     ___lomod:
 15393                           	opt callstack 0
 15394                           
 15395                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 15396  019660  52E6               	movf	postinc1,f,c
 15397                           
 15398                           ;stkvar	_divisor @ sp[(-1)+-16]
 15399                           
 15400                           ;incstack = 0
 15401 ;; hardware stack exceeded
 15402  019662  0EEF               	movlw	-17
 15403  019664  50E3               	movf	plusw1,w,c
 15404  019666  E116               	bnz	u7440
 15405  019668  0EF0               	movlw	-16
 15406  01966A  50E3               	movf	plusw1,w,c
 15407  01966C  E113               	bnz	u7440
 15408  01966E  0EF1               	movlw	-15
 15409  019670  50E3               	movf	plusw1,w,c
 15410  019672  E110               	bnz	u7440
 15411  019674  0EF2               	movlw	-14
 15412  019676  50E3               	movf	plusw1,w,c
 15413  019678  E10D               	bnz	u7440
 15414  01967A  0EF3               	movlw	-13
 15415  01967C  50E3               	movf	plusw1,w,c
 15416  01967E  E10A               	bnz	u7440
 15417  019680  0EF4               	movlw	-12
 15418  019682  50E3               	movf	plusw1,w,c
 15419  019684  E107               	bnz	u7440
 15420  019686  0EF5               	movlw	-11
 15421  019688  50E3               	movf	plusw1,w,c
 15422  01968A  E104               	bnz	u7440
 15423  01968C  0EF6               	movlw	-10
 15424  01968E  50E3               	movf	plusw1,w,c
 15425  019690  B4D8               	btfsc	status,2,c
 15426  019692  D075               	goto	u7470
 15427  019694                     u7440:
 15428                           
 15429                           ;stkvar	_counter @ sp[(-1)+0]
 15430  019694  0EFF               	movlw	-1
 15431  019696  6AE3               	clrf	plusw1,c
 15432  019698  D012               	goto	L15
 15433  01969A                     l8894:
 15434                           
 15435                           ;stkvar	_divisor @ sp[(-1)+-16]
 15436  01969A  90D8               	bcf	status,0,c
 15437  01969C  0EEF               	movlw	-17
 15438  01969E  36E3               	rlcf	plusw1,f,c
 15439  0196A0  0EF0               	movlw	-16
 15440  0196A2  36E3               	rlcf	plusw1,f,c
 15441  0196A4  0EF1               	movlw	-15
 15442  0196A6  36E3               	rlcf	plusw1,f,c
 15443  0196A8  0EF2               	movlw	-14
 15444  0196AA  36E3               	rlcf	plusw1,f,c
 15445  0196AC  0EF3               	movlw	-13
 15446  0196AE  36E3               	rlcf	plusw1,f,c
 15447  0196B0  0EF4               	movlw	-12
 15448  0196B2  36E3               	rlcf	plusw1,f,c
 15449  0196B4  0EF5               	movlw	-11
 15450  0196B6  36E3               	rlcf	plusw1,f,c
 15451  0196B8  0EF6               	movlw	-10
 15452  0196BA  36E3               	rlcf	plusw1,f,c
 15453                           
 15454                           ;stkvar	_counter @ sp[(-1)+0]
 15455  0196BC  0EFF               	movlw	-1
 15456  0196BE                     L15:
 15457  0196BE  2AE3               	incf	plusw1,f,c
 15458                           
 15459                           ;stkvar	_divisor @ sp[(-1)+-16]
 15460  0196C0  0EF6               	movlw	-10
 15461  0196C2  AEE3               	btfss	plusw1,7,c
 15462  0196C4  D7EA               	goto	l8894
 15463  0196C6                     u7450:
 15464                           
 15465                           ;stkvar	_divisor @ sp[(-1)+-16]
 15466                           ;stkvar	_dividend @ sp[(-1)+-8]
 15467  0196C6  50E1               	movf	fsr1l,w,c
 15468  0196C8  0FF7               	addlw	-9
 15469  0196CA  6ED9               	movwf	fsr2l,c
 15470  0196CC  50E2               	movf	fsr1h,w,c
 15471  0196CE  6EDA               	movwf	fsr2h,c
 15472  0196D0  0EFF               	movlw	255
 15473  0196D2  22DA               	addwfc	fsr2h,f,c
 15474  0196D4  0EEF               	movlw	-17
 15475  0196D6  50E3               	movf	plusw1,w,c
 15476  0196D8  5CDE               	subwf	postinc2,w,c
 15477  0196DA  0EF0               	movlw	-16
 15478  0196DC  50E3               	movf	plusw1,w,c
 15479  0196DE  58DE               	subwfb	postinc2,w,c
 15480  0196E0  0EF1               	movlw	-15
 15481  0196E2  50E3               	movf	plusw1,w,c
 15482  0196E4  58DE               	subwfb	postinc2,w,c
 15483  0196E6  0EF2               	movlw	-14
 15484  0196E8  50E3               	movf	plusw1,w,c
 15485  0196EA  58DE               	subwfb	postinc2,w,c
 15486  0196EC  0EF3               	movlw	-13
 15487  0196EE  50E3               	movf	plusw1,w,c
 15488  0196F0  58DE               	subwfb	postinc2,w,c
 15489  0196F2  0EF4               	movlw	-12
 15490  0196F4  50E3               	movf	plusw1,w,c
 15491  0196F6  58DE               	subwfb	postinc2,w,c
 15492  0196F8  0EF5               	movlw	-11
 15493  0196FA  50E3               	movf	plusw1,w,c
 15494  0196FC  58DE               	subwfb	postinc2,w,c
 15495  0196FE  0EF6               	movlw	-10
 15496  019700  50E3               	movf	plusw1,w,c
 15497  019702  58DE               	subwfb	postinc2,w,c
 15498  019704  A0D8               	btfss	status,0,c
 15499  019706  D01F               	goto	l8902
 15500                           
 15501                           ;stkvar	_divisor @ sp[(-1)+-16]
 15502                           ;stkvar	_dividend @ sp[(-1)+-8]
 15503  019708  50E1               	movf	fsr1l,w,c
 15504  01970A  0FF7               	addlw	-9
 15505  01970C  6ED9               	movwf	fsr2l,c
 15506  01970E  50E2               	movf	fsr1h,w,c
 15507  019710  6EDA               	movwf	fsr2h,c
 15508  019712  0EFF               	movlw	255
 15509  019714  22DA               	addwfc	fsr2h,f,c
 15510  019716  0EEF               	movlw	-17
 15511  019718  50E3               	movf	plusw1,w,c
 15512  01971A  5EDE               	subwf	postinc2,f,c
 15513  01971C  0EF0               	movlw	-16
 15514  01971E  50E3               	movf	plusw1,w,c
 15515  019720  5ADE               	subwfb	postinc2,f,c
 15516  019722  0EF1               	movlw	-15
 15517  019724  50E3               	movf	plusw1,w,c
 15518  019726  5ADE               	subwfb	postinc2,f,c
 15519  019728  0EF2               	movlw	-14
 15520  01972A  50E3               	movf	plusw1,w,c
 15521  01972C  5ADE               	subwfb	postinc2,f,c
 15522  01972E  0EF3               	movlw	-13
 15523  019730  50E3               	movf	plusw1,w,c
 15524  019732  5ADE               	subwfb	postinc2,f,c
 15525  019734  0EF4               	movlw	-12
 15526  019736  50E3               	movf	plusw1,w,c
 15527  019738  5ADE               	subwfb	postinc2,f,c
 15528  01973A  0EF5               	movlw	-11
 15529  01973C  50E3               	movf	plusw1,w,c
 15530  01973E  5ADE               	subwfb	postinc2,f,c
 15531  019740  0EF6               	movlw	-10
 15532  019742  50E3               	movf	plusw1,w,c
 15533  019744  5ADE               	subwfb	postinc2,f,c
 15534  019746                     l8902:
 15535                           
 15536                           ;stkvar	_divisor @ sp[(-1)+-16]
 15537  019746  90D8               	bcf	status,0,c
 15538  019748  0EF6               	movlw	-10
 15539  01974A  32E3               	rrcf	plusw1,f,c
 15540  01974C  0EF5               	movlw	-11
 15541  01974E  32E3               	rrcf	plusw1,f,c
 15542  019750  0EF4               	movlw	-12
 15543  019752  32E3               	rrcf	plusw1,f,c
 15544  019754  0EF3               	movlw	-13
 15545  019756  32E3               	rrcf	plusw1,f,c
 15546  019758  0EF2               	movlw	-14
 15547  01975A  32E3               	rrcf	plusw1,f,c
 15548  01975C  0EF1               	movlw	-15
 15549  01975E  32E3               	rrcf	plusw1,f,c
 15550  019760  0EF0               	movlw	-16
 15551  019762  32E3               	rrcf	plusw1,f,c
 15552  019764  0EEF               	movlw	-17
 15553  019766  32E3               	rrcf	plusw1,f,c
 15554                           
 15555                           ;stkvar	_counter @ sp[(-1)+0]
 15556  019768  0EFF               	movlw	-1
 15557  01976A  50E3               	movf	plusw1,w,c
 15558  01976C  6E01               	movwf	btemp^0,c
 15559  01976E  0E01               	movlw	1
 15560  019770  5E01               	subwf	btemp^0,f,c
 15561  019772  0EFF               	movlw	-1
 15562  019774  0060  F007  FFE3   	movff	btemp,plusw1
 15563  01977A  A4D8               	btfss	status,2,c
 15564  01977C  D7A4               	goto	u7450
 15565  01977E                     u7470:
 15566                           
 15567                           ;stkvar	_dividend @ sp[(-1)+-8]
 15568  01977E  0EF7               	movlw	247
 15569  019780  24E1               	addwf	fsr1l,w,c
 15570  019782  6ED9               	movwf	fsr2l,c
 15571  019784  0EFF               	movlw	255
 15572  019786  20E2               	addwfc	fsr1h,w,c
 15573  019788  6EDA               	movwf	fsr2h,c
 15574                           
 15575                           ;stkvar	?___lomod @ sp[(-1)+-8]
 15576  01978A  0E08               	movlw	8
 15577  01978C  6E01               	movwf	btemp^0,c
 15578  01978E  0EF7               	movlw	-9
 15579  019790                     us748999:
 15580  019790  006F FF7B FFE3     	movff	postinc2,plusw1
 15581  019796  28E8               	incf	wreg,w,c
 15582  019798  2E01               	decfsz	btemp^0,f,c
 15583  01979A  D7FA               	bra	us748999
 15584                           
 15585                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 15586  01979C  52E5               	movf	postdec1,f,c
 15587  01979E  0012               	return		;funcret
 15588  0197A0                     __end_of___lomod:
 15589                           	opt callstack 0
 15590                           
 15591 ;; *************** function ___lodiv *****************
 15592 ;; Defined at:
 15593 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 15594 ;; Parameters:    Size  Location     Type
 15595 ;;  dividend        8  [STACK] unsigned long long 
 15596 ;;  divisor         8  [STACK] unsigned long long 
 15597 ;; Auto vars:     Size  Location     Type
 15598 ;;  quotient        8  [STACK] unsigned long long 
 15599 ;;  counter         1  [STACK] unsigned char 
 15600 ;; Return value:  Size  Location     Type
 15601 ;;                  8  [STACK] unsigned long long 
 15602 ;; Registers used:
 15603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 15604 ;; Tracked objects:
 15605 ;;		On entry : 0/2
 15606 ;;		On exit  : 0/0
 15607 ;;		Unchanged: 0/0
 15608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15613 ;;Total ram usage:        0 bytes
 15614 ;; Hardware stack levels used:    1
 15615 ;; Hardware stack levels required when called:   15
 15616 ;; This function calls:
 15617 ;;		Nothing
 15618 ;; This function is called by:
 15619 ;;		_utoa
 15620 ;; This function uses a reentrant model
 15621 ;;
 15622                           
 15623                           	psect	text59
 15624  018F5A                     __ptext59:
 15625                           	opt callstack 0
 15626  018F5A                     ___lodiv:
 15627                           	opt callstack 0
 15628                           
 15629                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 15630  018F5A  0E09               	movlw	9
 15631  018F5C  26E1               	addwf	fsr1l,f,c
 15632  018F5E  0E00               	movlw	0
 15633  018F60  22E2               	addwfc	fsr1h,f,c
 15634                           
 15635                           ;stkvar	_quotient @ sp[(-9)+0]
 15636                           
 15637                           ;incstack = 0
 15638 ;; hardware stack exceeded
 15639  018F62  0E07               	movlw	7
 15640  018F64  6E01               	movwf	btemp^0,c
 15641  018F66  0EF7               	movlw	-9
 15642  018F68                     u7381:
 15643  018F68  6AE3               	clrf	plusw1,c
 15644  018F6A  2AE8               	incf	wreg,f,c
 15645  018F6C  0601               	decf	btemp^0,f,c
 15646  018F6E  E2FC               	bc	u7381
 15647                           
 15648                           ;stkvar	_divisor @ sp[(-9)+-16]
 15649  018F70  0EE7               	movlw	-25
 15650  018F72  50E3               	movf	plusw1,w,c
 15651  018F74  E116               	bnz	u7390
 15652  018F76  0EE8               	movlw	-24
 15653  018F78  50E3               	movf	plusw1,w,c
 15654  018F7A  E113               	bnz	u7390
 15655  018F7C  0EE9               	movlw	-23
 15656  018F7E  50E3               	movf	plusw1,w,c
 15657  018F80  E110               	bnz	u7390
 15658  018F82  0EEA               	movlw	-22
 15659  018F84  50E3               	movf	plusw1,w,c
 15660  018F86  E10D               	bnz	u7390
 15661  018F88  0EEB               	movlw	-21
 15662  018F8A  50E3               	movf	plusw1,w,c
 15663  018F8C  E10A               	bnz	u7390
 15664  018F8E  0EEC               	movlw	-20
 15665  018F90  50E3               	movf	plusw1,w,c
 15666  018F92  E107               	bnz	u7390
 15667  018F94  0EED               	movlw	-19
 15668  018F96  50E3               	movf	plusw1,w,c
 15669  018F98  E104               	bnz	u7390
 15670  018F9A  0EEE               	movlw	-18
 15671  018F9C  50E3               	movf	plusw1,w,c
 15672  018F9E  B4D8               	btfsc	status,2,c
 15673  018FA0  D088               	goto	u7420
 15674  018FA2                     u7390:
 15675                           
 15676                           ;stkvar	_counter @ sp[(-9)+8]
 15677  018FA2  0EFF               	movlw	-1
 15678  018FA4  6AE3               	clrf	plusw1,c
 15679  018FA6  D012               	goto	L16
 15680  018FA8                     l8870:
 15681                           
 15682                           ;stkvar	_divisor @ sp[(-9)+-16]
 15683  018FA8  90D8               	bcf	status,0,c
 15684  018FAA  0EE7               	movlw	-25
 15685  018FAC  36E3               	rlcf	plusw1,f,c
 15686  018FAE  0EE8               	movlw	-24
 15687  018FB0  36E3               	rlcf	plusw1,f,c
 15688  018FB2  0EE9               	movlw	-23
 15689  018FB4  36E3               	rlcf	plusw1,f,c
 15690  018FB6  0EEA               	movlw	-22
 15691  018FB8  36E3               	rlcf	plusw1,f,c
 15692  018FBA  0EEB               	movlw	-21
 15693  018FBC  36E3               	rlcf	plusw1,f,c
 15694  018FBE  0EEC               	movlw	-20
 15695  018FC0  36E3               	rlcf	plusw1,f,c
 15696  018FC2  0EED               	movlw	-19
 15697  018FC4  36E3               	rlcf	plusw1,f,c
 15698  018FC6  0EEE               	movlw	-18
 15699  018FC8  36E3               	rlcf	plusw1,f,c
 15700                           
 15701                           ;stkvar	_counter @ sp[(-9)+8]
 15702  018FCA  0EFF               	movlw	-1
 15703  018FCC                     L16:
 15704  018FCC  2AE3               	incf	plusw1,f,c
 15705                           
 15706                           ;stkvar	_divisor @ sp[(-9)+-16]
 15707  018FCE  0EEE               	movlw	-18
 15708  018FD0  AEE3               	btfss	plusw1,7,c
 15709  018FD2  D7EA               	goto	l8870
 15710  018FD4                     u7400:
 15711                           
 15712                           ;stkvar	_quotient @ sp[(-9)+0]
 15713  018FD4  90D8               	bcf	status,0,c
 15714  018FD6  0EF7               	movlw	-9
 15715  018FD8  36E3               	rlcf	plusw1,f,c
 15716  018FDA  0EF8               	movlw	-8
 15717  018FDC  36E3               	rlcf	plusw1,f,c
 15718  018FDE  0EF9               	movlw	-7
 15719  018FE0  36E3               	rlcf	plusw1,f,c
 15720  018FE2  0EFA               	movlw	-6
 15721  018FE4  36E3               	rlcf	plusw1,f,c
 15722  018FE6  0EFB               	movlw	-5
 15723  018FE8  36E3               	rlcf	plusw1,f,c
 15724  018FEA  0EFC               	movlw	-4
 15725  018FEC  36E3               	rlcf	plusw1,f,c
 15726  018FEE  0EFD               	movlw	-3
 15727  018FF0  36E3               	rlcf	plusw1,f,c
 15728  018FF2  0EFE               	movlw	-2
 15729  018FF4  36E3               	rlcf	plusw1,f,c
 15730                           
 15731                           ;stkvar	_divisor @ sp[(-9)+-16]
 15732                           ;stkvar	_dividend @ sp[(-9)+-8]
 15733  018FF6  50E1               	movf	fsr1l,w,c
 15734  018FF8  0FEF               	addlw	-17
 15735  018FFA  6ED9               	movwf	fsr2l,c
 15736  018FFC  50E2               	movf	fsr1h,w,c
 15737  018FFE  6EDA               	movwf	fsr2h,c
 15738  019000  0EFF               	movlw	255
 15739  019002  22DA               	addwfc	fsr2h,f,c
 15740  019004  0EE7               	movlw	-25
 15741  019006  50E3               	movf	plusw1,w,c
 15742  019008  5CDE               	subwf	postinc2,w,c
 15743  01900A  0EE8               	movlw	-24
 15744  01900C  50E3               	movf	plusw1,w,c
 15745  01900E  58DE               	subwfb	postinc2,w,c
 15746  019010  0EE9               	movlw	-23
 15747  019012  50E3               	movf	plusw1,w,c
 15748  019014  58DE               	subwfb	postinc2,w,c
 15749  019016  0EEA               	movlw	-22
 15750  019018  50E3               	movf	plusw1,w,c
 15751  01901A  58DE               	subwfb	postinc2,w,c
 15752  01901C  0EEB               	movlw	-21
 15753  01901E  50E3               	movf	plusw1,w,c
 15754  019020  58DE               	subwfb	postinc2,w,c
 15755  019022  0EEC               	movlw	-20
 15756  019024  50E3               	movf	plusw1,w,c
 15757  019026  58DE               	subwfb	postinc2,w,c
 15758  019028  0EED               	movlw	-19
 15759  01902A  50E3               	movf	plusw1,w,c
 15760  01902C  58DE               	subwfb	postinc2,w,c
 15761  01902E  0EEE               	movlw	-18
 15762  019030  50E3               	movf	plusw1,w,c
 15763  019032  58DE               	subwfb	postinc2,w,c
 15764  019034  A0D8               	btfss	status,0,c
 15765  019036  D021               	goto	l8882
 15766                           
 15767                           ;stkvar	_divisor @ sp[(-9)+-16]
 15768                           ;stkvar	_dividend @ sp[(-9)+-8]
 15769  019038  50E1               	movf	fsr1l,w,c
 15770  01903A  0FEF               	addlw	-17
 15771  01903C  6ED9               	movwf	fsr2l,c
 15772  01903E  50E2               	movf	fsr1h,w,c
 15773  019040  6EDA               	movwf	fsr2h,c
 15774  019042  0EFF               	movlw	255
 15775  019044  22DA               	addwfc	fsr2h,f,c
 15776  019046  0EE7               	movlw	-25
 15777  019048  50E3               	movf	plusw1,w,c
 15778  01904A  5EDE               	subwf	postinc2,f,c
 15779  01904C  0EE8               	movlw	-24
 15780  01904E  50E3               	movf	plusw1,w,c
 15781  019050  5ADE               	subwfb	postinc2,f,c
 15782  019052  0EE9               	movlw	-23
 15783  019054  50E3               	movf	plusw1,w,c
 15784  019056  5ADE               	subwfb	postinc2,f,c
 15785  019058  0EEA               	movlw	-22
 15786  01905A  50E3               	movf	plusw1,w,c
 15787  01905C  5ADE               	subwfb	postinc2,f,c
 15788  01905E  0EEB               	movlw	-21
 15789  019060  50E3               	movf	plusw1,w,c
 15790  019062  5ADE               	subwfb	postinc2,f,c
 15791  019064  0EEC               	movlw	-20
 15792  019066  50E3               	movf	plusw1,w,c
 15793  019068  5ADE               	subwfb	postinc2,f,c
 15794  01906A  0EED               	movlw	-19
 15795  01906C  50E3               	movf	plusw1,w,c
 15796  01906E  5ADE               	subwfb	postinc2,f,c
 15797  019070  0EEE               	movlw	-18
 15798  019072  50E3               	movf	plusw1,w,c
 15799  019074  5ADE               	subwfb	postinc2,f,c
 15800                           
 15801                           ;stkvar	_quotient @ sp[(-9)+0]
 15802  019076  0EF7               	movlw	-9
 15803  019078  80E3               	bsf	plusw1,0,c
 15804  01907A                     l8882:
 15805                           
 15806                           ;stkvar	_divisor @ sp[(-9)+-16]
 15807  01907A  90D8               	bcf	status,0,c
 15808  01907C  0EEE               	movlw	-18
 15809  01907E  32E3               	rrcf	plusw1,f,c
 15810  019080  0EED               	movlw	-19
 15811  019082  32E3               	rrcf	plusw1,f,c
 15812  019084  0EEC               	movlw	-20
 15813  019086  32E3               	rrcf	plusw1,f,c
 15814  019088  0EEB               	movlw	-21
 15815  01908A  32E3               	rrcf	plusw1,f,c
 15816  01908C  0EEA               	movlw	-22
 15817  01908E  32E3               	rrcf	plusw1,f,c
 15818  019090  0EE9               	movlw	-23
 15819  019092  32E3               	rrcf	plusw1,f,c
 15820  019094  0EE8               	movlw	-24
 15821  019096  32E3               	rrcf	plusw1,f,c
 15822  019098  0EE7               	movlw	-25
 15823  01909A  32E3               	rrcf	plusw1,f,c
 15824                           
 15825                           ;stkvar	_counter @ sp[(-9)+8]
 15826  01909C  0EFF               	movlw	-1
 15827  01909E  50E3               	movf	plusw1,w,c
 15828  0190A0  6E01               	movwf	btemp^0,c
 15829  0190A2  0E01               	movlw	1
 15830  0190A4  5E01               	subwf	btemp^0,f,c
 15831  0190A6  0EFF               	movlw	-1
 15832  0190A8  0060  F007  FFE3   	movff	btemp,plusw1
 15833  0190AE  A4D8               	btfss	status,2,c
 15834  0190B0  D791               	goto	u7400
 15835  0190B2                     u7420:
 15836                           
 15837                           ;stkvar	_quotient @ sp[(-9)+0]
 15838  0190B2  0EF7               	movlw	247
 15839  0190B4  24E1               	addwf	fsr1l,w,c
 15840  0190B6  6ED9               	movwf	fsr2l,c
 15841  0190B8  0EFF               	movlw	255
 15842  0190BA  20E2               	addwfc	fsr1h,w,c
 15843  0190BC  6EDA               	movwf	fsr2h,c
 15844                           
 15845                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 15846  0190BE  0E08               	movlw	8
 15847  0190C0  6E01               	movwf	btemp^0,c
 15848  0190C2  0EEF               	movlw	-17
 15849  0190C4                     us743999:
 15850  0190C4  006F FF7B FFE3     	movff	postinc2,plusw1
 15851  0190CA  28E8               	incf	wreg,w,c
 15852  0190CC  2E01               	decfsz	btemp^0,f,c
 15853  0190CE  D7FA               	bra	us743999
 15854                           
 15855                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 15856  0190D0  0EF7               	movlw	247
 15857  0190D2  26E1               	addwf	fsr1l,f,c
 15858  0190D4  0EFF               	movlw	255
 15859  0190D6  22E2               	addwfc	fsr1h,f,c
 15860  0190D8  0012               	return		;funcret
 15861  0190DA                     __end_of___lodiv:
 15862                           	opt callstack 0
 15863                           
 15864 ;; *************** function _strncmp *****************
 15865 ;; Defined at:
 15866 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 15867 ;; Parameters:    Size  Location     Type
 15868 ;;  _l              2  [STACK] PTR const unsigned char 
 15869 ;;		 -> ct(3), STR_64(127), STR_62(3), STR_61(3), 
 15870 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15871 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15872 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15873 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15874 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 15875 ;;		 -> STR_38(23), STR_37(23), STR_36(29), STR_35(23), 
 15876 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 15877 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15878 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 15879 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 15880 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15881 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15882 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15883 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15884 ;;		 -> STR_1(21), 
 15885 ;;  _r              2  [STACK] PTR const unsigned char 
 15886 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15887 ;;		 -> STR_79(3), STR_75(3), 
 15888 ;;  n               2  [STACK] unsigned int 
 15889 ;; Auto vars:     Size  Location     Type
 15890 ;;  r               2  [STACK] PTR const unsigned char 
 15891 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15892 ;;		 -> STR_79(3), STR_75(3), 
 15893 ;;  l               2  [STACK] PTR const unsigned char 
 15894 ;;		 -> ct(3), STR_64(127), STR_62(3), STR_61(3), 
 15895 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15896 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15897 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15898 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15899 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 15900 ;;		 -> STR_38(23), STR_37(23), STR_36(29), STR_35(23), 
 15901 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 15902 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15903 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 15904 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 15905 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15906 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15907 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15908 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15909 ;;		 -> STR_1(21), 
 15910 ;; Return value:  Size  Location     Type
 15911 ;;                  2  [STACK] int 
 15912 ;; Registers used:
 15913 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 15914 ;; Tracked objects:
 15915 ;;		On entry : 0/0
 15916 ;;		On exit  : 0/0
 15917 ;;		Unchanged: 0/0
 15918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15923 ;;Total ram usage:        0 bytes
 15924 ;; Hardware stack levels used:    1
 15925 ;; Hardware stack levels required when called:   15
 15926 ;; This function calls:
 15927 ;;		Nothing
 15928 ;; This function is called by:
 15929 ;;		_vfpfcnvrt
 15930 ;; This function uses a reentrant model
 15931 ;;
 15932                           
 15933                           	psect	text60
 15934  0180D0                     __ptext60:
 15935                           	opt callstack 0
 15936  0180D0                     _strncmp:
 15937                           	opt callstack 0
 15938                           
 15939                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15940  0180D0  52E6               	movf	postinc1,f,c
 15941  0180D2  52E6               	movf	postinc1,f,c
 15942  0180D4  52E6               	movf	postinc1,f,c
 15943  0180D6  52E6               	movf	postinc1,f,c
 15944                           
 15945                           ;stkvar	__l @ sp[(-4)+-2]
 15946                           
 15947                           ;incstack = 0
 15948 ;; hardware stack exceeded
 15949  0180D8  0EFA               	movlw	-6
 15950  0180DA  006F FF8C  F00B    	movff	plusw1,btemp+10
 15951  0180E0  0EFB               	movlw	-5
 15952  0180E2  006F FF8C  F00C    	movff	plusw1,btemp+11
 15953                           
 15954                           ;stkvar	_l @ sp[(-4)+2]
 15955  0180E8  0EFF               	movlw	-1
 15956  0180EA  0060  F033  FFE3   	movff	btemp+11,plusw1
 15957  0180F0  0EFE               	movlw	-2
 15958  0180F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15959                           
 15960                           ;stkvar	__r @ sp[(-4)+-4]
 15961  0180F8  0EF8               	movlw	-8
 15962  0180FA  006F FF8C  F00B    	movff	plusw1,btemp+10
 15963  018100  0EF9               	movlw	-7
 15964  018102  006F FF8C  F00C    	movff	plusw1,btemp+11
 15965                           
 15966                           ;stkvar	_r @ sp[(-4)+0]
 15967  018108  0EFD               	movlw	-3
 15968  01810A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15969  018110  0EFC               	movlw	-4
 15970  018112  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15971                           
 15972                           ;stkvar	_n @ sp[(-4)+-6]
 15973  018118  0EF6               	movlw	-10
 15974  01811A  006F FF8C  F001    	movff	plusw1,btemp
 15975  018120  0E01               	movlw	1
 15976  018122  5E01               	subwf	btemp^0,f,c
 15977  018124  0EF6               	movlw	-10
 15978  018126  0060  F007  FFE3   	movff	btemp,plusw1
 15979  01812C  0EF7               	movlw	-9
 15980  01812E  006F FF8C  F001    	movff	plusw1,btemp
 15981  018134  0E00               	movlw	0
 15982  018136  5A01               	subwfb	btemp^0,f,c
 15983  018138  0EF7               	movlw	-9
 15984  01813A  0060  F007  FFE3   	movff	btemp,plusw1
 15985  018140  0EF6               	movlw	-10
 15986  018142  28E3               	incf	plusw1,w,c
 15987  018144  E13F               	bnz	l9552
 15988  018146  0EF7               	movlw	-9
 15989  018148  28E3               	incf	plusw1,w,c
 15990  01814A  A4D8               	btfss	status,2,c
 15991  01814C  D03B               	goto	l9552
 15992  01814E  0E00               	movlw	0
 15993  018150  6E01               	movwf	btemp^0,c
 15994  018152  0E00               	movlw	0
 15995  018154  6E02               	movwf	(btemp+1)^0,c
 15996  018156  D0C7               	goto	l3537
 15997  018158                     l9550:
 15998                           
 15999                           ;stkvar	_l @ sp[(-4)+2]
 16000  018158  0EFE               	movlw	-2
 16001  01815A  50E3               	movf	plusw1,w,c
 16002  01815C  0F01               	addlw	1
 16003  01815E  6E01               	movwf	btemp^0,c
 16004  018160  0EFE               	movlw	-2
 16005  018162  0060  F007  FFE3   	movff	btemp,plusw1
 16006  018168  6A01               	clrf	btemp^0,c
 16007  01816A  0EFF               	movlw	-1
 16008  01816C  50E3               	movf	plusw1,w,c
 16009  01816E  2001               	addwfc	btemp^0,w,c
 16010  018170  6E01               	movwf	btemp^0,c
 16011  018172  0EFF               	movlw	-1
 16012  018174  0060  F007  FFE3   	movff	btemp,plusw1
 16013                           
 16014                           ;stkvar	_r @ sp[(-4)+0]
 16015  01817A  0EFC               	movlw	-4
 16016  01817C  50E3               	movf	plusw1,w,c
 16017  01817E  0F01               	addlw	1
 16018  018180  6E01               	movwf	btemp^0,c
 16019  018182  0EFC               	movlw	-4
 16020  018184  0060  F007  FFE3   	movff	btemp,plusw1
 16021  01818A  6A01               	clrf	btemp^0,c
 16022  01818C  0EFD               	movlw	-3
 16023  01818E  50E3               	movf	plusw1,w,c
 16024  018190  2001               	addwfc	btemp^0,w,c
 16025  018192  6E01               	movwf	btemp^0,c
 16026  018194  0EFD               	movlw	-3
 16027  018196  0060  F007  FFE3   	movff	btemp,plusw1
 16028                           
 16029                           ;stkvar	_n @ sp[(-4)+-6]
 16030  01819C  0EF6               	movlw	-10
 16031  01819E  006F FF8C  F001    	movff	plusw1,btemp
 16032  0181A4  0E01               	movlw	1
 16033  0181A6  5E01               	subwf	btemp^0,f,c
 16034  0181A8  0EF6               	movlw	-10
 16035  0181AA  0060  F007  FFE3   	movff	btemp,plusw1
 16036  0181B0  0EF7               	movlw	-9
 16037  0181B2  006F FF8C  F001    	movff	plusw1,btemp
 16038  0181B8  0E00               	movlw	0
 16039  0181BA  5A01               	subwfb	btemp^0,f,c
 16040  0181BC  0EF7               	movlw	-9
 16041  0181BE  0060  F007  FFE3   	movff	btemp,plusw1
 16042  0181C4                     l9552:
 16043                           
 16044                           ;stkvar	_l @ sp[(-4)+2]
 16045  0181C4  0EFE               	movlw	-2
 16046  0181C6  006F FF8F FFF6     	movff	plusw1,tblptrl
 16047  0181CC  0EFF               	movlw	-1
 16048  0181CE  006F FF8F FFF7     	movff	plusw1,tblptrh
 16049  0181D4  0E00               	movlw	low (__mediumconst shr (0+16))
 16050  0181D6  6EF8               	movwf	tblptru,c
 16051  0181D8  0E1F               	movlw	(high __ramtop+-1)
 16052  0181DA  64F7               	cpfsgt	tblptrh,c
 16053  0181DC  D003               	bra	u8677
 16054  0181DE  0008               	tblrd		*
 16055  0181E0  50F5               	movf	tablat,w,c
 16056  0181E2  D007               	bra	u8670
 16057  0181E4                     u8677:
 16058  0181E4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16059  0181EA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16060  0181F0  50EF               	movf	indf0,w,c
 16061  0181F2                     u8670:
 16062  0181F2  0900               	iorlw	0
 16063  0181F4  B4D8               	btfsc	status,2,c
 16064  0181F6  D04A               	goto	u8710
 16065                           
 16066                           ;stkvar	_r @ sp[(-4)+0]
 16067  0181F8  50E1               	movf	fsr1l,w,c
 16068  0181FA  0FFC               	addlw	-4
 16069  0181FC  6ED9               	movwf	fsr2l,c
 16070  0181FE  50E2               	movf	fsr1h,w,c
 16071  018200  6EDA               	movwf	fsr2h,c
 16072  018202  0EFF               	movlw	255
 16073  018204  22DA               	addwfc	fsr2h,f,c
 16074  018206  006F FF7B FFF6     	movff	postinc2,tblptrl
 16075  01820C  006F FF77 FFF7     	movff	postdec2,tblptrh
 16076  018212                     	if	0	;tblptru may be non-zero
 16077  018212                     	endif
 16078  018212                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16079  018212  0E00               	movlw	low (__mediumconst shr (0+16))
 16080  018214  6EF8               	movwf	tblptru,c
 16081  018216                     	endif
 16082  018216  0008               	tblrd		*
 16083  018218  50F5               	movf	tablat,w,c
 16084  01821A  0900               	iorlw	0
 16085  01821C  B4D8               	btfsc	status,2,c
 16086  01821E  D036               	goto	u8710
 16087                           
 16088                           ;stkvar	_n @ sp[(-4)+-6]
 16089  018220  0EF6               	movlw	-10
 16090  018222  006F FF8C  F001    	movff	plusw1,btemp
 16091  018228  0EF7               	movlw	-9
 16092  01822A  50E3               	movf	plusw1,w,c
 16093  01822C  1001               	iorwf	btemp^0,w,c
 16094  01822E  B4D8               	btfsc	status,2,c
 16095  018230  D02D               	goto	u8710
 16096                           
 16097                           ;stkvar	_r @ sp[(-4)+0]
 16098  018232  50E1               	movf	fsr1l,w,c
 16099  018234  0FFC               	addlw	-4
 16100  018236  6ED9               	movwf	fsr2l,c
 16101  018238  50E2               	movf	fsr1h,w,c
 16102  01823A  6EDA               	movwf	fsr2h,c
 16103  01823C  0EFF               	movlw	255
 16104  01823E  22DA               	addwfc	fsr2h,f,c
 16105  018240  006F FF7B FFF6     	movff	postinc2,tblptrl
 16106  018246  006F FF77 FFF7     	movff	postdec2,tblptrh
 16107  01824C                     	if	0	;tblptru may be non-zero
 16108  01824C                     	endif
 16109  01824C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16110  01824C  0E00               	movlw	low (__mediumconst shr (0+16))
 16111  01824E  6EF8               	movwf	tblptru,c
 16112  018250                     	endif
 16113  018250  0008               	tblrd		*
 16114  018252  006F FFD4  F00C    	movff	tablat,btemp+11
 16115                           
 16116                           ;stkvar	_l @ sp[(-4)+2]
 16117  018258  0EFE               	movlw	-2
 16118  01825A  006F FF8F FFF6     	movff	plusw1,tblptrl
 16119  018260  0EFF               	movlw	-1
 16120  018262  006F FF8F FFF7     	movff	plusw1,tblptrh
 16121  018268  0E00               	movlw	low (__mediumconst shr (0+16))
 16122  01826A  6EF8               	movwf	tblptru,c
 16123  01826C  0E1F               	movlw	(high __ramtop+-1)
 16124  01826E  64F7               	cpfsgt	tblptrh,c
 16125  018270  D003               	bra	u8717
 16126  018272  0008               	tblrd		*
 16127  018274  50F5               	movf	tablat,w,c
 16128  018276  D007               	bra	u8715
 16129  018278                     u8717:
 16130  018278  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16131  01827E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16132  018284  50EF               	movf	indf0,w,c
 16133  018286                     u8715:
 16134  018286  180C               	xorwf	(btemp+11)^0,w,c
 16135  018288  B4D8               	btfsc	status,2,c
 16136  01828A  D766               	goto	l9550
 16137  01828C                     u8710:
 16138                           
 16139                           ;stkvar	_l @ sp[(-4)+2]
 16140  01828C  0EFE               	movlw	-2
 16141  01828E  006F FF8F FFF6     	movff	plusw1,tblptrl
 16142  018294  0EFF               	movlw	-1
 16143  018296  006F FF8F FFF7     	movff	plusw1,tblptrh
 16144  01829C  0E00               	movlw	low (__mediumconst shr (0+16))
 16145  01829E  6EF8               	movwf	tblptru,c
 16146  0182A0  0E1F               	movlw	(high __ramtop+-1)
 16147  0182A2  64F7               	cpfsgt	tblptrh,c
 16148  0182A4  D003               	bra	u8727
 16149  0182A6  0008               	tblrd		*
 16150  0182A8  50F5               	movf	tablat,w,c
 16151  0182AA  D007               	bra	u8720
 16152  0182AC                     u8727:
 16153  0182AC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16154  0182B2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16155  0182B8  50EF               	movf	indf0,w,c
 16156  0182BA                     u8720:
 16157  0182BA  6E01               	movwf	btemp^0,c
 16158  0182BC  6A02               	clrf	(btemp+1)^0,c
 16159                           
 16160                           ;stkvar	_r @ sp[(-4)+0]
 16161  0182BE  50E1               	movf	fsr1l,w,c
 16162  0182C0  0FFC               	addlw	-4
 16163  0182C2  6ED9               	movwf	fsr2l,c
 16164  0182C4  50E2               	movf	fsr1h,w,c
 16165  0182C6  6EDA               	movwf	fsr2h,c
 16166  0182C8  0EFF               	movlw	255
 16167  0182CA  22DA               	addwfc	fsr2h,f,c
 16168  0182CC  006F FF7B FFF6     	movff	postinc2,tblptrl
 16169  0182D2  006F FF77 FFF7     	movff	postdec2,tblptrh
 16170  0182D8                     	if	0	;tblptru may be non-zero
 16171  0182D8                     	endif
 16172  0182D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16173  0182D8  0E00               	movlw	low (__mediumconst shr (0+16))
 16174  0182DA  6EF8               	movwf	tblptru,c
 16175  0182DC                     	endif
 16176  0182DC  0008               	tblrd		*
 16177  0182DE  50F5               	movf	tablat,w,c
 16178  0182E0  5E01               	subwf	btemp^0,f,c
 16179  0182E2  0E00               	movlw	0
 16180  0182E4  5A02               	subwfb	(btemp+1)^0,f,c
 16181  0182E6                     l3537:
 16182                           
 16183                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 16184  0182E6  0EF6               	movlw	246
 16185  0182E8  26E1               	addwf	fsr1l,f,c
 16186  0182EA  0EFF               	movlw	255
 16187  0182EC  22E2               	addwfc	fsr1h,f,c
 16188  0182EE  0012               	return		;funcret
 16189  0182F0                     __end_of_strncmp:
 16190                           	opt callstack 0
 16191                           
 16192 ;; *************** function _stoa *****************
 16193 ;; Defined at:
 16194 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16195 ;; Parameters:    Size  Location     Type
 16196 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16197 ;;		 -> f(6), NULL(0), 
 16198 ;;  s               2  [STACK] PTR unsigned char 
 16199 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 16200 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 16201 ;;		 -> V(191), 
 16202 ;; Auto vars:     Size  Location     Type
 16203 ;;  nuls            7  [STACK] unsigned char [7]
 16204 ;;  l               2  [STACK] int 
 16205 ;;  p               2  [STACK] int 
 16206 ;;  cp              2  [STACK] PTR unsigned char 
 16207 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_46(9), 
 16208 ;;		 -> STR_45(12), D.lcd(480), D(482), T(144), 
 16209 ;;		 -> STR_3(5), V(191), 
 16210 ;;  w               2  [STACK] int 
 16211 ;;  i               2  [STACK] int 
 16212 ;; Return value:  Size  Location     Type
 16213 ;;                  2  [STACK] int 
 16214 ;; Registers used:
 16215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 16216 ;; Tracked objects:
 16217 ;;		On entry : 0/0
 16218 ;;		On exit  : 0/0
 16219 ;;		Unchanged: 0/0
 16220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16225 ;;Total ram usage:        0 bytes
 16226 ;; Hardware stack levels used:    1
 16227 ;; Hardware stack levels required when called:   18
 16228 ;; This function calls:
 16229 ;;		_fputc
 16230 ;;		_strlen
 16231 ;; This function is called by:
 16232 ;;		_vfpfcnvrt
 16233 ;; This function uses a reentrant model
 16234 ;;
 16235                           
 16236                           	psect	text61
 16237  017498                     __ptext61:
 16238                           	opt callstack 0
 16239  017498                     _stoa:
 16240                           	opt callstack 0
 16241                           
 16242                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16243  017498  0E11               	movlw	17
 16244  01749A  26E1               	addwf	fsr1l,f,c
 16245  01749C  0E00               	movlw	0
 16246  01749E  22E2               	addwfc	fsr1h,f,c
 16247                           
 16248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 16249                           
 16250                           ;incstack = 0
 16251 ;; hardware stack exceeded
 16252  0174A0  EE20  F100         	lfsr	2,stoa@F1166
 16253                           
 16254                           ;stkvar	_nuls @ sp[(-17)+0]
 16255  0174A4  0E07               	movlw	7
 16256  0174A6  6E01               	movwf	btemp^0,c
 16257  0174A8  0EEF               	movlw	-17
 16258  0174AA                     us1173999:
 16259  0174AA  006F FF7B FFE3     	movff	postinc2,plusw1
 16260  0174B0  28E8               	incf	wreg,w,c
 16261  0174B2  2E01               	decfsz	btemp^0,f,c
 16262  0174B4  D7FA               	bra	us1173999
 16263                           
 16264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 16265                           ;stkvar	_s @ sp[(-17)+-4]
 16266  0174B6  0EEB               	movlw	-21
 16267  0174B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 16268  0174BE  0EEC               	movlw	-20
 16269  0174C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 16270                           
 16271                           ;stkvar	_cp @ sp[(-17)+11]
 16272  0174C6  0EFB               	movlw	-5
 16273  0174C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 16274  0174CE  0EFA               	movlw	-6
 16275  0174D0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16276                           
 16277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 16278                           ;stkvar	_cp @ sp[(-17)+11]
 16279  0174D6  0EFA               	movlw	-6
 16280  0174D8  006F FF8C  F001    	movff	plusw1,btemp
 16281  0174DE  0EFB               	movlw	-5
 16282  0174E0  50E3               	movf	plusw1,w,c
 16283  0174E2  1001               	iorwf	btemp^0,w,c
 16284  0174E4  A4D8               	btfss	status,2,c
 16285  0174E6  D00E               	goto	l12588
 16286                           
 16287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 16288                           ;stkvar	_nuls @ sp[(-17)+0]
 16289  0174E8  0EEF               	movlw	239
 16290  0174EA  24E1               	addwf	fsr1l,w,c
 16291  0174EC  6E0B               	movwf	(btemp+10)^0,c
 16292  0174EE  0EFF               	movlw	255
 16293  0174F0  20E2               	addwfc	fsr1h,w,c
 16294  0174F2  6E0C               	movwf	(btemp+11)^0,c
 16295                           
 16296                           ;stkvar	_cp @ sp[(-17)+11]
 16297  0174F4  0EFB               	movlw	-5
 16298  0174F6  0060  F033  FFE3   	movff	btemp+11,plusw1
 16299  0174FC  0EFA               	movlw	-6
 16300  0174FE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16301  017504                     l12588:
 16302                           
 16303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 16304                           ;stkvar	_cp @ sp[(-17)+11]
 16305  017504  0EFA               	movlw	-6
 16306  017506  006F FF8F FFE6     	movff	plusw1,postinc1
 16307  01750C  006F FF8F FFE6     	movff	plusw1,postinc1
 16308  017512  EC6E  F0D6         	call	_strlen	;wreg free
 16309                           
 16310                           ;stkvar	_l @ sp[(-17)+7]
 16311  017516  0EF6               	movlw	-10
 16312  017518  0060  F007  FFE3   	movff	btemp,plusw1
 16313  01751E  0EF7               	movlw	-9
 16314  017520  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16315                           
 16316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 16317                           ;stkvar	_p @ sp[(-17)+9]
 16318  017526  0EF8               	movlw	-8
 16319  017528  0060  F0F3  FFE3   	movff	_prec,plusw1
 16320  01752E  0EF9               	movlw	-7
 16321  017530  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16322                           
 16323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 16324                           ;stkvar	_p @ sp[(-17)+9]
 16325  017536  0EF9               	movlw	-7
 16326  017538  BEE3               	btfsc	plusw1,7,c
 16327  01753A  D023               	goto	l2362
 16328                           
 16329                           ;stkvar	_l @ sp[(-17)+7]
 16330                           ;stkvar	_p @ sp[(-17)+9]
 16331  01753C  50E1               	movf	fsr1l,w,c
 16332  01753E  0FF8               	addlw	-8
 16333  017540  6ED9               	movwf	fsr2l,c
 16334  017542  50E2               	movf	fsr1h,w,c
 16335  017544  6EDA               	movwf	fsr2h,c
 16336  017546  0EFF               	movlw	255
 16337  017548  22DA               	addwfc	fsr2h,f,c
 16338  01754A  0EF6               	movlw	-10
 16339  01754C  50E3               	movf	plusw1,w,c
 16340  01754E  5CDE               	subwf	postinc2,w,c
 16341  017550  50DE               	movf	postinc2,w,c
 16342  017552  0A80               	xorlw	128
 16343  017554  6E01               	movwf	btemp^0,c
 16344  017556  0EF7               	movlw	-9
 16345  017558  50E3               	movf	plusw1,w,c
 16346  01755A  0A80               	xorlw	128
 16347  01755C  5801               	subwfb	btemp^0,w,c
 16348  01755E  B0D8               	btfsc	status,0,c
 16349  017560  D010               	goto	l2362
 16350                           
 16351                           ;stkvar	_p @ sp[(-17)+9]
 16352                           ;stkvar	_l @ sp[(-17)+7]
 16353  017562  0EF8               	movlw	-8
 16354  017564  006F FF8C  F001    	movff	plusw1,btemp
 16355  01756A  0EF6               	movlw	-10
 16356  01756C  0060  F007  FFE3   	movff	btemp,plusw1
 16357  017572  0EF9               	movlw	-7
 16358  017574  006F FF8C  F001    	movff	plusw1,btemp
 16359  01757A  0EF7               	movlw	-9
 16360  01757C  0060  F007  FFE3   	movff	btemp,plusw1
 16361  017582                     l2362:
 16362                           
 16363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 16364                           ;stkvar	_l @ sp[(-17)+7]
 16365                           ;stkvar	_p @ sp[(-17)+9]
 16366  017582  0EF6               	movlw	-10
 16367  017584  006F FF8C  F001    	movff	plusw1,btemp
 16368  01758A  0EF8               	movlw	-8
 16369  01758C  0060  F007  FFE3   	movff	btemp,plusw1
 16370  017592  0EF7               	movlw	-9
 16371  017594  006F FF8C  F001    	movff	plusw1,btemp
 16372  01759A  0EF9               	movlw	-7
 16373  01759C  0060  F007  FFE3   	movff	btemp,plusw1
 16374                           
 16375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 16376                           ;stkvar	_w @ sp[(-17)+13]
 16377  0175A2  0EFC               	movlw	-4
 16378  0175A4  0060  F0EB  FFE3   	movff	_width,plusw1
 16379  0175AA  0EFD               	movlw	-3
 16380  0175AC  0060  F0EF  FFE3   	movff	_width+1,plusw1
 16381                           
 16382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 16383  0175B2  A03E               	btfss	_flags^0,0,c
 16384  0175B4  D01F               	goto	l12608
 16385  0175B6  D031               	goto	u11780
 16386  0175B8                     l12604:
 16387                           
 16388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 16389                           ;stkvar	_fp @ sp[(-17)+-2]
 16390  0175B8  0EED               	movlw	-19
 16391  0175BA  006F FF8F FFE6     	movff	plusw1,postinc1
 16392  0175C0  006F FF8F FFE6     	movff	plusw1,postinc1
 16393  0175C6  0E20               	movlw	32
 16394  0175C8  6EE6               	movwf	postinc1,c
 16395  0175CA  0E00               	movlw	0
 16396  0175CC  6EE6               	movwf	postinc1,c
 16397  0175CE  EC02  F0CD         	call	_fputc	;wreg free
 16398                           
 16399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 16400                           ;stkvar	_l @ sp[(-17)+7]
 16401  0175D2  0EF6               	movlw	-10
 16402  0175D4  50E3               	movf	plusw1,w,c
 16403  0175D6  0F01               	addlw	1
 16404  0175D8  6E01               	movwf	btemp^0,c
 16405  0175DA  0EF6               	movlw	-10
 16406  0175DC  0060  F007  FFE3   	movff	btemp,plusw1
 16407  0175E2  6A01               	clrf	btemp^0,c
 16408  0175E4  0EF7               	movlw	-9
 16409  0175E6  50E3               	movf	plusw1,w,c
 16410  0175E8  2001               	addwfc	btemp^0,w,c
 16411  0175EA  6E01               	movwf	btemp^0,c
 16412  0175EC  0EF7               	movlw	-9
 16413  0175EE  0060  F007  FFE3   	movff	btemp,plusw1
 16414  0175F4                     l12608:
 16415                           
 16416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 16417                           ;stkvar	_w @ sp[(-17)+13]
 16418                           ;stkvar	_l @ sp[(-17)+7]
 16419  0175F4  50E1               	movf	fsr1l,w,c
 16420  0175F6  0FF6               	addlw	-10
 16421  0175F8  6ED9               	movwf	fsr2l,c
 16422  0175FA  50E2               	movf	fsr1h,w,c
 16423  0175FC  6EDA               	movwf	fsr2h,c
 16424  0175FE  0EFF               	movlw	255
 16425  017600  22DA               	addwfc	fsr2h,f,c
 16426  017602  0EFC               	movlw	-4
 16427  017604  50E3               	movf	plusw1,w,c
 16428  017606  5CDE               	subwf	postinc2,w,c
 16429  017608  50DE               	movf	postinc2,w,c
 16430  01760A  0A80               	xorlw	128
 16431  01760C  6E01               	movwf	btemp^0,c
 16432  01760E  0EFD               	movlw	-3
 16433  017610  50E3               	movf	plusw1,w,c
 16434  017612  0A80               	xorlw	128
 16435  017614  5801               	subwfb	btemp^0,w,c
 16436  017616  A0D8               	btfss	status,0,c
 16437  017618  D7CF               	goto	l12604
 16438  01761A                     u11780:
 16439                           
 16440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 16441                           ;stkvar	_i @ sp[(-17)+15]
 16442  01761A  0EFE               	movlw	-2
 16443  01761C  6AE3               	clrf	plusw1,c
 16444  01761E  0EFF               	movlw	-1
 16445  017620  6AE3               	clrf	plusw1,c
 16446                           
 16447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 16448  017622  D045               	goto	l12618
 16449  017624                     l12612:
 16450                           
 16451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 16452                           ;stkvar	_fp @ sp[(-17)+-2]
 16453  017624  0EED               	movlw	-19
 16454  017626  006F FF8F FFE6     	movff	plusw1,postinc1
 16455  01762C  006F FF8F FFE6     	movff	plusw1,postinc1
 16456                           
 16457                           ;stkvar	_cp @ sp[(-19)+11]
 16458  017632  0EF8               	movlw	-8
 16459  017634  006F FF8F FFF6     	movff	plusw1,tblptrl
 16460  01763A  0EF9               	movlw	-7
 16461  01763C  006F FF8F FFF7     	movff	plusw1,tblptrh
 16462  017642  0E00               	movlw	low (__mediumconst shr (0+16))
 16463  017644  6EF8               	movwf	tblptru,c
 16464  017646  0E1F               	movlw	(high __ramtop+-1)
 16465  017648  64F7               	cpfsgt	tblptrh,c
 16466  01764A  D003               	bra	u11797
 16467  01764C  0008               	tblrd		*
 16468  01764E  50F5               	movf	tablat,w,c
 16469  017650  D007               	bra	u11790
 16470  017652                     u11797:
 16471  017652  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16472  017658  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16473  01765E  50EF               	movf	indf0,w,c
 16474  017660                     u11790:
 16475  017660  6EE6               	movwf	postinc1,c
 16476  017662  0E00               	movlw	0
 16477  017664  6EE6               	movwf	postinc1,c
 16478  017666  EC02  F0CD         	call	_fputc	;wreg free
 16479                           
 16480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 16481                           ;stkvar	_cp @ sp[(-17)+11]
 16482  01766A  0EFA               	movlw	-6
 16483  01766C  50E3               	movf	plusw1,w,c
 16484  01766E  0F01               	addlw	1
 16485  017670  6E01               	movwf	btemp^0,c
 16486  017672  0EFA               	movlw	-6
 16487  017674  0060  F007  FFE3   	movff	btemp,plusw1
 16488  01767A  6A01               	clrf	btemp^0,c
 16489  01767C  0EFB               	movlw	-5
 16490  01767E  50E3               	movf	plusw1,w,c
 16491  017680  2001               	addwfc	btemp^0,w,c
 16492  017682  6E01               	movwf	btemp^0,c
 16493  017684  0EFB               	movlw	-5
 16494  017686  0060  F007  FFE3   	movff	btemp,plusw1
 16495                           
 16496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 16497                           ;stkvar	_i @ sp[(-17)+15]
 16498  01768C  0EFE               	movlw	-2
 16499  01768E  50E3               	movf	plusw1,w,c
 16500  017690  0F01               	addlw	1
 16501  017692  6E01               	movwf	btemp^0,c
 16502  017694  0EFE               	movlw	-2
 16503  017696  0060  F007  FFE3   	movff	btemp,plusw1
 16504  01769C  6A01               	clrf	btemp^0,c
 16505  01769E  0EFF               	movlw	-1
 16506  0176A0  50E3               	movf	plusw1,w,c
 16507  0176A2  2001               	addwfc	btemp^0,w,c
 16508  0176A4  6E01               	movwf	btemp^0,c
 16509  0176A6  0EFF               	movlw	-1
 16510  0176A8  0060  F007  FFE3   	movff	btemp,plusw1
 16511  0176AE                     l12618:
 16512                           
 16513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 16514                           ;stkvar	_p @ sp[(-17)+9]
 16515                           ;stkvar	_i @ sp[(-17)+15]
 16516  0176AE  50E1               	movf	fsr1l,w,c
 16517  0176B0  0FFE               	addlw	-2
 16518  0176B2  6ED9               	movwf	fsr2l,c
 16519  0176B4  50E2               	movf	fsr1h,w,c
 16520  0176B6  6EDA               	movwf	fsr2h,c
 16521  0176B8  0EFF               	movlw	255
 16522  0176BA  22DA               	addwfc	fsr2h,f,c
 16523  0176BC  0EF8               	movlw	-8
 16524  0176BE  50E3               	movf	plusw1,w,c
 16525  0176C0  5CDE               	subwf	postinc2,w,c
 16526  0176C2  50DE               	movf	postinc2,w,c
 16527  0176C4  0A80               	xorlw	128
 16528  0176C6  6E01               	movwf	btemp^0,c
 16529  0176C8  0EF9               	movlw	-7
 16530  0176CA  50E3               	movf	plusw1,w,c
 16531  0176CC  0A80               	xorlw	128
 16532  0176CE  5801               	subwfb	btemp^0,w,c
 16533  0176D0  A0D8               	btfss	status,0,c
 16534  0176D2  D7A8               	goto	l12612
 16535                           
 16536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 16537  0176D4  B03E               	btfsc	_flags^0,0,c
 16538  0176D6  D01F               	goto	l12626
 16539  0176D8  D031               	goto	u11820
 16540  0176DA                     l12622:
 16541                           
 16542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 16543                           ;stkvar	_fp @ sp[(-17)+-2]
 16544  0176DA  0EED               	movlw	-19
 16545  0176DC  006F FF8F FFE6     	movff	plusw1,postinc1
 16546  0176E2  006F FF8F FFE6     	movff	plusw1,postinc1
 16547  0176E8  0E20               	movlw	32
 16548  0176EA  6EE6               	movwf	postinc1,c
 16549  0176EC  0E00               	movlw	0
 16550  0176EE  6EE6               	movwf	postinc1,c
 16551  0176F0  EC02  F0CD         	call	_fputc	;wreg free
 16552                           
 16553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 16554                           ;stkvar	_l @ sp[(-17)+7]
 16555  0176F4  0EF6               	movlw	-10
 16556  0176F6  50E3               	movf	plusw1,w,c
 16557  0176F8  0F01               	addlw	1
 16558  0176FA  6E01               	movwf	btemp^0,c
 16559  0176FC  0EF6               	movlw	-10
 16560  0176FE  0060  F007  FFE3   	movff	btemp,plusw1
 16561  017704  6A01               	clrf	btemp^0,c
 16562  017706  0EF7               	movlw	-9
 16563  017708  50E3               	movf	plusw1,w,c
 16564  01770A  2001               	addwfc	btemp^0,w,c
 16565  01770C  6E01               	movwf	btemp^0,c
 16566  01770E  0EF7               	movlw	-9
 16567  017710  0060  F007  FFE3   	movff	btemp,plusw1
 16568  017716                     l12626:
 16569                           
 16570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 16571                           ;stkvar	_w @ sp[(-17)+13]
 16572                           ;stkvar	_l @ sp[(-17)+7]
 16573  017716  50E1               	movf	fsr1l,w,c
 16574  017718  0FF6               	addlw	-10
 16575  01771A  6ED9               	movwf	fsr2l,c
 16576  01771C  50E2               	movf	fsr1h,w,c
 16577  01771E  6EDA               	movwf	fsr2h,c
 16578  017720  0EFF               	movlw	255
 16579  017722  22DA               	addwfc	fsr2h,f,c
 16580  017724  0EFC               	movlw	-4
 16581  017726  50E3               	movf	plusw1,w,c
 16582  017728  5CDE               	subwf	postinc2,w,c
 16583  01772A  50DE               	movf	postinc2,w,c
 16584  01772C  0A80               	xorlw	128
 16585  01772E  6E01               	movwf	btemp^0,c
 16586  017730  0EFD               	movlw	-3
 16587  017732  50E3               	movf	plusw1,w,c
 16588  017734  0A80               	xorlw	128
 16589  017736  5801               	subwfb	btemp^0,w,c
 16590  017738  A0D8               	btfss	status,0,c
 16591  01773A  D7CF               	goto	l12622
 16592  01773C                     u11820:
 16593                           
 16594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 16595                           ;stkvar	_l @ sp[(-17)+7]
 16596  01773C  0EF6               	movlw	-10
 16597  01773E  006F FF8C  F001    	movff	plusw1,btemp
 16598  017744  0EF7               	movlw	-9
 16599  017746  006F FF8C  F002    	movff	plusw1,btemp+1
 16600                           
 16601                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 16602  01774C  0EEB               	movlw	235
 16603  01774E  26E1               	addwf	fsr1l,f,c
 16604  017750  0EFF               	movlw	255
 16605  017752  22E2               	addwfc	fsr1h,f,c
 16606  017754  0012               	return		;funcret
 16607  017756                     __end_of_stoa:
 16608                           	opt callstack 0
 16609                           
 16610 ;; *************** function _efgtoa *****************
 16611 ;; Defined at:
 16612 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16613 ;; Parameters:    Size  Location     Type
 16614 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16615 ;;		 -> f(6), NULL(0), 
 16616 ;;  f               4  [STACK] PTR struct _IO_FILE
 16617 ;;  c               1  [STACK] unsigned char 
 16618 ;; Auto vars:     Size  Location     Type
 16619 ;;  u               4  [STACK] unsigned char 
 16620 ;;  g               4  [STACK] unsigned char 
 16621 ;;  l               4  [STACK] unsigned char 
 16622 ;;  h               4  [STACK] unsigned char 
 16623 ;;  ou              4  [STACK] unsigned char 
 16624 ;;  n               2  [STACK] int 
 16625 ;;  e               2  [STACK] int 
 16626 ;;  i               2  [STACK] int 
 16627 ;;  w               2  [STACK] int 
 16628 ;;  p               2  [STACK] int 
 16629 ;;  sign            2  [STACK] int 
 16630 ;;  d               2  [STACK] int 
 16631 ;;  ne              2  [STACK] int 
 16632 ;;  m               2  [STACK] int 
 16633 ;;  pp              2  [STACK] int 
 16634 ;;  t               2  [STACK] int 
 16635 ;;  mode            1  [STACK] unsigned char 
 16636 ;;  nmode           1  [STACK] unsigned char 
 16637 ;; Return value:  Size  Location     Type
 16638 ;;                  2  [STACK] int 
 16639 ;; Registers used:
 16640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16641 ;; Tracked objects:
 16642 ;;		On entry : 0/0
 16643 ;;		On exit  : 0/0
 16644 ;;		Unchanged: 0/0
 16645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16650 ;;Total ram usage:        0 bytes
 16651 ;; Hardware stack levels used:    1
 16652 ;; Hardware stack levels required when called:   20
 16653 ;; This function calls:
 16654 ;;		___awdiv
 16655 ;;		___awmod
 16656 ;;		___fladd
 16657 ;;		___fldiv
 16658 ;;		___fleq
 16659 ;;		___flge
 16660 ;;		___flmul
 16661 ;;		___flneg
 16662 ;;		___flsub
 16663 ;;		___fltol
 16664 ;;		___fpclassifyf
 16665 ;;		_floorf
 16666 ;;		_isupper
 16667 ;;		_pad
 16668 ;;		_strcpy
 16669 ;;		_tolower
 16670 ;; This function is called by:
 16671 ;;		_vfpfcnvrt
 16672 ;; This function uses a reentrant model
 16673 ;;
 16674                           
 16675                           	psect	text62
 16676  010000                     __ptext62:
 16677                           	opt callstack 0
 16678  010000                     _efgtoa:
 16679                           	opt callstack 0
 16680                           
 16681                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16682  010000  0E38               	movlw	56
 16683  010002  26E1               	addwf	fsr1l,f,c
 16684  010004  0E00               	movlw	0
 16685  010006  22E2               	addwfc	fsr1h,f,c
 16686                           
 16687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 16688                           ;stkvar	_sign @ sp[(-56)+42]
 16689                           
 16690                           ;incstack = 0
 16691 ;; hardware stack exceeded
 16692  010008  0EF2               	movlw	-14
 16693  01000A  6AE3               	clrf	plusw1,c
 16694  01000C  0EF3               	movlw	-13
 16695  01000E  6AE3               	clrf	plusw1,c
 16696                           
 16697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 16698                           ;stkvar	_f @ sp[(-56)+-6]
 16699  010010  0EC2               	movlw	-62
 16700  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 16701  010018  0EC3               	movlw	-61
 16702  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 16703  010020  0EC4               	movlw	-60
 16704  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 16705  010028  0EC5               	movlw	-59
 16706  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 16707                           
 16708                           ;stkvar	_g @ sp[(-56)+16]
 16709  010030  0ED8               	movlw	-40
 16710  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 16711  010038  0ED9               	movlw	-39
 16712  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16713  010040  0EDA               	movlw	-38
 16714  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16715  010048  0EDB               	movlw	-37
 16716  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 16717                           
 16718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 16719                           ;stkvar	_g @ sp[(-56)+16]
 16720  010050  0EDB               	movlw	-37
 16721  010052  AEE3               	btfss	plusw1,7,c
 16722  010054  D02B               	goto	l12286
 16723                           
 16724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 16725  010056  0E01               	movlw	1
 16726  010058  6E0B               	movwf	(btemp+10)^0,c
 16727  01005A  0E00               	movlw	0
 16728  01005C  6E0C               	movwf	(btemp+11)^0,c
 16729                           
 16730                           ;stkvar	_sign @ sp[(-56)+42]
 16731  01005E  0EF2               	movlw	-14
 16732  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16733  010066  0EF3               	movlw	-13
 16734  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 16735                           
 16736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 16737                           ;stkvar	_g @ sp[(-56)+16]
 16738  01006E  0ED8               	movlw	-40
 16739  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 16740  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 16741  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 16742  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 16743  010088  EC36  F0DC         	call	___flneg	;wreg free
 16744                           
 16745                           ;stkvar	_g @ sp[(-56)+16]
 16746  01008C  0ED8               	movlw	-40
 16747  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 16748  010094  0ED9               	movlw	-39
 16749  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16750  01009C  0EDA               	movlw	-38
 16751  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16752  0100A4  0EDB               	movlw	-37
 16753  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 16754  0100AC                     l12286:
 16755                           
 16756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 16757                           ;stkvar	_n @ sp[(-56)+32]
 16758  0100AC  0EE8               	movlw	-24
 16759  0100AE  6AE3               	clrf	plusw1,c
 16760  0100B0  0EE9               	movlw	-23
 16761  0100B2  6AE3               	clrf	plusw1,c
 16762                           
 16763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 16764                           ;stkvar	_w @ sp[(-56)+38]
 16765  0100B4  0EEE               	movlw	-18
 16766  0100B6  0060  F0EB  FFE3   	movff	_width,plusw1
 16767  0100BC  0EEF               	movlw	-17
 16768  0100BE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 16769                           
 16770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 16771                           ;stkvar	_sign @ sp[(-56)+42]
 16772  0100C4  0EF2               	movlw	-14
 16773  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 16774  0100CC  0EF3               	movlw	-13
 16775  0100CE  50E3               	movf	plusw1,w,c
 16776  0100D0  1001               	iorwf	btemp^0,w,c
 16777  0100D2  A4D8               	btfss	status,2,c
 16778  0100D4  D002               	goto	u11230
 16779  0100D6  A43E               	btfss	_flags^0,2,c
 16780  0100D8  D036               	goto	l12306
 16781  0100DA                     u11230:
 16782                           
 16783                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 16784                           ;stkvar	_sign @ sp[(-56)+42]
 16785  0100DA  0EF2               	movlw	-14
 16786  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 16787  0100E2  0EF3               	movlw	-13
 16788  0100E4  50E3               	movf	plusw1,w,c
 16789  0100E6  1001               	iorwf	btemp^0,w,c
 16790  0100E8  A4D8               	btfss	status,2,c
 16791  0100EA  D002               	goto	l12298
 16792  0100EC  0E2B               	movlw	43
 16793  0100EE  D001               	goto	L17
 16794  0100F0                     l12298:
 16795  0100F0  0E2D               	movlw	45
 16796  0100F2                     L17:
 16797  0100F2  6E0B               	movwf	(btemp+10)^0,c
 16798  0100F4  0E00               	movlw	0
 16799  0100F6  6E0C               	movwf	(btemp+11)^0,c
 16800                           
 16801                           ;stkvar	_efgtoa$5754 @ sp[(-56)+10]
 16802  0100F8  0ED2               	movlw	-46
 16803  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16804  010100  0ED3               	movlw	-45
 16805  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 16806                           
 16807                           ;stkvar	_efgtoa$5754 @ sp[(-56)+10]
 16808  010108  0ED2               	movlw	-46
 16809  01010A  006F FF8C  F297    	movff	plusw1,_dbuf
 16810                           
 16811                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 16812                           ;stkvar	_n @ sp[(-56)+32]
 16813  010110  0EE8               	movlw	-24
 16814  010112  50E3               	movf	plusw1,w,c
 16815  010114  0F01               	addlw	1
 16816  010116  6E01               	movwf	btemp^0,c
 16817  010118  0EE8               	movlw	-24
 16818  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 16819  010120  6A01               	clrf	btemp^0,c
 16820  010122  0EE9               	movlw	-23
 16821  010124  50E3               	movf	plusw1,w,c
 16822  010126  2001               	addwfc	btemp^0,w,c
 16823  010128  6E01               	movwf	btemp^0,c
 16824  01012A  0EE9               	movlw	-23
 16825  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 16826                           
 16827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 16828                           ;stkvar	_w @ sp[(-56)+38]
 16829  010132  50E1               	movf	fsr1l,w,c
 16830  010134  0FEE               	addlw	-18
 16831  010136  6ED9               	movwf	fsr2l,c
 16832  010138  50E2               	movf	fsr1h,w,c
 16833  01013A  6EDA               	movwf	fsr2h,c
 16834  01013C  0EFF               	movlw	255
 16835  01013E  22DA               	addwfc	fsr2h,f,c
 16836  010140  06DE               	decf	postinc2,f,c
 16837  010142  0E00               	movlw	0
 16838  010144  5ADD               	subwfb	postdec2,f,c
 16839  010146                     l12306:
 16840                           
 16841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 16842                           ;stkvar	_g @ sp[(-56)+16]
 16843  010146  0ED8               	movlw	-40
 16844  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 16845  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 16846  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 16847  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 16848  010160  EC1F  F0C6         	call	___fpclassifyf	;wreg free
 16849  010164  0401               	decf	btemp^0,w,c
 16850  010166  1002               	iorwf	(btemp+1)^0,w,c
 16851  010168  A4D8               	btfss	status,2,c
 16852  01016A  D076               	goto	l12324
 16853  01016C  0EBF               	movlw	191
 16854  01016E  6E0B               	movwf	(btemp+10)^0,c
 16855  010170  0EFF               	movlw	255
 16856  010172  6E0C               	movwf	(btemp+11)^0,c
 16857                           
 16858                           ;stkvar	_c @ sp[(-56)+-7]
 16859  010174  0EC1               	movlw	-63
 16860  010176  50E3               	movf	plusw1,w,c
 16861  010178  6E09               	movwf	(btemp+8)^0,c
 16862  01017A  6A0A               	clrf	(btemp+9)^0,c
 16863  01017C  500B               	movf	(btemp+10)^0,w,c
 16864  01017E  2609               	addwf	(btemp+8)^0,f,c
 16865  010180  500C               	movf	(btemp+11)^0,w,c
 16866  010182  220A               	addwfc	(btemp+9)^0,f,c
 16867  010184  500A               	movf	(btemp+9)^0,w,c
 16868  010186  E106               	bnz	u11260
 16869  010188  0E1A               	movlw	26
 16870  01018A  5C09               	subwf	(btemp+8)^0,w,c
 16871  01018C  B0D8               	btfsc	status,0,c
 16872  01018E  D002               	goto	u11260
 16873  010190  0E01               	movlw	1
 16874  010192  D001               	goto	u11270
 16875  010194                     u11260:
 16876  010194  0E00               	movlw	0
 16877  010196                     u11270:
 16878  010196  6E0B               	movwf	(btemp+10)^0,c
 16879  010198  6A0C               	clrf	(btemp+11)^0,c
 16880                           
 16881                           ;stkvar	_efgtoa$5755 @ sp[(-56)+8]
 16882  01019A  0ED0               	movlw	-48
 16883  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16884  0101A2  0ED1               	movlw	-47
 16885  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16886                           
 16887                           ;stkvar	_efgtoa$5755 @ sp[(-56)+8]
 16888  0101AA  0ED0               	movlw	-48
 16889  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 16890  0101B2  0ED1               	movlw	-47
 16891  0101B4  50E3               	movf	plusw1,w,c
 16892  0101B6  1001               	iorwf	btemp^0,w,c
 16893  0101B8  B4D8               	btfsc	status,2,c
 16894  0101BA  D017               	goto	l12316
 16895                           
 16896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 16897  0101BC  0ED7               	movlw	low STR_65
 16898  0101BE  6EE6               	movwf	postinc1,c
 16899  0101C0  0EFF               	movlw	high STR_65
 16900  0101C2  6EE6               	movwf	postinc1,c
 16901                           
 16902                           ;stkvar	_n @ sp[(-58)+32]
 16903  0101C4  0E97               	movlw	low _dbuf
 16904  0101C6  6E0B               	movwf	(btemp+10)^0,c
 16905  0101C8  0E02               	movlw	high _dbuf
 16906  0101CA  6E0C               	movwf	(btemp+11)^0,c
 16907  0101CC  0EE6               	movlw	-26
 16908  0101CE  50E3               	movf	plusw1,w,c
 16909  0101D0  260B               	addwf	(btemp+10)^0,f,c
 16910  0101D2  0EE7               	movlw	-25
 16911  0101D4  50E3               	movf	plusw1,w,c
 16912  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 16913  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16914  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 16915  0101E4  EC15  F0D2         	call	_strcpy	;wreg free
 16916                           
 16917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 16918  0101E8  D016               	goto	l12318
 16919  0101EA                     l12316:
 16920                           
 16921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 16922  0101EA  0EDF               	movlw	low STR_66
 16923  0101EC  6EE6               	movwf	postinc1,c
 16924  0101EE  0EFF               	movlw	high STR_66
 16925  0101F0  6EE6               	movwf	postinc1,c
 16926                           
 16927                           ;stkvar	_n @ sp[(-58)+32]
 16928  0101F2  0E97               	movlw	low _dbuf
 16929  0101F4  6E0B               	movwf	(btemp+10)^0,c
 16930  0101F6  0E02               	movlw	high _dbuf
 16931  0101F8  6E0C               	movwf	(btemp+11)^0,c
 16932  0101FA  0EE6               	movlw	-26
 16933  0101FC  50E3               	movf	plusw1,w,c
 16934  0101FE  260B               	addwf	(btemp+10)^0,f,c
 16935  010200  0EE7               	movlw	-25
 16936  010202  50E3               	movf	plusw1,w,c
 16937  010204  220C               	addwfc	(btemp+11)^0,f,c
 16938  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16939  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16940  010212  EC15  F0D2         	call	_strcpy	;wreg free
 16941  010216                     l12318:
 16942                           
 16943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 16944                           ;stkvar	_w @ sp[(-56)+38]
 16945  010216  50E1               	movf	fsr1l,w,c
 16946  010218  0FEE               	addlw	-18
 16947  01021A  6ED9               	movwf	fsr2l,c
 16948  01021C  50E2               	movf	fsr1h,w,c
 16949  01021E  6EDA               	movwf	fsr2h,c
 16950  010220  0EFF               	movlw	255
 16951  010222  22DA               	addwfc	fsr2h,f,c
 16952  010224  0EFD               	movlw	253
 16953  010226  26DE               	addwf	postinc2,f,c
 16954  010228  0EFF               	movlw	255
 16955  01022A  22DD               	addwfc	postdec2,f,c
 16956  01022C                     l12320:
 16957                           
 16958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 16959                           ;stkvar	_w @ sp[(-56)+38]
 16960  01022C  0EEE               	movlw	-18
 16961  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 16962  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 16963  01023A  0E97               	movlw	low _dbuf
 16964  01023C  6EE6               	movwf	postinc1,c
 16965  01023E  0E02               	movlw	high _dbuf
 16966  010240  6EE6               	movwf	postinc1,c
 16967                           
 16968                           ;stkvar	_fp @ sp[(-60)+-2]
 16969  010242  0EC2               	movlw	-62
 16970  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 16971  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 16972  010250  ECAC  F0CE         	call	_pad	;wreg free
 16973  010254  EF1D  F089         	goto	l2280
 16974  010258                     l12324:
 16975                           
 16976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 16977                           ;stkvar	_g @ sp[(-56)+16]
 16978  010258  0ED8               	movlw	-40
 16979  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 16980  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 16981  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 16982  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 16983  010272  EC1F  F0C6         	call	___fpclassifyf	;wreg free
 16984  010276  5001               	movf	btemp^0,w,c
 16985  010278  1002               	iorwf	(btemp+1)^0,w,c
 16986  01027A  A4D8               	btfss	status,2,c
 16987  01027C  D056               	goto	l12342
 16988  01027E  0EBF               	movlw	191
 16989  010280  6E0B               	movwf	(btemp+10)^0,c
 16990  010282  0EFF               	movlw	255
 16991  010284  6E0C               	movwf	(btemp+11)^0,c
 16992                           
 16993                           ;stkvar	_c @ sp[(-56)+-7]
 16994  010286  0EC1               	movlw	-63
 16995  010288  50E3               	movf	plusw1,w,c
 16996  01028A  6E09               	movwf	(btemp+8)^0,c
 16997  01028C  6A0A               	clrf	(btemp+9)^0,c
 16998  01028E  500B               	movf	(btemp+10)^0,w,c
 16999  010290  2609               	addwf	(btemp+8)^0,f,c
 17000  010292  500C               	movf	(btemp+11)^0,w,c
 17001  010294  220A               	addwfc	(btemp+9)^0,f,c
 17002  010296  500A               	movf	(btemp+9)^0,w,c
 17003  010298  E106               	bnz	u11300
 17004  01029A  0E1A               	movlw	26
 17005  01029C  5C09               	subwf	(btemp+8)^0,w,c
 17006  01029E  B0D8               	btfsc	status,0,c
 17007  0102A0  D002               	goto	u11300
 17008  0102A2  0E01               	movlw	1
 17009  0102A4  D001               	goto	u11310
 17010  0102A6                     u11300:
 17011  0102A6  0E00               	movlw	0
 17012  0102A8                     u11310:
 17013  0102A8  6E0B               	movwf	(btemp+10)^0,c
 17014  0102AA  6A0C               	clrf	(btemp+11)^0,c
 17015                           
 17016                           ;stkvar	_efgtoa$5759 @ sp[(-56)+6]
 17017  0102AC  0ECE               	movlw	-50
 17018  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17019  0102B4  0ECF               	movlw	-49
 17020  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 17021                           
 17022                           ;stkvar	_efgtoa$5759 @ sp[(-56)+6]
 17023  0102BC  0ECE               	movlw	-50
 17024  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 17025  0102C4  0ECF               	movlw	-49
 17026  0102C6  50E3               	movf	plusw1,w,c
 17027  0102C8  1001               	iorwf	btemp^0,w,c
 17028  0102CA  B4D8               	btfsc	status,2,c
 17029  0102CC  D017               	goto	l12334
 17030                           
 17031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 17032  0102CE  0EDB               	movlw	low STR_69
 17033  0102D0  6EE6               	movwf	postinc1,c
 17034  0102D2  0EFF               	movlw	high STR_69
 17035  0102D4  6EE6               	movwf	postinc1,c
 17036                           
 17037                           ;stkvar	_n @ sp[(-58)+32]
 17038  0102D6  0E97               	movlw	low _dbuf
 17039  0102D8  6E0B               	movwf	(btemp+10)^0,c
 17040  0102DA  0E02               	movlw	high _dbuf
 17041  0102DC  6E0C               	movwf	(btemp+11)^0,c
 17042  0102DE  0EE6               	movlw	-26
 17043  0102E0  50E3               	movf	plusw1,w,c
 17044  0102E2  260B               	addwf	(btemp+10)^0,f,c
 17045  0102E4  0EE7               	movlw	-25
 17046  0102E6  50E3               	movf	plusw1,w,c
 17047  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 17048  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17049  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 17050  0102F6  EC15  F0D2         	call	_strcpy	;wreg free
 17051                           
 17052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 17053  0102FA  D78D               	goto	l12318
 17054  0102FC                     l12334:
 17055                           
 17056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 17057  0102FC  0EE3               	movlw	low STR_70
 17058  0102FE  6EE6               	movwf	postinc1,c
 17059  010300  0EFF               	movlw	high STR_70
 17060  010302  6EE6               	movwf	postinc1,c
 17061                           
 17062                           ;stkvar	_n @ sp[(-58)+32]
 17063  010304  0E97               	movlw	low _dbuf
 17064  010306  6E0B               	movwf	(btemp+10)^0,c
 17065  010308  0E02               	movlw	high _dbuf
 17066  01030A  6E0C               	movwf	(btemp+11)^0,c
 17067  01030C  0EE6               	movlw	-26
 17068  01030E  50E3               	movf	plusw1,w,c
 17069  010310  260B               	addwf	(btemp+10)^0,f,c
 17070  010312  0EE7               	movlw	-25
 17071  010314  50E3               	movf	plusw1,w,c
 17072  010316  220C               	addwfc	(btemp+11)^0,f,c
 17073  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17074  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 17075  010324  EC15  F0D2         	call	_strcpy	;wreg free
 17076  010328  D776               	goto	l12318
 17077  01032A                     l12342:
 17078                           
 17079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 17080  01032A  0E00               	movlw	0
 17081  01032C  6E09               	movwf	(btemp+8)^0,c
 17082  01032E  0E00               	movlw	0
 17083  010330  6E0A               	movwf	(btemp+9)^0,c
 17084  010332  0E80               	movlw	128
 17085  010334  6E0B               	movwf	(btemp+10)^0,c
 17086  010336  0E3F               	movlw	63
 17087  010338  6E0C               	movwf	(btemp+11)^0,c
 17088                           
 17089                           ;stkvar	_u @ sp[(-56)+12]
 17090  01033A  0ED4               	movlw	-44
 17091  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 17092  010342  0ED5               	movlw	-43
 17093  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17094  01034A  0ED6               	movlw	-42
 17095  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17096  010352  0ED7               	movlw	-41
 17097  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 17098                           
 17099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 17100                           ;stkvar	_e @ sp[(-56)+34]
 17101  01035A  0EEA               	movlw	-22
 17102  01035C  6AE3               	clrf	plusw1,c
 17103  01035E  0EEB               	movlw	-21
 17104  010360  6AE3               	clrf	plusw1,c
 17105                           
 17106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 17107  010362  0E00               	movlw	0
 17108  010364  6EE6               	movwf	postinc1,c
 17109  010366  0E00               	movlw	0
 17110  010368  6EE6               	movwf	postinc1,c
 17111  01036A  0E00               	movlw	0
 17112  01036C  6EE6               	movwf	postinc1,c
 17113  01036E  0E00               	movlw	0
 17114  010370  6EE6               	movwf	postinc1,c
 17115                           
 17116                           ;stkvar	_g @ sp[(-60)+16]
 17117  010372  0ED4               	movlw	-44
 17118  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 17119  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 17120  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 17121  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 17122  01038C  EC4F  F0D3         	call	___fleq	;wreg free
 17123  010390  A001               	btfss	btemp& (0+255),0,c
 17124  010392  D039               	goto	l12354
 17125  010394  D0BC               	goto	u11350
 17126  010396                     l12350:
 17127                           
 17128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 17129  010396  0E00               	movlw	0
 17130  010398  6EE6               	movwf	postinc1,c
 17131  01039A  0E00               	movlw	0
 17132  01039C  6EE6               	movwf	postinc1,c
 17133  01039E  0E20               	movlw	32
 17134  0103A0  6EE6               	movwf	postinc1,c
 17135  0103A2  0E41               	movlw	65
 17136  0103A4  6EE6               	movwf	postinc1,c
 17137                           
 17138                           ;stkvar	_u @ sp[(-60)+12]
 17139  0103A6  0ED0               	movlw	-48
 17140  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17141  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 17142  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 17143  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 17144  0103C0  EC01  F09F         	call	___flmul	;wreg free
 17145                           
 17146                           ;stkvar	_u @ sp[(-56)+12]
 17147  0103C4  0ED4               	movlw	-44
 17148  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 17149  0103CC  0ED5               	movlw	-43
 17150  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17151  0103D4  0ED6               	movlw	-42
 17152  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17153  0103DC  0ED7               	movlw	-41
 17154  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 17155                           
 17156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 17157                           ;stkvar	_e @ sp[(-56)+34]
 17158  0103E4  0EEA               	movlw	-22
 17159  0103E6  50E3               	movf	plusw1,w,c
 17160  0103E8  0F01               	addlw	1
 17161  0103EA  6E01               	movwf	btemp^0,c
 17162  0103EC  0EEA               	movlw	-22
 17163  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 17164  0103F4  6A01               	clrf	btemp^0,c
 17165  0103F6  0EEB               	movlw	-21
 17166  0103F8  50E3               	movf	plusw1,w,c
 17167  0103FA  2001               	addwfc	btemp^0,w,c
 17168  0103FC  6E01               	movwf	btemp^0,c
 17169  0103FE  0EEB               	movlw	-21
 17170  010400  0060  F007  FFE3   	movff	btemp,plusw1
 17171  010406                     l12354:
 17172                           
 17173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 17174  010406  0E00               	movlw	0
 17175  010408  6EE6               	movwf	postinc1,c
 17176  01040A  0E00               	movlw	0
 17177  01040C  6EE6               	movwf	postinc1,c
 17178  01040E  0E20               	movlw	32
 17179  010410  6EE6               	movwf	postinc1,c
 17180  010412  0E41               	movlw	65
 17181  010414  6EE6               	movwf	postinc1,c
 17182                           
 17183                           ;stkvar	_u @ sp[(-60)+12]
 17184  010416  0ED0               	movlw	-48
 17185  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 17186  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 17187  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 17188  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 17189  010430  EC01  F09F         	call	___flmul	;wreg free
 17190  010434  0060  F007  FFE6   	movff	btemp,postinc1
 17191  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17192  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17193  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 17194                           
 17195                           ;stkvar	_g @ sp[(-60)+16]
 17196  01044C  0ED4               	movlw	-44
 17197  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 17198  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 17199  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 17200  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 17201  010466  EC26  F0C9         	call	___flge	;wreg free
 17202  01046A  A001               	btfss	btemp& (0+255),0,c
 17203  01046C  D032               	goto	l12360
 17204  01046E  D793               	goto	l12350
 17205  010470                     l12356:
 17206                           
 17207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 17208  010470  0E00               	movlw	0
 17209  010472  6EE6               	movwf	postinc1,c
 17210  010474  0E00               	movlw	0
 17211  010476  6EE6               	movwf	postinc1,c
 17212  010478  0E20               	movlw	32
 17213  01047A  6EE6               	movwf	postinc1,c
 17214  01047C  0E41               	movlw	65
 17215  01047E  6EE6               	movwf	postinc1,c
 17216                           
 17217                           ;stkvar	_u @ sp[(-60)+12]
 17218  010480  0ED0               	movlw	-48
 17219  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 17220  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 17221  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 17222  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 17223  01049A  ECF4  F0A6         	call	___fldiv	;wreg free
 17224                           
 17225                           ;stkvar	_u @ sp[(-56)+12]
 17226  01049E  0ED4               	movlw	-44
 17227  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 17228  0104A6  0ED5               	movlw	-43
 17229  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17230  0104AE  0ED6               	movlw	-42
 17231  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17232  0104B6  0ED7               	movlw	-41
 17233  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 17234                           
 17235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 17236                           ;stkvar	_e @ sp[(-56)+34]
 17237  0104BE  50E1               	movf	fsr1l,w,c
 17238  0104C0  0FEA               	addlw	-22
 17239  0104C2  6ED9               	movwf	fsr2l,c
 17240  0104C4  50E2               	movf	fsr1h,w,c
 17241  0104C6  6EDA               	movwf	fsr2h,c
 17242  0104C8  0EFF               	movlw	255
 17243  0104CA  22DA               	addwfc	fsr2h,f,c
 17244  0104CC  06DE               	decf	postinc2,f,c
 17245  0104CE  0E00               	movlw	0
 17246  0104D0  5ADD               	subwfb	postdec2,f,c
 17247  0104D2                     l12360:
 17248                           
 17249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 17250                           ;stkvar	_u @ sp[(-56)+12]
 17251  0104D2  0ED4               	movlw	-44
 17252  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 17253  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 17254  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 17255  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 17256                           
 17257                           ;stkvar	_g @ sp[(-60)+16]
 17258  0104EC  0ED4               	movlw	-44
 17259  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 17260  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 17261  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 17262  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 17263  010506  EC26  F0C9         	call	___flge	;wreg free
 17264  01050A  A001               	btfss	btemp& (0+255),0,c
 17265  01050C  D7B1               	goto	l12356
 17266  01050E                     u11350:
 17267                           
 17268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 17269                           ;stkvar	_c @ sp[(-56)+-7]
 17270  01050E  0EC1               	movlw	-63
 17271  010510  50E3               	movf	plusw1,w,c
 17272  010512  6EE6               	movwf	postinc1,c
 17273  010514  0E00               	movlw	0
 17274  010516  6EE6               	movwf	postinc1,c
 17275  010518  EC23  F0D8         	call	_tolower	;wreg free
 17276                           
 17277                           ;stkvar	_mode @ sp[(-56)+54]
 17278  01051C  0EFE               	movlw	-2
 17279  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 17280                           
 17281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 17282                           ;stkvar	_mode @ sp[(-56)+54]
 17283                           ;stkvar	_nmode @ sp[(-56)+55]
 17284  010524  0EFE               	movlw	-2
 17285  010526  006F FF8C  F001    	movff	plusw1,btemp
 17286  01052C  0EFF               	movlw	-1
 17287  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 17288                           
 17289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 17290                           ;stkvar	_mode @ sp[(-56)+54]
 17291  010534  0EFE               	movlw	-2
 17292  010536  006F FF8C  F001    	movff	plusw1,btemp
 17293  01053C  0E67               	movlw	103
 17294  01053E  1801               	xorwf	btemp^0,w,c
 17295  010540  A4D8               	btfss	status,2,c
 17296  010542  D025               	goto	l12378
 17297                           
 17298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 17299  010544  503C               	movf	_prec^0,w,c
 17300  010546  103D               	iorwf	(_prec+1)^0,w,c
 17301  010548  A4D8               	btfss	status,2,c
 17302  01054A  D004               	goto	l12372
 17303                           
 17304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 17305  01054C  0E00               	movlw	0
 17306  01054E  6E3D               	movwf	(_prec+1)^0,c
 17307  010550  0E01               	movlw	1
 17308  010552  6E3C               	movwf	_prec^0,c
 17309  010554                     l12372:
 17310                           
 17311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 17312  010554  BE3D               	btfsc	(_prec+1)^0,7,c
 17313  010556  D005               	goto	u11380
 17314  010558  503D               	movf	(_prec+1)^0,w,c
 17315  01055A  E110               	bnz	l12376
 17316  01055C  043C               	decf	_prec^0,w,c
 17317  01055E  B0D8               	btfsc	status,0,c
 17318  010560  D00D               	goto	l12376
 17319  010562                     u11380:
 17320  010562  0E06               	movlw	6
 17321  010564  6E0B               	movwf	(btemp+10)^0,c
 17322  010566  0E00               	movlw	0
 17323  010568  6E0C               	movwf	(btemp+11)^0,c
 17324                           
 17325                           ;stkvar	_p @ sp[(-56)+40]
 17326  01056A  0EF0               	movlw	-16
 17327  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17328  010572  0EF1               	movlw	-15
 17329  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 17330  01057A  D00C               	goto	l12384
 17331  01057C                     l12376:
 17332                           
 17333                           ;stkvar	_p @ sp[(-56)+40]
 17334  01057C  0EF0               	movlw	-16
 17335  01057E  0060  F0F3  FFE3   	movff	_prec,plusw1
 17336  010584  0EF1               	movlw	-15
 17337  010586  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 17338  01058C  D003               	goto	l12384
 17339  01058E                     l12378:
 17340                           
 17341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 17342  01058E  AE3D               	btfss	(_prec+1)^0,7,c
 17343  010590  D7F5               	goto	l12376
 17344  010592  D7E7               	goto	u11380
 17345  010594                     l12384:
 17346                           
 17347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 17348                           ;stkvar	_mode @ sp[(-56)+54]
 17349  010594  0EFE               	movlw	-2
 17350  010596  006F FF8C  F001    	movff	plusw1,btemp
 17351  01059C  0E67               	movlw	103
 17352  01059E  1801               	xorwf	btemp^0,w,c
 17353  0105A0  A4D8               	btfss	status,2,c
 17354  0105A2  D02F               	goto	l12394
 17355                           
 17356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 17357                           ;stkvar	_e @ sp[(-56)+34]
 17358  0105A4  0EEB               	movlw	-21
 17359  0105A6  AEE3               	btfss	plusw1,7,c
 17360  0105A8  D00E               	goto	u11410
 17361  0105AA  0EEA               	movlw	-22
 17362  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 17363  0105B2  0EFC               	movlw	252
 17364  0105B4  5E01               	subwf	btemp^0,f,c
 17365  0105B6  0EEB               	movlw	-21
 17366  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 17367  0105BE  0EFF               	movlw	255
 17368  0105C0  5A01               	subwfb	btemp^0,f,c
 17369  0105C2  A0D8               	btfss	status,0,c
 17370  0105C4  D018               	goto	l12392
 17371  0105C6                     u11410:
 17372                           
 17373                           ;stkvar	_e @ sp[(-56)+34]
 17374                           ;stkvar	_p @ sp[(-56)+40]
 17375  0105C6  0EF0               	movlw	-16
 17376  0105C8  50E3               	movf	plusw1,w,c
 17377  0105CA  0FFF               	addlw	255
 17378  0105CC  6E0B               	movwf	(btemp+10)^0,c
 17379  0105CE  0EF1               	movlw	-15
 17380  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 17381  0105D6  0EFF               	movlw	255
 17382  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 17383  0105DA  0EEA               	movlw	-22
 17384  0105DC  50E3               	movf	plusw1,w,c
 17385  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 17386  0105E0  500C               	movf	(btemp+11)^0,w,c
 17387  0105E2  0A80               	xorlw	128
 17388  0105E4  6E01               	movwf	btemp^0,c
 17389  0105E6  0EEB               	movlw	-21
 17390  0105E8  50E3               	movf	plusw1,w,c
 17391  0105EA  0A80               	xorlw	128
 17392  0105EC  5801               	subwfb	btemp^0,w,c
 17393  0105EE  A0D8               	btfss	status,0,c
 17394  0105F0  D002               	goto	l12392
 17395                           
 17396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 17397  0105F2  0E66               	movlw	102
 17398  0105F4  D001               	goto	L18
 17399  0105F6                     l12392:
 17400                           
 17401                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 17402  0105F6  0E65               	movlw	101
 17403  0105F8                     L18:
 17404  0105F8  6E0C               	movwf	(btemp+11)^0,c
 17405                           
 17406                           ;stkvar	_nmode @ sp[(-56)+55]
 17407  0105FA  0EFF               	movlw	-1
 17408  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17409  010602                     l12394:
 17410                           
 17411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 17412                           ;stkvar	_p @ sp[(-56)+40]
 17413                           ;stkvar	_m @ sp[(-56)+48]
 17414  010602  0EF0               	movlw	-16
 17415  010604  006F FF8C  F001    	movff	plusw1,btemp
 17416  01060A  0EF8               	movlw	-8
 17417  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 17418  010612  0EF1               	movlw	-15
 17419  010614  006F FF8C  F001    	movff	plusw1,btemp
 17420  01061A  0EF9               	movlw	-7
 17421  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 17422                           
 17423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 17424                           ;stkvar	_mode @ sp[(-56)+54]
 17425  010622  0EFE               	movlw	-2
 17426  010624  006F FF8C  F001    	movff	plusw1,btemp
 17427  01062A  0E67               	movlw	103
 17428  01062C  1801               	xorwf	btemp^0,w,c
 17429  01062E  A4D8               	btfss	status,2,c
 17430  010630  D00B               	goto	u11450
 17431                           
 17432                           ;stkvar	_nmode @ sp[(-56)+55]
 17433  010632  0EFF               	movlw	-1
 17434  010634  006F FF8C  F001    	movff	plusw1,btemp
 17435  01063A  0E66               	movlw	102
 17436  01063C  1801               	xorwf	btemp^0,w,c
 17437  01063E  A4D8               	btfss	status,2,c
 17438  010640  D014               	goto	l2309
 17439                           
 17440                           ;stkvar	_e @ sp[(-56)+34]
 17441  010642  0EEB               	movlw	-21
 17442  010644  AEE3               	btfss	plusw1,7,c
 17443  010646  D011               	goto	l2309
 17444  010648                     u11450:
 17445                           
 17446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 17447                           ;stkvar	_m @ sp[(-56)+48]
 17448  010648  0EF8               	movlw	-8
 17449  01064A  50E3               	movf	plusw1,w,c
 17450  01064C  0F01               	addlw	1
 17451  01064E  6E01               	movwf	btemp^0,c
 17452  010650  0EF8               	movlw	-8
 17453  010652  0060  F007  FFE3   	movff	btemp,plusw1
 17454  010658  6A01               	clrf	btemp^0,c
 17455  01065A  0EF9               	movlw	-7
 17456  01065C  50E3               	movf	plusw1,w,c
 17457  01065E  2001               	addwfc	btemp^0,w,c
 17458  010660  6E01               	movwf	btemp^0,c
 17459  010662  0EF9               	movlw	-7
 17460  010664  0060  F007  FFE3   	movff	btemp,plusw1
 17461  01066A                     l2309:
 17462                           
 17463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 17464                           ;stkvar	_nmode @ sp[(-56)+55]
 17465  01066A  0EFF               	movlw	-1
 17466  01066C  006F FF8C  F001    	movff	plusw1,btemp
 17467  010672  0E66               	movlw	102
 17468  010674  1801               	xorwf	btemp^0,w,c
 17469  010676  A4D8               	btfss	status,2,c
 17470  010678  D03B               	goto	l12414
 17471                           
 17472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 17473                           ;stkvar	_e @ sp[(-56)+34]
 17474  01067A  0EEB               	movlw	-21
 17475  01067C  AEE3               	btfss	plusw1,7,c
 17476  01067E  D01C               	goto	l12410
 17477                           
 17478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 17479  010680  0E00               	movlw	0
 17480  010682  6E09               	movwf	(btemp+8)^0,c
 17481  010684  0E00               	movlw	0
 17482  010686  6E0A               	movwf	(btemp+9)^0,c
 17483  010688  0E80               	movlw	128
 17484  01068A  6E0B               	movwf	(btemp+10)^0,c
 17485  01068C  0E3F               	movlw	63
 17486  01068E  6E0C               	movwf	(btemp+11)^0,c
 17487                           
 17488                           ;stkvar	_u @ sp[(-56)+12]
 17489  010690  0ED4               	movlw	-44
 17490  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 17491  010698  0ED5               	movlw	-43
 17492  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17493  0106A0  0ED6               	movlw	-42
 17494  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17495  0106A8  0ED7               	movlw	-41
 17496  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17497                           
 17498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 17499                           ;stkvar	_e @ sp[(-56)+34]
 17500  0106B0  0EEA               	movlw	-22
 17501  0106B2  6AE3               	clrf	plusw1,c
 17502  0106B4  0EEB               	movlw	-21
 17503  0106B6  6AE3               	clrf	plusw1,c
 17504  0106B8                     l12410:
 17505                           
 17506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 17507                           ;stkvar	_mode @ sp[(-56)+54]
 17508  0106B8  0EFE               	movlw	-2
 17509  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 17510  0106C0  0E67               	movlw	103
 17511  0106C2  1801               	xorwf	btemp^0,w,c
 17512  0106C4  B4D8               	btfsc	status,2,c
 17513  0106C6  D014               	goto	l12414
 17514                           
 17515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 17516                           ;stkvar	_e @ sp[(-56)+34]
 17517                           ;stkvar	_m @ sp[(-56)+48]
 17518  0106C8  0EF8               	movlw	-8
 17519  0106CA  50E3               	movf	plusw1,w,c
 17520  0106CC  6E01               	movwf	btemp^0,c
 17521  0106CE  0EEA               	movlw	-22
 17522  0106D0  50E3               	movf	plusw1,w,c
 17523  0106D2  2601               	addwf	btemp^0,f,c
 17524  0106D4  0EF8               	movlw	-8
 17525  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 17526  0106DC  0EF9               	movlw	-7
 17527  0106DE  50E3               	movf	plusw1,w,c
 17528  0106E0  6E01               	movwf	btemp^0,c
 17529  0106E2  0EEB               	movlw	-21
 17530  0106E4  50E3               	movf	plusw1,w,c
 17531  0106E6  2201               	addwfc	btemp^0,f,c
 17532  0106E8  0EF9               	movlw	-7
 17533  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 17534  0106F0                     l12414:
 17535                           
 17536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 17537                           ;stkvar	_i @ sp[(-56)+36]
 17538  0106F0  0EEC               	movlw	-20
 17539  0106F2  6AE3               	clrf	plusw1,c
 17540  0106F4  0EED               	movlw	-19
 17541  0106F6  6AE3               	clrf	plusw1,c
 17542                           
 17543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 17544                           ;stkvar	_g @ sp[(-56)+16]
 17545  0106F8  0ED8               	movlw	-40
 17546  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 17547  010700  0ED9               	movlw	-39
 17548  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 17549  010708  0EDA               	movlw	-38
 17550  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17551  010710  0EDB               	movlw	-37
 17552  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 17553                           
 17554                           ;stkvar	_h @ sp[(-56)+24]
 17555  010718  0EE0               	movlw	-32
 17556  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17557  010720  0EE1               	movlw	-31
 17558  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17559  010728  0EE2               	movlw	-30
 17560  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17561  010730  0EE3               	movlw	-29
 17562  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 17563                           
 17564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 17565                           ;stkvar	_u @ sp[(-56)+12]
 17566  010738  0ED4               	movlw	-44
 17567  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 17568  010740  0ED5               	movlw	-43
 17569  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 17570  010748  0ED6               	movlw	-42
 17571  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17572  010750  0ED7               	movlw	-41
 17573  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 17574                           
 17575                           ;stkvar	_ou @ sp[(-56)+28]
 17576  010758  0EE4               	movlw	-28
 17577  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17578  010760  0EE5               	movlw	-27
 17579  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17580  010768  0EE6               	movlw	-26
 17581  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17582  010770  0EE7               	movlw	-25
 17583  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 17584                           
 17585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 17586  010778  D0D6               	goto	l12430
 17587  01077A                     l12420:
 17588                           
 17589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 17590                           ;stkvar	_u @ sp[(-56)+12]
 17591  01077A  0ED4               	movlw	-44
 17592  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 17593  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 17594  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 17595  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 17596                           
 17597                           ;stkvar	_h @ sp[(-60)+24]
 17598  010794  0EDC               	movlw	-36
 17599  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 17600  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 17601  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 17602  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17603  0107AE  ECF4  F0A6         	call	___fldiv	;wreg free
 17604  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 17605  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17606  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17607  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 17608  0107CA  EC7E  F0B2         	call	_floorf	;wreg free
 17609                           
 17610                           ;stkvar	_l @ sp[(-56)+20]
 17611  0107CE  0EDC               	movlw	-36
 17612  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 17613  0107D6  0EDD               	movlw	-35
 17614  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17615  0107DE  0EDE               	movlw	-34
 17616  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17617  0107E6  0EDF               	movlw	-33
 17618  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 17619                           
 17620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 17621                           ;stkvar	_l @ sp[(-56)+20]
 17622  0107EE  0EDC               	movlw	-36
 17623  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 17624  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 17625  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 17626  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 17627  010808  EC6D  F0C8         	call	___fltol	;wreg free
 17628  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 17629  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 17630                           
 17631                           ;stkvar	_d @ sp[(-56)+44]
 17632  010818  0EF4               	movlw	-12
 17633  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17634  010820  0EF5               	movlw	-11
 17635  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 17636                           
 17637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 17638                           ;stkvar	_u @ sp[(-56)+12]
 17639  010828  0ED4               	movlw	-44
 17640  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 17641  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 17642  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 17643  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 17644                           
 17645                           ;stkvar	_l @ sp[(-60)+20]
 17646  010842  0ED8               	movlw	-40
 17647  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 17648  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 17649  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 17650  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 17651  01085C  EC01  F09F         	call	___flmul	;wreg free
 17652  010860  0060  F007  FFE6   	movff	btemp,postinc1
 17653  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17654  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17655  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 17656                           
 17657                           ;stkvar	_h @ sp[(-60)+24]
 17658  010878  0EDC               	movlw	-36
 17659  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 17660  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 17661  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 17662  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 17663  010892  EC0C  F0DD         	call	___flsub	;wreg free
 17664                           
 17665                           ;stkvar	_h @ sp[(-56)+24]
 17666  010896  0EE0               	movlw	-32
 17667  010898  0060  F007  FFE3   	movff	btemp,plusw1
 17668  01089E  0EE1               	movlw	-31
 17669  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17670  0108A6  0EE2               	movlw	-30
 17671  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17672  0108AE  0EE3               	movlw	-29
 17673  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 17674                           
 17675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 17676  0108B6  0E00               	movlw	0
 17677  0108B8  6EE6               	movwf	postinc1,c
 17678  0108BA  0E00               	movlw	0
 17679  0108BC  6EE6               	movwf	postinc1,c
 17680  0108BE  0E20               	movlw	32
 17681  0108C0  6EE6               	movwf	postinc1,c
 17682  0108C2  0E41               	movlw	65
 17683  0108C4  6EE6               	movwf	postinc1,c
 17684                           
 17685                           ;stkvar	_u @ sp[(-60)+12]
 17686  0108C6  0ED0               	movlw	-48
 17687  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 17688  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 17689  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 17690  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 17691  0108E0  ECF4  F0A6         	call	___fldiv	;wreg free
 17692                           
 17693                           ;stkvar	_u @ sp[(-56)+12]
 17694  0108E4  0ED4               	movlw	-44
 17695  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 17696  0108EC  0ED5               	movlw	-43
 17697  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17698  0108F4  0ED6               	movlw	-42
 17699  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17700  0108FC  0ED7               	movlw	-41
 17701  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 17702                           
 17703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 17704                           ;stkvar	_i @ sp[(-56)+36]
 17705  010904  0EEC               	movlw	-20
 17706  010906  50E3               	movf	plusw1,w,c
 17707  010908  0F01               	addlw	1
 17708  01090A  6E01               	movwf	btemp^0,c
 17709  01090C  0EEC               	movlw	-20
 17710  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 17711  010914  6A01               	clrf	btemp^0,c
 17712  010916  0EED               	movlw	-19
 17713  010918  50E3               	movf	plusw1,w,c
 17714  01091A  2001               	addwfc	btemp^0,w,c
 17715  01091C  6E01               	movwf	btemp^0,c
 17716  01091E  0EED               	movlw	-19
 17717  010920  0060  F007  FFE3   	movff	btemp,plusw1
 17718  010926                     l12430:
 17719                           
 17720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 17721                           ;stkvar	_m @ sp[(-56)+48]
 17722                           ;stkvar	_i @ sp[(-56)+36]
 17723  010926  50E1               	movf	fsr1l,w,c
 17724  010928  0FEC               	addlw	-20
 17725  01092A  6ED9               	movwf	fsr2l,c
 17726  01092C  50E2               	movf	fsr1h,w,c
 17727  01092E  6EDA               	movwf	fsr2h,c
 17728  010930  0EFF               	movlw	255
 17729  010932  22DA               	addwfc	fsr2h,f,c
 17730  010934  0EF8               	movlw	-8
 17731  010936  50E3               	movf	plusw1,w,c
 17732  010938  5CDE               	subwf	postinc2,w,c
 17733  01093A  50DE               	movf	postinc2,w,c
 17734  01093C  0A80               	xorlw	128
 17735  01093E  6E01               	movwf	btemp^0,c
 17736  010940  0EF9               	movlw	-7
 17737  010942  50E3               	movf	plusw1,w,c
 17738  010944  0A80               	xorlw	128
 17739  010946  5801               	subwfb	btemp^0,w,c
 17740  010948  A0D8               	btfss	status,0,c
 17741  01094A  D717               	goto	l12420
 17742                           
 17743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 17744  01094C  0E00               	movlw	0
 17745  01094E  6EE6               	movwf	postinc1,c
 17746  010950  0E00               	movlw	0
 17747  010952  6EE6               	movwf	postinc1,c
 17748  010954  0EA0               	movlw	160
 17749  010956  6EE6               	movwf	postinc1,c
 17750  010958  0E40               	movlw	64
 17751  01095A  6EE6               	movwf	postinc1,c
 17752                           
 17753                           ;stkvar	_u @ sp[(-60)+12]
 17754  01095C  0ED0               	movlw	-48
 17755  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 17756  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 17757  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 17758  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 17759  010976  EC01  F09F         	call	___flmul	;wreg free
 17760                           
 17761                           ;stkvar	_l @ sp[(-56)+20]
 17762  01097A  0EDC               	movlw	-36
 17763  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 17764  010982  0EDD               	movlw	-35
 17765  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17766  01098A  0EDE               	movlw	-34
 17767  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17768  010992  0EDF               	movlw	-33
 17769  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 17770                           
 17771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 17772                           ;stkvar	_l @ sp[(-56)+20]
 17773  01099A  0EDC               	movlw	-36
 17774  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 17775  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 17776  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17777  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 17778                           
 17779                           ;stkvar	_h @ sp[(-60)+24]
 17780  0109B4  0EDC               	movlw	-36
 17781  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 17782  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 17783  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 17784  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 17785  0109CE  EC26  F0C9         	call	___flge	;wreg free
 17786  0109D2  A001               	btfss	btemp& (0+255),0,c
 17787  0109D4  D021               	goto	u11520
 17788                           
 17789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 17790                           ;stkvar	_l @ sp[(-56)+20]
 17791                           
 17792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 17793                           
 17794                           ;stkvar	_l @ sp[(-56)+20]
 17795                           
 17796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 17797  0109D6  0EDC               	movlw	-36
 17798  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 17799  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 17800  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 17801  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 17802                           
 17803                           ;stkvar	_h @ sp[(-60)+24]
 17804  0109F0  0EDC               	movlw	-36
 17805  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 17806  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 17807  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 17808  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 17809  010A0A  EC4F  F0D3         	call	___fleq	;wreg free
 17810  010A0E  A001               	btfss	btemp& (0+255),0,c
 17811  010A10  D01B               	goto	l12444
 17812                           
 17813                           ;stkvar	_d @ sp[(-56)+44]
 17814  010A12  0EF4               	movlw	-12
 17815  010A14  B0E3               	btfsc	plusw1,0,c
 17816  010A16  D018               	goto	l12444
 17817  010A18                     u11520:
 17818                           
 17819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 17820  010A18  0E00               	movlw	0
 17821  010A1A  6E09               	movwf	(btemp+8)^0,c
 17822  010A1C  0E00               	movlw	0
 17823  010A1E  6E0A               	movwf	(btemp+9)^0,c
 17824  010A20  0E00               	movlw	0
 17825  010A22  6E0B               	movwf	(btemp+10)^0,c
 17826  010A24  0E00               	movlw	0
 17827  010A26  6E0C               	movwf	(btemp+11)^0,c
 17828                           
 17829                           ;stkvar	_l @ sp[(-56)+20]
 17830  010A28  0EDC               	movlw	-36
 17831  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17832  010A30  0EDD               	movlw	-35
 17833  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17834  010A38  0EDE               	movlw	-34
 17835  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17836  010A40  0EDF               	movlw	-33
 17837  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 17838  010A48                     l12444:
 17839                           
 17840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 17841                           ;stkvar	_l @ sp[(-56)+20]
 17842  010A48  0EDC               	movlw	-36
 17843  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 17844  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 17845  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 17846  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17847                           
 17848                           ;stkvar	_g @ sp[(-60)+16]
 17849  010A62  0ED4               	movlw	-44
 17850  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 17851  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 17852  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 17853  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 17854  010A7C  EC16  F0A3         	call	___fladd	;wreg free
 17855                           
 17856                           ;stkvar	_h @ sp[(-56)+24]
 17857  010A80  0EE0               	movlw	-32
 17858  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 17859  010A88  0EE1               	movlw	-31
 17860  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17861  010A90  0EE2               	movlw	-30
 17862  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17863  010A98  0EE3               	movlw	-29
 17864  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 17865                           
 17866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 17867                           ;stkvar	_ou @ sp[(-56)+28]
 17868  010AA0  0EE4               	movlw	-28
 17869  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 17870  010AA8  0EE5               	movlw	-27
 17871  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 17872  010AB0  0EE6               	movlw	-26
 17873  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 17874  010AB8  0EE7               	movlw	-25
 17875  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 17876                           
 17877                           ;stkvar	_u @ sp[(-56)+12]
 17878  010AC0  0ED4               	movlw	-44
 17879  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 17880  010AC8  0ED5               	movlw	-43
 17881  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17882  010AD0  0ED6               	movlw	-42
 17883  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17884  010AD8  0ED7               	movlw	-41
 17885  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17886                           
 17887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 17888                           ;stkvar	_nmode @ sp[(-56)+55]
 17889  010AE0  0EFF               	movlw	-1
 17890  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 17891  010AE8  0E65               	movlw	101
 17892  010AEA  1801               	xorwf	btemp^0,w,c
 17893  010AEC  B4D8               	btfsc	status,2,c
 17894  010AEE  D011               	goto	l12452
 17895                           
 17896                           ;stkvar	_e @ sp[(-56)+34]
 17897                           ;stkvar	_ne @ sp[(-56)+46]
 17898  010AF0  0EEA               	movlw	-22
 17899  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 17900  010AF8  0EF6               	movlw	-10
 17901  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 17902  010B00  0EEB               	movlw	-21
 17903  010B02  006F FF8C  F001    	movff	plusw1,btemp
 17904  010B08  0EF7               	movlw	-9
 17905  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 17906  010B10  D004               	goto	l2324
 17907  010B12                     l12452:
 17908                           
 17909                           ;stkvar	_ne @ sp[(-56)+46]
 17910  010B12  0EF6               	movlw	-10
 17911  010B14  6AE3               	clrf	plusw1,c
 17912  010B16  0EF7               	movlw	-9
 17913  010B18  6AE3               	clrf	plusw1,c
 17914  010B1A                     l2324:
 17915                           
 17916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 17917                           ;stkvar	_pp @ sp[(-56)+50]
 17918  010B1A  0EFA               	movlw	-6
 17919  010B1C  6AE3               	clrf	plusw1,c
 17920  010B1E  0EFB               	movlw	-5
 17921  010B20  6AE3               	clrf	plusw1,c
 17922                           
 17923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 17924                           ;stkvar	_t @ sp[(-56)+52]
 17925  010B22  0EFC               	movlw	-4
 17926  010B24  6AE3               	clrf	plusw1,c
 17927  010B26  0EFD               	movlw	-3
 17928  010B28  6AE3               	clrf	plusw1,c
 17929                           
 17930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 17931                           ;stkvar	_i @ sp[(-56)+36]
 17932  010B2A  0EEC               	movlw	-20
 17933  010B2C  6AE3               	clrf	plusw1,c
 17934  010B2E  0EED               	movlw	-19
 17935  010B30  6AE3               	clrf	plusw1,c
 17936                           
 17937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 17938  010B32  D1B7               	goto	l12504
 17939  010B34                     l12454:
 17940                           
 17941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 17942                           ;stkvar	_u @ sp[(-56)+12]
 17943  010B34  0ED4               	movlw	-44
 17944  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 17945  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 17946  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 17947  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 17948                           
 17949                           ;stkvar	_h @ sp[(-60)+24]
 17950  010B4E  0EDC               	movlw	-36
 17951  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 17952  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 17953  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17954  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 17955  010B68  ECF4  F0A6         	call	___fldiv	;wreg free
 17956  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 17957  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17958  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17959  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 17960  010B84  EC7E  F0B2         	call	_floorf	;wreg free
 17961                           
 17962                           ;stkvar	_l @ sp[(-56)+20]
 17963  010B88  0EDC               	movlw	-36
 17964  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 17965  010B90  0EDD               	movlw	-35
 17966  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17967  010B98  0EDE               	movlw	-34
 17968  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17969  010BA0  0EDF               	movlw	-33
 17970  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 17971                           
 17972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 17973                           ;stkvar	_l @ sp[(-56)+20]
 17974  010BA8  0EDC               	movlw	-36
 17975  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 17976  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 17977  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 17978  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 17979  010BC2  EC6D  F0C8         	call	___fltol	;wreg free
 17980  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 17981  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 17982                           
 17983                           ;stkvar	_d @ sp[(-56)+44]
 17984  010BD2  0EF4               	movlw	-12
 17985  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17986  010BDA  0EF5               	movlw	-11
 17987  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17988                           
 17989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 17990  010BE2  B83E               	btfsc	_flags^0,4,c
 17991  010BE4  D026               	goto	l12468
 17992                           
 17993                           ;stkvar	_d @ sp[(-56)+44]
 17994  010BE6  0EF4               	movlw	-12
 17995  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 17996  010BEE  0EF5               	movlw	-11
 17997  010BF0  50E3               	movf	plusw1,w,c
 17998  010BF2  1001               	iorwf	btemp^0,w,c
 17999  010BF4  A4D8               	btfss	status,2,c
 18000  010BF6  D01D               	goto	l12468
 18001                           
 18002                           ;stkvar	_mode @ sp[(-56)+54]
 18003  010BF8  0EFE               	movlw	-2
 18004  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 18005  010C00  0E67               	movlw	103
 18006  010C02  1801               	xorwf	btemp^0,w,c
 18007  010C04  A4D8               	btfss	status,2,c
 18008  010C06  D015               	goto	l12468
 18009                           
 18010                           ;stkvar	_ne @ sp[(-56)+46]
 18011  010C08  0EF7               	movlw	-9
 18012  010C0A  AEE3               	btfss	plusw1,7,c
 18013  010C0C  D012               	goto	l12468
 18014                           
 18015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 18016                           ;stkvar	_t @ sp[(-56)+52]
 18017  010C0E  0EFC               	movlw	-4
 18018  010C10  50E3               	movf	plusw1,w,c
 18019  010C12  0F01               	addlw	1
 18020  010C14  6E01               	movwf	btemp^0,c
 18021  010C16  0EFC               	movlw	-4
 18022  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 18023  010C1E  6A01               	clrf	btemp^0,c
 18024  010C20  0EFD               	movlw	-3
 18025  010C22  50E3               	movf	plusw1,w,c
 18026  010C24  2001               	addwfc	btemp^0,w,c
 18027  010C26  6E01               	movwf	btemp^0,c
 18028  010C28  0EFD               	movlw	-3
 18029  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 18030                           
 18031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 18032  010C30  D0AF               	goto	l12496
 18033  010C32                     l12468:
 18034                           
 18035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 18036                           ;stkvar	_pp @ sp[(-56)+50]
 18037  010C32  0EFA               	movlw	-6
 18038  010C34  006F FF8C  F001    	movff	plusw1,btemp
 18039  010C3A  0EFB               	movlw	-5
 18040  010C3C  50E3               	movf	plusw1,w,c
 18041  010C3E  1001               	iorwf	btemp^0,w,c
 18042  010C40  A4D8               	btfss	status,2,c
 18043  010C42  D070               	goto	l12488
 18044                           
 18045                           ;stkvar	_ne @ sp[(-56)+46]
 18046  010C44  0EF7               	movlw	-9
 18047  010C46  AEE3               	btfss	plusw1,7,c
 18048  010C48  D06D               	goto	l12488
 18049                           
 18050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 18051                           ;stkvar	_n @ sp[(-56)+32]
 18052  010C4A  0EE8               	movlw	-24
 18053  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18054  010C52  0EE9               	movlw	-23
 18055  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 18056  010C5A  0E97               	movlw	low _dbuf
 18057  010C5C  240B               	addwf	(btemp+10)^0,w,c
 18058  010C5E  6ED9               	movwf	fsr2l,c
 18059  010C60  0E02               	movlw	high _dbuf
 18060  010C62  200C               	addwfc	(btemp+11)^0,w,c
 18061  010C64  6EDA               	movwf	fsr2h,c
 18062  010C66  0E2E               	movlw	46
 18063  010C68  6EDF               	movwf	indf2,c
 18064                           
 18065                           ;stkvar	_n @ sp[(-56)+32]
 18066  010C6A  0EE8               	movlw	-24
 18067  010C6C  50E3               	movf	plusw1,w,c
 18068  010C6E  0F01               	addlw	1
 18069  010C70  6E01               	movwf	btemp^0,c
 18070  010C72  0EE8               	movlw	-24
 18071  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 18072  010C7A  6A01               	clrf	btemp^0,c
 18073  010C7C  0EE9               	movlw	-23
 18074  010C7E  50E3               	movf	plusw1,w,c
 18075  010C80  2001               	addwfc	btemp^0,w,c
 18076  010C82  6E01               	movwf	btemp^0,c
 18077  010C84  0EE9               	movlw	-23
 18078  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 18079                           
 18080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 18081                           ;stkvar	_w @ sp[(-56)+38]
 18082  010C8C  50E1               	movf	fsr1l,w,c
 18083  010C8E  0FEE               	addlw	-18
 18084  010C90  6ED9               	movwf	fsr2l,c
 18085  010C92  50E2               	movf	fsr1h,w,c
 18086  010C94  6EDA               	movwf	fsr2h,c
 18087  010C96  0EFF               	movlw	255
 18088  010C98  22DA               	addwfc	fsr2h,f,c
 18089  010C9A  06DE               	decf	postinc2,f,c
 18090  010C9C  0E00               	movlw	0
 18091  010C9E  5ADD               	subwfb	postdec2,f,c
 18092                           
 18093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 18094  010CA0  0E01               	movlw	1
 18095  010CA2  6E0B               	movwf	(btemp+10)^0,c
 18096  010CA4  0E00               	movlw	0
 18097  010CA6  6E0C               	movwf	(btemp+11)^0,c
 18098                           
 18099                           ;stkvar	_pp @ sp[(-56)+50]
 18100  010CA8  0EFA               	movlw	-6
 18101  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18102  010CB0  0EFB               	movlw	-5
 18103  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 18104  010CB8  D035               	goto	l12488
 18105  010CBA                     l12480:
 18106                           
 18107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 18108                           ;stkvar	_n @ sp[(-56)+32]
 18109  010CBA  0EE8               	movlw	-24
 18110  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18111  010CC2  0EE9               	movlw	-23
 18112  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18113  010CCA  0E97               	movlw	low _dbuf
 18114  010CCC  240B               	addwf	(btemp+10)^0,w,c
 18115  010CCE  6ED9               	movwf	fsr2l,c
 18116  010CD0  0E02               	movlw	high _dbuf
 18117  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 18118  010CD4  6EDA               	movwf	fsr2h,c
 18119  010CD6  0E30               	movlw	48
 18120  010CD8  6EDF               	movwf	indf2,c
 18121                           
 18122                           ;stkvar	_n @ sp[(-56)+32]
 18123  010CDA  0EE8               	movlw	-24
 18124  010CDC  50E3               	movf	plusw1,w,c
 18125  010CDE  0F01               	addlw	1
 18126  010CE0  6E01               	movwf	btemp^0,c
 18127  010CE2  0EE8               	movlw	-24
 18128  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 18129  010CEA  6A01               	clrf	btemp^0,c
 18130  010CEC  0EE9               	movlw	-23
 18131  010CEE  50E3               	movf	plusw1,w,c
 18132  010CF0  2001               	addwfc	btemp^0,w,c
 18133  010CF2  6E01               	movwf	btemp^0,c
 18134  010CF4  0EE9               	movlw	-23
 18135  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 18136                           
 18137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 18138                           ;stkvar	_w @ sp[(-56)+38]
 18139  010CFC  50E1               	movf	fsr1l,w,c
 18140  010CFE  0FEE               	addlw	-18
 18141  010D00  6ED9               	movwf	fsr2l,c
 18142  010D02  50E2               	movf	fsr1h,w,c
 18143  010D04  6EDA               	movwf	fsr2h,c
 18144  010D06  0EFF               	movlw	255
 18145  010D08  22DA               	addwfc	fsr2h,f,c
 18146  010D0A  06DE               	decf	postinc2,f,c
 18147  010D0C  0E00               	movlw	0
 18148  010D0E  5ADD               	subwfb	postdec2,f,c
 18149                           
 18150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 18151                           ;stkvar	_t @ sp[(-56)+52]
 18152  010D10  50E1               	movf	fsr1l,w,c
 18153  010D12  0FFC               	addlw	-4
 18154  010D14  6ED9               	movwf	fsr2l,c
 18155  010D16  50E2               	movf	fsr1h,w,c
 18156  010D18  6EDA               	movwf	fsr2h,c
 18157  010D1A  0EFF               	movlw	255
 18158  010D1C  22DA               	addwfc	fsr2h,f,c
 18159  010D1E  06DE               	decf	postinc2,f,c
 18160  010D20  0E00               	movlw	0
 18161  010D22  5ADD               	subwfb	postdec2,f,c
 18162  010D24                     l12488:
 18163                           
 18164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 18165                           ;stkvar	_t @ sp[(-56)+52]
 18166  010D24  0EFC               	movlw	-4
 18167  010D26  006F FF8C  F001    	movff	plusw1,btemp
 18168  010D2C  0EFD               	movlw	-3
 18169  010D2E  50E3               	movf	plusw1,w,c
 18170  010D30  1001               	iorwf	btemp^0,w,c
 18171  010D32  A4D8               	btfss	status,2,c
 18172  010D34  D7C2               	goto	l12480
 18173                           
 18174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 18175                           ;stkvar	_n @ sp[(-56)+32]
 18176  010D36  0EE8               	movlw	-24
 18177  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 18178  010D3E  0EE9               	movlw	-23
 18179  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 18180  010D46  0E97               	movlw	low _dbuf
 18181  010D48  240B               	addwf	(btemp+10)^0,w,c
 18182  010D4A  6ED9               	movwf	fsr2l,c
 18183  010D4C  0E02               	movlw	high _dbuf
 18184  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 18185  010D50  6EDA               	movwf	fsr2h,c
 18186                           
 18187                           ;stkvar	_d @ sp[(-56)+44]
 18188  010D52  0EF4               	movlw	-12
 18189  010D54  50E3               	movf	plusw1,w,c
 18190  010D56  0F30               	addlw	48
 18191  010D58  6EDF               	movwf	indf2,c
 18192                           
 18193                           ;stkvar	_n @ sp[(-56)+32]
 18194  010D5A  0EE8               	movlw	-24
 18195  010D5C  50E3               	movf	plusw1,w,c
 18196  010D5E  0F01               	addlw	1
 18197  010D60  6E01               	movwf	btemp^0,c
 18198  010D62  0EE8               	movlw	-24
 18199  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 18200  010D6A  6A01               	clrf	btemp^0,c
 18201  010D6C  0EE9               	movlw	-23
 18202  010D6E  50E3               	movf	plusw1,w,c
 18203  010D70  2001               	addwfc	btemp^0,w,c
 18204  010D72  6E01               	movwf	btemp^0,c
 18205  010D74  0EE9               	movlw	-23
 18206  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 18207                           
 18208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 18209                           ;stkvar	_w @ sp[(-56)+38]
 18210  010D7C  50E1               	movf	fsr1l,w,c
 18211  010D7E  0FEE               	addlw	-18
 18212  010D80  6ED9               	movwf	fsr2l,c
 18213  010D82  50E2               	movf	fsr1h,w,c
 18214  010D84  6EDA               	movwf	fsr2h,c
 18215  010D86  0EFF               	movlw	255
 18216  010D88  22DA               	addwfc	fsr2h,f,c
 18217  010D8A  06DE               	decf	postinc2,f,c
 18218  010D8C  0E00               	movlw	0
 18219  010D8E  5ADD               	subwfb	postdec2,f,c
 18220  010D90                     l12496:
 18221                           
 18222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 18223                           ;stkvar	_u @ sp[(-56)+12]
 18224  010D90  0ED4               	movlw	-44
 18225  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 18226  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 18227  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 18228  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 18229                           
 18230                           ;stkvar	_l @ sp[(-60)+20]
 18231  010DAA  0ED8               	movlw	-40
 18232  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 18233  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 18234  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 18235  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 18236  010DC4  EC01  F09F         	call	___flmul	;wreg free
 18237  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 18238  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 18239  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 18240  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 18241                           
 18242                           ;stkvar	_h @ sp[(-60)+24]
 18243  010DE0  0EDC               	movlw	-36
 18244  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 18245  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 18246  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 18247  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 18248  010DFA  EC0C  F0DD         	call	___flsub	;wreg free
 18249                           
 18250                           ;stkvar	_h @ sp[(-56)+24]
 18251  010DFE  0EE0               	movlw	-32
 18252  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 18253  010E06  0EE1               	movlw	-31
 18254  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18255  010E0E  0EE2               	movlw	-30
 18256  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18257  010E16  0EE3               	movlw	-29
 18258  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 18259                           
 18260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 18261  010E1E  0E00               	movlw	0
 18262  010E20  6EE6               	movwf	postinc1,c
 18263  010E22  0E00               	movlw	0
 18264  010E24  6EE6               	movwf	postinc1,c
 18265  010E26  0E20               	movlw	32
 18266  010E28  6EE6               	movwf	postinc1,c
 18267  010E2A  0E41               	movlw	65
 18268  010E2C  6EE6               	movwf	postinc1,c
 18269                           
 18270                           ;stkvar	_u @ sp[(-60)+12]
 18271  010E2E  0ED0               	movlw	-48
 18272  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 18273  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 18274  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 18275  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 18276  010E48  ECF4  F0A6         	call	___fldiv	;wreg free
 18277                           
 18278                           ;stkvar	_u @ sp[(-56)+12]
 18279  010E4C  0ED4               	movlw	-44
 18280  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 18281  010E54  0ED5               	movlw	-43
 18282  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18283  010E5C  0ED6               	movlw	-42
 18284  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18285  010E64  0ED7               	movlw	-41
 18286  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 18287                           
 18288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 18289                           ;stkvar	_ne @ sp[(-56)+46]
 18290  010E6C  50E1               	movf	fsr1l,w,c
 18291  010E6E  0FF6               	addlw	-10
 18292  010E70  6ED9               	movwf	fsr2l,c
 18293  010E72  50E2               	movf	fsr1h,w,c
 18294  010E74  6EDA               	movwf	fsr2h,c
 18295  010E76  0EFF               	movlw	255
 18296  010E78  22DA               	addwfc	fsr2h,f,c
 18297  010E7A  06DE               	decf	postinc2,f,c
 18298  010E7C  0E00               	movlw	0
 18299  010E7E  5ADD               	subwfb	postdec2,f,c
 18300                           
 18301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 18302                           ;stkvar	_i @ sp[(-56)+36]
 18303  010E80  0EEC               	movlw	-20
 18304  010E82  50E3               	movf	plusw1,w,c
 18305  010E84  0F01               	addlw	1
 18306  010E86  6E01               	movwf	btemp^0,c
 18307  010E88  0EEC               	movlw	-20
 18308  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 18309  010E90  6A01               	clrf	btemp^0,c
 18310  010E92  0EED               	movlw	-19
 18311  010E94  50E3               	movf	plusw1,w,c
 18312  010E96  2001               	addwfc	btemp^0,w,c
 18313  010E98  6E01               	movwf	btemp^0,c
 18314  010E9A  0EED               	movlw	-19
 18315  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 18316  010EA2                     l12504:
 18317                           
 18318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 18319                           ;stkvar	_m @ sp[(-56)+48]
 18320                           ;stkvar	_i @ sp[(-56)+36]
 18321  010EA2  50E1               	movf	fsr1l,w,c
 18322  010EA4  0FEC               	addlw	-20
 18323  010EA6  6ED9               	movwf	fsr2l,c
 18324  010EA8  50E2               	movf	fsr1h,w,c
 18325  010EAA  6EDA               	movwf	fsr2h,c
 18326  010EAC  0EFF               	movlw	255
 18327  010EAE  22DA               	addwfc	fsr2h,f,c
 18328  010EB0  0EF8               	movlw	-8
 18329  010EB2  50E3               	movf	plusw1,w,c
 18330  010EB4  5CDE               	subwf	postinc2,w,c
 18331  010EB6  50DE               	movf	postinc2,w,c
 18332  010EB8  0A80               	xorlw	128
 18333  010EBA  6E01               	movwf	btemp^0,c
 18334  010EBC  0EF9               	movlw	-7
 18335  010EBE  50E3               	movf	plusw1,w,c
 18336  010EC0  0A80               	xorlw	128
 18337  010EC2  5801               	subwfb	btemp^0,w,c
 18338  010EC4  B0D8               	btfsc	status,0,c
 18339  010EC6  D00E               	goto	u11620
 18340                           
 18341                           ;stkvar	_n @ sp[(-56)+32]
 18342  010EC8  0EE9               	movlw	-23
 18343  010ECA  BEE3               	btfsc	plusw1,7,c
 18344  010ECC  D633               	goto	l12454
 18345  010ECE  0EE9               	movlw	-23
 18346  010ED0  50E3               	movf	plusw1,w,c
 18347  010ED2  E108               	bnz	u11620
 18348  010ED4  0EE8               	movlw	-24
 18349  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 18350  010EDC  0E4B               	movlw	75
 18351  010EDE  5E01               	subwf	btemp^0,f,c
 18352  010EE0  A0D8               	btfss	status,0,c
 18353  010EE2  D628               	goto	l12454
 18354  010EE4                     u11620:
 18355                           
 18356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 18357                           ;stkvar	_pp @ sp[(-56)+50]
 18358  010EE4  0EFA               	movlw	-6
 18359  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 18360  010EEC  0EFB               	movlw	-5
 18361  010EEE  50E3               	movf	plusw1,w,c
 18362  010EF0  1001               	iorwf	btemp^0,w,c
 18363  010EF2  B4D8               	btfsc	status,2,c
 18364  010EF4  A83E               	btfss	_flags^0,4,c
 18365  010EF6  D021               	goto	l12516
 18366                           
 18367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 18368                           ;stkvar	_n @ sp[(-56)+32]
 18369  010EF8  0EE8               	movlw	-24
 18370  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 18371  010F00  0EE9               	movlw	-23
 18372  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 18373  010F08  0E97               	movlw	low _dbuf
 18374  010F0A  240B               	addwf	(btemp+10)^0,w,c
 18375  010F0C  6ED9               	movwf	fsr2l,c
 18376  010F0E  0E02               	movlw	high _dbuf
 18377  010F10  200C               	addwfc	(btemp+11)^0,w,c
 18378  010F12  6EDA               	movwf	fsr2h,c
 18379  010F14  0E2E               	movlw	46
 18380  010F16  6EDF               	movwf	indf2,c
 18381                           
 18382                           ;stkvar	_n @ sp[(-56)+32]
 18383  010F18  0EE8               	movlw	-24
 18384  010F1A  50E3               	movf	plusw1,w,c
 18385  010F1C  0F01               	addlw	1
 18386  010F1E  6E01               	movwf	btemp^0,c
 18387  010F20  0EE8               	movlw	-24
 18388  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 18389  010F28  6A01               	clrf	btemp^0,c
 18390  010F2A  0EE9               	movlw	-23
 18391  010F2C  50E3               	movf	plusw1,w,c
 18392  010F2E  2001               	addwfc	btemp^0,w,c
 18393  010F30  6E01               	movwf	btemp^0,c
 18394  010F32  0EE9               	movlw	-23
 18395  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 18396  010F3A                     l12516:
 18397                           
 18398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 18399                           ;stkvar	_n @ sp[(-56)+32]
 18400  010F3A  0EE8               	movlw	-24
 18401  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18402  010F42  0EE9               	movlw	-23
 18403  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 18404  010F4A  0E97               	movlw	low _dbuf
 18405  010F4C  240B               	addwf	(btemp+10)^0,w,c
 18406  010F4E  6ED9               	movwf	fsr2l,c
 18407  010F50  0E02               	movlw	high _dbuf
 18408  010F52  200C               	addwfc	(btemp+11)^0,w,c
 18409  010F54  6EDA               	movwf	fsr2h,c
 18410  010F56  0E00               	movlw	0
 18411  010F58  6EDF               	movwf	indf2,c
 18412                           
 18413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 18414                           ;stkvar	_nmode @ sp[(-56)+55]
 18415  010F5A  0EFF               	movlw	-1
 18416  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 18417  010F62  0E65               	movlw	101
 18418  010F64  1801               	xorwf	btemp^0,w,c
 18419  010F66  A4D8               	btfss	status,2,c
 18420  010F68  EF16  F081         	goto	l12320
 18421                           
 18422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 18423  010F6C  0E4F               	movlw	79
 18424  010F6E  6E0B               	movwf	(btemp+10)^0,c
 18425  010F70  0E00               	movlw	0
 18426  010F72  6E0C               	movwf	(btemp+11)^0,c
 18427                           
 18428                           ;stkvar	_i @ sp[(-56)+36]
 18429  010F74  0EEC               	movlw	-20
 18430  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18431  010F7C  0EED               	movlw	-19
 18432  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18433                           
 18434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 18435                           ;stkvar	_i @ sp[(-56)+36]
 18436  010F84  0EEC               	movlw	-20
 18437  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 18438  010F8C  0EED               	movlw	-19
 18439  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18440  010F94  0E97               	movlw	low _dbuf
 18441  010F96  240B               	addwf	(btemp+10)^0,w,c
 18442  010F98  6ED9               	movwf	fsr2l,c
 18443  010F9A  0E02               	movlw	high _dbuf
 18444  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 18445  010F9E  6EDA               	movwf	fsr2h,c
 18446  010FA0  0E00               	movlw	0
 18447  010FA2  6EDF               	movwf	indf2,c
 18448                           
 18449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 18450                           ;stkvar	_sign @ sp[(-56)+42]
 18451  010FA4  0EF2               	movlw	-14
 18452  010FA6  6AE3               	clrf	plusw1,c
 18453  010FA8  0EF3               	movlw	-13
 18454  010FAA  6AE3               	clrf	plusw1,c
 18455                           
 18456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 18457                           ;stkvar	_e @ sp[(-56)+34]
 18458  010FAC  0EEB               	movlw	-21
 18459  010FAE  AEE3               	btfss	plusw1,7,c
 18460  010FB0  D012               	goto	l12530
 18461                           
 18462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 18463  010FB2  0E01               	movlw	1
 18464  010FB4  6E0B               	movwf	(btemp+10)^0,c
 18465  010FB6  0E00               	movlw	0
 18466  010FB8  6E0C               	movwf	(btemp+11)^0,c
 18467                           
 18468                           ;stkvar	_sign @ sp[(-56)+42]
 18469  010FBA  0EF2               	movlw	-14
 18470  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18471  010FC2  0EF3               	movlw	-13
 18472  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18473                           
 18474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 18475                           ;stkvar	_e @ sp[(-56)+34]
 18476                           ;stkvar	_e @ sp[(-56)+34]
 18477  010FCA  0EEA               	movlw	-22
 18478  010FCC  6CE3               	negf	plusw1,c
 18479  010FCE  0EEB               	movlw	-21
 18480  010FD0  1EE3               	comf	plusw1,f,c
 18481  010FD2  B0D8               	btfsc	status,0,c
 18482  010FD4  2AE3               	incf	plusw1,f,c
 18483  010FD6                     l12530:
 18484                           
 18485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 18486  010FD6  0E02               	movlw	2
 18487  010FD8  6E0B               	movwf	(btemp+10)^0,c
 18488  010FDA  0E00               	movlw	0
 18489  010FDC  6E0C               	movwf	(btemp+11)^0,c
 18490                           
 18491                           ;stkvar	_p @ sp[(-56)+40]
 18492  010FDE  0EF0               	movlw	-16
 18493  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18494  010FE6  0EF1               	movlw	-15
 18495  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 18496                           
 18497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 18498  010FEE  D051               	goto	l12542
 18499  010FF0                     l12532:
 18500                           
 18501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 18502                           ;stkvar	_i @ sp[(-56)+36]
 18503  010FF0  50E1               	movf	fsr1l,w,c
 18504  010FF2  0FEC               	addlw	-20
 18505  010FF4  6ED9               	movwf	fsr2l,c
 18506  010FF6  50E2               	movf	fsr1h,w,c
 18507  010FF8  6EDA               	movwf	fsr2h,c
 18508  010FFA  0EFF               	movlw	255
 18509  010FFC  22DA               	addwfc	fsr2h,f,c
 18510  010FFE  06DE               	decf	postinc2,f,c
 18511  011000  0E00               	movlw	0
 18512  011002  5ADD               	subwfb	postdec2,f,c
 18513                           
 18514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 18515                           ;stkvar	_i @ sp[(-56)+36]
 18516  011004  0EEC               	movlw	-20
 18517  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 18518  01100C  0EED               	movlw	-19
 18519  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18520  011014  0E97               	movlw	low _dbuf
 18521  011016  240B               	addwf	(btemp+10)^0,w,c
 18522  011018  6ED9               	movwf	fsr2l,c
 18523  01101A  0E02               	movlw	high _dbuf
 18524  01101C  200C               	addwfc	(btemp+11)^0,w,c
 18525  01101E  6EDA               	movwf	fsr2h,c
 18526  011020  0E0A               	movlw	10
 18527  011022  6EE6               	movwf	postinc1,c
 18528  011024  0E00               	movlw	0
 18529  011026  6EE6               	movwf	postinc1,c
 18530                           
 18531                           ;stkvar	_e @ sp[(-58)+34]
 18532  011028  0EE8               	movlw	-24
 18533  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 18534  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 18535  011036  EC20  F0CE         	call	___awmod	;wreg free
 18536  01103A  5001               	movf	btemp^0,w,c
 18537  01103C  0F30               	addlw	48
 18538  01103E  6EDF               	movwf	indf2,c
 18539                           
 18540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 18541  011040  0E0A               	movlw	10
 18542  011042  6EE6               	movwf	postinc1,c
 18543  011044  0E00               	movlw	0
 18544  011046  6EE6               	movwf	postinc1,c
 18545                           
 18546                           ;stkvar	_e @ sp[(-58)+34]
 18547  011048  0EE8               	movlw	-24
 18548  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 18549  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 18550  011056  EC89  F0CA         	call	___awdiv	;wreg free
 18551                           
 18552                           ;stkvar	_e @ sp[(-56)+34]
 18553  01105A  0EEA               	movlw	-22
 18554  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 18555  011062  0EEB               	movlw	-21
 18556  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18557                           
 18558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 18559                           ;stkvar	_p @ sp[(-56)+40]
 18560  01106A  50E1               	movf	fsr1l,w,c
 18561  01106C  0FF0               	addlw	-16
 18562  01106E  6ED9               	movwf	fsr2l,c
 18563  011070  50E2               	movf	fsr1h,w,c
 18564  011072  6EDA               	movwf	fsr2h,c
 18565  011074  0EFF               	movlw	255
 18566  011076  22DA               	addwfc	fsr2h,f,c
 18567  011078  06DE               	decf	postinc2,f,c
 18568  01107A  0E00               	movlw	0
 18569  01107C  5ADD               	subwfb	postdec2,f,c
 18570                           
 18571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 18572                           ;stkvar	_w @ sp[(-56)+38]
 18573  01107E  50E1               	movf	fsr1l,w,c
 18574  011080  0FEE               	addlw	-18
 18575  011082  6ED9               	movwf	fsr2l,c
 18576  011084  50E2               	movf	fsr1h,w,c
 18577  011086  6EDA               	movwf	fsr2h,c
 18578  011088  0EFF               	movlw	255
 18579  01108A  22DA               	addwfc	fsr2h,f,c
 18580  01108C  06DE               	decf	postinc2,f,c
 18581  01108E  0E00               	movlw	0
 18582  011090  5ADD               	subwfb	postdec2,f,c
 18583  011092                     l12542:
 18584                           
 18585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 18586                           ;stkvar	_e @ sp[(-56)+34]
 18587  011092  0EEA               	movlw	-22
 18588  011094  006F FF8C  F001    	movff	plusw1,btemp
 18589  01109A  0EEB               	movlw	-21
 18590  01109C  50E3               	movf	plusw1,w,c
 18591  01109E  1001               	iorwf	btemp^0,w,c
 18592  0110A0  A4D8               	btfss	status,2,c
 18593  0110A2  D7A6               	goto	l12532
 18594                           
 18595                           ;stkvar	_p @ sp[(-56)+40]
 18596  0110A4  0EF1               	movlw	-15
 18597  0110A6  BEE3               	btfsc	plusw1,7,c
 18598  0110A8  D007               	goto	u11680
 18599  0110AA  0EF1               	movlw	-15
 18600  0110AC  50E3               	movf	plusw1,w,c
 18601  0110AE  E1A0               	bnz	l12532
 18602  0110B0  0EF0               	movlw	-16
 18603  0110B2  04E3               	decf	plusw1,w,c
 18604  0110B4  B0D8               	btfsc	status,0,c
 18605  0110B6  D79C               	goto	l12532
 18606  0110B8                     u11680:
 18607                           
 18608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 18609                           ;stkvar	_i @ sp[(-56)+36]
 18610  0110B8  50E1               	movf	fsr1l,w,c
 18611  0110BA  0FEC               	addlw	-20
 18612  0110BC  6ED9               	movwf	fsr2l,c
 18613  0110BE  50E2               	movf	fsr1h,w,c
 18614  0110C0  6EDA               	movwf	fsr2h,c
 18615  0110C2  0EFF               	movlw	255
 18616  0110C4  22DA               	addwfc	fsr2h,f,c
 18617  0110C6  06DE               	decf	postinc2,f,c
 18618  0110C8  0E00               	movlw	0
 18619  0110CA  5ADD               	subwfb	postdec2,f,c
 18620                           
 18621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 18622                           ;stkvar	_sign @ sp[(-56)+42]
 18623  0110CC  0EF2               	movlw	-14
 18624  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 18625  0110D4  0EF3               	movlw	-13
 18626  0110D6  50E3               	movf	plusw1,w,c
 18627  0110D8  1001               	iorwf	btemp^0,w,c
 18628  0110DA  A4D8               	btfss	status,2,c
 18629  0110DC  D002               	goto	l12552
 18630  0110DE  0E2B               	movlw	43
 18631  0110E0  D001               	goto	L19
 18632  0110E2                     l12552:
 18633  0110E2  0E2D               	movlw	45
 18634  0110E4                     L19:
 18635  0110E4  6E0B               	movwf	(btemp+10)^0,c
 18636  0110E6  0E00               	movlw	0
 18637  0110E8  6E0C               	movwf	(btemp+11)^0,c
 18638                           
 18639                           ;stkvar	_efgtoa$5763 @ sp[(-56)+4]
 18640  0110EA  0ECC               	movlw	-52
 18641  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18642  0110F2  0ECD               	movlw	-51
 18643  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18644                           
 18645                           ;stkvar	_efgtoa$5763 @ sp[(-56)+4]
 18646                           ;stkvar	_i @ sp[(-56)+36]
 18647  0110FA  0EEC               	movlw	-20
 18648  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18649  011102  0EED               	movlw	-19
 18650  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 18651  01110A  0E97               	movlw	low _dbuf
 18652  01110C  240B               	addwf	(btemp+10)^0,w,c
 18653  01110E  6ED9               	movwf	fsr2l,c
 18654  011110  0E02               	movlw	high _dbuf
 18655  011112  200C               	addwfc	(btemp+11)^0,w,c
 18656  011114  6EDA               	movwf	fsr2h,c
 18657  011116  0ECC               	movlw	-52
 18658  011118  006F FF8F FFDF     	movff	plusw1,indf2
 18659                           
 18660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 18661                           ;stkvar	_w @ sp[(-56)+38]
 18662  01111E  50E1               	movf	fsr1l,w,c
 18663  011120  0FEE               	addlw	-18
 18664  011122  6ED9               	movwf	fsr2l,c
 18665  011124  50E2               	movf	fsr1h,w,c
 18666  011126  6EDA               	movwf	fsr2h,c
 18667  011128  0EFF               	movlw	255
 18668  01112A  22DA               	addwfc	fsr2h,f,c
 18669  01112C  06DE               	decf	postinc2,f,c
 18670  01112E  0E00               	movlw	0
 18671  011130  5ADD               	subwfb	postdec2,f,c
 18672                           
 18673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 18674                           ;stkvar	_i @ sp[(-56)+36]
 18675  011132  50E1               	movf	fsr1l,w,c
 18676  011134  0FEC               	addlw	-20
 18677  011136  6ED9               	movwf	fsr2l,c
 18678  011138  50E2               	movf	fsr1h,w,c
 18679  01113A  6EDA               	movwf	fsr2h,c
 18680  01113C  0EFF               	movlw	255
 18681  01113E  22DA               	addwfc	fsr2h,f,c
 18682  011140  06DE               	decf	postinc2,f,c
 18683  011142  0E00               	movlw	0
 18684  011144  5ADD               	subwfb	postdec2,f,c
 18685  011146  0EBF               	movlw	191
 18686  011148  6E0B               	movwf	(btemp+10)^0,c
 18687  01114A  0EFF               	movlw	255
 18688  01114C  6E0C               	movwf	(btemp+11)^0,c
 18689                           
 18690                           ;stkvar	_c @ sp[(-56)+-7]
 18691  01114E  0EC1               	movlw	-63
 18692  011150  50E3               	movf	plusw1,w,c
 18693  011152  6E09               	movwf	(btemp+8)^0,c
 18694  011154  6A0A               	clrf	(btemp+9)^0,c
 18695  011156  500B               	movf	(btemp+10)^0,w,c
 18696  011158  2609               	addwf	(btemp+8)^0,f,c
 18697  01115A  500C               	movf	(btemp+11)^0,w,c
 18698  01115C  220A               	addwfc	(btemp+9)^0,f,c
 18699  01115E  500A               	movf	(btemp+9)^0,w,c
 18700  011160  E106               	bnz	u11700
 18701  011162  0E1A               	movlw	26
 18702  011164  5C09               	subwf	(btemp+8)^0,w,c
 18703  011166  B0D8               	btfsc	status,0,c
 18704  011168  D002               	goto	u11700
 18705  01116A  0E01               	movlw	1
 18706  01116C  D001               	goto	u11710
 18707  01116E                     u11700:
 18708  01116E  0E00               	movlw	0
 18709  011170                     u11710:
 18710  011170  6E0B               	movwf	(btemp+10)^0,c
 18711  011172  6A0C               	clrf	(btemp+11)^0,c
 18712                           
 18713                           ;stkvar	_efgtoa$5765 @ sp[(-56)+0]
 18714  011174  0EC8               	movlw	-56
 18715  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18716  01117C  0EC9               	movlw	-55
 18717  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18718                           
 18719                           ;stkvar	_efgtoa$5765 @ sp[(-56)+0]
 18720  011184  0EC8               	movlw	-56
 18721  011186  006F FF8C  F001    	movff	plusw1,btemp
 18722  01118C  0EC9               	movlw	-55
 18723  01118E  50E3               	movf	plusw1,w,c
 18724  011190  1001               	iorwf	btemp^0,w,c
 18725  011192  A4D8               	btfss	status,2,c
 18726  011194  D002               	goto	l12568
 18727  011196  0E65               	movlw	101
 18728  011198  D001               	goto	L20
 18729  01119A                     l12568:
 18730  01119A  0E45               	movlw	69
 18731  01119C                     L20:
 18732  01119C  6E0B               	movwf	(btemp+10)^0,c
 18733  01119E  0E00               	movlw	0
 18734  0111A0  6E0C               	movwf	(btemp+11)^0,c
 18735                           
 18736                           ;stkvar	_efgtoa$5764 @ sp[(-56)+2]
 18737  0111A2  0ECA               	movlw	-54
 18738  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18739  0111AA  0ECB               	movlw	-53
 18740  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 18741                           
 18742                           ;stkvar	_efgtoa$5764 @ sp[(-56)+2]
 18743                           ;stkvar	_i @ sp[(-56)+36]
 18744  0111B2  0EEC               	movlw	-20
 18745  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 18746  0111BA  0EED               	movlw	-19
 18747  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 18748  0111C2  0E97               	movlw	low _dbuf
 18749  0111C4  240B               	addwf	(btemp+10)^0,w,c
 18750  0111C6  6ED9               	movwf	fsr2l,c
 18751  0111C8  0E02               	movlw	high _dbuf
 18752  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 18753  0111CC  6EDA               	movwf	fsr2h,c
 18754  0111CE  0ECA               	movlw	-54
 18755  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 18756                           
 18757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 18758                           ;stkvar	_w @ sp[(-56)+38]
 18759  0111D6  50E1               	movf	fsr1l,w,c
 18760  0111D8  0FEE               	addlw	-18
 18761  0111DA  6ED9               	movwf	fsr2l,c
 18762  0111DC  50E2               	movf	fsr1h,w,c
 18763  0111DE  6EDA               	movwf	fsr2h,c
 18764  0111E0  0EFF               	movlw	255
 18765  0111E2  22DA               	addwfc	fsr2h,f,c
 18766  0111E4  06DE               	decf	postinc2,f,c
 18767  0111E6  0E00               	movlw	0
 18768  0111E8  5ADD               	subwfb	postdec2,f,c
 18769                           
 18770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 18771                           ;stkvar	_i @ sp[(-56)+36]
 18772  0111EA  0EEC               	movlw	-20
 18773  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18774  0111F2  0EED               	movlw	-19
 18775  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18776  0111FA  0E97               	movlw	low _dbuf
 18777  0111FC  240B               	addwf	(btemp+10)^0,w,c
 18778  0111FE  6E09               	movwf	(btemp+8)^0,c
 18779  011200  0E02               	movlw	high _dbuf
 18780  011202  200C               	addwfc	(btemp+11)^0,w,c
 18781  011204  6E0A               	movwf	(btemp+9)^0,c
 18782  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 18783  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 18784                           
 18785                           ;stkvar	_n @ sp[(-58)+32]
 18786  011212  0E97               	movlw	low _dbuf
 18787  011214  6E0B               	movwf	(btemp+10)^0,c
 18788  011216  0E02               	movlw	high _dbuf
 18789  011218  6E0C               	movwf	(btemp+11)^0,c
 18790  01121A  0EE6               	movlw	-26
 18791  01121C  50E3               	movf	plusw1,w,c
 18792  01121E  260B               	addwf	(btemp+10)^0,f,c
 18793  011220  0EE7               	movlw	-25
 18794  011222  50E3               	movf	plusw1,w,c
 18795  011224  220C               	addwfc	(btemp+11)^0,f,c
 18796  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18797  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 18798  011232  EC15  F0D2         	call	_strcpy	;wreg free
 18799  011236  EF16  F081         	goto	l12320
 18800  01123A                     l2280:
 18801                           
 18802                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 18803  01123A  0EC1               	movlw	193
 18804  01123C  26E1               	addwf	fsr1l,f,c
 18805  01123E  0EFF               	movlw	255
 18806  011240  22E2               	addwfc	fsr1h,f,c
 18807  011242  0012               	return		;funcret
 18808  011244                     __end_of_efgtoa:
 18809                           	opt callstack 0
 18810                           
 18811 ;; *************** function _tolower *****************
 18812 ;; Defined at:
 18813 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 18814 ;; Parameters:    Size  Location     Type
 18815 ;;  c               2  [STACK] int 
 18816 ;; Auto vars:     Size  Location     Type
 18817 ;;		None
 18818 ;; Return value:  Size  Location     Type
 18819 ;;                  2  [STACK] int 
 18820 ;; Registers used:
 18821 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 18822 ;; Tracked objects:
 18823 ;;		On entry : 0/0
 18824 ;;		On exit  : 0/0
 18825 ;;		Unchanged: 0/0
 18826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18831 ;;Total ram usage:        0 bytes
 18832 ;; Hardware stack levels used:    1
 18833 ;; Hardware stack levels required when called:   16
 18834 ;; This function calls:
 18835 ;;		_isupper
 18836 ;; This function is called by:
 18837 ;;		_efgtoa
 18838 ;;		_vfpfcnvrt
 18839 ;; This function uses a reentrant model
 18840 ;;
 18841                           
 18842                           	psect	text63
 18843  01B046                     __ptext63:
 18844                           	opt callstack 0
 18845  01B046                     _tolower:
 18846                           	opt callstack 0
 18847                           
 18848                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18849  01B046  52E6               	movf	postinc1,f,c
 18850  01B048  52E6               	movf	postinc1,f,c
 18851                           
 18852                           ;stkvar	_c @ sp[(-2)+-2]
 18853                           
 18854                           ;incstack = 0
 18855 ;; hardware stack exceeded
 18856  01B04A  0EFC               	movlw	-4
 18857  01B04C  50E3               	movf	plusw1,w,c
 18858  01B04E  0FBF               	addlw	191
 18859  01B050  6E0B               	movwf	(btemp+10)^0,c
 18860  01B052  0EFD               	movlw	-3
 18861  01B054  006F FF8C  F00C    	movff	plusw1,btemp+11
 18862  01B05A  0EFF               	movlw	255
 18863  01B05C  220C               	addwfc	(btemp+11)^0,f,c
 18864  01B05E  500C               	movf	(btemp+11)^0,w,c
 18865  01B060  E106               	bnz	u6160
 18866  01B062  0E1A               	movlw	26
 18867  01B064  5C0B               	subwf	(btemp+10)^0,w,c
 18868  01B066  B0D8               	btfsc	status,0,c
 18869  01B068  D002               	goto	u6160
 18870  01B06A  0E01               	movlw	1
 18871  01B06C  D001               	goto	u6170
 18872  01B06E                     u6160:
 18873  01B06E  0E00               	movlw	0
 18874  01B070                     u6170:
 18875  01B070  6E0B               	movwf	(btemp+10)^0,c
 18876  01B072  6A0C               	clrf	(btemp+11)^0,c
 18877                           
 18878                           ;stkvar	_tolower$6584 @ sp[(-2)+0]
 18879  01B074  0EFE               	movlw	-2
 18880  01B076  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18881  01B07C  0EFF               	movlw	-1
 18882  01B07E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18883                           
 18884                           ;stkvar	_tolower$6584 @ sp[(-2)+0]
 18885  01B084  0EFE               	movlw	-2
 18886  01B086  006F FF8C  F001    	movff	plusw1,btemp
 18887  01B08C  0EFF               	movlw	-1
 18888  01B08E  50E3               	movf	plusw1,w,c
 18889  01B090  1001               	iorwf	btemp^0,w,c
 18890  01B092  B4D8               	btfsc	status,2,c
 18891  01B094  D00D               	goto	l8228
 18892                           
 18893                           ;stkvar	_c @ sp[(-2)+-2]
 18894  01B096  0EFC               	movlw	-4
 18895  01B098  006F FF8C  F001    	movff	plusw1,btemp
 18896  01B09E  0EFD               	movlw	-3
 18897  01B0A0  006F FF8C  F002    	movff	plusw1,btemp+1
 18898  01B0A6  0E20               	movlw	32
 18899  01B0A8  1201               	iorwf	btemp^0,f,c
 18900  01B0AA  0E00               	movlw	0
 18901  01B0AC  1202               	iorwf	(btemp+1)^0,f,c
 18902  01B0AE  D008               	goto	l3552
 18903  01B0B0                     l8228:
 18904                           
 18905                           ;stkvar	_c @ sp[(-2)+-2]
 18906  01B0B0  0EFC               	movlw	-4
 18907  01B0B2  006F FF8C  F001    	movff	plusw1,btemp
 18908  01B0B8  0EFD               	movlw	-3
 18909  01B0BA  006F FF8C  F002    	movff	plusw1,btemp+1
 18910  01B0C0                     l3552:
 18911                           
 18912                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18913  01B0C0  52E5               	movf	postdec1,f,c
 18914  01B0C2  52E5               	movf	postdec1,f,c
 18915  01B0C4  52E5               	movf	postdec1,f,c
 18916  01B0C6  52E5               	movf	postdec1,f,c
 18917  01B0C8  0012               	return		;funcret
 18918  01B0CA                     __end_of_tolower:
 18919                           	opt callstack 0
 18920                           
 18921 ;; *************** function _isupper *****************
 18922 ;; Defined at:
 18923 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 18924 ;; Parameters:    Size  Location     Type
 18925 ;;  c               2  [STACK] int 
 18926 ;; Auto vars:     Size  Location     Type
 18927 ;;		None
 18928 ;; Return value:  Size  Location     Type
 18929 ;;                  2  [STACK] int 
 18930 ;; Registers used:
 18931 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18932 ;; Tracked objects:
 18933 ;;		On entry : 0/0
 18934 ;;		On exit  : 0/0
 18935 ;;		Unchanged: 0/0
 18936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18941 ;;Total ram usage:        0 bytes
 18942 ;; Hardware stack levels used:    1
 18943 ;; Hardware stack levels required when called:   15
 18944 ;; This function calls:
 18945 ;;		Nothing
 18946 ;; This function is called by:
 18947 ;;		_efgtoa
 18948 ;;		_xtoa
 18949 ;;		_vfpfcnvrt
 18950 ;;		_tolower
 18951 ;; This function uses a reentrant model
 18952 ;;
 18953                           
 18954                           	psect	text64
 18955  01BEA8                     __ptext64:
 18956                           	opt callstack 0
 18957  01BEA8                     _isupper:
 18958                           	opt callstack 0
 18959                           
 18960                           ;stkvar	_c @ sp[(0)+-2]
 18961                           
 18962                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18963                           ;incstack = 0
 18964 ;; hardware stack exceeded
 18965  01BEA8  0EFE               	movlw	-2
 18966  01BEAA  50E3               	movf	plusw1,w,c
 18967  01BEAC  0FBF               	addlw	191
 18968  01BEAE  6E0B               	movwf	(btemp+10)^0,c
 18969  01BEB0  0EFF               	movlw	-1
 18970  01BEB2  006F FF8C  F00C    	movff	plusw1,btemp+11
 18971  01BEB8  0EFF               	movlw	255
 18972  01BEBA  220C               	addwfc	(btemp+11)^0,f,c
 18973  01BEBC  500C               	movf	(btemp+11)^0,w,c
 18974  01BEBE  E106               	bnz	u5510
 18975  01BEC0  0E1A               	movlw	26
 18976  01BEC2  5C0B               	subwf	(btemp+10)^0,w,c
 18977  01BEC4  B0D8               	btfsc	status,0,c
 18978  01BEC6  D002               	goto	u5510
 18979  01BEC8  0E01               	movlw	1
 18980  01BECA  D001               	goto	u5520
 18981  01BECC                     u5510:
 18982  01BECC  0E00               	movlw	0
 18983  01BECE                     u5520:
 18984  01BECE  6E01               	movwf	btemp^0,c
 18985  01BED0  6A02               	clrf	(btemp+1)^0,c
 18986                           
 18987                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18988  01BED2  52E5               	movf	postdec1,f,c
 18989  01BED4  52E5               	movf	postdec1,f,c
 18990  01BED6  0012               	return		;funcret
 18991  01BED8                     __end_of_isupper:
 18992                           	opt callstack 0
 18993                           
 18994 ;; *************** function _strcpy *****************
 18995 ;; Defined at:
 18996 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 18997 ;; Parameters:    Size  Location     Type
 18998 ;;  dest            2  [STACK] PTR unsigned char 
 18999 ;;		 -> dbuf(80), 
 19000 ;;  src             2  [STACK] PTR const unsigned char 
 19001 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 19002 ;;		 -> dbuf(80), 
 19003 ;; Auto vars:     Size  Location     Type
 19004 ;;  d               2  [STACK] PTR unsigned char 
 19005 ;;		 -> dbuf(80), 
 19006 ;;  s               2  [STACK] PTR const unsigned char 
 19007 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 19008 ;;		 -> dbuf(80), 
 19009 ;; Return value:  Size  Location     Type
 19010 ;;                  2  [STACK] PTR unsigned char 
 19011 ;; Registers used:
 19012 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 19013 ;; Tracked objects:
 19014 ;;		On entry : 0/0
 19015 ;;		On exit  : 0/0
 19016 ;;		Unchanged: 0/0
 19017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19022 ;;Total ram usage:        0 bytes
 19023 ;; Hardware stack levels used:    1
 19024 ;; Hardware stack levels required when called:   15
 19025 ;; This function calls:
 19026 ;;		Nothing
 19027 ;; This function is called by:
 19028 ;;		_efgtoa
 19029 ;; This function uses a reentrant model
 19030 ;;
 19031                           
 19032                           	psect	text65
 19033  01A42A                     __ptext65:
 19034                           	opt callstack 0
 19035  01A42A                     _strcpy:
 19036                           	opt callstack 0
 19037                           
 19038                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19039  01A42A  52E6               	movf	postinc1,f,c
 19040  01A42C  52E6               	movf	postinc1,f,c
 19041  01A42E  52E6               	movf	postinc1,f,c
 19042  01A430  52E6               	movf	postinc1,f,c
 19043                           
 19044                           ;stkvar	_src @ sp[(-4)+-4]
 19045                           
 19046                           ;incstack = 0
 19047 ;; hardware stack exceeded
 19048  01A432  0EF8               	movlw	-8
 19049  01A434  006F FF8C  F00B    	movff	plusw1,btemp+10
 19050  01A43A  0EF9               	movlw	-7
 19051  01A43C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19052                           
 19053                           ;stkvar	_s @ sp[(-4)+2]
 19054  01A442  0EFF               	movlw	-1
 19055  01A444  0060  F033  FFE3   	movff	btemp+11,plusw1
 19056  01A44A  0EFE               	movlw	-2
 19057  01A44C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19058                           
 19059                           ;stkvar	_dest @ sp[(-4)+-2]
 19060  01A452  0EFA               	movlw	-6
 19061  01A454  006F FF8C  F00B    	movff	plusw1,btemp+10
 19062  01A45A  0EFB               	movlw	-5
 19063  01A45C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19064                           
 19065                           ;stkvar	_d @ sp[(-4)+0]
 19066  01A462  0EFD               	movlw	-3
 19067  01A464  0060  F033  FFE3   	movff	btemp+11,plusw1
 19068  01A46A  0EFC               	movlw	-4
 19069  01A46C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19070  01A472                     l12182:
 19071                           
 19072                           ;stkvar	_s @ sp[(-4)+2]
 19073  01A472  50E1               	movf	fsr1l,w,c
 19074  01A474  0FFE               	addlw	-2
 19075  01A476  6ED9               	movwf	fsr2l,c
 19076  01A478  50E2               	movf	fsr1h,w,c
 19077  01A47A  6EDA               	movwf	fsr2h,c
 19078  01A47C  0EFF               	movlw	255
 19079  01A47E  22DA               	addwfc	fsr2h,f,c
 19080  01A480  006F FF7C  F00B    	movff	indf2,btemp+10
 19081  01A486  0E01               	movlw	1
 19082  01A488  26DE               	addwf	postinc2,f,c
 19083  01A48A  006F FF7C  F00C    	movff	indf2,btemp+11
 19084  01A490  0E00               	movlw	0
 19085  01A492  22DD               	addwfc	postdec2,f,c
 19086  01A494  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 19087  01A49A  0060  F033  FFF7   	movff	btemp+11,tblptrh
 19088  01A4A0  0E00               	movlw	low (__mediumconst shr (0+16))
 19089  01A4A2  6EF8               	movwf	tblptru,c
 19090                           
 19091                           ;stkvar	_d @ sp[(-4)+0]
 19092  01A4A4  50E1               	movf	fsr1l,w,c
 19093  01A4A6  0FFC               	addlw	-4
 19094  01A4A8  6ED9               	movwf	fsr2l,c
 19095  01A4AA  50E2               	movf	fsr1h,w,c
 19096  01A4AC  6EDA               	movwf	fsr2h,c
 19097  01A4AE  0EFF               	movlw	255
 19098  01A4B0  22DA               	addwfc	fsr2h,f,c
 19099  01A4B2  006F FF7C  F00B    	movff	indf2,btemp+10
 19100  01A4B8  0E01               	movlw	1
 19101  01A4BA  26DE               	addwf	postinc2,f,c
 19102  01A4BC  006F FF7C  F00C    	movff	indf2,btemp+11
 19103  01A4C2  0E00               	movlw	0
 19104  01A4C4  22DD               	addwfc	postdec2,f,c
 19105  01A4C6  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 19106  01A4CC  0060  F033  FFDA   	movff	btemp+11,fsr2h
 19107  01A4D2  0E1F               	movlw	(high __ramtop+-1)
 19108  01A4D4  64F7               	cpfsgt	tblptrh,c
 19109  01A4D6  D003               	bra	u11007
 19110  01A4D8  0008               	tblrd		*
 19111  01A4DA  50F5               	movf	tablat,w,c
 19112  01A4DC  D007               	bra	u11000
 19113  01A4DE                     u11007:
 19114  01A4DE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19115  01A4E4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19116  01A4EA  50EF               	movf	indf0,w,c
 19117  01A4EC                     u11000:
 19118  01A4EC  6EDF               	movwf	indf2,c
 19119  01A4EE  50DF               	movf	indf2,w,c
 19120  01A4F0  A4D8               	btfss	status,2,c
 19121  01A4F2  D7BF               	goto	l12182
 19122                           
 19123                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 19124  01A4F4  0EF8               	movlw	248
 19125  01A4F6  26E1               	addwf	fsr1l,f,c
 19126  01A4F8  0EFF               	movlw	255
 19127  01A4FA  22E2               	addwfc	fsr1h,f,c
 19128  01A4FC  0012               	return		;funcret
 19129  01A4FE                     __end_of_strcpy:
 19130                           	opt callstack 0
 19131                           
 19132 ;; *************** function _floorf *****************
 19133 ;; Defined at:
 19134 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 19135 ;; Parameters:    Size  Location     Type
 19136 ;;  x               4  [STACK] float 
 19137 ;; Auto vars:     Size  Location     Type
 19138 ;;  u               4  [STACK] struct .
 19139 ;;  m               4  [STACK] unsigned long 
 19140 ;;  e               2  [STACK] int 
 19141 ;; Return value:  Size  Location     Type
 19142 ;;                  4  [STACK] float 
 19143 ;; Registers used:
 19144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 19145 ;; Tracked objects:
 19146 ;;		On entry : 0/0
 19147 ;;		On exit  : 0/0
 19148 ;;		Unchanged: 0/0
 19149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19154 ;;Total ram usage:        0 bytes
 19155 ;; Hardware stack levels used:    1
 19156 ;; Hardware stack levels required when called:   15
 19157 ;; This function calls:
 19158 ;;		Nothing
 19159 ;; This function is called by:
 19160 ;;		_efgtoa
 19161 ;; This function uses a reentrant model
 19162 ;;
 19163                           
 19164                           	psect	text66
 19165  0164FC                     __ptext66:
 19166                           	opt callstack 0
 19167  0164FC                     _floorf:
 19168                           	opt callstack 0
 19169                           
 19170                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 19171  0164FC  0E0A               	movlw	10
 19172  0164FE  26E1               	addwf	fsr1l,f,c
 19173  016500  0E00               	movlw	0
 19174  016502  22E2               	addwfc	fsr1h,f,c
 19175                           
 19176                           ;incstack = 0
 19177 ;; hardware stack exceeded
 19178  016504  0060  F79C  F009   	movff	floorf@F524,btemp+8
 19179  01650A  0060  F7A0  F00A   	movff	floorf@F524+1,btemp+9
 19180  016510  0060  F7A4  F00B   	movff	floorf@F524+2,btemp+10
 19181  016516  0060  F7A8  F00C   	movff	floorf@F524+3,btemp+11
 19182                           
 19183                           ;stkvar	_u @ sp[(-10)+0]
 19184  01651C  0EF6               	movlw	-10
 19185  01651E  0060  F027  FFE3   	movff	btemp+8,plusw1
 19186  016524  0EF7               	movlw	-9
 19187  016526  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19188  01652C  0EF8               	movlw	-8
 19189  01652E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19190  016534  0EF9               	movlw	-7
 19191  016536  0060  F033  FFE3   	movff	btemp+11,plusw1
 19192                           
 19193                           ;stkvar	_x @ sp[(-10)+-4]
 19194  01653C  0EF2               	movlw	-14
 19195  01653E  006F FF8C  F009    	movff	plusw1,btemp+8
 19196  016544  0EF3               	movlw	-13
 19197  016546  006F FF8C  F00A    	movff	plusw1,btemp+9
 19198  01654C  0EF4               	movlw	-12
 19199  01654E  006F FF8C  F00B    	movff	plusw1,btemp+10
 19200  016554  0EF5               	movlw	-11
 19201  016556  006F FF8C  F00C    	movff	plusw1,btemp+11
 19202                           
 19203                           ;stkvar	_u @ sp[(-10)+0]
 19204  01655C  0EF6               	movlw	-10
 19205  01655E  0060  F027  FFE3   	movff	btemp+8,plusw1
 19206  016564  0EF7               	movlw	-9
 19207  016566  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19208  01656C  0EF8               	movlw	-8
 19209  01656E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19210  016574  0EF9               	movlw	-7
 19211  016576  0060  F033  FFE3   	movff	btemp+11,plusw1
 19212  01657C  0E81               	movlw	129
 19213  01657E  6E0B               	movwf	(btemp+10)^0,c
 19214  016580  0EFF               	movlw	255
 19215  016582  6E0C               	movwf	(btemp+11)^0,c
 19216                           
 19217                           ;stkvar	_u @ sp[(-10)+0]
 19218  016584  0EF6               	movlw	-10
 19219  016586  006F FF8C  F005    	movff	plusw1,btemp+4
 19220  01658C  0EF7               	movlw	-9
 19221  01658E  006F FF8C  F006    	movff	plusw1,btemp+5
 19222  016594  0EF8               	movlw	-8
 19223  016596  006F FF8C  F007    	movff	plusw1,btemp+6
 19224  01659C  0EF9               	movlw	-7
 19225  01659E  006F FF8C  F008    	movff	plusw1,btemp+7
 19226  0165A4  0E18               	movlw	24
 19227  0165A6  D005               	goto	u6190
 19228  0165A8                     u6195:
 19229  0165A8  90D8               	bcf	status,0,c
 19230  0165AA  3208               	rrcf	(btemp+7)^0,f,c
 19231  0165AC  3207               	rrcf	(btemp+6)^0,f,c
 19232  0165AE  3206               	rrcf	(btemp+5)^0,f,c
 19233  0165B0  3205               	rrcf	(btemp+4)^0,f,c
 19234  0165B2                     u6190:
 19235  0165B2  2EE8               	decfsz	wreg,f,c
 19236  0165B4  D7F9               	goto	u6195
 19237  0165B6  0060  F014  F009   	movff	btemp+4,btemp+8
 19238  0165BC  0060  F018  F00A   	movff	btemp+5,btemp+9
 19239  0165C2  0EFF               	movlw	255
 19240  0165C4  1609               	andwf	(btemp+8)^0,f,c
 19241  0165C6  0E00               	movlw	0
 19242  0165C8  160A               	andwf	(btemp+9)^0,f,c
 19243  0165CA  500B               	movf	(btemp+10)^0,w,c
 19244  0165CC  2609               	addwf	(btemp+8)^0,f,c
 19245  0165CE  500C               	movf	(btemp+11)^0,w,c
 19246  0165D0  220A               	addwfc	(btemp+9)^0,f,c
 19247                           
 19248                           ;stkvar	_e @ sp[(-10)+8]
 19249  0165D2  0EFE               	movlw	-2
 19250  0165D4  0060  F027  FFE3   	movff	btemp+8,plusw1
 19251  0165DA  0EFF               	movlw	-1
 19252  0165DC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19253                           
 19254                           ;stkvar	_e @ sp[(-10)+8]
 19255  0165E2  0EFF               	movlw	-1
 19256  0165E4  BEE3               	btfsc	plusw1,7,c
 19257  0165E6  D019               	goto	l8242
 19258  0165E8  0EFF               	movlw	-1
 19259  0165EA  50E3               	movf	plusw1,w,c
 19260  0165EC  E108               	bnz	u6200
 19261  0165EE  0EFE               	movlw	-2
 19262  0165F0  006F FF8C  F001    	movff	plusw1,btemp
 19263  0165F6  0E17               	movlw	23
 19264  0165F8  5E01               	subwf	btemp^0,f,c
 19265  0165FA  A0D8               	btfss	status,0,c
 19266  0165FC  D00E               	goto	l8242
 19267  0165FE                     u6200:
 19268                           
 19269                           ;stkvar	_x @ sp[(-10)+-4]
 19270  0165FE  0EF2               	movlw	-14
 19271  016600  006F FF8C  F001    	movff	plusw1,btemp
 19272  016606  0EF3               	movlw	-13
 19273  016608  006F FF8C  F002    	movff	plusw1,btemp+1
 19274  01660E  0EF4               	movlw	-12
 19275  016610  006F FF8C  F003    	movff	plusw1,btemp+2
 19276  016616  0EF5               	movlw	-11
 19277  016618  D11F               	goto	L21
 19278  01661A                     l8242:
 19279                           
 19280                           ;stkvar	_e @ sp[(-10)+8]
 19281  01661A  0EFF               	movlw	-1
 19282  01661C  BEE3               	btfsc	plusw1,7,c
 19283  01661E  D0B4               	goto	l8258
 19284                           
 19285                           ;stkvar	_e @ sp[(-10)+8]
 19286  016620  0EFE               	movlw	-2
 19287  016622  006F FF8C  F00C    	movff	plusw1,btemp+11
 19288  016628  0EFF               	movlw	255
 19289  01662A  6E05               	movwf	(btemp+4)^0,c
 19290  01662C  0EFF               	movlw	255
 19291  01662E  6E06               	movwf	(btemp+5)^0,c
 19292  016630  0E7F               	movlw	127
 19293  016632  6E07               	movwf	(btemp+6)^0,c
 19294  016634  0E00               	movlw	0
 19295  016636  6E08               	movwf	(btemp+7)^0,c
 19296  016638                     u6225:
 19297  016638  660C               	tstfsz	(btemp+11)^0,c
 19298  01663A  D001               	goto	u6226
 19299  01663C  D007               	goto	u6227
 19300  01663E                     u6226:
 19301  01663E  3408               	rlcf	(btemp+7)^0,w,c
 19302  016640  3208               	rrcf	(btemp+7)^0,f,c
 19303  016642  3207               	rrcf	(btemp+6)^0,f,c
 19304  016644  3206               	rrcf	(btemp+5)^0,f,c
 19305  016646  3205               	rrcf	(btemp+4)^0,f,c
 19306  016648  2E0C               	decfsz	(btemp+11)^0,f,c
 19307  01664A  D7F6               	goto	u6225
 19308  01664C                     u6227:
 19309                           
 19310                           ;stkvar	_m @ sp[(-10)+4]
 19311  01664C  0EFA               	movlw	-6
 19312  01664E  0060  F017  FFE3   	movff	btemp+4,plusw1
 19313  016654  0EFB               	movlw	-5
 19314  016656  0060  F01B  FFE3   	movff	btemp+5,plusw1
 19315  01665C  0EFC               	movlw	-4
 19316  01665E  0060  F01F  FFE3   	movff	btemp+6,plusw1
 19317  016664  0EFD               	movlw	-3
 19318  016666  0060  F023  FFE3   	movff	btemp+7,plusw1
 19319                           
 19320                           ;stkvar	_m @ sp[(-10)+4]
 19321                           ;stkvar	_u @ sp[(-10)+0]
 19322  01666C  0EF6               	movlw	-10
 19323  01666E  006F FF8C  F009    	movff	plusw1,btemp+8
 19324  016674  0EF7               	movlw	-9
 19325  016676  006F FF8C  F00A    	movff	plusw1,btemp+9
 19326  01667C  0EF8               	movlw	-8
 19327  01667E  006F FF8C  F00B    	movff	plusw1,btemp+10
 19328  016684  0EF9               	movlw	-7
 19329  016686  006F FF8C  F00C    	movff	plusw1,btemp+11
 19330  01668C  0EFA               	movlw	-6
 19331  01668E  50E3               	movf	plusw1,w,c
 19332  016690  1609               	andwf	(btemp+8)^0,f,c
 19333  016692  0EFB               	movlw	-5
 19334  016694  50E3               	movf	plusw1,w,c
 19335  016696  160A               	andwf	(btemp+9)^0,f,c
 19336  016698  0EFC               	movlw	-4
 19337  01669A  50E3               	movf	plusw1,w,c
 19338  01669C  160B               	andwf	(btemp+10)^0,f,c
 19339  01669E  0EFD               	movlw	-3
 19340  0166A0  50E3               	movf	plusw1,w,c
 19341  0166A2  160C               	andwf	(btemp+11)^0,f,c
 19342  0166A4  5009               	movf	(btemp+8)^0,w,c
 19343  0166A6  100A               	iorwf	(btemp+9)^0,w,c
 19344  0166A8  100B               	iorwf	(btemp+10)^0,w,c
 19345  0166AA  100C               	iorwf	(btemp+11)^0,w,c
 19346  0166AC  B4D8               	btfsc	status,2,c
 19347  0166AE  D7A7               	goto	u6200
 19348                           
 19349                           ;stkvar	_u @ sp[(-10)+0]
 19350  0166B0  0EF6               	movlw	-10
 19351  0166B2  006F FF8C  F009    	movff	plusw1,btemp+8
 19352  0166B8  0EF7               	movlw	-9
 19353  0166BA  006F FF8C  F00A    	movff	plusw1,btemp+9
 19354  0166C0  0EF8               	movlw	-8
 19355  0166C2  006F FF8C  F00B    	movff	plusw1,btemp+10
 19356  0166C8  0EF9               	movlw	-7
 19357  0166CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 19358  0166D0  0E20               	movlw	32
 19359  0166D2  D005               	goto	u6240
 19360  0166D4                     u6245:
 19361  0166D4  90D8               	bcf	status,0,c
 19362  0166D6  320C               	rrcf	(btemp+11)^0,f,c
 19363  0166D8  320B               	rrcf	(btemp+10)^0,f,c
 19364  0166DA  320A               	rrcf	(btemp+9)^0,f,c
 19365  0166DC  3209               	rrcf	(btemp+8)^0,f,c
 19366  0166DE                     u6240:
 19367  0166DE  2EE8               	decfsz	wreg,f,c
 19368  0166E0  D7F9               	goto	u6245
 19369  0166E2  5009               	movf	(btemp+8)^0,w,c
 19370  0166E4  B4D8               	btfsc	status,2,c
 19371  0166E6  D028               	goto	l8256
 19372                           
 19373                           ;stkvar	_m @ sp[(-10)+4]
 19374                           ;stkvar	_u @ sp[(-10)+0]
 19375  0166E8  0EF6               	movlw	-10
 19376  0166EA  50E3               	movf	plusw1,w,c
 19377  0166EC  6E01               	movwf	btemp^0,c
 19378  0166EE  0EFA               	movlw	-6
 19379  0166F0  50E3               	movf	plusw1,w,c
 19380  0166F2  2601               	addwf	btemp^0,f,c
 19381  0166F4  0EF6               	movlw	-10
 19382  0166F6  0060  F007  FFE3   	movff	btemp,plusw1
 19383  0166FC  0EF7               	movlw	-9
 19384  0166FE  50E3               	movf	plusw1,w,c
 19385  016700  6E01               	movwf	btemp^0,c
 19386  016702  0EFB               	movlw	-5
 19387  016704  50E3               	movf	plusw1,w,c
 19388  016706  2201               	addwfc	btemp^0,f,c
 19389  016708  0EF7               	movlw	-9
 19390  01670A  0060  F007  FFE3   	movff	btemp,plusw1
 19391  016710  0EF8               	movlw	-8
 19392  016712  50E3               	movf	plusw1,w,c
 19393  016714  6E01               	movwf	btemp^0,c
 19394  016716  0EFC               	movlw	-4
 19395  016718  50E3               	movf	plusw1,w,c
 19396  01671A  2201               	addwfc	btemp^0,f,c
 19397  01671C  0EF8               	movlw	-8
 19398  01671E  0060  F007  FFE3   	movff	btemp,plusw1
 19399  016724  0EF9               	movlw	-7
 19400  016726  50E3               	movf	plusw1,w,c
 19401  016728  6E01               	movwf	btemp^0,c
 19402  01672A  0EFD               	movlw	-3
 19403  01672C  50E3               	movf	plusw1,w,c
 19404  01672E  2201               	addwfc	btemp^0,f,c
 19405  016730  0EF9               	movlw	-7
 19406  016732  0060  F007  FFE3   	movff	btemp,plusw1
 19407  016738                     l8256:
 19408                           
 19409                           ;stkvar	_m @ sp[(-10)+4]
 19410  016738  0EFA               	movlw	-6
 19411  01673A  006F FF8C  F009    	movff	plusw1,btemp+8
 19412  016740  0EFB               	movlw	-5
 19413  016742  006F FF8C  F00A    	movff	plusw1,btemp+9
 19414  016748  0EFC               	movlw	-4
 19415  01674A  006F FF8C  F00B    	movff	plusw1,btemp+10
 19416  016750  0EFD               	movlw	-3
 19417  016752  006F FF8C  F00C    	movff	plusw1,btemp+11
 19418  016758  1C09               	comf	(btemp+8)^0,w,c
 19419  01675A  6E05               	movwf	(btemp+4)^0,c
 19420  01675C  1C0A               	comf	(btemp+9)^0,w,c
 19421  01675E  6E06               	movwf	(btemp+5)^0,c
 19422  016760  1C0B               	comf	(btemp+10)^0,w,c
 19423  016762  6E07               	movwf	(btemp+6)^0,c
 19424  016764  1C0C               	comf	(btemp+11)^0,w,c
 19425  016766  6E08               	movwf	(btemp+7)^0,c
 19426                           
 19427                           ;stkvar	_u @ sp[(-10)+0]
 19428  016768  50E1               	movf	fsr1l,w,c
 19429  01676A  0FF6               	addlw	-10
 19430  01676C  6ED9               	movwf	fsr2l,c
 19431  01676E  50E2               	movf	fsr1h,w,c
 19432  016770  6EDA               	movwf	fsr2h,c
 19433  016772  0EFF               	movlw	255
 19434  016774  22DA               	addwfc	fsr2h,f,c
 19435  016776  5005               	movf	(btemp+4)^0,w,c
 19436  016778  16DE               	andwf	postinc2,f,c
 19437  01677A  5006               	movf	(btemp+5)^0,w,c
 19438  01677C  16DE               	andwf	postinc2,f,c
 19439  01677E  5007               	movf	(btemp+6)^0,w,c
 19440  016780  16DE               	andwf	postinc2,f,c
 19441  016782  5008               	movf	(btemp+7)^0,w,c
 19442  016784  16DE               	andwf	postinc2,f,c
 19443  016786  D05B               	goto	l8266
 19444  016788                     l8258:
 19445                           
 19446                           ;stkvar	_u @ sp[(-10)+0]
 19447  016788  0EF6               	movlw	-10
 19448  01678A  006F FF8C  F009    	movff	plusw1,btemp+8
 19449  016790  0EF7               	movlw	-9
 19450  016792  006F FF8C  F00A    	movff	plusw1,btemp+9
 19451  016798  0EF8               	movlw	-8
 19452  01679A  006F FF8C  F00B    	movff	plusw1,btemp+10
 19453  0167A0  0EF9               	movlw	-7
 19454  0167A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 19455  0167A8  0E20               	movlw	32
 19456  0167AA  D005               	goto	u6260
 19457  0167AC                     u6265:
 19458  0167AC  90D8               	bcf	status,0,c
 19459  0167AE  320C               	rrcf	(btemp+11)^0,f,c
 19460  0167B0  320B               	rrcf	(btemp+10)^0,f,c
 19461  0167B2  320A               	rrcf	(btemp+9)^0,f,c
 19462  0167B4  3209               	rrcf	(btemp+8)^0,f,c
 19463  0167B6                     u6260:
 19464  0167B6  2EE8               	decfsz	wreg,f,c
 19465  0167B8  D7F9               	goto	u6265
 19466  0167BA  6609               	tstfsz	(btemp+8)^0,c
 19467  0167BC  D009               	goto	l8262
 19468                           
 19469                           ;stkvar	_u @ sp[(-10)+0]
 19470  0167BE  0EF6               	movlw	-10
 19471  0167C0  6AE3               	clrf	plusw1,c
 19472  0167C2  0EF7               	movlw	-9
 19473  0167C4  6AE3               	clrf	plusw1,c
 19474  0167C6  0EF8               	movlw	-8
 19475  0167C8  6AE3               	clrf	plusw1,c
 19476  0167CA  0EF9               	movlw	-7
 19477  0167CC  6AE3               	clrf	plusw1,c
 19478  0167CE  D037               	goto	l8266
 19479  0167D0                     l8262:
 19480                           
 19481                           ;stkvar	_u @ sp[(-10)+0]
 19482  0167D0  0EF6               	movlw	-10
 19483  0167D2  006F FF8C  F009    	movff	plusw1,btemp+8
 19484  0167D8  0EF7               	movlw	-9
 19485  0167DA  006F FF8C  F00A    	movff	plusw1,btemp+9
 19486  0167E0  0EF8               	movlw	-8
 19487  0167E2  006F FF8C  F00B    	movff	plusw1,btemp+10
 19488  0167E8  0EF9               	movlw	-7
 19489  0167EA  006F FF8C  F00C    	movff	plusw1,btemp+11
 19490  0167F0  90D8               	bcf	status,0,c
 19491  0167F2  3409               	rlcf	(btemp+8)^0,w,c
 19492  0167F4  6E05               	movwf	(btemp+4)^0,c
 19493  0167F6  340A               	rlcf	(btemp+9)^0,w,c
 19494  0167F8  6E06               	movwf	(btemp+5)^0,c
 19495  0167FA  340B               	rlcf	(btemp+10)^0,w,c
 19496  0167FC  6E07               	movwf	(btemp+6)^0,c
 19497  0167FE  340C               	rlcf	(btemp+11)^0,w,c
 19498  016800  6E08               	movwf	(btemp+7)^0,c
 19499  016802  5005               	movf	(btemp+4)^0,w,c
 19500  016804  1006               	iorwf	(btemp+5)^0,w,c
 19501  016806  1007               	iorwf	(btemp+6)^0,w,c
 19502  016808  1008               	iorwf	(btemp+7)^0,w,c
 19503  01680A  B4D8               	btfsc	status,2,c
 19504  01680C  D018               	goto	l8266
 19505  01680E  0E00               	movlw	0
 19506  016810  6E09               	movwf	(btemp+8)^0,c
 19507  016812  0E00               	movlw	0
 19508  016814  6E0A               	movwf	(btemp+9)^0,c
 19509  016816  0E80               	movlw	128
 19510  016818  6E0B               	movwf	(btemp+10)^0,c
 19511  01681A  0EBF               	movlw	191
 19512  01681C  6E0C               	movwf	(btemp+11)^0,c
 19513                           
 19514                           ;stkvar	_u @ sp[(-10)+0]
 19515  01681E  0EF6               	movlw	-10
 19516  016820  0060  F027  FFE3   	movff	btemp+8,plusw1
 19517  016826  0EF7               	movlw	-9
 19518  016828  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19519  01682E  0EF8               	movlw	-8
 19520  016830  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19521  016836  0EF9               	movlw	-7
 19522  016838  0060  F033  FFE3   	movff	btemp+11,plusw1
 19523  01683E                     l8266:
 19524                           
 19525                           ;stkvar	_u @ sp[(-10)+0]
 19526  01683E  0EF6               	movlw	-10
 19527  016840  006F FF8C  F001    	movff	plusw1,btemp
 19528  016846  0EF7               	movlw	-9
 19529  016848  006F FF8C  F002    	movff	plusw1,btemp+1
 19530  01684E  0EF8               	movlw	-8
 19531  016850  006F FF8C  F003    	movff	plusw1,btemp+2
 19532  016856  0EF9               	movlw	-7
 19533  016858                     L21:
 19534  016858  006F FF8C  F004    	movff	plusw1,btemp+3
 19535                           
 19536                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19537  01685E  0EF2               	movlw	242
 19538  016860  26E1               	addwf	fsr1l,f,c
 19539  016862  0EFF               	movlw	255
 19540  016864  22E2               	addwfc	fsr1h,f,c
 19541  016866  0012               	return		;funcret
 19542  016868                     __end_of_floorf:
 19543                           	opt callstack 0
 19544                           
 19545 ;; *************** function ___fpclassifyf *****************
 19546 ;; Defined at:
 19547 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 19548 ;; Parameters:    Size  Location     Type
 19549 ;;  x               4  [STACK] float 
 19550 ;; Auto vars:     Size  Location     Type
 19551 ;;  u               4  [STACK] struct .
 19552 ;;  e               2  [STACK] int 
 19553 ;; Return value:  Size  Location     Type
 19554 ;;                  2  [STACK] int 
 19555 ;; Registers used:
 19556 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 19557 ;; Tracked objects:
 19558 ;;		On entry : 0/0
 19559 ;;		On exit  : 0/0
 19560 ;;		Unchanged: 0/0
 19561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19566 ;;Total ram usage:        0 bytes
 19567 ;; Hardware stack levels used:    1
 19568 ;; Hardware stack levels required when called:   15
 19569 ;; This function calls:
 19570 ;;		Nothing
 19571 ;; This function is called by:
 19572 ;;		_efgtoa
 19573 ;; This function uses a reentrant model
 19574 ;;
 19575                           
 19576                           	psect	text67
 19577  018C3E                     __ptext67:
 19578                           	opt callstack 0
 19579  018C3E                     ___fpclassifyf:
 19580                           	opt callstack 0
 19581                           
 19582                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19583  018C3E  0E06               	movlw	6
 19584  018C40  26E1               	addwf	fsr1l,f,c
 19585  018C42  0E00               	movlw	0
 19586  018C44  22E2               	addwfc	fsr1h,f,c
 19587                           
 19588                           ;incstack = 0
 19589 ;; hardware stack exceeded
 19590  018C46  0060  F190  F009   	movff	___fpclassifyf@F463,btemp+8
 19591  018C4C  0060  F194  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 19592  018C52  0060  F198  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 19593  018C58  0060  F19C  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 19594                           
 19595                           ;stkvar	_u @ sp[(-6)+0]
 19596  018C5E  0EFA               	movlw	-6
 19597  018C60  0060  F027  FFE3   	movff	btemp+8,plusw1
 19598  018C66  0EFB               	movlw	-5
 19599  018C68  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19600  018C6E  0EFC               	movlw	-4
 19601  018C70  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19602  018C76  0EFD               	movlw	-3
 19603  018C78  0060  F033  FFE3   	movff	btemp+11,plusw1
 19604                           
 19605                           ;stkvar	_x @ sp[(-6)+-4]
 19606  018C7E  0EF6               	movlw	-10
 19607  018C80  006F FF8C  F009    	movff	plusw1,btemp+8
 19608  018C86  0EF7               	movlw	-9
 19609  018C88  006F FF8C  F00A    	movff	plusw1,btemp+9
 19610  018C8E  0EF8               	movlw	-8
 19611  018C90  006F FF8C  F00B    	movff	plusw1,btemp+10
 19612  018C96  0EF9               	movlw	-7
 19613  018C98  006F FF8C  F00C    	movff	plusw1,btemp+11
 19614                           
 19615                           ;stkvar	_u @ sp[(-6)+0]
 19616  018C9E  0EFA               	movlw	-6
 19617  018CA0  0060  F027  FFE3   	movff	btemp+8,plusw1
 19618  018CA6  0EFB               	movlw	-5
 19619  018CA8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19620  018CAE  0EFC               	movlw	-4
 19621  018CB0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19622  018CB6  0EFD               	movlw	-3
 19623  018CB8  0060  F033  FFE3   	movff	btemp+11,plusw1
 19624                           
 19625                           ;stkvar	_u @ sp[(-6)+0]
 19626  018CBE  0EFA               	movlw	-6
 19627  018CC0  006F FF8C  F009    	movff	plusw1,btemp+8
 19628  018CC6  0EFB               	movlw	-5
 19629  018CC8  006F FF8C  F00A    	movff	plusw1,btemp+9
 19630  018CCE  0EFC               	movlw	-4
 19631  018CD0  006F FF8C  F00B    	movff	plusw1,btemp+10
 19632  018CD6  0EFD               	movlw	-3
 19633  018CD8  006F FF8C  F00C    	movff	plusw1,btemp+11
 19634  018CDE  0E18               	movlw	24
 19635  018CE0  D005               	goto	u6070
 19636  018CE2                     u6075:
 19637  018CE2  90D8               	bcf	status,0,c
 19638  018CE4  320C               	rrcf	(btemp+11)^0,f,c
 19639  018CE6  320B               	rrcf	(btemp+10)^0,f,c
 19640  018CE8  320A               	rrcf	(btemp+9)^0,f,c
 19641  018CEA  3209               	rrcf	(btemp+8)^0,f,c
 19642  018CEC                     u6070:
 19643  018CEC  2EE8               	decfsz	wreg,f,c
 19644  018CEE  D7F9               	goto	u6075
 19645  018CF0  0060  F024  F007   	movff	btemp+8,btemp+6
 19646  018CF6  0060  F028  F008   	movff	btemp+9,btemp+7
 19647  018CFC  0EFF               	movlw	255
 19648  018CFE  1607               	andwf	(btemp+6)^0,f,c
 19649  018D00  0E00               	movlw	0
 19650  018D02  1608               	andwf	(btemp+7)^0,f,c
 19651                           
 19652                           ;stkvar	_e @ sp[(-6)+4]
 19653  018D04  0EFE               	movlw	-2
 19654  018D06  0060  F01F  FFE3   	movff	btemp+6,plusw1
 19655  018D0C  0EFF               	movlw	-1
 19656  018D0E  0060  F023  FFE3   	movff	btemp+7,plusw1
 19657                           
 19658                           ;stkvar	_e @ sp[(-6)+4]
 19659  018D14  0EFE               	movlw	-2
 19660  018D16  006F FF8C  F001    	movff	plusw1,btemp
 19661  018D1C  0EFF               	movlw	-1
 19662  018D1E  50E3               	movf	plusw1,w,c
 19663  018D20  1001               	iorwf	btemp^0,w,c
 19664  018D22  A4D8               	btfss	status,2,c
 19665  018D24  D023               	goto	l8204
 19666                           
 19667                           ;stkvar	_u @ sp[(-6)+0]
 19668  018D26  0EFA               	movlw	-6
 19669  018D28  006F FF8C  F009    	movff	plusw1,btemp+8
 19670  018D2E  0EFB               	movlw	-5
 19671  018D30  006F FF8C  F00A    	movff	plusw1,btemp+9
 19672  018D36  0EFC               	movlw	-4
 19673  018D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 19674  018D3E  0EFD               	movlw	-3
 19675  018D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 19676  018D46  90D8               	bcf	status,0,c
 19677  018D48  3409               	rlcf	(btemp+8)^0,w,c
 19678  018D4A  6E05               	movwf	(btemp+4)^0,c
 19679  018D4C  340A               	rlcf	(btemp+9)^0,w,c
 19680  018D4E  6E06               	movwf	(btemp+5)^0,c
 19681  018D50  340B               	rlcf	(btemp+10)^0,w,c
 19682  018D52  6E07               	movwf	(btemp+6)^0,c
 19683  018D54  340C               	rlcf	(btemp+11)^0,w,c
 19684  018D56  6E08               	movwf	(btemp+7)^0,c
 19685  018D58  5005               	movf	(btemp+4)^0,w,c
 19686  018D5A  1006               	iorwf	(btemp+5)^0,w,c
 19687  018D5C  1007               	iorwf	(btemp+6)^0,w,c
 19688  018D5E  1008               	iorwf	(btemp+7)^0,w,c
 19689  018D60  A4D8               	btfss	status,2,c
 19690  018D62  D002               	goto	l8200
 19691  018D64  0E02               	movlw	2
 19692  018D66  D02E               	goto	L22
 19693  018D68                     l8200:
 19694  018D68  0E03               	movlw	3
 19695  018D6A  D02C               	goto	L22
 19696  018D6C                     l8204:
 19697                           
 19698                           ;stkvar	_e @ sp[(-6)+4]
 19699  018D6C  0EFE               	movlw	-2
 19700  018D6E  28E3               	incf	plusw1,w,c
 19701  018D70  E128               	bnz	l8210
 19702  018D72  0EFF               	movlw	-1
 19703  018D74  50E3               	movf	plusw1,w,c
 19704  018D76  A4D8               	btfss	status,2,c
 19705  018D78  D024               	goto	l8210
 19706                           
 19707                           ;stkvar	_u @ sp[(-6)+0]
 19708  018D7A  0EFA               	movlw	-6
 19709  018D7C  006F FF8C  F009    	movff	plusw1,btemp+8
 19710  018D82  0EFB               	movlw	-5
 19711  018D84  006F FF8C  F00A    	movff	plusw1,btemp+9
 19712  018D8A  0EFC               	movlw	-4
 19713  018D8C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19714  018D92  0EFD               	movlw	-3
 19715  018D94  006F FF8C  F00C    	movff	plusw1,btemp+11
 19716  018D9A  0E09               	movlw	9
 19717  018D9C                     u6115:
 19718  018D9C  90D8               	bcf	status,0,c
 19719  018D9E  3609               	rlcf	(btemp+8)^0,f,c
 19720  018DA0  360A               	rlcf	(btemp+9)^0,f,c
 19721  018DA2  360B               	rlcf	(btemp+10)^0,f,c
 19722  018DA4  360C               	rlcf	(btemp+11)^0,f,c
 19723  018DA6  2EE8               	decfsz	wreg,f,c
 19724  018DA8  D7F9               	goto	u6115
 19725  018DAA  5009               	movf	(btemp+8)^0,w,c
 19726  018DAC  100A               	iorwf	(btemp+9)^0,w,c
 19727  018DAE  100B               	iorwf	(btemp+10)^0,w,c
 19728  018DB0  100C               	iorwf	(btemp+11)^0,w,c
 19729  018DB2  A4D8               	btfss	status,2,c
 19730  018DB4  D002               	goto	u6120
 19731  018DB6  0E01               	movlw	1
 19732  018DB8  D001               	goto	u6130
 19733  018DBA                     u6120:
 19734  018DBA  0E00               	movlw	0
 19735  018DBC                     u6130:
 19736  018DBC  6E01               	movwf	btemp^0,c
 19737  018DBE  6A02               	clrf	(btemp+1)^0,c
 19738  018DC0  D004               	goto	l3162
 19739  018DC2                     l8210:
 19740  018DC2  0E04               	movlw	4
 19741  018DC4                     L22:
 19742  018DC4  6E01               	movwf	btemp^0,c
 19743  018DC6  0E00               	movlw	0
 19744  018DC8  6E02               	movwf	(btemp+1)^0,c
 19745  018DCA                     l3162:
 19746                           
 19747                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 19748  018DCA  0EF6               	movlw	246
 19749  018DCC  26E1               	addwf	fsr1l,f,c
 19750  018DCE  0EFF               	movlw	255
 19751  018DD0  22E2               	addwfc	fsr1h,f,c
 19752  018DD2  0012               	return		;funcret
 19753  018DD4                     __end_of___fpclassifyf:
 19754                           	opt callstack 0
 19755                           
 19756 ;; *************** function ___fltol *****************
 19757 ;; Defined at:
 19758 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 19759 ;; Parameters:    Size  Location     Type
 19760 ;;  f1              4  [STACK] int 
 19761 ;; Auto vars:     Size  Location     Type
 19762 ;;  exp1            1  [STACK] unsigned char 
 19763 ;;  sign1           1  [STACK] unsigned char 
 19764 ;; Return value:  Size  Location     Type
 19765 ;;                  4  [STACK] long 
 19766 ;; Registers used:
 19767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 19768 ;; Tracked objects:
 19769 ;;		On entry : 0/0
 19770 ;;		On exit  : 0/0
 19771 ;;		Unchanged: 0/0
 19772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19777 ;;Total ram usage:        0 bytes
 19778 ;; Hardware stack levels used:    1
 19779 ;; Hardware stack levels required when called:   15
 19780 ;; This function calls:
 19781 ;;		Nothing
 19782 ;; This function is called by:
 19783 ;;		_main
 19784 ;;		_convert_dac_raw
 19785 ;;		_calc_bsoc
 19786 ;;		_init_bsoc
 19787 ;;		_efgtoa
 19788 ;; This function uses a reentrant model
 19789 ;;
 19790                           
 19791                           	psect	text68
 19792  0190DA                     __ptext68:
 19793                           	opt callstack 0
 19794  0190DA                     ___fltol:
 19795                           	opt callstack 0
 19796                           
 19797                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19798  0190DA  52E6               	movf	postinc1,f,c
 19799  0190DC  52E6               	movf	postinc1,f,c
 19800                           
 19801                           ;stkvar	_f1 @ sp[(-2)+-4]
 19802                           
 19803                           ;incstack = 0
 19804 ;; hardware stack exceeded
 19805  0190DE  0EFA               	movlw	-6
 19806  0190E0  006F FF8C  F009    	movff	plusw1,btemp+8
 19807  0190E6  0EFB               	movlw	-5
 19808  0190E8  006F FF8C  F00A    	movff	plusw1,btemp+9
 19809  0190EE  0EFC               	movlw	-4
 19810  0190F0  006F FF8C  F00B    	movff	plusw1,btemp+10
 19811  0190F6  0EFD               	movlw	-3
 19812  0190F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 19813  0190FE  0E18               	movlw	24
 19814  019100  D005               	goto	u7280
 19815  019102                     u7285:
 19816  019102  90D8               	bcf	status,0,c
 19817  019104  320C               	rrcf	(btemp+11)^0,f,c
 19818  019106  320B               	rrcf	(btemp+10)^0,f,c
 19819  019108  320A               	rrcf	(btemp+9)^0,f,c
 19820  01910A  3209               	rrcf	(btemp+8)^0,f,c
 19821  01910C                     u7280:
 19822  01910C  2EE8               	decfsz	wreg,f,c
 19823  01910E  D7F9               	goto	u7285
 19824                           
 19825                           ;stkvar	_exp1 @ sp[(-2)+0]
 19826  019110  0EFE               	movlw	-2
 19827  019112  0060  F027  FFE3   	movff	btemp+8,plusw1
 19828  019118  0EFE               	movlw	-2
 19829  01911A  50E3               	movf	plusw1,w,c
 19830  01911C  A4D8               	btfss	status,2,c
 19831  01911E  D006               	goto	l8830
 19832  019120                     u7290:
 19833  019120  0E00               	movlw	0
 19834  019122  6E01               	movwf	btemp^0,c
 19835  019124  6A02               	clrf	(btemp+1)^0,c
 19836  019126  6A03               	clrf	(btemp+2)^0,c
 19837  019128  6A04               	clrf	(btemp+3)^0,c
 19838  01912A  D08B               	goto	l2778
 19839  01912C                     l8830:
 19840                           
 19841                           ;stkvar	_f1 @ sp[(-2)+-4]
 19842  01912C  0EFA               	movlw	-6
 19843  01912E  006F FF8C  F009    	movff	plusw1,btemp+8
 19844  019134  0EFB               	movlw	-5
 19845  019136  006F FF8C  F00A    	movff	plusw1,btemp+9
 19846  01913C  0EFC               	movlw	-4
 19847  01913E  006F FF8C  F00B    	movff	plusw1,btemp+10
 19848  019144  0EFD               	movlw	-3
 19849  019146  006F FF8C  F00C    	movff	plusw1,btemp+11
 19850  01914C  0E20               	movlw	32
 19851  01914E  D005               	goto	u7300
 19852  019150                     u7305:
 19853  019150  90D8               	bcf	status,0,c
 19854  019152  320C               	rrcf	(btemp+11)^0,f,c
 19855  019154  320B               	rrcf	(btemp+10)^0,f,c
 19856  019156  320A               	rrcf	(btemp+9)^0,f,c
 19857  019158  3209               	rrcf	(btemp+8)^0,f,c
 19858  01915A                     u7300:
 19859  01915A  2EE8               	decfsz	wreg,f,c
 19860  01915C  D7F9               	goto	u7305
 19861                           
 19862                           ;stkvar	_sign1 @ sp[(-2)+1]
 19863  01915E  0EFF               	movlw	-1
 19864  019160  0060  F027  FFE3   	movff	btemp+8,plusw1
 19865                           
 19866                           ;stkvar	_f1 @ sp[(-2)+-4]
 19867  019166  0EFC               	movlw	-4
 19868  019168  8EE3               	bsf	plusw1,7,c
 19869                           
 19870                           ;stkvar	_f1 @ sp[(-2)+-4]
 19871  01916A  50E1               	movf	fsr1l,w,c
 19872  01916C  0FFA               	addlw	-6
 19873  01916E  6ED9               	movwf	fsr2l,c
 19874  019170  50E2               	movf	fsr1h,w,c
 19875  019172  6EDA               	movwf	fsr2h,c
 19876  019174  0EFF               	movlw	255
 19877  019176  22DA               	addwfc	fsr2h,f,c
 19878  019178  0EFF               	movlw	255
 19879  01917A  16DE               	andwf	postinc2,f,c
 19880  01917C  0EFF               	movlw	255
 19881  01917E  16DE               	andwf	postinc2,f,c
 19882  019180  0EFF               	movlw	255
 19883  019182  16DE               	andwf	postinc2,f,c
 19884  019184  0E00               	movlw	0
 19885  019186  16DE               	andwf	postinc2,f,c
 19886                           
 19887                           ;stkvar	_exp1 @ sp[(-2)+0]
 19888  019188  0EFE               	movlw	-2
 19889  01918A  006F FF8C  F001    	movff	plusw1,btemp
 19890  019190  0E96               	movlw	150
 19891  019192  5E01               	subwf	btemp^0,f,c
 19892  019194  0EFE               	movlw	-2
 19893  019196  0060  F007  FFE3   	movff	btemp,plusw1
 19894                           
 19895                           ;stkvar	_exp1 @ sp[(-2)+0]
 19896  01919C  0EFE               	movlw	-2
 19897  01919E  AEE3               	btfss	plusw1,7,c
 19898  0191A0  D014               	goto	l8848
 19899                           
 19900                           ;stkvar	_exp1 @ sp[(-2)+0]
 19901  0191A2  0EFE               	movlw	-2
 19902  0191A4  50E3               	movf	plusw1,w,c
 19903  0191A6  0A80               	xorlw	128
 19904  0191A8  0F97               	addlw	151
 19905  0191AA  A0D8               	btfss	status,0,c
 19906  0191AC  D7B9               	goto	u7290
 19907  0191AE                     l8846:
 19908                           
 19909                           ;stkvar	_f1 @ sp[(-2)+-4]
 19910  0191AE  90D8               	bcf	status,0,c
 19911  0191B0  0EFD               	movlw	-3
 19912  0191B2  32E3               	rrcf	plusw1,f,c
 19913  0191B4  0EFC               	movlw	-4
 19914  0191B6  32E3               	rrcf	plusw1,f,c
 19915  0191B8  0EFB               	movlw	-5
 19916  0191BA  32E3               	rrcf	plusw1,f,c
 19917  0191BC  0EFA               	movlw	-6
 19918  0191BE  32E3               	rrcf	plusw1,f,c
 19919                           
 19920                           ;stkvar	_exp1 @ sp[(-2)+0]
 19921  0191C0  0EFE               	movlw	-2
 19922  0191C2  2AE3               	incf	plusw1,f,c
 19923  0191C4  B4D8               	btfsc	status,2,c
 19924  0191C6  D018               	goto	u7350
 19925  0191C8  D7F2               	goto	l8846
 19926  0191CA                     l8848:
 19927                           
 19928                           ;stkvar	_exp1 @ sp[(-2)+0]
 19929  0191CA  0EFE               	movlw	-2
 19930  0191CC  006F FF8C  F001    	movff	plusw1,btemp
 19931  0191D2  0E1F               	movlw	31
 19932  0191D4  6401               	cpfsgt	btemp^0,c
 19933  0191D6  D00C               	goto	l8856
 19934  0191D8  D7A3               	goto	u7290
 19935  0191DA                     l8854:
 19936                           
 19937                           ;stkvar	_f1 @ sp[(-2)+-4]
 19938  0191DA  90D8               	bcf	status,0,c
 19939  0191DC  0EFA               	movlw	-6
 19940  0191DE  36E3               	rlcf	plusw1,f,c
 19941  0191E0  0EFB               	movlw	-5
 19942  0191E2  36E3               	rlcf	plusw1,f,c
 19943  0191E4  0EFC               	movlw	-4
 19944  0191E6  36E3               	rlcf	plusw1,f,c
 19945  0191E8  0EFD               	movlw	-3
 19946  0191EA  36E3               	rlcf	plusw1,f,c
 19947                           
 19948                           ;stkvar	_exp1 @ sp[(-2)+0]
 19949  0191EC  0EFE               	movlw	-2
 19950  0191EE  06E3               	decf	plusw1,f,c
 19951  0191F0                     l8856:
 19952                           
 19953                           ;stkvar	_exp1 @ sp[(-2)+0]
 19954  0191F0  0EFE               	movlw	-2
 19955  0191F2  50E3               	movf	plusw1,w,c
 19956  0191F4  A4D8               	btfss	status,2,c
 19957  0191F6  D7F1               	goto	l8854
 19958  0191F8                     u7350:
 19959                           
 19960                           ;stkvar	_sign1 @ sp[(-2)+1]
 19961  0191F8  0EFF               	movlw	-1
 19962  0191FA  50E3               	movf	plusw1,w,c
 19963  0191FC  B4D8               	btfsc	status,2,c
 19964  0191FE  D011               	goto	u7370
 19965                           
 19966                           ;stkvar	_f1 @ sp[(-2)+-4]
 19967                           ;stkvar	_f1 @ sp[(-2)+-4]
 19968  019200  0EFA               	movlw	-6
 19969  019202  6CE3               	negf	plusw1,c
 19970  019204  0EFB               	movlw	-5
 19971  019206  1EE3               	comf	plusw1,f,c
 19972  019208  0EFC               	movlw	-4
 19973  01920A  1EE3               	comf	plusw1,f,c
 19974  01920C  0EFD               	movlw	-3
 19975  01920E  1EE3               	comf	plusw1,f,c
 19976  019210  E308               	bnc	u7370
 19977  019212  0EFB               	movlw	-5
 19978  019214  2AE3               	incf	plusw1,f,c
 19979  019216  E305               	bnc	u7370
 19980  019218  0EFC               	movlw	-4
 19981  01921A  2AE3               	incf	plusw1,f,c
 19982  01921C  E302               	bnc	u7370
 19983  01921E  0EFD               	movlw	-3
 19984  019220  2AE3               	incf	plusw1,f,c
 19985  019222                     u7370:
 19986                           
 19987                           ;stkvar	_f1 @ sp[(-2)+-4]
 19988  019222  0EFA               	movlw	-6
 19989  019224  006F FF8C  F001    	movff	plusw1,btemp
 19990  01922A  0EFB               	movlw	-5
 19991  01922C  006F FF8C  F002    	movff	plusw1,btemp+1
 19992  019232  0EFC               	movlw	-4
 19993  019234  006F FF8C  F003    	movff	plusw1,btemp+2
 19994  01923A  0EFD               	movlw	-3
 19995  01923C  006F FF8C  F004    	movff	plusw1,btemp+3
 19996  019242                     l2778:
 19997                           
 19998                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19999  019242  0EFA               	movlw	250
 20000  019244  26E1               	addwf	fsr1l,f,c
 20001  019246  0EFF               	movlw	255
 20002  019248  22E2               	addwfc	fsr1h,f,c
 20003  01924A  0012               	return		;funcret
 20004  01924C                     __end_of___fltol:
 20005                           	opt callstack 0
 20006                           
 20007 ;; *************** function ___flneg *****************
 20008 ;; Defined at:
 20009 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 20010 ;; Parameters:    Size  Location     Type
 20011 ;;  f1              4  [STACK] long 
 20012 ;; Auto vars:     Size  Location     Type
 20013 ;;		None
 20014 ;; Return value:  Size  Location     Type
 20015 ;;                  4  [STACK] long 
 20016 ;; Registers used:
 20017 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 20018 ;; Tracked objects:
 20019 ;;		On entry : 0/0
 20020 ;;		On exit  : 0/0
 20021 ;;		Unchanged: 0/0
 20022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20027 ;;Total ram usage:        0 bytes
 20028 ;; Hardware stack levels used:    1
 20029 ;; Hardware stack levels required when called:   15
 20030 ;; This function calls:
 20031 ;;		Nothing
 20032 ;; This function is called by:
 20033 ;;		_calc_bsoc
 20034 ;;		_efgtoa
 20035 ;; This function uses a reentrant model
 20036 ;;
 20037                           
 20038                           	psect	text69
 20039  01B86C                     __ptext69:
 20040                           	opt callstack 0
 20041  01B86C                     ___flneg:
 20042                           	opt callstack 0
 20043                           
 20044                           ;stkvar	_f1 @ sp[(0)+-4]
 20045                           
 20046                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20047                           ;incstack = 0
 20048 ;; hardware stack exceeded
 20049  01B86C  0EFC               	movlw	-4
 20050  01B86E  50E3               	movf	plusw1,w,c
 20051  01B870  E10A               	bnz	u7270
 20052  01B872  0EFD               	movlw	-3
 20053  01B874  50E3               	movf	plusw1,w,c
 20054  01B876  E107               	bnz	u7270
 20055  01B878  0EFE               	movlw	-2
 20056  01B87A  50E3               	movf	plusw1,w,c
 20057  01B87C  E104               	bnz	u7270
 20058  01B87E  0EFF               	movlw	-1
 20059  01B880  50E3               	movf	plusw1,w,c
 20060  01B882  B4D8               	btfsc	status,2,c
 20061  01B884  D002               	goto	l8820
 20062  01B886                     u7270:
 20063                           
 20064                           ;stkvar	_f1 @ sp[(0)+-4]
 20065  01B886  0EFF               	movlw	-1
 20066  01B888  7EE3               	btg	plusw1,7,c
 20067  01B88A                     l8820:
 20068                           
 20069                           ;stkvar	_f1 @ sp[(0)+-4]
 20070  01B88A  0EFC               	movlw	-4
 20071  01B88C  006F FF8C  F001    	movff	plusw1,btemp
 20072  01B892  0EFD               	movlw	-3
 20073  01B894  006F FF8C  F002    	movff	plusw1,btemp+1
 20074  01B89A  0EFE               	movlw	-2
 20075  01B89C  006F FF8C  F003    	movff	plusw1,btemp+2
 20076  01B8A2  0EFF               	movlw	-1
 20077  01B8A4  006F FF8C  F004    	movff	plusw1,btemp+3
 20078                           
 20079                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20080  01B8AA  52E5               	movf	postdec1,f,c
 20081  01B8AC  52E5               	movf	postdec1,f,c
 20082  01B8AE  52E5               	movf	postdec1,f,c
 20083  01B8B0  52E5               	movf	postdec1,f,c
 20084  01B8B2  0012               	return		;funcret
 20085  01B8B4                     __end_of___flneg:
 20086                           	opt callstack 0
 20087                           
 20088 ;; *************** function ___fleq *****************
 20089 ;; Defined at:
 20090 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 20091 ;; Parameters:    Size  Location     Type
 20092 ;;  ff1             4  [STACK] long 
 20093 ;;  ff2             4  [STACK] long 
 20094 ;; Auto vars:     Size  Location     Type
 20095 ;;		None
 20096 ;; Return value:  Size  Location     Type
 20097 ;;		None               void
 20098 ;; Registers used:
 20099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20100 ;; Tracked objects:
 20101 ;;		On entry : 0/0
 20102 ;;		On exit  : 0/0
 20103 ;;		Unchanged: 0/0
 20104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20109 ;;Total ram usage:        0 bytes
 20110 ;; Hardware stack levels used:    1
 20111 ;; Hardware stack levels required when called:   15
 20112 ;; This function calls:
 20113 ;;		Nothing
 20114 ;; This function is called by:
 20115 ;;		_efgtoa
 20116 ;; This function uses a reentrant model
 20117 ;;
 20118                           
 20119                           	psect	text70
 20120  01A69E                     __ptext70:
 20121                           	opt callstack 0
 20122  01A69E                     ___fleq:
 20123                           	opt callstack 0
 20124                           
 20125                           ;stkvar	_ff1 @ sp[(0)+-4]
 20126                           
 20127                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20128                           ;incstack = 0
 20129 ;; hardware stack exceeded
 20130  01A69E  50E1               	movf	fsr1l,w,c
 20131  01A6A0  0FFC               	addlw	-4
 20132  01A6A2  6ED9               	movwf	fsr2l,c
 20133  01A6A4  50E2               	movf	fsr1h,w,c
 20134  01A6A6  6EDA               	movwf	fsr2h,c
 20135  01A6A8  0EFF               	movlw	255
 20136  01A6AA  22DA               	addwfc	fsr2h,f,c
 20137  01A6AC  0E00               	movlw	0
 20138  01A6AE  14DE               	andwf	postinc2,w,c
 20139  01A6B0  6E09               	movwf	(btemp+8)^0,c
 20140  01A6B2  0E00               	movlw	0
 20141  01A6B4  14DE               	andwf	postinc2,w,c
 20142  01A6B6  6E0A               	movwf	(btemp+9)^0,c
 20143  01A6B8  0E80               	movlw	128
 20144  01A6BA  14DE               	andwf	postinc2,w,c
 20145  01A6BC  6E0B               	movwf	(btemp+10)^0,c
 20146  01A6BE  0E7F               	movlw	127
 20147  01A6C0  14DE               	andwf	postinc2,w,c
 20148  01A6C2  6E0C               	movwf	(btemp+11)^0,c
 20149  01A6C4  5009               	movf	(btemp+8)^0,w,c
 20150  01A6C6  100A               	iorwf	(btemp+9)^0,w,c
 20151  01A6C8  100B               	iorwf	(btemp+10)^0,w,c
 20152  01A6CA  100C               	iorwf	(btemp+11)^0,w,c
 20153  01A6CC  A4D8               	btfss	status,2,c
 20154  01A6CE  D008               	goto	l8778
 20155                           
 20156                           ;stkvar	_ff1 @ sp[(0)+-4]
 20157  01A6D0  0EFC               	movlw	-4
 20158  01A6D2  6AE3               	clrf	plusw1,c
 20159  01A6D4  0EFD               	movlw	-3
 20160  01A6D6  6AE3               	clrf	plusw1,c
 20161  01A6D8  0EFE               	movlw	-2
 20162  01A6DA  6AE3               	clrf	plusw1,c
 20163  01A6DC  0EFF               	movlw	-1
 20164  01A6DE  6AE3               	clrf	plusw1,c
 20165  01A6E0                     l8778:
 20166                           
 20167                           ;stkvar	_ff2 @ sp[(0)+-8]
 20168  01A6E0  50E1               	movf	fsr1l,w,c
 20169  01A6E2  0FF8               	addlw	-8
 20170  01A6E4  6ED9               	movwf	fsr2l,c
 20171  01A6E6  50E2               	movf	fsr1h,w,c
 20172  01A6E8  6EDA               	movwf	fsr2h,c
 20173  01A6EA  0EFF               	movlw	255
 20174  01A6EC  22DA               	addwfc	fsr2h,f,c
 20175  01A6EE  0E00               	movlw	0
 20176  01A6F0  14DE               	andwf	postinc2,w,c
 20177  01A6F2  6E09               	movwf	(btemp+8)^0,c
 20178  01A6F4  0E00               	movlw	0
 20179  01A6F6  14DE               	andwf	postinc2,w,c
 20180  01A6F8  6E0A               	movwf	(btemp+9)^0,c
 20181  01A6FA  0E80               	movlw	128
 20182  01A6FC  14DE               	andwf	postinc2,w,c
 20183  01A6FE  6E0B               	movwf	(btemp+10)^0,c
 20184  01A700  0E7F               	movlw	127
 20185  01A702  14DE               	andwf	postinc2,w,c
 20186  01A704  6E0C               	movwf	(btemp+11)^0,c
 20187  01A706  5009               	movf	(btemp+8)^0,w,c
 20188  01A708  100A               	iorwf	(btemp+9)^0,w,c
 20189  01A70A  100B               	iorwf	(btemp+10)^0,w,c
 20190  01A70C  100C               	iorwf	(btemp+11)^0,w,c
 20191  01A70E  A4D8               	btfss	status,2,c
 20192  01A710  D008               	goto	l8782
 20193                           
 20194                           ;stkvar	_ff2 @ sp[(0)+-8]
 20195  01A712  0EF8               	movlw	-8
 20196  01A714  6AE3               	clrf	plusw1,c
 20197  01A716  0EF9               	movlw	-7
 20198  01A718  6AE3               	clrf	plusw1,c
 20199  01A71A  0EFA               	movlw	-6
 20200  01A71C  6AE3               	clrf	plusw1,c
 20201  01A71E  0EFB               	movlw	-5
 20202  01A720  6AE3               	clrf	plusw1,c
 20203  01A722                     l8782:
 20204                           
 20205                           ;stkvar	_ff2 @ sp[(0)+-8]
 20206                           ;stkvar	_ff1 @ sp[(0)+-4]
 20207  01A722  50E1               	movf	fsr1l,w,c
 20208  01A724  0FFC               	addlw	-4
 20209  01A726  6ED9               	movwf	fsr2l,c
 20210  01A728  50E2               	movf	fsr1h,w,c
 20211  01A72A  6EDA               	movwf	fsr2h,c
 20212  01A72C  0EFF               	movlw	255
 20213  01A72E  22DA               	addwfc	fsr2h,f,c
 20214  01A730  0EF8               	movlw	-8
 20215  01A732  50E3               	movf	plusw1,w,c
 20216  01A734  18DE               	xorwf	postinc2,w,c
 20217  01A736  E10D               	bnz	u7210
 20218  01A738  0EF9               	movlw	-7
 20219  01A73A  50E3               	movf	plusw1,w,c
 20220  01A73C  18DE               	xorwf	postinc2,w,c
 20221  01A73E  E109               	bnz	u7210
 20222  01A740  0EFA               	movlw	-6
 20223  01A742  50E3               	movf	plusw1,w,c
 20224  01A744  18DE               	xorwf	postinc2,w,c
 20225  01A746  E105               	bnz	u7210
 20226  01A748  0EFB               	movlw	-5
 20227  01A74A  50E3               	movf	plusw1,w,c
 20228  01A74C  18DE               	xorwf	postinc2,w,c
 20229  01A74E  B4D8               	btfsc	status,2,c
 20230  01A750  D002               	goto	l8786
 20231  01A752                     u7210:
 20232  01A752  9001               	bcf	btemp& (0+255),0,c
 20233  01A754  D001               	goto	l2740
 20234  01A756                     l8786:
 20235  01A756  8001               	bsf	btemp& (0+255),0,c
 20236  01A758                     l2740:
 20237                           
 20238                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 20239  01A758  0EF8               	movlw	248
 20240  01A75A  26E1               	addwf	fsr1l,f,c
 20241  01A75C  0EFF               	movlw	255
 20242  01A75E  22E2               	addwfc	fsr1h,f,c
 20243  01A760  0012               	return		;funcret
 20244  01A762                     __end_of___fleq:
 20245                           	opt callstack 0
 20246                           
 20247 ;; *************** function ___awmod *****************
 20248 ;; Defined at:
 20249 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 20250 ;; Parameters:    Size  Location     Type
 20251 ;;  dividend        2  [STACK] int 
 20252 ;;  divisor         2  [STACK] int 
 20253 ;; Auto vars:     Size  Location     Type
 20254 ;;  sign            1  [STACK] unsigned char 
 20255 ;;  counter         1  [STACK] unsigned char 
 20256 ;; Return value:  Size  Location     Type
 20257 ;;                  2  [STACK] int 
 20258 ;; Registers used:
 20259 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 20260 ;; Tracked objects:
 20261 ;;		On entry : 0/0
 20262 ;;		On exit  : 0/0
 20263 ;;		Unchanged: 0/0
 20264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20269 ;;Total ram usage:        0 bytes
 20270 ;; Hardware stack levels used:    1
 20271 ;; Hardware stack levels required when called:   15
 20272 ;; This function calls:
 20273 ;;		Nothing
 20274 ;; This function is called by:
 20275 ;;		_efgtoa
 20276 ;; This function uses a reentrant model
 20277 ;;
 20278                           
 20279                           	psect	text71
 20280  019C40                     __ptext71:
 20281                           	opt callstack 0
 20282  019C40                     ___awmod:
 20283                           	opt callstack 0
 20284                           
 20285                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20286  019C40  52E6               	movf	postinc1,f,c
 20287  019C42  52E6               	movf	postinc1,f,c
 20288                           
 20289                           ;stkvar	_sign @ sp[(-2)+0]
 20290                           
 20291                           ;incstack = 0
 20292 ;; hardware stack exceeded
 20293  019C44  0EFE               	movlw	-2
 20294  019C46  6AE3               	clrf	plusw1,c
 20295                           
 20296                           ;stkvar	_dividend @ sp[(-2)+-2]
 20297  019C48  0EFD               	movlw	-3
 20298  019C4A  AEE3               	btfss	plusw1,7,c
 20299  019C4C  D009               	goto	l8744
 20300                           
 20301                           ;stkvar	_dividend @ sp[(-2)+-2]
 20302                           ;stkvar	_dividend @ sp[(-2)+-2]
 20303  019C4E  0EFC               	movlw	-4
 20304  019C50  6CE3               	negf	plusw1,c
 20305  019C52  0EFD               	movlw	-3
 20306  019C54  1EE3               	comf	plusw1,f,c
 20307  019C56  B0D8               	btfsc	status,0,c
 20308  019C58  2AE3               	incf	plusw1,f,c
 20309                           
 20310                           ;stkvar	_sign @ sp[(-2)+0]
 20311  019C5A  0EFE               	movlw	-2
 20312  019C5C  6AE3               	clrf	plusw1,c
 20313  019C5E  2AE3               	incf	plusw1,f,c
 20314  019C60                     l8744:
 20315                           
 20316                           ;stkvar	_divisor @ sp[(-2)+-4]
 20317  019C60  0EFB               	movlw	-5
 20318  019C62  AEE3               	btfss	plusw1,7,c
 20319  019C64  D006               	goto	l8748
 20320                           
 20321                           ;stkvar	_divisor @ sp[(-2)+-4]
 20322                           ;stkvar	_divisor @ sp[(-2)+-4]
 20323  019C66  0EFA               	movlw	-6
 20324  019C68  6CE3               	negf	plusw1,c
 20325  019C6A  0EFB               	movlw	-5
 20326  019C6C  1EE3               	comf	plusw1,f,c
 20327  019C6E  B0D8               	btfsc	status,0,c
 20328  019C70  2AE3               	incf	plusw1,f,c
 20329  019C72                     l8748:
 20330                           
 20331                           ;stkvar	_divisor @ sp[(-2)+-4]
 20332  019C72  0EFA               	movlw	-6
 20333  019C74  006F FF8C  F001    	movff	plusw1,btemp
 20334  019C7A  0EFB               	movlw	-5
 20335  019C7C  50E3               	movf	plusw1,w,c
 20336  019C7E  1001               	iorwf	btemp^0,w,c
 20337  019C80  B4D8               	btfsc	status,2,c
 20338  019C82  D053               	goto	u7170
 20339                           
 20340                           ;stkvar	_counter @ sp[(-2)+1]
 20341  019C84  0EFF               	movlw	-1
 20342  019C86  6AE3               	clrf	plusw1,c
 20343  019C88  D012               	goto	L23
 20344  019C8A                     l8752:
 20345                           
 20346                           ;stkvar	_divisor @ sp[(-2)+-4]
 20347  019C8A  0EFA               	movlw	-6
 20348  019C8C  50E3               	movf	plusw1,w,c
 20349  019C8E  90D8               	bcf	status,0,c
 20350  019C90  34E8               	rlcf	wreg,w,c
 20351  019C92  6E01               	movwf	btemp^0,c
 20352  019C94  0EFA               	movlw	-6
 20353  019C96  0060  F007  FFE3   	movff	btemp,plusw1
 20354  019C9C  0EFB               	movlw	-5
 20355  019C9E  50E3               	movf	plusw1,w,c
 20356  019CA0  34E8               	rlcf	wreg,w,c
 20357  019CA2  6E01               	movwf	btemp^0,c
 20358  019CA4  0EFB               	movlw	-5
 20359  019CA6  0060  F007  FFE3   	movff	btemp,plusw1
 20360                           
 20361                           ;stkvar	_counter @ sp[(-2)+1]
 20362  019CAC  0EFF               	movlw	-1
 20363  019CAE                     L23:
 20364  019CAE  2AE3               	incf	plusw1,f,c
 20365                           
 20366                           ;stkvar	_divisor @ sp[(-2)+-4]
 20367  019CB0  0EFB               	movlw	-5
 20368  019CB2  AEE3               	btfss	plusw1,7,c
 20369  019CB4  D7EA               	goto	l8752
 20370  019CB6                     u7150:
 20371                           
 20372                           ;stkvar	_divisor @ sp[(-2)+-4]
 20373  019CB6  0EFA               	movlw	-6
 20374  019CB8  006F FF8C  F00B    	movff	plusw1,btemp+10
 20375  019CBE  0EFB               	movlw	-5
 20376  019CC0  006F FF8C  F00C    	movff	plusw1,btemp+11
 20377                           
 20378                           ;stkvar	_dividend @ sp[(-2)+-2]
 20379  019CC6  0EFC               	movlw	-4
 20380  019CC8  006F FF8C  F009    	movff	plusw1,btemp+8
 20381  019CCE  0EFD               	movlw	-3
 20382  019CD0  006F FF8C  F00A    	movff	plusw1,btemp+9
 20383  019CD6  500B               	movf	(btemp+10)^0,w,c
 20384  019CD8  5C09               	subwf	(btemp+8)^0,w,c
 20385  019CDA  500C               	movf	(btemp+11)^0,w,c
 20386  019CDC  580A               	subwfb	(btemp+9)^0,w,c
 20387  019CDE  A0D8               	btfss	status,0,c
 20388  019CE0  D014               	goto	l8762
 20389                           
 20390                           ;stkvar	_divisor @ sp[(-2)+-4]
 20391                           ;stkvar	_dividend @ sp[(-2)+-2]
 20392  019CE2  0EFC               	movlw	-4
 20393  019CE4  50E3               	movf	plusw1,w,c
 20394  019CE6  6E01               	movwf	btemp^0,c
 20395  019CE8  0EFA               	movlw	-6
 20396  019CEA  50E3               	movf	plusw1,w,c
 20397  019CEC  5E01               	subwf	btemp^0,f,c
 20398  019CEE  0EFC               	movlw	-4
 20399  019CF0  0060  F007  FFE3   	movff	btemp,plusw1
 20400  019CF6  0EFD               	movlw	-3
 20401  019CF8  50E3               	movf	plusw1,w,c
 20402  019CFA  6E01               	movwf	btemp^0,c
 20403  019CFC  0EFB               	movlw	-5
 20404  019CFE  50E3               	movf	plusw1,w,c
 20405  019D00  5A01               	subwfb	btemp^0,f,c
 20406  019D02  0EFD               	movlw	-3
 20407  019D04  0060  F007  FFE3   	movff	btemp,plusw1
 20408  019D0A                     l8762:
 20409                           
 20410                           ;stkvar	_divisor @ sp[(-2)+-4]
 20411  019D0A  90D8               	bcf	status,0,c
 20412  019D0C  0EFB               	movlw	-5
 20413  019D0E  32E3               	rrcf	plusw1,f,c
 20414  019D10  0EFA               	movlw	-6
 20415  019D12  32E3               	rrcf	plusw1,f,c
 20416                           
 20417                           ;stkvar	_counter @ sp[(-2)+1]
 20418  019D14  0EFF               	movlw	-1
 20419  019D16  50E3               	movf	plusw1,w,c
 20420  019D18  6E01               	movwf	btemp^0,c
 20421  019D1A  0E01               	movlw	1
 20422  019D1C  5E01               	subwf	btemp^0,f,c
 20423  019D1E  0EFF               	movlw	-1
 20424  019D20  0060  F007  FFE3   	movff	btemp,plusw1
 20425  019D26  A4D8               	btfss	status,2,c
 20426  019D28  D7C6               	goto	u7150
 20427  019D2A                     u7170:
 20428                           
 20429                           ;stkvar	_sign @ sp[(-2)+0]
 20430  019D2A  0EFE               	movlw	-2
 20431  019D2C  50E3               	movf	plusw1,w,c
 20432  019D2E  B4D8               	btfsc	status,2,c
 20433  019D30  D006               	goto	l8770
 20434                           
 20435                           ;stkvar	_dividend @ sp[(-2)+-2]
 20436                           ;stkvar	_dividend @ sp[(-2)+-2]
 20437  019D32  0EFC               	movlw	-4
 20438  019D34  6CE3               	negf	plusw1,c
 20439  019D36  0EFD               	movlw	-3
 20440  019D38  1EE3               	comf	plusw1,f,c
 20441  019D3A  B0D8               	btfsc	status,0,c
 20442  019D3C  2AE3               	incf	plusw1,f,c
 20443  019D3E                     l8770:
 20444                           
 20445                           ;stkvar	_dividend @ sp[(-2)+-2]
 20446  019D3E  0EFC               	movlw	-4
 20447  019D40  006F FF8C  F001    	movff	plusw1,btemp
 20448  019D46  0EFD               	movlw	-3
 20449  019D48  006F FF8C  F002    	movff	plusw1,btemp+1
 20450                           
 20451                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20452  019D4E  0EFA               	movlw	250
 20453  019D50  26E1               	addwf	fsr1l,f,c
 20454  019D52  0EFF               	movlw	255
 20455  019D54  22E2               	addwfc	fsr1h,f,c
 20456  019D56  0012               	return		;funcret
 20457  019D58                     __end_of___awmod:
 20458                           	opt callstack 0
 20459                           
 20460 ;; *************** function ___awdiv *****************
 20461 ;; Defined at:
 20462 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 20463 ;; Parameters:    Size  Location     Type
 20464 ;;  dividend        2  [STACK] int 
 20465 ;;  divisor         2  [STACK] int 
 20466 ;; Auto vars:     Size  Location     Type
 20467 ;;  quotient        2  [STACK] int 
 20468 ;;  sign            1  [STACK] unsigned char 
 20469 ;;  counter         1  [STACK] unsigned char 
 20470 ;; Return value:  Size  Location     Type
 20471 ;;                  2  [STACK] int 
 20472 ;; Registers used:
 20473 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 20474 ;; Tracked objects:
 20475 ;;		On entry : 0/0
 20476 ;;		On exit  : 0/0
 20477 ;;		Unchanged: 0/0
 20478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20483 ;;Total ram usage:        0 bytes
 20484 ;; Hardware stack levels used:    1
 20485 ;; Hardware stack levels required when called:   15
 20486 ;; This function calls:
 20487 ;;		Nothing
 20488 ;; This function is called by:
 20489 ;;		_efgtoa
 20490 ;; This function uses a reentrant model
 20491 ;;
 20492                           
 20493                           	psect	text72
 20494  019512                     __ptext72:
 20495                           	opt callstack 0
 20496  019512                     ___awdiv:
 20497                           	opt callstack 0
 20498                           
 20499                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20500  019512  52E6               	movf	postinc1,f,c
 20501  019514  52E6               	movf	postinc1,f,c
 20502  019516  52E6               	movf	postinc1,f,c
 20503  019518  52E6               	movf	postinc1,f,c
 20504                           
 20505                           ;stkvar	_sign @ sp[(-4)+2]
 20506                           
 20507                           ;incstack = 0
 20508 ;; hardware stack exceeded
 20509  01951A  0EFE               	movlw	-2
 20510  01951C  6AE3               	clrf	plusw1,c
 20511                           
 20512                           ;stkvar	_divisor @ sp[(-4)+-4]
 20513  01951E  0EF9               	movlw	-7
 20514  019520  AEE3               	btfss	plusw1,7,c
 20515  019522  D009               	goto	l8698
 20516                           
 20517                           ;stkvar	_divisor @ sp[(-4)+-4]
 20518                           ;stkvar	_divisor @ sp[(-4)+-4]
 20519  019524  0EF8               	movlw	-8
 20520  019526  6CE3               	negf	plusw1,c
 20521  019528  0EF9               	movlw	-7
 20522  01952A  1EE3               	comf	plusw1,f,c
 20523  01952C  B0D8               	btfsc	status,0,c
 20524  01952E  2AE3               	incf	plusw1,f,c
 20525                           
 20526                           ;stkvar	_sign @ sp[(-4)+2]
 20527  019530  0EFE               	movlw	-2
 20528  019532  6AE3               	clrf	plusw1,c
 20529  019534  2AE3               	incf	plusw1,f,c
 20530  019536                     l8698:
 20531                           
 20532                           ;stkvar	_dividend @ sp[(-4)+-2]
 20533  019536  0EFB               	movlw	-5
 20534  019538  AEE3               	btfss	plusw1,7,c
 20535  01953A  D008               	goto	l8704
 20536                           
 20537                           ;stkvar	_dividend @ sp[(-4)+-2]
 20538                           ;stkvar	_dividend @ sp[(-4)+-2]
 20539  01953C  0EFA               	movlw	-6
 20540  01953E  6CE3               	negf	plusw1,c
 20541  019540  0EFB               	movlw	-5
 20542  019542  1EE3               	comf	plusw1,f,c
 20543  019544  B0D8               	btfsc	status,0,c
 20544  019546  2AE3               	incf	plusw1,f,c
 20545                           
 20546                           ;stkvar	_sign @ sp[(-4)+2]
 20547  019548  0EFE               	movlw	-2
 20548  01954A  70E3               	btg	plusw1,0,c
 20549  01954C                     l8704:
 20550                           
 20551                           ;stkvar	_quotient @ sp[(-4)+0]
 20552  01954C  0EFC               	movlw	-4
 20553  01954E  6AE3               	clrf	plusw1,c
 20554  019550  0EFD               	movlw	-3
 20555  019552  6AE3               	clrf	plusw1,c
 20556                           
 20557                           ;stkvar	_divisor @ sp[(-4)+-4]
 20558  019554  0EF8               	movlw	-8
 20559  019556  006F FF8C  F001    	movff	plusw1,btemp
 20560  01955C  0EF9               	movlw	-7
 20561  01955E  50E3               	movf	plusw1,w,c
 20562  019560  1001               	iorwf	btemp^0,w,c
 20563  019562  B4D8               	btfsc	status,2,c
 20564  019564  D066               	goto	u7100
 20565                           
 20566                           ;stkvar	_counter @ sp[(-4)+3]
 20567  019566  0EFF               	movlw	-1
 20568  019568  6AE3               	clrf	plusw1,c
 20569  01956A  D012               	goto	L24
 20570  01956C                     l8710:
 20571                           
 20572                           ;stkvar	_divisor @ sp[(-4)+-4]
 20573  01956C  0EF8               	movlw	-8
 20574  01956E  50E3               	movf	plusw1,w,c
 20575  019570  90D8               	bcf	status,0,c
 20576  019572  34E8               	rlcf	wreg,w,c
 20577  019574  6E01               	movwf	btemp^0,c
 20578  019576  0EF8               	movlw	-8
 20579  019578  0060  F007  FFE3   	movff	btemp,plusw1
 20580  01957E  0EF9               	movlw	-7
 20581  019580  50E3               	movf	plusw1,w,c
 20582  019582  34E8               	rlcf	wreg,w,c
 20583  019584  6E01               	movwf	btemp^0,c
 20584  019586  0EF9               	movlw	-7
 20585  019588  0060  F007  FFE3   	movff	btemp,plusw1
 20586                           
 20587                           ;stkvar	_counter @ sp[(-4)+3]
 20588  01958E  0EFF               	movlw	-1
 20589  019590                     L24:
 20590  019590  2AE3               	incf	plusw1,f,c
 20591                           
 20592                           ;stkvar	_divisor @ sp[(-4)+-4]
 20593  019592  0EF9               	movlw	-7
 20594  019594  AEE3               	btfss	plusw1,7,c
 20595  019596  D7EA               	goto	l8710
 20596  019598                     u7080:
 20597                           
 20598                           ;stkvar	_quotient @ sp[(-4)+0]
 20599  019598  0EFC               	movlw	-4
 20600  01959A  50E3               	movf	plusw1,w,c
 20601  01959C  90D8               	bcf	status,0,c
 20602  01959E  34E8               	rlcf	wreg,w,c
 20603  0195A0  6E01               	movwf	btemp^0,c
 20604  0195A2  0EFC               	movlw	-4
 20605  0195A4  0060  F007  FFE3   	movff	btemp,plusw1
 20606  0195AA  0EFD               	movlw	-3
 20607  0195AC  50E3               	movf	plusw1,w,c
 20608  0195AE  34E8               	rlcf	wreg,w,c
 20609  0195B0  6E01               	movwf	btemp^0,c
 20610  0195B2  0EFD               	movlw	-3
 20611  0195B4  0060  F007  FFE3   	movff	btemp,plusw1
 20612                           
 20613                           ;stkvar	_divisor @ sp[(-4)+-4]
 20614  0195BA  0EF8               	movlw	-8
 20615  0195BC  006F FF8C  F00B    	movff	plusw1,btemp+10
 20616  0195C2  0EF9               	movlw	-7
 20617  0195C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 20618                           
 20619                           ;stkvar	_dividend @ sp[(-4)+-2]
 20620  0195CA  0EFA               	movlw	-6
 20621  0195CC  006F FF8C  F009    	movff	plusw1,btemp+8
 20622  0195D2  0EFB               	movlw	-5
 20623  0195D4  006F FF8C  F00A    	movff	plusw1,btemp+9
 20624  0195DA  500B               	movf	(btemp+10)^0,w,c
 20625  0195DC  5C09               	subwf	(btemp+8)^0,w,c
 20626  0195DE  500C               	movf	(btemp+11)^0,w,c
 20627  0195E0  580A               	subwfb	(btemp+9)^0,w,c
 20628  0195E2  A0D8               	btfss	status,0,c
 20629  0195E4  D016               	goto	l8724
 20630                           
 20631                           ;stkvar	_divisor @ sp[(-4)+-4]
 20632                           ;stkvar	_dividend @ sp[(-4)+-2]
 20633  0195E6  0EFA               	movlw	-6
 20634  0195E8  50E3               	movf	plusw1,w,c
 20635  0195EA  6E01               	movwf	btemp^0,c
 20636  0195EC  0EF8               	movlw	-8
 20637  0195EE  50E3               	movf	plusw1,w,c
 20638  0195F0  5E01               	subwf	btemp^0,f,c
 20639  0195F2  0EFA               	movlw	-6
 20640  0195F4  0060  F007  FFE3   	movff	btemp,plusw1
 20641  0195FA  0EFB               	movlw	-5
 20642  0195FC  50E3               	movf	plusw1,w,c
 20643  0195FE  6E01               	movwf	btemp^0,c
 20644  019600  0EF9               	movlw	-7
 20645  019602  50E3               	movf	plusw1,w,c
 20646  019604  5A01               	subwfb	btemp^0,f,c
 20647  019606  0EFB               	movlw	-5
 20648  019608  0060  F007  FFE3   	movff	btemp,plusw1
 20649                           
 20650                           ;stkvar	_quotient @ sp[(-4)+0]
 20651  01960E  0EFC               	movlw	-4
 20652  019610  80E3               	bsf	plusw1,0,c
 20653  019612                     l8724:
 20654                           
 20655                           ;stkvar	_divisor @ sp[(-4)+-4]
 20656  019612  90D8               	bcf	status,0,c
 20657  019614  0EF9               	movlw	-7
 20658  019616  32E3               	rrcf	plusw1,f,c
 20659  019618  0EF8               	movlw	-8
 20660  01961A  32E3               	rrcf	plusw1,f,c
 20661                           
 20662                           ;stkvar	_counter @ sp[(-4)+3]
 20663  01961C  0EFF               	movlw	-1
 20664  01961E  50E3               	movf	plusw1,w,c
 20665  019620  6E01               	movwf	btemp^0,c
 20666  019622  0E01               	movlw	1
 20667  019624  5E01               	subwf	btemp^0,f,c
 20668  019626  0EFF               	movlw	-1
 20669  019628  0060  F007  FFE3   	movff	btemp,plusw1
 20670  01962E  A4D8               	btfss	status,2,c
 20671  019630  D7B3               	goto	u7080
 20672  019632                     u7100:
 20673                           
 20674                           ;stkvar	_sign @ sp[(-4)+2]
 20675  019632  0EFE               	movlw	-2
 20676  019634  50E3               	movf	plusw1,w,c
 20677  019636  B4D8               	btfsc	status,2,c
 20678  019638  D006               	goto	l8732
 20679                           
 20680                           ;stkvar	_quotient @ sp[(-4)+0]
 20681                           ;stkvar	_quotient @ sp[(-4)+0]
 20682  01963A  0EFC               	movlw	-4
 20683  01963C  6CE3               	negf	plusw1,c
 20684  01963E  0EFD               	movlw	-3
 20685  019640  1EE3               	comf	plusw1,f,c
 20686  019642  B0D8               	btfsc	status,0,c
 20687  019644  2AE3               	incf	plusw1,f,c
 20688  019646                     l8732:
 20689                           
 20690                           ;stkvar	_quotient @ sp[(-4)+0]
 20691  019646  0EFC               	movlw	-4
 20692  019648  006F FF8C  F001    	movff	plusw1,btemp
 20693  01964E  0EFD               	movlw	-3
 20694  019650  006F FF8C  F002    	movff	plusw1,btemp+1
 20695                           
 20696                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20697  019656  0EF8               	movlw	248
 20698  019658  26E1               	addwf	fsr1l,f,c
 20699  01965A  0EFF               	movlw	255
 20700  01965C  22E2               	addwfc	fsr1h,f,c
 20701  01965E  0012               	return		;funcret
 20702  019660                     __end_of___awdiv:
 20703                           	opt callstack 0
 20704                           
 20705 ;; *************** function _dtoa *****************
 20706 ;; Defined at:
 20707 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20708 ;; Parameters:    Size  Location     Type
 20709 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20710 ;;		 -> f(6), NULL(0), 
 20711 ;;  d               8  [STACK] long long 
 20712 ;; Auto vars:     Size  Location     Type
 20713 ;;  n               8  [STACK] long long 
 20714 ;;  i               2  [STACK] int 
 20715 ;;  s               2  [STACK] int 
 20716 ;;  w               2  [STACK] int 
 20717 ;;  p               2  [STACK] int 
 20718 ;; Return value:  Size  Location     Type
 20719 ;;                  2  [STACK] int 
 20720 ;; Registers used:
 20721 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 20722 ;; Tracked objects:
 20723 ;;		On entry : 0/0
 20724 ;;		On exit  : 0/0
 20725 ;;		Unchanged: 0/0
 20726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20731 ;;Total ram usage:        0 bytes
 20732 ;; Hardware stack levels used:    1
 20733 ;; Hardware stack levels required when called:   20
 20734 ;; This function calls:
 20735 ;;		___aodiv
 20736 ;;		___aomod
 20737 ;;		_abs
 20738 ;;		_pad
 20739 ;; This function is called by:
 20740 ;;		_vfpfcnvrt
 20741 ;; This function uses a reentrant model
 20742 ;;
 20743                           
 20744                           	psect	text73
 20745  015876                     __ptext73:
 20746                           	opt callstack 0
 20747  015876                     _dtoa:
 20748                           	opt callstack 0
 20749                           
 20750                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 20751  015876  0E12               	movlw	18
 20752  015878  26E1               	addwf	fsr1l,f,c
 20753  01587A  0E00               	movlw	0
 20754  01587C  22E2               	addwfc	fsr1h,f,c
 20755                           
 20756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 20757                           ;stkvar	_d @ sp[(-18)+-10]
 20758                           
 20759                           ;incstack = 0
 20760 ;; hardware stack exceeded
 20761  01587E  0EE4               	movlw	228
 20762  015880  24E1               	addwf	fsr1l,w,c
 20763  015882  6ED9               	movwf	fsr2l,c
 20764  015884  0EFF               	movlw	255
 20765  015886  20E2               	addwfc	fsr1h,w,c
 20766  015888  6EDA               	movwf	fsr2h,c
 20767                           
 20768                           ;stkvar	_n @ sp[(-18)+2]
 20769  01588A  0E08               	movlw	8
 20770  01588C  6E01               	movwf	btemp^0,c
 20771  01588E  0EF0               	movlw	-16
 20772  015890                     us1104999:
 20773  015890  006F FF7B FFE3     	movff	postinc2,plusw1
 20774  015896  28E8               	incf	wreg,w,c
 20775  015898  2E01               	decfsz	btemp^0,f,c
 20776  01589A  D7FA               	bra	us1104999
 20777                           
 20778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 20779                           ;stkvar	_n @ sp[(-18)+2]
 20780  01589C  0EF7               	movlw	-9
 20781  01589E  AEE3               	btfss	plusw1,7,c
 20782  0158A0  D002               	goto	u11050
 20783  0158A2  0E01               	movlw	1
 20784  0158A4  D001               	goto	u11060
 20785  0158A6                     u11050:
 20786  0158A6  0E00               	movlw	0
 20787  0158A8                     u11060:
 20788  0158A8  6E0B               	movwf	(btemp+10)^0,c
 20789  0158AA  6A0C               	clrf	(btemp+11)^0,c
 20790                           
 20791                           ;stkvar	_s @ sp[(-18)+12]
 20792  0158AC  0EFA               	movlw	-6
 20793  0158AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20794  0158B4  0EFB               	movlw	-5
 20795  0158B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 20796                           
 20797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 20798                           ;stkvar	_s @ sp[(-18)+12]
 20799  0158BC  0EFA               	movlw	-6
 20800  0158BE  006F FF8C  F001    	movff	plusw1,btemp
 20801  0158C4  0EFB               	movlw	-5
 20802  0158C6  50E3               	movf	plusw1,w,c
 20803  0158C8  1001               	iorwf	btemp^0,w,c
 20804  0158CA  B4D8               	btfsc	status,2,c
 20805  0158CC  D025               	goto	u11080
 20806                           
 20807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 20808                           ;stkvar	_n @ sp[(-18)+2]
 20809                           ;stkvar	_n @ sp[(-18)+2]
 20810  0158CE  0EF0               	movlw	-16
 20811  0158D0  6CE3               	negf	plusw1,c
 20812  0158D2  0EF1               	movlw	-15
 20813  0158D4  1EE3               	comf	plusw1,f,c
 20814  0158D6  0EF2               	movlw	-14
 20815  0158D8  1EE3               	comf	plusw1,f,c
 20816  0158DA  0EF3               	movlw	-13
 20817  0158DC  1EE3               	comf	plusw1,f,c
 20818  0158DE  0EF4               	movlw	-12
 20819  0158E0  1EE3               	comf	plusw1,f,c
 20820  0158E2  0EF5               	movlw	-11
 20821  0158E4  1EE3               	comf	plusw1,f,c
 20822  0158E6  0EF6               	movlw	-10
 20823  0158E8  1EE3               	comf	plusw1,f,c
 20824  0158EA  0EF7               	movlw	-9
 20825  0158EC  1EE3               	comf	plusw1,f,c
 20826  0158EE  E314               	bnc	u11080
 20827  0158F0  0EF1               	movlw	-15
 20828  0158F2  2AE3               	incf	plusw1,f,c
 20829  0158F4  E311               	bnc	u11080
 20830  0158F6  0EF2               	movlw	-14
 20831  0158F8  2AE3               	incf	plusw1,f,c
 20832  0158FA  E30E               	bnc	u11080
 20833  0158FC  0EF3               	movlw	-13
 20834  0158FE  2AE3               	incf	plusw1,f,c
 20835  015900  E30B               	bnc	u11080
 20836  015902  0EF4               	movlw	-12
 20837  015904  2AE3               	incf	plusw1,f,c
 20838  015906  E308               	bnc	u11080
 20839  015908  0EF5               	movlw	-11
 20840  01590A  2AE3               	incf	plusw1,f,c
 20841  01590C  E305               	bnc	u11080
 20842  01590E  0EF6               	movlw	-10
 20843  015910  2AE3               	incf	plusw1,f,c
 20844  015912  E302               	bnc	u11080
 20845  015914  0EF7               	movlw	-9
 20846  015916  2AE3               	incf	plusw1,f,c
 20847  015918                     u11080:
 20848                           
 20849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 20850  015918  AE3D               	btfss	(_prec+1)^0,7,c
 20851                           
 20852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 20853  01591A  923E               	bcf	_flags^0,1,c
 20854                           
 20855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 20856  01591C  BE3D               	btfsc	(_prec+1)^0,7,c
 20857  01591E  D005               	goto	u11100
 20858  015920  503D               	movf	(_prec+1)^0,w,c
 20859  015922  E110               	bnz	l12226
 20860  015924  043C               	decf	_prec^0,w,c
 20861  015926  B0D8               	btfsc	status,0,c
 20862  015928  D00D               	goto	l12226
 20863  01592A                     u11100:
 20864  01592A  0E01               	movlw	1
 20865  01592C  6E0B               	movwf	(btemp+10)^0,c
 20866  01592E  0E00               	movlw	0
 20867  015930  6E0C               	movwf	(btemp+11)^0,c
 20868                           
 20869                           ;stkvar	_p @ sp[(-18)+16]
 20870  015932  0EFE               	movlw	-2
 20871  015934  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20872  01593A  0EFF               	movlw	-1
 20873  01593C  0060  F033  FFE3   	movff	btemp+11,plusw1
 20874  015942  D008               	goto	l2244
 20875  015944                     l12226:
 20876                           
 20877                           ;stkvar	_p @ sp[(-18)+16]
 20878  015944  0EFE               	movlw	-2
 20879  015946  0060  F0F3  FFE3   	movff	_prec,plusw1
 20880  01594C  0EFF               	movlw	-1
 20881  01594E  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 20882  015954                     l2244:
 20883                           
 20884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 20885                           ;stkvar	_w @ sp[(-18)+14]
 20886  015954  0EFC               	movlw	-4
 20887  015956  0060  F0EB  FFE3   	movff	_width,plusw1
 20888  01595C  0EFD               	movlw	-3
 20889  01595E  0060  F0EF  FFE3   	movff	_width+1,plusw1
 20890                           
 20891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 20892                           ;stkvar	_s @ sp[(-18)+12]
 20893  015964  0EFA               	movlw	-6
 20894  015966  006F FF8C  F001    	movff	plusw1,btemp
 20895  01596C  0EFB               	movlw	-5
 20896  01596E  50E3               	movf	plusw1,w,c
 20897  015970  1001               	iorwf	btemp^0,w,c
 20898  015972  A4D8               	btfss	status,2,c
 20899  015974  D002               	goto	u11120
 20900  015976  A43E               	btfss	_flags^0,2,c
 20901  015978  D00A               	goto	l12234
 20902  01597A                     u11120:
 20903                           
 20904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 20905                           ;stkvar	_w @ sp[(-18)+14]
 20906  01597A  50E1               	movf	fsr1l,w,c
 20907  01597C  0FFC               	addlw	-4
 20908  01597E  6ED9               	movwf	fsr2l,c
 20909  015980  50E2               	movf	fsr1h,w,c
 20910  015982  6EDA               	movwf	fsr2h,c
 20911  015984  0EFF               	movlw	255
 20912  015986  22DA               	addwfc	fsr2h,f,c
 20913  015988  06DE               	decf	postinc2,f,c
 20914  01598A  0E00               	movlw	0
 20915  01598C  5ADD               	subwfb	postdec2,f,c
 20916  01598E                     l12234:
 20917                           
 20918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 20919  01598E  0E4F               	movlw	79
 20920  015990  6E0B               	movwf	(btemp+10)^0,c
 20921  015992  0E00               	movlw	0
 20922  015994  6E0C               	movwf	(btemp+11)^0,c
 20923                           
 20924                           ;stkvar	_i @ sp[(-18)+10]
 20925  015996  0EF8               	movlw	-8
 20926  015998  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20927  01599E  0EF9               	movlw	-7
 20928  0159A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 20929                           
 20930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 20931  0159A6  0102               	movlb	2	; () banked
 20932  0159A8  6BE6               	clrf	(_dbuf+79)& (0+255),b
 20933                           
 20934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20935  0159AA  D109               	goto	l12248
 20936  0159AC                     l12238:
 20937                           
 20938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 20939                           ;stkvar	_i @ sp[(-18)+10]
 20940  0159AC  50E1               	movf	fsr1l,w,c
 20941  0159AE  0FF8               	addlw	-8
 20942  0159B0  6ED9               	movwf	fsr2l,c
 20943  0159B2  50E2               	movf	fsr1h,w,c
 20944  0159B4  6EDA               	movwf	fsr2h,c
 20945  0159B6  0EFF               	movlw	255
 20946  0159B8  22DA               	addwfc	fsr2h,f,c
 20947  0159BA  06DE               	decf	postinc2,f,c
 20948  0159BC  0E00               	movlw	0
 20949  0159BE  5ADD               	subwfb	postdec2,f,c
 20950                           
 20951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 20952  0159C0  0E0A               	movlw	10
 20953  0159C2  6EE6               	movwf	postinc1,c
 20954  0159C4  0E00               	movlw	0
 20955  0159C6  6EE6               	movwf	postinc1,c
 20956  0159C8  0E00               	movlw	0
 20957  0159CA  6EE6               	movwf	postinc1,c
 20958  0159CC  0E00               	movlw	0
 20959  0159CE  6EE6               	movwf	postinc1,c
 20960  0159D0  0E00               	movlw	0
 20961  0159D2  6EE6               	movwf	postinc1,c
 20962  0159D4  0E00               	movlw	0
 20963  0159D6  6EE6               	movwf	postinc1,c
 20964  0159D8  0E00               	movlw	0
 20965  0159DA  6EE6               	movwf	postinc1,c
 20966  0159DC  0E00               	movlw	0
 20967  0159DE  6EE6               	movwf	postinc1,c
 20968                           
 20969                           ;stkvar	_n @ sp[(-26)+2]
 20970  0159E0  50E1               	movf	fsr1l,w,c
 20971  0159E2  0FE8               	addlw	-24
 20972  0159E4  6ED9               	movwf	fsr2l,c
 20973  0159E6  50E2               	movf	fsr1h,w,c
 20974  0159E8  6EDA               	movwf	fsr2h,c
 20975  0159EA  0EFF               	movlw	255
 20976  0159EC  22DA               	addwfc	fsr2h,f,c
 20977  0159EE  006F FF7B FFE6     	movff	postinc2,postinc1
 20978  0159F4  006F FF7B FFE6     	movff	postinc2,postinc1
 20979  0159FA  006F FF7B FFE6     	movff	postinc2,postinc1
 20980  015A00  006F FF7B FFE6     	movff	postinc2,postinc1
 20981  015A06  006F FF7B FFE6     	movff	postinc2,postinc1
 20982  015A0C  006F FF7B FFE6     	movff	postinc2,postinc1
 20983  015A12  006F FF7B FFE6     	movff	postinc2,postinc1
 20984  015A18  006F FF7B FFE6     	movff	postinc2,postinc1
 20985  015A1E  EC48  F0BF         	call	___aomod	;wreg free
 20986  015A22  52E5               	movf	postdec1,f,c
 20987  015A24  006F FF9C  F018    	movff	indf1,btemp+23
 20988  015A2A  52E5               	movf	postdec1,f,c
 20989  015A2C  006F FF9C  F017    	movff	indf1,btemp+22
 20990  015A32  52E5               	movf	postdec1,f,c
 20991  015A34  006F FF9C  F016    	movff	indf1,btemp+21
 20992  015A3A  52E5               	movf	postdec1,f,c
 20993  015A3C  006F FF9C  F015    	movff	indf1,btemp+20
 20994  015A42  52E5               	movf	postdec1,f,c
 20995  015A44  006F FF9C  F014    	movff	indf1,btemp+19
 20996  015A4A  52E5               	movf	postdec1,f,c
 20997  015A4C  006F FF9C  F013    	movff	indf1,btemp+18
 20998  015A52  52E5               	movf	postdec1,f,c
 20999  015A54  006F FF9C  F012    	movff	indf1,btemp+17
 21000  015A5A  52E5               	movf	postdec1,f,c
 21001  015A5C  006F FF9C  F011    	movff	indf1,btemp+16
 21002  015A62  0EF8               	movlw	248
 21003  015A64  26E1               	addwf	fsr1l,f,c
 21004  015A66  0EFF               	movlw	255
 21005  015A68  22E2               	addwfc	fsr1h,f,c
 21006  015A6A  0060  F044  F00B   	movff	btemp+16,btemp+10
 21007  015A70  0060  F048  F00C   	movff	btemp+17,btemp+11
 21008  015A76  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21009  015A7C  0060  F033  FFE6   	movff	btemp+11,postinc1
 21010  015A82  ECE9  F0DC         	call	_abs	;wreg free
 21011  015A86  0E30               	movlw	48
 21012  015A88  2601               	addwf	btemp^0,f,c
 21013                           
 21014                           ;stkvar	_i @ sp[(-18)+10]
 21015  015A8A  0EF8               	movlw	-8
 21016  015A8C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21017  015A92  0EF9               	movlw	-7
 21018  015A94  006F FF8C  F00C    	movff	plusw1,btemp+11
 21019  015A9A  0E97               	movlw	low _dbuf
 21020  015A9C  240B               	addwf	(btemp+10)^0,w,c
 21021  015A9E  6ED9               	movwf	fsr2l,c
 21022  015AA0  0E02               	movlw	high _dbuf
 21023  015AA2  200C               	addwfc	(btemp+11)^0,w,c
 21024  015AA4  6EDA               	movwf	fsr2h,c
 21025  015AA6  0060  F007  FFDF   	movff	btemp,indf2
 21026                           
 21027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 21028                           ;stkvar	_p @ sp[(-18)+16]
 21029  015AAC  50E1               	movf	fsr1l,w,c
 21030  015AAE  0FFE               	addlw	-2
 21031  015AB0  6ED9               	movwf	fsr2l,c
 21032  015AB2  50E2               	movf	fsr1h,w,c
 21033  015AB4  6EDA               	movwf	fsr2h,c
 21034  015AB6  0EFF               	movlw	255
 21035  015AB8  22DA               	addwfc	fsr2h,f,c
 21036  015ABA  06DE               	decf	postinc2,f,c
 21037  015ABC  0E00               	movlw	0
 21038  015ABE  5ADD               	subwfb	postdec2,f,c
 21039                           
 21040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 21041                           ;stkvar	_w @ sp[(-18)+14]
 21042  015AC0  50E1               	movf	fsr1l,w,c
 21043  015AC2  0FFC               	addlw	-4
 21044  015AC4  6ED9               	movwf	fsr2l,c
 21045  015AC6  50E2               	movf	fsr1h,w,c
 21046  015AC8  6EDA               	movwf	fsr2h,c
 21047  015ACA  0EFF               	movlw	255
 21048  015ACC  22DA               	addwfc	fsr2h,f,c
 21049  015ACE  06DE               	decf	postinc2,f,c
 21050  015AD0  0E00               	movlw	0
 21051  015AD2  5ADD               	subwfb	postdec2,f,c
 21052                           
 21053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 21054  015AD4  0E0A               	movlw	10
 21055  015AD6  6EE6               	movwf	postinc1,c
 21056  015AD8  0E00               	movlw	0
 21057  015ADA  6EE6               	movwf	postinc1,c
 21058  015ADC  0E00               	movlw	0
 21059  015ADE  6EE6               	movwf	postinc1,c
 21060  015AE0  0E00               	movlw	0
 21061  015AE2  6EE6               	movwf	postinc1,c
 21062  015AE4  0E00               	movlw	0
 21063  015AE6  6EE6               	movwf	postinc1,c
 21064  015AE8  0E00               	movlw	0
 21065  015AEA  6EE6               	movwf	postinc1,c
 21066  015AEC  0E00               	movlw	0
 21067  015AEE  6EE6               	movwf	postinc1,c
 21068  015AF0  0E00               	movlw	0
 21069  015AF2  6EE6               	movwf	postinc1,c
 21070                           
 21071                           ;stkvar	_n @ sp[(-26)+2]
 21072  015AF4  50E1               	movf	fsr1l,w,c
 21073  015AF6  0FE8               	addlw	-24
 21074  015AF8  6ED9               	movwf	fsr2l,c
 21075  015AFA  50E2               	movf	fsr1h,w,c
 21076  015AFC  6EDA               	movwf	fsr2h,c
 21077  015AFE  0EFF               	movlw	255
 21078  015B00  22DA               	addwfc	fsr2h,f,c
 21079  015B02  006F FF7B FFE6     	movff	postinc2,postinc1
 21080  015B08  006F FF7B FFE6     	movff	postinc2,postinc1
 21081  015B0E  006F FF7B FFE6     	movff	postinc2,postinc1
 21082  015B14  006F FF7B FFE6     	movff	postinc2,postinc1
 21083  015B1A  006F FF7B FFE6     	movff	postinc2,postinc1
 21084  015B20  006F FF7B FFE6     	movff	postinc2,postinc1
 21085  015B26  006F FF7B FFE6     	movff	postinc2,postinc1
 21086  015B2C  006F FF7B FFE6     	movff	postinc2,postinc1
 21087  015B32  ECAB  F0BB         	call	___aodiv	;wreg free
 21088  015B36  52E5               	movf	postdec1,f,c
 21089  015B38  006F FF9C  F018    	movff	indf1,btemp+23
 21090  015B3E  52E5               	movf	postdec1,f,c
 21091  015B40  006F FF9C  F017    	movff	indf1,btemp+22
 21092  015B46  52E5               	movf	postdec1,f,c
 21093  015B48  006F FF9C  F016    	movff	indf1,btemp+21
 21094  015B4E  52E5               	movf	postdec1,f,c
 21095  015B50  006F FF9C  F015    	movff	indf1,btemp+20
 21096  015B56  52E5               	movf	postdec1,f,c
 21097  015B58  006F FF9C  F014    	movff	indf1,btemp+19
 21098  015B5E  52E5               	movf	postdec1,f,c
 21099  015B60  006F FF9C  F013    	movff	indf1,btemp+18
 21100  015B66  52E5               	movf	postdec1,f,c
 21101  015B68  006F FF9C  F012    	movff	indf1,btemp+17
 21102  015B6E  52E5               	movf	postdec1,f,c
 21103  015B70  006F FF9C  F011    	movff	indf1,btemp+16
 21104  015B76  0EF8               	movlw	248
 21105  015B78  26E1               	addwf	fsr1l,f,c
 21106  015B7A  0EFF               	movlw	255
 21107  015B7C  22E2               	addwfc	fsr1h,f,c
 21108                           
 21109                           ;stkvar	_n @ sp[(-18)+2]
 21110  015B7E  0EF0               	movlw	-16
 21111  015B80  0060  F047  FFE3   	movff	btemp+16,plusw1
 21112  015B86  0EF1               	movlw	-15
 21113  015B88  0060  F04B  FFE3   	movff	btemp+17,plusw1
 21114  015B8E  0EF2               	movlw	-14
 21115  015B90  0060  F04F  FFE3   	movff	btemp+18,plusw1
 21116  015B96  0EF3               	movlw	-13
 21117  015B98  0060  F053  FFE3   	movff	btemp+19,plusw1
 21118  015B9E  0EF4               	movlw	-12
 21119  015BA0  0060  F057  FFE3   	movff	btemp+20,plusw1
 21120  015BA6  0EF5               	movlw	-11
 21121  015BA8  0060  F05B  FFE3   	movff	btemp+21,plusw1
 21122  015BAE  0EF6               	movlw	-10
 21123  015BB0  0060  F05F  FFE3   	movff	btemp+22,plusw1
 21124  015BB6  0EF7               	movlw	-9
 21125  015BB8  0060  F063  FFE3   	movff	btemp+23,plusw1
 21126  015BBE                     l12248:
 21127                           
 21128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21129                           ;stkvar	_i @ sp[(-18)+10]
 21130  015BBE  0EF9               	movlw	-7
 21131  015BC0  BEE3               	btfsc	plusw1,7,c
 21132  015BC2  D036               	goto	u11170
 21133  015BC4  0EF9               	movlw	-7
 21134  015BC6  50E3               	movf	plusw1,w,c
 21135  015BC8  E104               	bnz	u11130
 21136  015BCA  0EF8               	movlw	-8
 21137  015BCC  04E3               	decf	plusw1,w,c
 21138  015BCE  A0D8               	btfss	status,0,c
 21139  015BD0  D02F               	goto	u11170
 21140  015BD2                     u11130:
 21141                           
 21142                           ;stkvar	_n @ sp[(-18)+2]
 21143  015BD2  0EF0               	movlw	-16
 21144  015BD4  50E3               	movf	plusw1,w,c
 21145  015BD6  E115               	bnz	u11141
 21146  015BD8  0EF1               	movlw	-15
 21147  015BDA  50E3               	movf	plusw1,w,c
 21148  015BDC  E112               	bnz	u11141
 21149  015BDE  0EF2               	movlw	-14
 21150  015BE0  50E3               	movf	plusw1,w,c
 21151  015BE2  E10F               	bnz	u11141
 21152  015BE4  0EF3               	movlw	-13
 21153  015BE6  50E3               	movf	plusw1,w,c
 21154  015BE8  E10C               	bnz	u11141
 21155  015BEA  0EF4               	movlw	-12
 21156  015BEC  50E3               	movf	plusw1,w,c
 21157  015BEE  E109               	bnz	u11141
 21158  015BF0  0EF5               	movlw	-11
 21159  015BF2  50E3               	movf	plusw1,w,c
 21160  015BF4  E106               	bnz	u11141
 21161  015BF6  0EF6               	movlw	-10
 21162  015BF8  50E3               	movf	plusw1,w,c
 21163  015BFA  E103               	bnz	u11141
 21164  015BFC  0EF7               	movlw	-9
 21165  015BFE  50E3               	movf	plusw1,w,c
 21166  015C00  A4D8               	btfss	status,2,c
 21167  015C02                     u11141:
 21168  015C02  D6D4               	goto	l12238
 21169                           
 21170                           ;stkvar	_p @ sp[(-18)+16]
 21171  015C04  0EFF               	movlw	-1
 21172  015C06  BEE3               	btfsc	plusw1,7,c
 21173  015C08  D007               	goto	u11150
 21174  015C0A  0EFF               	movlw	-1
 21175  015C0C  50E3               	movf	plusw1,w,c
 21176  015C0E  E103               	bnz	u11151
 21177  015C10  0EFE               	movlw	-2
 21178  015C12  04E3               	decf	plusw1,w,c
 21179  015C14  B0D8               	btfsc	status,0,c
 21180  015C16                     u11151:
 21181  015C16  D6CA               	goto	l12238
 21182  015C18                     u11150:
 21183                           
 21184                           ;stkvar	_w @ sp[(-18)+14]
 21185  015C18  0EFD               	movlw	-3
 21186  015C1A  BEE3               	btfsc	plusw1,7,c
 21187  015C1C  D009               	goto	u11170
 21188  015C1E  0EFD               	movlw	-3
 21189  015C20  50E3               	movf	plusw1,w,c
 21190  015C22  E104               	bnz	u11160
 21191  015C24  0EFC               	movlw	-4
 21192  015C26  04E3               	decf	plusw1,w,c
 21193  015C28  A0D8               	btfss	status,0,c
 21194  015C2A  D002               	goto	u11170
 21195  015C2C                     u11160:
 21196  015C2C  B23E               	btfsc	_flags^0,1,c
 21197  015C2E  D6BE               	goto	l12238
 21198  015C30                     u11170:
 21199                           
 21200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 21201                           ;stkvar	_s @ sp[(-18)+12]
 21202  015C30  0EFA               	movlw	-6
 21203  015C32  006F FF8C  F001    	movff	plusw1,btemp
 21204  015C38  0EFB               	movlw	-5
 21205  015C3A  50E3               	movf	plusw1,w,c
 21206  015C3C  1001               	iorwf	btemp^0,w,c
 21207  015C3E  A4D8               	btfss	status,2,c
 21208  015C40  D002               	goto	u11190
 21209  015C42  A43E               	btfss	_flags^0,2,c
 21210  015C44  D033               	goto	l12272
 21211  015C46                     u11190:
 21212                           
 21213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 21214                           ;stkvar	_i @ sp[(-18)+10]
 21215  015C46  50E1               	movf	fsr1l,w,c
 21216  015C48  0FF8               	addlw	-8
 21217  015C4A  6ED9               	movwf	fsr2l,c
 21218  015C4C  50E2               	movf	fsr1h,w,c
 21219  015C4E  6EDA               	movwf	fsr2h,c
 21220  015C50  0EFF               	movlw	255
 21221  015C52  22DA               	addwfc	fsr2h,f,c
 21222  015C54  06DE               	decf	postinc2,f,c
 21223  015C56  0E00               	movlw	0
 21224  015C58  5ADD               	subwfb	postdec2,f,c
 21225                           
 21226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 21227                           ;stkvar	_s @ sp[(-18)+12]
 21228  015C5A  0EFA               	movlw	-6
 21229  015C5C  006F FF8C  F001    	movff	plusw1,btemp
 21230  015C62  0EFB               	movlw	-5
 21231  015C64  50E3               	movf	plusw1,w,c
 21232  015C66  1001               	iorwf	btemp^0,w,c
 21233  015C68  A4D8               	btfss	status,2,c
 21234  015C6A  D002               	goto	l12268
 21235  015C6C  0E2B               	movlw	43
 21236  015C6E  D001               	goto	L25
 21237  015C70                     l12268:
 21238  015C70  0E2D               	movlw	45
 21239  015C72                     L25:
 21240  015C72  6E0B               	movwf	(btemp+10)^0,c
 21241  015C74  0E00               	movlw	0
 21242  015C76  6E0C               	movwf	(btemp+11)^0,c
 21243                           
 21244                           ;stkvar	_dtoa$5731 @ sp[(-18)+0]
 21245  015C78  0EEE               	movlw	-18
 21246  015C7A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21247  015C80  0EEF               	movlw	-17
 21248  015C82  0060  F033  FFE3   	movff	btemp+11,plusw1
 21249                           
 21250                           ;stkvar	_dtoa$5731 @ sp[(-18)+0]
 21251                           ;stkvar	_i @ sp[(-18)+10]
 21252  015C88  0EF8               	movlw	-8
 21253  015C8A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21254  015C90  0EF9               	movlw	-7
 21255  015C92  006F FF8C  F00C    	movff	plusw1,btemp+11
 21256  015C98  0E97               	movlw	low _dbuf
 21257  015C9A  240B               	addwf	(btemp+10)^0,w,c
 21258  015C9C  6ED9               	movwf	fsr2l,c
 21259  015C9E  0E02               	movlw	high _dbuf
 21260  015CA0  200C               	addwfc	(btemp+11)^0,w,c
 21261  015CA2  6EDA               	movwf	fsr2h,c
 21262  015CA4  0EEE               	movlw	-18
 21263  015CA6  006F FF8F FFDF     	movff	plusw1,indf2
 21264  015CAC                     l12272:
 21265                           
 21266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 21267                           ;stkvar	_w @ sp[(-18)+14]
 21268  015CAC  0EFC               	movlw	-4
 21269  015CAE  006F FF8F FFE6     	movff	plusw1,postinc1
 21270  015CB4  006F FF8F FFE6     	movff	plusw1,postinc1
 21271                           
 21272                           ;stkvar	_i @ sp[(-20)+10]
 21273  015CBA  0E97               	movlw	low _dbuf
 21274  015CBC  6E0B               	movwf	(btemp+10)^0,c
 21275  015CBE  0E02               	movlw	high _dbuf
 21276  015CC0  6E0C               	movwf	(btemp+11)^0,c
 21277  015CC2  0EF6               	movlw	-10
 21278  015CC4  50E3               	movf	plusw1,w,c
 21279  015CC6  260B               	addwf	(btemp+10)^0,f,c
 21280  015CC8  0EF7               	movlw	-9
 21281  015CCA  50E3               	movf	plusw1,w,c
 21282  015CCC  220C               	addwfc	(btemp+11)^0,f,c
 21283  015CCE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21284  015CD4  0060  F033  FFE6   	movff	btemp+11,postinc1
 21285                           
 21286                           ;stkvar	_fp @ sp[(-22)+-2]
 21287  015CDA  0EE8               	movlw	-24
 21288  015CDC  006F FF8F FFE6     	movff	plusw1,postinc1
 21289  015CE2  006F FF8F FFE6     	movff	plusw1,postinc1
 21290  015CE8  ECAC  F0CE         	call	_pad	;wreg free
 21291                           
 21292                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 21293  015CEC  0EE4               	movlw	228
 21294  015CEE  26E1               	addwf	fsr1l,f,c
 21295  015CF0  0EFF               	movlw	255
 21296  015CF2  22E2               	addwfc	fsr1h,f,c
 21297  015CF4  0012               	return		;funcret
 21298  015CF6                     __end_of_dtoa:
 21299                           	opt callstack 0
 21300                           
 21301 ;; *************** function _abs *****************
 21302 ;; Defined at:
 21303 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 21304 ;; Parameters:    Size  Location     Type
 21305 ;;  a               2  [STACK] int 
 21306 ;; Auto vars:     Size  Location     Type
 21307 ;;		None
 21308 ;; Return value:  Size  Location     Type
 21309 ;;                  2  [STACK] int 
 21310 ;; Registers used:
 21311 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 21312 ;; Tracked objects:
 21313 ;;		On entry : 0/2
 21314 ;;		On exit  : 0/0
 21315 ;;		Unchanged: 0/0
 21316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21321 ;;Total ram usage:        0 bytes
 21322 ;; Hardware stack levels used:    1
 21323 ;; Hardware stack levels required when called:   15
 21324 ;; This function calls:
 21325 ;;		Nothing
 21326 ;; This function is called by:
 21327 ;;		_dtoa
 21328 ;; This function uses a reentrant model
 21329 ;;
 21330                           
 21331                           	psect	text74
 21332  01B9D2                     __ptext74:
 21333                           	opt callstack 0
 21334  01B9D2                     _abs:
 21335                           	opt callstack 0
 21336                           
 21337                           ;stkvar	_a @ sp[(0)+-2]
 21338                           
 21339                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21340                           ;incstack = 0
 21341 ;; hardware stack exceeded
 21342  01B9D2  0EFF               	movlw	-1
 21343  01B9D4  BEE3               	btfsc	plusw1,7,c
 21344  01B9D6  D007               	goto	u6060
 21345  01B9D8  0EFF               	movlw	-1
 21346  01B9DA  50E3               	movf	plusw1,w,c
 21347  01B9DC  E112               	bnz	l8186
 21348  01B9DE  0EFE               	movlw	-2
 21349  01B9E0  04E3               	decf	plusw1,w,c
 21350  01B9E2  B0D8               	btfsc	status,0,c
 21351  01B9E4  D00E               	goto	l8186
 21352  01B9E6                     u6060:
 21353                           
 21354                           ;stkvar	_a @ sp[(0)+-2]
 21355  01B9E6  0EFE               	movlw	-2
 21356  01B9E8  006F FF8C  F001    	movff	plusw1,btemp
 21357  01B9EE  1E01               	comf	btemp^0,f,c
 21358  01B9F0  0EFF               	movlw	-1
 21359  01B9F2  006F FF8C  F002    	movff	plusw1,btemp+1
 21360  01B9F8  1E02               	comf	(btemp+1)^0,f,c
 21361  01B9FA  2A01               	incf	btemp^0,f,c
 21362  01B9FC  B4D8               	btfsc	status,2,c
 21363  01B9FE  2A02               	incf	(btemp+1)^0,f,c
 21364  01BA00  D008               	goto	l3170
 21365  01BA02                     l8186:
 21366                           
 21367                           ;stkvar	_a @ sp[(0)+-2]
 21368  01BA02  0EFE               	movlw	-2
 21369  01BA04  006F FF8C  F001    	movff	plusw1,btemp
 21370  01BA0A  0EFF               	movlw	-1
 21371  01BA0C  006F FF8C  F002    	movff	plusw1,btemp+1
 21372  01BA12                     l3170:
 21373                           
 21374                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 21375  01BA12  52E5               	movf	postdec1,f,c
 21376  01BA14  52E5               	movf	postdec1,f,c
 21377  01BA16  0012               	return		;funcret
 21378  01BA18                     __end_of_abs:
 21379                           	opt callstack 0
 21380                           
 21381 ;; *************** function ___aomod *****************
 21382 ;; Defined at:
 21383 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 21384 ;; Parameters:    Size  Location     Type
 21385 ;;  dividend        8  [STACK] long long 
 21386 ;;  divisor         8  [STACK] long long 
 21387 ;; Auto vars:     Size  Location     Type
 21388 ;;  sign            1  [STACK] unsigned char 
 21389 ;;  counter         1  [STACK] unsigned char 
 21390 ;; Return value:  Size  Location     Type
 21391 ;;                  8  [STACK] long long 
 21392 ;; Registers used:
 21393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21394 ;; Tracked objects:
 21395 ;;		On entry : 0/2
 21396 ;;		On exit  : 0/0
 21397 ;;		Unchanged: 0/0
 21398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21403 ;;Total ram usage:        0 bytes
 21404 ;; Hardware stack levels used:    1
 21405 ;; Hardware stack levels required when called:   15
 21406 ;; This function calls:
 21407 ;;		Nothing
 21408 ;; This function is called by:
 21409 ;;		_dtoa
 21410 ;; This function uses a reentrant model
 21411 ;;
 21412                           
 21413                           	psect	text75
 21414  017E90                     __ptext75:
 21415                           	opt callstack 0
 21416  017E90                     ___aomod:
 21417                           	opt callstack 0
 21418                           
 21419                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 21420  017E90  52E6               	movf	postinc1,f,c
 21421  017E92  52E6               	movf	postinc1,f,c
 21422                           
 21423                           ;stkvar	_sign @ sp[(-2)+0]
 21424                           
 21425                           ;incstack = 0
 21426 ;; hardware stack exceeded
 21427  017E94  0EFE               	movlw	-2
 21428  017E96  6AE3               	clrf	plusw1,c
 21429                           
 21430                           ;stkvar	_dividend @ sp[(-2)+-8]
 21431  017E98  0EFD               	movlw	-3
 21432  017E9A  AEE3               	btfss	plusw1,7,c
 21433  017E9C  D028               	goto	l8344
 21434                           
 21435                           ;stkvar	_dividend @ sp[(-2)+-8]
 21436                           ;stkvar	_dividend @ sp[(-2)+-8]
 21437  017E9E  0EF6               	movlw	-10
 21438  017EA0  6CE3               	negf	plusw1,c
 21439  017EA2  0EF7               	movlw	-9
 21440  017EA4  1EE3               	comf	plusw1,f,c
 21441  017EA6  0EF8               	movlw	-8
 21442  017EA8  1EE3               	comf	plusw1,f,c
 21443  017EAA  0EF9               	movlw	-7
 21444  017EAC  1EE3               	comf	plusw1,f,c
 21445  017EAE  0EFA               	movlw	-6
 21446  017EB0  1EE3               	comf	plusw1,f,c
 21447  017EB2  0EFB               	movlw	-5
 21448  017EB4  1EE3               	comf	plusw1,f,c
 21449  017EB6  0EFC               	movlw	-4
 21450  017EB8  1EE3               	comf	plusw1,f,c
 21451  017EBA  0EFD               	movlw	-3
 21452  017EBC  1EE3               	comf	plusw1,f,c
 21453  017EBE  E314               	bnc	u6490
 21454  017EC0  0EF7               	movlw	-9
 21455  017EC2  2AE3               	incf	plusw1,f,c
 21456  017EC4  E311               	bnc	u6490
 21457  017EC6  0EF8               	movlw	-8
 21458  017EC8  2AE3               	incf	plusw1,f,c
 21459  017ECA  E30E               	bnc	u6490
 21460  017ECC  0EF9               	movlw	-7
 21461  017ECE  2AE3               	incf	plusw1,f,c
 21462  017ED0  E30B               	bnc	u6490
 21463  017ED2  0EFA               	movlw	-6
 21464  017ED4  2AE3               	incf	plusw1,f,c
 21465  017ED6  E308               	bnc	u6490
 21466  017ED8  0EFB               	movlw	-5
 21467  017EDA  2AE3               	incf	plusw1,f,c
 21468  017EDC  E305               	bnc	u6490
 21469  017EDE  0EFC               	movlw	-4
 21470  017EE0  2AE3               	incf	plusw1,f,c
 21471  017EE2  E302               	bnc	u6490
 21472  017EE4  0EFD               	movlw	-3
 21473  017EE6  2AE3               	incf	plusw1,f,c
 21474  017EE8                     u6490:
 21475                           
 21476                           ;stkvar	_sign @ sp[(-2)+0]
 21477  017EE8  0EFE               	movlw	-2
 21478  017EEA  6AE3               	clrf	plusw1,c
 21479  017EEC  2AE3               	incf	plusw1,f,c
 21480  017EEE                     l8344:
 21481                           
 21482                           ;stkvar	_divisor @ sp[(-2)+-16]
 21483  017EEE  0EF5               	movlw	-11
 21484  017EF0  AEE3               	btfss	plusw1,7,c
 21485  017EF2  D025               	goto	u6510
 21486                           
 21487                           ;stkvar	_divisor @ sp[(-2)+-16]
 21488                           ;stkvar	_divisor @ sp[(-2)+-16]
 21489  017EF4  0EEE               	movlw	-18
 21490  017EF6  6CE3               	negf	plusw1,c
 21491  017EF8  0EEF               	movlw	-17
 21492  017EFA  1EE3               	comf	plusw1,f,c
 21493  017EFC  0EF0               	movlw	-16
 21494  017EFE  1EE3               	comf	plusw1,f,c
 21495  017F00  0EF1               	movlw	-15
 21496  017F02  1EE3               	comf	plusw1,f,c
 21497  017F04  0EF2               	movlw	-14
 21498  017F06  1EE3               	comf	plusw1,f,c
 21499  017F08  0EF3               	movlw	-13
 21500  017F0A  1EE3               	comf	plusw1,f,c
 21501  017F0C  0EF4               	movlw	-12
 21502  017F0E  1EE3               	comf	plusw1,f,c
 21503  017F10  0EF5               	movlw	-11
 21504  017F12  1EE3               	comf	plusw1,f,c
 21505  017F14  E314               	bnc	u6510
 21506  017F16  0EEF               	movlw	-17
 21507  017F18  2AE3               	incf	plusw1,f,c
 21508  017F1A  E311               	bnc	u6510
 21509  017F1C  0EF0               	movlw	-16
 21510  017F1E  2AE3               	incf	plusw1,f,c
 21511  017F20  E30E               	bnc	u6510
 21512  017F22  0EF1               	movlw	-15
 21513  017F24  2AE3               	incf	plusw1,f,c
 21514  017F26  E30B               	bnc	u6510
 21515  017F28  0EF2               	movlw	-14
 21516  017F2A  2AE3               	incf	plusw1,f,c
 21517  017F2C  E308               	bnc	u6510
 21518  017F2E  0EF3               	movlw	-13
 21519  017F30  2AE3               	incf	plusw1,f,c
 21520  017F32  E305               	bnc	u6510
 21521  017F34  0EF4               	movlw	-12
 21522  017F36  2AE3               	incf	plusw1,f,c
 21523  017F38  E302               	bnc	u6510
 21524  017F3A  0EF5               	movlw	-11
 21525  017F3C  2AE3               	incf	plusw1,f,c
 21526  017F3E                     u6510:
 21527                           
 21528                           ;stkvar	_divisor @ sp[(-2)+-16]
 21529  017F3E  0EEE               	movlw	-18
 21530  017F40  50E3               	movf	plusw1,w,c
 21531  017F42  E116               	bnz	u6520
 21532  017F44  0EEF               	movlw	-17
 21533  017F46  50E3               	movf	plusw1,w,c
 21534  017F48  E113               	bnz	u6520
 21535  017F4A  0EF0               	movlw	-16
 21536  017F4C  50E3               	movf	plusw1,w,c
 21537  017F4E  E110               	bnz	u6520
 21538  017F50  0EF1               	movlw	-15
 21539  017F52  50E3               	movf	plusw1,w,c
 21540  017F54  E10D               	bnz	u6520
 21541  017F56  0EF2               	movlw	-14
 21542  017F58  50E3               	movf	plusw1,w,c
 21543  017F5A  E10A               	bnz	u6520
 21544  017F5C  0EF3               	movlw	-13
 21545  017F5E  50E3               	movf	plusw1,w,c
 21546  017F60  E107               	bnz	u6520
 21547  017F62  0EF4               	movlw	-12
 21548  017F64  50E3               	movf	plusw1,w,c
 21549  017F66  E104               	bnz	u6520
 21550  017F68  0EF5               	movlw	-11
 21551  017F6A  50E3               	movf	plusw1,w,c
 21552  017F6C  B4D8               	btfsc	status,2,c
 21553  017F6E  D075               	goto	u6550
 21554  017F70                     u6520:
 21555                           
 21556                           ;stkvar	_counter @ sp[(-2)+1]
 21557  017F70  0EFF               	movlw	-1
 21558  017F72  6AE3               	clrf	plusw1,c
 21559  017F74  D012               	goto	L26
 21560  017F76                     l8352:
 21561                           
 21562                           ;stkvar	_divisor @ sp[(-2)+-16]
 21563  017F76  90D8               	bcf	status,0,c
 21564  017F78  0EEE               	movlw	-18
 21565  017F7A  36E3               	rlcf	plusw1,f,c
 21566  017F7C  0EEF               	movlw	-17
 21567  017F7E  36E3               	rlcf	plusw1,f,c
 21568  017F80  0EF0               	movlw	-16
 21569  017F82  36E3               	rlcf	plusw1,f,c
 21570  017F84  0EF1               	movlw	-15
 21571  017F86  36E3               	rlcf	plusw1,f,c
 21572  017F88  0EF2               	movlw	-14
 21573  017F8A  36E3               	rlcf	plusw1,f,c
 21574  017F8C  0EF3               	movlw	-13
 21575  017F8E  36E3               	rlcf	plusw1,f,c
 21576  017F90  0EF4               	movlw	-12
 21577  017F92  36E3               	rlcf	plusw1,f,c
 21578  017F94  0EF5               	movlw	-11
 21579  017F96  36E3               	rlcf	plusw1,f,c
 21580                           
 21581                           ;stkvar	_counter @ sp[(-2)+1]
 21582  017F98  0EFF               	movlw	-1
 21583  017F9A                     L26:
 21584  017F9A  2AE3               	incf	plusw1,f,c
 21585                           
 21586                           ;stkvar	_divisor @ sp[(-2)+-16]
 21587  017F9C  0EF5               	movlw	-11
 21588  017F9E  AEE3               	btfss	plusw1,7,c
 21589  017FA0  D7EA               	goto	l8352
 21590  017FA2                     u6530:
 21591                           
 21592                           ;stkvar	_divisor @ sp[(-2)+-16]
 21593                           ;stkvar	_dividend @ sp[(-2)+-8]
 21594  017FA2  50E1               	movf	fsr1l,w,c
 21595  017FA4  0FF6               	addlw	-10
 21596  017FA6  6ED9               	movwf	fsr2l,c
 21597  017FA8  50E2               	movf	fsr1h,w,c
 21598  017FAA  6EDA               	movwf	fsr2h,c
 21599  017FAC  0EFF               	movlw	255
 21600  017FAE  22DA               	addwfc	fsr2h,f,c
 21601  017FB0  0EEE               	movlw	-18
 21602  017FB2  50E3               	movf	plusw1,w,c
 21603  017FB4  5CDE               	subwf	postinc2,w,c
 21604  017FB6  0EEF               	movlw	-17
 21605  017FB8  50E3               	movf	plusw1,w,c
 21606  017FBA  58DE               	subwfb	postinc2,w,c
 21607  017FBC  0EF0               	movlw	-16
 21608  017FBE  50E3               	movf	plusw1,w,c
 21609  017FC0  58DE               	subwfb	postinc2,w,c
 21610  017FC2  0EF1               	movlw	-15
 21611  017FC4  50E3               	movf	plusw1,w,c
 21612  017FC6  58DE               	subwfb	postinc2,w,c
 21613  017FC8  0EF2               	movlw	-14
 21614  017FCA  50E3               	movf	plusw1,w,c
 21615  017FCC  58DE               	subwfb	postinc2,w,c
 21616  017FCE  0EF3               	movlw	-13
 21617  017FD0  50E3               	movf	plusw1,w,c
 21618  017FD2  58DE               	subwfb	postinc2,w,c
 21619  017FD4  0EF4               	movlw	-12
 21620  017FD6  50E3               	movf	plusw1,w,c
 21621  017FD8  58DE               	subwfb	postinc2,w,c
 21622  017FDA  0EF5               	movlw	-11
 21623  017FDC  50E3               	movf	plusw1,w,c
 21624  017FDE  58DE               	subwfb	postinc2,w,c
 21625  017FE0  A0D8               	btfss	status,0,c
 21626  017FE2  D01F               	goto	l8360
 21627                           
 21628                           ;stkvar	_divisor @ sp[(-2)+-16]
 21629                           ;stkvar	_dividend @ sp[(-2)+-8]
 21630  017FE4  50E1               	movf	fsr1l,w,c
 21631  017FE6  0FF6               	addlw	-10
 21632  017FE8  6ED9               	movwf	fsr2l,c
 21633  017FEA  50E2               	movf	fsr1h,w,c
 21634  017FEC  6EDA               	movwf	fsr2h,c
 21635  017FEE  0EFF               	movlw	255
 21636  017FF0  22DA               	addwfc	fsr2h,f,c
 21637  017FF2  0EEE               	movlw	-18
 21638  017FF4  50E3               	movf	plusw1,w,c
 21639  017FF6  5EDE               	subwf	postinc2,f,c
 21640  017FF8  0EEF               	movlw	-17
 21641  017FFA  50E3               	movf	plusw1,w,c
 21642  017FFC  5ADE               	subwfb	postinc2,f,c
 21643  017FFE  0EF0               	movlw	-16
 21644  018000  50E3               	movf	plusw1,w,c
 21645  018002  5ADE               	subwfb	postinc2,f,c
 21646  018004  0EF1               	movlw	-15
 21647  018006  50E3               	movf	plusw1,w,c
 21648  018008  5ADE               	subwfb	postinc2,f,c
 21649  01800A  0EF2               	movlw	-14
 21650  01800C  50E3               	movf	plusw1,w,c
 21651  01800E  5ADE               	subwfb	postinc2,f,c
 21652  018010  0EF3               	movlw	-13
 21653  018012  50E3               	movf	plusw1,w,c
 21654  018014  5ADE               	subwfb	postinc2,f,c
 21655  018016  0EF4               	movlw	-12
 21656  018018  50E3               	movf	plusw1,w,c
 21657  01801A  5ADE               	subwfb	postinc2,f,c
 21658  01801C  0EF5               	movlw	-11
 21659  01801E  50E3               	movf	plusw1,w,c
 21660  018020  5ADE               	subwfb	postinc2,f,c
 21661  018022                     l8360:
 21662                           
 21663                           ;stkvar	_divisor @ sp[(-2)+-16]
 21664  018022  90D8               	bcf	status,0,c
 21665  018024  0EF5               	movlw	-11
 21666  018026  32E3               	rrcf	plusw1,f,c
 21667  018028  0EF4               	movlw	-12
 21668  01802A  32E3               	rrcf	plusw1,f,c
 21669  01802C  0EF3               	movlw	-13
 21670  01802E  32E3               	rrcf	plusw1,f,c
 21671  018030  0EF2               	movlw	-14
 21672  018032  32E3               	rrcf	plusw1,f,c
 21673  018034  0EF1               	movlw	-15
 21674  018036  32E3               	rrcf	plusw1,f,c
 21675  018038  0EF0               	movlw	-16
 21676  01803A  32E3               	rrcf	plusw1,f,c
 21677  01803C  0EEF               	movlw	-17
 21678  01803E  32E3               	rrcf	plusw1,f,c
 21679  018040  0EEE               	movlw	-18
 21680  018042  32E3               	rrcf	plusw1,f,c
 21681                           
 21682                           ;stkvar	_counter @ sp[(-2)+1]
 21683  018044  0EFF               	movlw	-1
 21684  018046  50E3               	movf	plusw1,w,c
 21685  018048  6E01               	movwf	btemp^0,c
 21686  01804A  0E01               	movlw	1
 21687  01804C  5E01               	subwf	btemp^0,f,c
 21688  01804E  0EFF               	movlw	-1
 21689  018050  0060  F007  FFE3   	movff	btemp,plusw1
 21690  018056  A4D8               	btfss	status,2,c
 21691  018058  D7A4               	goto	u6530
 21692  01805A                     u6550:
 21693                           
 21694                           ;stkvar	_sign @ sp[(-2)+0]
 21695  01805A  0EFE               	movlw	-2
 21696  01805C  50E3               	movf	plusw1,w,c
 21697  01805E  B4D8               	btfsc	status,2,c
 21698  018060  D025               	goto	u6570
 21699                           
 21700                           ;stkvar	_dividend @ sp[(-2)+-8]
 21701                           ;stkvar	_dividend @ sp[(-2)+-8]
 21702  018062  0EF6               	movlw	-10
 21703  018064  6CE3               	negf	plusw1,c
 21704  018066  0EF7               	movlw	-9
 21705  018068  1EE3               	comf	plusw1,f,c
 21706  01806A  0EF8               	movlw	-8
 21707  01806C  1EE3               	comf	plusw1,f,c
 21708  01806E  0EF9               	movlw	-7
 21709  018070  1EE3               	comf	plusw1,f,c
 21710  018072  0EFA               	movlw	-6
 21711  018074  1EE3               	comf	plusw1,f,c
 21712  018076  0EFB               	movlw	-5
 21713  018078  1EE3               	comf	plusw1,f,c
 21714  01807A  0EFC               	movlw	-4
 21715  01807C  1EE3               	comf	plusw1,f,c
 21716  01807E  0EFD               	movlw	-3
 21717  018080  1EE3               	comf	plusw1,f,c
 21718  018082  E314               	bnc	u6570
 21719  018084  0EF7               	movlw	-9
 21720  018086  2AE3               	incf	plusw1,f,c
 21721  018088  E311               	bnc	u6570
 21722  01808A  0EF8               	movlw	-8
 21723  01808C  2AE3               	incf	plusw1,f,c
 21724  01808E  E30E               	bnc	u6570
 21725  018090  0EF9               	movlw	-7
 21726  018092  2AE3               	incf	plusw1,f,c
 21727  018094  E30B               	bnc	u6570
 21728  018096  0EFA               	movlw	-6
 21729  018098  2AE3               	incf	plusw1,f,c
 21730  01809A  E308               	bnc	u6570
 21731  01809C  0EFB               	movlw	-5
 21732  01809E  2AE3               	incf	plusw1,f,c
 21733  0180A0  E305               	bnc	u6570
 21734  0180A2  0EFC               	movlw	-4
 21735  0180A4  2AE3               	incf	plusw1,f,c
 21736  0180A6  E302               	bnc	u6570
 21737  0180A8  0EFD               	movlw	-3
 21738  0180AA  2AE3               	incf	plusw1,f,c
 21739  0180AC                     u6570:
 21740                           
 21741                           ;stkvar	_dividend @ sp[(-2)+-8]
 21742  0180AC  0EF6               	movlw	246
 21743  0180AE  24E1               	addwf	fsr1l,w,c
 21744  0180B0  6ED9               	movwf	fsr2l,c
 21745  0180B2  0EFF               	movlw	255
 21746  0180B4  20E2               	addwfc	fsr1h,w,c
 21747  0180B6  6EDA               	movwf	fsr2h,c
 21748                           
 21749                           ;stkvar	?___aomod @ sp[(-2)+-8]
 21750  0180B8  0E08               	movlw	8
 21751  0180BA  6E01               	movwf	btemp^0,c
 21752  0180BC  0EF6               	movlw	-10
 21753  0180BE                     us658999:
 21754  0180BE  006F FF7B FFE3     	movff	postinc2,plusw1
 21755  0180C4  28E8               	incf	wreg,w,c
 21756  0180C6  2E01               	decfsz	btemp^0,f,c
 21757  0180C8  D7FA               	bra	us658999
 21758                           
 21759                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 21760  0180CA  52E5               	movf	postdec1,f,c
 21761  0180CC  52E5               	movf	postdec1,f,c
 21762  0180CE  0012               	return		;funcret
 21763  0180D0                     __end_of___aomod:
 21764                           	opt callstack 0
 21765                           
 21766 ;; *************** function ___aodiv *****************
 21767 ;; Defined at:
 21768 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 21769 ;; Parameters:    Size  Location     Type
 21770 ;;  dividend        8  [STACK] long long 
 21771 ;;  divisor         8  [STACK] long long 
 21772 ;; Auto vars:     Size  Location     Type
 21773 ;;  quotient        8  [STACK] long long 
 21774 ;;  sign            1  [STACK] unsigned char 
 21775 ;;  counter         1  [STACK] unsigned char 
 21776 ;; Return value:  Size  Location     Type
 21777 ;;                  8  [STACK] long long 
 21778 ;; Registers used:
 21779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21780 ;; Tracked objects:
 21781 ;;		On entry : 0/2
 21782 ;;		On exit  : 0/0
 21783 ;;		Unchanged: 0/0
 21784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21789 ;;Total ram usage:        0 bytes
 21790 ;; Hardware stack levels used:    1
 21791 ;; Hardware stack levels required when called:   15
 21792 ;; This function calls:
 21793 ;;		Nothing
 21794 ;; This function is called by:
 21795 ;;		_dtoa
 21796 ;; This function uses a reentrant model
 21797 ;;
 21798                           
 21799                           	psect	text76
 21800  017756                     __ptext76:
 21801                           	opt callstack 0
 21802  017756                     ___aodiv:
 21803                           	opt callstack 0
 21804                           
 21805                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 21806  017756  0E0A               	movlw	10
 21807  017758  26E1               	addwf	fsr1l,f,c
 21808  01775A  0E00               	movlw	0
 21809  01775C  22E2               	addwfc	fsr1h,f,c
 21810                           
 21811                           ;stkvar	_sign @ sp[(-10)+8]
 21812                           
 21813                           ;incstack = 0
 21814 ;; hardware stack exceeded
 21815  01775E  0EFE               	movlw	-2
 21816  017760  6AE3               	clrf	plusw1,c
 21817                           
 21818                           ;stkvar	_divisor @ sp[(-10)+-16]
 21819  017762  0EED               	movlw	-19
 21820  017764  AEE3               	btfss	plusw1,7,c
 21821  017766  D028               	goto	l8300
 21822                           
 21823                           ;stkvar	_divisor @ sp[(-10)+-16]
 21824                           ;stkvar	_divisor @ sp[(-10)+-16]
 21825  017768  0EE6               	movlw	-26
 21826  01776A  6CE3               	negf	plusw1,c
 21827  01776C  0EE7               	movlw	-25
 21828  01776E  1EE3               	comf	plusw1,f,c
 21829  017770  0EE8               	movlw	-24
 21830  017772  1EE3               	comf	plusw1,f,c
 21831  017774  0EE9               	movlw	-23
 21832  017776  1EE3               	comf	plusw1,f,c
 21833  017778  0EEA               	movlw	-22
 21834  01777A  1EE3               	comf	plusw1,f,c
 21835  01777C  0EEB               	movlw	-21
 21836  01777E  1EE3               	comf	plusw1,f,c
 21837  017780  0EEC               	movlw	-20
 21838  017782  1EE3               	comf	plusw1,f,c
 21839  017784  0EED               	movlw	-19
 21840  017786  1EE3               	comf	plusw1,f,c
 21841  017788  E314               	bnc	u6370
 21842  01778A  0EE7               	movlw	-25
 21843  01778C  2AE3               	incf	plusw1,f,c
 21844  01778E  E311               	bnc	u6370
 21845  017790  0EE8               	movlw	-24
 21846  017792  2AE3               	incf	plusw1,f,c
 21847  017794  E30E               	bnc	u6370
 21848  017796  0EE9               	movlw	-23
 21849  017798  2AE3               	incf	plusw1,f,c
 21850  01779A  E30B               	bnc	u6370
 21851  01779C  0EEA               	movlw	-22
 21852  01779E  2AE3               	incf	plusw1,f,c
 21853  0177A0  E308               	bnc	u6370
 21854  0177A2  0EEB               	movlw	-21
 21855  0177A4  2AE3               	incf	plusw1,f,c
 21856  0177A6  E305               	bnc	u6370
 21857  0177A8  0EEC               	movlw	-20
 21858  0177AA  2AE3               	incf	plusw1,f,c
 21859  0177AC  E302               	bnc	u6370
 21860  0177AE  0EED               	movlw	-19
 21861  0177B0  2AE3               	incf	plusw1,f,c
 21862  0177B2                     u6370:
 21863                           
 21864                           ;stkvar	_sign @ sp[(-10)+8]
 21865  0177B2  0EFE               	movlw	-2
 21866  0177B4  6AE3               	clrf	plusw1,c
 21867  0177B6  2AE3               	incf	plusw1,f,c
 21868  0177B8                     l8300:
 21869                           
 21870                           ;stkvar	_dividend @ sp[(-10)+-8]
 21871  0177B8  0EF5               	movlw	-11
 21872  0177BA  AEE3               	btfss	plusw1,7,c
 21873  0177BC  D027               	goto	l8306
 21874                           
 21875                           ;stkvar	_dividend @ sp[(-10)+-8]
 21876                           ;stkvar	_dividend @ sp[(-10)+-8]
 21877  0177BE  0EEE               	movlw	-18
 21878  0177C0  6CE3               	negf	plusw1,c
 21879  0177C2  0EEF               	movlw	-17
 21880  0177C4  1EE3               	comf	plusw1,f,c
 21881  0177C6  0EF0               	movlw	-16
 21882  0177C8  1EE3               	comf	plusw1,f,c
 21883  0177CA  0EF1               	movlw	-15
 21884  0177CC  1EE3               	comf	plusw1,f,c
 21885  0177CE  0EF2               	movlw	-14
 21886  0177D0  1EE3               	comf	plusw1,f,c
 21887  0177D2  0EF3               	movlw	-13
 21888  0177D4  1EE3               	comf	plusw1,f,c
 21889  0177D6  0EF4               	movlw	-12
 21890  0177D8  1EE3               	comf	plusw1,f,c
 21891  0177DA  0EF5               	movlw	-11
 21892  0177DC  1EE3               	comf	plusw1,f,c
 21893  0177DE  E314               	bnc	u6390
 21894  0177E0  0EEF               	movlw	-17
 21895  0177E2  2AE3               	incf	plusw1,f,c
 21896  0177E4  E311               	bnc	u6390
 21897  0177E6  0EF0               	movlw	-16
 21898  0177E8  2AE3               	incf	plusw1,f,c
 21899  0177EA  E30E               	bnc	u6390
 21900  0177EC  0EF1               	movlw	-15
 21901  0177EE  2AE3               	incf	plusw1,f,c
 21902  0177F0  E30B               	bnc	u6390
 21903  0177F2  0EF2               	movlw	-14
 21904  0177F4  2AE3               	incf	plusw1,f,c
 21905  0177F6  E308               	bnc	u6390
 21906  0177F8  0EF3               	movlw	-13
 21907  0177FA  2AE3               	incf	plusw1,f,c
 21908  0177FC  E305               	bnc	u6390
 21909  0177FE  0EF4               	movlw	-12
 21910  017800  2AE3               	incf	plusw1,f,c
 21911  017802  E302               	bnc	u6390
 21912  017804  0EF5               	movlw	-11
 21913  017806  2AE3               	incf	plusw1,f,c
 21914  017808                     u6390:
 21915                           
 21916                           ;stkvar	_sign @ sp[(-10)+8]
 21917  017808  0EFE               	movlw	-2
 21918  01780A  70E3               	btg	plusw1,0,c
 21919  01780C                     l8306:
 21920                           
 21921                           ;stkvar	_quotient @ sp[(-10)+0]
 21922  01780C  0E07               	movlw	7
 21923  01780E  6E01               	movwf	btemp^0,c
 21924  017810  0EF6               	movlw	-10
 21925  017812                     u6401:
 21926  017812  6AE3               	clrf	plusw1,c
 21927  017814  2AE8               	incf	wreg,f,c
 21928  017816  0601               	decf	btemp^0,f,c
 21929  017818  E2FC               	bc	u6401
 21930                           
 21931                           ;stkvar	_divisor @ sp[(-10)+-16]
 21932  01781A  0EE6               	movlw	-26
 21933  01781C  50E3               	movf	plusw1,w,c
 21934  01781E  E116               	bnz	u6410
 21935  017820  0EE7               	movlw	-25
 21936  017822  50E3               	movf	plusw1,w,c
 21937  017824  E113               	bnz	u6410
 21938  017826  0EE8               	movlw	-24
 21939  017828  50E3               	movf	plusw1,w,c
 21940  01782A  E110               	bnz	u6410
 21941  01782C  0EE9               	movlw	-23
 21942  01782E  50E3               	movf	plusw1,w,c
 21943  017830  E10D               	bnz	u6410
 21944  017832  0EEA               	movlw	-22
 21945  017834  50E3               	movf	plusw1,w,c
 21946  017836  E10A               	bnz	u6410
 21947  017838  0EEB               	movlw	-21
 21948  01783A  50E3               	movf	plusw1,w,c
 21949  01783C  E107               	bnz	u6410
 21950  01783E  0EEC               	movlw	-20
 21951  017840  50E3               	movf	plusw1,w,c
 21952  017842  E104               	bnz	u6410
 21953  017844  0EED               	movlw	-19
 21954  017846  50E3               	movf	plusw1,w,c
 21955  017848  B4D8               	btfsc	status,2,c
 21956  01784A  D088               	goto	u6440
 21957  01784C                     u6410:
 21958                           
 21959                           ;stkvar	_counter @ sp[(-10)+9]
 21960  01784C  0EFF               	movlw	-1
 21961  01784E  6AE3               	clrf	plusw1,c
 21962  017850  D012               	goto	L27
 21963  017852                     l8312:
 21964                           
 21965                           ;stkvar	_divisor @ sp[(-10)+-16]
 21966  017852  90D8               	bcf	status,0,c
 21967  017854  0EE6               	movlw	-26
 21968  017856  36E3               	rlcf	plusw1,f,c
 21969  017858  0EE7               	movlw	-25
 21970  01785A  36E3               	rlcf	plusw1,f,c
 21971  01785C  0EE8               	movlw	-24
 21972  01785E  36E3               	rlcf	plusw1,f,c
 21973  017860  0EE9               	movlw	-23
 21974  017862  36E3               	rlcf	plusw1,f,c
 21975  017864  0EEA               	movlw	-22
 21976  017866  36E3               	rlcf	plusw1,f,c
 21977  017868  0EEB               	movlw	-21
 21978  01786A  36E3               	rlcf	plusw1,f,c
 21979  01786C  0EEC               	movlw	-20
 21980  01786E  36E3               	rlcf	plusw1,f,c
 21981  017870  0EED               	movlw	-19
 21982  017872  36E3               	rlcf	plusw1,f,c
 21983                           
 21984                           ;stkvar	_counter @ sp[(-10)+9]
 21985  017874  0EFF               	movlw	-1
 21986  017876                     L27:
 21987  017876  2AE3               	incf	plusw1,f,c
 21988                           
 21989                           ;stkvar	_divisor @ sp[(-10)+-16]
 21990  017878  0EED               	movlw	-19
 21991  01787A  AEE3               	btfss	plusw1,7,c
 21992  01787C  D7EA               	goto	l8312
 21993  01787E                     u6420:
 21994                           
 21995                           ;stkvar	_quotient @ sp[(-10)+0]
 21996  01787E  90D8               	bcf	status,0,c
 21997  017880  0EF6               	movlw	-10
 21998  017882  36E3               	rlcf	plusw1,f,c
 21999  017884  0EF7               	movlw	-9
 22000  017886  36E3               	rlcf	plusw1,f,c
 22001  017888  0EF8               	movlw	-8
 22002  01788A  36E3               	rlcf	plusw1,f,c
 22003  01788C  0EF9               	movlw	-7
 22004  01788E  36E3               	rlcf	plusw1,f,c
 22005  017890  0EFA               	movlw	-6
 22006  017892  36E3               	rlcf	plusw1,f,c
 22007  017894  0EFB               	movlw	-5
 22008  017896  36E3               	rlcf	plusw1,f,c
 22009  017898  0EFC               	movlw	-4
 22010  01789A  36E3               	rlcf	plusw1,f,c
 22011  01789C  0EFD               	movlw	-3
 22012  01789E  36E3               	rlcf	plusw1,f,c
 22013                           
 22014                           ;stkvar	_divisor @ sp[(-10)+-16]
 22015                           ;stkvar	_dividend @ sp[(-10)+-8]
 22016  0178A0  50E1               	movf	fsr1l,w,c
 22017  0178A2  0FEE               	addlw	-18
 22018  0178A4  6ED9               	movwf	fsr2l,c
 22019  0178A6  50E2               	movf	fsr1h,w,c
 22020  0178A8  6EDA               	movwf	fsr2h,c
 22021  0178AA  0EFF               	movlw	255
 22022  0178AC  22DA               	addwfc	fsr2h,f,c
 22023  0178AE  0EE6               	movlw	-26
 22024  0178B0  50E3               	movf	plusw1,w,c
 22025  0178B2  5CDE               	subwf	postinc2,w,c
 22026  0178B4  0EE7               	movlw	-25
 22027  0178B6  50E3               	movf	plusw1,w,c
 22028  0178B8  58DE               	subwfb	postinc2,w,c
 22029  0178BA  0EE8               	movlw	-24
 22030  0178BC  50E3               	movf	plusw1,w,c
 22031  0178BE  58DE               	subwfb	postinc2,w,c
 22032  0178C0  0EE9               	movlw	-23
 22033  0178C2  50E3               	movf	plusw1,w,c
 22034  0178C4  58DE               	subwfb	postinc2,w,c
 22035  0178C6  0EEA               	movlw	-22
 22036  0178C8  50E3               	movf	plusw1,w,c
 22037  0178CA  58DE               	subwfb	postinc2,w,c
 22038  0178CC  0EEB               	movlw	-21
 22039  0178CE  50E3               	movf	plusw1,w,c
 22040  0178D0  58DE               	subwfb	postinc2,w,c
 22041  0178D2  0EEC               	movlw	-20
 22042  0178D4  50E3               	movf	plusw1,w,c
 22043  0178D6  58DE               	subwfb	postinc2,w,c
 22044  0178D8  0EED               	movlw	-19
 22045  0178DA  50E3               	movf	plusw1,w,c
 22046  0178DC  58DE               	subwfb	postinc2,w,c
 22047  0178DE  A0D8               	btfss	status,0,c
 22048  0178E0  D021               	goto	l8324
 22049                           
 22050                           ;stkvar	_divisor @ sp[(-10)+-16]
 22051                           ;stkvar	_dividend @ sp[(-10)+-8]
 22052  0178E2  50E1               	movf	fsr1l,w,c
 22053  0178E4  0FEE               	addlw	-18
 22054  0178E6  6ED9               	movwf	fsr2l,c
 22055  0178E8  50E2               	movf	fsr1h,w,c
 22056  0178EA  6EDA               	movwf	fsr2h,c
 22057  0178EC  0EFF               	movlw	255
 22058  0178EE  22DA               	addwfc	fsr2h,f,c
 22059  0178F0  0EE6               	movlw	-26
 22060  0178F2  50E3               	movf	plusw1,w,c
 22061  0178F4  5EDE               	subwf	postinc2,f,c
 22062  0178F6  0EE7               	movlw	-25
 22063  0178F8  50E3               	movf	plusw1,w,c
 22064  0178FA  5ADE               	subwfb	postinc2,f,c
 22065  0178FC  0EE8               	movlw	-24
 22066  0178FE  50E3               	movf	plusw1,w,c
 22067  017900  5ADE               	subwfb	postinc2,f,c
 22068  017902  0EE9               	movlw	-23
 22069  017904  50E3               	movf	plusw1,w,c
 22070  017906  5ADE               	subwfb	postinc2,f,c
 22071  017908  0EEA               	movlw	-22
 22072  01790A  50E3               	movf	plusw1,w,c
 22073  01790C  5ADE               	subwfb	postinc2,f,c
 22074  01790E  0EEB               	movlw	-21
 22075  017910  50E3               	movf	plusw1,w,c
 22076  017912  5ADE               	subwfb	postinc2,f,c
 22077  017914  0EEC               	movlw	-20
 22078  017916  50E3               	movf	plusw1,w,c
 22079  017918  5ADE               	subwfb	postinc2,f,c
 22080  01791A  0EED               	movlw	-19
 22081  01791C  50E3               	movf	plusw1,w,c
 22082  01791E  5ADE               	subwfb	postinc2,f,c
 22083                           
 22084                           ;stkvar	_quotient @ sp[(-10)+0]
 22085  017920  0EF6               	movlw	-10
 22086  017922  80E3               	bsf	plusw1,0,c
 22087  017924                     l8324:
 22088                           
 22089                           ;stkvar	_divisor @ sp[(-10)+-16]
 22090  017924  90D8               	bcf	status,0,c
 22091  017926  0EED               	movlw	-19
 22092  017928  32E3               	rrcf	plusw1,f,c
 22093  01792A  0EEC               	movlw	-20
 22094  01792C  32E3               	rrcf	plusw1,f,c
 22095  01792E  0EEB               	movlw	-21
 22096  017930  32E3               	rrcf	plusw1,f,c
 22097  017932  0EEA               	movlw	-22
 22098  017934  32E3               	rrcf	plusw1,f,c
 22099  017936  0EE9               	movlw	-23
 22100  017938  32E3               	rrcf	plusw1,f,c
 22101  01793A  0EE8               	movlw	-24
 22102  01793C  32E3               	rrcf	plusw1,f,c
 22103  01793E  0EE7               	movlw	-25
 22104  017940  32E3               	rrcf	plusw1,f,c
 22105  017942  0EE6               	movlw	-26
 22106  017944  32E3               	rrcf	plusw1,f,c
 22107                           
 22108                           ;stkvar	_counter @ sp[(-10)+9]
 22109  017946  0EFF               	movlw	-1
 22110  017948  50E3               	movf	plusw1,w,c
 22111  01794A  6E01               	movwf	btemp^0,c
 22112  01794C  0E01               	movlw	1
 22113  01794E  5E01               	subwf	btemp^0,f,c
 22114  017950  0EFF               	movlw	-1
 22115  017952  0060  F007  FFE3   	movff	btemp,plusw1
 22116  017958  A4D8               	btfss	status,2,c
 22117  01795A  D791               	goto	u6420
 22118  01795C                     u6440:
 22119                           
 22120                           ;stkvar	_sign @ sp[(-10)+8]
 22121  01795C  0EFE               	movlw	-2
 22122  01795E  50E3               	movf	plusw1,w,c
 22123  017960  B4D8               	btfsc	status,2,c
 22124  017962  D025               	goto	u6460
 22125                           
 22126                           ;stkvar	_quotient @ sp[(-10)+0]
 22127                           ;stkvar	_quotient @ sp[(-10)+0]
 22128  017964  0EF6               	movlw	-10
 22129  017966  6CE3               	negf	plusw1,c
 22130  017968  0EF7               	movlw	-9
 22131  01796A  1EE3               	comf	plusw1,f,c
 22132  01796C  0EF8               	movlw	-8
 22133  01796E  1EE3               	comf	plusw1,f,c
 22134  017970  0EF9               	movlw	-7
 22135  017972  1EE3               	comf	plusw1,f,c
 22136  017974  0EFA               	movlw	-6
 22137  017976  1EE3               	comf	plusw1,f,c
 22138  017978  0EFB               	movlw	-5
 22139  01797A  1EE3               	comf	plusw1,f,c
 22140  01797C  0EFC               	movlw	-4
 22141  01797E  1EE3               	comf	plusw1,f,c
 22142  017980  0EFD               	movlw	-3
 22143  017982  1EE3               	comf	plusw1,f,c
 22144  017984  E314               	bnc	u6460
 22145  017986  0EF7               	movlw	-9
 22146  017988  2AE3               	incf	plusw1,f,c
 22147  01798A  E311               	bnc	u6460
 22148  01798C  0EF8               	movlw	-8
 22149  01798E  2AE3               	incf	plusw1,f,c
 22150  017990  E30E               	bnc	u6460
 22151  017992  0EF9               	movlw	-7
 22152  017994  2AE3               	incf	plusw1,f,c
 22153  017996  E30B               	bnc	u6460
 22154  017998  0EFA               	movlw	-6
 22155  01799A  2AE3               	incf	plusw1,f,c
 22156  01799C  E308               	bnc	u6460
 22157  01799E  0EFB               	movlw	-5
 22158  0179A0  2AE3               	incf	plusw1,f,c
 22159  0179A2  E305               	bnc	u6460
 22160  0179A4  0EFC               	movlw	-4
 22161  0179A6  2AE3               	incf	plusw1,f,c
 22162  0179A8  E302               	bnc	u6460
 22163  0179AA  0EFD               	movlw	-3
 22164  0179AC  2AE3               	incf	plusw1,f,c
 22165  0179AE                     u6460:
 22166                           
 22167                           ;stkvar	_quotient @ sp[(-10)+0]
 22168  0179AE  0EF6               	movlw	246
 22169  0179B0  24E1               	addwf	fsr1l,w,c
 22170  0179B2  6ED9               	movwf	fsr2l,c
 22171  0179B4  0EFF               	movlw	255
 22172  0179B6  20E2               	addwfc	fsr1h,w,c
 22173  0179B8  6EDA               	movwf	fsr2h,c
 22174                           
 22175                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 22176  0179BA  0E08               	movlw	8
 22177  0179BC  6E01               	movwf	btemp^0,c
 22178  0179BE  0EEE               	movlw	-18
 22179  0179C0                     us647999:
 22180  0179C0  006F FF7B FFE3     	movff	postinc2,plusw1
 22181  0179C6  28E8               	incf	wreg,w,c
 22182  0179C8  2E01               	decfsz	btemp^0,f,c
 22183  0179CA  D7FA               	bra	us647999
 22184                           
 22185                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 22186  0179CC  0EF6               	movlw	246
 22187  0179CE  26E1               	addwf	fsr1l,f,c
 22188  0179D0  0EFF               	movlw	255
 22189  0179D2  22E2               	addwfc	fsr1h,f,c
 22190  0179D4  0012               	return		;funcret
 22191  0179D6                     __end_of___aodiv:
 22192                           	opt callstack 0
 22193                           
 22194 ;; *************** function _ctoa *****************
 22195 ;; Defined at:
 22196 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22197 ;; Parameters:    Size  Location     Type
 22198 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22199 ;;		 -> f(6), NULL(0), 
 22200 ;;  c               1  [STACK] unsigned char 
 22201 ;; Auto vars:     Size  Location     Type
 22202 ;;  w               2  [STACK] int 
 22203 ;;  l               2    0        int 
 22204 ;; Return value:  Size  Location     Type
 22205 ;;                  2  [STACK] int 
 22206 ;; Registers used:
 22207 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 22208 ;; Tracked objects:
 22209 ;;		On entry : 0/0
 22210 ;;		On exit  : 0/0
 22211 ;;		Unchanged: 0/0
 22212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22217 ;;Total ram usage:        0 bytes
 22218 ;; Hardware stack levels used:    1
 22219 ;; Hardware stack levels required when called:   20
 22220 ;; This function calls:
 22221 ;;		_pad
 22222 ;; This function is called by:
 22223 ;;		_vfpfcnvrt
 22224 ;; This function uses a reentrant model
 22225 ;;
 22226                           
 22227                           	psect	text77
 22228  01AF3A                     __ptext77:
 22229                           	opt callstack 0
 22230  01AF3A                     _ctoa:
 22231                           	opt callstack 0
 22232                           
 22233                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22234  01AF3A  52E6               	movf	postinc1,f,c
 22235  01AF3C  52E6               	movf	postinc1,f,c
 22236                           
 22237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 22238                           
 22239                           ;incstack = 0
 22240 ;; hardware stack exceeded
 22241  01AF3E  503A               	movf	_width^0,w,c
 22242  01AF40  103B               	iorwf	(_width+1)^0,w,c
 22243  01AF42  A4D8               	btfss	status,2,c
 22244  01AF44  D009               	goto	l12200
 22245                           
 22246                           ;stkvar	_w @ sp[(-2)+0]
 22247  01AF46  0EFE               	movlw	-2
 22248  01AF48  0060  F0EB  FFE3   	movff	_width,plusw1
 22249  01AF4E  0EFF               	movlw	-1
 22250  01AF50  0060  F0EF  FFE3   	movff	_width+1,plusw1
 22251  01AF56  D016               	goto	l12202
 22252  01AF58                     l12200:
 22253  01AF58  0EFF               	movlw	255
 22254  01AF5A  6E0B               	movwf	(btemp+10)^0,c
 22255  01AF5C  0EFF               	movlw	255
 22256  01AF5E  6E0C               	movwf	(btemp+11)^0,c
 22257  01AF60  0060  F0E8  F009   	movff	_width,btemp+8
 22258  01AF66  0060  F0EC  F00A   	movff	_width+1,btemp+9
 22259  01AF6C  500B               	movf	(btemp+10)^0,w,c
 22260  01AF6E  2609               	addwf	(btemp+8)^0,f,c
 22261  01AF70  500C               	movf	(btemp+11)^0,w,c
 22262  01AF72  220A               	addwfc	(btemp+9)^0,f,c
 22263                           
 22264                           ;stkvar	_w @ sp[(-2)+0]
 22265  01AF74  0EFE               	movlw	-2
 22266  01AF76  0060  F027  FFE3   	movff	btemp+8,plusw1
 22267  01AF7C  0EFF               	movlw	-1
 22268  01AF7E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22269  01AF84                     l12202:
 22270                           
 22271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 22272                           ;stkvar	_c @ sp[(-2)+-3]
 22273  01AF84  0EFB               	movlw	-5
 22274  01AF86  006F FF8C  F297    	movff	plusw1,_dbuf
 22275                           
 22276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 22277  01AF8C  0102               	movlb	2	; () banked
 22278  01AF8E  6B98               	clrf	(_dbuf+1)& (0+255),b
 22279                           
 22280                           ; BSR set to: 2
 22281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 22282                           ;stkvar	_w @ sp[(-2)+0]
 22283  01AF90  0EFE               	movlw	-2
 22284  01AF92  006F FF8F FFE6     	movff	plusw1,postinc1
 22285  01AF98  006F FF8F FFE6     	movff	plusw1,postinc1
 22286  01AF9E  0E97               	movlw	low _dbuf
 22287  01AFA0  6EE6               	movwf	postinc1,c
 22288  01AFA2  0E02               	movlw	high _dbuf
 22289  01AFA4  6EE6               	movwf	postinc1,c
 22290                           
 22291                           ;stkvar	_fp @ sp[(-6)+-2]
 22292  01AFA6  0EF8               	movlw	-8
 22293  01AFA8  006F FF8F FFE6     	movff	plusw1,postinc1
 22294  01AFAE  006F FF8F FFE6     	movff	plusw1,postinc1
 22295  01AFB4  ECAC  F0CE         	call	_pad	;wreg free
 22296                           
 22297                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 22298  01AFB8  0EFB               	movlw	251
 22299  01AFBA  26E1               	addwf	fsr1l,f,c
 22300  01AFBC  0EFF               	movlw	255
 22301  01AFBE  22E2               	addwfc	fsr1h,f,c
 22302  01AFC0  0012               	return		;funcret
 22303  01AFC2                     __end_of_ctoa:
 22304                           	opt callstack 0
 22305                           
 22306 ;; *************** function _pad *****************
 22307 ;; Defined at:
 22308 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22309 ;; Parameters:    Size  Location     Type
 22310 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22311 ;;		 -> f(6), NULL(0), 
 22312 ;;  buf             2  [STACK] PTR unsigned char 
 22313 ;;		 -> dbuf(80), 
 22314 ;;  p               2  [STACK] int 
 22315 ;; Auto vars:     Size  Location     Type
 22316 ;;  w               2  [STACK] int 
 22317 ;;  i               2  [STACK] int 
 22318 ;; Return value:  Size  Location     Type
 22319 ;;                  2  [STACK] int 
 22320 ;; Registers used:
 22321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 22322 ;; Tracked objects:
 22323 ;;		On entry : 0/2
 22324 ;;		On exit  : 0/0
 22325 ;;		Unchanged: 0/0
 22326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22331 ;;Total ram usage:        0 bytes
 22332 ;; Hardware stack levels used:    1
 22333 ;; Hardware stack levels required when called:   19
 22334 ;; This function calls:
 22335 ;;		_fputc
 22336 ;;		_fputs
 22337 ;;		_strlen
 22338 ;; This function is called by:
 22339 ;;		_ctoa
 22340 ;;		_dtoa
 22341 ;;		_efgtoa
 22342 ;;		_utoa
 22343 ;;		_xtoa
 22344 ;; This function uses a reentrant model
 22345 ;;
 22346                           
 22347                           	psect	text78
 22348  019D58                     __ptext78:
 22349                           	opt callstack 0
 22350  019D58                     _pad:
 22351                           	opt callstack 0
 22352                           
 22353                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22354  019D58  52E6               	movf	postinc1,f,c
 22355  019D5A  52E6               	movf	postinc1,f,c
 22356  019D5C  52E6               	movf	postinc1,f,c
 22357  019D5E  52E6               	movf	postinc1,f,c
 22358                           
 22359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 22360                           
 22361                           ;incstack = 0
 22362 ;; hardware stack exceeded
 22363  019D60  A03E               	btfss	_flags^0,0,c
 22364  019D62  D010               	goto	l12162
 22365                           
 22366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 22367                           ;stkvar	_fp @ sp[(-4)+-2]
 22368  019D64  0EFA               	movlw	-6
 22369  019D66  006F FF8F FFE6     	movff	plusw1,postinc1
 22370  019D6C  006F FF8F FFE6     	movff	plusw1,postinc1
 22371                           
 22372                           ;stkvar	_buf @ sp[(-6)+-4]
 22373  019D72  0EF6               	movlw	-10
 22374  019D74  006F FF8F FFE6     	movff	plusw1,postinc1
 22375  019D7A  006F FF8F FFE6     	movff	plusw1,postinc1
 22376  019D80  ECBF  F0D6         	call	_fputs	;wreg free
 22377  019D84                     l12162:
 22378                           
 22379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 22380                           ;stkvar	_p @ sp[(-4)+-6]
 22381  019D84  0EF7               	movlw	-9
 22382  019D86  BEE3               	btfsc	plusw1,7,c
 22383  019D88  D011               	goto	l12166
 22384                           
 22385                           ;stkvar	_p @ sp[(-4)+-6]
 22386                           ;stkvar	_w @ sp[(-4)+0]
 22387  019D8A  0EF6               	movlw	-10
 22388  019D8C  006F FF8C  F001    	movff	plusw1,btemp
 22389  019D92  0EFC               	movlw	-4
 22390  019D94  0060  F007  FFE3   	movff	btemp,plusw1
 22391  019D9A  0EF7               	movlw	-9
 22392  019D9C  006F FF8C  F001    	movff	plusw1,btemp
 22393  019DA2  0EFD               	movlw	-3
 22394  019DA4  0060  F007  FFE3   	movff	btemp,plusw1
 22395  019DAA  D004               	goto	l2224
 22396  019DAC                     l12166:
 22397                           
 22398                           ;stkvar	_w @ sp[(-4)+0]
 22399  019DAC  0EFC               	movlw	-4
 22400  019DAE  6AE3               	clrf	plusw1,c
 22401  019DB0  0EFD               	movlw	-3
 22402  019DB2  6AE3               	clrf	plusw1,c
 22403  019DB4                     l2224:
 22404                           
 22405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 22406                           ;stkvar	_i @ sp[(-4)+2]
 22407  019DB4  0EFE               	movlw	-2
 22408  019DB6  6AE3               	clrf	plusw1,c
 22409  019DB8  0EFF               	movlw	-1
 22410  019DBA  6AE3               	clrf	plusw1,c
 22411                           
 22412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 22413  019DBC  D01E               	goto	l12172
 22414  019DBE                     l12168:
 22415                           
 22416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 22417                           ;stkvar	_fp @ sp[(-4)+-2]
 22418  019DBE  0EFA               	movlw	-6
 22419  019DC0  006F FF8F FFE6     	movff	plusw1,postinc1
 22420  019DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 22421  019DCC  0E20               	movlw	32
 22422  019DCE  6EE6               	movwf	postinc1,c
 22423  019DD0  0E00               	movlw	0
 22424  019DD2  6EE6               	movwf	postinc1,c
 22425  019DD4  EC02  F0CD         	call	_fputc	;wreg free
 22426                           
 22427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 22428                           ;stkvar	_i @ sp[(-4)+2]
 22429  019DD8  0EFE               	movlw	-2
 22430  019DDA  50E3               	movf	plusw1,w,c
 22431  019DDC  0F01               	addlw	1
 22432  019DDE  6E01               	movwf	btemp^0,c
 22433  019DE0  0EFE               	movlw	-2
 22434  019DE2  0060  F007  FFE3   	movff	btemp,plusw1
 22435  019DE8  6A01               	clrf	btemp^0,c
 22436  019DEA  0EFF               	movlw	-1
 22437  019DEC  50E3               	movf	plusw1,w,c
 22438  019DEE  2001               	addwfc	btemp^0,w,c
 22439  019DF0  6E01               	movwf	btemp^0,c
 22440  019DF2  0EFF               	movlw	-1
 22441  019DF4  0060  F007  FFE3   	movff	btemp,plusw1
 22442  019DFA                     l12172:
 22443                           
 22444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 22445                           ;stkvar	_w @ sp[(-4)+0]
 22446                           ;stkvar	_i @ sp[(-4)+2]
 22447  019DFA  50E1               	movf	fsr1l,w,c
 22448  019DFC  0FFE               	addlw	-2
 22449  019DFE  6ED9               	movwf	fsr2l,c
 22450  019E00  50E2               	movf	fsr1h,w,c
 22451  019E02  6EDA               	movwf	fsr2h,c
 22452  019E04  0EFF               	movlw	255
 22453  019E06  22DA               	addwfc	fsr2h,f,c
 22454  019E08  0EFC               	movlw	-4
 22455  019E0A  50E3               	movf	plusw1,w,c
 22456  019E0C  5CDE               	subwf	postinc2,w,c
 22457  019E0E  50DE               	movf	postinc2,w,c
 22458  019E10  0A80               	xorlw	128
 22459  019E12  6E01               	movwf	btemp^0,c
 22460  019E14  0EFD               	movlw	-3
 22461  019E16  50E3               	movf	plusw1,w,c
 22462  019E18  0A80               	xorlw	128
 22463  019E1A  5801               	subwfb	btemp^0,w,c
 22464  019E1C  A0D8               	btfss	status,0,c
 22465  019E1E  D7CF               	goto	l12168
 22466                           
 22467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 22468  019E20  B03E               	btfsc	_flags^0,0,c
 22469  019E22  D010               	goto	l12176
 22470                           
 22471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 22472                           ;stkvar	_fp @ sp[(-4)+-2]
 22473  019E24  0EFA               	movlw	-6
 22474  019E26  006F FF8F FFE6     	movff	plusw1,postinc1
 22475  019E2C  006F FF8F FFE6     	movff	plusw1,postinc1
 22476                           
 22477                           ;stkvar	_buf @ sp[(-6)+-4]
 22478  019E32  0EF6               	movlw	-10
 22479  019E34  006F FF8F FFE6     	movff	plusw1,postinc1
 22480  019E3A  006F FF8F FFE6     	movff	plusw1,postinc1
 22481  019E40  ECBF  F0D6         	call	_fputs	;wreg free
 22482  019E44                     l12176:
 22483                           
 22484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 22485                           ;stkvar	_w @ sp[(-4)+0]
 22486                           ;stkvar	_buf @ sp[(-4)+-4]
 22487  019E44  0EF8               	movlw	-8
 22488  019E46  006F FF8F FFE6     	movff	plusw1,postinc1
 22489  019E4C  006F FF8F FFE6     	movff	plusw1,postinc1
 22490  019E52  EC6E  F0D6         	call	_strlen	;wreg free
 22491  019E56  0EFC               	movlw	-4
 22492  019E58  50E3               	movf	plusw1,w,c
 22493  019E5A  2601               	addwf	btemp^0,f,c
 22494  019E5C  0EFD               	movlw	-3
 22495  019E5E  50E3               	movf	plusw1,w,c
 22496  019E60  2202               	addwfc	(btemp+1)^0,f,c
 22497                           
 22498                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 22499  019E62  0EF6               	movlw	246
 22500  019E64  26E1               	addwf	fsr1l,f,c
 22501  019E66  0EFF               	movlw	255
 22502  019E68  22E2               	addwfc	fsr1h,f,c
 22503  019E6A  0012               	return		;funcret
 22504  019E6C                     __end_of_pad:
 22505                           	opt callstack 0
 22506                           
 22507 ;; *************** function _strlen *****************
 22508 ;; Defined at:
 22509 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 22510 ;; Parameters:    Size  Location     Type
 22511 ;;  s               2  [STACK] PTR const unsigned char 
 22512 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 22513 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 22514 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 22515 ;;		 -> V(191), 
 22516 ;; Auto vars:     Size  Location     Type
 22517 ;;  a               2  [STACK] PTR const unsigned char 
 22518 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 22519 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 22520 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 22521 ;;		 -> V(191), 
 22522 ;; Return value:  Size  Location     Type
 22523 ;;                  2  [STACK] unsigned int 
 22524 ;; Registers used:
 22525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 22526 ;; Tracked objects:
 22527 ;;		On entry : 0/0
 22528 ;;		On exit  : 0/0
 22529 ;;		Unchanged: 0/0
 22530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22535 ;;Total ram usage:        0 bytes
 22536 ;; Hardware stack levels used:    1
 22537 ;; Hardware stack levels required when called:   15
 22538 ;; This function calls:
 22539 ;;		Nothing
 22540 ;; This function is called by:
 22541 ;;		_eaDogM_WriteString
 22542 ;;		_spinners
 22543 ;;		_calc_bsoc
 22544 ;;		_pad
 22545 ;;		_stoa
 22546 ;; This function uses a reentrant model
 22547 ;;
 22548                           
 22549                           	psect	text79
 22550  01ACDC                     __ptext79:
 22551                           	opt callstack 0
 22552  01ACDC                     _strlen:
 22553                           	opt callstack 0
 22554                           
 22555                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22556  01ACDC  52E6               	movf	postinc1,f,c
 22557  01ACDE  52E6               	movf	postinc1,f,c
 22558                           
 22559                           ;stkvar	_s @ sp[(-2)+-2]
 22560                           
 22561                           ;incstack = 0
 22562 ;; hardware stack exceeded
 22563  01ACE0  0EFC               	movlw	-4
 22564  01ACE2  006F FF8C  F00B    	movff	plusw1,btemp+10
 22565  01ACE8  0EFD               	movlw	-3
 22566  01ACEA  006F FF8C  F00C    	movff	plusw1,btemp+11
 22567                           
 22568                           ;stkvar	_a @ sp[(-2)+0]
 22569  01ACF0  0EFF               	movlw	-1
 22570  01ACF2  0060  F033  FFE3   	movff	btemp+11,plusw1
 22571  01ACF8  0EFE               	movlw	-2
 22572  01ACFA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22573  01AD00  D011               	goto	l7876
 22574  01AD02                     l7874:
 22575                           
 22576                           ;stkvar	_s @ sp[(-2)+-2]
 22577  01AD02  0EFC               	movlw	-4
 22578  01AD04  50E3               	movf	plusw1,w,c
 22579  01AD06  0F01               	addlw	1
 22580  01AD08  6E01               	movwf	btemp^0,c
 22581  01AD0A  0EFC               	movlw	-4
 22582  01AD0C  0060  F007  FFE3   	movff	btemp,plusw1
 22583  01AD12  6A01               	clrf	btemp^0,c
 22584  01AD14  0EFD               	movlw	-3
 22585  01AD16  50E3               	movf	plusw1,w,c
 22586  01AD18  2001               	addwfc	btemp^0,w,c
 22587  01AD1A  6E01               	movwf	btemp^0,c
 22588  01AD1C  0EFD               	movlw	-3
 22589  01AD1E  0060  F007  FFE3   	movff	btemp,plusw1
 22590  01AD24                     l7876:
 22591                           
 22592                           ;stkvar	_s @ sp[(-2)+-2]
 22593  01AD24  0EFC               	movlw	-4
 22594  01AD26  006F FF8F FFF6     	movff	plusw1,tblptrl
 22595  01AD2C  0EFD               	movlw	-3
 22596  01AD2E  006F FF8F FFF7     	movff	plusw1,tblptrh
 22597  01AD34  0E00               	movlw	low (__mediumconst shr (0+16))
 22598  01AD36  6EF8               	movwf	tblptru,c
 22599  01AD38  0E1F               	movlw	(high __ramtop+-1)
 22600  01AD3A  64F7               	cpfsgt	tblptrh,c
 22601  01AD3C  D003               	bra	u5487
 22602  01AD3E  0008               	tblrd		*
 22603  01AD40  50F5               	movf	tablat,w,c
 22604  01AD42  D007               	bra	u5480
 22605  01AD44                     u5487:
 22606  01AD44  006F FFDB FFE9     	movff	tblptrl,fsr0l
 22607  01AD4A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 22608  01AD50  50EF               	movf	indf0,w,c
 22609  01AD52                     u5480:
 22610  01AD52  0900               	iorlw	0
 22611  01AD54  A4D8               	btfss	status,2,c
 22612  01AD56  D7D5               	goto	l7874
 22613                           
 22614                           ;stkvar	_a @ sp[(-2)+0]
 22615                           ;stkvar	_s @ sp[(-2)+-2]
 22616  01AD58  0EFC               	movlw	-4
 22617  01AD5A  006F FF8C  F001    	movff	plusw1,btemp
 22618  01AD60  0EFD               	movlw	-3
 22619  01AD62  006F FF8C  F002    	movff	plusw1,btemp+1
 22620  01AD68  0EFE               	movlw	-2
 22621  01AD6A  50E3               	movf	plusw1,w,c
 22622  01AD6C  5E01               	subwf	btemp^0,f,c
 22623  01AD6E  0EFF               	movlw	-1
 22624  01AD70  50E3               	movf	plusw1,w,c
 22625  01AD72  5A02               	subwfb	(btemp+1)^0,f,c
 22626                           
 22627                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 22628  01AD74  52E5               	movf	postdec1,f,c
 22629  01AD76  52E5               	movf	postdec1,f,c
 22630  01AD78  52E5               	movf	postdec1,f,c
 22631  01AD7A  52E5               	movf	postdec1,f,c
 22632  01AD7C  0012               	return		;funcret
 22633  01AD7E                     __end_of_strlen:
 22634                           	opt callstack 0
 22635                           
 22636 ;; *************** function _fputs *****************
 22637 ;; Defined at:
 22638 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 22639 ;; Parameters:    Size  Location     Type
 22640 ;;  s               2  [STACK] PTR const unsigned char 
 22641 ;;		 -> dbuf(80), 
 22642 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22643 ;;		 -> f(6), NULL(0), 
 22644 ;; Auto vars:     Size  Location     Type
 22645 ;;  i               2  [STACK] int 
 22646 ;;  c               1  [STACK] unsigned char 
 22647 ;; Return value:  Size  Location     Type
 22648 ;;                  2  [STACK] int 
 22649 ;; Registers used:
 22650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 22651 ;; Tracked objects:
 22652 ;;		On entry : 0/2
 22653 ;;		On exit  : 0/0
 22654 ;;		Unchanged: 0/0
 22655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22660 ;;Total ram usage:        0 bytes
 22661 ;; Hardware stack levels used:    1
 22662 ;; Hardware stack levels required when called:   18
 22663 ;; This function calls:
 22664 ;;		_fputc
 22665 ;; This function is called by:
 22666 ;;		_pad
 22667 ;; This function uses a reentrant model
 22668 ;;
 22669                           
 22670                           	psect	text80
 22671  01AD7E                     __ptext80:
 22672                           	opt callstack 0
 22673  01AD7E                     _fputs:
 22674                           	opt callstack 0
 22675                           
 22676                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22677  01AD7E  52E6               	movf	postinc1,f,c
 22678  01AD80  52E6               	movf	postinc1,f,c
 22679  01AD82  52E6               	movf	postinc1,f,c
 22680                           
 22681                           ;stkvar	_i @ sp[(-3)+0]
 22682                           
 22683                           ;incstack = 0
 22684 ;; hardware stack exceeded
 22685  01AD84  0EFD               	movlw	-3
 22686  01AD86  6AE3               	clrf	plusw1,c
 22687  01AD88  0EFE               	movlw	-2
 22688  01AD8A  6AE3               	clrf	plusw1,c
 22689  01AD8C  D01F               	goto	l12114
 22690  01AD8E                     l12110:
 22691                           
 22692                           ;stkvar	_fp @ sp[(-3)+-4]
 22693  01AD8E  0EF9               	movlw	-7
 22694  01AD90  006F FF8F FFE6     	movff	plusw1,postinc1
 22695  01AD96  006F FF8F FFE6     	movff	plusw1,postinc1
 22696                           
 22697                           ;stkvar	_c @ sp[(-5)+2]
 22698  01AD9C  0EFD               	movlw	-3
 22699  01AD9E  50E3               	movf	plusw1,w,c
 22700  01ADA0  6EE6               	movwf	postinc1,c
 22701  01ADA2  0E00               	movlw	0
 22702  01ADA4  6EE6               	movwf	postinc1,c
 22703  01ADA6  EC02  F0CD         	call	_fputc	;wreg free
 22704                           
 22705                           ;stkvar	_i @ sp[(-3)+0]
 22706  01ADAA  0EFD               	movlw	-3
 22707  01ADAC  50E3               	movf	plusw1,w,c
 22708  01ADAE  0F01               	addlw	1
 22709  01ADB0  6E01               	movwf	btemp^0,c
 22710  01ADB2  0EFD               	movlw	-3
 22711  01ADB4  0060  F007  FFE3   	movff	btemp,plusw1
 22712  01ADBA  6A01               	clrf	btemp^0,c
 22713  01ADBC  0EFE               	movlw	-2
 22714  01ADBE  50E3               	movf	plusw1,w,c
 22715  01ADC0  2001               	addwfc	btemp^0,w,c
 22716  01ADC2  6E01               	movwf	btemp^0,c
 22717  01ADC4  0EFE               	movlw	-2
 22718  01ADC6  0060  F007  FFE3   	movff	btemp,plusw1
 22719  01ADCC                     l12114:
 22720                           
 22721                           ;stkvar	_i @ sp[(-3)+0]
 22722  01ADCC  0EFD               	movlw	-3
 22723  01ADCE  006F FF8C  F00B    	movff	plusw1,btemp+10
 22724  01ADD4  0EFE               	movlw	-2
 22725  01ADD6  006F FF8C  F00C    	movff	plusw1,btemp+11
 22726                           
 22727                           ;stkvar	_s @ sp[(-3)+-2]
 22728  01ADDC  0EFB               	movlw	-5
 22729  01ADDE  006F FF8C  F009    	movff	plusw1,btemp+8
 22730  01ADE4  0EFC               	movlw	-4
 22731  01ADE6  006F FF8C  F00A    	movff	plusw1,btemp+9
 22732  01ADEC  500B               	movf	(btemp+10)^0,w,c
 22733  01ADEE  2409               	addwf	(btemp+8)^0,w,c
 22734  01ADF0  6ED9               	movwf	fsr2l,c
 22735  01ADF2  500C               	movf	(btemp+11)^0,w,c
 22736  01ADF4  200A               	addwfc	(btemp+9)^0,w,c
 22737  01ADF6  6EDA               	movwf	fsr2h,c
 22738  01ADF8  50DF               	movf	indf2,w,c
 22739  01ADFA  6E0C               	movwf	(btemp+11)^0,c
 22740                           
 22741                           ;stkvar	_c @ sp[(-3)+2]
 22742  01ADFC  0EFF               	movlw	-1
 22743  01ADFE  0060  F033  FFE3   	movff	btemp+11,plusw1
 22744  01AE04  0EFF               	movlw	-1
 22745  01AE06  50E3               	movf	plusw1,w,c
 22746  01AE08  A4D8               	btfss	status,2,c
 22747  01AE0A  D7C1               	goto	l12110
 22748                           
 22749                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22750  01AE0C  0EF9               	movlw	249
 22751  01AE0E  26E1               	addwf	fsr1l,f,c
 22752  01AE10  0EFF               	movlw	255
 22753  01AE12  22E2               	addwfc	fsr1h,f,c
 22754  01AE14  0012               	return		;funcret
 22755  01AE16                     __end_of_fputs:
 22756                           	opt callstack 0
 22757                           
 22758 ;; *************** function _fputc *****************
 22759 ;; Defined at:
 22760 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 22761 ;; Parameters:    Size  Location     Type
 22762 ;;  c               2  [STACK] int 
 22763 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22764 ;;		 -> f(6), NULL(0), 
 22765 ;; Auto vars:     Size  Location     Type
 22766 ;;		None
 22767 ;; Return value:  Size  Location     Type
 22768 ;;                  2  [STACK] int 
 22769 ;; Registers used:
 22770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 22771 ;; Tracked objects:
 22772 ;;		On entry : 0/0
 22773 ;;		On exit  : 0/0
 22774 ;;		Unchanged: 0/0
 22775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22780 ;;Total ram usage:        0 bytes
 22781 ;; Hardware stack levels used:    1
 22782 ;; Hardware stack levels required when called:   17
 22783 ;; This function calls:
 22784 ;;		_putch
 22785 ;; This function is called by:
 22786 ;;		_pad
 22787 ;;		_stoa
 22788 ;;		_vfpfcnvrt
 22789 ;;		_fputs
 22790 ;; This function uses a reentrant model
 22791 ;;
 22792                           
 22793                           	psect	text81
 22794  019A04                     __ptext81:
 22795                           	opt callstack 0
 22796  019A04                     _fputc:
 22797                           	opt callstack 0
 22798                           
 22799                           ;stkvar	_fp @ sp[(0)+-4]
 22800                           
 22801                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22802                           ;incstack = 0
 22803 ;; hardware stack exceeded
 22804  019A04  0EFC               	movlw	-4
 22805  019A06  006F FF8C  F001    	movff	plusw1,btemp
 22806  019A0C  0EFD               	movlw	-3
 22807  019A0E  50E3               	movf	plusw1,w,c
 22808  019A10  1001               	iorwf	btemp^0,w,c
 22809  019A12  B4D8               	btfsc	status,2,c
 22810  019A14  D009               	goto	u10870
 22811                           
 22812                           ;stkvar	_fp @ sp[(0)+-4]
 22813  019A16  0EFC               	movlw	-4
 22814  019A18  006F FF8C  F001    	movff	plusw1,btemp
 22815  019A1E  0EFD               	movlw	-3
 22816  019A20  50E3               	movf	plusw1,w,c
 22817  019A22  1001               	iorwf	btemp^0,w,c
 22818  019A24  A4D8               	btfss	status,2,c
 22819  019A26  D006               	goto	l12098
 22820  019A28                     u10870:
 22821                           
 22822                           ;stkvar	_c @ sp[(0)+-2]
 22823  019A28  0EFE               	movlw	-2
 22824  019A2A  50E3               	movf	plusw1,w,c
 22825  019A2C  6EE6               	movwf	postinc1,c
 22826  019A2E  EC2A  F0E2         	call	_putch	;wreg free
 22827  019A32  D075               	goto	l3270
 22828  019A34                     l12098:
 22829                           
 22830                           ;stkvar	_fp @ sp[(0)+-4]
 22831  019A34  0EFC               	movlw	-4
 22832  019A36  006F FF8C  F00B    	movff	plusw1,btemp+10
 22833  019A3C  0EFD               	movlw	-3
 22834  019A3E  006F FF8C  F00C    	movff	plusw1,btemp+11
 22835  019A44  0E04               	movlw	4
 22836  019A46  240B               	addwf	(btemp+10)^0,w,c
 22837  019A48  6ED9               	movwf	fsr2l,c
 22838  019A4A  0E00               	movlw	0
 22839  019A4C  200C               	addwfc	(btemp+11)^0,w,c
 22840  019A4E  6EDA               	movwf	fsr2h,c
 22841  019A50  50DE               	movf	postinc2,w,c
 22842  019A52  10DE               	iorwf	postinc2,w,c
 22843  019A54  B4D8               	btfsc	status,2,c
 22844  019A56  D026               	goto	u10890
 22845                           
 22846                           ;stkvar	_fp @ sp[(0)+-4]
 22847  019A58  0EFC               	movlw	-4
 22848  019A5A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22849  019A60  0EFD               	movlw	-3
 22850  019A62  006F FF8C  F00C    	movff	plusw1,btemp+11
 22851  019A68  0E04               	movlw	4
 22852  019A6A  240B               	addwf	(btemp+10)^0,w,c
 22853  019A6C  6ED9               	movwf	fsr2l,c
 22854  019A6E  0E00               	movlw	0
 22855  019A70  200C               	addwfc	(btemp+11)^0,w,c
 22856  019A72  6EDA               	movwf	fsr2h,c
 22857                           
 22858                           ;stkvar	_fp @ sp[(0)+-4]
 22859  019A74  0EFC               	movlw	-4
 22860  019A76  006F FF8C  F00B    	movff	plusw1,btemp+10
 22861  019A7C  0EFD               	movlw	-3
 22862  019A7E  006F FF8C  F00C    	movff	plusw1,btemp+11
 22863  019A84  0E02               	movlw	2
 22864  019A86  240B               	addwf	(btemp+10)^0,w,c
 22865  019A88  6EE9               	movwf	fsr0l,c
 22866  019A8A  0E00               	movlw	0
 22867  019A8C  200C               	addwfc	(btemp+11)^0,w,c
 22868  019A8E  6EEA               	movwf	fsr0h,c
 22869  019A90  50DE               	movf	postinc2,w,c
 22870  019A92  5CEE               	subwf	postinc0,w,c
 22871  019A94  50EE               	movf	postinc0,w,c
 22872  019A96  0A80               	xorlw	128
 22873  019A98  6E01               	movwf	btemp^0,c
 22874  019A9A  50DE               	movf	postinc2,w,c
 22875  019A9C  0A80               	xorlw	128
 22876  019A9E  5801               	subwfb	btemp^0,w,c
 22877  019AA0  B0D8               	btfsc	status,0,c
 22878  019AA2  D03D               	goto	l3270
 22879  019AA4                     u10890:
 22880                           
 22881                           ;stkvar	_c @ sp[(0)+-2]
 22882                           ;stkvar	_fp @ sp[(0)+-4]
 22883  019AA4  0EFC               	movlw	-4
 22884  019AA6  006F FF8C  F00B    	movff	plusw1,btemp+10
 22885  019AAC  0EFD               	movlw	-3
 22886  019AAE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22887  019AB4  0E02               	movlw	2
 22888  019AB6  240B               	addwf	(btemp+10)^0,w,c
 22889  019AB8  6ED9               	movwf	fsr2l,c
 22890  019ABA  0E00               	movlw	0
 22891  019ABC  200C               	addwfc	(btemp+11)^0,w,c
 22892  019ABE  6EDA               	movwf	fsr2h,c
 22893  019AC0  006F FF78  F00B    	movff	postinc2,btemp+10
 22894  019AC6  006F FF74  F00C    	movff	postdec2,btemp+11
 22895                           
 22896                           ;stkvar	_fp @ sp[(0)+-4]
 22897  019ACC  0EFC               	movlw	-4
 22898  019ACE  006F FF8F FFD9     	movff	plusw1,fsr2l
 22899  019AD4  0EFD               	movlw	-3
 22900  019AD6  006F FF8F FFDA     	movff	plusw1,fsr2h
 22901  019ADC  006F FF78  F009    	movff	postinc2,btemp+8
 22902  019AE2  006F FF74  F00A    	movff	postdec2,btemp+9
 22903  019AE8  500B               	movf	(btemp+10)^0,w,c
 22904  019AEA  2409               	addwf	(btemp+8)^0,w,c
 22905  019AEC  6ED9               	movwf	fsr2l,c
 22906  019AEE  500C               	movf	(btemp+11)^0,w,c
 22907  019AF0  200A               	addwfc	(btemp+9)^0,w,c
 22908  019AF2  6EDA               	movwf	fsr2h,c
 22909  019AF4  0EFE               	movlw	-2
 22910  019AF6  006F FF8F FFDF     	movff	plusw1,indf2
 22911                           
 22912                           ;stkvar	_fp @ sp[(0)+-4]
 22913  019AFC  0EFC               	movlw	-4
 22914  019AFE  006F FF8C  F00B    	movff	plusw1,btemp+10
 22915  019B04  0EFD               	movlw	-3
 22916  019B06  006F FF8C  F00C    	movff	plusw1,btemp+11
 22917  019B0C  0E02               	movlw	2
 22918  019B0E  240B               	addwf	(btemp+10)^0,w,c
 22919  019B10  6ED9               	movwf	fsr2l,c
 22920  019B12  0E00               	movlw	0
 22921  019B14  200C               	addwfc	(btemp+11)^0,w,c
 22922  019B16  6EDA               	movwf	fsr2h,c
 22923  019B18  2ADE               	incf	postinc2,f,c
 22924  019B1A  0E00               	movlw	0
 22925  019B1C  22DD               	addwfc	postdec2,f,c
 22926  019B1E                     l3270:
 22927                           
 22928                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22929  019B1E  52E5               	movf	postdec1,f,c
 22930  019B20  52E5               	movf	postdec1,f,c
 22931  019B22  52E5               	movf	postdec1,f,c
 22932  019B24  52E5               	movf	postdec1,f,c
 22933  019B26  0012               	return		;funcret
 22934  019B28                     __end_of_fputc:
 22935                           	opt callstack 0
 22936                           
 22937 ;; *************** function _putch *****************
 22938 ;; Defined at:
 22939 ;;		line 421 in file "eadog.c"
 22940 ;; Parameters:    Size  Location     Type
 22941 ;;  c               1  [STACK] unsigned char 
 22942 ;; Auto vars:     Size  Location     Type
 22943 ;;		None
 22944 ;; Return value:  Size  Location     Type
 22945 ;;                  1  [STACK] void 
 22946 ;; Registers used:
 22947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22948 ;; Tracked objects:
 22949 ;;		On entry : 0/0
 22950 ;;		On exit  : 0/0
 22951 ;;		Unchanged: 0/0
 22952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22957 ;;Total ram usage:        0 bytes
 22958 ;; Hardware stack levels used:    1
 22959 ;; Hardware stack levels required when called:   16
 22960 ;; This function calls:
 22961 ;;		_ringBufS_put_dma
 22962 ;; This function is called by:
 22963 ;;		_fputc
 22964 ;; This function uses a reentrant model
 22965 ;;
 22966                           
 22967                           	psect	text82
 22968  01C454                     __ptext82:
 22969                           	opt callstack 0
 22970  01C454                     _putch:
 22971                           	opt callstack 0
 22972                           
 22973                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 22974                           ;stkvar	_c @ sp[(0)+-1]
 22975                           
 22976                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22977                           ;incstack = 0
 22978 ;; hardware stack exceeded
 22979  01C454  0EFF               	movlw	-1
 22980  01C456  50E3               	movf	plusw1,w,c
 22981  01C458  6EE6               	movwf	postinc1,c
 22982  01C45A  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
 22983  01C460  0060  F753  FFE6   	movff	_spi_link+7,postinc1
 22984  01C466  EC72  F0D5         	call	_ringBufS_put_dma	;wreg free
 22985                           
 22986                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 22987  01C46A  52E5               	movf	postdec1,f,c
 22988  01C46C  0012               	return		;funcret
 22989  01C46E                     __end_of_putch:
 22990                           	opt callstack 0
 22991                           
 22992 ;; *************** function _ringBufS_put_dma *****************
 22993 ;; Defined at:
 22994 ;;		line 67 in file "ringbufs.c"
 22995 ;; Parameters:    Size  Location     Type
 22996 ;;  _this           2  [STACK] PTR struct ringBufS_t
 22997 ;;		 -> ring_buf1(67), 
 22998 ;;  c               1  [STACK] const unsigned char 
 22999 ;; Auto vars:     Size  Location     Type
 23000 ;;		None
 23001 ;; Return value:  Size  Location     Type
 23002 ;;                  1  [STACK] void 
 23003 ;; Registers used:
 23004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 23005 ;; Tracked objects:
 23006 ;;		On entry : 0/0
 23007 ;;		On exit  : 0/0
 23008 ;;		Unchanged: 0/0
 23009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23014 ;;Total ram usage:        0 bytes
 23015 ;; Hardware stack levels used:    1
 23016 ;; Hardware stack levels required when called:   15
 23017 ;; This function calls:
 23018 ;;		Nothing
 23019 ;; This function is called by:
 23020 ;;		_putch
 23021 ;; This function uses a reentrant model
 23022 ;;
 23023                           
 23024                           	psect	text83
 23025  01AAE4                     __ptext83:
 23026                           	opt callstack 0
 23027  01AAE4                     _ringBufS_put_dma:
 23028                           	opt callstack 0
 23029                           
 23030                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 23031                           ;stkvar	__this @ sp[(0)+-2]
 23032                           
 23033                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23034                           ;incstack = 0
 23035 ;; hardware stack exceeded
 23036  01AAE4  0EFE               	movlw	-2
 23037  01AAE6  006F FF8C  F00B    	movff	plusw1,btemp+10
 23038  01AAEC  0EFF               	movlw	-1
 23039  01AAEE  006F FF8C  F00C    	movff	plusw1,btemp+11
 23040  01AAF4  0E42               	movlw	66
 23041  01AAF6  240B               	addwf	(btemp+10)^0,w,c
 23042  01AAF8  6ED9               	movwf	fsr2l,c
 23043  01AAFA  0E00               	movlw	0
 23044  01AAFC  200C               	addwfc	(btemp+11)^0,w,c
 23045  01AAFE  6EDA               	movwf	fsr2h,c
 23046  01AB00  0E40               	movlw	64
 23047  01AB02  60DF               	cpfslt	indf2,c
 23048  01AB04  D040               	goto	l1597
 23049                           
 23050                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 23051                           ;stkvar	_c @ sp[(0)+-3]
 23052                           ;stkvar	__this @ sp[(0)+-2]
 23053  01AB06  0EFE               	movlw	-2
 23054  01AB08  006F FF8C  F00B    	movff	plusw1,btemp+10
 23055  01AB0E  0EFF               	movlw	-1
 23056  01AB10  006F FF8C  F00C    	movff	plusw1,btemp+11
 23057  01AB16  0E40               	movlw	64
 23058  01AB18  240B               	addwf	(btemp+10)^0,w,c
 23059  01AB1A  6ED9               	movwf	fsr2l,c
 23060  01AB1C  0E00               	movlw	0
 23061  01AB1E  200C               	addwfc	(btemp+11)^0,w,c
 23062  01AB20  6EDA               	movwf	fsr2h,c
 23063  01AB22  50DF               	movf	indf2,w,c
 23064  01AB24  6E0C               	movwf	(btemp+11)^0,c
 23065                           
 23066                           ;stkvar	__this @ sp[(0)+-2]
 23067  01AB26  0EFE               	movlw	-2
 23068  01AB28  006F FF8C  F009    	movff	plusw1,btemp+8
 23069  01AB2E  0EFF               	movlw	-1
 23070  01AB30  006F FF8C  F00A    	movff	plusw1,btemp+9
 23071  01AB36  500C               	movf	(btemp+11)^0,w,c
 23072  01AB38  2409               	addwf	(btemp+8)^0,w,c
 23073  01AB3A  6ED9               	movwf	fsr2l,c
 23074  01AB3C  0E00               	movlw	0
 23075  01AB3E  200A               	addwfc	(btemp+9)^0,w,c
 23076  01AB40  6EDA               	movwf	fsr2h,c
 23077  01AB42  0EFD               	movlw	-3
 23078  01AB44  006F FF8F FFDF     	movff	plusw1,indf2
 23079                           
 23080                           ;ringbufs.c: 71:   ++_this->head;
 23081                           ;stkvar	__this @ sp[(0)+-2]
 23082  01AB4A  0EFE               	movlw	-2
 23083  01AB4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 23084  01AB52  0EFF               	movlw	-1
 23085  01AB54  006F FF8C  F00C    	movff	plusw1,btemp+11
 23086  01AB5A  0E40               	movlw	64
 23087  01AB5C  240B               	addwf	(btemp+10)^0,w,c
 23088  01AB5E  6ED9               	movwf	fsr2l,c
 23089  01AB60  0E00               	movlw	0
 23090  01AB62  200C               	addwfc	(btemp+11)^0,w,c
 23091  01AB64  6EDA               	movwf	fsr2h,c
 23092  01AB66  2ADF               	incf	indf2,f,c
 23093                           
 23094                           ;ringbufs.c: 72:   ++_this->count;
 23095                           ;stkvar	__this @ sp[(0)+-2]
 23096  01AB68  0EFE               	movlw	-2
 23097  01AB6A  006F FF8C  F00B    	movff	plusw1,btemp+10
 23098  01AB70  0EFF               	movlw	-1
 23099  01AB72  006F FF8C  F00C    	movff	plusw1,btemp+11
 23100  01AB78  0E42               	movlw	66
 23101  01AB7A  240B               	addwf	(btemp+10)^0,w,c
 23102  01AB7C  6ED9               	movwf	fsr2l,c
 23103  01AB7E  0E00               	movlw	0
 23104  01AB80  200C               	addwfc	(btemp+11)^0,w,c
 23105  01AB82  6EDA               	movwf	fsr2h,c
 23106  01AB84  2ADF               	incf	indf2,f,c
 23107  01AB86                     l1597:
 23108                           
 23109                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 23110  01AB86  52E5               	movf	postdec1,f,c
 23111  01AB88  52E5               	movf	postdec1,f,c
 23112  01AB8A  52E5               	movf	postdec1,f,c
 23113  01AB8C  0012               	return		;funcret
 23114  01AB8E                     __end_of_ringBufS_put_dma:
 23115                           	opt callstack 0
 23116                           
 23117 ;; *************** function _atoi *****************
 23118 ;; Defined at:
 23119 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 23120 ;; Parameters:    Size  Location     Type
 23121 ;;  s               2  [STACK] PTR const unsigned char 
 23122 ;;		 -> STR_64(127), STR_62(3), STR_61(3), STR_60(19), 
 23123 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 23124 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 23125 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 23126 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 23127 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 23128 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 23129 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 23130 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 23131 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 23132 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 23133 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 23134 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 23135 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 23136 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 23137 ;; Auto vars:     Size  Location     Type
 23138 ;;  n               2  [STACK] int 
 23139 ;;  neg             2  [STACK] int 
 23140 ;; Return value:  Size  Location     Type
 23141 ;;                  2  [STACK] int 
 23142 ;; Registers used:
 23143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 23144 ;; Tracked objects:
 23145 ;;		On entry : 0/0
 23146 ;;		On exit  : 0/0
 23147 ;;		Unchanged: 0/0
 23148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23153 ;;Total ram usage:        0 bytes
 23154 ;; Hardware stack levels used:    1
 23155 ;; Hardware stack levels required when called:   16
 23156 ;; This function calls:
 23157 ;;		_isdigit
 23158 ;;		_isspace
 23159 ;; This function is called by:
 23160 ;;		_vfpfcnvrt
 23161 ;; This function uses a reentrant model
 23162 ;;
 23163                           
 23164                           	psect	text84
 23165  0179D6                     __ptext84:
 23166                           	opt callstack 0
 23167  0179D6                     _atoi:
 23168                           	opt callstack 0
 23169                           
 23170                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23171  0179D6  0E09               	movlw	9
 23172  0179D8  26E1               	addwf	fsr1l,f,c
 23173  0179DA  0E00               	movlw	0
 23174  0179DC  22E2               	addwfc	fsr1h,f,c
 23175                           
 23176                           ;stkvar	_n @ sp[(-9)+5]
 23177                           
 23178                           ;incstack = 0
 23179 ;; hardware stack exceeded
 23180  0179DE  0EFC               	movlw	-4
 23181  0179E0  6AE3               	clrf	plusw1,c
 23182  0179E2  0EFD               	movlw	-3
 23183  0179E4  6AE3               	clrf	plusw1,c
 23184                           
 23185                           ;stkvar	_neg @ sp[(-9)+7]
 23186  0179E6  0EFE               	movlw	-2
 23187  0179E8  6AE3               	clrf	plusw1,c
 23188  0179EA  0EFF               	movlw	-1
 23189  0179EC  6AE3               	clrf	plusw1,c
 23190  0179EE  D011               	goto	l9500
 23191  0179F0                     l9498:
 23192                           
 23193                           ;stkvar	_s @ sp[(-9)+-2]
 23194  0179F0  0EF5               	movlw	-11
 23195  0179F2  50E3               	movf	plusw1,w,c
 23196  0179F4  0F01               	addlw	1
 23197  0179F6  6E01               	movwf	btemp^0,c
 23198  0179F8  0EF5               	movlw	-11
 23199  0179FA  0060  F007  FFE3   	movff	btemp,plusw1
 23200  017A00  6A01               	clrf	btemp^0,c
 23201  017A02  0EF6               	movlw	-10
 23202  017A04  50E3               	movf	plusw1,w,c
 23203  017A06  2001               	addwfc	btemp^0,w,c
 23204  017A08  6E01               	movwf	btemp^0,c
 23205  017A0A  0EF6               	movlw	-10
 23206  017A0C  0060  F007  FFE3   	movff	btemp,plusw1
 23207  017A12                     l9500:
 23208                           
 23209                           ;stkvar	_atoi$6314 @ sp[(-9)+4]
 23210  017A12  0EFB               	movlw	-5
 23211  017A14  6AE3               	clrf	plusw1,c
 23212  017A16  2AE3               	incf	plusw1,f,c
 23213                           
 23214                           ;stkvar	_s @ sp[(-9)+-2]
 23215  017A18  50E1               	movf	fsr1l,w,c
 23216  017A1A  0FF5               	addlw	-11
 23217  017A1C  6ED9               	movwf	fsr2l,c
 23218  017A1E  50E2               	movf	fsr1h,w,c
 23219  017A20  6EDA               	movwf	fsr2h,c
 23220  017A22  0EFF               	movlw	255
 23221  017A24  22DA               	addwfc	fsr2h,f,c
 23222  017A26  006F FF7B FFF6     	movff	postinc2,tblptrl
 23223  017A2C  006F FF77 FFF7     	movff	postdec2,tblptrh
 23224  017A32                     	if	0	;tblptru may be non-zero
 23225  017A32                     	endif
 23226  017A32                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23227  017A32  0E00               	movlw	low (__mediumconst shr (0+16))
 23228  017A34  6EF8               	movwf	tblptru,c
 23229  017A36                     	endif
 23230  017A36  0008               	tblrd		*
 23231  017A38  50F5               	movf	tablat,w,c
 23232  017A3A  0A20               	xorlw	32
 23233  017A3C  B4D8               	btfsc	status,2,c
 23234  017A3E  D023               	goto	l9508
 23235  017A40  0EF7               	movlw	247
 23236  017A42  6E0B               	movwf	(btemp+10)^0,c
 23237  017A44  0EFF               	movlw	255
 23238  017A46  6E0C               	movwf	(btemp+11)^0,c
 23239                           
 23240                           ;stkvar	_s @ sp[(-9)+-2]
 23241  017A48  50E1               	movf	fsr1l,w,c
 23242  017A4A  0FF5               	addlw	-11
 23243  017A4C  6ED9               	movwf	fsr2l,c
 23244  017A4E  50E2               	movf	fsr1h,w,c
 23245  017A50  6EDA               	movwf	fsr2h,c
 23246  017A52  0EFF               	movlw	255
 23247  017A54  22DA               	addwfc	fsr2h,f,c
 23248  017A56  006F FF7B FFF6     	movff	postinc2,tblptrl
 23249  017A5C  006F FF77 FFF7     	movff	postdec2,tblptrh
 23250  017A62                     	if	0	;tblptru may be non-zero
 23251  017A62                     	endif
 23252  017A62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23253  017A62  0E00               	movlw	low (__mediumconst shr (0+16))
 23254  017A64  6EF8               	movwf	tblptru,c
 23255  017A66                     	endif
 23256  017A66  0008               	tblrd		*
 23257  017A68  50F5               	movf	tablat,w,c
 23258  017A6A  6E09               	movwf	(btemp+8)^0,c
 23259  017A6C  6A0A               	clrf	(btemp+9)^0,c
 23260  017A6E  500B               	movf	(btemp+10)^0,w,c
 23261  017A70  2609               	addwf	(btemp+8)^0,f,c
 23262  017A72  500C               	movf	(btemp+11)^0,w,c
 23263  017A74  220A               	addwfc	(btemp+9)^0,f,c
 23264  017A76  500A               	movf	(btemp+9)^0,w,c
 23265  017A78  E104               	bnz	u8600
 23266  017A7A  0E05               	movlw	5
 23267  017A7C  5C09               	subwf	(btemp+8)^0,w,c
 23268  017A7E  A0D8               	btfss	status,0,c
 23269  017A80  D002               	goto	l9508
 23270  017A82                     u8600:
 23271                           
 23272                           ;stkvar	_atoi$6314 @ sp[(-9)+4]
 23273  017A82  0EFB               	movlw	-5
 23274  017A84  6AE3               	clrf	plusw1,c
 23275  017A86                     l9508:
 23276                           
 23277                           ;stkvar	_atoi$6314 @ sp[(-9)+4]
 23278  017A86  0EFB               	movlw	-5
 23279  017A88  50E3               	movf	plusw1,w,c
 23280  017A8A  6E0B               	movwf	(btemp+10)^0,c
 23281  017A8C  6A0C               	clrf	(btemp+11)^0,c
 23282                           
 23283                           ;stkvar	_atoi$6313 @ sp[(-9)+2]
 23284  017A8E  0EF9               	movlw	-7
 23285  017A90  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23286  017A96  0EFA               	movlw	-6
 23287  017A98  0060  F033  FFE3   	movff	btemp+11,plusw1
 23288                           
 23289                           ;stkvar	_atoi$6313 @ sp[(-9)+2]
 23290  017A9E  0EF9               	movlw	-7
 23291  017AA0  006F FF8C  F001    	movff	plusw1,btemp
 23292  017AA6  0EFA               	movlw	-6
 23293  017AA8  50E3               	movf	plusw1,w,c
 23294  017AAA  1001               	iorwf	btemp^0,w,c
 23295  017AAC  B4D8               	btfsc	status,2,c
 23296  017AAE  D01F               	goto	l9518
 23297  017AB0  D79F               	goto	l9498
 23298  017AB2                     l9514:
 23299  017AB2  0E01               	movlw	1
 23300  017AB4  6E0B               	movwf	(btemp+10)^0,c
 23301  017AB6  0E00               	movlw	0
 23302  017AB8  6E0C               	movwf	(btemp+11)^0,c
 23303                           
 23304                           ;stkvar	_neg @ sp[(-9)+7]
 23305  017ABA  0EFE               	movlw	-2
 23306  017ABC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23307  017AC2  0EFF               	movlw	-1
 23308  017AC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 23309  017ACA                     l9516:
 23310                           
 23311                           ;stkvar	_s @ sp[(-9)+-2]
 23312  017ACA  0EF5               	movlw	-11
 23313  017ACC  50E3               	movf	plusw1,w,c
 23314  017ACE  0F01               	addlw	1
 23315  017AD0  6E01               	movwf	btemp^0,c
 23316  017AD2  0EF5               	movlw	-11
 23317  017AD4  0060  F007  FFE3   	movff	btemp,plusw1
 23318  017ADA  6A01               	clrf	btemp^0,c
 23319  017ADC  0EF6               	movlw	-10
 23320  017ADE  50E3               	movf	plusw1,w,c
 23321  017AE0  2001               	addwfc	btemp^0,w,c
 23322  017AE2  6E01               	movwf	btemp^0,c
 23323  017AE4  0EF6               	movlw	-10
 23324  017AE6  0060  F007  FFE3   	movff	btemp,plusw1
 23325  017AEC  D053               	goto	l9524
 23326  017AEE                     l9518:
 23327                           
 23328                           ;stkvar	_s @ sp[(-9)+-2]
 23329  017AEE  50E1               	movf	fsr1l,w,c
 23330  017AF0  0FF5               	addlw	-11
 23331  017AF2  6ED9               	movwf	fsr2l,c
 23332  017AF4  50E2               	movf	fsr1h,w,c
 23333  017AF6  6EDA               	movwf	fsr2h,c
 23334  017AF8  0EFF               	movlw	255
 23335  017AFA  22DA               	addwfc	fsr2h,f,c
 23336  017AFC  006F FF7B FFF6     	movff	postinc2,tblptrl
 23337  017B02  006F FF77 FFF7     	movff	postdec2,tblptrh
 23338  017B08                     	if	0	;tblptru may be non-zero
 23339  017B08                     	endif
 23340  017B08                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23341  017B08  0E00               	movlw	low (__mediumconst shr (0+16))
 23342  017B0A  6EF8               	movwf	tblptru,c
 23343  017B0C                     	endif
 23344  017B0C  0008               	tblrd		*
 23345  017B0E  50F5               	movf	tablat,w,c
 23346  017B10  6E0B               	movwf	(btemp+10)^0,c
 23347  017B12  6A0C               	clrf	(btemp+11)^0,c
 23348                           
 23349                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23350                           ; Switch size 1, requested type "simple"
 23351                           ; Number of cases is 1, Range of values is 0 to 0
 23352                           ; switch strategies available:
 23353                           ; Name         Instructions Cycles
 23354                           ; simple_byte            4     3 (average)
 23355                           ;	Chosen strategy is simple_byte
 23356  017B14  500C               	movf	(btemp+11)^0,w,c
 23357  017B16  0A00               	xorlw	0	; case 0
 23358  017B18  A4D8               	btfss	status,2,c
 23359  017B1A  D03C               	goto	l9524
 23360                           
 23361                           ; Switch size 1, requested type "simple"
 23362                           ; Number of cases is 2, Range of values is 43 to 45
 23363                           ; switch strategies available:
 23364                           ; Name         Instructions Cycles
 23365                           ; simple_byte            7     4 (average)
 23366                           ;	Chosen strategy is simple_byte
 23367  017B1C  500B               	movf	(btemp+10)^0,w,c
 23368  017B1E  0A2B               	xorlw	43	; case 43
 23369  017B20  B4D8               	btfsc	status,2,c
 23370  017B22  D7D3               	goto	l9516
 23371  017B24  0A06               	xorlw	6	; case 45
 23372  017B26  B4D8               	btfsc	status,2,c
 23373  017B28  D7C4               	goto	l9514
 23374  017B2A  D034               	goto	l9524
 23375  017B2C                     l9520:
 23376                           
 23377                           ;stkvar	_n @ sp[(-9)+5]
 23378  017B2C  0EFC               	movlw	-4
 23379  017B2E  006F FF8C  F00B    	movff	plusw1,btemp+10
 23380  017B34  0EFD               	movlw	-3
 23381  017B36  006F FF8C  F00C    	movff	plusw1,btemp+11
 23382  017B3C  0E0A               	movlw	10
 23383  017B3E  020B               	mulwf	(btemp+10)^0,c
 23384  017B40  006F FFCC  F009    	movff	prodl,btemp+8
 23385  017B46  006F FFD0  F00A    	movff	prodh,btemp+9
 23386  017B4C  020C               	mulwf	(btemp+11)^0,c
 23387  017B4E  50F3               	movf	prodl,w,c
 23388  017B50  260A               	addwf	(btemp+9)^0,f,c
 23389                           
 23390                           ;stkvar	_s @ sp[(-9)+-2]
 23391  017B52  50E1               	movf	fsr1l,w,c
 23392  017B54  0FF5               	addlw	-11
 23393  017B56  6ED9               	movwf	fsr2l,c
 23394  017B58  50E2               	movf	fsr1h,w,c
 23395  017B5A  6EDA               	movwf	fsr2h,c
 23396  017B5C  0EFF               	movlw	255
 23397  017B5E  22DA               	addwfc	fsr2h,f,c
 23398  017B60  006F FF7B FFF6     	movff	postinc2,tblptrl
 23399  017B66  006F FF77 FFF7     	movff	postdec2,tblptrh
 23400  017B6C                     	if	0	;tblptru may be non-zero
 23401  017B6C                     	endif
 23402  017B6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23403  017B6C  0E00               	movlw	low (__mediumconst shr (0+16))
 23404  017B6E  6EF8               	movwf	tblptru,c
 23405  017B70                     	endif
 23406  017B70  0008               	tblrd		*
 23407  017B72  50F5               	movf	tablat,w,c
 23408  017B74  5E09               	subwf	(btemp+8)^0,f,c
 23409  017B76  0E00               	movlw	0
 23410  017B78  5A0A               	subwfb	(btemp+9)^0,f,c
 23411  017B7A  0E30               	movlw	48
 23412  017B7C  2609               	addwf	(btemp+8)^0,f,c
 23413  017B7E  0E00               	movlw	0
 23414  017B80  220A               	addwfc	(btemp+9)^0,f,c
 23415                           
 23416                           ;stkvar	_n @ sp[(-9)+5]
 23417  017B82  0EFC               	movlw	-4
 23418  017B84  0060  F027  FFE3   	movff	btemp+8,plusw1
 23419  017B8A  0EFD               	movlw	-3
 23420  017B8C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23421  017B92  D79B               	goto	l9516
 23422  017B94                     l9524:
 23423  017B94  0ED0               	movlw	208
 23424  017B96  6E0B               	movwf	(btemp+10)^0,c
 23425  017B98  0EFF               	movlw	255
 23426  017B9A  6E0C               	movwf	(btemp+11)^0,c
 23427                           
 23428                           ;stkvar	_s @ sp[(-9)+-2]
 23429  017B9C  50E1               	movf	fsr1l,w,c
 23430  017B9E  0FF5               	addlw	-11
 23431  017BA0  6ED9               	movwf	fsr2l,c
 23432  017BA2  50E2               	movf	fsr1h,w,c
 23433  017BA4  6EDA               	movwf	fsr2h,c
 23434  017BA6  0EFF               	movlw	255
 23435  017BA8  22DA               	addwfc	fsr2h,f,c
 23436  017BAA  006F FF7B FFF6     	movff	postinc2,tblptrl
 23437  017BB0  006F FF77 FFF7     	movff	postdec2,tblptrh
 23438  017BB6                     	if	0	;tblptru may be non-zero
 23439  017BB6                     	endif
 23440  017BB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23441  017BB6  0E00               	movlw	low (__mediumconst shr (0+16))
 23442  017BB8  6EF8               	movwf	tblptru,c
 23443  017BBA                     	endif
 23444  017BBA  0008               	tblrd		*
 23445  017BBC  50F5               	movf	tablat,w,c
 23446  017BBE  6E09               	movwf	(btemp+8)^0,c
 23447  017BC0  6A0A               	clrf	(btemp+9)^0,c
 23448  017BC2  500B               	movf	(btemp+10)^0,w,c
 23449  017BC4  2609               	addwf	(btemp+8)^0,f,c
 23450  017BC6  500C               	movf	(btemp+11)^0,w,c
 23451  017BC8  220A               	addwfc	(btemp+9)^0,f,c
 23452  017BCA  500A               	movf	(btemp+9)^0,w,c
 23453  017BCC  E106               	bnz	u8620
 23454  017BCE  0E0A               	movlw	10
 23455  017BD0  5C09               	subwf	(btemp+8)^0,w,c
 23456  017BD2  B0D8               	btfsc	status,0,c
 23457  017BD4  D002               	goto	u8620
 23458  017BD6  0E01               	movlw	1
 23459  017BD8  D001               	goto	u8630
 23460  017BDA                     u8620:
 23461  017BDA  0E00               	movlw	0
 23462  017BDC                     u8630:
 23463  017BDC  6E0B               	movwf	(btemp+10)^0,c
 23464  017BDE  6A0C               	clrf	(btemp+11)^0,c
 23465                           
 23466                           ;stkvar	_atoi$6315 @ sp[(-9)+0]
 23467  017BE0  0EF7               	movlw	-9
 23468  017BE2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23469  017BE8  0EF8               	movlw	-8
 23470  017BEA  0060  F033  FFE3   	movff	btemp+11,plusw1
 23471                           
 23472                           ;stkvar	_atoi$6315 @ sp[(-9)+0]
 23473  017BF0  0EF7               	movlw	-9
 23474  017BF2  006F FF8C  F001    	movff	plusw1,btemp
 23475  017BF8  0EF8               	movlw	-8
 23476  017BFA  50E3               	movf	plusw1,w,c
 23477  017BFC  1001               	iorwf	btemp^0,w,c
 23478  017BFE  A4D8               	btfss	status,2,c
 23479  017C00  D795               	goto	l9520
 23480                           
 23481                           ;stkvar	_neg @ sp[(-9)+7]
 23482  017C02  0EFE               	movlw	-2
 23483  017C04  006F FF8C  F001    	movff	plusw1,btemp
 23484  017C0A  0EFF               	movlw	-1
 23485  017C0C  50E3               	movf	plusw1,w,c
 23486  017C0E  1001               	iorwf	btemp^0,w,c
 23487  017C10  A4D8               	btfss	status,2,c
 23488  017C12  D00E               	goto	l9534
 23489                           
 23490                           ;stkvar	_n @ sp[(-9)+5]
 23491  017C14  0EFC               	movlw	-4
 23492  017C16  006F FF8C  F001    	movff	plusw1,btemp
 23493  017C1C  1E01               	comf	btemp^0,f,c
 23494  017C1E  0EFD               	movlw	-3
 23495  017C20  006F FF8C  F002    	movff	plusw1,btemp+1
 23496  017C26  1E02               	comf	(btemp+1)^0,f,c
 23497  017C28  2A01               	incf	btemp^0,f,c
 23498  017C2A  B4D8               	btfsc	status,2,c
 23499  017C2C  2A02               	incf	(btemp+1)^0,f,c
 23500  017C2E  D008               	goto	l3201
 23501  017C30                     l9534:
 23502                           
 23503                           ;stkvar	_n @ sp[(-9)+5]
 23504  017C30  0EFC               	movlw	-4
 23505  017C32  006F FF8C  F001    	movff	plusw1,btemp
 23506  017C38  0EFD               	movlw	-3
 23507  017C3A  006F FF8C  F002    	movff	plusw1,btemp+1
 23508  017C40                     l3201:
 23509                           
 23510                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 23511  017C40  0EF5               	movlw	245
 23512  017C42  26E1               	addwf	fsr1l,f,c
 23513  017C44  0EFF               	movlw	255
 23514  017C46  22E2               	addwfc	fsr1h,f,c
 23515  017C48  0012               	return		;funcret
 23516  017C4A                     __end_of_atoi:
 23517                           	opt callstack 0
 23518                           
 23519 ;; *************** function _isspace *****************
 23520 ;; Defined at:
 23521 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 23522 ;; Parameters:    Size  Location     Type
 23523 ;;  c               2  [STACK] int 
 23524 ;; Auto vars:     Size  Location     Type
 23525 ;;		None
 23526 ;; Return value:  Size  Location     Type
 23527 ;;                  2  [STACK] int 
 23528 ;; Registers used:
 23529 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 23530 ;; Tracked objects:
 23531 ;;		On entry : 0/0
 23532 ;;		On exit  : 0/0
 23533 ;;		Unchanged: 0/0
 23534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23539 ;;Total ram usage:        0 bytes
 23540 ;; Hardware stack levels used:    1
 23541 ;; Hardware stack levels required when called:   15
 23542 ;; This function calls:
 23543 ;;		Nothing
 23544 ;; This function is called by:
 23545 ;;		_atoi
 23546 ;; This function uses a reentrant model
 23547 ;;
 23548                           
 23549                           	psect	text85
 23550  01B6E6                     __ptext85:
 23551                           	opt callstack 0
 23552  01B6E6                     _isspace:
 23553                           	opt callstack 0
 23554                           
 23555                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23556  01B6E6  52E6               	movf	postinc1,f,c
 23557                           
 23558                           ;stkvar	_isspace$6364 @ sp[(-1)+0]
 23559                           
 23560                           ;incstack = 0
 23561 ;; hardware stack exceeded
 23562  01B6E8  0EFF               	movlw	-1
 23563  01B6EA  6AE3               	clrf	plusw1,c
 23564  01B6EC  2AE3               	incf	plusw1,f,c
 23565                           
 23566                           ;stkvar	_c @ sp[(-1)+-2]
 23567  01B6EE  0EFD               	movlw	-3
 23568  01B6F0  006F FF8C  F001    	movff	plusw1,btemp
 23569  01B6F6  0E20               	movlw	32
 23570  01B6F8  1801               	xorwf	btemp^0,w,c
 23571  01B6FA  E104               	bnz	u7490
 23572  01B6FC  0EFE               	movlw	-2
 23573  01B6FE  50E3               	movf	plusw1,w,c
 23574  01B700  B4D8               	btfsc	status,2,c
 23575  01B702  D012               	goto	l8918
 23576  01B704                     u7490:
 23577                           
 23578                           ;stkvar	_c @ sp[(-1)+-2]
 23579  01B704  0EFD               	movlw	-3
 23580  01B706  50E3               	movf	plusw1,w,c
 23581  01B708  0FF7               	addlw	247
 23582  01B70A  6E0B               	movwf	(btemp+10)^0,c
 23583  01B70C  0EFE               	movlw	-2
 23584  01B70E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23585  01B714  0EFF               	movlw	255
 23586  01B716  220C               	addwfc	(btemp+11)^0,f,c
 23587  01B718  500C               	movf	(btemp+11)^0,w,c
 23588  01B71A  E104               	bnz	u7500
 23589  01B71C  0E05               	movlw	5
 23590  01B71E  5C0B               	subwf	(btemp+10)^0,w,c
 23591  01B720  A0D8               	btfss	status,0,c
 23592  01B722  D002               	goto	l8918
 23593  01B724                     u7500:
 23594                           
 23595                           ;stkvar	_isspace$6364 @ sp[(-1)+0]
 23596  01B724  0EFF               	movlw	-1
 23597  01B726  6AE3               	clrf	plusw1,c
 23598  01B728                     l8918:
 23599                           
 23600                           ;stkvar	_isspace$6364 @ sp[(-1)+0]
 23601  01B728  0EFF               	movlw	-1
 23602  01B72A  50E3               	movf	plusw1,w,c
 23603  01B72C  6E01               	movwf	btemp^0,c
 23604  01B72E  6A02               	clrf	(btemp+1)^0,c
 23605                           
 23606                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 23607  01B730  52E5               	movf	postdec1,f,c
 23608  01B732  52E5               	movf	postdec1,f,c
 23609  01B734  52E5               	movf	postdec1,f,c
 23610  01B736  0012               	return		;funcret
 23611  01B738                     __end_of_isspace:
 23612                           	opt callstack 0
 23613                           
 23614 ;; *************** function _isdigit *****************
 23615 ;; Defined at:
 23616 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 23617 ;; Parameters:    Size  Location     Type
 23618 ;;  c               2  [STACK] int 
 23619 ;; Auto vars:     Size  Location     Type
 23620 ;;		None
 23621 ;; Return value:  Size  Location     Type
 23622 ;;                  2  [STACK] int 
 23623 ;; Registers used:
 23624 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 23625 ;; Tracked objects:
 23626 ;;		On entry : 0/0
 23627 ;;		On exit  : 0/0
 23628 ;;		Unchanged: 0/0
 23629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23634 ;;Total ram usage:        0 bytes
 23635 ;; Hardware stack levels used:    1
 23636 ;; Hardware stack levels required when called:   15
 23637 ;; This function calls:
 23638 ;;		Nothing
 23639 ;; This function is called by:
 23640 ;;		_vfpfcnvrt
 23641 ;;		_atoi
 23642 ;; This function uses a reentrant model
 23643 ;;
 23644                           
 23645                           	psect	text86
 23646  01BED8                     __ptext86:
 23647                           	opt callstack 0
 23648  01BED8                     _isdigit:
 23649                           	opt callstack 0
 23650                           
 23651                           ;stkvar	_c @ sp[(0)+-2]
 23652                           
 23653                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23654                           ;incstack = 0
 23655 ;; hardware stack exceeded
 23656  01BED8  0EFE               	movlw	-2
 23657  01BEDA  50E3               	movf	plusw1,w,c
 23658  01BEDC  0FD0               	addlw	208
 23659  01BEDE  6E0B               	movwf	(btemp+10)^0,c
 23660  01BEE0  0EFF               	movlw	-1
 23661  01BEE2  006F FF8C  F00C    	movff	plusw1,btemp+11
 23662  01BEE8  0EFF               	movlw	255
 23663  01BEEA  220C               	addwfc	(btemp+11)^0,f,c
 23664  01BEEC  500C               	movf	(btemp+11)^0,w,c
 23665  01BEEE  E106               	bnz	u6340
 23666  01BEF0  0E0A               	movlw	10
 23667  01BEF2  5C0B               	subwf	(btemp+10)^0,w,c
 23668  01BEF4  B0D8               	btfsc	status,0,c
 23669  01BEF6  D002               	goto	u6340
 23670  01BEF8  0E01               	movlw	1
 23671  01BEFA  D001               	goto	u6350
 23672  01BEFC                     u6340:
 23673  01BEFC  0E00               	movlw	0
 23674  01BEFE                     u6350:
 23675  01BEFE  6E01               	movwf	btemp^0,c
 23676  01BF00  6A02               	clrf	(btemp+1)^0,c
 23677                           
 23678                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 23679  01BF02  52E5               	movf	postdec1,f,c
 23680  01BF04  52E5               	movf	postdec1,f,c
 23681  01BF06  0012               	return		;funcret
 23682  01BF08                     __end_of_isdigit:
 23683                           	opt callstack 0
 23684                           
 23685 ;; *************** function _set_vterm *****************
 23686 ;; Defined at:
 23687 ;;		line 107 in file "mconfig.c"
 23688 ;; Parameters:    Size  Location     Type
 23689 ;;  vterm           1  [STACK] const unsigned char 
 23690 ;; Auto vars:     Size  Location     Type
 23691 ;;		None
 23692 ;; Return value:  Size  Location     Type
 23693 ;;                  1  [STACK] unsigned char 
 23694 ;; Registers used:
 23695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 23696 ;; Tracked objects:
 23697 ;;		On entry : 0/1
 23698 ;;		On exit  : 0/0
 23699 ;;		Unchanged: 0/0
 23700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23705 ;;Total ram usage:        0 bytes
 23706 ;; Hardware stack levels used:    1
 23707 ;; Hardware stack levels required when called:   15
 23708 ;; This function calls:
 23709 ;;		Nothing
 23710 ;; This function is called by:
 23711 ;;		_main
 23712 ;;		_check_help
 23713 ;; This function uses a reentrant model
 23714 ;;
 23715                           
 23716                           	psect	text87
 23717  01C3FA                     __ptext87:
 23718                           	opt callstack 0
 23719  01C3FA                     _set_vterm:
 23720                           	opt callstack 15
 23721                           
 23722                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 23723                           ;stkvar	_vterm @ sp[(0)+-1]
 23724                           
 23725                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23726                           ;incstack = 0
 23727  01C3FA  0EFF               	movlw	-1
 23728  01C3FC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23729  01C402  0E03               	movlw	3
 23730  01C404  160C               	andwf	(btemp+11)^0,f,c
 23731  01C406  EE22  F20A         	lfsr	2,_D+480
 23732  01C40A  50DF               	movf	223,w,c
 23733  01C40C  180C               	xorwf	(btemp+11)^0,w,c
 23734  01C40E  0BFE               	andlw	-2
 23735  01C410  180C               	xorwf	(btemp+11)^0,w,c
 23736  01C412  6EDF               	movwf	223,c
 23737                           
 23738                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 23739  01C414  52E5               	movf	postdec1,f,c
 23740  01C416  0012               	return		;funcret
 23741  01C418                     __end_of_set_vterm:
 23742                           	opt callstack 0
 23743                           
 23744 ;; *************** function _set_temp_display_help *****************
 23745 ;; Defined at:
 23746 ;;		line 211 in file "mconfig.c"
 23747 ;; Parameters:    Size  Location     Type
 23748 ;;  new_response    1  [STACK] const enum E16509
 23749 ;; Auto vars:     Size  Location     Type
 23750 ;;		None
 23751 ;; Return value:  Size  Location     Type
 23752 ;;                  1  [STACK] enum E16509
 23753 ;; Registers used:
 23754 ;;		wreg, fsr1l, fsr1h
 23755 ;; Tracked objects:
 23756 ;;		On entry : 0/1
 23757 ;;		On exit  : 3F/1
 23758 ;;		Unchanged: 0/0
 23759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23764 ;;Total ram usage:        0 bytes
 23765 ;; Hardware stack levels used:    1
 23766 ;; Hardware stack levels required when called:   15
 23767 ;; This function calls:
 23768 ;;		Nothing
 23769 ;; This function is called by:
 23770 ;;		_check_help
 23771 ;; This function uses a reentrant model
 23772 ;;
 23773                           
 23774                           	psect	text88
 23775  01C542                     __ptext88:
 23776                           	opt callstack 0
 23777  01C542                     _set_temp_display_help:
 23778                           	opt callstack 14
 23779                           
 23780                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 23781                           
 23782                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23783                           ;incstack = 0
 23784  01C542  0101               	movlb	1	; () banked
 23785  01C544  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 23786                           
 23787                           ; BSR set to: 1
 23788                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 23789                           ;stkvar	_new_response_info @ sp[(0)+-1]
 23790  01C546  0EFF               	movlw	-1
 23791  01C548  006F FF8C  F1AC    	movff	plusw1,_V+165	;volatile
 23792                           
 23793                           ; BSR set to: 1
 23794                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 23795  01C54E  52E5               	movf	postdec1,f,c
 23796  01C550  0012               	return		;funcret
 23797  01C552                     __end_of_set_temp_display_help:
 23798                           	opt callstack 0
 23799                           
 23800 ;; *************** function _set_display_info *****************
 23801 ;; Defined at:
 23802 ;;		line 200 in file "mconfig.c"
 23803 ;; Parameters:    Size  Location     Type
 23804 ;;  new_response    1  [STACK] const enum E16509
 23805 ;; Auto vars:     Size  Location     Type
 23806 ;;		None
 23807 ;; Return value:  Size  Location     Type
 23808 ;;                  1  [STACK] enum E16994
 23809 ;; Registers used:
 23810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23811 ;; Tracked objects:
 23812 ;;		On entry : 0/1
 23813 ;;		On exit  : 0/0
 23814 ;;		Unchanged: 0/0
 23815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23820 ;;Total ram usage:        0 bytes
 23821 ;; Hardware stack levels used:    1
 23822 ;; Hardware stack levels required when called:   16
 23823 ;; This function calls:
 23824 ;;		_TimerDone
 23825 ;; This function is called by:
 23826 ;;		_main
 23827 ;;		_check_help
 23828 ;; This function uses a reentrant model
 23829 ;;
 23830                           
 23831                           	psect	text89
 23832  01C418                     __ptext89:
 23833                           	opt callstack 0
 23834  01C418                     _set_display_info:
 23835                           	opt callstack 14
 23836                           
 23837                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 23838                           
 23839                           ; BSR set to: 1
 23840                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23841                           ;incstack = 0
 23842  01C418  0E07               	movlw	7
 23843  01C41A  6EE6               	movwf	postinc1,c
 23844  01C41C  EC07  F0E0         	call	_TimerDone	;wreg free
 23845  01C420  5001               	movf	btemp^0,w,c
 23846  01C422  B4D8               	btfsc	status,2,c
 23847  01C424  D006               	goto	l1732
 23848                           
 23849                           ;mconfig.c: 205:   old_info = V.response.info;
 23850  01C426  0101               	movlb	1	; () banked
 23851  01C428  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 23852                           
 23853                           ; BSR set to: 1
 23854                           ;mconfig.c: 206:   V.response.info = new_response_info;
 23855                           ;stkvar	_new_response_info @ sp[(0)+-1]
 23856  01C42A  0EFF               	movlw	-1
 23857  01C42C  006F FF8C  F1AB    	movff	plusw1,_V+164	;volatile
 23858  01C432                     l1732:
 23859                           
 23860                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 23861  01C432  52E5               	movf	postdec1,f,c
 23862  01C434  0012               	return		;funcret
 23863  01C436                     __end_of_set_display_info:
 23864                           	opt callstack 0
 23865                           
 23866 ;; *************** function _mode_lamp_dim *****************
 23867 ;; Defined at:
 23868 ;;		line 13 in file "mconfig.c"
 23869 ;; Parameters:    Size  Location     Type
 23870 ;;  level           2  [STACK] const unsigned short 
 23871 ;; Auto vars:     Size  Location     Type
 23872 ;;		None
 23873 ;; Return value:  Size  Location     Type
 23874 ;;                  1  [STACK] void 
 23875 ;; Registers used:
 23876 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23877 ;; Tracked objects:
 23878 ;;		On entry : 0/1
 23879 ;;		On exit  : 0/0
 23880 ;;		Unchanged: 0/0
 23881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23886 ;;Total ram usage:        0 bytes
 23887 ;; Hardware stack levels used:    1
 23888 ;; Hardware stack levels required when called:   16
 23889 ;; This function calls:
 23890 ;;		_PWM8_LoadDutyValue
 23891 ;; This function is called by:
 23892 ;;		_main
 23893 ;;		_check_help
 23894 ;; This function uses a reentrant model
 23895 ;;
 23896                           
 23897                           	psect	text90
 23898  01C48A                     __ptext90:
 23899                           	opt callstack 0
 23900  01C48A                     _mode_lamp_dim:
 23901                           	opt callstack 14
 23902                           
 23903                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 23904                           ;stkvar	_level @ sp[(0)+-2]
 23905                           
 23906                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23907                           ;incstack = 0
 23908  01C48A  0EFE               	movlw	-2
 23909  01C48C  006F FF8F FFE6     	movff	plusw1,postinc1
 23910  01C492  006F FF8F FFE6     	movff	plusw1,postinc1
 23911  01C498  EC51  F0DD         	call	_PWM8_LoadDutyValue	;wreg free
 23912                           
 23913                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 23914  01C49C  52E5               	movf	postdec1,f,c
 23915  01C49E  52E5               	movf	postdec1,f,c
 23916  01C4A0  0012               	return		;funcret
 23917  01C4A2                     __end_of_mode_lamp_dim:
 23918                           	opt callstack 0
 23919                           
 23920 ;; *************** function _mode_lamp_bright *****************
 23921 ;; Defined at:
 23922 ;;		line 18 in file "mconfig.c"
 23923 ;; Parameters:    Size  Location     Type
 23924 ;;		None
 23925 ;; Auto vars:     Size  Location     Type
 23926 ;;		None
 23927 ;; Return value:  Size  Location     Type
 23928 ;;                  1  [STACK] void 
 23929 ;; Registers used:
 23930 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23931 ;; Tracked objects:
 23932 ;;		On entry : 0/0
 23933 ;;		On exit  : 0/0
 23934 ;;		Unchanged: 0/0
 23935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23940 ;;Total ram usage:        0 bytes
 23941 ;; Hardware stack levels used:    1
 23942 ;; Hardware stack levels required when called:   16
 23943 ;; This function calls:
 23944 ;;		_PWM8_LoadDutyValue
 23945 ;; This function is called by:
 23946 ;;		_check_help
 23947 ;; This function uses a reentrant model
 23948 ;;
 23949                           
 23950                           	psect	text91
 23951  01C570                     __ptext91:
 23952                           	opt callstack 0
 23953  01C570                     _mode_lamp_bright:
 23954                           	opt callstack 13
 23955                           
 23956                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 23957                           
 23958                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23959                           ;incstack = 0
 23960  01C570  0E2C               	movlw	44
 23961  01C572  6EE6               	movwf	postinc1,c
 23962  01C574  0E01               	movlw	1
 23963  01C576  6EE6               	movwf	postinc1,c
 23964  01C578  EC51  F0DD         	call	_PWM8_LoadDutyValue	;wreg free
 23965                           
 23966                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23967  01C57C  0012               	return		;funcret
 23968  01C57E                     __end_of_mode_lamp_bright:
 23969                           	opt callstack 0
 23970                           
 23971 ;; *************** function _PWM8_LoadDutyValue *****************
 23972 ;; Defined at:
 23973 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 23974 ;; Parameters:    Size  Location     Type
 23975 ;;  dutyValue       2  [STACK] unsigned short 
 23976 ;; Auto vars:     Size  Location     Type
 23977 ;;		None
 23978 ;; Return value:  Size  Location     Type
 23979 ;;                  1  [STACK] void 
 23980 ;; Registers used:
 23981 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23982 ;; Tracked objects:
 23983 ;;		On entry : 0/1
 23984 ;;		On exit  : 0/0
 23985 ;;		Unchanged: 0/0
 23986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23991 ;;Total ram usage:        0 bytes
 23992 ;; Hardware stack levels used:    1
 23993 ;; Hardware stack levels required when called:   15
 23994 ;; This function calls:
 23995 ;;		Nothing
 23996 ;; This function is called by:
 23997 ;;		_mode_lamp_dim
 23998 ;;		_mode_lamp_bright
 23999 ;; This function uses a reentrant model
 24000 ;;
 24001                           
 24002                           	psect	text92
 24003  01BAA2                     __ptext92:
 24004                           	opt callstack 0
 24005  01BAA2                     _PWM8_LoadDutyValue:
 24006                           	opt callstack 14
 24007                           
 24008                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 24009                           ;stkvar	_dutyValue @ sp[(0)+-2]
 24010                           
 24011                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24012                           ;incstack = 0
 24013  01BAA2  0EFE               	movlw	-2
 24014  01BAA4  006F FF8C  F00B    	movff	plusw1,btemp+10
 24015  01BAAA  0EFF               	movlw	-1
 24016  01BAAC  006F FF8C  F00C    	movff	plusw1,btemp+11
 24017  01BAB2  90D8               	bcf	status,0,c
 24018  01BAB4  320C               	rrcf	(btemp+11)^0,f,c
 24019  01BAB6  320B               	rrcf	(btemp+10)^0,f,c
 24020  01BAB8  90D8               	bcf	status,0,c
 24021  01BABA  320C               	rrcf	(btemp+11)^0,f,c
 24022  01BABC  320B               	rrcf	(btemp+10)^0,f,c
 24023  01BABE  500B               	movf	(btemp+10)^0,w,c
 24024  01BAC0  6E61               	movwf	97,c	;volatile
 24025                           
 24026                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 24027                           ;stkvar	_dutyValue @ sp[(0)+-2]
 24028  01BAC2  0EFE               	movlw	-2
 24029  01BAC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 24030  01BACA  0E03               	movlw	3
 24031  01BACC  160C               	andwf	(btemp+11)^0,f,c
 24032  01BACE  0E06               	movlw	6
 24033  01BAD0  6E01               	movwf	btemp^0,c
 24034  01BAD2                     u9445:
 24035  01BAD2  90D8               	bcf	status,0,c
 24036  01BAD4  360C               	rlcf	(btemp+11)^0,f,c
 24037  01BAD6  2E01               	decfsz	btemp^0,f,c
 24038  01BAD8  D7FC               	goto	u9445
 24039  01BADA  500C               	movf	(btemp+11)^0,w,c
 24040  01BADC  6E60               	movwf	96,c	;volatile
 24041                           
 24042                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 24043  01BADE  52E5               	movf	postdec1,f,c
 24044  01BAE0  52E5               	movf	postdec1,f,c
 24045  01BAE2  0012               	return		;funcret
 24046  01BAE4                     __end_of_PWM8_LoadDutyValue:
 24047                           	opt callstack 0
 24048                           
 24049 ;; *************** function _help_button *****************
 24050 ;; Defined at:
 24051 ;;		line 26 in file "mconfig.c"
 24052 ;; Parameters:    Size  Location     Type
 24053 ;;		None
 24054 ;; Auto vars:     Size  Location     Type
 24055 ;;		None
 24056 ;; Return value:  Size  Location     Type
 24057 ;;                  1  [STACK] _Bool 
 24058 ;; Registers used:
 24059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24060 ;; Tracked objects:
 24061 ;;		On entry : 0/1
 24062 ;;		On exit  : 0/0
 24063 ;;		Unchanged: 0/0
 24064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24069 ;;Total ram usage:        0 bytes
 24070 ;; Hardware stack levels used:    1
 24071 ;; Hardware stack levels required when called:   16
 24072 ;; This function calls:
 24073 ;;		_StartTimer
 24074 ;;		_TimerDone
 24075 ;; This function is called by:
 24076 ;;		_check_help
 24077 ;; This function uses a reentrant model
 24078 ;;
 24079                           
 24080                           	psect	text93
 24081  01BC9C                     __ptext93:
 24082                           	opt callstack 0
 24083  01BC9C                     _help_button:
 24084                           	opt callstack 13
 24085                           
 24086                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 24087                           
 24088                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24089                           ;incstack = 0
 24090  01BC9C  B0CB               	btfsc	203,0,c	;volatile
 24091  01BC9E  D00C               	goto	l1675
 24092                           
 24093                           ;mconfig.c: 29:   V.help = 1;
 24094  01BCA0  0101               	movlb	1	; () banked
 24095  01BCA2  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 24096                           
 24097                           ; BSR set to: 1
 24098                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 24099  01BCA4  0E08               	movlw	8
 24100  01BCA6  6EE6               	movwf	postinc1,c
 24101  01BCA8  EC07  F0E0         	call	_TimerDone	;wreg free
 24102  01BCAC  5001               	movf	btemp^0,w,c
 24103  01BCAE  B4D8               	btfsc	status,2,c
 24104  01BCB0  D003               	goto	l1675
 24105                           
 24106                           ;mconfig.c: 31:    return 1;
 24107  01BCB2  0E01               	movlw	1
 24108  01BCB4  6E01               	movwf	btemp^0,c
 24109  01BCB6  0012               	return	
 24110  01BCB8                     l1675:
 24111                           
 24112                           ;mconfig.c: 34:  if (!V.help)
 24113  01BCB8  0101               	movlb	1	; () banked
 24114  01BCBA  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 24115  01BCBC  D008               	goto	l10646
 24116                           
 24117                           ; BSR set to: 1
 24118                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 24119  01BCBE  0E2C               	movlw	44
 24120  01BCC0  6EE6               	movwf	postinc1,c
 24121  01BCC2  0E01               	movlw	1
 24122  01BCC4  6EE6               	movwf	postinc1,c
 24123  01BCC6  0E08               	movlw	8
 24124  01BCC8  6EE6               	movwf	postinc1,c
 24125  01BCCA  ECB2  F0DD         	call	_StartTimer	;wreg free
 24126  01BCCE                     l10646:
 24127                           
 24128                           ;mconfig.c: 37:  return 0;
 24129  01BCCE  0E00               	movlw	0
 24130  01BCD0  6E01               	movwf	btemp^0,c
 24131                           
 24132                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 24133  01BCD2  0012               	return		;funcret
 24134  01BCD4                     __end_of_help_button:
 24135                           	opt callstack 0
 24136                           
 24137 ;; *************** function _TimerDone *****************
 24138 ;; Defined at:
 24139 ;;		line 20 in file "timers.c"
 24140 ;; Parameters:    Size  Location     Type
 24141 ;;  timer           1  [STACK] const unsigned char 
 24142 ;; Auto vars:     Size  Location     Type
 24143 ;;		None
 24144 ;; Return value:  Size  Location     Type
 24145 ;;                  1  [STACK] _Bool 
 24146 ;; Registers used:
 24147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 24148 ;; Tracked objects:
 24149 ;;		On entry : 0/1
 24150 ;;		On exit  : 0/0
 24151 ;;		Unchanged: 0/0
 24152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24157 ;;Total ram usage:        0 bytes
 24158 ;; Hardware stack levels used:    1
 24159 ;; Hardware stack levels required when called:   15
 24160 ;; This function calls:
 24161 ;;		Nothing
 24162 ;; This function is called by:
 24163 ;;		_main
 24164 ;;		_WaitMs
 24165 ;;		_help_button
 24166 ;;		_check_help
 24167 ;;		_set_display_info
 24168 ;;		_update_adc_result
 24169 ;;		_esr_check
 24170 ;; This function uses a reentrant model
 24171 ;;
 24172                           
 24173                           	psect	text94
 24174  01C00E                     __ptext94:
 24175                           	opt callstack 0
 24176  01C00E                     _TimerDone:
 24177                           	opt callstack 14
 24178                           
 24179                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24180                           ;incstack = 0
 24181  01C00E  0004               	clrwdt		;# 
 24182                           
 24183                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 24184                           ;stkvar	_timer @ sp[(0)+-1]
 24185  01C010  0EFF               	movlw	-1
 24186  01C012  50E3               	movf	plusw1,w,c
 24187  01C014  0D02               	mullw	2
 24188  01C016  0E7D               	movlw	low _tickCount
 24189  01C018  24F3               	addwf	243,w,c
 24190  01C01A  6ED9               	movwf	fsr2l,c
 24191  01C01C  0E02               	movlw	high _tickCount
 24192  01C01E  20F4               	addwfc	prodh,w,c
 24193  01C020  6EDA               	movwf	fsr2h,c
 24194  01C022  50DE               	movf	postinc2,w,c
 24195  01C024  10DE               	iorwf	postinc2,w,c
 24196  01C026  A4D8               	btfss	status,2,c
 24197  01C028  D002               	goto	l9932
 24198                           
 24199                           ;timers.c: 24:   return 1;
 24200  01C02A  0E01               	movlw	1
 24201  01C02C  D001               	goto	L28
 24202  01C02E                     l9932:
 24203                           
 24204                           ;timers.c: 26:  return 0;
 24205  01C02E  0E00               	movlw	0
 24206  01C030                     L28:
 24207  01C030  6E01               	movwf	btemp^0,c
 24208                           
 24209                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 24210  01C032  52E5               	movf	postdec1,f,c
 24211  01C034  0012               	return		;funcret
 24212  01C036                     __end_of_TimerDone:
 24213                           	opt callstack 0
 24214                           
 24215 ;; *************** function _StartTimer *****************
 24216 ;; Defined at:
 24217 ;;		line 12 in file "timers.c"
 24218 ;; Parameters:    Size  Location     Type
 24219 ;;  timer           1  [STACK] const unsigned char 
 24220 ;;  count           2  [STACK] const unsigned short 
 24221 ;; Auto vars:     Size  Location     Type
 24222 ;;		None
 24223 ;; Return value:  Size  Location     Type
 24224 ;;                  1  [STACK] void 
 24225 ;; Registers used:
 24226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24227 ;; Tracked objects:
 24228 ;;		On entry : 0/0
 24229 ;;		On exit  : 0/0
 24230 ;;		Unchanged: 0/0
 24231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24236 ;;Total ram usage:        0 bytes
 24237 ;; Hardware stack levels used:    1
 24238 ;; Hardware stack levels required when called:   15
 24239 ;; This function calls:
 24240 ;;		Nothing
 24241 ;; This function is called by:
 24242 ;;		_main
 24243 ;;		_WaitMs
 24244 ;;		_help_button
 24245 ;;		_check_help
 24246 ;;		_update_adc_result
 24247 ;;		_calc_bsoc
 24248 ;;		_esr_check
 24249 ;; This function uses a reentrant model
 24250 ;;
 24251                           
 24252                           	psect	text95
 24253  01BB64                     __ptext95:
 24254                           	opt callstack 0
 24255  01BB64                     _StartTimer:
 24256                           	opt callstack 0
 24257                           
 24258                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 24259                           ;stkvar	_count @ sp[(0)+-3]
 24260                           
 24261                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24262                           ;incstack = 0
 24263 ;; hardware stack exceeded
 24264  01BB64  0EFD               	movlw	-3
 24265  01BB66  006F FF8C  F00B    	movff	plusw1,btemp+10
 24266  01BB6C  0EFE               	movlw	-2
 24267  01BB6E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24268  01BB74  90D8               	bcf	status,0,c
 24269  01BB76  340B               	rlcf	(btemp+10)^0,w,c
 24270  01BB78  6E09               	movwf	(btemp+8)^0,c
 24271  01BB7A  340C               	rlcf	(btemp+11)^0,w,c
 24272  01BB7C  6E0A               	movwf	(btemp+9)^0,c
 24273                           
 24274                           ;stkvar	_timer @ sp[(0)+-1]
 24275  01BB7E  0EFF               	movlw	-1
 24276  01BB80  50E3               	movf	plusw1,w,c
 24277  01BB82  0D02               	mullw	2
 24278  01BB84  0E7D               	movlw	low _tickCount
 24279  01BB86  24F3               	addwf	243,w,c
 24280  01BB88  6ED9               	movwf	fsr2l,c
 24281  01BB8A  0E02               	movlw	high _tickCount
 24282  01BB8C  20F4               	addwfc	prodh,w,c
 24283  01BB8E  6EDA               	movwf	fsr2h,c
 24284  01BB90  0060  F027  FFDE   	movff	btemp+8,postinc2
 24285  01BB96  0060  F02B  FFDD   	movff	btemp+9,postdec2
 24286                           
 24287                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 24288  01BB9C  52E5               	movf	postdec1,f,c
 24289  01BB9E  52E5               	movf	postdec1,f,c
 24290  01BBA0  52E5               	movf	postdec1,f,c
 24291  01BBA2  0012               	return		;funcret
 24292  01BBA4                     __end_of_StartTimer:
 24293                           	opt callstack 0
 24294                           
 24295 ;; *************** function _display_info *****************
 24296 ;; Defined at:
 24297 ;;		line 190 in file "mconfig.c"
 24298 ;; Parameters:    Size  Location     Type
 24299 ;;		None
 24300 ;; Auto vars:     Size  Location     Type
 24301 ;;		None
 24302 ;; Return value:  Size  Location     Type
 24303 ;;                  1  [STACK] enum E16509
 24304 ;; Registers used:
 24305 ;;		btemp
 24306 ;; Tracked objects:
 24307 ;;		On entry : 0/1
 24308 ;;		On exit  : 0/0
 24309 ;;		Unchanged: 0/0
 24310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24315 ;;Total ram usage:        0 bytes
 24316 ;; Hardware stack levels used:    1
 24317 ;; Hardware stack levels required when called:   15
 24318 ;; This function calls:
 24319 ;;		Nothing
 24320 ;; This function is called by:
 24321 ;;		_check_help
 24322 ;; This function uses a reentrant model
 24323 ;;
 24324                           
 24325                           	psect	text96
 24326  01C5F2                     __ptext96:
 24327                           	opt callstack 0
 24328  01C5F2                     _display_info:
 24329                           	opt callstack 14
 24330                           
 24331                           ;mconfig.c: 192:  return V.response.info;
 24332                           
 24333                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24334                           ;incstack = 0
 24335  01C5F2  0060  F6AC  F001   	movff	_V+164,btemp	;volatile
 24336                           
 24337                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24338  01C5F8  0012               	return		;funcret
 24339  01C5FA                     __end_of_display_info:
 24340                           	opt callstack 0
 24341                           
 24342 ;; *************** function _display_help *****************
 24343 ;; Defined at:
 24344 ;;		line 195 in file "mconfig.c"
 24345 ;; Parameters:    Size  Location     Type
 24346 ;;		None
 24347 ;; Auto vars:     Size  Location     Type
 24348 ;;		None
 24349 ;; Return value:  Size  Location     Type
 24350 ;;                  1  [STACK] enum E16509
 24351 ;; Registers used:
 24352 ;;		btemp
 24353 ;; Tracked objects:
 24354 ;;		On entry : 3F/1
 24355 ;;		On exit  : 0/0
 24356 ;;		Unchanged: 0/0
 24357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24362 ;;Total ram usage:        0 bytes
 24363 ;; Hardware stack levels used:    1
 24364 ;; Hardware stack levels required when called:   15
 24365 ;; This function calls:
 24366 ;;		Nothing
 24367 ;; This function is called by:
 24368 ;;		_check_help
 24369 ;; This function uses a reentrant model
 24370 ;;
 24371                           
 24372                           	psect	text97
 24373  01C5FA                     __ptext97:
 24374                           	opt callstack 0
 24375  01C5FA                     _display_help:
 24376                           	opt callstack 14
 24377                           
 24378                           ;mconfig.c: 197:  return V.response.help_temp;
 24379                           
 24380                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24381                           ;incstack = 0
 24382  01C5FA  0060  F6B0  F001   	movff	_V+165,btemp	;volatile
 24383                           
 24384                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24385  01C600  0012               	return		;funcret
 24386  01C602                     __end_of_display_help:
 24387                           	opt callstack 0
 24388                           
 24389 ;; *************** function _check_enter_button *****************
 24390 ;; Defined at:
 24391 ;;		line 42 in file "hid.c"
 24392 ;; Parameters:    Size  Location     Type
 24393 ;;  h               2  [STACK] PTR struct H_data
 24394 ;;		 -> H(7), 
 24395 ;; Auto vars:     Size  Location     Type
 24396 ;;		None
 24397 ;; Return value:  Size  Location     Type
 24398 ;;                  1  [STACK] _Bool 
 24399 ;; Registers used:
 24400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 24401 ;; Tracked objects:
 24402 ;;		On entry : 0/0
 24403 ;;		On exit  : 0/0
 24404 ;;		Unchanged: 0/0
 24405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24410 ;;Total ram usage:        0 bytes
 24411 ;; Hardware stack levels used:    1
 24412 ;; Hardware stack levels required when called:   15
 24413 ;; This function calls:
 24414 ;;		Nothing
 24415 ;; This function is called by:
 24416 ;;		_main
 24417 ;; This function uses a reentrant model
 24418 ;;
 24419                           
 24420                           	psect	text98
 24421  01B23A                     __ptext98:
 24422                           	opt callstack 0
 24423  01B23A                     _check_enter_button:
 24424                           	opt callstack 15
 24425                           
 24426                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 24427                           ;stkvar	_h @ sp[(0)+-2]
 24428                           
 24429                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24430                           ;incstack = 0
 24431  01B23A  0EFE               	movlw	-2
 24432  01B23C  006F FF8C  F00B    	movff	plusw1,btemp+10
 24433  01B242  0EFF               	movlw	-1
 24434  01B244  006F FF8C  F00C    	movff	plusw1,btemp+11
 24435  01B24A  0E04               	movlw	4
 24436  01B24C  240B               	addwf	(btemp+10)^0,w,c
 24437  01B24E  6ED9               	movwf	fsr2l,c
 24438  01B250  0E00               	movlw	0
 24439  01B252  200C               	addwfc	(btemp+11)^0,w,c
 24440  01B254  6EDA               	movwf	fsr2h,c
 24441  01B256  50DF               	movf	indf2,w,c
 24442  01B258  A4D8               	btfss	status,2,c
 24443  01B25A  D023               	goto	l13298
 24444                           
 24445                           ;stkvar	_h @ sp[(0)+-2]
 24446  01B25C  0EFE               	movlw	-2
 24447  01B25E  006F FF8C  F00B    	movff	plusw1,btemp+10
 24448  01B264  0EFF               	movlw	-1
 24449  01B266  006F FF8C  F00C    	movff	plusw1,btemp+11
 24450  01B26C  0E05               	movlw	5
 24451  01B26E  240B               	addwf	(btemp+10)^0,w,c
 24452  01B270  6ED9               	movwf	fsr2l,c
 24453  01B272  0E00               	movlw	0
 24454  01B274  200C               	addwfc	(btemp+11)^0,w,c
 24455  01B276  6EDA               	movwf	fsr2h,c
 24456  01B278  50DF               	movf	indf2,w,c
 24457  01B27A  A4D8               	btfss	status,2,c
 24458  01B27C  D012               	goto	l13298
 24459                           
 24460                           ;hid.c: 45:   h->wait_enter = 1;
 24461                           ;stkvar	_h @ sp[(0)+-2]
 24462  01B27E  0EFE               	movlw	-2
 24463  01B280  006F FF8C  F00B    	movff	plusw1,btemp+10
 24464  01B286  0EFF               	movlw	-1
 24465  01B288  006F FF8C  F00C    	movff	plusw1,btemp+11
 24466  01B28E  0E04               	movlw	4
 24467  01B290  240B               	addwf	(btemp+10)^0,w,c
 24468  01B292  6ED9               	movwf	fsr2l,c
 24469  01B294  0E00               	movlw	0
 24470  01B296  200C               	addwfc	(btemp+11)^0,w,c
 24471  01B298  6EDA               	movwf	fsr2h,c
 24472  01B29A  0E01               	movlw	1
 24473  01B29C  6EDF               	movwf	indf2,c
 24474                           
 24475                           ;hid.c: 46:   return 1;
 24476  01B29E  0E01               	movlw	1
 24477  01B2A0  D001               	goto	L29
 24478  01B2A2                     l13298:
 24479                           
 24480                           ;hid.c: 48:  return 0;
 24481  01B2A2  0E00               	movlw	0
 24482  01B2A4                     L29:
 24483  01B2A4  6E01               	movwf	btemp^0,c
 24484                           
 24485                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 24486  01B2A6  52E5               	movf	postdec1,f,c
 24487  01B2A8  52E5               	movf	postdec1,f,c
 24488  01B2AA  0012               	return		;funcret
 24489  01B2AC                     __end_of_check_enter_button:
 24490                           	opt callstack 0
 24491                           
 24492 ;; *************** function _calc_ror_data *****************
 24493 ;; Defined at:
 24494 ;;		line 102 in file "mbmc.c"
 24495 ;; Parameters:    Size  Location     Type
 24496 ;;		None
 24497 ;; Auto vars:     Size  Location     Type
 24498 ;;		None
 24499 ;; Return value:  Size  Location     Type
 24500 ;;                  1  [STACK] void 
 24501 ;; Registers used:
 24502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24503 ;; Tracked objects:
 24504 ;;		On entry : 0/39
 24505 ;;		On exit  : 0/0
 24506 ;;		Unchanged: 0/0
 24507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24512 ;;Total ram usage:        0 bytes
 24513 ;; Hardware stack levels used:    1
 24514 ;; Hardware stack levels required when called:   18
 24515 ;; This function calls:
 24516 ;;		___flge
 24517 ;;		___flsub
 24518 ;;		_conv_raw_result
 24519 ;;		_fabsf
 24520 ;; This function is called by:
 24521 ;;		_main
 24522 ;; This function uses a reentrant model
 24523 ;;
 24524                           
 24525                           	psect	text99
 24526  018DD4                     __ptext99:
 24527                           	opt callstack 0
 24528  018DD4                     _calc_ror_data:
 24529                           	opt callstack 12
 24530                           
 24531                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 24532                           
 24533                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24534                           ;incstack = 0
 24535  018DD4  0060  F1A3  FFE6   	movff	calc_ror_data@bcror,postinc1
 24536  018DDA  0060  F1A7  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 24537  018DE0  0060  F1AB  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 24538  018DE6  0060  F1AF  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 24539  018DEC  0E00               	movlw	0
 24540  018DEE  6EE6               	movwf	postinc1,c
 24541  018DF0  0E00               	movlw	0
 24542  018DF2  6EE6               	movwf	postinc1,c
 24543  018DF4  ECB1  F0A9         	call	_conv_raw_result	;wreg free
 24544  018DF8  0060  F007  FFE6   	movff	btemp,postinc1
 24545  018DFE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24546  018E04  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24547  018E0A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24548  018E10  EC0C  F0DD         	call	___flsub	;wreg free
 24549  018E14  0060  F007  FFE6   	movff	btemp,postinc1
 24550  018E1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24551  018E20  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24552  018E26  0060  F013  FFE6   	movff	btemp+3,postinc1
 24553  018E2C  ECC5  F0D4         	call	_fabsf	;wreg free
 24554  018E30  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 24555  018E36  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 24556  018E3C  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 24557  018E42  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 24558                           
 24559                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 24560  018E48  0E00               	movlw	0
 24561  018E4A  6EE6               	movwf	postinc1,c
 24562  018E4C  0E00               	movlw	0
 24563  018E4E  6EE6               	movwf	postinc1,c
 24564  018E50  ECB1  F0A9         	call	_conv_raw_result	;wreg free
 24565  018E54  0060  F004  F068   	movff	btemp,calc_ror_data@bcror
 24566  018E5A  0060  F008  F069   	movff	btemp+1,calc_ror_data@bcror+1
 24567  018E60  0060  F00C  F06A   	movff	btemp+2,calc_ror_data@bcror+2
 24568  018E66  0060  F010  F06B   	movff	btemp+3,calc_ror_data@bcror+3
 24569                           
 24570                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 24571  018E6C  0060  F1B3  FFE6   	movff	calc_ror_data@bvror,postinc1
 24572  018E72  0060  F1B7  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 24573  018E78  0060  F1BB  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 24574  018E7E  0060  F1BF  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 24575  018E84  0E00               	movlw	0
 24576  018E86  6EE6               	movwf	postinc1,c
 24577  018E88  0E04               	movlw	4
 24578  018E8A  6EE6               	movwf	postinc1,c
 24579  018E8C  ECB1  F0A9         	call	_conv_raw_result	;wreg free
 24580  018E90  0060  F007  FFE6   	movff	btemp,postinc1
 24581  018E96  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24582  018E9C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24583  018EA2  0060  F013  FFE6   	movff	btemp+3,postinc1
 24584  018EA8  EC0C  F0DD         	call	___flsub	;wreg free
 24585  018EAC  0060  F007  FFE6   	movff	btemp,postinc1
 24586  018EB2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24587  018EB8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24588  018EBE  0060  F013  FFE6   	movff	btemp+3,postinc1
 24589  018EC4  ECC5  F0D4         	call	_fabsf	;wreg free
 24590  018EC8  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 24591  018ECE  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 24592  018ED4  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 24593  018EDA  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 24594                           
 24595                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 24596  018EE0  0EE7               	movlw	231
 24597  018EE2  6EE6               	movwf	postinc1,c
 24598  018EE4  0E1D               	movlw	29
 24599  018EE6  6EE6               	movwf	postinc1,c
 24600  018EE8  0EA7               	movlw	167
 24601  018EEA  6EE6               	movwf	postinc1,c
 24602  018EEC  0E3B               	movlw	59
 24603  018EEE  6EE6               	movwf	postinc1,c
 24604  018EF0  EE21  F36B         	lfsr	2,_C+108	;volatile
 24605  018EF4  006F FF7B FFE6     	movff	postinc2,postinc1
 24606  018EFA  006F FF7B FFE6     	movff	postinc2,postinc1
 24607  018F00  006F FF7B FFE6     	movff	postinc2,postinc1
 24608  018F06  006F FF7B FFE6     	movff	postinc2,postinc1
 24609  018F0C  EC26  F0C9         	call	___flge	;wreg free
 24610  018F10  B001               	btfsc	btemp& (0+255),0,c
 24611  018F12  D010               	goto	l11112
 24612                           
 24613                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 24614  018F14  0EB0               	movlw	176
 24615  018F16  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 24616  018F1C  0E03               	movlw	3
 24617  018F1E  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 24618  018F24  0E67               	movlw	103
 24619  018F26  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 24620  018F2C  0E3C               	movlw	60
 24621  018F2E  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 24622  018F34                     l11112:
 24623                           
 24624                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 24625  018F34  0E00               	movlw	0
 24626  018F36  6EE6               	movwf	postinc1,c
 24627  018F38  0E04               	movlw	4
 24628  018F3A  6EE6               	movwf	postinc1,c
 24629  018F3C  ECB1  F0A9         	call	_conv_raw_result	;wreg free
 24630  018F40  0060  F004  F06C   	movff	btemp,calc_ror_data@bvror
 24631  018F46  0060  F008  F06D   	movff	btemp+1,calc_ror_data@bvror+1
 24632  018F4C  0060  F00C  F06E   	movff	btemp+2,calc_ror_data@bvror+2
 24633  018F52  0060  F010  F06F   	movff	btemp+3,calc_ror_data@bvror+3
 24634                           
 24635                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 24636  018F58  0012               	return		;funcret
 24637  018F5A                     __end_of_calc_ror_data:
 24638                           	opt callstack 0
 24639                           
 24640 ;; *************** function _fabsf *****************
 24641 ;; Defined at:
 24642 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 24643 ;; Parameters:    Size  Location     Type
 24644 ;;  x               4  [STACK] float 
 24645 ;; Auto vars:     Size  Location     Type
 24646 ;;  u               4  [STACK] struct .
 24647 ;; Return value:  Size  Location     Type
 24648 ;;                  4  [STACK] float 
 24649 ;; Registers used:
 24650 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 24651 ;; Tracked objects:
 24652 ;;		On entry : 0/0
 24653 ;;		On exit  : 0/0
 24654 ;;		Unchanged: 0/0
 24655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24660 ;;Total ram usage:        0 bytes
 24661 ;; Hardware stack levels used:    1
 24662 ;; Hardware stack levels required when called:   15
 24663 ;; This function calls:
 24664 ;;		Nothing
 24665 ;; This function is called by:
 24666 ;;		_main
 24667 ;;		_calc_ror_data
 24668 ;;		_calc_bsoc
 24669 ;;		_esr_check
 24670 ;; This function uses a reentrant model
 24671 ;;
 24672                           
 24673                           	psect	text100
 24674  01A98A                     __ptext100:
 24675                           	opt callstack 0
 24676  01A98A                     _fabsf:
 24677                           	opt callstack 0
 24678                           
 24679                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24680  01A98A  52E6               	movf	postinc1,f,c
 24681  01A98C  52E6               	movf	postinc1,f,c
 24682  01A98E  52E6               	movf	postinc1,f,c
 24683  01A990  52E6               	movf	postinc1,f,c
 24684                           
 24685                           ;incstack = 0
 24686 ;; hardware stack exceeded
 24687  01A992  0060  F180  F009   	movff	fabsf@F463,btemp+8
 24688  01A998  0060  F184  F00A   	movff	fabsf@F463+1,btemp+9
 24689  01A99E  0060  F188  F00B   	movff	fabsf@F463+2,btemp+10
 24690  01A9A4  0060  F18C  F00C   	movff	fabsf@F463+3,btemp+11
 24691                           
 24692                           ;stkvar	_u @ sp[(-4)+0]
 24693  01A9AA  0EFC               	movlw	-4
 24694  01A9AC  0060  F027  FFE3   	movff	btemp+8,plusw1
 24695  01A9B2  0EFD               	movlw	-3
 24696  01A9B4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24697  01A9BA  0EFE               	movlw	-2
 24698  01A9BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24699  01A9C2  0EFF               	movlw	-1
 24700  01A9C4  0060  F033  FFE3   	movff	btemp+11,plusw1
 24701                           
 24702                           ;stkvar	_x @ sp[(-4)+-4]
 24703  01A9CA  0EF8               	movlw	-8
 24704  01A9CC  006F FF8C  F009    	movff	plusw1,btemp+8
 24705  01A9D2  0EF9               	movlw	-7
 24706  01A9D4  006F FF8C  F00A    	movff	plusw1,btemp+9
 24707  01A9DA  0EFA               	movlw	-6
 24708  01A9DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 24709  01A9E2  0EFB               	movlw	-5
 24710  01A9E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 24711                           
 24712                           ;stkvar	_u @ sp[(-4)+0]
 24713  01A9EA  0EFC               	movlw	-4
 24714  01A9EC  0060  F027  FFE3   	movff	btemp+8,plusw1
 24715  01A9F2  0EFD               	movlw	-3
 24716  01A9F4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24717  01A9FA  0EFE               	movlw	-2
 24718  01A9FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24719  01AA02  0EFF               	movlw	-1
 24720  01AA04  0060  F033  FFE3   	movff	btemp+11,plusw1
 24721                           
 24722                           ;stkvar	_u @ sp[(-4)+0]
 24723  01AA0A  0EFF               	movlw	-1
 24724  01AA0C  9EE3               	bcf	plusw1,7,c
 24725                           
 24726                           ;stkvar	_u @ sp[(-4)+0]
 24727  01AA0E  0EFC               	movlw	-4
 24728  01AA10  006F FF8C  F001    	movff	plusw1,btemp
 24729  01AA16  0EFD               	movlw	-3
 24730  01AA18  006F FF8C  F002    	movff	plusw1,btemp+1
 24731  01AA1E  0EFE               	movlw	-2
 24732  01AA20  006F FF8C  F003    	movff	plusw1,btemp+2
 24733  01AA26  0EFF               	movlw	-1
 24734  01AA28  006F FF8C  F004    	movff	plusw1,btemp+3
 24735                           
 24736                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 24737  01AA2E  0EF8               	movlw	248
 24738  01AA30  26E1               	addwf	fsr1l,f,c
 24739  01AA32  0EFF               	movlw	255
 24740  01AA34  22E2               	addwfc	fsr1h,f,c
 24741  01AA36  0012               	return		;funcret
 24742  01AA38                     __end_of_fabsf:
 24743                           	opt callstack 0
 24744                           
 24745 ;; *************** function _conv_raw_result *****************
 24746 ;; Defined at:
 24747 ;;		line 122 in file "daq.c"
 24748 ;; Parameters:    Size  Location     Type
 24749 ;;  chan            1  [STACK] const enum E16590
 24750 ;;  to_what         1  [STACK] const enum E16652
 24751 ;; Auto vars:     Size  Location     Type
 24752 ;;		None
 24753 ;; Return value:  Size  Location     Type
 24754 ;;                  4  [STACK] float 
 24755 ;; Registers used:
 24756 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24757 ;; Tracked objects:
 24758 ;;		On entry : 0/39
 24759 ;;		On exit  : 0/0
 24760 ;;		Unchanged: 0/0
 24761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24766 ;;Total ram usage:        0 bytes
 24767 ;; Hardware stack levels used:    1
 24768 ;; Hardware stack levels required when called:   17
 24769 ;; This function calls:
 24770 ;;		___fladd
 24771 ;;		___fldiv
 24772 ;;		___flmul
 24773 ;;		___flsub
 24774 ;;		___xxtofl
 24775 ;;		_get_raw_result
 24776 ;;		_nanf
 24777 ;; This function is called by:
 24778 ;;		_main
 24779 ;;		_convert_adc_data
 24780 ;;		_calc_ror_data
 24781 ;;		_check_day_time
 24782 ;;		_init_bsoc
 24783 ;;		_esr_check
 24784 ;; This function uses a reentrant model
 24785 ;;
 24786                           
 24787                           	psect	text101
 24788  015362                     __ptext101:
 24789                           	opt callstack 0
 24790  015362                     _conv_raw_result:
 24791                           	opt callstack 0
 24792                           
 24793                           ;daq.c: 122: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 123: {;daq.c: 125:  switch (to_what) {
 24794                           
 24795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24796                           ;incstack = 0
 24797 ;; hardware stack exceeded
 24798  015362  D276               	goto	l9914
 24799  015364                     l9860:
 24800                           
 24801                           ;daq.c: 127:   if (!(0b0011110001110111 >> chan & 0x1))
 24802                           ;stkvar	_chan @ sp[(0)+-1]
 24803  015364  0EFF               	movlw	-1
 24804  015366  006F FF8C  F00C    	movff	plusw1,btemp+11
 24805  01536C  0E77               	movlw	119
 24806  01536E  6E09               	movwf	(btemp+8)^0,c
 24807  015370  0E3C               	movlw	60
 24808  015372  6E0A               	movwf	(btemp+9)^0,c
 24809  015374  2A0C               	incf	(btemp+11)^0,f,c
 24810  015376  D003               	goto	u9164
 24811  015378                     u9165:
 24812  015378  340A               	rlcf	(btemp+9)^0,w,c
 24813  01537A  320A               	rrcf	(btemp+9)^0,f,c
 24814  01537C  3209               	rrcf	(btemp+8)^0,f,c
 24815  01537E                     u9164:
 24816  01537E  2E0C               	decfsz	(btemp+11)^0,f,c
 24817  015380  D7FB               	goto	u9165
 24818  015382  B009               	btfsc	(btemp+8)^0,0,c
 24819  015384  D007               	goto	l9866
 24820                           
 24821                           ;daq.c: 128:    return nanf("");
 24822  015386  0E49               	movlw	low (STR_64+126)
 24823  015388  6EE6               	movwf	postinc1,c
 24824  01538A  0EFC               	movlw	high (STR_64+126)
 24825  01538C  6EE6               	movwf	postinc1,c
 24826  01538E  EC8B  F0DA         	call	_nanf	;wreg free
 24827  015392  D26E               	goto	l1816
 24828  015394                     l9866:
 24829                           
 24830                           ;daq.c: 130:   if (0b0000000000000011 >> chan & 0x1) {
 24831                           ;stkvar	_chan @ sp[(0)+-1]
 24832  015394  0EFF               	movlw	-1
 24833  015396  006F FF8C  F00C    	movff	plusw1,btemp+11
 24834  01539C  0E03               	movlw	3
 24835  01539E  6E09               	movwf	(btemp+8)^0,c
 24836  0153A0  0E00               	movlw	0
 24837  0153A2  6E0A               	movwf	(btemp+9)^0,c
 24838  0153A4  2A0C               	incf	(btemp+11)^0,f,c
 24839  0153A6  D003               	goto	u9184
 24840  0153A8                     u9185:
 24841  0153A8  340A               	rlcf	(btemp+9)^0,w,c
 24842  0153AA  320A               	rrcf	(btemp+9)^0,f,c
 24843  0153AC  3209               	rrcf	(btemp+8)^0,f,c
 24844  0153AE                     u9184:
 24845  0153AE  2E0C               	decfsz	(btemp+11)^0,f,c
 24846  0153B0  D7FB               	goto	u9185
 24847  0153B2  A009               	btfss	(btemp+8)^0,0,c
 24848  0153B4  D11F               	goto	l9880
 24849                           
 24850                           ;daq.c: 131:    if (0b0000000000000001 >> chan & 0x1) {
 24851                           ;stkvar	_chan @ sp[(0)+-1]
 24852  0153B6  0EFF               	movlw	-1
 24853  0153B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 24854  0153BE  0E01               	movlw	1
 24855  0153C0  6E09               	movwf	(btemp+8)^0,c
 24856  0153C2  0E00               	movlw	0
 24857  0153C4  6E0A               	movwf	(btemp+9)^0,c
 24858  0153C6  2A0C               	incf	(btemp+11)^0,f,c
 24859  0153C8  D003               	goto	u9204
 24860  0153CA                     u9205:
 24861  0153CA  340A               	rlcf	(btemp+9)^0,w,c
 24862  0153CC  320A               	rrcf	(btemp+9)^0,f,c
 24863  0153CE  3209               	rrcf	(btemp+8)^0,f,c
 24864  0153D0                     u9204:
 24865  0153D0  2E0C               	decfsz	(btemp+11)^0,f,c
 24866  0153D2  D7FB               	goto	u9205
 24867  0153D4  A009               	btfss	(btemp+8)^0,0,c
 24868  0153D6  D087               	goto	l9876
 24869                           
 24870                           ;daq.c: 132:     return R.n_zero[0]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[0]) * 0.0870000;
 24871  0153D8  0060  F367  FFE6   	movff	_R+42,postinc1
 24872  0153DE  0060  F36B  FFE6   	movff	_R+43,postinc1
 24873  0153E4  0060  F36F  FFE6   	movff	_R+44,postinc1
 24874  0153EA  0060  F373  FFE6   	movff	_R+45,postinc1
 24875  0153F0  0E0E               	movlw	14
 24876  0153F2  6EE6               	movwf	postinc1,c
 24877  0153F4  0E2D               	movlw	45
 24878  0153F6  6EE6               	movwf	postinc1,c
 24879  0153F8  0EB2               	movlw	178
 24880  0153FA  6EE6               	movwf	postinc1,c
 24881  0153FC  0E3D               	movlw	61
 24882  0153FE  6EE6               	movwf	postinc1,c
 24883  015400  0060  F354  F009   	movff	_R+38,btemp+8	;volatile
 24884  015406  0060  F358  F00A   	movff	_R+39,btemp+9	;volatile
 24885  01540C  0E00               	movlw	0
 24886  01540E  BE0A               	btfsc	(btemp+9)^0,7,c
 24887  015410  0EFF               	movlw	255
 24888  015412  6E0B               	movwf	(btemp+10)^0,c
 24889  015414  6E0C               	movwf	(btemp+11)^0,c
 24890  015416  0060  F027  FFE6   	movff	btemp+8,postinc1
 24891  01541C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24892  015422  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24893  015428  0060  F033  FFE6   	movff	btemp+11,postinc1
 24894  01542E  0E01               	movlw	1
 24895  015430  6EE6               	movwf	postinc1,c
 24896  015432  EC81  F0C2         	call	___xxtofl	;wreg free
 24897  015436  0060  F007  FFE6   	movff	btemp,postinc1
 24898  01543C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24899  015442  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24900  015448  0060  F013  FFE6   	movff	btemp+3,postinc1
 24901                           
 24902                           ;stkvar	_chan @ sp[(-12)+-1]
 24903  01544E  0EF3               	movlw	-13
 24904  015450  50E3               	movf	plusw1,w,c
 24905  015452  6EE6               	movwf	postinc1,c
 24906  015454  EC1B  F0E2         	call	_get_raw_result	;wreg free
 24907  015458  0060  F004  F00B   	movff	btemp,btemp+10
 24908  01545E  0060  F008  F00C   	movff	btemp+1,btemp+11
 24909  015464  500B               	movf	(btemp+10)^0,w,c
 24910  015466  6E05               	movwf	(btemp+4)^0,c
 24911  015468  500C               	movf	(btemp+11)^0,w,c
 24912  01546A  6E06               	movwf	(btemp+5)^0,c
 24913  01546C  6A07               	clrf	(btemp+6)^0,c
 24914  01546E  6A08               	clrf	(btemp+7)^0,c
 24915  015470  0060  F017  FFE6   	movff	btemp+4,postinc1
 24916  015476  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24917  01547C  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24918  015482  0060  F023  FFE6   	movff	btemp+7,postinc1
 24919  015488  0E00               	movlw	0
 24920  01548A  6EE6               	movwf	postinc1,c
 24921  01548C  EC81  F0C2         	call	___xxtofl	;wreg free
 24922  015490  0060  F007  FFE6   	movff	btemp,postinc1
 24923  015496  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24924  01549C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24925  0154A2  0060  F013  FFE6   	movff	btemp+3,postinc1
 24926  0154A8  EC0C  F0DD         	call	___flsub	;wreg free
 24927  0154AC  0060  F007  FFE6   	movff	btemp,postinc1
 24928  0154B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24929  0154B8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24930  0154BE  0060  F013  FFE6   	movff	btemp+3,postinc1
 24931  0154C4  EC01  F09F         	call	___flmul	;wreg free
 24932  0154C8  0060  F007  FFE6   	movff	btemp,postinc1
 24933  0154CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24934  0154D4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24935  0154DA  0060  F013  FFE6   	movff	btemp+3,postinc1
 24936  0154E0  EC16  F0A3         	call	___fladd	;wreg free
 24937  0154E4  D1C5               	goto	l1816
 24938  0154E6                     l9876:
 24939                           
 24940                           ;daq.c: 134:     return R.n_zero[1]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[1]) * 0.0361000;
 24941  0154E6  0060  F377  FFE6   	movff	_R+46,postinc1
 24942  0154EC  0060  F37B  FFE6   	movff	_R+47,postinc1
 24943  0154F2  0060  F37F  FFE6   	movff	_R+48,postinc1
 24944  0154F8  0060  F383  FFE6   	movff	_R+49,postinc1
 24945  0154FE  0E98               	movlw	152
 24946  015500  6EE6               	movwf	postinc1,c
 24947  015502  0EDD               	movlw	221
 24948  015504  6EE6               	movwf	postinc1,c
 24949  015506  0E13               	movlw	19
 24950  015508  6EE6               	movwf	postinc1,c
 24951  01550A  0E3D               	movlw	61
 24952  01550C  6EE6               	movwf	postinc1,c
 24953  01550E  0060  F35C  F009   	movff	_R+40,btemp+8	;volatile
 24954  015514  0060  F360  F00A   	movff	_R+41,btemp+9	;volatile
 24955  01551A  0E00               	movlw	0
 24956  01551C  BE0A               	btfsc	(btemp+9)^0,7,c
 24957  01551E  0EFF               	movlw	255
 24958  015520  6E0B               	movwf	(btemp+10)^0,c
 24959  015522  6E0C               	movwf	(btemp+11)^0,c
 24960  015524  0060  F027  FFE6   	movff	btemp+8,postinc1
 24961  01552A  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24962  015530  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24963  015536  0060  F033  FFE6   	movff	btemp+11,postinc1
 24964  01553C  0E01               	movlw	1
 24965  01553E  6EE6               	movwf	postinc1,c
 24966  015540  EC81  F0C2         	call	___xxtofl	;wreg free
 24967  015544  0060  F007  FFE6   	movff	btemp,postinc1
 24968  01554A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24969  015550  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24970  015556  0060  F013  FFE6   	movff	btemp+3,postinc1
 24971                           
 24972                           ;stkvar	_chan @ sp[(-12)+-1]
 24973  01555C  0EF3               	movlw	-13
 24974  01555E  50E3               	movf	plusw1,w,c
 24975  015560  6EE6               	movwf	postinc1,c
 24976  015562  EC1B  F0E2         	call	_get_raw_result	;wreg free
 24977  015566  0060  F004  F00B   	movff	btemp,btemp+10
 24978  01556C  0060  F008  F00C   	movff	btemp+1,btemp+11
 24979  015572  500B               	movf	(btemp+10)^0,w,c
 24980  015574  6E05               	movwf	(btemp+4)^0,c
 24981  015576  500C               	movf	(btemp+11)^0,w,c
 24982  015578  6E06               	movwf	(btemp+5)^0,c
 24983  01557A  6A07               	clrf	(btemp+6)^0,c
 24984  01557C  6A08               	clrf	(btemp+7)^0,c
 24985  01557E  0060  F017  FFE6   	movff	btemp+4,postinc1
 24986  015584  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24987  01558A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24988  015590  0060  F023  FFE6   	movff	btemp+7,postinc1
 24989  015596  0E00               	movlw	0
 24990  015598  6EE6               	movwf	postinc1,c
 24991  01559A  EC81  F0C2         	call	___xxtofl	;wreg free
 24992  01559E  0060  F007  FFE6   	movff	btemp,postinc1
 24993  0155A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24994  0155AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24995  0155B0  0060  F013  FFE6   	movff	btemp+3,postinc1
 24996  0155B6  EC0C  F0DD         	call	___flsub	;wreg free
 24997  0155BA  0060  F007  FFE6   	movff	btemp,postinc1
 24998  0155C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24999  0155C6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25000  0155CC  0060  F013  FFE6   	movff	btemp+3,postinc1
 25001  0155D2  EC01  F09F         	call	___flmul	;wreg free
 25002  0155D6  0060  F007  FFE6   	movff	btemp,postinc1
 25003  0155DC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25004  0155E2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25005  0155E8  0060  F013  FFE6   	movff	btemp+3,postinc1
 25006  0155EE  EC16  F0A3         	call	___fladd	;wreg free
 25007  0155F2  D13E               	goto	l1816
 25008  0155F4                     l9880:
 25009                           
 25010                           ;daq.c: 137:    if (0b0000100000000000 >> chan & 0x1) {
 25011                           ;stkvar	_chan @ sp[(0)+-1]
 25012  0155F4  0EFF               	movlw	-1
 25013  0155F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 25014  0155FC  0E00               	movlw	0
 25015  0155FE  6E09               	movwf	(btemp+8)^0,c
 25016  015600  0E08               	movlw	8
 25017  015602  6E0A               	movwf	(btemp+9)^0,c
 25018  015604  2A0C               	incf	(btemp+11)^0,f,c
 25019  015606  D003               	goto	u9224
 25020  015608                     u9225:
 25021  015608  340A               	rlcf	(btemp+9)^0,w,c
 25022  01560A  320A               	rrcf	(btemp+9)^0,f,c
 25023  01560C  3209               	rrcf	(btemp+8)^0,f,c
 25024  01560E                     u9224:
 25025  01560E  2E0C               	decfsz	(btemp+11)^0,f,c
 25026  015610  D7FB               	goto	u9225
 25027  015612  A009               	btfss	(btemp+8)^0,0,c
 25028  015614  D008               	goto	l9888
 25029                           
 25030                           ;daq.c: 138:     return 25.0;
 25031  015616  0E00               	movlw	0
 25032  015618  6E01               	movwf	btemp^0,c
 25033  01561A  0E00               	movlw	0
 25034  01561C  6E02               	movwf	(btemp+1)^0,c
 25035  01561E  0EC8               	movlw	200
 25036  015620  6E03               	movwf	(btemp+2)^0,c
 25037  015622  0E41               	movlw	65
 25038  015624  D113               	goto	L30
 25039  015626                     l9888:
 25040                           
 25041                           ;daq.c: 140:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 25042  015626  0E00               	movlw	0
 25043  015628  6EE6               	movwf	postinc1,c
 25044  01562A  0E00               	movlw	0
 25045  01562C  6EE6               	movwf	postinc1,c
 25046  01562E  0E7A               	movlw	122
 25047  015630  6EE6               	movwf	postinc1,c
 25048  015632  0E44               	movlw	68
 25049  015634  6EE6               	movwf	postinc1,c
 25050  015636  0E61               	movlw	97
 25051  015638  6EE6               	movwf	postinc1,c
 25052  01563A  0E03               	movlw	3
 25053  01563C  6EE6               	movwf	postinc1,c
 25054  01563E  0E84               	movlw	132
 25055  015640  6EE6               	movwf	postinc1,c
 25056  015642  0E40               	movlw	64
 25057  015644  6EE6               	movwf	postinc1,c
 25058                           
 25059                           ;stkvar	_chan @ sp[(-8)+-1]
 25060  015646  0EF7               	movlw	-9
 25061  015648  50E3               	movf	plusw1,w,c
 25062  01564A  6EE6               	movwf	postinc1,c
 25063  01564C  EC1B  F0E2         	call	_get_raw_result	;wreg free
 25064  015650  0060  F004  F00B   	movff	btemp,btemp+10
 25065  015656  0060  F008  F00C   	movff	btemp+1,btemp+11
 25066  01565C  500B               	movf	(btemp+10)^0,w,c
 25067  01565E  6E05               	movwf	(btemp+4)^0,c
 25068  015660  500C               	movf	(btemp+11)^0,w,c
 25069  015662  6E06               	movwf	(btemp+5)^0,c
 25070  015664  6A07               	clrf	(btemp+6)^0,c
 25071  015666  6A08               	clrf	(btemp+7)^0,c
 25072  015668  0060  F017  FFE6   	movff	btemp+4,postinc1
 25073  01566E  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25074  015674  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25075  01567A  0060  F023  FFE6   	movff	btemp+7,postinc1
 25076  015680  0E00               	movlw	0
 25077  015682  6EE6               	movwf	postinc1,c
 25078  015684  EC81  F0C2         	call	___xxtofl	;wreg free
 25079  015688  0060  F007  FFE6   	movff	btemp,postinc1
 25080  01568E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25081  015694  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25082  01569A  0060  F013  FFE6   	movff	btemp+3,postinc1
 25083  0156A0  EC01  F09F         	call	___flmul	;wreg free
 25084  0156A4  0060  F007  FFE6   	movff	btemp,postinc1
 25085  0156AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25086  0156B0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25087  0156B6  0060  F013  FFE6   	movff	btemp+3,postinc1
 25088  0156BC  ECF4  F0A6         	call	___fldiv	;wreg free
 25089  0156C0  D0D7               	goto	l1816
 25090  0156C2                     l9892:
 25091                           
 25092                           ;daq.c: 145:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 25093                           ;stkvar	_chan @ sp[(0)+-1]
 25094  0156C2  0EFF               	movlw	-1
 25095  0156C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 25096  0156CA  0E03               	movlw	3
 25097  0156CC  6E09               	movwf	(btemp+8)^0,c
 25098  0156CE  0E00               	movlw	0
 25099  0156D0  6E0A               	movwf	(btemp+9)^0,c
 25100  0156D2  2A0C               	incf	(btemp+11)^0,f,c
 25101  0156D4  D003               	goto	u9244
 25102  0156D6                     u9245:
 25103  0156D6  340A               	rlcf	(btemp+9)^0,w,c
 25104  0156D8  320A               	rrcf	(btemp+9)^0,f,c
 25105  0156DA  3209               	rrcf	(btemp+8)^0,f,c
 25106  0156DC                     u9244:
 25107  0156DC  2E0C               	decfsz	(btemp+11)^0,f,c
 25108  0156DE  D7FB               	goto	u9245
 25109  0156E0  B009               	btfsc	(btemp+8)^0,0,c
 25110  0156E2  D011               	goto	u9270
 25111                           
 25112                           ;stkvar	_chan @ sp[(0)+-1]
 25113  0156E4  0EFF               	movlw	-1
 25114  0156E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 25115  0156EC  0E00               	movlw	0
 25116  0156EE  6E09               	movwf	(btemp+8)^0,c
 25117  0156F0  0E08               	movlw	8
 25118  0156F2  6E0A               	movwf	(btemp+9)^0,c
 25119  0156F4  2A0C               	incf	(btemp+11)^0,f,c
 25120  0156F6  D003               	goto	u9264
 25121  0156F8                     u9265:
 25122  0156F8  340A               	rlcf	(btemp+9)^0,w,c
 25123  0156FA  320A               	rrcf	(btemp+9)^0,f,c
 25124  0156FC  3209               	rrcf	(btemp+8)^0,f,c
 25125  0156FE                     u9264:
 25126  0156FE  2E0C               	decfsz	(btemp+11)^0,f,c
 25127  015700  D7FB               	goto	u9265
 25128  015702  A009               	btfss	(btemp+8)^0,0,c
 25129  015704  D04E               	goto	l9900
 25130  015706                     u9270:
 25131                           
 25132                           ;daq.c: 146:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 25133  015706  0E00               	movlw	0
 25134  015708  6EE6               	movwf	postinc1,c
 25135  01570A  0E00               	movlw	0
 25136  01570C  6EE6               	movwf	postinc1,c
 25137  01570E  0E7A               	movlw	122
 25138  015710  6EE6               	movwf	postinc1,c
 25139  015712  0E44               	movlw	68
 25140  015714  6EE6               	movwf	postinc1,c
 25141  015716  0E00               	movlw	0
 25142  015718  6EE6               	movwf	postinc1,c
 25143  01571A  0E00               	movlw	0
 25144  01571C  6EE6               	movwf	postinc1,c
 25145  01571E  0E20               	movlw	32
 25146  015720  6EE6               	movwf	postinc1,c
 25147  015722  0E3F               	movlw	63
 25148  015724  6EE6               	movwf	postinc1,c
 25149                           
 25150                           ;stkvar	_chan @ sp[(-8)+-1]
 25151  015726  0EF7               	movlw	-9
 25152  015728  50E3               	movf	plusw1,w,c
 25153  01572A  6EE6               	movwf	postinc1,c
 25154  01572C  EC1B  F0E2         	call	_get_raw_result	;wreg free
 25155  015730  0060  F004  F00B   	movff	btemp,btemp+10
 25156  015736  0060  F008  F00C   	movff	btemp+1,btemp+11
 25157  01573C  500B               	movf	(btemp+10)^0,w,c
 25158  01573E  6E05               	movwf	(btemp+4)^0,c
 25159  015740  500C               	movf	(btemp+11)^0,w,c
 25160  015742  6E06               	movwf	(btemp+5)^0,c
 25161  015744  6A07               	clrf	(btemp+6)^0,c
 25162  015746  6A08               	clrf	(btemp+7)^0,c
 25163  015748  0060  F017  FFE6   	movff	btemp+4,postinc1
 25164  01574E  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25165  015754  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25166  01575A  0060  F023  FFE6   	movff	btemp+7,postinc1
 25167  015760  0E00               	movlw	0
 25168  015762  6EE6               	movwf	postinc1,c
 25169  015764  EC81  F0C2         	call	___xxtofl	;wreg free
 25170  015768  0060  F007  FFE6   	movff	btemp,postinc1
 25171  01576E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25172  015774  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25173  01577A  0060  F013  FFE6   	movff	btemp+3,postinc1
 25174  015780  EC01  F09F         	call	___flmul	;wreg free
 25175  015784  0060  F007  FFE6   	movff	btemp,postinc1
 25176  01578A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25177  015790  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25178  015796  0060  F013  FFE6   	movff	btemp+3,postinc1
 25179  01579C  ECF4  F0A6         	call	___fldiv	;wreg free
 25180  0157A0  D067               	goto	l1816
 25181  0157A2                     l9900:
 25182                           
 25183                           ;daq.c: 148:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 25184  0157A2  0E00               	movlw	0
 25185  0157A4  6EE6               	movwf	postinc1,c
 25186  0157A6  0E00               	movlw	0
 25187  0157A8  6EE6               	movwf	postinc1,c
 25188  0157AA  0E7A               	movlw	122
 25189  0157AC  6EE6               	movwf	postinc1,c
 25190  0157AE  0E44               	movlw	68
 25191  0157B0  6EE6               	movwf	postinc1,c
 25192  0157B2  0E61               	movlw	97
 25193  0157B4  6EE6               	movwf	postinc1,c
 25194  0157B6  0E03               	movlw	3
 25195  0157B8  6EE6               	movwf	postinc1,c
 25196  0157BA  0E84               	movlw	132
 25197  0157BC  6EE6               	movwf	postinc1,c
 25198  0157BE  0E40               	movlw	64
 25199  0157C0  6EE6               	movwf	postinc1,c
 25200                           
 25201                           ;stkvar	_chan @ sp[(-8)+-1]
 25202  0157C2  0EF7               	movlw	-9
 25203  0157C4  50E3               	movf	plusw1,w,c
 25204  0157C6  6EE6               	movwf	postinc1,c
 25205  0157C8  EC1B  F0E2         	call	_get_raw_result	;wreg free
 25206  0157CC  0060  F004  F00B   	movff	btemp,btemp+10
 25207  0157D2  0060  F008  F00C   	movff	btemp+1,btemp+11
 25208  0157D8  500B               	movf	(btemp+10)^0,w,c
 25209  0157DA  6E05               	movwf	(btemp+4)^0,c
 25210  0157DC  500C               	movf	(btemp+11)^0,w,c
 25211  0157DE  6E06               	movwf	(btemp+5)^0,c
 25212  0157E0  6A07               	clrf	(btemp+6)^0,c
 25213  0157E2  6A08               	clrf	(btemp+7)^0,c
 25214  0157E4  0060  F017  FFE6   	movff	btemp+4,postinc1
 25215  0157EA  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25216  0157F0  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25217  0157F6  0060  F023  FFE6   	movff	btemp+7,postinc1
 25218  0157FC  0E00               	movlw	0
 25219  0157FE  6EE6               	movwf	postinc1,c
 25220  015800  EC81  F0C2         	call	___xxtofl	;wreg free
 25221  015804  0060  F007  FFE6   	movff	btemp,postinc1
 25222  01580A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25223  015810  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25224  015816  0060  F013  FFE6   	movff	btemp+3,postinc1
 25225  01581C  EC01  F09F         	call	___flmul	;wreg free
 25226  015820  0060  F007  FFE6   	movff	btemp,postinc1
 25227  015826  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25228  01582C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25229  015832  0060  F013  FFE6   	movff	btemp+3,postinc1
 25230  015838  ECF4  F0A6         	call	___fldiv	;wreg free
 25231  01583C  D019               	goto	l1816
 25232  01583E                     l9906:
 25233                           
 25234                           ;daq.c: 151:   return 0.0;
 25235  01583E  0E00               	movlw	0
 25236  015840  6E01               	movwf	btemp^0,c
 25237  015842  0E00               	movlw	0
 25238  015844  6E02               	movwf	(btemp+1)^0,c
 25239  015846  0E00               	movlw	0
 25240  015848  6E03               	movwf	(btemp+2)^0,c
 25241  01584A  0E00               	movlw	0
 25242  01584C                     L30:
 25243  01584C  6E04               	movwf	(btemp+3)^0,c
 25244  01584E  D010               	goto	l1816
 25245  015850                     l9914:
 25246                           
 25247                           ;stkvar	_to_what @ sp[(0)+-2]
 25248  015850  0EFE               	movlw	-2
 25249  015852  50E3               	movf	plusw1,w,c
 25250  015854  6E0B               	movwf	(btemp+10)^0,c
 25251  015856  6A0C               	clrf	(btemp+11)^0,c
 25252                           
 25253                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25254                           ; Switch size 1, requested type "simple"
 25255                           ; Number of cases is 1, Range of values is 0 to 0
 25256                           ; switch strategies available:
 25257                           ; Name         Instructions Cycles
 25258                           ; simple_byte            4     3 (average)
 25259                           ;	Chosen strategy is simple_byte
 25260  015858  500C               	movf	(btemp+11)^0,w,c
 25261  01585A  0A00               	xorlw	0	; case 0
 25262  01585C  A4D8               	btfss	status,2,c
 25263  01585E  D7EF               	goto	l9906
 25264                           
 25265                           ; Switch size 1, requested type "simple"
 25266                           ; Number of cases is 2, Range of values is 0 to 1
 25267                           ; switch strategies available:
 25268                           ; Name         Instructions Cycles
 25269                           ; simple_byte            7     4 (average)
 25270                           ;	Chosen strategy is simple_byte
 25271  015860  500B               	movf	(btemp+10)^0,w,c
 25272  015862  0A00               	xorlw	0	; case 0
 25273  015864  B4D8               	btfsc	status,2,c
 25274  015866  D57E               	goto	l9860
 25275  015868  0A01               	xorlw	1	; case 1
 25276  01586A  B4D8               	btfsc	status,2,c
 25277  01586C  D72A               	goto	l9892
 25278  01586E  D7E7               	goto	l9906
 25279  015870                     l1816:
 25280                           
 25281                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 25282  015870  52E5               	movf	postdec1,f,c
 25283  015872  52E5               	movf	postdec1,f,c
 25284  015874  0012               	return		;funcret
 25285  015876                     __end_of_conv_raw_result:
 25286                           	opt callstack 0
 25287                           
 25288 ;; *************** function _nanf *****************
 25289 ;; Defined at:
 25290 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 25291 ;; Parameters:    Size  Location     Type
 25292 ;;  s               2  [STACK] PTR const unsigned char 
 25293 ;;		 -> STR_101(1), STR_63(1), 
 25294 ;; Auto vars:     Size  Location     Type
 25295 ;;  u               4  [STACK] struct .
 25296 ;; Return value:  Size  Location     Type
 25297 ;;                  4  [STACK] float 
 25298 ;; Registers used:
 25299 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 25300 ;; Tracked objects:
 25301 ;;		On entry : 0/39
 25302 ;;		On exit  : 0/0
 25303 ;;		Unchanged: 0/0
 25304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25309 ;;Total ram usage:        0 bytes
 25310 ;; Hardware stack levels used:    1
 25311 ;; Hardware stack levels required when called:   15
 25312 ;; This function calls:
 25313 ;;		Nothing
 25314 ;; This function is called by:
 25315 ;;		_conv_raw_result
 25316 ;; This function uses a reentrant model
 25317 ;;
 25318                           
 25319                           	psect	text102
 25320  01B516                     __ptext102:
 25321                           	opt callstack 0
 25322  01B516                     _nanf:
 25323                           	opt callstack 0
 25324                           
 25325                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25326  01B516  52E6               	movf	postinc1,f,c
 25327  01B518  52E6               	movf	postinc1,f,c
 25328  01B51A  52E6               	movf	postinc1,f,c
 25329  01B51C  52E6               	movf	postinc1,f,c
 25330                           
 25331                           ;incstack = 0
 25332 ;; hardware stack exceeded
 25333  01B51E  0EFF               	movlw	255
 25334  01B520  6E09               	movwf	(btemp+8)^0,c
 25335  01B522  0EFF               	movlw	255
 25336  01B524  6E0A               	movwf	(btemp+9)^0,c
 25337  01B526  0EFF               	movlw	255
 25338  01B528  6E0B               	movwf	(btemp+10)^0,c
 25339  01B52A  0E7F               	movlw	127
 25340  01B52C  6E0C               	movwf	(btemp+11)^0,c
 25341                           
 25342                           ;stkvar	_u @ sp[(-4)+0]
 25343  01B52E  0EFC               	movlw	-4
 25344  01B530  0060  F027  FFE3   	movff	btemp+8,plusw1
 25345  01B536  0EFD               	movlw	-3
 25346  01B538  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25347  01B53E  0EFE               	movlw	-2
 25348  01B540  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25349  01B546  0EFF               	movlw	-1
 25350  01B548  0060  F033  FFE3   	movff	btemp+11,plusw1
 25351                           
 25352                           ;stkvar	_u @ sp[(-4)+0]
 25353  01B54E  0EFC               	movlw	-4
 25354  01B550  006F FF8C  F001    	movff	plusw1,btemp
 25355  01B556  0EFD               	movlw	-3
 25356  01B558  006F FF8C  F002    	movff	plusw1,btemp+1
 25357  01B55E  0EFE               	movlw	-2
 25358  01B560  006F FF8C  F003    	movff	plusw1,btemp+2
 25359  01B566  0EFF               	movlw	-1
 25360  01B568  006F FF8C  F004    	movff	plusw1,btemp+3
 25361                           
 25362                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 25363  01B56E  0EFA               	movlw	250
 25364  01B570  26E1               	addwf	fsr1l,f,c
 25365  01B572  0EFF               	movlw	255
 25366  01B574  22E2               	addwfc	fsr1h,f,c
 25367  01B576  0012               	return		;funcret
 25368  01B578                     __end_of_nanf:
 25369                           	opt callstack 0
 25370                           
 25371 ;; *************** function _get_raw_result *****************
 25372 ;; Defined at:
 25373 ;;		line 114 in file "daq.c"
 25374 ;; Parameters:    Size  Location     Type
 25375 ;;  index           1  [STACK] const enum E16590
 25376 ;; Auto vars:     Size  Location     Type
 25377 ;;		None
 25378 ;; Return value:  Size  Location     Type
 25379 ;;                  2  [STACK] unsigned short 
 25380 ;; Registers used:
 25381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 25382 ;; Tracked objects:
 25383 ;;		On entry : 0/1
 25384 ;;		On exit  : 0/0
 25385 ;;		Unchanged: 0/0
 25386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25391 ;;Total ram usage:        0 bytes
 25392 ;; Hardware stack levels used:    1
 25393 ;; Hardware stack levels required when called:   15
 25394 ;; This function calls:
 25395 ;;		Nothing
 25396 ;; This function is called by:
 25397 ;;		_main
 25398 ;;		_conv_raw_result
 25399 ;; This function uses a reentrant model
 25400 ;;
 25401                           
 25402                           	psect	text103
 25403  01C436                     __ptext103:
 25404                           	opt callstack 0
 25405  01C436                     _get_raw_result:
 25406                           	opt callstack 0
 25407                           
 25408                           ;daq.c: 114: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 115: {;daq.c
      +                          : 116:  return R.raw_adc[index];
 25409                           ;stkvar	_index @ sp[(0)+-1]
 25410                           
 25411                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25412                           ;incstack = 0
 25413 ;; hardware stack exceeded
 25414  01C436  0EFF               	movlw	-1
 25415  01C438  50E3               	movf	plusw1,w,c
 25416  01C43A  0D02               	mullw	2
 25417  01C43C  50F3               	movf	243,w,c
 25418  01C43E  0FAF               	addlw	low _R
 25419  01C440  6ED9               	movwf	fsr2l,c
 25420  01C442  6ADA               	clrf	fsr2h,c
 25421  01C444  006F FF78  F001    	movff	postinc2,btemp
 25422  01C44A  006F FF74  F002    	movff	postdec2,btemp+1
 25423                           
 25424                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 25425  01C450  52E5               	movf	postdec1,f,c
 25426  01C452  0012               	return		;funcret
 25427  01C454                     __end_of_get_raw_result:
 25428                           	opt callstack 0
 25429                           
 25430 ;; *************** function ___xxtofl *****************
 25431 ;; Defined at:
 25432 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 25433 ;; Parameters:    Size  Location     Type
 25434 ;;  sign            1  [STACK] unsigned char 
 25435 ;;  val             4  [STACK] long 
 25436 ;; Auto vars:     Size  Location     Type
 25437 ;;  arg             4  [STACK] unsigned long 
 25438 ;;  exp             1  [STACK] unsigned char 
 25439 ;; Return value:  Size  Location     Type
 25440 ;;                  4  [STACK] unsigned char 
 25441 ;; Registers used:
 25442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 25443 ;; Tracked objects:
 25444 ;;		On entry : 0/0
 25445 ;;		On exit  : 0/0
 25446 ;;		Unchanged: 0/0
 25447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25452 ;;Total ram usage:        0 bytes
 25453 ;; Hardware stack levels used:    1
 25454 ;; Hardware stack levels required when called:   15
 25455 ;; This function calls:
 25456 ;;		Nothing
 25457 ;; This function is called by:
 25458 ;;		_conv_raw_result
 25459 ;;		_init_bsoc
 25460 ;; This function uses a reentrant model
 25461 ;;
 25462                           
 25463                           	psect	text104
 25464  018502                     __ptext104:
 25465                           	opt callstack 0
 25466  018502                     ___xxtofl:
 25467                           	opt callstack 0
 25468                           
 25469                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25470  018502  0E05               	movlw	5
 25471  018504  26E1               	addwf	fsr1l,f,c
 25472  018506  0E00               	movlw	0
 25473  018508  22E2               	addwfc	fsr1h,f,c
 25474                           
 25475                           ;stkvar	_sign @ sp[(-5)+-1]
 25476                           
 25477                           ;incstack = 0
 25478 ;; hardware stack exceeded
 25479  01850A  0EFA               	movlw	-6
 25480  01850C  50E3               	movf	plusw1,w,c
 25481  01850E  B4D8               	btfsc	status,2,c
 25482  018510  D01D               	goto	l9808
 25483                           
 25484                           ;stkvar	_val @ sp[(-5)+-5]
 25485  018512  0EF9               	movlw	-7
 25486  018514  AEE3               	btfss	plusw1,7,c
 25487  018516  D01A               	goto	l9808
 25488                           
 25489                           ;stkvar	_val @ sp[(-5)+-5]
 25490  018518  0EF6               	movlw	-10
 25491  01851A  006F FF8C  F009    	movff	plusw1,btemp+8
 25492  018520  0EF7               	movlw	-9
 25493  018522  006F FF8C  F00A    	movff	plusw1,btemp+9
 25494  018528  0EF8               	movlw	-8
 25495  01852A  006F FF8C  F00B    	movff	plusw1,btemp+10
 25496  018530  0EF9               	movlw	-7
 25497  018532  006F FF8C  F00C    	movff	plusw1,btemp+11
 25498  018538  1E09               	comf	(btemp+8)^0,f,c
 25499  01853A  1E0A               	comf	(btemp+9)^0,f,c
 25500  01853C  1E0B               	comf	(btemp+10)^0,f,c
 25501  01853E  1E0C               	comf	(btemp+11)^0,f,c
 25502  018540  2A09               	incf	(btemp+8)^0,f,c
 25503  018542  0E00               	movlw	0
 25504  018544  220A               	addwfc	(btemp+9)^0,f,c
 25505  018546  220B               	addwfc	(btemp+10)^0,f,c
 25506  018548  220C               	addwfc	(btemp+11)^0,f,c
 25507  01854A  D010               	goto	L31
 25508  01854C                     l9808:
 25509                           
 25510                           ;stkvar	_val @ sp[(-5)+-5]
 25511  01854C  0EF6               	movlw	-10
 25512  01854E  006F FF8C  F009    	movff	plusw1,btemp+8
 25513  018554  0EF7               	movlw	-9
 25514  018556  006F FF8C  F00A    	movff	plusw1,btemp+9
 25515  01855C  0EF8               	movlw	-8
 25516  01855E  006F FF8C  F00B    	movff	plusw1,btemp+10
 25517  018564  0EF9               	movlw	-7
 25518  018566  006F FF8C  F00C    	movff	plusw1,btemp+11
 25519  01856C                     L31:
 25520                           
 25521                           ;stkvar	_arg @ sp[(-5)+0]
 25522  01856C  0EFB               	movlw	-5
 25523  01856E  0060  F027  FFE3   	movff	btemp+8,plusw1
 25524  018574  0EFC               	movlw	-4
 25525  018576  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25526  01857C  0EFD               	movlw	-3
 25527  01857E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25528  018584  0EFE               	movlw	-2
 25529  018586  0060  F033  FFE3   	movff	btemp+11,plusw1
 25530                           
 25531                           ;stkvar	_val @ sp[(-5)+-5]
 25532  01858C  0EF6               	movlw	-10
 25533  01858E  50E3               	movf	plusw1,w,c
 25534  018590  E113               	bnz	l9816
 25535  018592  0EF7               	movlw	-9
 25536  018594  50E3               	movf	plusw1,w,c
 25537  018596  E110               	bnz	l9816
 25538  018598  0EF8               	movlw	-8
 25539  01859A  50E3               	movf	plusw1,w,c
 25540  01859C  E10D               	bnz	l9816
 25541  01859E  0EF9               	movlw	-7
 25542  0185A0  50E3               	movf	plusw1,w,c
 25543  0185A2  A4D8               	btfss	status,2,c
 25544  0185A4  D009               	goto	l9816
 25545  0185A6  0E00               	movlw	0
 25546  0185A8  6E01               	movwf	btemp^0,c
 25547  0185AA  0E00               	movlw	0
 25548  0185AC  6E02               	movwf	(btemp+1)^0,c
 25549  0185AE  0E00               	movlw	0
 25550  0185B0  6E03               	movwf	(btemp+2)^0,c
 25551  0185B2  0E00               	movlw	0
 25552  0185B4  6E04               	movwf	(btemp+3)^0,c
 25553  0185B6  D0A2               	goto	l3139
 25554  0185B8                     l9816:
 25555  0185B8  0E96               	movlw	150
 25556  0185BA  6E0C               	movwf	(btemp+11)^0,c
 25557                           
 25558                           ;stkvar	_exp @ sp[(-5)+4]
 25559  0185BC  0EFF               	movlw	-1
 25560  0185BE  0060  F033  FFE3   	movff	btemp+11,plusw1
 25561  0185C4  D00B               	goto	l9820
 25562  0185C6                     l9818:
 25563                           
 25564                           ;stkvar	_exp @ sp[(-5)+4]
 25565  0185C6  0EFF               	movlw	-1
 25566  0185C8  2AE3               	incf	plusw1,f,c
 25567                           
 25568                           ;stkvar	_arg @ sp[(-5)+0]
 25569  0185CA  90D8               	bcf	status,0,c
 25570  0185CC  0EFE               	movlw	-2
 25571  0185CE  32E3               	rrcf	plusw1,f,c
 25572  0185D0  0EFD               	movlw	-3
 25573  0185D2  32E3               	rrcf	plusw1,f,c
 25574  0185D4  0EFC               	movlw	-4
 25575  0185D6  32E3               	rrcf	plusw1,f,c
 25576  0185D8  0EFB               	movlw	-5
 25577  0185DA  32E3               	rrcf	plusw1,f,c
 25578  0185DC                     l9820:
 25579                           
 25580                           ;stkvar	_arg @ sp[(-5)+0]
 25581  0185DC  50E1               	movf	fsr1l,w,c
 25582  0185DE  0FFB               	addlw	-5
 25583  0185E0  6ED9               	movwf	fsr2l,c
 25584  0185E2  50E2               	movf	fsr1h,w,c
 25585  0185E4  6EDA               	movwf	fsr2h,c
 25586  0185E6  0EFF               	movlw	255
 25587  0185E8  22DA               	addwfc	fsr2h,f,c
 25588  0185EA  52DE               	movf	postinc2,f,c
 25589  0185EC  52DE               	movf	postinc2,f,c
 25590  0185EE  52DE               	movf	postinc2,f,c
 25591  0185F0  0EFE               	movlw	254
 25592  0185F2  14DD               	andwf	postdec2,w,c
 25593  0185F4  B4D8               	btfsc	status,2,c
 25594  0185F6  D018               	goto	l9828
 25595  0185F8  D7E6               	goto	l9818
 25596  0185FA                     l9822:
 25597                           
 25598                           ;stkvar	_exp @ sp[(-5)+4]
 25599  0185FA  0EFF               	movlw	-1
 25600  0185FC  2AE3               	incf	plusw1,f,c
 25601                           
 25602                           ;stkvar	_arg @ sp[(-5)+0]
 25603  0185FE  50E1               	movf	fsr1l,w,c
 25604  018600  0FFB               	addlw	-5
 25605  018602  6ED9               	movwf	fsr2l,c
 25606  018604  50E2               	movf	fsr1h,w,c
 25607  018606  6EDA               	movwf	fsr2h,c
 25608  018608  0EFF               	movlw	255
 25609  01860A  22DA               	addwfc	fsr2h,f,c
 25610  01860C  2ADE               	incf	postinc2,f,c
 25611  01860E  0E00               	movlw	0
 25612  018610  22DE               	addwfc	postinc2,f,c
 25613  018612  22DE               	addwfc	postinc2,f,c
 25614  018614  22DE               	addwfc	postinc2,f,c
 25615                           
 25616                           ;stkvar	_arg @ sp[(-5)+0]
 25617  018616  90D8               	bcf	status,0,c
 25618  018618  0EFE               	movlw	-2
 25619  01861A  32E3               	rrcf	plusw1,f,c
 25620  01861C  0EFD               	movlw	-3
 25621  01861E  32E3               	rrcf	plusw1,f,c
 25622  018620  0EFC               	movlw	-4
 25623  018622  32E3               	rrcf	plusw1,f,c
 25624  018624  0EFB               	movlw	-5
 25625  018626  32E3               	rrcf	plusw1,f,c
 25626  018628                     l9828:
 25627                           
 25628                           ;stkvar	_arg @ sp[(-5)+0]
 25629  018628  50E1               	movf	fsr1l,w,c
 25630  01862A  0FFB               	addlw	-5
 25631  01862C  6ED9               	movwf	fsr2l,c
 25632  01862E  50E2               	movf	fsr1h,w,c
 25633  018630  6EDA               	movwf	fsr2h,c
 25634  018632  0EFF               	movlw	255
 25635  018634  22DA               	addwfc	fsr2h,f,c
 25636  018636  52DE               	movf	postinc2,f,c
 25637  018638  52DE               	movf	postinc2,f,c
 25638  01863A  52DE               	movf	postinc2,f,c
 25639  01863C  0EFF               	movlw	255
 25640  01863E  14DD               	andwf	postdec2,w,c
 25641  018640  B4D8               	btfsc	status,2,c
 25642  018642  D00C               	goto	l9832
 25643  018644  D7DA               	goto	l9822
 25644  018646                     l9830:
 25645                           
 25646                           ;stkvar	_exp @ sp[(-5)+4]
 25647  018646  0EFF               	movlw	-1
 25648  018648  06E3               	decf	plusw1,f,c
 25649                           
 25650                           ;stkvar	_arg @ sp[(-5)+0]
 25651  01864A  90D8               	bcf	status,0,c
 25652  01864C  0EFB               	movlw	-5
 25653  01864E  36E3               	rlcf	plusw1,f,c
 25654  018650  0EFC               	movlw	-4
 25655  018652  36E3               	rlcf	plusw1,f,c
 25656  018654  0EFD               	movlw	-3
 25657  018656  36E3               	rlcf	plusw1,f,c
 25658  018658  0EFE               	movlw	-2
 25659  01865A  36E3               	rlcf	plusw1,f,c
 25660  01865C                     l9832:
 25661                           
 25662                           ;stkvar	_arg @ sp[(-5)+0]
 25663  01865C  0EFD               	movlw	-3
 25664  01865E  BEE3               	btfsc	plusw1,7,c
 25665  018660  D007               	goto	u9120
 25666                           
 25667                           ;stkvar	_exp @ sp[(-5)+4]
 25668  018662  0EFF               	movlw	-1
 25669  018664  006F FF8C  F001    	movff	plusw1,btemp
 25670  01866A  0E02               	movlw	2
 25671  01866C  6001               	cpfslt	btemp^0,c
 25672  01866E  D7EB               	goto	l9830
 25673  018670                     u9120:
 25674                           
 25675                           ;stkvar	_exp @ sp[(-5)+4]
 25676  018670  0EFF               	movlw	-1
 25677  018672  B0E3               	btfsc	plusw1,0,c
 25678  018674  D002               	goto	l9840
 25679                           
 25680                           ;stkvar	_arg @ sp[(-5)+0]
 25681  018676  0EFD               	movlw	-3
 25682  018678  9EE3               	bcf	plusw1,7,c
 25683  01867A                     l9840:
 25684                           
 25685                           ;stkvar	_exp @ sp[(-5)+4]
 25686  01867A  50E1               	movf	fsr1l,w,c
 25687  01867C  0FFF               	addlw	-1
 25688  01867E  6ED9               	movwf	fsr2l,c
 25689  018680  50E2               	movf	fsr1h,w,c
 25690  018682  6EDA               	movwf	fsr2h,c
 25691  018684  0EFF               	movlw	255
 25692  018686  22DA               	addwfc	fsr2h,f,c
 25693  018688  90D8               	bcf	status,0,c
 25694  01868A  32DF               	rrcf	indf2,f,c
 25695                           
 25696                           ;stkvar	_exp @ sp[(-5)+4]
 25697  01868C  0EFF               	movlw	-1
 25698  01868E  006F FF8C  F00C    	movff	plusw1,btemp+11
 25699  018694  0060  F030  F005   	movff	btemp+11,btemp+4
 25700  01869A  6A06               	clrf	(btemp+5)^0,c
 25701  01869C  6A07               	clrf	(btemp+6)^0,c
 25702  01869E  6A08               	clrf	(btemp+7)^0,c
 25703  0186A0  0060  F014  F008   	movff	btemp+4,btemp+7
 25704  0186A6  6A07               	clrf	(btemp+6)^0,c
 25705  0186A8  6A06               	clrf	(btemp+5)^0,c
 25706  0186AA  6A05               	clrf	(btemp+4)^0,c
 25707                           
 25708                           ;stkvar	_arg @ sp[(-5)+0]
 25709  0186AC  50E1               	movf	fsr1l,w,c
 25710  0186AE  0FFB               	addlw	-5
 25711  0186B0  6ED9               	movwf	fsr2l,c
 25712  0186B2  50E2               	movf	fsr1h,w,c
 25713  0186B4  6EDA               	movwf	fsr2h,c
 25714  0186B6  0EFF               	movlw	255
 25715  0186B8  22DA               	addwfc	fsr2h,f,c
 25716  0186BA  5005               	movf	(btemp+4)^0,w,c
 25717  0186BC  12DE               	iorwf	postinc2,f,c
 25718  0186BE  5006               	movf	(btemp+5)^0,w,c
 25719  0186C0  12DE               	iorwf	postinc2,f,c
 25720  0186C2  5007               	movf	(btemp+6)^0,w,c
 25721  0186C4  12DE               	iorwf	postinc2,f,c
 25722  0186C6  5008               	movf	(btemp+7)^0,w,c
 25723  0186C8  12DE               	iorwf	postinc2,f,c
 25724                           
 25725                           ;stkvar	_sign @ sp[(-5)+-1]
 25726  0186CA  0EFA               	movlw	-6
 25727  0186CC  50E3               	movf	plusw1,w,c
 25728  0186CE  B4D8               	btfsc	status,2,c
 25729  0186D0  D005               	goto	l9850
 25730                           
 25731                           ;stkvar	_val @ sp[(-5)+-5]
 25732  0186D2  0EF9               	movlw	-7
 25733  0186D4  AEE3               	btfss	plusw1,7,c
 25734  0186D6  D002               	goto	l9850
 25735                           
 25736                           ;stkvar	_arg @ sp[(-5)+0]
 25737  0186D8  0EFE               	movlw	-2
 25738  0186DA  8EE3               	bsf	plusw1,7,c
 25739  0186DC                     l9850:
 25740                           
 25741                           ;stkvar	_arg @ sp[(-5)+0]
 25742  0186DC  0EFB               	movlw	-5
 25743  0186DE  006F FF8C  F001    	movff	plusw1,btemp
 25744  0186E4  0EFC               	movlw	-4
 25745  0186E6  006F FF8C  F002    	movff	plusw1,btemp+1
 25746  0186EC  0EFD               	movlw	-3
 25747  0186EE  006F FF8C  F003    	movff	plusw1,btemp+2
 25748  0186F4  0EFE               	movlw	-2
 25749  0186F6  006F FF8C  F004    	movff	plusw1,btemp+3
 25750  0186FC                     l3139:
 25751                           
 25752                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 25753  0186FC  0EF6               	movlw	246
 25754  0186FE  26E1               	addwf	fsr1l,f,c
 25755  018700  0EFF               	movlw	255
 25756  018702  22E2               	addwfc	fsr1h,f,c
 25757  018704  0012               	return		;funcret
 25758  018706                     __end_of___xxtofl:
 25759                           	opt callstack 0
 25760                           
 25761 ;; *************** function ___fldiv *****************
 25762 ;; Defined at:
 25763 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 25764 ;; Parameters:    Size  Location     Type
 25765 ;;  b               4  [STACK] unsigned char 
 25766 ;;  a               4  [STACK] unsigned char 
 25767 ;; Auto vars:     Size  Location     Type
 25768 ;;  grs             4  [STACK] unsigned long 
 25769 ;;  rem             4  [STACK] unsigned long 
 25770 ;;  new_exp         2  [STACK] short 
 25771 ;;  aexp            1  [STACK] unsigned char 
 25772 ;;  bexp            1  [STACK] unsigned char 
 25773 ;;  sign            1  [STACK] unsigned char 
 25774 ;; Return value:  Size  Location     Type
 25775 ;;                  4  [STACK] unsigned char 
 25776 ;; Registers used:
 25777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 25778 ;; Tracked objects:
 25779 ;;		On entry : 0/0
 25780 ;;		On exit  : 0/0
 25781 ;;		Unchanged: 0/0
 25782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25787 ;;Total ram usage:        0 bytes
 25788 ;; Hardware stack levels used:    1
 25789 ;; Hardware stack levels required when called:   15
 25790 ;; This function calls:
 25791 ;;		Nothing
 25792 ;; This function is called by:
 25793 ;;		_conv_raw_result
 25794 ;;		_convert_dac_raw
 25795 ;;		_calc_bsoc
 25796 ;;		_init_bsoc
 25797 ;;		_esr_check
 25798 ;;		_efgtoa
 25799 ;; This function uses a reentrant model
 25800 ;;
 25801                           
 25802                           	psect	text105
 25803  014DE8                     __ptext105:
 25804                           	opt callstack 0
 25805  014DE8                     ___fldiv:
 25806                           	opt callstack 0
 25807                           
 25808                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 25809  014DE8  0E0D               	movlw	13
 25810  014DEA  26E1               	addwf	fsr1l,f,c
 25811  014DEC  0E00               	movlw	0
 25812  014DEE  22E2               	addwfc	fsr1h,f,c
 25813                           
 25814                           ;stkvar	_b @ sp[(-13)+-4]
 25815                           
 25816                           ;incstack = 0
 25817 ;; hardware stack exceeded
 25818  014DF0  0EF2               	movlw	242
 25819  014DF2  24E1               	addwf	fsr1l,w,c
 25820  014DF4  6ED9               	movwf	fsr2l,c
 25821  014DF6  0EFF               	movlw	255
 25822  014DF8  20E2               	addwfc	fsr1h,w,c
 25823  014DFA  6EDA               	movwf	fsr2h,c
 25824  014DFC  50DF               	movf	indf2,w,c
 25825  014DFE  6E0C               	movwf	(btemp+11)^0,c
 25826  014E00  0E80               	movlw	128
 25827  014E02  160C               	andwf	(btemp+11)^0,f,c
 25828                           
 25829                           ;stkvar	_sign @ sp[(-13)+12]
 25830  014E04  0EFF               	movlw	-1
 25831  014E06  0060  F033  FFE3   	movff	btemp+11,plusw1
 25832                           
 25833                           ;stkvar	_b @ sp[(-13)+-4]
 25834  014E0C  0EF2               	movlw	242
 25835  014E0E  24E1               	addwf	fsr1l,w,c
 25836  014E10  6ED9               	movwf	fsr2l,c
 25837  014E12  0EFF               	movlw	255
 25838  014E14  20E2               	addwfc	fsr1h,w,c
 25839  014E16  6EDA               	movwf	fsr2h,c
 25840  014E18  50DF               	movf	indf2,w,c
 25841  014E1A  6E0C               	movwf	(btemp+11)^0,c
 25842  014E1C  90D8               	bcf	status,0,c
 25843  014E1E  340C               	rlcf	(btemp+11)^0,w,c
 25844  014E20  6E0B               	movwf	(btemp+10)^0,c
 25845                           
 25846                           ;stkvar	_bexp @ sp[(-13)+11]
 25847  014E22  0EFE               	movlw	-2
 25848  014E24  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25849                           
 25850                           ;stkvar	_b @ sp[(-13)+-4]
 25851  014E2A  0EF1               	movlw	241
 25852  014E2C  24E1               	addwf	fsr1l,w,c
 25853  014E2E  6ED9               	movwf	fsr2l,c
 25854  014E30  0EFF               	movlw	255
 25855  014E32  20E2               	addwfc	fsr1h,w,c
 25856  014E34  6EDA               	movwf	fsr2h,c
 25857  014E36  AEDF               	btfss	indf2,7,c
 25858  014E38  D002               	goto	l8380
 25859                           
 25860                           ;stkvar	_bexp @ sp[(-13)+11]
 25861  014E3A  0EFE               	movlw	-2
 25862  014E3C  80E3               	bsf	plusw1,0,c
 25863  014E3E                     l8380:
 25864                           
 25865                           ;stkvar	_bexp @ sp[(-13)+11]
 25866  014E3E  0EFE               	movlw	-2
 25867  014E40  50E3               	movf	plusw1,w,c
 25868  014E42  B4D8               	btfsc	status,2,c
 25869  014E44  D027               	goto	l8390
 25870                           
 25871                           ;stkvar	_bexp @ sp[(-13)+11]
 25872  014E46  0EFE               	movlw	-2
 25873  014E48  28E3               	incf	plusw1,w,c
 25874  014E4A  A4D8               	btfss	status,2,c
 25875  014E4C  D018               	goto	l8386
 25876  014E4E  0E00               	movlw	0
 25877  014E50  6E09               	movwf	(btemp+8)^0,c
 25878  014E52  0E00               	movlw	0
 25879  014E54  6E0A               	movwf	(btemp+9)^0,c
 25880  014E56  0E00               	movlw	0
 25881  014E58  6E0B               	movwf	(btemp+10)^0,c
 25882  014E5A  0E00               	movlw	0
 25883  014E5C  6E0C               	movwf	(btemp+11)^0,c
 25884                           
 25885                           ;stkvar	_b @ sp[(-13)+-4]
 25886  014E5E  0EEF               	movlw	-17
 25887  014E60  0060  F027  FFE3   	movff	btemp+8,plusw1
 25888  014E66  0EF0               	movlw	-16
 25889  014E68  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25890  014E6E  0EF1               	movlw	-15
 25891  014E70  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25892  014E76  0EF2               	movlw	-14
 25893  014E78  0060  F033  FFE3   	movff	btemp+11,plusw1
 25894  014E7E                     l8386:
 25895                           
 25896                           ;stkvar	_b @ sp[(-13)+-4]
 25897  014E7E  0EF1               	movlw	-15
 25898  014E80  8EE3               	bsf	plusw1,7,c
 25899                           
 25900                           ;stkvar	_b @ sp[(-13)+-4]
 25901  014E82  0EF2               	movlw	242
 25902  014E84  24E1               	addwf	fsr1l,w,c
 25903  014E86  6ED9               	movwf	fsr2l,c
 25904  014E88  0EFF               	movlw	255
 25905  014E8A  20E2               	addwfc	fsr1h,w,c
 25906  014E8C  6EDA               	movwf	fsr2h,c
 25907  014E8E  0E00               	movlw	0
 25908  014E90  6EDF               	movwf	indf2,c
 25909  014E92  D018               	goto	l8392
 25910  014E94                     l8390:
 25911  014E94  0E00               	movlw	0
 25912  014E96  6E09               	movwf	(btemp+8)^0,c
 25913  014E98  0E00               	movlw	0
 25914  014E9A  6E0A               	movwf	(btemp+9)^0,c
 25915  014E9C  0E00               	movlw	0
 25916  014E9E  6E0B               	movwf	(btemp+10)^0,c
 25917  014EA0  0E00               	movlw	0
 25918  014EA2  6E0C               	movwf	(btemp+11)^0,c
 25919                           
 25920                           ;stkvar	_b @ sp[(-13)+-4]
 25921  014EA4  0EEF               	movlw	-17
 25922  014EA6  0060  F027  FFE3   	movff	btemp+8,plusw1
 25923  014EAC  0EF0               	movlw	-16
 25924  014EAE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25925  014EB4  0EF1               	movlw	-15
 25926  014EB6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25927  014EBC  0EF2               	movlw	-14
 25928  014EBE  0060  F033  FFE3   	movff	btemp+11,plusw1
 25929  014EC4                     l8392:
 25930                           
 25931                           ;stkvar	_a @ sp[(-13)+-8]
 25932  014EC4  0EEE               	movlw	238
 25933  014EC6  24E1               	addwf	fsr1l,w,c
 25934  014EC8  6ED9               	movwf	fsr2l,c
 25935  014ECA  0EFF               	movlw	255
 25936  014ECC  20E2               	addwfc	fsr1h,w,c
 25937  014ECE  6EDA               	movwf	fsr2h,c
 25938  014ED0  50DF               	movf	indf2,w,c
 25939  014ED2  6E0C               	movwf	(btemp+11)^0,c
 25940  014ED4  0E80               	movlw	128
 25941  014ED6  160C               	andwf	(btemp+11)^0,f,c
 25942                           
 25943                           ;stkvar	_sign @ sp[(-13)+12]
 25944  014ED8  50E1               	movf	fsr1l,w,c
 25945  014EDA  0FFF               	addlw	-1
 25946  014EDC  6ED9               	movwf	fsr2l,c
 25947  014EDE  50E2               	movf	fsr1h,w,c
 25948  014EE0  6EDA               	movwf	fsr2h,c
 25949  014EE2  0EFF               	movlw	255
 25950  014EE4  22DA               	addwfc	fsr2h,f,c
 25951  014EE6  500C               	movf	(btemp+11)^0,w,c
 25952  014EE8  1ADF               	xorwf	indf2,f,c
 25953                           
 25954                           ;stkvar	_a @ sp[(-13)+-8]
 25955  014EEA  0EEE               	movlw	238
 25956  014EEC  24E1               	addwf	fsr1l,w,c
 25957  014EEE  6ED9               	movwf	fsr2l,c
 25958  014EF0  0EFF               	movlw	255
 25959  014EF2  20E2               	addwfc	fsr1h,w,c
 25960  014EF4  6EDA               	movwf	fsr2h,c
 25961  014EF6  50DF               	movf	indf2,w,c
 25962  014EF8  6E0C               	movwf	(btemp+11)^0,c
 25963  014EFA  90D8               	bcf	status,0,c
 25964  014EFC  340C               	rlcf	(btemp+11)^0,w,c
 25965  014EFE  6E0B               	movwf	(btemp+10)^0,c
 25966                           
 25967                           ;stkvar	_aexp @ sp[(-13)+10]
 25968  014F00  0EFD               	movlw	-3
 25969  014F02  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25970                           
 25971                           ;stkvar	_a @ sp[(-13)+-8]
 25972  014F08  0EED               	movlw	237
 25973  014F0A  24E1               	addwf	fsr1l,w,c
 25974  014F0C  6ED9               	movwf	fsr2l,c
 25975  014F0E  0EFF               	movlw	255
 25976  014F10  20E2               	addwfc	fsr1h,w,c
 25977  014F12  6EDA               	movwf	fsr2h,c
 25978  014F14  AEDF               	btfss	indf2,7,c
 25979  014F16  D002               	goto	l8400
 25980                           
 25981                           ;stkvar	_aexp @ sp[(-13)+10]
 25982  014F18  0EFD               	movlw	-3
 25983  014F1A  80E3               	bsf	plusw1,0,c
 25984  014F1C                     l8400:
 25985                           
 25986                           ;stkvar	_aexp @ sp[(-13)+10]
 25987  014F1C  0EFD               	movlw	-3
 25988  014F1E  50E3               	movf	plusw1,w,c
 25989  014F20  B4D8               	btfsc	status,2,c
 25990  014F22  D027               	goto	l8410
 25991                           
 25992                           ;stkvar	_aexp @ sp[(-13)+10]
 25993  014F24  0EFD               	movlw	-3
 25994  014F26  28E3               	incf	plusw1,w,c
 25995  014F28  A4D8               	btfss	status,2,c
 25996  014F2A  D018               	goto	l8406
 25997  014F2C  0E00               	movlw	0
 25998  014F2E  6E09               	movwf	(btemp+8)^0,c
 25999  014F30  0E00               	movlw	0
 26000  014F32  6E0A               	movwf	(btemp+9)^0,c
 26001  014F34  0E00               	movlw	0
 26002  014F36  6E0B               	movwf	(btemp+10)^0,c
 26003  014F38  0E00               	movlw	0
 26004  014F3A  6E0C               	movwf	(btemp+11)^0,c
 26005                           
 26006                           ;stkvar	_a @ sp[(-13)+-8]
 26007  014F3C  0EEB               	movlw	-21
 26008  014F3E  0060  F027  FFE3   	movff	btemp+8,plusw1
 26009  014F44  0EEC               	movlw	-20
 26010  014F46  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26011  014F4C  0EED               	movlw	-19
 26012  014F4E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26013  014F54  0EEE               	movlw	-18
 26014  014F56  0060  F033  FFE3   	movff	btemp+11,plusw1
 26015  014F5C                     l8406:
 26016                           
 26017                           ;stkvar	_a @ sp[(-13)+-8]
 26018  014F5C  0EED               	movlw	-19
 26019  014F5E  8EE3               	bsf	plusw1,7,c
 26020                           
 26021                           ;stkvar	_a @ sp[(-13)+-8]
 26022  014F60  0EEE               	movlw	238
 26023  014F62  24E1               	addwf	fsr1l,w,c
 26024  014F64  6ED9               	movwf	fsr2l,c
 26025  014F66  0EFF               	movlw	255
 26026  014F68  20E2               	addwfc	fsr1h,w,c
 26027  014F6A  6EDA               	movwf	fsr2h,c
 26028  014F6C  0E00               	movlw	0
 26029  014F6E  6EDF               	movwf	indf2,c
 26030  014F70  D018               	goto	l8412
 26031  014F72                     l8410:
 26032  014F72  0E00               	movlw	0
 26033  014F74  6E09               	movwf	(btemp+8)^0,c
 26034  014F76  0E00               	movlw	0
 26035  014F78  6E0A               	movwf	(btemp+9)^0,c
 26036  014F7A  0E00               	movlw	0
 26037  014F7C  6E0B               	movwf	(btemp+10)^0,c
 26038  014F7E  0E00               	movlw	0
 26039  014F80  6E0C               	movwf	(btemp+11)^0,c
 26040                           
 26041                           ;stkvar	_a @ sp[(-13)+-8]
 26042  014F82  0EEB               	movlw	-21
 26043  014F84  0060  F027  FFE3   	movff	btemp+8,plusw1
 26044  014F8A  0EEC               	movlw	-20
 26045  014F8C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26046  014F92  0EED               	movlw	-19
 26047  014F94  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26048  014F9A  0EEE               	movlw	-18
 26049  014F9C  0060  F033  FFE3   	movff	btemp+11,plusw1
 26050  014FA2                     l8412:
 26051                           
 26052                           ;stkvar	_a @ sp[(-13)+-8]
 26053  014FA2  0EEB               	movlw	-21
 26054  014FA4  50E3               	movf	plusw1,w,c
 26055  014FA6  E139               	bnz	l8424
 26056  014FA8  0EEC               	movlw	-20
 26057  014FAA  50E3               	movf	plusw1,w,c
 26058  014FAC  E136               	bnz	l8424
 26059  014FAE  0EED               	movlw	-19
 26060  014FB0  50E3               	movf	plusw1,w,c
 26061  014FB2  E133               	bnz	l8424
 26062  014FB4  0EEE               	movlw	-18
 26063  014FB6  50E3               	movf	plusw1,w,c
 26064  014FB8  A4D8               	btfss	status,2,c
 26065  014FBA  D02F               	goto	l8424
 26066                           
 26067                           ;stkvar	_b @ sp[(-13)+-4]
 26068  014FBC  0EEF               	movlw	-17
 26069  014FBE  6AE3               	clrf	plusw1,c
 26070  014FC0  0EF0               	movlw	-16
 26071  014FC2  6AE3               	clrf	plusw1,c
 26072  014FC4  0EF1               	movlw	-15
 26073  014FC6  6AE3               	clrf	plusw1,c
 26074  014FC8  0EF2               	movlw	-14
 26075  014FCA  6AE3               	clrf	plusw1,c
 26076                           
 26077                           ;stkvar	_b @ sp[(-13)+-4]
 26078  014FCC  0EF1               	movlw	241
 26079  014FCE  24E1               	addwf	fsr1l,w,c
 26080  014FD0  6ED9               	movwf	fsr2l,c
 26081  014FD2  0EFF               	movlw	255
 26082  014FD4  20E2               	addwfc	fsr1h,w,c
 26083  014FD6  6EDA               	movwf	fsr2h,c
 26084  014FD8  0E80               	movlw	128
 26085  014FDA  12DE               	iorwf	postinc2,f,c
 26086  014FDC  0E7F               	movlw	127
 26087  014FDE  12DD               	iorwf	postdec2,f,c
 26088  014FE0                     l8418:
 26089                           
 26090                           ;stkvar	_sign @ sp[(-13)+12]
 26091  014FE0  0EFF               	movlw	-1
 26092  014FE2  006F FF8C  F00C    	movff	plusw1,btemp+11
 26093                           
 26094                           ;stkvar	_b @ sp[(-13)+-4]
 26095  014FE8  0EF2               	movlw	242
 26096  014FEA  24E1               	addwf	fsr1l,w,c
 26097  014FEC  6ED9               	movwf	fsr2l,c
 26098  014FEE  0EFF               	movlw	255
 26099  014FF0  20E2               	addwfc	fsr1h,w,c
 26100  014FF2  6EDA               	movwf	fsr2h,c
 26101  014FF4  500C               	movf	(btemp+11)^0,w,c
 26102  014FF6  12DF               	iorwf	indf2,f,c
 26103                           
 26104                           ;stkvar	_b @ sp[(-13)+-4]
 26105  014FF8  0EEF               	movlw	-17
 26106  014FFA  006F FF8C  F001    	movff	plusw1,btemp
 26107  015000  0EF0               	movlw	-16
 26108  015002  006F FF8C  F002    	movff	plusw1,btemp+1
 26109  015008  0EF1               	movlw	-15
 26110  01500A  006F FF8C  F003    	movff	plusw1,btemp+2
 26111  015010  0EF2               	movlw	-14
 26112  015012  006F FF8C  F004    	movff	plusw1,btemp+3
 26113  015018  D19F               	goto	l3063
 26114  01501A                     l8424:
 26115                           
 26116                           ;stkvar	_bexp @ sp[(-13)+11]
 26117  01501A  0EFE               	movlw	-2
 26118  01501C  50E3               	movf	plusw1,w,c
 26119  01501E  A4D8               	btfss	status,2,c
 26120  015020  D009               	goto	l8432
 26121  015022  0E00               	movlw	0
 26122  015024  6E01               	movwf	btemp^0,c
 26123  015026  0E00               	movlw	0
 26124  015028  6E02               	movwf	(btemp+1)^0,c
 26125  01502A  0E00               	movlw	0
 26126  01502C  6E03               	movwf	(btemp+2)^0,c
 26127  01502E  0E00               	movlw	0
 26128  015030  6E04               	movwf	(btemp+3)^0,c
 26129  015032  D192               	goto	l3063
 26130  015034                     l8432:
 26131                           
 26132                           ;stkvar	_bexp @ sp[(-13)+11]
 26133  015034  0EFE               	movlw	-2
 26134  015036  50E3               	movf	plusw1,w,c
 26135  015038  6E0B               	movwf	(btemp+10)^0,c
 26136  01503A  6A0C               	clrf	(btemp+11)^0,c
 26137                           
 26138                           ;stkvar	_aexp @ sp[(-13)+10]
 26139  01503C  0EFD               	movlw	-3
 26140  01503E  50E3               	movf	plusw1,w,c
 26141  015040  5E0B               	subwf	(btemp+10)^0,f,c
 26142  015042  0E00               	movlw	0
 26143  015044  5A0C               	subwfb	(btemp+11)^0,f,c
 26144  015046  0E7F               	movlw	127
 26145  015048  260B               	addwf	(btemp+10)^0,f,c
 26146  01504A  0E00               	movlw	0
 26147  01504C  220C               	addwfc	(btemp+11)^0,f,c
 26148                           
 26149                           ;stkvar	_new_exp @ sp[(-13)+8]
 26150  01504E  0EFB               	movlw	-5
 26151  015050  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26152  015056  0EFC               	movlw	-4
 26153  015058  0060  F033  FFE3   	movff	btemp+11,plusw1
 26154                           
 26155                           ;stkvar	_b @ sp[(-13)+-4]
 26156  01505E  0EEF               	movlw	-17
 26157  015060  006F FF8C  F009    	movff	plusw1,btemp+8
 26158  015066  0EF0               	movlw	-16
 26159  015068  006F FF8C  F00A    	movff	plusw1,btemp+9
 26160  01506E  0EF1               	movlw	-15
 26161  015070  006F FF8C  F00B    	movff	plusw1,btemp+10
 26162  015076  0EF2               	movlw	-14
 26163  015078  006F FF8C  F00C    	movff	plusw1,btemp+11
 26164                           
 26165                           ;stkvar	_rem @ sp[(-13)+4]
 26166  01507E  0EF7               	movlw	-9
 26167  015080  0060  F027  FFE3   	movff	btemp+8,plusw1
 26168  015086  0EF8               	movlw	-8
 26169  015088  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26170  01508E  0EF9               	movlw	-7
 26171  015090  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26172  015096  0EFA               	movlw	-6
 26173  015098  0060  F033  FFE3   	movff	btemp+11,plusw1
 26174                           
 26175                           ;stkvar	_b @ sp[(-13)+-4]
 26176  01509E  0EEF               	movlw	-17
 26177  0150A0  6AE3               	clrf	plusw1,c
 26178  0150A2  0EF0               	movlw	-16
 26179  0150A4  6AE3               	clrf	plusw1,c
 26180  0150A6  0EF1               	movlw	-15
 26181  0150A8  6AE3               	clrf	plusw1,c
 26182  0150AA  0EF2               	movlw	-14
 26183  0150AC  6AE3               	clrf	plusw1,c
 26184                           
 26185                           ;stkvar	_grs @ sp[(-13)+0]
 26186  0150AE  0EF3               	movlw	-13
 26187  0150B0  6AE3               	clrf	plusw1,c
 26188  0150B2  0EF4               	movlw	-12
 26189  0150B4  6AE3               	clrf	plusw1,c
 26190  0150B6  0EF5               	movlw	-11
 26191  0150B8  6AE3               	clrf	plusw1,c
 26192  0150BA  0EF6               	movlw	-10
 26193  0150BC  6AE3               	clrf	plusw1,c
 26194                           
 26195                           ;stkvar	_aexp @ sp[(-13)+10]
 26196  0150BE  0EFD               	movlw	-3
 26197  0150C0  6AE3               	clrf	plusw1,c
 26198  0150C2  D050               	goto	l8460
 26199  0150C4                     l8442:
 26200                           
 26201                           ;stkvar	_aexp @ sp[(-13)+10]
 26202  0150C4  0EFD               	movlw	-3
 26203  0150C6  50E3               	movf	plusw1,w,c
 26204  0150C8  B4D8               	btfsc	status,2,c
 26205  0150CA  D020               	goto	l8452
 26206                           
 26207                           ;stkvar	_rem @ sp[(-13)+4]
 26208  0150CC  90D8               	bcf	status,0,c
 26209  0150CE  0EF7               	movlw	-9
 26210  0150D0  36E3               	rlcf	plusw1,f,c
 26211  0150D2  0EF8               	movlw	-8
 26212  0150D4  36E3               	rlcf	plusw1,f,c
 26213  0150D6  0EF9               	movlw	-7
 26214  0150D8  36E3               	rlcf	plusw1,f,c
 26215  0150DA  0EFA               	movlw	-6
 26216  0150DC  36E3               	rlcf	plusw1,f,c
 26217                           
 26218                           ;stkvar	_b @ sp[(-13)+-4]
 26219  0150DE  90D8               	bcf	status,0,c
 26220  0150E0  0EEF               	movlw	-17
 26221  0150E2  36E3               	rlcf	plusw1,f,c
 26222  0150E4  0EF0               	movlw	-16
 26223  0150E6  36E3               	rlcf	plusw1,f,c
 26224  0150E8  0EF1               	movlw	-15
 26225  0150EA  36E3               	rlcf	plusw1,f,c
 26226  0150EC  0EF2               	movlw	-14
 26227  0150EE  36E3               	rlcf	plusw1,f,c
 26228                           
 26229                           ;stkvar	_grs @ sp[(-13)+0]
 26230  0150F0  0EF6               	movlw	-10
 26231  0150F2  AEE3               	btfss	plusw1,7,c
 26232  0150F4  D002               	goto	l8450
 26233                           
 26234                           ;stkvar	_b @ sp[(-13)+-4]
 26235  0150F6  0EEF               	movlw	-17
 26236  0150F8  80E3               	bsf	plusw1,0,c
 26237  0150FA                     l8450:
 26238                           
 26239                           ;stkvar	_grs @ sp[(-13)+0]
 26240  0150FA  90D8               	bcf	status,0,c
 26241  0150FC  0EF3               	movlw	-13
 26242  0150FE  36E3               	rlcf	plusw1,f,c
 26243  015100  0EF4               	movlw	-12
 26244  015102  36E3               	rlcf	plusw1,f,c
 26245  015104  0EF5               	movlw	-11
 26246  015106  36E3               	rlcf	plusw1,f,c
 26247  015108  0EF6               	movlw	-10
 26248  01510A  36E3               	rlcf	plusw1,f,c
 26249  01510C                     l8452:
 26250                           
 26251                           ;stkvar	_a @ sp[(-13)+-8]
 26252                           ;stkvar	_rem @ sp[(-13)+4]
 26253  01510C  50E1               	movf	fsr1l,w,c
 26254  01510E  0FF7               	addlw	-9
 26255  015110  6ED9               	movwf	fsr2l,c
 26256  015112  50E2               	movf	fsr1h,w,c
 26257  015114  6EDA               	movwf	fsr2h,c
 26258  015116  0EFF               	movlw	255
 26259  015118  22DA               	addwfc	fsr2h,f,c
 26260  01511A  0EEB               	movlw	-21
 26261  01511C  50E3               	movf	plusw1,w,c
 26262  01511E  5CDE               	subwf	postinc2,w,c
 26263  015120  0EEC               	movlw	-20
 26264  015122  50E3               	movf	plusw1,w,c
 26265  015124  58DE               	subwfb	postinc2,w,c
 26266  015126  0EED               	movlw	-19
 26267  015128  50E3               	movf	plusw1,w,c
 26268  01512A  58DE               	subwfb	postinc2,w,c
 26269  01512C  0EEE               	movlw	-18
 26270  01512E  50E3               	movf	plusw1,w,c
 26271  015130  58DE               	subwfb	postinc2,w,c
 26272  015132  A0D8               	btfss	status,0,c
 26273  015134  D015               	goto	l8458
 26274                           
 26275                           ;stkvar	_grs @ sp[(-13)+0]
 26276  015136  0EF6               	movlw	-10
 26277  015138  8CE3               	bsf	plusw1,6,c
 26278                           
 26279                           ;stkvar	_a @ sp[(-13)+-8]
 26280                           ;stkvar	_rem @ sp[(-13)+4]
 26281  01513A  50E1               	movf	fsr1l,w,c
 26282  01513C  0FF7               	addlw	-9
 26283  01513E  6ED9               	movwf	fsr2l,c
 26284  015140  50E2               	movf	fsr1h,w,c
 26285  015142  6EDA               	movwf	fsr2h,c
 26286  015144  0EFF               	movlw	255
 26287  015146  22DA               	addwfc	fsr2h,f,c
 26288  015148  0EEB               	movlw	-21
 26289  01514A  50E3               	movf	plusw1,w,c
 26290  01514C  5EDE               	subwf	postinc2,f,c
 26291  01514E  0EEC               	movlw	-20
 26292  015150  50E3               	movf	plusw1,w,c
 26293  015152  5ADE               	subwfb	postinc2,f,c
 26294  015154  0EED               	movlw	-19
 26295  015156  50E3               	movf	plusw1,w,c
 26296  015158  5ADE               	subwfb	postinc2,f,c
 26297  01515A  0EEE               	movlw	-18
 26298  01515C  50E3               	movf	plusw1,w,c
 26299  01515E  5ADE               	subwfb	postinc2,f,c
 26300  015160                     l8458:
 26301                           
 26302                           ;stkvar	_aexp @ sp[(-13)+10]
 26303  015160  0EFD               	movlw	-3
 26304  015162  2AE3               	incf	plusw1,f,c
 26305  015164                     l8460:
 26306                           
 26307                           ;stkvar	_aexp @ sp[(-13)+10]
 26308  015164  0EFD               	movlw	-3
 26309  015166  006F FF8C  F001    	movff	plusw1,btemp
 26310  01516C  0E19               	movlw	25
 26311  01516E  6401               	cpfsgt	btemp^0,c
 26312  015170  D7A9               	goto	l8442
 26313                           
 26314                           ;stkvar	_rem @ sp[(-13)+4]
 26315  015172  0EF7               	movlw	-9
 26316  015174  50E3               	movf	plusw1,w,c
 26317  015176  E10A               	bnz	u6710
 26318  015178  0EF8               	movlw	-8
 26319  01517A  50E3               	movf	plusw1,w,c
 26320  01517C  E107               	bnz	u6710
 26321  01517E  0EF9               	movlw	-7
 26322  015180  50E3               	movf	plusw1,w,c
 26323  015182  E104               	bnz	u6710
 26324  015184  0EFA               	movlw	-6
 26325  015186  50E3               	movf	plusw1,w,c
 26326  015188  B4D8               	btfsc	status,2,c
 26327  01518A  D024               	goto	l8476
 26328  01518C                     u6710:
 26329                           
 26330                           ;stkvar	_grs @ sp[(-13)+0]
 26331  01518C  0EF3               	movlw	-13
 26332  01518E  80E3               	bsf	plusw1,0,c
 26333  015190  D021               	goto	l8476
 26334  015192                     l8466:
 26335                           
 26336                           ;stkvar	_b @ sp[(-13)+-4]
 26337  015192  90D8               	bcf	status,0,c
 26338  015194  0EEF               	movlw	-17
 26339  015196  36E3               	rlcf	plusw1,f,c
 26340  015198  0EF0               	movlw	-16
 26341  01519A  36E3               	rlcf	plusw1,f,c
 26342  01519C  0EF1               	movlw	-15
 26343  01519E  36E3               	rlcf	plusw1,f,c
 26344  0151A0  0EF2               	movlw	-14
 26345  0151A2  36E3               	rlcf	plusw1,f,c
 26346                           
 26347                           ;stkvar	_grs @ sp[(-13)+0]
 26348  0151A4  0EF6               	movlw	-10
 26349  0151A6  AEE3               	btfss	plusw1,7,c
 26350  0151A8  D002               	goto	l8472
 26351                           
 26352                           ;stkvar	_b @ sp[(-13)+-4]
 26353  0151AA  0EEF               	movlw	-17
 26354  0151AC  80E3               	bsf	plusw1,0,c
 26355  0151AE                     l8472:
 26356                           
 26357                           ;stkvar	_grs @ sp[(-13)+0]
 26358  0151AE  90D8               	bcf	status,0,c
 26359  0151B0  0EF3               	movlw	-13
 26360  0151B2  36E3               	rlcf	plusw1,f,c
 26361  0151B4  0EF4               	movlw	-12
 26362  0151B6  36E3               	rlcf	plusw1,f,c
 26363  0151B8  0EF5               	movlw	-11
 26364  0151BA  36E3               	rlcf	plusw1,f,c
 26365  0151BC  0EF6               	movlw	-10
 26366  0151BE  36E3               	rlcf	plusw1,f,c
 26367                           
 26368                           ;stkvar	_new_exp @ sp[(-13)+8]
 26369  0151C0  50E1               	movf	fsr1l,w,c
 26370  0151C2  0FFB               	addlw	-5
 26371  0151C4  6ED9               	movwf	fsr2l,c
 26372  0151C6  50E2               	movf	fsr1h,w,c
 26373  0151C8  6EDA               	movwf	fsr2h,c
 26374  0151CA  0EFF               	movlw	255
 26375  0151CC  22DA               	addwfc	fsr2h,f,c
 26376  0151CE  06DE               	decf	postinc2,f,c
 26377  0151D0  0E00               	movlw	0
 26378  0151D2  5ADD               	subwfb	postdec2,f,c
 26379  0151D4                     l8476:
 26380                           
 26381                           ;stkvar	_b @ sp[(-13)+-4]
 26382  0151D4  0EF1               	movlw	-15
 26383  0151D6  AEE3               	btfss	plusw1,7,c
 26384  0151D8  D7DC               	goto	l8466
 26385                           
 26386                           ;stkvar	_aexp @ sp[(-13)+10]
 26387  0151DA  0EFD               	movlw	-3
 26388  0151DC  6AE3               	clrf	plusw1,c
 26389                           
 26390                           ;stkvar	_grs @ sp[(-13)+0]
 26391  0151DE  0EF6               	movlw	-10
 26392  0151E0  AEE3               	btfss	plusw1,7,c
 26393  0151E2  D020               	goto	l8490
 26394                           
 26395                           ;stkvar	_grs @ sp[(-13)+0]
 26396  0151E4  50E1               	movf	fsr1l,w,c
 26397  0151E6  0FF3               	addlw	-13
 26398  0151E8  6ED9               	movwf	fsr2l,c
 26399  0151EA  50E2               	movf	fsr1h,w,c
 26400  0151EC  6EDA               	movwf	fsr2h,c
 26401  0151EE  0EFF               	movlw	255
 26402  0151F0  22DA               	addwfc	fsr2h,f,c
 26403  0151F2  0EFF               	movlw	255
 26404  0151F4  14DE               	andwf	postinc2,w,c
 26405  0151F6  6E09               	movwf	(btemp+8)^0,c
 26406  0151F8  0EFF               	movlw	255
 26407  0151FA  14DE               	andwf	postinc2,w,c
 26408  0151FC  6E0A               	movwf	(btemp+9)^0,c
 26409  0151FE  0EFF               	movlw	255
 26410  015200  14DE               	andwf	postinc2,w,c
 26411  015202  6E0B               	movwf	(btemp+10)^0,c
 26412  015204  0E7F               	movlw	127
 26413  015206  14DE               	andwf	postinc2,w,c
 26414  015208  6E0C               	movwf	(btemp+11)^0,c
 26415  01520A  5009               	movf	(btemp+8)^0,w,c
 26416  01520C  100A               	iorwf	(btemp+9)^0,w,c
 26417  01520E  100B               	iorwf	(btemp+10)^0,w,c
 26418  015210  100C               	iorwf	(btemp+11)^0,w,c
 26419  015212  B4D8               	btfsc	status,2,c
 26420  015214  D004               	goto	l8486
 26421  015216                     u6750:
 26422                           
 26423                           ;stkvar	_aexp @ sp[(-13)+10]
 26424  015216  0EFD               	movlw	-3
 26425  015218  6AE3               	clrf	plusw1,c
 26426  01521A  2AE3               	incf	plusw1,f,c
 26427  01521C  D003               	goto	l8490
 26428  01521E                     l8486:
 26429                           
 26430                           ;stkvar	_b @ sp[(-13)+-4]
 26431  01521E  0EEF               	movlw	-17
 26432  015220  B0E3               	btfsc	plusw1,0,c
 26433  015222  D7F9               	goto	u6750
 26434  015224                     l8490:
 26435                           
 26436                           ;stkvar	_aexp @ sp[(-13)+10]
 26437  015224  0EFD               	movlw	-3
 26438  015226  50E3               	movf	plusw1,w,c
 26439  015228  B4D8               	btfsc	status,2,c
 26440  01522A  D036               	goto	l8500
 26441                           
 26442                           ;stkvar	_b @ sp[(-13)+-4]
 26443  01522C  50E1               	movf	fsr1l,w,c
 26444  01522E  0FEF               	addlw	-17
 26445  015230  6ED9               	movwf	fsr2l,c
 26446  015232  50E2               	movf	fsr1h,w,c
 26447  015234  6EDA               	movwf	fsr2h,c
 26448  015236  0EFF               	movlw	255
 26449  015238  22DA               	addwfc	fsr2h,f,c
 26450  01523A  2ADE               	incf	postinc2,f,c
 26451  01523C  0E00               	movlw	0
 26452  01523E  22DE               	addwfc	postinc2,f,c
 26453  015240  22DE               	addwfc	postinc2,f,c
 26454  015242  22DE               	addwfc	postinc2,f,c
 26455                           
 26456                           ;stkvar	_b @ sp[(-13)+-4]
 26457  015244  0EF2               	movlw	-14
 26458  015246  A0E3               	btfss	plusw1,0,c
 26459  015248  D027               	goto	l8500
 26460  01524A  0E01               	movlw	1
 26461  01524C  6E0C               	movwf	(btemp+11)^0,c
 26462                           
 26463                           ;stkvar	_b @ sp[(-13)+-4]
 26464  01524E  50E1               	movf	fsr1l,w,c
 26465  015250  0FEF               	addlw	-17
 26466  015252  6ED9               	movwf	fsr2l,c
 26467  015254  50E2               	movf	fsr1h,w,c
 26468  015256  6EDA               	movwf	fsr2h,c
 26469  015258  0EFF               	movlw	255
 26470  01525A  22DA               	addwfc	fsr2h,f,c
 26471  01525C  280C               	incf	(btemp+11)^0,w,c
 26472  01525E  52DE               	movf	postinc2,f,c
 26473  015260  D008               	goto	u6790
 26474  015262                     u6795:
 26475  015262  52DE               	movf	postinc2,f,c
 26476  015264  90D8               	bcf	status,0,c
 26477  015266  BEDC               	btfsc	preinc2,7,c
 26478  015268  80D8               	bsf	status,0,c
 26479  01526A  32DD               	rrcf	postdec2,f,c
 26480  01526C  32DD               	rrcf	postdec2,f,c
 26481  01526E  32DD               	rrcf	postdec2,f,c
 26482  015270  32DE               	rrcf	postinc2,f,c
 26483  015272                     u6790:
 26484  015272  2EE8               	decfsz	wreg,f,c
 26485  015274  D7F6               	goto	u6795
 26486                           
 26487                           ;stkvar	_new_exp @ sp[(-13)+8]
 26488  015276  0EFB               	movlw	-5
 26489  015278  50E3               	movf	plusw1,w,c
 26490  01527A  0F01               	addlw	1
 26491  01527C  6E01               	movwf	btemp^0,c
 26492  01527E  0EFB               	movlw	-5
 26493  015280  0060  F007  FFE3   	movff	btemp,plusw1
 26494  015286  6A01               	clrf	btemp^0,c
 26495  015288  0EFC               	movlw	-4
 26496  01528A  50E3               	movf	plusw1,w,c
 26497  01528C  2001               	addwfc	btemp^0,w,c
 26498  01528E  6E01               	movwf	btemp^0,c
 26499  015290  0EFC               	movlw	-4
 26500  015292  0060  F007  FFE3   	movff	btemp,plusw1
 26501  015298                     l8500:
 26502                           
 26503                           ;stkvar	_new_exp @ sp[(-13)+8]
 26504  015298  0EFC               	movlw	-4
 26505  01529A  BEE3               	btfsc	plusw1,7,c
 26506  01529C  D01B               	goto	l8506
 26507  01529E  0EFC               	movlw	-4
 26508  0152A0  50E3               	movf	plusw1,w,c
 26509  0152A2  E104               	bnz	u6800
 26510  0152A4  0EFB               	movlw	-5
 26511  0152A6  28E3               	incf	plusw1,w,c
 26512  0152A8  A0D8               	btfss	status,0,c
 26513  0152AA  D014               	goto	l8506
 26514  0152AC                     u6800:
 26515  0152AC  0EFF               	movlw	255
 26516  0152AE  6E0B               	movwf	(btemp+10)^0,c
 26517  0152B0  0E00               	movlw	0
 26518  0152B2  6E0C               	movwf	(btemp+11)^0,c
 26519                           
 26520                           ;stkvar	_new_exp @ sp[(-13)+8]
 26521  0152B4  0EFB               	movlw	-5
 26522  0152B6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26523  0152BC  0EFC               	movlw	-4
 26524  0152BE  0060  F033  FFE3   	movff	btemp+11,plusw1
 26525                           
 26526                           ;stkvar	_b @ sp[(-13)+-4]
 26527  0152C4  0EEF               	movlw	-17
 26528  0152C6  6AE3               	clrf	plusw1,c
 26529  0152C8  0EF0               	movlw	-16
 26530  0152CA  6AE3               	clrf	plusw1,c
 26531  0152CC  0EF1               	movlw	-15
 26532  0152CE  6AE3               	clrf	plusw1,c
 26533  0152D0  0EF2               	movlw	-14
 26534  0152D2  6AE3               	clrf	plusw1,c
 26535  0152D4                     l8506:
 26536                           
 26537                           ;stkvar	_new_exp @ sp[(-13)+8]
 26538  0152D4  0EFC               	movlw	-4
 26539  0152D6  BEE3               	btfsc	plusw1,7,c
 26540  0152D8  D007               	goto	u6810
 26541  0152DA  0EFC               	movlw	-4
 26542  0152DC  50E3               	movf	plusw1,w,c
 26543  0152DE  E112               	bnz	l8512
 26544  0152E0  0EFB               	movlw	-5
 26545  0152E2  04E3               	decf	plusw1,w,c
 26546  0152E4  B0D8               	btfsc	status,0,c
 26547  0152E6  D00E               	goto	l8512
 26548  0152E8                     u6810:
 26549                           
 26550                           ;stkvar	_new_exp @ sp[(-13)+8]
 26551  0152E8  0EFB               	movlw	-5
 26552  0152EA  6AE3               	clrf	plusw1,c
 26553  0152EC  0EFC               	movlw	-4
 26554  0152EE  6AE3               	clrf	plusw1,c
 26555                           
 26556                           ;stkvar	_b @ sp[(-13)+-4]
 26557  0152F0  0EEF               	movlw	-17
 26558  0152F2  6AE3               	clrf	plusw1,c
 26559  0152F4  0EF0               	movlw	-16
 26560  0152F6  6AE3               	clrf	plusw1,c
 26561  0152F8  0EF1               	movlw	-15
 26562  0152FA  6AE3               	clrf	plusw1,c
 26563  0152FC  0EF2               	movlw	-14
 26564  0152FE  6AE3               	clrf	plusw1,c
 26565                           
 26566                           ;stkvar	_sign @ sp[(-13)+12]
 26567  015300  0EFF               	movlw	-1
 26568  015302  6AE3               	clrf	plusw1,c
 26569  015304                     l8512:
 26570                           
 26571                           ;stkvar	_new_exp @ sp[(-13)+8]
 26572                           ;stkvar	_bexp @ sp[(-13)+11]
 26573  015304  0EFB               	movlw	-5
 26574  015306  006F FF8C  F001    	movff	plusw1,btemp
 26575  01530C  0EFE               	movlw	-2
 26576  01530E  0060  F007  FFE3   	movff	btemp,plusw1
 26577                           
 26578                           ;stkvar	_bexp @ sp[(-13)+11]
 26579  015314  0EFE               	movlw	-2
 26580  015316  A0E3               	btfss	plusw1,0,c
 26581  015318  D009               	goto	l8518
 26582                           
 26583                           ;stkvar	_b @ sp[(-13)+-4]
 26584  01531A  0EF1               	movlw	241
 26585  01531C  24E1               	addwf	fsr1l,w,c
 26586  01531E  6ED9               	movwf	fsr2l,c
 26587  015320  0EFF               	movlw	255
 26588  015322  20E2               	addwfc	fsr1h,w,c
 26589  015324  6EDA               	movwf	fsr2h,c
 26590  015326  0E00               	movlw	0
 26591  015328  8EDB               	bsf	plusw2,7,c
 26592  01532A  D008               	goto	l8520
 26593  01532C                     l8518:
 26594                           
 26595                           ;stkvar	_b @ sp[(-13)+-4]
 26596  01532C  0EF1               	movlw	241
 26597  01532E  24E1               	addwf	fsr1l,w,c
 26598  015330  6ED9               	movwf	fsr2l,c
 26599  015332  0EFF               	movlw	255
 26600  015334  20E2               	addwfc	fsr1h,w,c
 26601  015336  6EDA               	movwf	fsr2h,c
 26602  015338  0E7F               	movlw	127
 26603  01533A  16DF               	andwf	indf2,f,c
 26604  01533C                     l8520:
 26605                           
 26606                           ;stkvar	_b @ sp[(-13)+-4]
 26607  01533C  0EF2               	movlw	242
 26608  01533E  24E1               	addwf	fsr1l,w,c
 26609  015340  6ED9               	movwf	fsr2l,c
 26610  015342  0EFF               	movlw	255
 26611  015344  20E2               	addwfc	fsr1h,w,c
 26612  015346  6EDA               	movwf	fsr2h,c
 26613                           
 26614                           ;stkvar	_bexp @ sp[(-13)+11]
 26615  015348  0EFE               	movlw	-2
 26616  01534A  006F FF8C  F00C    	movff	plusw1,btemp+11
 26617  015350  90D8               	bcf	status,0,c
 26618  015352  300C               	rrcf	(btemp+11)^0,w,c
 26619  015354  6EDF               	movwf	indf2,c
 26620  015356  D644               	goto	l8418
 26621  015358                     l3063:
 26622                           
 26623                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 26624  015358  0EEB               	movlw	235
 26625  01535A  26E1               	addwf	fsr1l,f,c
 26626  01535C  0EFF               	movlw	255
 26627  01535E  22E2               	addwfc	fsr1h,f,c
 26628  015360  0012               	return		;funcret
 26629  015362                     __end_of___fldiv:
 26630                           	opt callstack 0
 26631                           
 26632 ;; *************** function ___flge *****************
 26633 ;; Defined at:
 26634 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 26635 ;; Parameters:    Size  Location     Type
 26636 ;;  ff1             4  [STACK] unsigned char 
 26637 ;;  ff2             4  [STACK] unsigned char 
 26638 ;; Auto vars:     Size  Location     Type
 26639 ;;		None
 26640 ;; Return value:  Size  Location     Type
 26641 ;;		None               void
 26642 ;; Registers used:
 26643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 26644 ;; Tracked objects:
 26645 ;;		On entry : 0/0
 26646 ;;		On exit  : 0/0
 26647 ;;		Unchanged: 0/0
 26648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26653 ;;Total ram usage:        0 bytes
 26654 ;; Hardware stack levels used:    1
 26655 ;; Hardware stack levels required when called:   15
 26656 ;; This function calls:
 26657 ;;		Nothing
 26658 ;; This function is called by:
 26659 ;;		_main
 26660 ;;		_convert_dac_raw
 26661 ;;		_calc_ror_data
 26662 ;;		_check_day_time
 26663 ;;		_calc_bsoc
 26664 ;;		_efgtoa
 26665 ;; This function uses a reentrant model
 26666 ;;
 26667                           
 26668                           	psect	text106
 26669  01924C                     __ptext106:
 26670                           	opt callstack 0
 26671  01924C                     ___flge:
 26672                           	opt callstack 0
 26673                           
 26674                           ;stkvar	_ff1 @ sp[(0)+-4]
 26675                           
 26676                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26677                           ;incstack = 0
 26678 ;; hardware stack exceeded
 26679  01924C  50E1               	movf	fsr1l,w,c
 26680  01924E  0FFC               	addlw	-4
 26681  019250  6ED9               	movwf	fsr2l,c
 26682  019252  50E2               	movf	fsr1h,w,c
 26683  019254  6EDA               	movwf	fsr2h,c
 26684  019256  0EFF               	movlw	255
 26685  019258  22DA               	addwfc	fsr2h,f,c
 26686  01925A  0E00               	movlw	0
 26687  01925C  14DE               	andwf	postinc2,w,c
 26688  01925E  6E09               	movwf	(btemp+8)^0,c
 26689  019260  0E00               	movlw	0
 26690  019262  14DE               	andwf	postinc2,w,c
 26691  019264  6E0A               	movwf	(btemp+9)^0,c
 26692  019266  0E80               	movlw	128
 26693  019268  14DE               	andwf	postinc2,w,c
 26694  01926A  6E0B               	movwf	(btemp+10)^0,c
 26695  01926C  0E7F               	movlw	127
 26696  01926E  14DE               	andwf	postinc2,w,c
 26697  019270  6E0C               	movwf	(btemp+11)^0,c
 26698  019272  5009               	movf	(btemp+8)^0,w,c
 26699  019274  100A               	iorwf	(btemp+9)^0,w,c
 26700  019276  100B               	iorwf	(btemp+10)^0,w,c
 26701  019278  100C               	iorwf	(btemp+11)^0,w,c
 26702  01927A  A4D8               	btfss	status,2,c
 26703  01927C  D008               	goto	l8794
 26704                           
 26705                           ;stkvar	_ff1 @ sp[(0)+-4]
 26706  01927E  0EFC               	movlw	-4
 26707  019280  6AE3               	clrf	plusw1,c
 26708  019282  0EFD               	movlw	-3
 26709  019284  6AE3               	clrf	plusw1,c
 26710  019286  0EFE               	movlw	-2
 26711  019288  6AE3               	clrf	plusw1,c
 26712  01928A  0EFF               	movlw	-1
 26713  01928C  6AE3               	clrf	plusw1,c
 26714  01928E                     l8794:
 26715                           
 26716                           ;stkvar	_ff2 @ sp[(0)+-8]
 26717  01928E  50E1               	movf	fsr1l,w,c
 26718  019290  0FF8               	addlw	-8
 26719  019292  6ED9               	movwf	fsr2l,c
 26720  019294  50E2               	movf	fsr1h,w,c
 26721  019296  6EDA               	movwf	fsr2h,c
 26722  019298  0EFF               	movlw	255
 26723  01929A  22DA               	addwfc	fsr2h,f,c
 26724  01929C  0E00               	movlw	0
 26725  01929E  14DE               	andwf	postinc2,w,c
 26726  0192A0  6E09               	movwf	(btemp+8)^0,c
 26727  0192A2  0E00               	movlw	0
 26728  0192A4  14DE               	andwf	postinc2,w,c
 26729  0192A6  6E0A               	movwf	(btemp+9)^0,c
 26730  0192A8  0E80               	movlw	128
 26731  0192AA  14DE               	andwf	postinc2,w,c
 26732  0192AC  6E0B               	movwf	(btemp+10)^0,c
 26733  0192AE  0E7F               	movlw	127
 26734  0192B0  14DE               	andwf	postinc2,w,c
 26735  0192B2  6E0C               	movwf	(btemp+11)^0,c
 26736  0192B4  5009               	movf	(btemp+8)^0,w,c
 26737  0192B6  100A               	iorwf	(btemp+9)^0,w,c
 26738  0192B8  100B               	iorwf	(btemp+10)^0,w,c
 26739  0192BA  100C               	iorwf	(btemp+11)^0,w,c
 26740  0192BC  A4D8               	btfss	status,2,c
 26741  0192BE  D008               	goto	l2744
 26742                           
 26743                           ;stkvar	_ff2 @ sp[(0)+-8]
 26744  0192C0  0EF8               	movlw	-8
 26745  0192C2  6AE3               	clrf	plusw1,c
 26746  0192C4  0EF9               	movlw	-7
 26747  0192C6  6AE3               	clrf	plusw1,c
 26748  0192C8  0EFA               	movlw	-6
 26749  0192CA  6AE3               	clrf	plusw1,c
 26750  0192CC  0EFB               	movlw	-5
 26751  0192CE  6AE3               	clrf	plusw1,c
 26752  0192D0                     l2744:
 26753                           
 26754                           ;stkvar	_ff1 @ sp[(0)+-4]
 26755  0192D0  0EFF               	movlw	-1
 26756  0192D2  AEE3               	btfss	plusw1,7,c
 26757  0192D4  D024               	goto	l8800
 26758                           
 26759                           ;stkvar	_ff1 @ sp[(0)+-4]
 26760  0192D6  0E00               	movlw	0
 26761  0192D8  6E09               	movwf	(btemp+8)^0,c
 26762  0192DA  0E00               	movlw	0
 26763  0192DC  6E0A               	movwf	(btemp+9)^0,c
 26764  0192DE  0E00               	movlw	0
 26765  0192E0  6E0B               	movwf	(btemp+10)^0,c
 26766  0192E2  0E80               	movlw	128
 26767  0192E4  6E0C               	movwf	(btemp+11)^0,c
 26768  0192E6  0EFC               	movlw	-4
 26769  0192E8  50E3               	movf	plusw1,w,c
 26770  0192EA  5E09               	subwf	(btemp+8)^0,f,c
 26771  0192EC  0EFD               	movlw	-3
 26772  0192EE  50E3               	movf	plusw1,w,c
 26773  0192F0  5A0A               	subwfb	(btemp+9)^0,f,c
 26774  0192F2  0EFE               	movlw	-2
 26775  0192F4  50E3               	movf	plusw1,w,c
 26776  0192F6  5A0B               	subwfb	(btemp+10)^0,f,c
 26777  0192F8  0EFF               	movlw	-1
 26778  0192FA  50E3               	movf	plusw1,w,c
 26779  0192FC  5A0C               	subwfb	(btemp+11)^0,f,c
 26780                           
 26781                           ;stkvar	_ff1 @ sp[(0)+-4]
 26782  0192FE  0EFC               	movlw	-4
 26783  019300  0060  F027  FFE3   	movff	btemp+8,plusw1
 26784  019306  0EFD               	movlw	-3
 26785  019308  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26786  01930E  0EFE               	movlw	-2
 26787  019310  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26788  019316  0EFF               	movlw	-1
 26789  019318  0060  F033  FFE3   	movff	btemp+11,plusw1
 26790  01931E                     l8800:
 26791                           
 26792                           ;stkvar	_ff2 @ sp[(0)+-8]
 26793  01931E  0EFB               	movlw	-5
 26794  019320  AEE3               	btfss	plusw1,7,c
 26795  019322  D024               	goto	l8804
 26796                           
 26797                           ;stkvar	_ff2 @ sp[(0)+-8]
 26798  019324  0E00               	movlw	0
 26799  019326  6E09               	movwf	(btemp+8)^0,c
 26800  019328  0E00               	movlw	0
 26801  01932A  6E0A               	movwf	(btemp+9)^0,c
 26802  01932C  0E00               	movlw	0
 26803  01932E  6E0B               	movwf	(btemp+10)^0,c
 26804  019330  0E80               	movlw	128
 26805  019332  6E0C               	movwf	(btemp+11)^0,c
 26806  019334  0EF8               	movlw	-8
 26807  019336  50E3               	movf	plusw1,w,c
 26808  019338  5E09               	subwf	(btemp+8)^0,f,c
 26809  01933A  0EF9               	movlw	-7
 26810  01933C  50E3               	movf	plusw1,w,c
 26811  01933E  5A0A               	subwfb	(btemp+9)^0,f,c
 26812  019340  0EFA               	movlw	-6
 26813  019342  50E3               	movf	plusw1,w,c
 26814  019344  5A0B               	subwfb	(btemp+10)^0,f,c
 26815  019346  0EFB               	movlw	-5
 26816  019348  50E3               	movf	plusw1,w,c
 26817  01934A  5A0C               	subwfb	(btemp+11)^0,f,c
 26818                           
 26819                           ;stkvar	_ff2 @ sp[(0)+-8]
 26820  01934C  0EF8               	movlw	-8
 26821  01934E  0060  F027  FFE3   	movff	btemp+8,plusw1
 26822  019354  0EF9               	movlw	-7
 26823  019356  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26824  01935C  0EFA               	movlw	-6
 26825  01935E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26826  019364  0EFB               	movlw	-5
 26827  019366  0060  F033  FFE3   	movff	btemp+11,plusw1
 26828  01936C                     l8804:
 26829                           
 26830                           ;stkvar	_ff1 @ sp[(0)+-4]
 26831  01936C  0EFF               	movlw	-1
 26832  01936E  7EE3               	btg	plusw1,7,c
 26833                           
 26834                           ;stkvar	_ff2 @ sp[(0)+-8]
 26835  019370  0EFB               	movlw	-5
 26836  019372  7EE3               	btg	plusw1,7,c
 26837                           
 26838                           ;stkvar	_ff2 @ sp[(0)+-8]
 26839                           ;stkvar	_ff1 @ sp[(0)+-4]
 26840  019374  50E1               	movf	fsr1l,w,c
 26841  019376  0FFC               	addlw	-4
 26842  019378  6ED9               	movwf	fsr2l,c
 26843  01937A  50E2               	movf	fsr1h,w,c
 26844  01937C  6EDA               	movwf	fsr2h,c
 26845  01937E  0EFF               	movlw	255
 26846  019380  22DA               	addwfc	fsr2h,f,c
 26847  019382  0EF8               	movlw	-8
 26848  019384  50E3               	movf	plusw1,w,c
 26849  019386  5CDE               	subwf	postinc2,w,c
 26850  019388  0EF9               	movlw	-7
 26851  01938A  50E3               	movf	plusw1,w,c
 26852  01938C  58DE               	subwfb	postinc2,w,c
 26853  01938E  0EFA               	movlw	-6
 26854  019390  50E3               	movf	plusw1,w,c
 26855  019392  58DE               	subwfb	postinc2,w,c
 26856  019394  0EFB               	movlw	-5
 26857  019396  50E3               	movf	plusw1,w,c
 26858  019398  58DE               	subwfb	postinc2,w,c
 26859  01939A  B0D8               	btfsc	status,0,c
 26860  01939C  D002               	goto	l8812
 26861  01939E  9001               	bcf	btemp& (0+255),0,c
 26862  0193A0  D001               	goto	l2751
 26863  0193A2                     l8812:
 26864  0193A2  8001               	bsf	btemp& (0+255),0,c
 26865  0193A4                     l2751:
 26866                           
 26867                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 26868  0193A4  0EF8               	movlw	248
 26869  0193A6  26E1               	addwf	fsr1l,f,c
 26870  0193A8  0EFF               	movlw	255
 26871  0193AA  22E2               	addwfc	fsr1h,f,c
 26872  0193AC  0012               	return		;funcret
 26873  0193AE                     __end_of___flge:
 26874                           	opt callstack 0
 26875                           
 26876 ;; *************** function _calc_model_data *****************
 26877 ;; Defined at:
 26878 ;;		line 67 in file "mbmc.c"
 26879 ;; Parameters:    Size  Location     Type
 26880 ;;		None
 26881 ;; Auto vars:     Size  Location     Type
 26882 ;;		None
 26883 ;; Return value:  Size  Location     Type
 26884 ;;                  1  [STACK] void 
 26885 ;; Registers used:
 26886 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26887 ;; Tracked objects:
 26888 ;;		On entry : 0/1
 26889 ;;		On exit  : 3F/39
 26890 ;;		Unchanged: 0/0
 26891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26896 ;;Total ram usage:        0 bytes
 26897 ;; Hardware stack levels used:    1
 26898 ;; Hardware stack levels required when called:   18
 26899 ;; This function calls:
 26900 ;;		___fladd
 26901 ;;		___flmul
 26902 ;;		___flsub
 26903 ;;		_lp_filter
 26904 ;;		_start_bsoc
 26905 ;;		_stop_bsoc
 26906 ;; This function is called by:
 26907 ;;		_main
 26908 ;; This function uses a reentrant model
 26909 ;;
 26910                           
 26911                           	psect	text107
 26912  015CF6                     __ptext107:
 26913                           	opt callstack 0
 26914  015CF6                     _calc_model_data:
 26915                           	opt callstack 12
 26916                           
 26917                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 26918                           
 26919                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26920                           ;incstack = 0
 26921  015CF6  EC0E  F0E3         	call	_stop_bsoc	;wreg free
 26922                           
 26923                           ; BSR set to: 57
 26924                           ;mbmc.c: 72:  if (!V.calib) {
 26925  015CFA  0101               	movlb	1	; () banked
 26926  015CFC  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 26927  015CFE  A4D8               	btfss	status,2,c
 26928  015D00  D219               	goto	l11278
 26929                           
 26930                           ; BSR set to: 1
 26931                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 26932  015D02  EE21  F2FF         	lfsr	2,_C
 26933  015D06  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 26934  015D0C  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 26935  015D12  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 26936  015D18  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 26937                           
 26938                           ; BSR set to: 1
 26939                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 26940  015D1E  0060  F1C3  FFE6   	movff	calc_model_data@bcror,postinc1
 26941  015D24  0060  F1C7  FFE6   	movff	calc_model_data@bcror+1,postinc1
 26942  015D2A  0060  F1CB  FFE6   	movff	calc_model_data@bcror+2,postinc1
 26943  015D30  0060  F1CF  FFE6   	movff	calc_model_data@bcror+3,postinc1
 26944  015D36  EE21  F343         	lfsr	2,_C+68	;volatile
 26945  015D3A  006F FF7B FFE6     	movff	postinc2,postinc1
 26946  015D40  006F FF7B FFE6     	movff	postinc2,postinc1
 26947  015D46  006F FF7B FFE6     	movff	postinc2,postinc1
 26948  015D4C  006F FF7B FFE6     	movff	postinc2,postinc1
 26949  015D52  EC0C  F0DD         	call	___flsub	;wreg free
 26950  015D56  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 26951  015D5C  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 26952  015D62  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 26953  015D68  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 26954                           
 26955                           ;mbmc.c: 75:   bcror = C.c_bat;
 26956  015D6E  C743  F070         	movff	_C+68,calc_model_data@bcror	;volatile
 26957  015D72  C744  F071         	movff	_C+69,calc_model_data@bcror+1	;volatile
 26958  015D76  C745  F072         	movff	_C+70,calc_model_data@bcror+2	;volatile
 26959  015D7A  C746  F073         	movff	_C+71,calc_model_data@bcror+3	;volatile
 26960                           
 26961                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 26962  015D7E  EE21  F303         	lfsr	2,_C+4	;volatile
 26963  015D82  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 26964  015D88  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 26965  015D8E  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 26966  015D94  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 26967                           
 26968                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 26969  015D9A  EE21  F30F         	lfsr	2,_C+16	;volatile
 26970  015D9E  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 26971  015DA4  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 26972  015DAA  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 26973  015DB0  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 26974                           
 26975                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 26976  015DB6  EE21  F333         	lfsr	2,_C+52	;volatile
 26977  015DBA  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 26978  015DC0  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 26979  015DC6  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 26980  015DCC  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 26981                           
 26982                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 26983  015DD2  0060  F1D3  FFE6   	movff	calc_model_data@bvror,postinc1
 26984  015DD8  0060  F1D7  FFE6   	movff	calc_model_data@bvror+1,postinc1
 26985  015DDE  0060  F1DB  FFE6   	movff	calc_model_data@bvror+2,postinc1
 26986  015DE4  0060  F1DF  FFE6   	movff	calc_model_data@bvror+3,postinc1
 26987  015DEA  EE21  F353         	lfsr	2,_C+84	;volatile
 26988  015DEE  006F FF7B FFE6     	movff	postinc2,postinc1
 26989  015DF4  006F FF7B FFE6     	movff	postinc2,postinc1
 26990  015DFA  006F FF7B FFE6     	movff	postinc2,postinc1
 26991  015E00  006F FF7B FFE6     	movff	postinc2,postinc1
 26992  015E06  EC0C  F0DD         	call	___flsub	;wreg free
 26993  015E0A  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 26994  015E10  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 26995  015E16  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 26996  015E1C  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 26997                           
 26998                           ;mbmc.c: 80:   bvror = C.v_bat;
 26999  015E22  C753  F074         	movff	_C+84,calc_model_data@bvror	;volatile
 27000  015E26  C754  F075         	movff	_C+85,calc_model_data@bvror+1	;volatile
 27001  015E2A  C755  F076         	movff	_C+86,calc_model_data@bvror+2	;volatile
 27002  015E2E  C756  F077         	movff	_C+87,calc_model_data@bvror+3	;volatile
 27003                           
 27004                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 27005  015E32  EE21  F313         	lfsr	2,_C+20	;volatile
 27006  015E36  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 27007  015E3C  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 27008  015E42  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 27009  015E48  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 27010                           
 27011                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 27012  015E4E  EE21  F307         	lfsr	2,_C+8	;volatile
 27013  015E52  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 27014  015E58  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 27015  015E5E  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 27016  015E64  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 27017                           
 27018                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 27019  015E6A  EE21  F32F         	lfsr	2,_C+48	;volatile
 27020  015E6E  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 27021  015E74  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 27022  015E7A  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 27023  015E80  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 27024                           
 27025                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 27026  015E86  0E01               	movlw	1
 27027  015E88  6EE6               	movwf	postinc1,c
 27028  015E8A  0E10               	movlw	16
 27029  015E8C  6EE6               	movwf	postinc1,c
 27030  015E8E  EE21  F2FF         	lfsr	2,_C
 27031  015E92  006F FF7B FFE6     	movff	postinc2,postinc1
 27032  015E98  006F FF7B FFE6     	movff	postinc2,postinc1
 27033  015E9E  006F FF7B FFE6     	movff	postinc2,postinc1
 27034  015EA4  006F FF7B FFE6     	movff	postinc2,postinc1
 27035  015EAA  EE21  F303         	lfsr	2,_C+4	;volatile
 27036  015EAE  006F FF7B FFE6     	movff	postinc2,postinc1
 27037  015EB4  006F FF7B FFE6     	movff	postinc2,postinc1
 27038  015EBA  006F FF7B FFE6     	movff	postinc2,postinc1
 27039  015EC0  006F FF7B FFE6     	movff	postinc2,postinc1
 27040  015EC6  EC0C  F0DD         	call	___flsub	;wreg free
 27041  015ECA  0060  F007  FFE6   	movff	btemp,postinc1
 27042  015ED0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27043  015ED6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27044  015EDC  0060  F013  FFE6   	movff	btemp+3,postinc1
 27045  015EE2  EC71  F0C4         	call	_lp_filter	;wreg free
 27046  015EE6  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 27047  015EEC  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 27048  015EF2  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 27049  015EF8  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 27050                           
 27051                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 27052  015EFE  0E01               	movlw	1
 27053  015F00  6EE6               	movwf	postinc1,c
 27054  015F02  0E11               	movlw	17
 27055  015F04  6EE6               	movwf	postinc1,c
 27056  015F06  EE21  F353         	lfsr	2,_C+84	;volatile
 27057  015F0A  006F FF7B FFE6     	movff	postinc2,postinc1
 27058  015F10  006F FF7B FFE6     	movff	postinc2,postinc1
 27059  015F16  006F FF7B FFE6     	movff	postinc2,postinc1
 27060  015F1C  006F FF7B FFE6     	movff	postinc2,postinc1
 27061  015F22  EE21  F33F         	lfsr	2,_C+64	;volatile
 27062  015F26  006F FF7B FFE6     	movff	postinc2,postinc1
 27063  015F2C  006F FF7B FFE6     	movff	postinc2,postinc1
 27064  015F32  006F FF7B FFE6     	movff	postinc2,postinc1
 27065  015F38  006F FF7B FFE6     	movff	postinc2,postinc1
 27066  015F3E  EC01  F09F         	call	___flmul	;wreg free
 27067  015F42  0060  F007  FFE6   	movff	btemp,postinc1
 27068  015F48  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27069  015F4E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27070  015F54  0060  F013  FFE6   	movff	btemp+3,postinc1
 27071  015F5A  EC71  F0C4         	call	_lp_filter	;wreg free
 27072  015F5E  0060  F004  F773   	movff	btemp,_C+116	;volatile
 27073  015F64  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 27074  015F6A  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 27075  015F70  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 27076                           
 27077                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 27078  015F76  0E01               	movlw	1
 27079  015F78  6EE6               	movwf	postinc1,c
 27080  015F7A  0E12               	movlw	18
 27081  015F7C  6EE6               	movwf	postinc1,c
 27082  015F7E  EE21  F34F         	lfsr	2,_C+80	;volatile
 27083  015F82  006F FF7B FFE6     	movff	postinc2,postinc1
 27084  015F88  006F FF7B FFE6     	movff	postinc2,postinc1
 27085  015F8E  006F FF7B FFE6     	movff	postinc2,postinc1
 27086  015F94  006F FF7B FFE6     	movff	postinc2,postinc1
 27087  015F9A  EE21  F347         	lfsr	2,_C+72	;volatile
 27088  015F9E  006F FF7B FFE6     	movff	postinc2,postinc1
 27089  015FA4  006F FF7B FFE6     	movff	postinc2,postinc1
 27090  015FAA  006F FF7B FFE6     	movff	postinc2,postinc1
 27091  015FB0  006F FF7B FFE6     	movff	postinc2,postinc1
 27092  015FB6  EC01  F09F         	call	___flmul	;wreg free
 27093  015FBA  0060  F007  FFE6   	movff	btemp,postinc1
 27094  015FC0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27095  015FC6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27096  015FCC  0060  F013  FFE6   	movff	btemp+3,postinc1
 27097  015FD2  EC71  F0C4         	call	_lp_filter	;wreg free
 27098  015FD6  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 27099  015FDC  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 27100  015FE2  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 27101  015FE8  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 27102                           
 27103                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 27104  015FEE  0E01               	movlw	1
 27105  015FF0  6EE6               	movwf	postinc1,c
 27106  015FF2  0E13               	movlw	19
 27107  015FF4  6EE6               	movwf	postinc1,c
 27108  015FF6  0E00               	movlw	0
 27109  015FF8  6EE6               	movwf	postinc1,c
 27110  015FFA  0E00               	movlw	0
 27111  015FFC  6EE6               	movwf	postinc1,c
 27112  015FFE  0E60               	movlw	96
 27113  016000  6EE6               	movwf	postinc1,c
 27114  016002  0EC1               	movlw	193
 27115  016004  6EE6               	movwf	postinc1,c
 27116  016006  EE21  F363         	lfsr	2,_C+100	;volatile
 27117  01600A  006F FF7B FFE6     	movff	postinc2,postinc1
 27118  016010  006F FF7B FFE6     	movff	postinc2,postinc1
 27119  016016  006F FF7B FFE6     	movff	postinc2,postinc1
 27120  01601C  006F FF7B FFE6     	movff	postinc2,postinc1
 27121  016022  EE21  F33F         	lfsr	2,_C+64	;volatile
 27122  016026  006F FF7B FFE6     	movff	postinc2,postinc1
 27123  01602C  006F FF7B FFE6     	movff	postinc2,postinc1
 27124  016032  006F FF7B FFE6     	movff	postinc2,postinc1
 27125  016038  006F FF7B FFE6     	movff	postinc2,postinc1
 27126  01603E  EC01  F09F         	call	___flmul	;wreg free
 27127  016042  0060  F007  FFE6   	movff	btemp,postinc1
 27128  016048  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27129  01604E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27130  016054  0060  F013  FFE6   	movff	btemp+3,postinc1
 27131  01605A  EC16  F0A3         	call	___fladd	;wreg free
 27132  01605E  0060  F007  FFE6   	movff	btemp,postinc1
 27133  016064  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27134  01606A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27135  016070  0060  F013  FFE6   	movff	btemp+3,postinc1
 27136  016076  EC71  F0C4         	call	_lp_filter	;wreg free
 27137  01607A  0060  F004  F777   	movff	btemp,_C+120	;volatile
 27138  016080  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 27139  016086  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 27140  01608C  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 27141                           
 27142                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 27143  016092  0E01               	movlw	1
 27144  016094  6EE6               	movwf	postinc1,c
 27145  016096  0E14               	movlw	20
 27146  016098  6EE6               	movwf	postinc1,c
 27147  01609A  EE21  F353         	lfsr	2,_C+84	;volatile
 27148  01609E  006F FF7B FFE6     	movff	postinc2,postinc1
 27149  0160A4  006F FF7B FFE6     	movff	postinc2,postinc1
 27150  0160AA  006F FF7B FFE6     	movff	postinc2,postinc1
 27151  0160B0  006F FF7B FFE6     	movff	postinc2,postinc1
 27152  0160B6  EE21  F343         	lfsr	2,_C+68	;volatile
 27153  0160BA  006F FF7B FFE6     	movff	postinc2,postinc1
 27154  0160C0  006F FF7B FFE6     	movff	postinc2,postinc1
 27155  0160C6  006F FF7B FFE6     	movff	postinc2,postinc1
 27156  0160CC  006F FF7B FFE6     	movff	postinc2,postinc1
 27157  0160D2  EC01  F09F         	call	___flmul	;wreg free
 27158  0160D6  0060  F007  FFE6   	movff	btemp,postinc1
 27159  0160DC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27160  0160E2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27161  0160E8  0060  F013  FFE6   	movff	btemp+3,postinc1
 27162  0160EE  EC71  F0C4         	call	_lp_filter	;wreg free
 27163  0160F2  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 27164  0160F8  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 27165  0160FE  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 27166  016104  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 27167                           
 27168                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 27169  01610A  EE21  F377         	lfsr	2,_C+120	;volatile
 27170  01610E  0E03               	movlw	3
 27171  016110  AEDB               	btfss	plusw2,7,c
 27172  016112  D010               	goto	l11278
 27173                           
 27174                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 27175  016114  0E17               	movlw	23
 27176  016116  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 27177  01611C  0EB7               	movlw	183
 27178  01611E  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 27179  016124  0ED1               	movlw	209
 27180  016126  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 27181  01612C  0E38               	movlw	56
 27182  01612E  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 27183  016134                     l11278:
 27184                           
 27185                           ;mbmc.c: 95:  start_bsoc();
 27186  016134  EC9D  F0E1         	call	_start_bsoc	;wreg free
 27187                           
 27188                           ; BSR set to: 57
 27189                           ;mbmc.c: 96:  C.update = 1;
 27190  016138  0E01               	movlw	1
 27191  01613A  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 27192                           
 27193                           ; BSR set to: 57
 27194                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27195  016140  0012               	return		;funcret
 27196  016142                     __end_of_calc_model_data:
 27197                           	opt callstack 0
 27198                           
 27199 ;; *************** function _stop_bsoc *****************
 27200 ;; Defined at:
 27201 ;;		line 130 in file "bsoc.c"
 27202 ;; Parameters:    Size  Location     Type
 27203 ;;		None
 27204 ;; Auto vars:     Size  Location     Type
 27205 ;;		None
 27206 ;; Return value:  Size  Location     Type
 27207 ;;                  1  [STACK] void 
 27208 ;; Registers used:
 27209 ;;		None
 27210 ;; Tracked objects:
 27211 ;;		On entry : 0/1
 27212 ;;		On exit  : 3F/39
 27213 ;;		Unchanged: 0/0
 27214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27219 ;;Total ram usage:        0 bytes
 27220 ;; Hardware stack levels used:    1
 27221 ;; Hardware stack levels required when called:   15
 27222 ;; This function calls:
 27223 ;;		Nothing
 27224 ;; This function is called by:
 27225 ;;		_calc_model_data
 27226 ;; This function uses a reentrant model
 27227 ;;
 27228                           
 27229                           	psect	text108
 27230  01C61C                     __ptext108:
 27231                           	opt callstack 0
 27232  01C61C                     _stop_bsoc:
 27233                           	opt callstack 14
 27234                           
 27235                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 27236                           
 27237                           ; BSR set to: 57
 27238                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27239                           ;incstack = 0
 27240  01C61C  0139               	movlb	57	; () banked
 27241  01C61E  9D96               	bcf	150,6,b	;volatile
 27242                           
 27243                           ; BSR set to: 57
 27244                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 27245  01C620  0012               	return		;funcret
 27246  01C622                     __end_of_stop_bsoc:
 27247                           	opt callstack 0
 27248                           
 27249 ;; *************** function _start_bsoc *****************
 27250 ;; Defined at:
 27251 ;;		line 121 in file "bsoc.c"
 27252 ;; Parameters:    Size  Location     Type
 27253 ;;		None
 27254 ;; Auto vars:     Size  Location     Type
 27255 ;;		None
 27256 ;; Return value:  Size  Location     Type
 27257 ;;                  1  [STACK] void 
 27258 ;; Registers used:
 27259 ;;		wreg, status,2, status,0, btemp+11
 27260 ;; Tracked objects:
 27261 ;;		On entry : 0/1
 27262 ;;		On exit  : 3F/39
 27263 ;;		Unchanged: 0/0
 27264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27269 ;;Total ram usage:        0 bytes
 27270 ;; Hardware stack levels used:    1
 27271 ;; Hardware stack levels required when called:   15
 27272 ;; This function calls:
 27273 ;;		Nothing
 27274 ;; This function is called by:
 27275 ;;		_calc_model_data
 27276 ;; This function uses a reentrant model
 27277 ;;
 27278                           
 27279                           	psect	text109
 27280  01C33A                     __ptext109:
 27281                           	opt callstack 0
 27282  01C33A                     _start_bsoc:
 27283                           	opt callstack 14
 27284                           
 27285                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 27286                           
 27287                           ; BSR set to: 57
 27288                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27289                           ;incstack = 0
 27290  01C33A  0139               	movlb	57	; () banked
 27291  01C33C  8D96               	bsf	150,6,b	;volatile
 27292                           
 27293                           ; BSR set to: 57
 27294  01C33E  A4BE               	btfss	190,2,c	;volatile
 27295  01C340  D002               	goto	u9760
 27296  01C342  0E01               	movlw	1
 27297  01C344  D001               	goto	u9766
 27298  01C346                     u9760:
 27299  01C346  0E00               	movlw	0
 27300  01C348                     u9766:
 27301  01C348  0AFF               	xorlw	255
 27302  01C34A  6E0C               	movwf	(btemp+11)^0,c
 27303  01C34C  460C               	rlncf	(btemp+11)^0,f,c
 27304  01C34E  460C               	rlncf	(btemp+11)^0,f,c
 27305  01C350  50BE               	movf	190,w,c	;volatile
 27306  01C352  180C               	xorwf	(btemp+11)^0,w,c
 27307  01C354  0BFB               	andlw	-5
 27308  01C356  180C               	xorwf	(btemp+11)^0,w,c
 27309  01C358  6EBE               	movwf	190,c	;volatile
 27310                           
 27311                           ; BSR set to: 57
 27312                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 27313  01C35A  0012               	return		;funcret
 27314  01C35C                     __end_of_start_bsoc:
 27315                           	opt callstack 0
 27316                           
 27317 ;; *************** function _lp_filter *****************
 27318 ;; Defined at:
 27319 ;;		line 29 in file "mbmc.c"
 27320 ;; Parameters:    Size  Location     Type
 27321 ;;  new             4  [STACK] const float 
 27322 ;;  bn              1  [STACK] const unsigned char 
 27323 ;;  slow            1  [STACK] const char 
 27324 ;; Auto vars:     Size  Location     Type
 27325 ;;  lp_speed        4  [STACK] float 
 27326 ;; Return value:  Size  Location     Type
 27327 ;;                  4  [STACK] float 
 27328 ;; Registers used:
 27329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27330 ;; Tracked objects:
 27331 ;;		On entry : 0/1
 27332 ;;		On exit  : 0/0
 27333 ;;		Unchanged: 0/0
 27334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27339 ;;Total ram usage:        0 bytes
 27340 ;; Hardware stack levels used:    1
 27341 ;; Hardware stack levels required when called:   17
 27342 ;; This function calls:
 27343 ;;		___fladd
 27344 ;;		___flmul
 27345 ;;		___flsub
 27346 ;; This function is called by:
 27347 ;;		_main
 27348 ;;		_convert_adc_data
 27349 ;;		_calc_model_data
 27350 ;; This function uses a reentrant model
 27351 ;;
 27352                           
 27353                           	psect	text110
 27354  0188E2                     __ptext110:
 27355                           	opt callstack 0
 27356  0188E2                     _lp_filter:
 27357                           	opt callstack 0
 27358                           
 27359                           ; BSR set to: 57
 27360                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27361  0188E2  52E6               	movf	postinc1,f,c
 27362  0188E4  52E6               	movf	postinc1,f,c
 27363  0188E6  52E6               	movf	postinc1,f,c
 27364  0188E8  52E6               	movf	postinc1,f,c
 27365                           
 27366                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 27367                           ;stkvar	_bn @ sp[(-4)+-5]
 27368                           
 27369                           ;incstack = 0
 27370  0188EA  0EF7               	movlw	-9
 27371  0188EC  006F FF8C  F001    	movff	plusw1,btemp
 27372  0188F2  0E14               	movlw	20
 27373  0188F4  6401               	cpfsgt	btemp^0,c
 27374  0188F6  D011               	goto	l10596
 27375  0188F8                     u9620:
 27376                           
 27377                           ;mbmc.c: 35:   return new;
 27378                           ;stkvar	_new @ sp[(-4)+-4]
 27379  0188F8  0EF8               	movlw	-8
 27380  0188FA  006F FF8C  F001    	movff	plusw1,btemp
 27381  018900  0EF9               	movlw	-7
 27382  018902  006F FF8C  F002    	movff	plusw1,btemp+1
 27383  018908  0EFA               	movlw	-6
 27384  01890A  006F FF8C  F003    	movff	plusw1,btemp+2
 27385  018910  0EFB               	movlw	-5
 27386  018912  006F FF8C  F004    	movff	plusw1,btemp+3
 27387  018918  D0BD               	goto	l1918
 27388  01891A                     l10596:
 27389                           
 27390                           ;mbmc.c: 37:  if (slow == (-1)) {
 27391                           ;stkvar	_slow @ sp[(-4)+-6]
 27392  01891A  0EF6               	movlw	-10
 27393  01891C  28E3               	incf	plusw1,w,c
 27394  01891E  A4D8               	btfss	status,2,c
 27395  018920  D012               	goto	l10604
 27396                           
 27397                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 27398                           ;stkvar	_bn @ sp[(-4)+-5]
 27399  018922  0EF7               	movlw	-9
 27400  018924  50E3               	movf	plusw1,w,c
 27401  018926  0D04               	mullw	4
 27402  018928  0E00               	movlw	low lp_filter@smooth
 27403  01892A  24F3               	addwf	243,w,c
 27404  01892C  6ED9               	movwf	fsr2l,c
 27405  01892E  0E02               	movlw	high lp_filter@smooth
 27406  018930  20F4               	addwfc	prodh,w,c
 27407  018932  6EDA               	movwf	fsr2h,c
 27408  018934  0E00               	movlw	0
 27409  018936  6EDE               	movwf	postinc2,c
 27410  018938  0E00               	movlw	0
 27411  01893A  6EDE               	movwf	postinc2,c
 27412  01893C  0E00               	movlw	0
 27413  01893E  6EDE               	movwf	postinc2,c
 27414  018940  0E00               	movlw	0
 27415  018942  6EDD               	movwf	postdec2,c
 27416  018944  D7D9               	goto	u9620
 27417  018946                     l10604:
 27418                           
 27419                           ;mbmc.c: 42:  if (slow) {
 27420                           ;stkvar	_slow @ sp[(-4)+-6]
 27421  018946  0EF6               	movlw	-10
 27422  018948  50E3               	movf	plusw1,w,c
 27423  01894A  B4D8               	btfsc	status,2,c
 27424  01894C  D006               	goto	l10608
 27425                           
 27426                           ;mbmc.c: 43:   lp_speed = 0.033;
 27427  01894E  0E02               	movlw	2
 27428  018950  6E09               	movwf	(btemp+8)^0,c
 27429  018952  0E2B               	movlw	43
 27430  018954  6E0A               	movwf	(btemp+9)^0,c
 27431  018956  0E07               	movlw	7
 27432  018958  D005               	goto	L32
 27433  01895A                     l10608:
 27434                           
 27435                           ;mbmc.c: 45:   lp_speed = 0.066;
 27436  01895A  0E02               	movlw	2
 27437  01895C  6E09               	movwf	(btemp+8)^0,c
 27438  01895E  0E2B               	movlw	43
 27439  018960  6E0A               	movwf	(btemp+9)^0,c
 27440  018962  0E87               	movlw	135
 27441  018964                     L32:
 27442  018964  6E0B               	movwf	(btemp+10)^0,c
 27443  018966  0E3D               	movlw	61
 27444  018968  6E0C               	movwf	(btemp+11)^0,c
 27445                           
 27446                           ;stkvar	_lp_speed @ sp[(-4)+0]
 27447  01896A  0EFC               	movlw	-4
 27448  01896C  0060  F027  FFE3   	movff	btemp+8,plusw1
 27449  018972  0EFD               	movlw	-3
 27450  018974  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27451  01897A  0EFE               	movlw	-2
 27452  01897C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27453  018982  0EFF               	movlw	-1
 27454  018984  0060  F033  FFE3   	movff	btemp+11,plusw1
 27455                           
 27456                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 27457                           ;stkvar	_bn @ sp[(-4)+-5]
 27458  01898A  0EF7               	movlw	-9
 27459  01898C  50E3               	movf	plusw1,w,c
 27460  01898E  0D04               	mullw	4
 27461  018990  0E00               	movlw	low lp_filter@smooth
 27462  018992  24F3               	addwf	243,w,c
 27463  018994  6ED9               	movwf	fsr2l,c
 27464  018996  0E02               	movlw	high lp_filter@smooth
 27465  018998  20F4               	addwfc	prodh,w,c
 27466  01899A  6EDA               	movwf	fsr2h,c
 27467  01899C  006F FF7B FFE6     	movff	postinc2,postinc1
 27468  0189A2  006F FF7B FFE6     	movff	postinc2,postinc1
 27469  0189A8  006F FF7B FFE6     	movff	postinc2,postinc1
 27470  0189AE  006F FF7B FFE6     	movff	postinc2,postinc1
 27471                           
 27472                           ;stkvar	_lp_speed @ sp[(-8)+0]
 27473  0189B4  0EF8               	movlw	-8
 27474  0189B6  006F FF8F FFE6     	movff	plusw1,postinc1
 27475  0189BC  006F FF8F FFE6     	movff	plusw1,postinc1
 27476  0189C2  006F FF8F FFE6     	movff	plusw1,postinc1
 27477  0189C8  006F FF8F FFE6     	movff	plusw1,postinc1
 27478                           
 27479                           ;stkvar	_bn @ sp[(-12)+-5]
 27480  0189CE  0EEF               	movlw	-17
 27481  0189D0  50E3               	movf	plusw1,w,c
 27482  0189D2  0D04               	mullw	4
 27483  0189D4  0E00               	movlw	low lp_filter@smooth
 27484  0189D6  24F3               	addwf	243,w,c
 27485  0189D8  6ED9               	movwf	fsr2l,c
 27486  0189DA  0E02               	movlw	high lp_filter@smooth
 27487  0189DC  20F4               	addwfc	prodh,w,c
 27488  0189DE  6EDA               	movwf	fsr2h,c
 27489  0189E0  006F FF7B FFE6     	movff	postinc2,postinc1
 27490  0189E6  006F FF7B FFE6     	movff	postinc2,postinc1
 27491  0189EC  006F FF7B FFE6     	movff	postinc2,postinc1
 27492  0189F2  006F FF7B FFE6     	movff	postinc2,postinc1
 27493                           
 27494                           ;stkvar	_new @ sp[(-16)+-4]
 27495  0189F8  0EEC               	movlw	-20
 27496  0189FA  006F FF8F FFE6     	movff	plusw1,postinc1
 27497  018A00  006F FF8F FFE6     	movff	plusw1,postinc1
 27498  018A06  006F FF8F FFE6     	movff	plusw1,postinc1
 27499  018A0C  006F FF8F FFE6     	movff	plusw1,postinc1
 27500  018A12  EC0C  F0DD         	call	___flsub	;wreg free
 27501  018A16  0060  F007  FFE6   	movff	btemp,postinc1
 27502  018A1C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27503  018A22  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27504  018A28  0060  F013  FFE6   	movff	btemp+3,postinc1
 27505  018A2E  EC01  F09F         	call	___flmul	;wreg free
 27506  018A32  0060  F007  FFE6   	movff	btemp,postinc1
 27507  018A38  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27508  018A3E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27509  018A44  0060  F013  FFE6   	movff	btemp+3,postinc1
 27510  018A4A  EC16  F0A3         	call	___fladd	;wreg free
 27511                           
 27512                           ;stkvar	_bn @ sp[(-4)+-5]
 27513  018A4E  0EF7               	movlw	-9
 27514  018A50  50E3               	movf	plusw1,w,c
 27515  018A52  0D04               	mullw	4
 27516  018A54  0E00               	movlw	low lp_filter@smooth
 27517  018A56  24F3               	addwf	243,w,c
 27518  018A58  6ED9               	movwf	fsr2l,c
 27519  018A5A  0E02               	movlw	high lp_filter@smooth
 27520  018A5C  20F4               	addwfc	prodh,w,c
 27521  018A5E  6EDA               	movwf	fsr2h,c
 27522  018A60  0060  F007  FFDE   	movff	btemp,postinc2
 27523  018A66  0060  F00B  FFDE   	movff	btemp+1,postinc2
 27524  018A6C  0060  F00F  FFDE   	movff	btemp+2,postinc2
 27525  018A72  0060  F013  FFDD   	movff	btemp+3,postdec2
 27526  018A78  52DD               	movf	postdec2,f,c
 27527  018A7A  52DD               	movf	postdec2,f,c
 27528  018A7C  006F FF78  F001    	movff	postinc2,btemp
 27529  018A82  006F FF78  F002    	movff	postinc2,btemp+1
 27530  018A88  006F FF78  F003    	movff	postinc2,btemp+2
 27531  018A8E  006F FF78  F004    	movff	postinc2,btemp+3
 27532  018A94                     l1918:
 27533                           
 27534                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 27535  018A94  0EF6               	movlw	246
 27536  018A96  26E1               	addwf	fsr1l,f,c
 27537  018A98  0EFF               	movlw	255
 27538  018A9A  22E2               	addwfc	fsr1h,f,c
 27539  018A9C  0012               	return		;funcret
 27540  018A9E                     __end_of_lp_filter:
 27541                           	opt callstack 0
 27542                           
 27543 ;; *************** function ___flsub *****************
 27544 ;; Defined at:
 27545 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 27546 ;; Parameters:    Size  Location     Type
 27547 ;;  b               4  [STACK] float 
 27548 ;;  a               4  [STACK] float 
 27549 ;; Auto vars:     Size  Location     Type
 27550 ;;		None
 27551 ;; Return value:  Size  Location     Type
 27552 ;;                  4  [STACK] float 
 27553 ;; Registers used:
 27554 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 27555 ;; Tracked objects:
 27556 ;;		On entry : 0/0
 27557 ;;		On exit  : 0/0
 27558 ;;		Unchanged: 0/0
 27559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27564 ;;Total ram usage:        0 bytes
 27565 ;; Hardware stack levels used:    1
 27566 ;; Hardware stack levels required when called:   16
 27567 ;; This function calls:
 27568 ;;		___fladd
 27569 ;; This function is called by:
 27570 ;;		_conv_raw_result
 27571 ;;		_lp_filter
 27572 ;;		_calc_model_data
 27573 ;;		_calc_ror_data
 27574 ;;		_esr_check
 27575 ;;		_efgtoa
 27576 ;; This function uses a reentrant model
 27577 ;;
 27578                           
 27579                           	psect	text111
 27580  01BA18                     __ptext111:
 27581                           	opt callstack 0
 27582  01BA18                     ___flsub:
 27583                           	opt callstack 0
 27584                           
 27585                           ;stkvar	_a @ sp[(0)+-8]
 27586                           
 27587                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27588                           ;incstack = 0
 27589 ;; hardware stack exceeded
 27590  01BA18  0EFB               	movlw	-5
 27591  01BA1A  7EE3               	btg	plusw1,7,c
 27592                           
 27593                           ;stkvar	_a @ sp[(0)+-8]
 27594  01BA1C  0EF8               	movlw	-8
 27595  01BA1E  006F FF8F FFE6     	movff	plusw1,postinc1
 27596  01BA24  006F FF8F FFE6     	movff	plusw1,postinc1
 27597  01BA2A  006F FF8F FFE6     	movff	plusw1,postinc1
 27598  01BA30  006F FF8F FFE6     	movff	plusw1,postinc1
 27599                           
 27600                           ;stkvar	_b @ sp[(-4)+-4]
 27601  01BA36  0EF8               	movlw	-8
 27602  01BA38  006F FF8F FFE6     	movff	plusw1,postinc1
 27603  01BA3E  006F FF8F FFE6     	movff	plusw1,postinc1
 27604  01BA44  006F FF8F FFE6     	movff	plusw1,postinc1
 27605  01BA4A  006F FF8F FFE6     	movff	plusw1,postinc1
 27606  01BA50  EC16  F0A3         	call	___fladd	;wreg free
 27607                           
 27608                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27609  01BA54  0EF8               	movlw	248
 27610  01BA56  26E1               	addwf	fsr1l,f,c
 27611  01BA58  0EFF               	movlw	255
 27612  01BA5A  22E2               	addwfc	fsr1h,f,c
 27613  01BA5C  0012               	return		;funcret
 27614  01BA5E                     __end_of___flsub:
 27615                           	opt callstack 0
 27616                           
 27617 ;; *************** function ___fladd *****************
 27618 ;; Defined at:
 27619 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 27620 ;; Parameters:    Size  Location     Type
 27621 ;;  b               4  [STACK] float 
 27622 ;;  a               4  [STACK] float 
 27623 ;; Auto vars:     Size  Location     Type
 27624 ;;  grs             1  [STACK] unsigned char 
 27625 ;;  bexp            1  [STACK] unsigned char 
 27626 ;;  aexp            1  [STACK] unsigned char 
 27627 ;;  signs           1  [STACK] unsigned char 
 27628 ;; Return value:  Size  Location     Type
 27629 ;;                  4  [STACK] unsigned char 
 27630 ;; Registers used:
 27631 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 27632 ;; Tracked objects:
 27633 ;;		On entry : 0/0
 27634 ;;		On exit  : 0/0
 27635 ;;		Unchanged: 0/0
 27636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27641 ;;Total ram usage:        0 bytes
 27642 ;; Hardware stack levels used:    1
 27643 ;; Hardware stack levels required when called:   15
 27644 ;; This function calls:
 27645 ;;		Nothing
 27646 ;; This function is called by:
 27647 ;;		_main
 27648 ;;		_conv_raw_result
 27649 ;;		_lp_filter
 27650 ;;		_calc_model_data
 27651 ;;		_efgtoa
 27652 ;;		___asfladd
 27653 ;;		___flsub
 27654 ;; This function uses a reentrant model
 27655 ;;
 27656                           
 27657                           	psect	text112
 27658  01462C                     __ptext112:
 27659                           	opt callstack 0
 27660  01462C                     ___fladd:
 27661                           	opt callstack 0
 27662                           
 27663                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27664  01462C  52E6               	movf	postinc1,f,c
 27665  01462E  52E6               	movf	postinc1,f,c
 27666  014630  52E6               	movf	postinc1,f,c
 27667  014632  52E6               	movf	postinc1,f,c
 27668                           
 27669                           ;stkvar	_b @ sp[(-4)+-4]
 27670                           
 27671                           ;incstack = 0
 27672 ;; hardware stack exceeded
 27673  014634  0EFB               	movlw	251
 27674  014636  24E1               	addwf	fsr1l,w,c
 27675  014638  6ED9               	movwf	fsr2l,c
 27676  01463A  0EFF               	movlw	255
 27677  01463C  20E2               	addwfc	fsr1h,w,c
 27678  01463E  6EDA               	movwf	fsr2h,c
 27679  014640  50DF               	movf	indf2,w,c
 27680  014642  6E0C               	movwf	(btemp+11)^0,c
 27681  014644  0E80               	movlw	128
 27682  014646  160C               	andwf	(btemp+11)^0,f,c
 27683                           
 27684                           ;stkvar	_signs @ sp[(-4)+3]
 27685  014648  0EFF               	movlw	-1
 27686  01464A  0060  F033  FFE3   	movff	btemp+11,plusw1
 27687                           
 27688                           ;stkvar	_b @ sp[(-4)+-4]
 27689  014650  0EFB               	movlw	251
 27690  014652  24E1               	addwf	fsr1l,w,c
 27691  014654  6ED9               	movwf	fsr2l,c
 27692  014656  0EFF               	movlw	255
 27693  014658  20E2               	addwfc	fsr1h,w,c
 27694  01465A  6EDA               	movwf	fsr2h,c
 27695  01465C  50DF               	movf	indf2,w,c
 27696  01465E  6E0C               	movwf	(btemp+11)^0,c
 27697  014660  90D8               	bcf	status,0,c
 27698  014662  340C               	rlcf	(btemp+11)^0,w,c
 27699  014664  6E0B               	movwf	(btemp+10)^0,c
 27700                           
 27701                           ;stkvar	_bexp @ sp[(-4)+1]
 27702  014666  0EFD               	movlw	-3
 27703  014668  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27704                           
 27705                           ;stkvar	_b @ sp[(-4)+-4]
 27706  01466E  0EFA               	movlw	250
 27707  014670  24E1               	addwf	fsr1l,w,c
 27708  014672  6ED9               	movwf	fsr2l,c
 27709  014674  0EFF               	movlw	255
 27710  014676  20E2               	addwfc	fsr1h,w,c
 27711  014678  6EDA               	movwf	fsr2h,c
 27712  01467A  AEDF               	btfss	indf2,7,c
 27713  01467C  D002               	goto	l7902
 27714                           
 27715                           ;stkvar	_bexp @ sp[(-4)+1]
 27716  01467E  0EFD               	movlw	-3
 27717  014680  80E3               	bsf	plusw1,0,c
 27718  014682                     l7902:
 27719                           
 27720                           ;stkvar	_bexp @ sp[(-4)+1]
 27721  014682  0EFD               	movlw	-3
 27722  014684  50E3               	movf	plusw1,w,c
 27723  014686  B4D8               	btfsc	status,2,c
 27724  014688  D027               	goto	l7912
 27725                           
 27726                           ;stkvar	_bexp @ sp[(-4)+1]
 27727  01468A  0EFD               	movlw	-3
 27728  01468C  28E3               	incf	plusw1,w,c
 27729  01468E  A4D8               	btfss	status,2,c
 27730  014690  D018               	goto	l7908
 27731  014692  0E00               	movlw	0
 27732  014694  6E09               	movwf	(btemp+8)^0,c
 27733  014696  0E00               	movlw	0
 27734  014698  6E0A               	movwf	(btemp+9)^0,c
 27735  01469A  0E00               	movlw	0
 27736  01469C  6E0B               	movwf	(btemp+10)^0,c
 27737  01469E  0E00               	movlw	0
 27738  0146A0  6E0C               	movwf	(btemp+11)^0,c
 27739                           
 27740                           ;stkvar	_b @ sp[(-4)+-4]
 27741  0146A2  0EF8               	movlw	-8
 27742  0146A4  0060  F027  FFE3   	movff	btemp+8,plusw1
 27743  0146AA  0EF9               	movlw	-7
 27744  0146AC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27745  0146B2  0EFA               	movlw	-6
 27746  0146B4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27747  0146BA  0EFB               	movlw	-5
 27748  0146BC  0060  F033  FFE3   	movff	btemp+11,plusw1
 27749  0146C2                     l7908:
 27750                           
 27751                           ;stkvar	_b @ sp[(-4)+-4]
 27752  0146C2  0EFA               	movlw	-6
 27753  0146C4  8EE3               	bsf	plusw1,7,c
 27754                           
 27755                           ;stkvar	_b @ sp[(-4)+-4]
 27756  0146C6  0EFB               	movlw	251
 27757  0146C8  24E1               	addwf	fsr1l,w,c
 27758  0146CA  6ED9               	movwf	fsr2l,c
 27759  0146CC  0EFF               	movlw	255
 27760  0146CE  20E2               	addwfc	fsr1h,w,c
 27761  0146D0  6EDA               	movwf	fsr2h,c
 27762  0146D2  0E00               	movlw	0
 27763  0146D4  6EDF               	movwf	indf2,c
 27764  0146D6  D018               	goto	l7914
 27765  0146D8                     l7912:
 27766  0146D8  0E00               	movlw	0
 27767  0146DA  6E09               	movwf	(btemp+8)^0,c
 27768  0146DC  0E00               	movlw	0
 27769  0146DE  6E0A               	movwf	(btemp+9)^0,c
 27770  0146E0  0E00               	movlw	0
 27771  0146E2  6E0B               	movwf	(btemp+10)^0,c
 27772  0146E4  0E00               	movlw	0
 27773  0146E6  6E0C               	movwf	(btemp+11)^0,c
 27774                           
 27775                           ;stkvar	_b @ sp[(-4)+-4]
 27776  0146E8  0EF8               	movlw	-8
 27777  0146EA  0060  F027  FFE3   	movff	btemp+8,plusw1
 27778  0146F0  0EF9               	movlw	-7
 27779  0146F2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27780  0146F8  0EFA               	movlw	-6
 27781  0146FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27782  014700  0EFB               	movlw	-5
 27783  014702  0060  F033  FFE3   	movff	btemp+11,plusw1
 27784  014708                     l7914:
 27785                           
 27786                           ;stkvar	_a @ sp[(-4)+-8]
 27787  014708  0EF7               	movlw	247
 27788  01470A  24E1               	addwf	fsr1l,w,c
 27789  01470C  6ED9               	movwf	fsr2l,c
 27790  01470E  0EFF               	movlw	255
 27791  014710  20E2               	addwfc	fsr1h,w,c
 27792  014712  6EDA               	movwf	fsr2h,c
 27793  014714  50DF               	movf	indf2,w,c
 27794  014716  6E0C               	movwf	(btemp+11)^0,c
 27795  014718  0E80               	movlw	128
 27796  01471A  160C               	andwf	(btemp+11)^0,f,c
 27797                           
 27798                           ;stkvar	_aexp @ sp[(-4)+2]
 27799  01471C  0EFE               	movlw	-2
 27800  01471E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27801                           
 27802                           ;stkvar	_signs @ sp[(-4)+3]
 27803                           ;stkvar	_aexp @ sp[(-4)+2]
 27804  014724  50E1               	movf	fsr1l,w,c
 27805  014726  0FFE               	addlw	-2
 27806  014728  6ED9               	movwf	fsr2l,c
 27807  01472A  50E2               	movf	fsr1h,w,c
 27808  01472C  6EDA               	movwf	fsr2h,c
 27809  01472E  0EFF               	movlw	255
 27810  014730  22DA               	addwfc	fsr2h,f,c
 27811  014732  0EFF               	movlw	-1
 27812  014734  50E3               	movf	plusw1,w,c
 27813  014736  18DE               	xorwf	postinc2,w,c
 27814  014738  B4D8               	btfsc	status,2,c
 27815  01473A  D002               	goto	l7920
 27816                           
 27817                           ;stkvar	_signs @ sp[(-4)+3]
 27818  01473C  0EFF               	movlw	-1
 27819  01473E  8CE3               	bsf	plusw1,6,c
 27820  014740                     l7920:
 27821                           
 27822                           ;stkvar	_a @ sp[(-4)+-8]
 27823  014740  0EF7               	movlw	247
 27824  014742  24E1               	addwf	fsr1l,w,c
 27825  014744  6ED9               	movwf	fsr2l,c
 27826  014746  0EFF               	movlw	255
 27827  014748  20E2               	addwfc	fsr1h,w,c
 27828  01474A  6EDA               	movwf	fsr2h,c
 27829  01474C  50DF               	movf	indf2,w,c
 27830  01474E  6E0C               	movwf	(btemp+11)^0,c
 27831  014750  90D8               	bcf	status,0,c
 27832  014752  340C               	rlcf	(btemp+11)^0,w,c
 27833  014754  6E0B               	movwf	(btemp+10)^0,c
 27834                           
 27835                           ;stkvar	_aexp @ sp[(-4)+2]
 27836  014756  0EFE               	movlw	-2
 27837  014758  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27838                           
 27839                           ;stkvar	_a @ sp[(-4)+-8]
 27840  01475E  0EF6               	movlw	246
 27841  014760  24E1               	addwf	fsr1l,w,c
 27842  014762  6ED9               	movwf	fsr2l,c
 27843  014764  0EFF               	movlw	255
 27844  014766  20E2               	addwfc	fsr1h,w,c
 27845  014768  6EDA               	movwf	fsr2h,c
 27846  01476A  AEDF               	btfss	indf2,7,c
 27847  01476C  D002               	goto	l7926
 27848                           
 27849                           ;stkvar	_aexp @ sp[(-4)+2]
 27850  01476E  0EFE               	movlw	-2
 27851  014770  80E3               	bsf	plusw1,0,c
 27852  014772                     l7926:
 27853                           
 27854                           ;stkvar	_aexp @ sp[(-4)+2]
 27855  014772  0EFE               	movlw	-2
 27856  014774  50E3               	movf	plusw1,w,c
 27857  014776  B4D8               	btfsc	status,2,c
 27858  014778  D027               	goto	l7936
 27859                           
 27860                           ;stkvar	_aexp @ sp[(-4)+2]
 27861  01477A  0EFE               	movlw	-2
 27862  01477C  28E3               	incf	plusw1,w,c
 27863  01477E  A4D8               	btfss	status,2,c
 27864  014780  D018               	goto	l7932
 27865  014782  0E00               	movlw	0
 27866  014784  6E09               	movwf	(btemp+8)^0,c
 27867  014786  0E00               	movlw	0
 27868  014788  6E0A               	movwf	(btemp+9)^0,c
 27869  01478A  0E00               	movlw	0
 27870  01478C  6E0B               	movwf	(btemp+10)^0,c
 27871  01478E  0E00               	movlw	0
 27872  014790  6E0C               	movwf	(btemp+11)^0,c
 27873                           
 27874                           ;stkvar	_a @ sp[(-4)+-8]
 27875  014792  0EF4               	movlw	-12
 27876  014794  0060  F027  FFE3   	movff	btemp+8,plusw1
 27877  01479A  0EF5               	movlw	-11
 27878  01479C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27879  0147A2  0EF6               	movlw	-10
 27880  0147A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27881  0147AA  0EF7               	movlw	-9
 27882  0147AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 27883  0147B2                     l7932:
 27884                           
 27885                           ;stkvar	_a @ sp[(-4)+-8]
 27886  0147B2  0EF6               	movlw	-10
 27887  0147B4  8EE3               	bsf	plusw1,7,c
 27888                           
 27889                           ;stkvar	_a @ sp[(-4)+-8]
 27890  0147B6  0EF7               	movlw	247
 27891  0147B8  24E1               	addwf	fsr1l,w,c
 27892  0147BA  6ED9               	movwf	fsr2l,c
 27893  0147BC  0EFF               	movlw	255
 27894  0147BE  20E2               	addwfc	fsr1h,w,c
 27895  0147C0  6EDA               	movwf	fsr2h,c
 27896  0147C2  0E00               	movlw	0
 27897  0147C4  6EDF               	movwf	indf2,c
 27898  0147C6  D018               	goto	l7938
 27899  0147C8                     l7936:
 27900  0147C8  0E00               	movlw	0
 27901  0147CA  6E09               	movwf	(btemp+8)^0,c
 27902  0147CC  0E00               	movlw	0
 27903  0147CE  6E0A               	movwf	(btemp+9)^0,c
 27904  0147D0  0E00               	movlw	0
 27905  0147D2  6E0B               	movwf	(btemp+10)^0,c
 27906  0147D4  0E00               	movlw	0
 27907  0147D6  6E0C               	movwf	(btemp+11)^0,c
 27908                           
 27909                           ;stkvar	_a @ sp[(-4)+-8]
 27910  0147D8  0EF4               	movlw	-12
 27911  0147DA  0060  F027  FFE3   	movff	btemp+8,plusw1
 27912  0147E0  0EF5               	movlw	-11
 27913  0147E2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27914  0147E8  0EF6               	movlw	-10
 27915  0147EA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27916  0147F0  0EF7               	movlw	-9
 27917  0147F2  0060  F033  FFE3   	movff	btemp+11,plusw1
 27918  0147F8                     l7938:
 27919                           
 27920                           ;stkvar	_bexp @ sp[(-4)+1]
 27921                           ;stkvar	_aexp @ sp[(-4)+2]
 27922  0147F8  50E1               	movf	fsr1l,w,c
 27923  0147FA  0FFE               	addlw	-2
 27924  0147FC  6ED9               	movwf	fsr2l,c
 27925  0147FE  50E2               	movf	fsr1h,w,c
 27926  014800  6EDA               	movwf	fsr2h,c
 27927  014802  0EFF               	movlw	255
 27928  014804  22DA               	addwfc	fsr2h,f,c
 27929  014806  0EFD               	movlw	-3
 27930  014808  50E3               	movf	plusw1,w,c
 27931  01480A  5CDE               	subwf	postinc2,w,c
 27932  01480C  B0D8               	btfsc	status,0,c
 27933  01480E  D0A4               	goto	l7974
 27934                           
 27935                           ;stkvar	_signs @ sp[(-4)+3]
 27936  014810  0EFF               	movlw	-1
 27937  014812  ACE3               	btfss	plusw1,6,c
 27938  014814  D002               	goto	l7944
 27939                           
 27940                           ;stkvar	_signs @ sp[(-4)+3]
 27941  014816  0EFF               	movlw	-1
 27942  014818  7EE3               	btg	plusw1,7,c
 27943  01481A                     l7944:
 27944                           
 27945                           ;stkvar	_bexp @ sp[(-4)+1]
 27946                           ;stkvar	_grs @ sp[(-4)+0]
 27947  01481A  0EFD               	movlw	-3
 27948  01481C  006F FF8C  F001    	movff	plusw1,btemp
 27949  014822  0EFC               	movlw	-4
 27950  014824  0060  F007  FFE3   	movff	btemp,plusw1
 27951                           
 27952                           ;stkvar	_aexp @ sp[(-4)+2]
 27953                           ;stkvar	_bexp @ sp[(-4)+1]
 27954  01482A  0EFE               	movlw	-2
 27955  01482C  006F FF8C  F001    	movff	plusw1,btemp
 27956  014832  0EFD               	movlw	-3
 27957  014834  0060  F007  FFE3   	movff	btemp,plusw1
 27958                           
 27959                           ;stkvar	_grs @ sp[(-4)+0]
 27960                           ;stkvar	_aexp @ sp[(-4)+2]
 27961  01483A  0EFC               	movlw	-4
 27962  01483C  006F FF8C  F001    	movff	plusw1,btemp
 27963  014842  0EFE               	movlw	-2
 27964  014844  0060  F007  FFE3   	movff	btemp,plusw1
 27965                           
 27966                           ;stkvar	_b @ sp[(-4)+-4]
 27967                           ;stkvar	_grs @ sp[(-4)+0]
 27968  01484A  0EF8               	movlw	-8
 27969  01484C  006F FF8C  F001    	movff	plusw1,btemp
 27970  014852  0EFC               	movlw	-4
 27971  014854  0060  F007  FFE3   	movff	btemp,plusw1
 27972                           
 27973                           ;stkvar	_a @ sp[(-4)+-8]
 27974                           ;stkvar	_b @ sp[(-4)+-4]
 27975  01485A  0EF4               	movlw	-12
 27976  01485C  006F FF8C  F001    	movff	plusw1,btemp
 27977  014862  0EF8               	movlw	-8
 27978  014864  0060  F007  FFE3   	movff	btemp,plusw1
 27979                           
 27980                           ;stkvar	_grs @ sp[(-4)+0]
 27981                           ;stkvar	_a @ sp[(-4)+-8]
 27982  01486A  0EFC               	movlw	-4
 27983  01486C  006F FF8C  F001    	movff	plusw1,btemp
 27984  014872  0EF4               	movlw	-12
 27985  014874  0060  F007  FFE3   	movff	btemp,plusw1
 27986                           
 27987                           ;stkvar	_b @ sp[(-4)+-4]
 27988  01487A  0EF9               	movlw	249
 27989  01487C  24E1               	addwf	fsr1l,w,c
 27990  01487E  6ED9               	movwf	fsr2l,c
 27991  014880  0EFF               	movlw	255
 27992  014882  20E2               	addwfc	fsr1h,w,c
 27993  014884  6EDA               	movwf	fsr2h,c
 27994  014886  50DF               	movf	indf2,w,c
 27995  014888  6E0C               	movwf	(btemp+11)^0,c
 27996                           
 27997                           ;stkvar	_grs @ sp[(-4)+0]
 27998  01488A  0EFC               	movlw	-4
 27999  01488C  0060  F033  FFE3   	movff	btemp+11,plusw1
 28000                           
 28001                           ;stkvar	_a @ sp[(-4)+-8]
 28002  014892  0EF5               	movlw	245
 28003  014894  24E1               	addwf	fsr1l,w,c
 28004  014896  6ED9               	movwf	fsr2l,c
 28005  014898  0EFF               	movlw	255
 28006  01489A  20E2               	addwfc	fsr1h,w,c
 28007  01489C  6EDA               	movwf	fsr2h,c
 28008                           
 28009                           ;stkvar	_b @ sp[(-4)+-4]
 28010  01489E  0EF9               	movlw	249
 28011  0148A0  24E1               	addwf	fsr1l,w,c
 28012  0148A2  6EE9               	movwf	fsr0l,c
 28013  0148A4  0EFF               	movlw	255
 28014  0148A6  20E2               	addwfc	fsr1h,w,c
 28015  0148A8  6EEA               	movwf	fsr0h,c
 28016  0148AA  006F FF7F FFEF     	movff	indf2,indf0
 28017                           
 28018                           ;stkvar	_grs @ sp[(-4)+0]
 28019                           ;stkvar	_a @ sp[(-4)+-8]
 28020  0148B0  0EF5               	movlw	245
 28021  0148B2  24E1               	addwf	fsr1l,w,c
 28022  0148B4  6ED9               	movwf	fsr2l,c
 28023  0148B6  0EFF               	movlw	255
 28024  0148B8  20E2               	addwfc	fsr1h,w,c
 28025  0148BA  6EDA               	movwf	fsr2h,c
 28026  0148BC  0EFC               	movlw	-4
 28027  0148BE  006F FF8F FFDF     	movff	plusw1,indf2
 28028                           
 28029                           ;stkvar	_b @ sp[(-4)+-4]
 28030  0148C4  0EFA               	movlw	250
 28031  0148C6  24E1               	addwf	fsr1l,w,c
 28032  0148C8  6ED9               	movwf	fsr2l,c
 28033  0148CA  0EFF               	movlw	255
 28034  0148CC  20E2               	addwfc	fsr1h,w,c
 28035  0148CE  6EDA               	movwf	fsr2h,c
 28036  0148D0  50DF               	movf	indf2,w,c
 28037  0148D2  6E0C               	movwf	(btemp+11)^0,c
 28038                           
 28039                           ;stkvar	_grs @ sp[(-4)+0]
 28040  0148D4  0EFC               	movlw	-4
 28041  0148D6  0060  F033  FFE3   	movff	btemp+11,plusw1
 28042                           
 28043                           ;stkvar	_a @ sp[(-4)+-8]
 28044  0148DC  0EF6               	movlw	246
 28045  0148DE  24E1               	addwf	fsr1l,w,c
 28046  0148E0  6ED9               	movwf	fsr2l,c
 28047  0148E2  0EFF               	movlw	255
 28048  0148E4  20E2               	addwfc	fsr1h,w,c
 28049  0148E6  6EDA               	movwf	fsr2h,c
 28050                           
 28051                           ;stkvar	_b @ sp[(-4)+-4]
 28052  0148E8  0EFA               	movlw	250
 28053  0148EA  24E1               	addwf	fsr1l,w,c
 28054  0148EC  6EE9               	movwf	fsr0l,c
 28055  0148EE  0EFF               	movlw	255
 28056  0148F0  20E2               	addwfc	fsr1h,w,c
 28057  0148F2  6EEA               	movwf	fsr0h,c
 28058  0148F4  006F FF7F FFEF     	movff	indf2,indf0
 28059                           
 28060                           ;stkvar	_grs @ sp[(-4)+0]
 28061                           ;stkvar	_a @ sp[(-4)+-8]
 28062  0148FA  0EF6               	movlw	246
 28063  0148FC  24E1               	addwf	fsr1l,w,c
 28064  0148FE  6ED9               	movwf	fsr2l,c
 28065  014900  0EFF               	movlw	255
 28066  014902  20E2               	addwfc	fsr1h,w,c
 28067  014904  6EDA               	movwf	fsr2h,c
 28068  014906  0EFC               	movlw	-4
 28069  014908  006F FF8F FFDF     	movff	plusw1,indf2
 28070                           
 28071                           ;stkvar	_b @ sp[(-4)+-4]
 28072  01490E  0EFB               	movlw	251
 28073  014910  24E1               	addwf	fsr1l,w,c
 28074  014912  6ED9               	movwf	fsr2l,c
 28075  014914  0EFF               	movlw	255
 28076  014916  20E2               	addwfc	fsr1h,w,c
 28077  014918  6EDA               	movwf	fsr2h,c
 28078  01491A  50DF               	movf	indf2,w,c
 28079  01491C  6E0C               	movwf	(btemp+11)^0,c
 28080                           
 28081                           ;stkvar	_grs @ sp[(-4)+0]
 28082  01491E  0EFC               	movlw	-4
 28083  014920  0060  F033  FFE3   	movff	btemp+11,plusw1
 28084                           
 28085                           ;stkvar	_a @ sp[(-4)+-8]
 28086  014926  0EF7               	movlw	247
 28087  014928  24E1               	addwf	fsr1l,w,c
 28088  01492A  6ED9               	movwf	fsr2l,c
 28089  01492C  0EFF               	movlw	255
 28090  01492E  20E2               	addwfc	fsr1h,w,c
 28091  014930  6EDA               	movwf	fsr2h,c
 28092                           
 28093                           ;stkvar	_b @ sp[(-4)+-4]
 28094  014932  0EFB               	movlw	251
 28095  014934  24E1               	addwf	fsr1l,w,c
 28096  014936  6EE9               	movwf	fsr0l,c
 28097  014938  0EFF               	movlw	255
 28098  01493A  20E2               	addwfc	fsr1h,w,c
 28099  01493C  6EEA               	movwf	fsr0h,c
 28100  01493E  006F FF7F FFEF     	movff	indf2,indf0
 28101                           
 28102                           ;stkvar	_grs @ sp[(-4)+0]
 28103                           ;stkvar	_a @ sp[(-4)+-8]
 28104  014944  0EF7               	movlw	247
 28105  014946  24E1               	addwf	fsr1l,w,c
 28106  014948  6ED9               	movwf	fsr2l,c
 28107  01494A  0EFF               	movlw	255
 28108  01494C  20E2               	addwfc	fsr1h,w,c
 28109  01494E  6EDA               	movwf	fsr2h,c
 28110  014950  0EFC               	movlw	-4
 28111  014952  006F FF8F FFDF     	movff	plusw1,indf2
 28112  014958                     l7974:
 28113                           
 28114                           ;stkvar	_grs @ sp[(-4)+0]
 28115  014958  0EFC               	movlw	-4
 28116  01495A  6AE3               	clrf	plusw1,c
 28117                           
 28118                           ;stkvar	_aexp @ sp[(-4)+2]
 28119  01495C  0EFE               	movlw	-2
 28120  01495E  50E3               	movf	plusw1,w,c
 28121  014960  6E0B               	movwf	(btemp+10)^0,c
 28122  014962  6A0C               	clrf	(btemp+11)^0,c
 28123                           
 28124                           ;stkvar	_bexp @ sp[(-4)+1]
 28125  014964  0EFD               	movlw	-3
 28126  014966  50E3               	movf	plusw1,w,c
 28127  014968  5E0B               	subwf	(btemp+10)^0,f,c
 28128  01496A  0E00               	movlw	0
 28129  01496C  5A0C               	subwfb	(btemp+11)^0,f,c
 28130  01496E  BE0C               	btfsc	(btemp+11)^0,7,c
 28131  014970  D062               	goto	l7998
 28132  014972  500C               	movf	(btemp+11)^0,w,c
 28133  014974  E104               	bnz	u5620
 28134  014976  0E1A               	movlw	26
 28135  014978  5C0B               	subwf	(btemp+10)^0,w,c
 28136  01497A  A0D8               	btfss	status,0,c
 28137  01497C  D05C               	goto	l7998
 28138  01497E                     u5620:
 28139                           
 28140                           ;stkvar	_b @ sp[(-4)+-4]
 28141  01497E  0EF8               	movlw	-8
 28142  014980  50E3               	movf	plusw1,w,c
 28143  014982  E10A               	bnz	u5631
 28144  014984  0EF9               	movlw	-7
 28145  014986  50E3               	movf	plusw1,w,c
 28146  014988  E107               	bnz	u5631
 28147  01498A  0EFA               	movlw	-6
 28148  01498C  50E3               	movf	plusw1,w,c
 28149  01498E  E104               	bnz	u5631
 28150  014990  0EFB               	movlw	-5
 28151  014992  50E3               	movf	plusw1,w,c
 28152  014994  B4D8               	btfsc	status,2,c
 28153  014996  D003               	goto	u5630
 28154  014998                     u5631:
 28155  014998  6A0C               	clrf	(btemp+11)^0,c
 28156  01499A  2A0C               	incf	(btemp+11)^0,f,c
 28157  01499C  D001               	goto	u5648
 28158  01499E                     u5630:
 28159  01499E  6A0C               	clrf	(btemp+11)^0,c
 28160  0149A0                     u5648:
 28161                           
 28162                           ;stkvar	_grs @ sp[(-4)+0]
 28163  0149A0  0EFC               	movlw	-4
 28164  0149A2  0060  F033  FFE3   	movff	btemp+11,plusw1
 28165                           
 28166                           ;stkvar	_b @ sp[(-4)+-4]
 28167  0149A8  0EF8               	movlw	-8
 28168  0149AA  6AE3               	clrf	plusw1,c
 28169  0149AC  0EF9               	movlw	-7
 28170  0149AE  6AE3               	clrf	plusw1,c
 28171  0149B0  0EFA               	movlw	-6
 28172  0149B2  6AE3               	clrf	plusw1,c
 28173  0149B4  0EFB               	movlw	-5
 28174  0149B6  6AE3               	clrf	plusw1,c
 28175                           
 28176                           ;stkvar	_aexp @ sp[(-4)+2]
 28177                           ;stkvar	_bexp @ sp[(-4)+1]
 28178  0149B8  0EFE               	movlw	-2
 28179  0149BA  006F FF8C  F001    	movff	plusw1,btemp
 28180  0149C0  0EFD               	movlw	-3
 28181  0149C2  0060  F007  FFE3   	movff	btemp,plusw1
 28182  0149C8  D042               	goto	u5680
 28183  0149CA                     l7984:
 28184                           
 28185                           ;stkvar	_grs @ sp[(-4)+0]
 28186  0149CA  0EFC               	movlw	-4
 28187  0149CC  A0E3               	btfss	plusw1,0,c
 28188  0149CE  D00D               	goto	l7988
 28189                           
 28190                           ;stkvar	_grs @ sp[(-4)+0]
 28191  0149D0  0EFC               	movlw	-4
 28192  0149D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 28193  0149D8  90D8               	bcf	status,0,c
 28194  0149DA  320C               	rrcf	(btemp+11)^0,f,c
 28195  0149DC  0E01               	movlw	1
 28196  0149DE  120C               	iorwf	(btemp+11)^0,f,c
 28197                           
 28198                           ;stkvar	_grs @ sp[(-4)+0]
 28199  0149E0  0EFC               	movlw	-4
 28200  0149E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 28201  0149E8  D009               	goto	l7990
 28202  0149EA                     l7988:
 28203                           
 28204                           ;stkvar	_grs @ sp[(-4)+0]
 28205  0149EA  50E1               	movf	fsr1l,w,c
 28206  0149EC  0FFC               	addlw	-4
 28207  0149EE  6ED9               	movwf	fsr2l,c
 28208  0149F0  50E2               	movf	fsr1h,w,c
 28209  0149F2  6EDA               	movwf	fsr2h,c
 28210  0149F4  0EFF               	movlw	255
 28211  0149F6  22DA               	addwfc	fsr2h,f,c
 28212  0149F8  90D8               	bcf	status,0,c
 28213  0149FA  32DF               	rrcf	indf2,f,c
 28214  0149FC                     l7990:
 28215                           
 28216                           ;stkvar	_b @ sp[(-4)+-4]
 28217  0149FC  0EF8               	movlw	-8
 28218  0149FE  A0E3               	btfss	plusw1,0,c
 28219  014A00  D002               	goto	l7994
 28220                           
 28221                           ;stkvar	_grs @ sp[(-4)+0]
 28222  014A02  0EFC               	movlw	-4
 28223  014A04  8EE3               	bsf	plusw1,7,c
 28224  014A06                     l7994:
 28225  014A06  0E01               	movlw	1
 28226  014A08  6E0C               	movwf	(btemp+11)^0,c
 28227                           
 28228                           ;stkvar	_b @ sp[(-4)+-4]
 28229  014A0A  50E1               	movf	fsr1l,w,c
 28230  014A0C  0FF8               	addlw	-8
 28231  014A0E  6ED9               	movwf	fsr2l,c
 28232  014A10  50E2               	movf	fsr1h,w,c
 28233  014A12  6EDA               	movwf	fsr2h,c
 28234  014A14  0EFF               	movlw	255
 28235  014A16  22DA               	addwfc	fsr2h,f,c
 28236  014A18  280C               	incf	(btemp+11)^0,w,c
 28237  014A1A  52DE               	movf	postinc2,f,c
 28238  014A1C  D008               	goto	u5670
 28239  014A1E                     u5675:
 28240  014A1E  52DE               	movf	postinc2,f,c
 28241  014A20  90D8               	bcf	status,0,c
 28242  014A22  BEDC               	btfsc	preinc2,7,c
 28243  014A24  80D8               	bsf	status,0,c
 28244  014A26  32DD               	rrcf	postdec2,f,c
 28245  014A28  32DD               	rrcf	postdec2,f,c
 28246  014A2A  32DD               	rrcf	postdec2,f,c
 28247  014A2C  32DE               	rrcf	postinc2,f,c
 28248  014A2E                     u5670:
 28249  014A2E  2EE8               	decfsz	wreg,f,c
 28250  014A30  D7F6               	goto	u5675
 28251                           
 28252                           ;stkvar	_bexp @ sp[(-4)+1]
 28253  014A32  0EFD               	movlw	-3
 28254  014A34  2AE3               	incf	plusw1,f,c
 28255  014A36                     l7998:
 28256                           
 28257                           ;stkvar	_aexp @ sp[(-4)+2]
 28258                           ;stkvar	_bexp @ sp[(-4)+1]
 28259  014A36  50E1               	movf	fsr1l,w,c
 28260  014A38  0FFD               	addlw	-3
 28261  014A3A  6ED9               	movwf	fsr2l,c
 28262  014A3C  50E2               	movf	fsr1h,w,c
 28263  014A3E  6EDA               	movwf	fsr2h,c
 28264  014A40  0EFF               	movlw	255
 28265  014A42  22DA               	addwfc	fsr2h,f,c
 28266  014A44  0EFE               	movlw	-2
 28267  014A46  50E3               	movf	plusw1,w,c
 28268  014A48  5CDE               	subwf	postinc2,w,c
 28269  014A4A  A0D8               	btfss	status,0,c
 28270  014A4C  D7BE               	goto	l7984
 28271  014A4E                     u5680:
 28272                           
 28273                           ;stkvar	_signs @ sp[(-4)+3]
 28274  014A4E  0EFF               	movlw	-1
 28275  014A50  BCE3               	btfsc	plusw1,6,c
 28276  014A52  D066               	goto	l8026
 28277                           
 28278                           ;stkvar	_bexp @ sp[(-4)+1]
 28279  014A54  0EFD               	movlw	-3
 28280  014A56  50E3               	movf	plusw1,w,c
 28281  014A58  B4D8               	btfsc	status,2,c
 28282  014A5A  D0F2               	goto	u5780
 28283                           
 28284                           ;stkvar	_a @ sp[(-4)+-8]
 28285                           ;stkvar	_b @ sp[(-4)+-4]
 28286  014A5C  0EF8               	movlw	-8
 28287  014A5E  50E3               	movf	plusw1,w,c
 28288  014A60  6E01               	movwf	btemp^0,c
 28289  014A62  0EF4               	movlw	-12
 28290  014A64  50E3               	movf	plusw1,w,c
 28291  014A66  2601               	addwf	btemp^0,f,c
 28292  014A68  0EF8               	movlw	-8
 28293  014A6A  0060  F007  FFE3   	movff	btemp,plusw1
 28294  014A70  0EF9               	movlw	-7
 28295  014A72  50E3               	movf	plusw1,w,c
 28296  014A74  6E01               	movwf	btemp^0,c
 28297  014A76  0EF5               	movlw	-11
 28298  014A78  50E3               	movf	plusw1,w,c
 28299  014A7A  2201               	addwfc	btemp^0,f,c
 28300  014A7C  0EF9               	movlw	-7
 28301  014A7E  0060  F007  FFE3   	movff	btemp,plusw1
 28302  014A84  0EFA               	movlw	-6
 28303  014A86  50E3               	movf	plusw1,w,c
 28304  014A88  6E01               	movwf	btemp^0,c
 28305  014A8A  0EF6               	movlw	-10
 28306  014A8C  50E3               	movf	plusw1,w,c
 28307  014A8E  2201               	addwfc	btemp^0,f,c
 28308  014A90  0EFA               	movlw	-6
 28309  014A92  0060  F007  FFE3   	movff	btemp,plusw1
 28310  014A98  0EFB               	movlw	-5
 28311  014A9A  50E3               	movf	plusw1,w,c
 28312  014A9C  6E01               	movwf	btemp^0,c
 28313  014A9E  0EF7               	movlw	-9
 28314  014AA0  50E3               	movf	plusw1,w,c
 28315  014AA2  2201               	addwfc	btemp^0,f,c
 28316  014AA4  0EFB               	movlw	-5
 28317  014AA6  0060  F007  FFE3   	movff	btemp,plusw1
 28318                           
 28319                           ;stkvar	_b @ sp[(-4)+-4]
 28320  014AAC  0EFB               	movlw	-5
 28321  014AAE  A0E3               	btfss	plusw1,0,c
 28322  014AB0  D101               	goto	u5820
 28323                           
 28324                           ;stkvar	_grs @ sp[(-4)+0]
 28325  014AB2  0EFC               	movlw	-4
 28326  014AB4  A0E3               	btfss	plusw1,0,c
 28327  014AB6  D00D               	goto	l8016
 28328                           
 28329                           ;stkvar	_grs @ sp[(-4)+0]
 28330  014AB8  0EFC               	movlw	-4
 28331  014ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 28332  014AC0  90D8               	bcf	status,0,c
 28333  014AC2  320C               	rrcf	(btemp+11)^0,f,c
 28334  014AC4  0E01               	movlw	1
 28335  014AC6  120C               	iorwf	(btemp+11)^0,f,c
 28336                           
 28337                           ;stkvar	_grs @ sp[(-4)+0]
 28338  014AC8  0EFC               	movlw	-4
 28339  014ACA  0060  F033  FFE3   	movff	btemp+11,plusw1
 28340  014AD0  D009               	goto	l8018
 28341  014AD2                     l8016:
 28342                           
 28343                           ;stkvar	_grs @ sp[(-4)+0]
 28344  014AD2  50E1               	movf	fsr1l,w,c
 28345  014AD4  0FFC               	addlw	-4
 28346  014AD6  6ED9               	movwf	fsr2l,c
 28347  014AD8  50E2               	movf	fsr1h,w,c
 28348  014ADA  6EDA               	movwf	fsr2h,c
 28349  014ADC  0EFF               	movlw	255
 28350  014ADE  22DA               	addwfc	fsr2h,f,c
 28351  014AE0  90D8               	bcf	status,0,c
 28352  014AE2  32DF               	rrcf	indf2,f,c
 28353  014AE4                     l8018:
 28354                           
 28355                           ;stkvar	_b @ sp[(-4)+-4]
 28356  014AE4  0EF8               	movlw	-8
 28357  014AE6  A0E3               	btfss	plusw1,0,c
 28358  014AE8  D002               	goto	l8022
 28359                           
 28360                           ;stkvar	_grs @ sp[(-4)+0]
 28361  014AEA  0EFC               	movlw	-4
 28362  014AEC  8EE3               	bsf	plusw1,7,c
 28363  014AEE                     l8022:
 28364  014AEE  0E01               	movlw	1
 28365  014AF0  6E0C               	movwf	(btemp+11)^0,c
 28366                           
 28367                           ;stkvar	_b @ sp[(-4)+-4]
 28368  014AF2  50E1               	movf	fsr1l,w,c
 28369  014AF4  0FF8               	addlw	-8
 28370  014AF6  6ED9               	movwf	fsr2l,c
 28371  014AF8  50E2               	movf	fsr1h,w,c
 28372  014AFA  6EDA               	movwf	fsr2h,c
 28373  014AFC  0EFF               	movlw	255
 28374  014AFE  22DA               	addwfc	fsr2h,f,c
 28375  014B00  280C               	incf	(btemp+11)^0,w,c
 28376  014B02  52DE               	movf	postinc2,f,c
 28377  014B04  D008               	goto	u5740
 28378  014B06                     u5745:
 28379  014B06  52DE               	movf	postinc2,f,c
 28380  014B08  90D8               	bcf	status,0,c
 28381  014B0A  BEDC               	btfsc	preinc2,7,c
 28382  014B0C  80D8               	bsf	status,0,c
 28383  014B0E  32DD               	rrcf	postdec2,f,c
 28384  014B10  32DD               	rrcf	postdec2,f,c
 28385  014B12  32DD               	rrcf	postdec2,f,c
 28386  014B14  32DE               	rrcf	postinc2,f,c
 28387  014B16                     u5740:
 28388  014B16  2EE8               	decfsz	wreg,f,c
 28389  014B18  D7F6               	goto	u5745
 28390                           
 28391                           ;stkvar	_bexp @ sp[(-4)+1]
 28392  014B1A  0EFD               	movlw	-3
 28393  014B1C  2AE3               	incf	plusw1,f,c
 28394  014B1E  D0CA               	goto	u5820
 28395  014B20                     l8026:
 28396                           
 28397                           ;stkvar	_a @ sp[(-4)+-8]
 28398                           ;stkvar	_b @ sp[(-4)+-4]
 28399  014B20  50E1               	movf	fsr1l,w,c
 28400  014B22  0FF8               	addlw	-8
 28401  014B24  6ED9               	movwf	fsr2l,c
 28402  014B26  50E2               	movf	fsr1h,w,c
 28403  014B28  6EDA               	movwf	fsr2h,c
 28404  014B2A  0EFF               	movlw	255
 28405  014B2C  22DA               	addwfc	fsr2h,f,c
 28406  014B2E  0EF4               	movlw	-12
 28407  014B30  50E3               	movf	plusw1,w,c
 28408  014B32  5CDE               	subwf	postinc2,w,c
 28409  014B34  0EF5               	movlw	-11
 28410  014B36  50E3               	movf	plusw1,w,c
 28411  014B38  58DE               	subwfb	postinc2,w,c
 28412  014B3A  0EF6               	movlw	-10
 28413  014B3C  50E3               	movf	plusw1,w,c
 28414  014B3E  58DE               	subwfb	postinc2,w,c
 28415  014B40  50DE               	movf	postinc2,w,c
 28416  014B42  0A80               	xorlw	128
 28417  014B44  6E01               	movwf	btemp^0,c
 28418  014B46  0EF7               	movlw	-9
 28419  014B48  50E3               	movf	plusw1,w,c
 28420  014B4A  0A80               	xorlw	128
 28421  014B4C  5801               	subwfb	btemp^0,w,c
 28422  014B4E  B0D8               	btfsc	status,0,c
 28423  014B50  D053               	goto	l8038
 28424                           
 28425                           ;stkvar	_b @ sp[(-4)+-4]
 28426                           ;stkvar	_a @ sp[(-4)+-8]
 28427  014B52  0EF4               	movlw	-12
 28428  014B54  006F FF8C  F009    	movff	plusw1,btemp+8
 28429  014B5A  0EF5               	movlw	-11
 28430  014B5C  006F FF8C  F00A    	movff	plusw1,btemp+9
 28431  014B62  0EF6               	movlw	-10
 28432  014B64  006F FF8C  F00B    	movff	plusw1,btemp+10
 28433  014B6A  0EF7               	movlw	-9
 28434  014B6C  006F FF8C  F00C    	movff	plusw1,btemp+11
 28435  014B72  0EF8               	movlw	-8
 28436  014B74  50E3               	movf	plusw1,w,c
 28437  014B76  5E09               	subwf	(btemp+8)^0,f,c
 28438  014B78  0EF9               	movlw	-7
 28439  014B7A  50E3               	movf	plusw1,w,c
 28440  014B7C  5A0A               	subwfb	(btemp+9)^0,f,c
 28441  014B7E  0EFA               	movlw	-6
 28442  014B80  50E3               	movf	plusw1,w,c
 28443  014B82  5A0B               	subwfb	(btemp+10)^0,f,c
 28444  014B84  0EFB               	movlw	-5
 28445  014B86  50E3               	movf	plusw1,w,c
 28446  014B88  5A0C               	subwfb	(btemp+11)^0,f,c
 28447  014B8A  0EFF               	movlw	255
 28448  014B8C  2409               	addwf	(btemp+8)^0,w,c
 28449  014B8E  6E05               	movwf	(btemp+4)^0,c
 28450  014B90  0EFF               	movlw	255
 28451  014B92  200A               	addwfc	(btemp+9)^0,w,c
 28452  014B94  6E06               	movwf	(btemp+5)^0,c
 28453  014B96  0EFF               	movlw	255
 28454  014B98  200B               	addwfc	(btemp+10)^0,w,c
 28455  014B9A  6E07               	movwf	(btemp+6)^0,c
 28456  014B9C  0EFF               	movlw	255
 28457  014B9E  200C               	addwfc	(btemp+11)^0,w,c
 28458  014BA0  6E08               	movwf	(btemp+7)^0,c
 28459                           
 28460                           ;stkvar	_b @ sp[(-4)+-4]
 28461  014BA2  0EF8               	movlw	-8
 28462  014BA4  0060  F017  FFE3   	movff	btemp+4,plusw1
 28463  014BAA  0EF9               	movlw	-7
 28464  014BAC  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28465  014BB2  0EFA               	movlw	-6
 28466  014BB4  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28467  014BBA  0EFB               	movlw	-5
 28468  014BBC  0060  F023  FFE3   	movff	btemp+7,plusw1
 28469                           
 28470                           ;stkvar	_signs @ sp[(-4)+3]
 28471  014BC2  0EFF               	movlw	-1
 28472  014BC4  7EE3               	btg	plusw1,7,c
 28473                           
 28474                           ;stkvar	_grs @ sp[(-4)+0]
 28475  014BC6  0EFC               	movlw	-4
 28476  014BC8  50E3               	movf	plusw1,w,c
 28477  014BCA  0800               	sublw	0
 28478  014BCC  6E0C               	movwf	(btemp+11)^0,c
 28479                           
 28480                           ;stkvar	_grs @ sp[(-4)+0]
 28481  014BCE  0EFC               	movlw	-4
 28482  014BD0  0060  F033  FFE3   	movff	btemp+11,plusw1
 28483                           
 28484                           ;stkvar	_grs @ sp[(-4)+0]
 28485  014BD6  0EFC               	movlw	-4
 28486  014BD8  50E3               	movf	plusw1,w,c
 28487  014BDA  A4D8               	btfss	status,2,c
 28488  014BDC  D020               	goto	l8040
 28489                           
 28490                           ;stkvar	_b @ sp[(-4)+-4]
 28491  014BDE  50E1               	movf	fsr1l,w,c
 28492  014BE0  0FF8               	addlw	-8
 28493  014BE2  6ED9               	movwf	fsr2l,c
 28494  014BE4  50E2               	movf	fsr1h,w,c
 28495  014BE6  6EDA               	movwf	fsr2h,c
 28496  014BE8  0EFF               	movlw	255
 28497  014BEA  22DA               	addwfc	fsr2h,f,c
 28498  014BEC  2ADE               	incf	postinc2,f,c
 28499  014BEE  0E00               	movlw	0
 28500  014BF0  22DE               	addwfc	postinc2,f,c
 28501  014BF2  22DE               	addwfc	postinc2,f,c
 28502  014BF4  22DE               	addwfc	postinc2,f,c
 28503  014BF6  D013               	goto	l8040
 28504  014BF8                     l8038:
 28505                           
 28506                           ;stkvar	_a @ sp[(-4)+-8]
 28507                           ;stkvar	_b @ sp[(-4)+-4]
 28508  014BF8  50E1               	movf	fsr1l,w,c
 28509  014BFA  0FF8               	addlw	-8
 28510  014BFC  6ED9               	movwf	fsr2l,c
 28511  014BFE  50E2               	movf	fsr1h,w,c
 28512  014C00  6EDA               	movwf	fsr2h,c
 28513  014C02  0EFF               	movlw	255
 28514  014C04  22DA               	addwfc	fsr2h,f,c
 28515  014C06  0EF4               	movlw	-12
 28516  014C08  50E3               	movf	plusw1,w,c
 28517  014C0A  5EDE               	subwf	postinc2,f,c
 28518  014C0C  0EF5               	movlw	-11
 28519  014C0E  50E3               	movf	plusw1,w,c
 28520  014C10  5ADE               	subwfb	postinc2,f,c
 28521  014C12  0EF6               	movlw	-10
 28522  014C14  50E3               	movf	plusw1,w,c
 28523  014C16  5ADE               	subwfb	postinc2,f,c
 28524  014C18  0EF7               	movlw	-9
 28525  014C1A  50E3               	movf	plusw1,w,c
 28526  014C1C  5ADE               	subwfb	postinc2,f,c
 28527  014C1E                     l8040:
 28528                           
 28529                           ;stkvar	_b @ sp[(-4)+-4]
 28530  014C1E  0EF8               	movlw	-8
 28531  014C20  50E3               	movf	plusw1,w,c
 28532  014C22  E145               	bnz	l8062
 28533  014C24  0EF9               	movlw	-7
 28534  014C26  50E3               	movf	plusw1,w,c
 28535  014C28  E142               	bnz	l8062
 28536  014C2A  0EFA               	movlw	-6
 28537  014C2C  50E3               	movf	plusw1,w,c
 28538  014C2E  E13F               	bnz	l8062
 28539  014C30  0EFB               	movlw	-5
 28540  014C32  50E3               	movf	plusw1,w,c
 28541  014C34  A4D8               	btfss	status,2,c
 28542  014C36  D03B               	goto	l8062
 28543                           
 28544                           ;stkvar	_grs @ sp[(-4)+0]
 28545  014C38  0EFC               	movlw	-4
 28546  014C3A  50E3               	movf	plusw1,w,c
 28547  014C3C  A4D8               	btfss	status,2,c
 28548  014C3E  D037               	goto	l8062
 28549  014C40                     u5780:
 28550  014C40  0E00               	movlw	0
 28551  014C42  6E01               	movwf	btemp^0,c
 28552  014C44  0E00               	movlw	0
 28553  014C46  6E02               	movwf	(btemp+1)^0,c
 28554  014C48  0E00               	movlw	0
 28555  014C4A  6E03               	movwf	(btemp+2)^0,c
 28556  014C4C  0E00               	movlw	0
 28557  014C4E  6E04               	movwf	(btemp+3)^0,c
 28558  014C50  D0C6               	goto	l3018
 28559  014C52                     l8048:
 28560                           
 28561                           ;stkvar	_b @ sp[(-4)+-4]
 28562  014C52  90D8               	bcf	status,0,c
 28563  014C54  0EF8               	movlw	-8
 28564  014C56  36E3               	rlcf	plusw1,f,c
 28565  014C58  0EF9               	movlw	-7
 28566  014C5A  36E3               	rlcf	plusw1,f,c
 28567  014C5C  0EFA               	movlw	-6
 28568  014C5E  36E3               	rlcf	plusw1,f,c
 28569  014C60  0EFB               	movlw	-5
 28570  014C62  36E3               	rlcf	plusw1,f,c
 28571                           
 28572                           ;stkvar	_grs @ sp[(-4)+0]
 28573  014C64  0EFC               	movlw	-4
 28574  014C66  AEE3               	btfss	plusw1,7,c
 28575  014C68  D002               	goto	l3030
 28576                           
 28577                           ;stkvar	_b @ sp[(-4)+-4]
 28578  014C6A  0EF8               	movlw	-8
 28579  014C6C  80E3               	bsf	plusw1,0,c
 28580  014C6E                     l3030:
 28581                           
 28582                           ;stkvar	_grs @ sp[(-4)+0]
 28583  014C6E  0EFC               	movlw	-4
 28584  014C70  A0E3               	btfss	plusw1,0,c
 28585  014C72  D00E               	goto	l8056
 28586                           
 28587                           ;stkvar	_grs @ sp[(-4)+0]
 28588  014C74  0EFC               	movlw	-4
 28589  014C76  006F FF8C  F00C    	movff	plusw1,btemp+11
 28590  014C7C  90D8               	bcf	status,0,c
 28591  014C7E  340C               	rlcf	(btemp+11)^0,w,c
 28592  014C80  6E0B               	movwf	(btemp+10)^0,c
 28593  014C82  0E01               	movlw	1
 28594  014C84  120B               	iorwf	(btemp+10)^0,f,c
 28595                           
 28596                           ;stkvar	_grs @ sp[(-4)+0]
 28597  014C86  0EFC               	movlw	-4
 28598  014C88  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28599  014C8E  D009               	goto	l8058
 28600  014C90                     l8056:
 28601                           
 28602                           ;stkvar	_grs @ sp[(-4)+0]
 28603  014C90  50E1               	movf	fsr1l,w,c
 28604  014C92  0FFC               	addlw	-4
 28605  014C94  6ED9               	movwf	fsr2l,c
 28606  014C96  50E2               	movf	fsr1h,w,c
 28607  014C98  6EDA               	movwf	fsr2h,c
 28608  014C9A  0EFF               	movlw	255
 28609  014C9C  22DA               	addwfc	fsr2h,f,c
 28610  014C9E  90D8               	bcf	status,0,c
 28611  014CA0  36DF               	rlcf	indf2,f,c
 28612  014CA2                     l8058:
 28613                           
 28614                           ;stkvar	_bexp @ sp[(-4)+1]
 28615  014CA2  0EFD               	movlw	-3
 28616  014CA4  50E3               	movf	plusw1,w,c
 28617  014CA6  B4D8               	btfsc	status,2,c
 28618  014CA8  D002               	goto	l8062
 28619                           
 28620                           ;stkvar	_bexp @ sp[(-4)+1]
 28621  014CAA  0EFD               	movlw	-3
 28622  014CAC  06E3               	decf	plusw1,f,c
 28623  014CAE                     l8062:
 28624                           
 28625                           ;stkvar	_b @ sp[(-4)+-4]
 28626  014CAE  0EFA               	movlw	-6
 28627  014CB0  AEE3               	btfss	plusw1,7,c
 28628  014CB2  D7CF               	goto	l8048
 28629  014CB4                     u5820:
 28630                           
 28631                           ;stkvar	_aexp @ sp[(-4)+2]
 28632  014CB4  0EFE               	movlw	-2
 28633  014CB6  6AE3               	clrf	plusw1,c
 28634                           
 28635                           ;stkvar	_grs @ sp[(-4)+0]
 28636  014CB8  0EFC               	movlw	-4
 28637  014CBA  AEE3               	btfss	plusw1,7,c
 28638  014CBC  D00F               	goto	l8076
 28639                           
 28640                           ;stkvar	_grs @ sp[(-4)+0]
 28641  014CBE  0EFC               	movlw	-4
 28642  014CC0  006F FF8C  F00C    	movff	plusw1,btemp+11
 28643  014CC6  0E7F               	movlw	127
 28644  014CC8  160C               	andwf	(btemp+11)^0,f,c
 28645  014CCA  B4D8               	btfsc	status,2,c
 28646  014CCC  D004               	goto	l8072
 28647  014CCE                     u5840:
 28648                           
 28649                           ;stkvar	_aexp @ sp[(-4)+2]
 28650  014CCE  0EFE               	movlw	-2
 28651  014CD0  6AE3               	clrf	plusw1,c
 28652  014CD2  2AE3               	incf	plusw1,f,c
 28653  014CD4  D003               	goto	l8076
 28654  014CD6                     l8072:
 28655                           
 28656                           ;stkvar	_b @ sp[(-4)+-4]
 28657  014CD6  0EF8               	movlw	-8
 28658  014CD8  B0E3               	btfsc	plusw1,0,c
 28659  014CDA  D7F9               	goto	u5840
 28660  014CDC                     l8076:
 28661                           
 28662                           ;stkvar	_aexp @ sp[(-4)+2]
 28663  014CDC  0EFE               	movlw	-2
 28664  014CDE  50E3               	movf	plusw1,w,c
 28665  014CE0  B4D8               	btfsc	status,2,c
 28666  014CE2  D02B               	goto	l8088
 28667                           
 28668                           ;stkvar	_b @ sp[(-4)+-4]
 28669  014CE4  50E1               	movf	fsr1l,w,c
 28670  014CE6  0FF8               	addlw	-8
 28671  014CE8  6ED9               	movwf	fsr2l,c
 28672  014CEA  50E2               	movf	fsr1h,w,c
 28673  014CEC  6EDA               	movwf	fsr2h,c
 28674  014CEE  0EFF               	movlw	255
 28675  014CF0  22DA               	addwfc	fsr2h,f,c
 28676  014CF2  2ADE               	incf	postinc2,f,c
 28677  014CF4  0E00               	movlw	0
 28678  014CF6  22DE               	addwfc	postinc2,f,c
 28679  014CF8  22DE               	addwfc	postinc2,f,c
 28680  014CFA  22DE               	addwfc	postinc2,f,c
 28681                           
 28682                           ;stkvar	_b @ sp[(-4)+-4]
 28683  014CFC  0EFB               	movlw	-5
 28684  014CFE  A0E3               	btfss	plusw1,0,c
 28685  014D00  D01C               	goto	l8088
 28686  014D02  0E01               	movlw	1
 28687  014D04  6E0C               	movwf	(btemp+11)^0,c
 28688                           
 28689                           ;stkvar	_b @ sp[(-4)+-4]
 28690  014D06  50E1               	movf	fsr1l,w,c
 28691  014D08  0FF8               	addlw	-8
 28692  014D0A  6ED9               	movwf	fsr2l,c
 28693  014D0C  50E2               	movf	fsr1h,w,c
 28694  014D0E  6EDA               	movwf	fsr2h,c
 28695  014D10  0EFF               	movlw	255
 28696  014D12  22DA               	addwfc	fsr2h,f,c
 28697  014D14  280C               	incf	(btemp+11)^0,w,c
 28698  014D16  52DE               	movf	postinc2,f,c
 28699  014D18  D008               	goto	u5880
 28700  014D1A                     u5885:
 28701  014D1A  52DE               	movf	postinc2,f,c
 28702  014D1C  90D8               	bcf	status,0,c
 28703  014D1E  BEDC               	btfsc	preinc2,7,c
 28704  014D20  80D8               	bsf	status,0,c
 28705  014D22  32DD               	rrcf	postdec2,f,c
 28706  014D24  32DD               	rrcf	postdec2,f,c
 28707  014D26  32DD               	rrcf	postdec2,f,c
 28708  014D28  32DE               	rrcf	postinc2,f,c
 28709  014D2A                     u5880:
 28710  014D2A  2EE8               	decfsz	wreg,f,c
 28711  014D2C  D7F6               	goto	u5885
 28712                           
 28713                           ;stkvar	_bexp @ sp[(-4)+1]
 28714  014D2E  0EFD               	movlw	-3
 28715  014D30  28E3               	incf	plusw1,w,c
 28716  014D32  B4D8               	btfsc	status,2,c
 28717  014D34  D002               	goto	l8088
 28718                           
 28719                           ;stkvar	_bexp @ sp[(-4)+1]
 28720  014D36  0EFD               	movlw	-3
 28721  014D38  2AE3               	incf	plusw1,f,c
 28722  014D3A                     l8088:
 28723                           
 28724                           ;stkvar	_bexp @ sp[(-4)+1]
 28725  014D3A  0EFD               	movlw	-3
 28726  014D3C  28E3               	incf	plusw1,w,c
 28727  014D3E  B4D8               	btfsc	status,2,c
 28728  014D40  D004               	goto	u5910
 28729                           
 28730                           ;stkvar	_bexp @ sp[(-4)+1]
 28731  014D42  0EFD               	movlw	-3
 28732  014D44  50E3               	movf	plusw1,w,c
 28733  014D46  A4D8               	btfss	status,2,c
 28734  014D48  D00E               	goto	l8098
 28735  014D4A                     u5910:
 28736                           
 28737                           ;stkvar	_b @ sp[(-4)+-4]
 28738  014D4A  0EF8               	movlw	-8
 28739  014D4C  6AE3               	clrf	plusw1,c
 28740  014D4E  0EF9               	movlw	-7
 28741  014D50  6AE3               	clrf	plusw1,c
 28742  014D52  0EFA               	movlw	-6
 28743  014D54  6AE3               	clrf	plusw1,c
 28744  014D56  0EFB               	movlw	-5
 28745  014D58  6AE3               	clrf	plusw1,c
 28746                           
 28747                           ;stkvar	_bexp @ sp[(-4)+1]
 28748  014D5A  0EFD               	movlw	-3
 28749  014D5C  50E3               	movf	plusw1,w,c
 28750  014D5E  A4D8               	btfss	status,2,c
 28751  014D60  D002               	goto	l8098
 28752                           
 28753                           ;stkvar	_signs @ sp[(-4)+3]
 28754  014D62  0EFF               	movlw	-1
 28755  014D64  6AE3               	clrf	plusw1,c
 28756  014D66                     l8098:
 28757                           
 28758                           ;stkvar	_bexp @ sp[(-4)+1]
 28759  014D66  0EFD               	movlw	-3
 28760  014D68  A0E3               	btfss	plusw1,0,c
 28761  014D6A  D009               	goto	l8102
 28762                           
 28763                           ;stkvar	_b @ sp[(-4)+-4]
 28764  014D6C  0EFA               	movlw	250
 28765  014D6E  24E1               	addwf	fsr1l,w,c
 28766  014D70  6ED9               	movwf	fsr2l,c
 28767  014D72  0EFF               	movlw	255
 28768  014D74  20E2               	addwfc	fsr1h,w,c
 28769  014D76  6EDA               	movwf	fsr2h,c
 28770  014D78  0E00               	movlw	0
 28771  014D7A  8EDB               	bsf	plusw2,7,c
 28772  014D7C  D008               	goto	l8104
 28773  014D7E                     l8102:
 28774                           
 28775                           ;stkvar	_b @ sp[(-4)+-4]
 28776  014D7E  0EFA               	movlw	250
 28777  014D80  24E1               	addwf	fsr1l,w,c
 28778  014D82  6ED9               	movwf	fsr2l,c
 28779  014D84  0EFF               	movlw	255
 28780  014D86  20E2               	addwfc	fsr1h,w,c
 28781  014D88  6EDA               	movwf	fsr2h,c
 28782  014D8A  0E7F               	movlw	127
 28783  014D8C  16DF               	andwf	indf2,f,c
 28784  014D8E                     l8104:
 28785                           
 28786                           ;stkvar	_b @ sp[(-4)+-4]
 28787  014D8E  0EFB               	movlw	251
 28788  014D90  24E1               	addwf	fsr1l,w,c
 28789  014D92  6ED9               	movwf	fsr2l,c
 28790  014D94  0EFF               	movlw	255
 28791  014D96  20E2               	addwfc	fsr1h,w,c
 28792  014D98  6EDA               	movwf	fsr2h,c
 28793                           
 28794                           ;stkvar	_bexp @ sp[(-4)+1]
 28795  014D9A  0EFD               	movlw	-3
 28796  014D9C  006F FF8C  F00C    	movff	plusw1,btemp+11
 28797  014DA2  90D8               	bcf	status,0,c
 28798  014DA4  300C               	rrcf	(btemp+11)^0,w,c
 28799  014DA6  6EDF               	movwf	indf2,c
 28800                           
 28801                           ;stkvar	_signs @ sp[(-4)+3]
 28802  014DA8  0EFF               	movlw	-1
 28803  014DAA  AEE3               	btfss	plusw1,7,c
 28804  014DAC  D008               	goto	l8110
 28805                           
 28806                           ;stkvar	_b @ sp[(-4)+-4]
 28807  014DAE  0EFB               	movlw	251
 28808  014DB0  24E1               	addwf	fsr1l,w,c
 28809  014DB2  6ED9               	movwf	fsr2l,c
 28810  014DB4  0EFF               	movlw	255
 28811  014DB6  20E2               	addwfc	fsr1h,w,c
 28812  014DB8  6EDA               	movwf	fsr2h,c
 28813  014DBA  0E00               	movlw	0
 28814  014DBC  8EDB               	bsf	plusw2,7,c
 28815  014DBE                     l8110:
 28816                           
 28817                           ;stkvar	_b @ sp[(-4)+-4]
 28818  014DBE  0EF8               	movlw	-8
 28819  014DC0  006F FF8C  F001    	movff	plusw1,btemp
 28820  014DC6  0EF9               	movlw	-7
 28821  014DC8  006F FF8C  F002    	movff	plusw1,btemp+1
 28822  014DCE  0EFA               	movlw	-6
 28823  014DD0  006F FF8C  F003    	movff	plusw1,btemp+2
 28824  014DD6  0EFB               	movlw	-5
 28825  014DD8  006F FF8C  F004    	movff	plusw1,btemp+3
 28826  014DDE                     l3018:
 28827                           
 28828                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 28829  014DDE  0EF4               	movlw	244
 28830  014DE0  26E1               	addwf	fsr1l,f,c
 28831  014DE2  0EFF               	movlw	255
 28832  014DE4  22E2               	addwfc	fsr1h,f,c
 28833  014DE6  0012               	return		;funcret
 28834  014DE8                     __end_of___fladd:
 28835                           	opt callstack 0
 28836                           
 28837 ;; *************** function ___flmul *****************
 28838 ;; Defined at:
 28839 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 28840 ;; Parameters:    Size  Location     Type
 28841 ;;  b               4  [STACK] unsigned char 
 28842 ;;  a               4  [STACK] unsigned char 
 28843 ;; Auto vars:     Size  Location     Type
 28844 ;;  prod            4  [STACK] struct .
 28845 ;;  grs             4  [STACK] unsigned long 
 28846 ;;  temp            2  [STACK] struct .
 28847 ;;  bexp            1  [STACK] unsigned char 
 28848 ;;  aexp            1  [STACK] unsigned char 
 28849 ;;  sign            1  [STACK] unsigned char 
 28850 ;; Return value:  Size  Location     Type
 28851 ;;                  4  [STACK] unsigned char 
 28852 ;; Registers used:
 28853 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28854 ;; Tracked objects:
 28855 ;;		On entry : 0/0
 28856 ;;		On exit  : 0/0
 28857 ;;		Unchanged: 0/0
 28858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28863 ;;Total ram usage:        0 bytes
 28864 ;; Hardware stack levels used:    1
 28865 ;; Hardware stack levels required when called:   15
 28866 ;; This function calls:
 28867 ;;		Nothing
 28868 ;; This function is called by:
 28869 ;;		_conv_raw_result
 28870 ;;		_lp_filter
 28871 ;;		_calc_model_data
 28872 ;;		_calc_bsoc
 28873 ;;		_init_bsoc
 28874 ;;		_efgtoa
 28875 ;; This function uses a reentrant model
 28876 ;;
 28877                           
 28878                           	psect	text113
 28879  013E02                     __ptext113:
 28880                           	opt callstack 0
 28881  013E02                     ___flmul:
 28882                           	opt callstack 0
 28883                           
 28884                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 28885  013E02  0E0D               	movlw	13
 28886  013E04  26E1               	addwf	fsr1l,f,c
 28887  013E06  0E00               	movlw	0
 28888  013E08  22E2               	addwfc	fsr1h,f,c
 28889                           
 28890                           ;stkvar	_b @ sp[(-13)+-4]
 28891                           
 28892                           ;incstack = 0
 28893 ;; hardware stack exceeded
 28894  013E0A  0EF2               	movlw	242
 28895  013E0C  24E1               	addwf	fsr1l,w,c
 28896  013E0E  6ED9               	movwf	fsr2l,c
 28897  013E10  0EFF               	movlw	255
 28898  013E12  20E2               	addwfc	fsr1h,w,c
 28899  013E14  6EDA               	movwf	fsr2h,c
 28900  013E16  50DF               	movf	indf2,w,c
 28901  013E18  6E0C               	movwf	(btemp+11)^0,c
 28902  013E1A  0E80               	movlw	128
 28903  013E1C  160C               	andwf	(btemp+11)^0,f,c
 28904                           
 28905                           ;stkvar	_sign @ sp[(-13)+12]
 28906  013E1E  0EFF               	movlw	-1
 28907  013E20  0060  F033  FFE3   	movff	btemp+11,plusw1
 28908                           
 28909                           ;stkvar	_b @ sp[(-13)+-4]
 28910  013E26  0EF2               	movlw	242
 28911  013E28  24E1               	addwf	fsr1l,w,c
 28912  013E2A  6ED9               	movwf	fsr2l,c
 28913  013E2C  0EFF               	movlw	255
 28914  013E2E  20E2               	addwfc	fsr1h,w,c
 28915  013E30  6EDA               	movwf	fsr2h,c
 28916  013E32  50DF               	movf	indf2,w,c
 28917  013E34  6E0C               	movwf	(btemp+11)^0,c
 28918  013E36  90D8               	bcf	status,0,c
 28919  013E38  340C               	rlcf	(btemp+11)^0,w,c
 28920  013E3A  6E0B               	movwf	(btemp+10)^0,c
 28921                           
 28922                           ;stkvar	_bexp @ sp[(-13)+10]
 28923  013E3C  0EFD               	movlw	-3
 28924  013E3E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28925                           
 28926                           ;stkvar	_b @ sp[(-13)+-4]
 28927  013E44  0EF1               	movlw	241
 28928  013E46  24E1               	addwf	fsr1l,w,c
 28929  013E48  6ED9               	movwf	fsr2l,c
 28930  013E4A  0EFF               	movlw	255
 28931  013E4C  20E2               	addwfc	fsr1h,w,c
 28932  013E4E  6EDA               	movwf	fsr2h,c
 28933  013E50  AEDF               	btfss	indf2,7,c
 28934  013E52  D002               	goto	l8536
 28935                           
 28936                           ;stkvar	_bexp @ sp[(-13)+10]
 28937  013E54  0EFD               	movlw	-3
 28938  013E56  80E3               	bsf	plusw1,0,c
 28939  013E58                     l8536:
 28940                           
 28941                           ;stkvar	_bexp @ sp[(-13)+10]
 28942  013E58  0EFD               	movlw	-3
 28943  013E5A  50E3               	movf	plusw1,w,c
 28944  013E5C  B4D8               	btfsc	status,2,c
 28945  013E5E  D01F               	goto	l8544
 28946                           
 28947                           ;stkvar	_bexp @ sp[(-13)+10]
 28948  013E60  0EFD               	movlw	-3
 28949  013E62  28E3               	incf	plusw1,w,c
 28950  013E64  A4D8               	btfss	status,2,c
 28951  013E66  D018               	goto	l8542
 28952  013E68  0E00               	movlw	0
 28953  013E6A  6E09               	movwf	(btemp+8)^0,c
 28954  013E6C  0E00               	movlw	0
 28955  013E6E  6E0A               	movwf	(btemp+9)^0,c
 28956  013E70  0E00               	movlw	0
 28957  013E72  6E0B               	movwf	(btemp+10)^0,c
 28958  013E74  0E00               	movlw	0
 28959  013E76  6E0C               	movwf	(btemp+11)^0,c
 28960                           
 28961                           ;stkvar	_b @ sp[(-13)+-4]
 28962  013E78  0EEF               	movlw	-17
 28963  013E7A  0060  F027  FFE3   	movff	btemp+8,plusw1
 28964  013E80  0EF0               	movlw	-16
 28965  013E82  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28966  013E88  0EF1               	movlw	-15
 28967  013E8A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28968  013E90  0EF2               	movlw	-14
 28969  013E92  0060  F033  FFE3   	movff	btemp+11,plusw1
 28970  013E98                     l8542:
 28971                           
 28972                           ;stkvar	_b @ sp[(-13)+-4]
 28973  013E98  0EF1               	movlw	-15
 28974  013E9A  8EE3               	bsf	plusw1,7,c
 28975  013E9C  D018               	goto	l8546
 28976  013E9E                     l8544:
 28977  013E9E  0E00               	movlw	0
 28978  013EA0  6E09               	movwf	(btemp+8)^0,c
 28979  013EA2  0E00               	movlw	0
 28980  013EA4  6E0A               	movwf	(btemp+9)^0,c
 28981  013EA6  0E00               	movlw	0
 28982  013EA8  6E0B               	movwf	(btemp+10)^0,c
 28983  013EAA  0E00               	movlw	0
 28984  013EAC  6E0C               	movwf	(btemp+11)^0,c
 28985                           
 28986                           ;stkvar	_b @ sp[(-13)+-4]
 28987  013EAE  0EEF               	movlw	-17
 28988  013EB0  0060  F027  FFE3   	movff	btemp+8,plusw1
 28989  013EB6  0EF0               	movlw	-16
 28990  013EB8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28991  013EBE  0EF1               	movlw	-15
 28992  013EC0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28993  013EC6  0EF2               	movlw	-14
 28994  013EC8  0060  F033  FFE3   	movff	btemp+11,plusw1
 28995  013ECE                     l8546:
 28996                           
 28997                           ;stkvar	_a @ sp[(-13)+-8]
 28998  013ECE  0EEE               	movlw	238
 28999  013ED0  24E1               	addwf	fsr1l,w,c
 29000  013ED2  6ED9               	movwf	fsr2l,c
 29001  013ED4  0EFF               	movlw	255
 29002  013ED6  20E2               	addwfc	fsr1h,w,c
 29003  013ED8  6EDA               	movwf	fsr2h,c
 29004  013EDA  50DF               	movf	indf2,w,c
 29005  013EDC  6E0C               	movwf	(btemp+11)^0,c
 29006  013EDE  0E80               	movlw	128
 29007  013EE0  160C               	andwf	(btemp+11)^0,f,c
 29008                           
 29009                           ;stkvar	_sign @ sp[(-13)+12]
 29010  013EE2  50E1               	movf	fsr1l,w,c
 29011  013EE4  0FFF               	addlw	-1
 29012  013EE6  6ED9               	movwf	fsr2l,c
 29013  013EE8  50E2               	movf	fsr1h,w,c
 29014  013EEA  6EDA               	movwf	fsr2h,c
 29015  013EEC  0EFF               	movlw	255
 29016  013EEE  22DA               	addwfc	fsr2h,f,c
 29017  013EF0  500C               	movf	(btemp+11)^0,w,c
 29018  013EF2  1ADF               	xorwf	indf2,f,c
 29019                           
 29020                           ;stkvar	_a @ sp[(-13)+-8]
 29021  013EF4  0EEE               	movlw	238
 29022  013EF6  24E1               	addwf	fsr1l,w,c
 29023  013EF8  6ED9               	movwf	fsr2l,c
 29024  013EFA  0EFF               	movlw	255
 29025  013EFC  20E2               	addwfc	fsr1h,w,c
 29026  013EFE  6EDA               	movwf	fsr2h,c
 29027  013F00  50DF               	movf	indf2,w,c
 29028  013F02  6E0C               	movwf	(btemp+11)^0,c
 29029  013F04  90D8               	bcf	status,0,c
 29030  013F06  340C               	rlcf	(btemp+11)^0,w,c
 29031  013F08  6E0B               	movwf	(btemp+10)^0,c
 29032                           
 29033                           ;stkvar	_aexp @ sp[(-13)+11]
 29034  013F0A  0EFE               	movlw	-2
 29035  013F0C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29036                           
 29037                           ;stkvar	_a @ sp[(-13)+-8]
 29038  013F12  0EED               	movlw	237
 29039  013F14  24E1               	addwf	fsr1l,w,c
 29040  013F16  6ED9               	movwf	fsr2l,c
 29041  013F18  0EFF               	movlw	255
 29042  013F1A  20E2               	addwfc	fsr1h,w,c
 29043  013F1C  6EDA               	movwf	fsr2h,c
 29044  013F1E  AEDF               	btfss	indf2,7,c
 29045  013F20  D002               	goto	l8554
 29046                           
 29047                           ;stkvar	_aexp @ sp[(-13)+11]
 29048  013F22  0EFE               	movlw	-2
 29049  013F24  80E3               	bsf	plusw1,0,c
 29050  013F26                     l8554:
 29051                           
 29052                           ;stkvar	_aexp @ sp[(-13)+11]
 29053  013F26  0EFE               	movlw	-2
 29054  013F28  50E3               	movf	plusw1,w,c
 29055  013F2A  B4D8               	btfsc	status,2,c
 29056  013F2C  D01F               	goto	l8562
 29057                           
 29058                           ;stkvar	_aexp @ sp[(-13)+11]
 29059  013F2E  0EFE               	movlw	-2
 29060  013F30  28E3               	incf	plusw1,w,c
 29061  013F32  A4D8               	btfss	status,2,c
 29062  013F34  D018               	goto	l8560
 29063  013F36  0E00               	movlw	0
 29064  013F38  6E09               	movwf	(btemp+8)^0,c
 29065  013F3A  0E00               	movlw	0
 29066  013F3C  6E0A               	movwf	(btemp+9)^0,c
 29067  013F3E  0E00               	movlw	0
 29068  013F40  6E0B               	movwf	(btemp+10)^0,c
 29069  013F42  0E00               	movlw	0
 29070  013F44  6E0C               	movwf	(btemp+11)^0,c
 29071                           
 29072                           ;stkvar	_a @ sp[(-13)+-8]
 29073  013F46  0EEB               	movlw	-21
 29074  013F48  0060  F027  FFE3   	movff	btemp+8,plusw1
 29075  013F4E  0EEC               	movlw	-20
 29076  013F50  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29077  013F56  0EED               	movlw	-19
 29078  013F58  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29079  013F5E  0EEE               	movlw	-18
 29080  013F60  0060  F033  FFE3   	movff	btemp+11,plusw1
 29081  013F66                     l8560:
 29082                           
 29083                           ;stkvar	_a @ sp[(-13)+-8]
 29084  013F66  0EED               	movlw	-19
 29085  013F68  8EE3               	bsf	plusw1,7,c
 29086  013F6A  D018               	goto	l8564
 29087  013F6C                     l8562:
 29088  013F6C  0E00               	movlw	0
 29089  013F6E  6E09               	movwf	(btemp+8)^0,c
 29090  013F70  0E00               	movlw	0
 29091  013F72  6E0A               	movwf	(btemp+9)^0,c
 29092  013F74  0E00               	movlw	0
 29093  013F76  6E0B               	movwf	(btemp+10)^0,c
 29094  013F78  0E00               	movlw	0
 29095  013F7A  6E0C               	movwf	(btemp+11)^0,c
 29096                           
 29097                           ;stkvar	_a @ sp[(-13)+-8]
 29098  013F7C  0EEB               	movlw	-21
 29099  013F7E  0060  F027  FFE3   	movff	btemp+8,plusw1
 29100  013F84  0EEC               	movlw	-20
 29101  013F86  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29102  013F8C  0EED               	movlw	-19
 29103  013F8E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29104  013F94  0EEE               	movlw	-18
 29105  013F96  0060  F033  FFE3   	movff	btemp+11,plusw1
 29106  013F9C                     l8564:
 29107                           
 29108                           ;stkvar	_aexp @ sp[(-13)+11]
 29109  013F9C  0EFE               	movlw	-2
 29110  013F9E  50E3               	movf	plusw1,w,c
 29111  013FA0  B4D8               	btfsc	status,2,c
 29112  013FA2  D004               	goto	u6900
 29113                           
 29114                           ;stkvar	_bexp @ sp[(-13)+10]
 29115  013FA4  0EFD               	movlw	-3
 29116  013FA6  50E3               	movf	plusw1,w,c
 29117  013FA8  A4D8               	btfss	status,2,c
 29118  013FAA  D009               	goto	l8572
 29119  013FAC                     u6900:
 29120  013FAC  0E00               	movlw	0
 29121  013FAE  6E01               	movwf	btemp^0,c
 29122  013FB0  0E00               	movlw	0
 29123  013FB2  6E02               	movwf	(btemp+1)^0,c
 29124  013FB4  0E00               	movlw	0
 29125  013FB6  6E03               	movwf	(btemp+2)^0,c
 29126  013FB8  0E00               	movlw	0
 29127  013FBA  6E04               	movwf	(btemp+3)^0,c
 29128  013FBC  D332               	goto	l3099
 29129  013FBE                     l8572:
 29130                           
 29131                           ;stkvar	_b @ sp[(-13)+-4]
 29132  013FBE  0EEF               	movlw	-17
 29133  013FC0  006F FF8C  F00C    	movff	plusw1,btemp+11
 29134                           
 29135                           ;stkvar	_a @ sp[(-13)+-8]
 29136  013FC6  0EED               	movlw	237
 29137  013FC8  24E1               	addwf	fsr1l,w,c
 29138  013FCA  6ED9               	movwf	fsr2l,c
 29139  013FCC  0EFF               	movlw	255
 29140  013FCE  20E2               	addwfc	fsr1h,w,c
 29141  013FD0  6EDA               	movwf	fsr2h,c
 29142  013FD2  50DF               	movf	indf2,w,c
 29143  013FD4  020C               	mulwf	(btemp+11)^0,c
 29144                           
 29145                           ;stkvar	_temp @ sp[(-13)+8]
 29146  013FD6  0EFB               	movlw	-5
 29147  013FD8  006F FFCF FFE3     	movff	prodl,plusw1
 29148  013FDE  0EFC               	movlw	-4
 29149  013FE0  006F FFD3 FFE3     	movff	prodh,plusw1
 29150                           
 29151                           ;stkvar	_temp @ sp[(-13)+8]
 29152  013FE6  0EFB               	movlw	-5
 29153  013FE8  006F FF8C  F00C    	movff	plusw1,btemp+11
 29154  013FEE  0060  F030  F005   	movff	btemp+11,btemp+4
 29155  013FF4  6A06               	clrf	(btemp+5)^0,c
 29156  013FF6  6A07               	clrf	(btemp+6)^0,c
 29157  013FF8  6A08               	clrf	(btemp+7)^0,c
 29158                           
 29159                           ;stkvar	_grs @ sp[(-13)+4]
 29160  013FFA  0EF7               	movlw	-9
 29161  013FFC  0060  F017  FFE3   	movff	btemp+4,plusw1
 29162  014002  0EF8               	movlw	-8
 29163  014004  0060  F01B  FFE3   	movff	btemp+5,plusw1
 29164  01400A  0EF9               	movlw	-7
 29165  01400C  0060  F01F  FFE3   	movff	btemp+6,plusw1
 29166  014012  0EFA               	movlw	-6
 29167  014014  0060  F023  FFE3   	movff	btemp+7,plusw1
 29168                           
 29169                           ;stkvar	_temp @ sp[(-13)+8]
 29170  01401A  0EFC               	movlw	252
 29171  01401C  24E1               	addwf	fsr1l,w,c
 29172  01401E  6ED9               	movwf	fsr2l,c
 29173  014020  0EFF               	movlw	255
 29174  014022  20E2               	addwfc	fsr1h,w,c
 29175  014024  6EDA               	movwf	fsr2h,c
 29176  014026  50DF               	movf	indf2,w,c
 29177  014028  6E0C               	movwf	(btemp+11)^0,c
 29178  01402A  0060  F030  F005   	movff	btemp+11,btemp+4
 29179  014030  6A06               	clrf	(btemp+5)^0,c
 29180  014032  6A07               	clrf	(btemp+6)^0,c
 29181  014034  6A08               	clrf	(btemp+7)^0,c
 29182                           
 29183                           ;stkvar	_prod @ sp[(-13)+0]
 29184  014036  0EF3               	movlw	-13
 29185  014038  0060  F017  FFE3   	movff	btemp+4,plusw1
 29186  01403E  0EF4               	movlw	-12
 29187  014040  0060  F01B  FFE3   	movff	btemp+5,plusw1
 29188  014046  0EF5               	movlw	-11
 29189  014048  0060  F01F  FFE3   	movff	btemp+6,plusw1
 29190  01404E  0EF6               	movlw	-10
 29191  014050  0060  F023  FFE3   	movff	btemp+7,plusw1
 29192                           
 29193                           ;stkvar	_b @ sp[(-13)+-4]
 29194  014056  0EF0               	movlw	240
 29195  014058  24E1               	addwf	fsr1l,w,c
 29196  01405A  6ED9               	movwf	fsr2l,c
 29197  01405C  0EFF               	movlw	255
 29198  01405E  20E2               	addwfc	fsr1h,w,c
 29199  014060  6EDA               	movwf	fsr2h,c
 29200  014062  50DF               	movf	indf2,w,c
 29201  014064  6E0C               	movwf	(btemp+11)^0,c
 29202                           
 29203                           ;stkvar	_a @ sp[(-13)+-8]
 29204  014066  0EEC               	movlw	236
 29205  014068  24E1               	addwf	fsr1l,w,c
 29206  01406A  6ED9               	movwf	fsr2l,c
 29207  01406C  0EFF               	movlw	255
 29208  01406E  20E2               	addwfc	fsr1h,w,c
 29209  014070  6EDA               	movwf	fsr2h,c
 29210  014072  50DF               	movf	indf2,w,c
 29211  014074  020C               	mulwf	(btemp+11)^0,c
 29212                           
 29213                           ;stkvar	_temp @ sp[(-13)+8]
 29214  014076  0EFB               	movlw	-5
 29215  014078  006F FFCF FFE3     	movff	prodl,plusw1
 29216  01407E  0EFC               	movlw	-4
 29217  014080  006F FFD3 FFE3     	movff	prodh,plusw1
 29218                           
 29219                           ;stkvar	_grs @ sp[(-13)+4]
 29220  014086  50E1               	movf	fsr1l,w,c
 29221  014088  0FF7               	addlw	-9
 29222  01408A  6ED9               	movwf	fsr2l,c
 29223  01408C  50E2               	movf	fsr1h,w,c
 29224  01408E  6EDA               	movwf	fsr2h,c
 29225  014090  0EFF               	movlw	255
 29226  014092  22DA               	addwfc	fsr2h,f,c
 29227                           
 29228                           ;stkvar	_temp @ sp[(-13)+8]
 29229  014094  0EFB               	movlw	-5
 29230  014096  50E3               	movf	plusw1,w,c
 29231  014098  26DE               	addwf	postinc2,f,c
 29232  01409A  0E00               	movlw	0
 29233  01409C  22DE               	addwfc	postinc2,f,c
 29234  01409E  22DE               	addwfc	postinc2,f,c
 29235  0140A0  22DE               	addwfc	postinc2,f,c
 29236                           
 29237                           ;stkvar	_prod @ sp[(-13)+0]
 29238  0140A2  50E1               	movf	fsr1l,w,c
 29239  0140A4  0FF3               	addlw	-13
 29240  0140A6  6ED9               	movwf	fsr2l,c
 29241  0140A8  50E2               	movf	fsr1h,w,c
 29242  0140AA  6EDA               	movwf	fsr2h,c
 29243  0140AC  0EFF               	movlw	255
 29244  0140AE  22DA               	addwfc	fsr2h,f,c
 29245                           
 29246                           ;stkvar	_temp @ sp[(-13)+8]
 29247  0140B0  0EFC               	movlw	252
 29248  0140B2  24E1               	addwf	fsr1l,w,c
 29249  0140B4  6EE9               	movwf	fsr0l,c
 29250  0140B6  0EFF               	movlw	255
 29251  0140B8  20E2               	addwfc	fsr1h,w,c
 29252  0140BA  6EEA               	movwf	fsr0h,c
 29253  0140BC  50EF               	movf	indf0,w,c
 29254  0140BE  26DE               	addwf	postinc2,f,c
 29255  0140C0  0E00               	movlw	0
 29256  0140C2  22DE               	addwfc	postinc2,f,c
 29257  0140C4  22DE               	addwfc	postinc2,f,c
 29258  0140C6  22DE               	addwfc	postinc2,f,c
 29259                           
 29260                           ;stkvar	_b @ sp[(-13)+-4]
 29261  0140C8  0EF1               	movlw	241
 29262  0140CA  24E1               	addwf	fsr1l,w,c
 29263  0140CC  6ED9               	movwf	fsr2l,c
 29264  0140CE  0EFF               	movlw	255
 29265  0140D0  20E2               	addwfc	fsr1h,w,c
 29266  0140D2  6EDA               	movwf	fsr2h,c
 29267  0140D4  50DF               	movf	indf2,w,c
 29268  0140D6  6E0C               	movwf	(btemp+11)^0,c
 29269                           
 29270                           ;stkvar	_a @ sp[(-13)+-8]
 29271  0140D8  0EEB               	movlw	-21
 29272  0140DA  50E3               	movf	plusw1,w,c
 29273  0140DC  020C               	mulwf	(btemp+11)^0,c
 29274                           
 29275                           ;stkvar	_temp @ sp[(-13)+8]
 29276  0140DE  0EFB               	movlw	-5
 29277  0140E0  006F FFCF FFE3     	movff	prodl,plusw1
 29278  0140E6  0EFC               	movlw	-4
 29279  0140E8  006F FFD3 FFE3     	movff	prodh,plusw1
 29280                           
 29281                           ;stkvar	_grs @ sp[(-13)+4]
 29282  0140EE  50E1               	movf	fsr1l,w,c
 29283  0140F0  0FF7               	addlw	-9
 29284  0140F2  6ED9               	movwf	fsr2l,c
 29285  0140F4  50E2               	movf	fsr1h,w,c
 29286  0140F6  6EDA               	movwf	fsr2h,c
 29287  0140F8  0EFF               	movlw	255
 29288  0140FA  22DA               	addwfc	fsr2h,f,c
 29289                           
 29290                           ;stkvar	_temp @ sp[(-13)+8]
 29291  0140FC  0EFB               	movlw	-5
 29292  0140FE  50E3               	movf	plusw1,w,c
 29293  014100  26DE               	addwf	postinc2,f,c
 29294  014102  0E00               	movlw	0
 29295  014104  22DE               	addwfc	postinc2,f,c
 29296  014106  22DE               	addwfc	postinc2,f,c
 29297  014108  22DE               	addwfc	postinc2,f,c
 29298                           
 29299                           ;stkvar	_prod @ sp[(-13)+0]
 29300  01410A  50E1               	movf	fsr1l,w,c
 29301  01410C  0FF3               	addlw	-13
 29302  01410E  6ED9               	movwf	fsr2l,c
 29303  014110  50E2               	movf	fsr1h,w,c
 29304  014112  6EDA               	movwf	fsr2h,c
 29305  014114  0EFF               	movlw	255
 29306  014116  22DA               	addwfc	fsr2h,f,c
 29307                           
 29308                           ;stkvar	_temp @ sp[(-13)+8]
 29309  014118  0EFC               	movlw	252
 29310  01411A  24E1               	addwf	fsr1l,w,c
 29311  01411C  6EE9               	movwf	fsr0l,c
 29312  01411E  0EFF               	movlw	255
 29313  014120  20E2               	addwfc	fsr1h,w,c
 29314  014122  6EEA               	movwf	fsr0h,c
 29315  014124  50EF               	movf	indf0,w,c
 29316  014126  26DE               	addwf	postinc2,f,c
 29317  014128  0E00               	movlw	0
 29318  01412A  22DE               	addwfc	postinc2,f,c
 29319  01412C  22DE               	addwfc	postinc2,f,c
 29320  01412E  22DE               	addwfc	postinc2,f,c
 29321                           
 29322                           ;stkvar	_grs @ sp[(-13)+4]
 29323  014130  50E1               	movf	fsr1l,w,c
 29324  014132  0FF7               	addlw	-9
 29325  014134  6ED9               	movwf	fsr2l,c
 29326  014136  50E2               	movf	fsr1h,w,c
 29327  014138  6EDA               	movwf	fsr2h,c
 29328  01413A  0EFF               	movlw	255
 29329  01413C  22DA               	addwfc	fsr2h,f,c
 29330  01413E  0E08               	movlw	8
 29331  014140                     u6915:
 29332  014140  90D8               	bcf	status,0,c
 29333  014142  36DE               	rlcf	postinc2,f,c
 29334  014144  36DE               	rlcf	postinc2,f,c
 29335  014146  36DE               	rlcf	postinc2,f,c
 29336  014148  36DD               	rlcf	postdec2,f,c
 29337  01414A  52DD               	movf	postdec2,f,c
 29338  01414C  52DD               	movf	postdec2,f,c
 29339  01414E  2EE8               	decfsz	wreg,f,c
 29340  014150  D7F7               	goto	u6915
 29341                           
 29342                           ;stkvar	_b @ sp[(-13)+-4]
 29343  014152  0EF0               	movlw	240
 29344  014154  24E1               	addwf	fsr1l,w,c
 29345  014156  6ED9               	movwf	fsr2l,c
 29346  014158  0EFF               	movlw	255
 29347  01415A  20E2               	addwfc	fsr1h,w,c
 29348  01415C  6EDA               	movwf	fsr2h,c
 29349  01415E  50DF               	movf	indf2,w,c
 29350  014160  6E0C               	movwf	(btemp+11)^0,c
 29351                           
 29352                           ;stkvar	_a @ sp[(-13)+-8]
 29353  014162  0EEB               	movlw	-21
 29354  014164  50E3               	movf	plusw1,w,c
 29355  014166  020C               	mulwf	(btemp+11)^0,c
 29356                           
 29357                           ;stkvar	_temp @ sp[(-13)+8]
 29358  014168  0EFB               	movlw	-5
 29359  01416A  006F FFCF FFE3     	movff	prodl,plusw1
 29360  014170  0EFC               	movlw	-4
 29361  014172  006F FFD3 FFE3     	movff	prodh,plusw1
 29362                           
 29363                           ;stkvar	_temp @ sp[(-13)+8]
 29364  014178  0EFB               	movlw	-5
 29365  01417A  006F FF8C  F00B    	movff	plusw1,btemp+10
 29366  014180  0EFC               	movlw	-4
 29367  014182  006F FF8C  F00C    	movff	plusw1,btemp+11
 29368                           
 29369                           ;stkvar	_grs @ sp[(-13)+4]
 29370  014188  50E1               	movf	fsr1l,w,c
 29371  01418A  0FF7               	addlw	-9
 29372  01418C  6ED9               	movwf	fsr2l,c
 29373  01418E  50E2               	movf	fsr1h,w,c
 29374  014190  6EDA               	movwf	fsr2h,c
 29375  014192  0EFF               	movlw	255
 29376  014194  22DA               	addwfc	fsr2h,f,c
 29377  014196  500B               	movf	(btemp+10)^0,w,c
 29378  014198  26DE               	addwf	postinc2,f,c
 29379  01419A  500C               	movf	(btemp+11)^0,w,c
 29380  01419C  22DE               	addwfc	postinc2,f,c
 29381  01419E  0E00               	movlw	0
 29382  0141A0  22DE               	addwfc	postinc2,f,c
 29383  0141A2  22DE               	addwfc	postinc2,f,c
 29384                           
 29385                           ;stkvar	_b @ sp[(-13)+-4]
 29386  0141A4  0EEF               	movlw	-17
 29387  0141A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 29388                           
 29389                           ;stkvar	_a @ sp[(-13)+-8]
 29390  0141AC  0EEC               	movlw	236
 29391  0141AE  24E1               	addwf	fsr1l,w,c
 29392  0141B0  6ED9               	movwf	fsr2l,c
 29393  0141B2  0EFF               	movlw	255
 29394  0141B4  20E2               	addwfc	fsr1h,w,c
 29395  0141B6  6EDA               	movwf	fsr2h,c
 29396  0141B8  50DF               	movf	indf2,w,c
 29397  0141BA  020C               	mulwf	(btemp+11)^0,c
 29398                           
 29399                           ;stkvar	_temp @ sp[(-13)+8]
 29400  0141BC  0EFB               	movlw	-5
 29401  0141BE  006F FFCF FFE3     	movff	prodl,plusw1
 29402  0141C4  0EFC               	movlw	-4
 29403  0141C6  006F FFD3 FFE3     	movff	prodh,plusw1
 29404                           
 29405                           ;stkvar	_temp @ sp[(-13)+8]
 29406  0141CC  0EFB               	movlw	-5
 29407  0141CE  006F FF8C  F00B    	movff	plusw1,btemp+10
 29408  0141D4  0EFC               	movlw	-4
 29409  0141D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 29410                           
 29411                           ;stkvar	_grs @ sp[(-13)+4]
 29412  0141DC  50E1               	movf	fsr1l,w,c
 29413  0141DE  0FF7               	addlw	-9
 29414  0141E0  6ED9               	movwf	fsr2l,c
 29415  0141E2  50E2               	movf	fsr1h,w,c
 29416  0141E4  6EDA               	movwf	fsr2h,c
 29417  0141E6  0EFF               	movlw	255
 29418  0141E8  22DA               	addwfc	fsr2h,f,c
 29419  0141EA  500B               	movf	(btemp+10)^0,w,c
 29420  0141EC  26DE               	addwf	postinc2,f,c
 29421  0141EE  500C               	movf	(btemp+11)^0,w,c
 29422  0141F0  22DE               	addwfc	postinc2,f,c
 29423  0141F2  0E00               	movlw	0
 29424  0141F4  22DE               	addwfc	postinc2,f,c
 29425  0141F6  22DE               	addwfc	postinc2,f,c
 29426                           
 29427                           ;stkvar	_grs @ sp[(-13)+4]
 29428  0141F8  50E1               	movf	fsr1l,w,c
 29429  0141FA  0FF7               	addlw	-9
 29430  0141FC  6ED9               	movwf	fsr2l,c
 29431  0141FE  50E2               	movf	fsr1h,w,c
 29432  014200  6EDA               	movwf	fsr2h,c
 29433  014202  0EFF               	movlw	255
 29434  014204  22DA               	addwfc	fsr2h,f,c
 29435  014206  0E08               	movlw	8
 29436  014208                     u6925:
 29437  014208  90D8               	bcf	status,0,c
 29438  01420A  36DE               	rlcf	postinc2,f,c
 29439  01420C  36DE               	rlcf	postinc2,f,c
 29440  01420E  36DE               	rlcf	postinc2,f,c
 29441  014210  36DD               	rlcf	postdec2,f,c
 29442  014212  52DD               	movf	postdec2,f,c
 29443  014214  52DD               	movf	postdec2,f,c
 29444  014216  2EE8               	decfsz	wreg,f,c
 29445  014218  D7F7               	goto	u6925
 29446                           
 29447                           ;stkvar	_b @ sp[(-13)+-4]
 29448  01421A  0EEF               	movlw	-17
 29449  01421C  006F FF8C  F00C    	movff	plusw1,btemp+11
 29450                           
 29451                           ;stkvar	_a @ sp[(-13)+-8]
 29452  014222  0EEB               	movlw	-21
 29453  014224  50E3               	movf	plusw1,w,c
 29454  014226  020C               	mulwf	(btemp+11)^0,c
 29455                           
 29456                           ;stkvar	_temp @ sp[(-13)+8]
 29457  014228  0EFB               	movlw	-5
 29458  01422A  006F FFCF FFE3     	movff	prodl,plusw1
 29459  014230  0EFC               	movlw	-4
 29460  014232  006F FFD3 FFE3     	movff	prodh,plusw1
 29461                           
 29462                           ;stkvar	_temp @ sp[(-13)+8]
 29463  014238  0EFB               	movlw	-5
 29464  01423A  006F FF8C  F00B    	movff	plusw1,btemp+10
 29465  014240  0EFC               	movlw	-4
 29466  014242  006F FF8C  F00C    	movff	plusw1,btemp+11
 29467                           
 29468                           ;stkvar	_grs @ sp[(-13)+4]
 29469  014248  50E1               	movf	fsr1l,w,c
 29470  01424A  0FF7               	addlw	-9
 29471  01424C  6ED9               	movwf	fsr2l,c
 29472  01424E  50E2               	movf	fsr1h,w,c
 29473  014250  6EDA               	movwf	fsr2h,c
 29474  014252  0EFF               	movlw	255
 29475  014254  22DA               	addwfc	fsr2h,f,c
 29476  014256  500B               	movf	(btemp+10)^0,w,c
 29477  014258  26DE               	addwf	postinc2,f,c
 29478  01425A  500C               	movf	(btemp+11)^0,w,c
 29479  01425C  22DE               	addwfc	postinc2,f,c
 29480  01425E  0E00               	movlw	0
 29481  014260  22DE               	addwfc	postinc2,f,c
 29482  014262  22DE               	addwfc	postinc2,f,c
 29483                           
 29484                           ;stkvar	_b @ sp[(-13)+-4]
 29485  014264  0EF0               	movlw	240
 29486  014266  24E1               	addwf	fsr1l,w,c
 29487  014268  6ED9               	movwf	fsr2l,c
 29488  01426A  0EFF               	movlw	255
 29489  01426C  20E2               	addwfc	fsr1h,w,c
 29490  01426E  6EDA               	movwf	fsr2h,c
 29491  014270  50DF               	movf	indf2,w,c
 29492  014272  6E0C               	movwf	(btemp+11)^0,c
 29493                           
 29494                           ;stkvar	_a @ sp[(-13)+-8]
 29495  014274  0EED               	movlw	237
 29496  014276  24E1               	addwf	fsr1l,w,c
 29497  014278  6ED9               	movwf	fsr2l,c
 29498  01427A  0EFF               	movlw	255
 29499  01427C  20E2               	addwfc	fsr1h,w,c
 29500  01427E  6EDA               	movwf	fsr2h,c
 29501  014280  50DF               	movf	indf2,w,c
 29502  014282  020C               	mulwf	(btemp+11)^0,c
 29503                           
 29504                           ;stkvar	_temp @ sp[(-13)+8]
 29505  014284  0EFB               	movlw	-5
 29506  014286  006F FFCF FFE3     	movff	prodl,plusw1
 29507  01428C  0EFC               	movlw	-4
 29508  01428E  006F FFD3 FFE3     	movff	prodh,plusw1
 29509                           
 29510                           ;stkvar	_temp @ sp[(-13)+8]
 29511  014294  0EFB               	movlw	-5
 29512  014296  006F FF8C  F00B    	movff	plusw1,btemp+10
 29513  01429C  0EFC               	movlw	-4
 29514  01429E  006F FF8C  F00C    	movff	plusw1,btemp+11
 29515                           
 29516                           ;stkvar	_prod @ sp[(-13)+0]
 29517  0142A4  50E1               	movf	fsr1l,w,c
 29518  0142A6  0FF3               	addlw	-13
 29519  0142A8  6ED9               	movwf	fsr2l,c
 29520  0142AA  50E2               	movf	fsr1h,w,c
 29521  0142AC  6EDA               	movwf	fsr2h,c
 29522  0142AE  0EFF               	movlw	255
 29523  0142B0  22DA               	addwfc	fsr2h,f,c
 29524  0142B2  500B               	movf	(btemp+10)^0,w,c
 29525  0142B4  26DE               	addwf	postinc2,f,c
 29526  0142B6  500C               	movf	(btemp+11)^0,w,c
 29527  0142B8  22DE               	addwfc	postinc2,f,c
 29528  0142BA  0E00               	movlw	0
 29529  0142BC  22DE               	addwfc	postinc2,f,c
 29530  0142BE  22DE               	addwfc	postinc2,f,c
 29531                           
 29532                           ;stkvar	_b @ sp[(-13)+-4]
 29533  0142C0  0EF1               	movlw	241
 29534  0142C2  24E1               	addwf	fsr1l,w,c
 29535  0142C4  6ED9               	movwf	fsr2l,c
 29536  0142C6  0EFF               	movlw	255
 29537  0142C8  20E2               	addwfc	fsr1h,w,c
 29538  0142CA  6EDA               	movwf	fsr2h,c
 29539  0142CC  50DF               	movf	indf2,w,c
 29540  0142CE  6E0C               	movwf	(btemp+11)^0,c
 29541                           
 29542                           ;stkvar	_a @ sp[(-13)+-8]
 29543  0142D0  0EEC               	movlw	236
 29544  0142D2  24E1               	addwf	fsr1l,w,c
 29545  0142D4  6ED9               	movwf	fsr2l,c
 29546  0142D6  0EFF               	movlw	255
 29547  0142D8  20E2               	addwfc	fsr1h,w,c
 29548  0142DA  6EDA               	movwf	fsr2h,c
 29549  0142DC  50DF               	movf	indf2,w,c
 29550  0142DE  020C               	mulwf	(btemp+11)^0,c
 29551                           
 29552                           ;stkvar	_temp @ sp[(-13)+8]
 29553  0142E0  0EFB               	movlw	-5
 29554  0142E2  006F FFCF FFE3     	movff	prodl,plusw1
 29555  0142E8  0EFC               	movlw	-4
 29556  0142EA  006F FFD3 FFE3     	movff	prodh,plusw1
 29557                           
 29558                           ;stkvar	_temp @ sp[(-13)+8]
 29559  0142F0  0EFB               	movlw	-5
 29560  0142F2  006F FF8C  F00B    	movff	plusw1,btemp+10
 29561  0142F8  0EFC               	movlw	-4
 29562  0142FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 29563                           
 29564                           ;stkvar	_prod @ sp[(-13)+0]
 29565  014300  50E1               	movf	fsr1l,w,c
 29566  014302  0FF3               	addlw	-13
 29567  014304  6ED9               	movwf	fsr2l,c
 29568  014306  50E2               	movf	fsr1h,w,c
 29569  014308  6EDA               	movwf	fsr2h,c
 29570  01430A  0EFF               	movlw	255
 29571  01430C  22DA               	addwfc	fsr2h,f,c
 29572  01430E  500B               	movf	(btemp+10)^0,w,c
 29573  014310  26DE               	addwf	postinc2,f,c
 29574  014312  500C               	movf	(btemp+11)^0,w,c
 29575  014314  22DE               	addwfc	postinc2,f,c
 29576  014316  0E00               	movlw	0
 29577  014318  22DE               	addwfc	postinc2,f,c
 29578  01431A  22DE               	addwfc	postinc2,f,c
 29579                           
 29580                           ;stkvar	_b @ sp[(-13)+-4]
 29581  01431C  0EF1               	movlw	241
 29582  01431E  24E1               	addwf	fsr1l,w,c
 29583  014320  6ED9               	movwf	fsr2l,c
 29584  014322  0EFF               	movlw	255
 29585  014324  20E2               	addwfc	fsr1h,w,c
 29586  014326  6EDA               	movwf	fsr2h,c
 29587  014328  50DF               	movf	indf2,w,c
 29588  01432A  6E0C               	movwf	(btemp+11)^0,c
 29589                           
 29590                           ;stkvar	_a @ sp[(-13)+-8]
 29591  01432C  0EED               	movlw	237
 29592  01432E  24E1               	addwf	fsr1l,w,c
 29593  014330  6ED9               	movwf	fsr2l,c
 29594  014332  0EFF               	movlw	255
 29595  014334  20E2               	addwfc	fsr1h,w,c
 29596  014336  6EDA               	movwf	fsr2h,c
 29597  014338  50DF               	movf	indf2,w,c
 29598  01433A  020C               	mulwf	(btemp+11)^0,c
 29599                           
 29600                           ;stkvar	_temp @ sp[(-13)+8]
 29601  01433C  0EFB               	movlw	-5
 29602  01433E  006F FFCF FFE3     	movff	prodl,plusw1
 29603  014344  0EFC               	movlw	-4
 29604  014346  006F FFD3 FFE3     	movff	prodh,plusw1
 29605                           
 29606                           ;stkvar	_temp @ sp[(-13)+8]
 29607  01434C  0EFB               	movlw	-5
 29608  01434E  006F FF8C  F00B    	movff	plusw1,btemp+10
 29609  014354  0EFC               	movlw	-4
 29610  014356  006F FF8C  F00C    	movff	plusw1,btemp+11
 29611  01435C  500B               	movf	(btemp+10)^0,w,c
 29612  01435E  6E05               	movwf	(btemp+4)^0,c
 29613  014360  500C               	movf	(btemp+11)^0,w,c
 29614  014362  6E06               	movwf	(btemp+5)^0,c
 29615  014364  6A07               	clrf	(btemp+6)^0,c
 29616  014366  6A08               	clrf	(btemp+7)^0,c
 29617  014368  0060  F01C  F008   	movff	btemp+6,btemp+7
 29618  01436E  0060  F018  F007   	movff	btemp+5,btemp+6
 29619  014374  0060  F014  F006   	movff	btemp+4,btemp+5
 29620  01437A  6A05               	clrf	(btemp+4)^0,c
 29621                           
 29622                           ;stkvar	_prod @ sp[(-13)+0]
 29623  01437C  50E1               	movf	fsr1l,w,c
 29624  01437E  0FF3               	addlw	-13
 29625  014380  6ED9               	movwf	fsr2l,c
 29626  014382  50E2               	movf	fsr1h,w,c
 29627  014384  6EDA               	movwf	fsr2h,c
 29628  014386  0EFF               	movlw	255
 29629  014388  22DA               	addwfc	fsr2h,f,c
 29630  01438A  5005               	movf	(btemp+4)^0,w,c
 29631  01438C  26DE               	addwf	postinc2,f,c
 29632  01438E  5006               	movf	(btemp+5)^0,w,c
 29633  014390  22DE               	addwfc	postinc2,f,c
 29634  014392  5007               	movf	(btemp+6)^0,w,c
 29635  014394  22DE               	addwfc	postinc2,f,c
 29636  014396  5008               	movf	(btemp+7)^0,w,c
 29637  014398  22DE               	addwfc	postinc2,f,c
 29638                           
 29639                           ;stkvar	_prod @ sp[(-13)+0]
 29640  01439A  50E1               	movf	fsr1l,w,c
 29641  01439C  0FF3               	addlw	-13
 29642  01439E  6ED9               	movwf	fsr2l,c
 29643  0143A0  50E2               	movf	fsr1h,w,c
 29644  0143A2  6EDA               	movwf	fsr2h,c
 29645  0143A4  0EFF               	movlw	255
 29646  0143A6  22DA               	addwfc	fsr2h,f,c
 29647                           
 29648                           ;stkvar	_grs @ sp[(-13)+4]
 29649  0143A8  0EFA               	movlw	250
 29650  0143AA  24E1               	addwf	fsr1l,w,c
 29651  0143AC  6EE9               	movwf	fsr0l,c
 29652  0143AE  0EFF               	movlw	255
 29653  0143B0  20E2               	addwfc	fsr1h,w,c
 29654  0143B2  6EEA               	movwf	fsr0h,c
 29655  0143B4  50EF               	movf	indf0,w,c
 29656  0143B6  26DE               	addwf	postinc2,f,c
 29657  0143B8  0E00               	movlw	0
 29658  0143BA  22DE               	addwfc	postinc2,f,c
 29659  0143BC  22DE               	addwfc	postinc2,f,c
 29660  0143BE  22DE               	addwfc	postinc2,f,c
 29661                           
 29662                           ;stkvar	_grs @ sp[(-13)+4]
 29663  0143C0  50E1               	movf	fsr1l,w,c
 29664  0143C2  0FF7               	addlw	-9
 29665  0143C4  6ED9               	movwf	fsr2l,c
 29666  0143C6  50E2               	movf	fsr1h,w,c
 29667  0143C8  6EDA               	movwf	fsr2h,c
 29668  0143CA  0EFF               	movlw	255
 29669  0143CC  22DA               	addwfc	fsr2h,f,c
 29670  0143CE  0E08               	movlw	8
 29671  0143D0                     u6935:
 29672  0143D0  90D8               	bcf	status,0,c
 29673  0143D2  36DE               	rlcf	postinc2,f,c
 29674  0143D4  36DE               	rlcf	postinc2,f,c
 29675  0143D6  36DE               	rlcf	postinc2,f,c
 29676  0143D8  36DD               	rlcf	postdec2,f,c
 29677  0143DA  52DD               	movf	postdec2,f,c
 29678  0143DC  52DD               	movf	postdec2,f,c
 29679  0143DE  2EE8               	decfsz	wreg,f,c
 29680  0143E0  D7F7               	goto	u6935
 29681  0143E2  0E82               	movlw	130
 29682  0143E4  6E0B               	movwf	(btemp+10)^0,c
 29683  0143E6  0EFF               	movlw	255
 29684  0143E8  6E0C               	movwf	(btemp+11)^0,c
 29685                           
 29686                           ;stkvar	_bexp @ sp[(-13)+10]
 29687  0143EA  0EFD               	movlw	-3
 29688  0143EC  50E3               	movf	plusw1,w,c
 29689  0143EE  6E09               	movwf	(btemp+8)^0,c
 29690  0143F0  6A0A               	clrf	(btemp+9)^0,c
 29691                           
 29692                           ;stkvar	_aexp @ sp[(-13)+11]
 29693  0143F2  0EFE               	movlw	-2
 29694  0143F4  50E3               	movf	plusw1,w,c
 29695  0143F6  2609               	addwf	(btemp+8)^0,f,c
 29696  0143F8  0E00               	movlw	0
 29697  0143FA  220A               	addwfc	(btemp+9)^0,f,c
 29698  0143FC  500B               	movf	(btemp+10)^0,w,c
 29699  0143FE  2609               	addwf	(btemp+8)^0,f,c
 29700  014400  500C               	movf	(btemp+11)^0,w,c
 29701  014402  220A               	addwfc	(btemp+9)^0,f,c
 29702                           
 29703                           ;stkvar	_temp @ sp[(-13)+8]
 29704  014404  0EFB               	movlw	-5
 29705  014406  0060  F027  FFE3   	movff	btemp+8,plusw1
 29706  01440C  0EFC               	movlw	-4
 29707  01440E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29708  014414  D021               	goto	l8634
 29709  014416                     l8624:
 29710                           
 29711                           ;stkvar	_prod @ sp[(-13)+0]
 29712  014416  90D8               	bcf	status,0,c
 29713  014418  0EF3               	movlw	-13
 29714  01441A  36E3               	rlcf	plusw1,f,c
 29715  01441C  0EF4               	movlw	-12
 29716  01441E  36E3               	rlcf	plusw1,f,c
 29717  014420  0EF5               	movlw	-11
 29718  014422  36E3               	rlcf	plusw1,f,c
 29719  014424  0EF6               	movlw	-10
 29720  014426  36E3               	rlcf	plusw1,f,c
 29721                           
 29722                           ;stkvar	_grs @ sp[(-13)+4]
 29723  014428  0EFA               	movlw	-6
 29724  01442A  AEE3               	btfss	plusw1,7,c
 29725  01442C  D002               	goto	l8630
 29726                           
 29727                           ;stkvar	_prod @ sp[(-13)+0]
 29728  01442E  0EF3               	movlw	-13
 29729  014430  80E3               	bsf	plusw1,0,c
 29730  014432                     l8630:
 29731                           
 29732                           ;stkvar	_grs @ sp[(-13)+4]
 29733  014432  90D8               	bcf	status,0,c
 29734  014434  0EF7               	movlw	-9
 29735  014436  36E3               	rlcf	plusw1,f,c
 29736  014438  0EF8               	movlw	-8
 29737  01443A  36E3               	rlcf	plusw1,f,c
 29738  01443C  0EF9               	movlw	-7
 29739  01443E  36E3               	rlcf	plusw1,f,c
 29740  014440  0EFA               	movlw	-6
 29741  014442  36E3               	rlcf	plusw1,f,c
 29742                           
 29743                           ;stkvar	_temp @ sp[(-13)+8]
 29744  014444  50E1               	movf	fsr1l,w,c
 29745  014446  0FFB               	addlw	-5
 29746  014448  6ED9               	movwf	fsr2l,c
 29747  01444A  50E2               	movf	fsr1h,w,c
 29748  01444C  6EDA               	movwf	fsr2h,c
 29749  01444E  0EFF               	movlw	255
 29750  014450  22DA               	addwfc	fsr2h,f,c
 29751  014452  06DE               	decf	postinc2,f,c
 29752  014454  0E00               	movlw	0
 29753  014456  5ADD               	subwfb	postdec2,f,c
 29754  014458                     l8634:
 29755                           
 29756                           ;stkvar	_prod @ sp[(-13)+0]
 29757  014458  0EF5               	movlw	-11
 29758  01445A  AEE3               	btfss	plusw1,7,c
 29759  01445C  D7DC               	goto	l8624
 29760                           
 29761                           ;stkvar	_aexp @ sp[(-13)+11]
 29762  01445E  0EFE               	movlw	-2
 29763  014460  6AE3               	clrf	plusw1,c
 29764                           
 29765                           ;stkvar	_grs @ sp[(-13)+4]
 29766  014462  0EFA               	movlw	-6
 29767  014464  AEE3               	btfss	plusw1,7,c
 29768  014466  D020               	goto	l8648
 29769                           
 29770                           ;stkvar	_grs @ sp[(-13)+4]
 29771  014468  50E1               	movf	fsr1l,w,c
 29772  01446A  0FF7               	addlw	-9
 29773  01446C  6ED9               	movwf	fsr2l,c
 29774  01446E  50E2               	movf	fsr1h,w,c
 29775  014470  6EDA               	movwf	fsr2h,c
 29776  014472  0EFF               	movlw	255
 29777  014474  22DA               	addwfc	fsr2h,f,c
 29778  014476  0EFF               	movlw	255
 29779  014478  14DE               	andwf	postinc2,w,c
 29780  01447A  6E09               	movwf	(btemp+8)^0,c
 29781  01447C  0EFF               	movlw	255
 29782  01447E  14DE               	andwf	postinc2,w,c
 29783  014480  6E0A               	movwf	(btemp+9)^0,c
 29784  014482  0EFF               	movlw	255
 29785  014484  14DE               	andwf	postinc2,w,c
 29786  014486  6E0B               	movwf	(btemp+10)^0,c
 29787  014488  0E7F               	movlw	127
 29788  01448A  14DE               	andwf	postinc2,w,c
 29789  01448C  6E0C               	movwf	(btemp+11)^0,c
 29790  01448E  5009               	movf	(btemp+8)^0,w,c
 29791  014490  100A               	iorwf	(btemp+9)^0,w,c
 29792  014492  100B               	iorwf	(btemp+10)^0,w,c
 29793  014494  100C               	iorwf	(btemp+11)^0,w,c
 29794  014496  B4D8               	btfsc	status,2,c
 29795  014498  D004               	goto	l8644
 29796  01449A                     u6970:
 29797                           
 29798                           ;stkvar	_aexp @ sp[(-13)+11]
 29799  01449A  0EFE               	movlw	-2
 29800  01449C  6AE3               	clrf	plusw1,c
 29801  01449E  2AE3               	incf	plusw1,f,c
 29802  0144A0  D003               	goto	l8648
 29803  0144A2                     l8644:
 29804                           
 29805                           ;stkvar	_prod @ sp[(-13)+0]
 29806  0144A2  0EF3               	movlw	-13
 29807  0144A4  B0E3               	btfsc	plusw1,0,c
 29808  0144A6  D7F9               	goto	u6970
 29809  0144A8                     l8648:
 29810                           
 29811                           ;stkvar	_aexp @ sp[(-13)+11]
 29812  0144A8  0EFE               	movlw	-2
 29813  0144AA  50E3               	movf	plusw1,w,c
 29814  0144AC  B4D8               	btfsc	status,2,c
 29815  0144AE  D036               	goto	l8658
 29816                           
 29817                           ;stkvar	_prod @ sp[(-13)+0]
 29818  0144B0  50E1               	movf	fsr1l,w,c
 29819  0144B2  0FF3               	addlw	-13
 29820  0144B4  6ED9               	movwf	fsr2l,c
 29821  0144B6  50E2               	movf	fsr1h,w,c
 29822  0144B8  6EDA               	movwf	fsr2h,c
 29823  0144BA  0EFF               	movlw	255
 29824  0144BC  22DA               	addwfc	fsr2h,f,c
 29825  0144BE  2ADE               	incf	postinc2,f,c
 29826  0144C0  0E00               	movlw	0
 29827  0144C2  22DE               	addwfc	postinc2,f,c
 29828  0144C4  22DE               	addwfc	postinc2,f,c
 29829  0144C6  22DE               	addwfc	postinc2,f,c
 29830                           
 29831                           ;stkvar	_prod @ sp[(-13)+0]
 29832  0144C8  0EF6               	movlw	-10
 29833  0144CA  A0E3               	btfss	plusw1,0,c
 29834  0144CC  D027               	goto	l8658
 29835  0144CE  0E01               	movlw	1
 29836  0144D0  6E0C               	movwf	(btemp+11)^0,c
 29837                           
 29838                           ;stkvar	_prod @ sp[(-13)+0]
 29839  0144D2  50E1               	movf	fsr1l,w,c
 29840  0144D4  0FF3               	addlw	-13
 29841  0144D6  6ED9               	movwf	fsr2l,c
 29842  0144D8  50E2               	movf	fsr1h,w,c
 29843  0144DA  6EDA               	movwf	fsr2h,c
 29844  0144DC  0EFF               	movlw	255
 29845  0144DE  22DA               	addwfc	fsr2h,f,c
 29846  0144E0  280C               	incf	(btemp+11)^0,w,c
 29847  0144E2  52DE               	movf	postinc2,f,c
 29848  0144E4  D008               	goto	u7010
 29849  0144E6                     u7015:
 29850  0144E6  52DE               	movf	postinc2,f,c
 29851  0144E8  90D8               	bcf	status,0,c
 29852  0144EA  BEDC               	btfsc	preinc2,7,c
 29853  0144EC  80D8               	bsf	status,0,c
 29854  0144EE  32DD               	rrcf	postdec2,f,c
 29855  0144F0  32DD               	rrcf	postdec2,f,c
 29856  0144F2  32DD               	rrcf	postdec2,f,c
 29857  0144F4  32DE               	rrcf	postinc2,f,c
 29858  0144F6                     u7010:
 29859  0144F6  2EE8               	decfsz	wreg,f,c
 29860  0144F8  D7F6               	goto	u7015
 29861                           
 29862                           ;stkvar	_temp @ sp[(-13)+8]
 29863  0144FA  0EFB               	movlw	-5
 29864  0144FC  50E3               	movf	plusw1,w,c
 29865  0144FE  0F01               	addlw	1
 29866  014500  6E01               	movwf	btemp^0,c
 29867  014502  0EFB               	movlw	-5
 29868  014504  0060  F007  FFE3   	movff	btemp,plusw1
 29869  01450A  6A01               	clrf	btemp^0,c
 29870  01450C  0EFC               	movlw	-4
 29871  01450E  50E3               	movf	plusw1,w,c
 29872  014510  2001               	addwfc	btemp^0,w,c
 29873  014512  6E01               	movwf	btemp^0,c
 29874  014514  0EFC               	movlw	-4
 29875  014516  0060  F007  FFE3   	movff	btemp,plusw1
 29876  01451C                     l8658:
 29877                           
 29878                           ;stkvar	_temp @ sp[(-13)+8]
 29879  01451C  0EFC               	movlw	-4
 29880  01451E  BEE3               	btfsc	plusw1,7,c
 29881  014520  D020               	goto	l8662
 29882  014522  0EFC               	movlw	-4
 29883  014524  50E3               	movf	plusw1,w,c
 29884  014526  E104               	bnz	u7020
 29885  014528  0EFB               	movlw	-5
 29886  01452A  28E3               	incf	plusw1,w,c
 29887  01452C  A0D8               	btfss	status,0,c
 29888  01452E  D019               	goto	l8662
 29889  014530                     u7020:
 29890  014530  0E00               	movlw	0
 29891  014532  6E09               	movwf	(btemp+8)^0,c
 29892  014534  0E00               	movlw	0
 29893  014536  6E0A               	movwf	(btemp+9)^0,c
 29894  014538  0E80               	movlw	128
 29895  01453A  6E0B               	movwf	(btemp+10)^0,c
 29896  01453C  0E7F               	movlw	127
 29897  01453E  6E0C               	movwf	(btemp+11)^0,c
 29898                           
 29899                           ;stkvar	_prod @ sp[(-13)+0]
 29900  014540  0EF3               	movlw	-13
 29901  014542  0060  F027  FFE3   	movff	btemp+8,plusw1
 29902  014548  0EF4               	movlw	-12
 29903  01454A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29904  014550  0EF5               	movlw	-11
 29905  014552  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29906  014558  0EF6               	movlw	-10
 29907  01455A  0060  F033  FFE3   	movff	btemp+11,plusw1
 29908  014560  D044               	goto	l8678
 29909  014562                     l8662:
 29910                           
 29911                           ;stkvar	_temp @ sp[(-13)+8]
 29912  014562  0EFC               	movlw	-4
 29913  014564  BEE3               	btfsc	plusw1,7,c
 29914  014566  D007               	goto	u7030
 29915  014568  0EFC               	movlw	-4
 29916  01456A  50E3               	movf	plusw1,w,c
 29917  01456C  E10F               	bnz	l8668
 29918  01456E  0EFB               	movlw	-5
 29919  014570  04E3               	decf	plusw1,w,c
 29920  014572  B0D8               	btfsc	status,0,c
 29921  014574  D00B               	goto	l8668
 29922  014576                     u7030:
 29923                           
 29924                           ;stkvar	_prod @ sp[(-13)+0]
 29925  014576  0EF3               	movlw	-13
 29926  014578  6AE3               	clrf	plusw1,c
 29927  01457A  0EF4               	movlw	-12
 29928  01457C  6AE3               	clrf	plusw1,c
 29929  01457E  0EF5               	movlw	-11
 29930  014580  6AE3               	clrf	plusw1,c
 29931  014582  0EF6               	movlw	-10
 29932  014584  6AE3               	clrf	plusw1,c
 29933                           
 29934                           ;stkvar	_sign @ sp[(-13)+12]
 29935  014586  0EFF               	movlw	-1
 29936  014588  6AE3               	clrf	plusw1,c
 29937  01458A  D02F               	goto	l8678
 29938  01458C                     l8668:
 29939                           
 29940                           ;stkvar	_temp @ sp[(-13)+8]
 29941                           ;stkvar	_bexp @ sp[(-13)+10]
 29942  01458C  0EFB               	movlw	-5
 29943  01458E  006F FF8C  F001    	movff	plusw1,btemp
 29944  014594  0EFD               	movlw	-3
 29945  014596  0060  F007  FFE3   	movff	btemp,plusw1
 29946                           
 29947                           ;stkvar	_prod @ sp[(-13)+0]
 29948  01459C  50E1               	movf	fsr1l,w,c
 29949  01459E  0FF3               	addlw	-13
 29950  0145A0  6ED9               	movwf	fsr2l,c
 29951  0145A2  50E2               	movf	fsr1h,w,c
 29952  0145A4  6EDA               	movwf	fsr2h,c
 29953  0145A6  0EFF               	movlw	255
 29954  0145A8  22DA               	addwfc	fsr2h,f,c
 29955  0145AA  0EFF               	movlw	255
 29956  0145AC  16DE               	andwf	postinc2,f,c
 29957  0145AE  0EFF               	movlw	255
 29958  0145B0  16DE               	andwf	postinc2,f,c
 29959  0145B2  0E7F               	movlw	127
 29960  0145B4  16DE               	andwf	postinc2,f,c
 29961  0145B6  0E00               	movlw	0
 29962  0145B8  16DE               	andwf	postinc2,f,c
 29963                           
 29964                           ;stkvar	_bexp @ sp[(-13)+10]
 29965  0145BA  0EFD               	movlw	-3
 29966  0145BC  A0E3               	btfss	plusw1,0,c
 29967  0145BE  D008               	goto	l8676
 29968                           
 29969                           ;stkvar	_prod @ sp[(-13)+0]
 29970  0145C0  0EF5               	movlw	245
 29971  0145C2  24E1               	addwf	fsr1l,w,c
 29972  0145C4  6ED9               	movwf	fsr2l,c
 29973  0145C6  0EFF               	movlw	255
 29974  0145C8  20E2               	addwfc	fsr1h,w,c
 29975  0145CA  6EDA               	movwf	fsr2h,c
 29976  0145CC  0E00               	movlw	0
 29977  0145CE  8EDB               	bsf	plusw2,7,c
 29978  0145D0                     l8676:
 29979                           
 29980                           ;stkvar	_prod @ sp[(-13)+0]
 29981  0145D0  0EF6               	movlw	246
 29982  0145D2  24E1               	addwf	fsr1l,w,c
 29983  0145D4  6ED9               	movwf	fsr2l,c
 29984  0145D6  0EFF               	movlw	255
 29985  0145D8  20E2               	addwfc	fsr1h,w,c
 29986  0145DA  6EDA               	movwf	fsr2h,c
 29987                           
 29988                           ;stkvar	_bexp @ sp[(-13)+10]
 29989  0145DC  0EFD               	movlw	-3
 29990  0145DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 29991  0145E4  90D8               	bcf	status,0,c
 29992  0145E6  300C               	rrcf	(btemp+11)^0,w,c
 29993  0145E8  6EDF               	movwf	indf2,c
 29994  0145EA                     l8678:
 29995                           
 29996                           ;stkvar	_sign @ sp[(-13)+12]
 29997  0145EA  0EFF               	movlw	-1
 29998  0145EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 29999                           
 30000                           ;stkvar	_prod @ sp[(-13)+0]
 30001  0145F2  0EF6               	movlw	246
 30002  0145F4  24E1               	addwf	fsr1l,w,c
 30003  0145F6  6ED9               	movwf	fsr2l,c
 30004  0145F8  0EFF               	movlw	255
 30005  0145FA  20E2               	addwfc	fsr1h,w,c
 30006  0145FC  6EDA               	movwf	fsr2h,c
 30007  0145FE  500C               	movf	(btemp+11)^0,w,c
 30008  014600  12DF               	iorwf	indf2,f,c
 30009                           
 30010                           ;stkvar	_prod @ sp[(-13)+0]
 30011  014602  0EF3               	movlw	-13
 30012  014604  006F FF8C  F001    	movff	plusw1,btemp
 30013  01460A  0EF4               	movlw	-12
 30014  01460C  006F FF8C  F002    	movff	plusw1,btemp+1
 30015  014612  0EF5               	movlw	-11
 30016  014614  006F FF8C  F003    	movff	plusw1,btemp+2
 30017  01461A  0EF6               	movlw	-10
 30018  01461C  006F FF8C  F004    	movff	plusw1,btemp+3
 30019  014622                     l3099:
 30020                           
 30021                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 30022  014622  0EEB               	movlw	235
 30023  014624  26E1               	addwf	fsr1l,f,c
 30024  014626  0EFF               	movlw	255
 30025  014628  22E2               	addwfc	fsr1h,f,c
 30026  01462A  0012               	return		;funcret
 30027  01462C                     __end_of___flmul:
 30028                           	opt callstack 0
 30029                           
 30030 ;; *************** function _SYSTEM_Initialize *****************
 30031 ;; Defined at:
 30032 ;;		line 50 in file "mcc_generated_files/mcc.c"
 30033 ;; Parameters:    Size  Location     Type
 30034 ;;		None
 30035 ;; Auto vars:     Size  Location     Type
 30036 ;;		None
 30037 ;; Return value:  Size  Location     Type
 30038 ;;                  1  [STACK] void 
 30039 ;; Registers used:
 30040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 30041 ;; Tracked objects:
 30042 ;;		On entry : 0/0
 30043 ;;		On exit  : 3F/3C
 30044 ;;		Unchanged: 0/0
 30045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30050 ;;Total ram usage:        0 bytes
 30051 ;; Hardware stack levels used:    1
 30052 ;; Hardware stack levels required when called:   17
 30053 ;; This function calls:
 30054 ;;		_ADCC_Initialize
 30055 ;;		_CLKREF_Initialize
 30056 ;;		_DMA1_Initialize
 30057 ;;		_DMA2_Initialize
 30058 ;;		_EXT_INT_Initialize
 30059 ;;		_FVR_Initialize
 30060 ;;		_INTERRUPT_Initialize
 30061 ;;		_OSCILLATOR_Initialize
 30062 ;;		_PIN_MANAGER_Initialize
 30063 ;;		_PMD_Initialize
 30064 ;;		_PWM8_Initialize
 30065 ;;		_SPI1_Initialize
 30066 ;;		_TMR2_Initialize
 30067 ;;		_TMR3_Initialize
 30068 ;;		_TMR5_Initialize
 30069 ;;		_TMR6_Initialize
 30070 ;;		_UART1_Initialize
 30071 ;;		_UART2_Initialize
 30072 ;; This function is called by:
 30073 ;;		_main
 30074 ;; This function uses a reentrant model
 30075 ;;
 30076                           
 30077                           	psect	text114
 30078  01B822                     __ptext114:
 30079                           	opt callstack 0
 30080  01B822                     _SYSTEM_Initialize:
 30081                           	opt callstack 13
 30082                           
 30083                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 30084                           
 30085                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30086                           ;incstack = 0
 30087  01B822  ECF5  F0D9         	call	_INTERRUPT_Initialize	;wreg free
 30088                           
 30089                           ; BSR set to: 57
 30090                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 30091  01B826  EC7E  F0E2         	call	_PMD_Initialize	;wreg free
 30092                           
 30093                           ; BSR set to: 57
 30094                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 30095  01B82A  EC54  F0D7         	call	_PIN_MANAGER_Initialize	;wreg free
 30096                           
 30097                           ; BSR set to: 58
 30098                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 30099  01B82E  EC73  F0E2         	call	_OSCILLATOR_Initialize	;wreg free
 30100                           
 30101                           ; BSR set to: 57
 30102                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 30103  01B832  EC01  F0E3         	call	_FVR_Initialize	;wreg free
 30104                           
 30105                           ; BSR set to: 62
 30106                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 30107  01B836  EC8B  F0D9         	call	_ADCC_Initialize	;wreg free
 30108                           
 30109                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 30110  01B83A  EC51  F0E2         	call	_TMR2_Initialize	;wreg free
 30111                           
 30112                           ; BSR set to: 57
 30113                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 30114  01B83E  EC68  F0E2         	call	_PWM8_Initialize	;wreg free
 30115                           
 30116                           ; BSR set to: 63
 30117                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 30118  01B842  EC0A  F0DF         	call	_EXT_INT_Initialize	;wreg free
 30119                           
 30120                           ; BSR set to: 57
 30121                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 30122  01B846  ECDE  F0DF         	call	_TMR6_Initialize	;wreg free
 30123                           
 30124                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 30125  01B84A  ECA2  F0DC         	call	_TMR3_Initialize	;wreg free
 30126                           
 30127                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 30128  01B84E  EC7E  F0DC         	call	_TMR5_Initialize	;wreg free
 30129                           
 30130                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 30131  01B852  EC5A  F0DC         	call	_UART1_Initialize	;wreg free
 30132                           
 30133                           ; BSR set to: 57
 30134                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 30135  01B856  ECBC  F0DA         	call	_UART2_Initialize	;wreg free
 30136                           
 30137                           ; BSR set to: 57
 30138                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 30139  01B85A  EC5D  F0E2         	call	_SPI1_Initialize	;wreg free
 30140                           
 30141                           ; BSR set to: 61
 30142                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 30143  01B85E  EC46  F0DB         	call	_DMA2_Initialize	;wreg free
 30144                           
 30145                           ; BSR set to: 59
 30146                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 30147  01B862  EC56  F0D9         	call	_DMA1_Initialize	;wreg free
 30148                           
 30149                           ; BSR set to: 59
 30150                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 30151  01B866  ECD5  F0E2         	call	_CLKREF_Initialize	;wreg free
 30152                           
 30153                           ; BSR set to: 60
 30154                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30155  01B86A  0012               	return		;funcret
 30156  01B86C                     __end_of_SYSTEM_Initialize:
 30157                           	opt callstack 0
 30158                           
 30159 ;; *************** function _UART2_Initialize *****************
 30160 ;; Defined at:
 30161 ;;		line 78 in file "mcc_generated_files/uart2.c"
 30162 ;; Parameters:    Size  Location     Type
 30163 ;;		None
 30164 ;; Auto vars:     Size  Location     Type
 30165 ;;		None
 30166 ;; Return value:  Size  Location     Type
 30167 ;;                  1  [STACK] void 
 30168 ;; Registers used:
 30169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30170 ;; Tracked objects:
 30171 ;;		On entry : 3F/39
 30172 ;;		On exit  : 3F/39
 30173 ;;		Unchanged: 0/0
 30174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30179 ;;Total ram usage:        0 bytes
 30180 ;; Hardware stack levels used:    1
 30181 ;; Hardware stack levels required when called:   16
 30182 ;; This function calls:
 30183 ;;		_UART2_SetRxInterruptHandler
 30184 ;;		_UART2_SetTxInterruptHandler
 30185 ;; This function is called by:
 30186 ;;		_SYSTEM_Initialize
 30187 ;; This function uses a reentrant model
 30188 ;;
 30189                           
 30190                           	psect	text115
 30191  01B578                     __ptext115:
 30192                           	opt callstack 0
 30193  01B578                     _UART2_Initialize:
 30194                           	opt callstack 13
 30195                           
 30196                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 30197                           
 30198                           ; BSR set to: 60
 30199                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30200                           ;incstack = 0
 30201  01B578  0139               	movlb	57	; () banked
 30202  01B57A  9596               	bcf	150,2,b	;volatile
 30203                           
 30204                           ; BSR set to: 57
 30205                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 30206  01B57C  0E9E               	movlw	low _UART2_Receive_ISR
 30207  01B57E  6EE6               	movwf	postinc1,c
 30208  01B580  0EC3               	movlw	high _UART2_Receive_ISR
 30209  01B582  6EE6               	movwf	postinc1,c
 30210  01B584  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 30211  01B586  6EE6               	movwf	postinc1,c
 30212  01B588  EC2F  F0E0         	call	_UART2_SetRxInterruptHandler	;wreg free
 30213                           
 30214                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 30215  01B58C  0139               	movlb	57	; () banked
 30216  01B58E  9796               	bcf	150,3,b	;volatile
 30217                           
 30218                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 30219  01B590  0E90               	movlw	low _UART2_Transmit_ISR
 30220  01B592  6EE6               	movwf	postinc1,c
 30221  01B594  0EBF               	movlw	high _UART2_Transmit_ISR
 30222  01B596  6EE6               	movwf	postinc1,c
 30223  01B598  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 30224  01B59A  6EE6               	movwf	postinc1,c
 30225  01B59C  EC1B  F0E0         	call	_UART2_SetTxInterruptHandler	;wreg free
 30226                           
 30227                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 30228  01B5A0  013D               	movlb	61	; () banked
 30229  01B5A2  6BD4               	clrf	212,b	;volatile
 30230                           
 30231                           ; BSR set to: 61
 30232                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 30233  01B5A4  6BD6               	clrf	214,b	;volatile
 30234                           
 30235                           ; BSR set to: 61
 30236                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 30237  01B5A6  6BD8               	clrf	216,b	;volatile
 30238                           
 30239                           ; BSR set to: 61
 30240                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 30241  01B5A8  0EB0               	movlw	176
 30242  01B5AA  6FDA               	movwf	218,b	;volatile
 30243                           
 30244                           ; BSR set to: 61
 30245                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 30246  01B5AC  0E80               	movlw	128
 30247  01B5AE  6FDB               	movwf	219,b	;volatile
 30248                           
 30249                           ; BSR set to: 61
 30250                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 30251  01B5B0  6BDC               	clrf	220,b	;volatile
 30252                           
 30253                           ; BSR set to: 61
 30254                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 30255  01B5B2  0E82               	movlw	130
 30256  01B5B4  6FDD               	movwf	221,b	;volatile
 30257                           
 30258                           ; BSR set to: 61
 30259                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 30260  01B5B6  0E06               	movlw	6
 30261  01B5B8  6FDE               	movwf	222,b	;volatile
 30262                           
 30263                           ; BSR set to: 61
 30264                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 30265  01B5BA  6BDF               	clrf	223,b	;volatile
 30266                           
 30267                           ; BSR set to: 61
 30268                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 30269  01B5BC  6BE0               	clrf	224,b	;volatile
 30270                           
 30271                           ; BSR set to: 61
 30272                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 30273  01B5BE  6BE1               	clrf	225,b	;volatile
 30274                           
 30275                           ; BSR set to: 61
 30276                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 30277  01B5C0  6BE2               	clrf	226,b	;volatile
 30278                           
 30279                           ; BSR set to: 61
 30280                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 30281  01B5C2  0100               	movlb	0	; () banked
 30282  01B5C4  6BAC               	clrf	_uart2TxHead& (0+255),b	;volatile
 30283                           
 30284                           ; BSR set to: 0
 30285                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 30286  01B5C6  6A46               	clrf	_uart2TxTail^0,c	;volatile
 30287                           
 30288                           ; BSR set to: 0
 30289                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 30290  01B5C8  0E40               	movlw	64
 30291  01B5CA  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 30292                           
 30293                           ; BSR set to: 0
 30294                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 30295  01B5CC  6A44               	clrf	_uart2RxHead^0,c	;volatile
 30296                           
 30297                           ; BSR set to: 0
 30298                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 30299  01B5CE  6BAB               	clrf	_uart2RxTail& (0+255),b	;volatile
 30300                           
 30301                           ; BSR set to: 0
 30302                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 30303  01B5D0  6BAA               	clrf	_uart2RxCount& (0+255),b	;volatile
 30304                           
 30305                           ; BSR set to: 0
 30306                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 30307  01B5D2  0139               	movlb	57	; () banked
 30308  01B5D4  8596               	bsf	150,2,b	;volatile
 30309                           
 30310                           ; BSR set to: 57
 30311                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 30312  01B5D6  0012               	return		;funcret
 30313  01B5D8                     __end_of_UART2_Initialize:
 30314                           	opt callstack 0
 30315                           
 30316 ;; *************** function _UART2_SetTxInterruptHandler *****************
 30317 ;; Defined at:
 30318 ;;		line 252 in file "mcc_generated_files/uart2.c"
 30319 ;; Parameters:    Size  Location     Type
 30320 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30321 ;;		 -> UART2_Transmit_ISR(1), 
 30322 ;; Auto vars:     Size  Location     Type
 30323 ;;		None
 30324 ;; Return value:  Size  Location     Type
 30325 ;;                  1  [STACK] void 
 30326 ;; Registers used:
 30327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30328 ;; Tracked objects:
 30329 ;;		On entry : 3F/39
 30330 ;;		On exit  : 0/0
 30331 ;;		Unchanged: 0/0
 30332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30337 ;;Total ram usage:        0 bytes
 30338 ;; Hardware stack levels used:    1
 30339 ;; Hardware stack levels required when called:   15
 30340 ;; This function calls:
 30341 ;;		Nothing
 30342 ;; This function is called by:
 30343 ;;		_UART2_Initialize
 30344 ;; This function uses a reentrant model
 30345 ;;
 30346                           
 30347                           	psect	text116
 30348  01C036                     __ptext116:
 30349                           	opt callstack 0
 30350  01C036                     _UART2_SetTxInterruptHandler:
 30351                           	opt callstack 13
 30352                           
 30353                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 30354                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30355                           
 30356                           ; BSR set to: 57
 30357                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30358                           ;incstack = 0
 30359  01C036  50E1               	movf	fsr1l,w,c
 30360  01C038  0FFD               	addlw	-3
 30361  01C03A  6ED9               	movwf	fsr2l,c
 30362  01C03C  50E2               	movf	fsr1h,w,c
 30363  01C03E  6EDA               	movwf	fsr2h,c
 30364  01C040  0EFF               	movlw	255
 30365  01C042  22DA               	addwfc	fsr2h,f,c
 30366  01C044  006F FF78  F08E    	movff	postinc2,_UART2_TxInterruptHandler
 30367  01C04A  006F FF78  F08F    	movff	postinc2,_UART2_TxInterruptHandler+1
 30368  01C050  006F FF74  F090    	movff	postdec2,_UART2_TxInterruptHandler+2
 30369                           
 30370                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30371  01C056  52E5               	movf	postdec1,f,c
 30372  01C058  52E5               	movf	postdec1,f,c
 30373  01C05A  52E5               	movf	postdec1,f,c
 30374  01C05C  0012               	return		;funcret
 30375  01C05E                     __end_of_UART2_SetTxInterruptHandler:
 30376                           	opt callstack 0
 30377                           
 30378 ;; *************** function _UART2_SetRxInterruptHandler *****************
 30379 ;; Defined at:
 30380 ;;		line 248 in file "mcc_generated_files/uart2.c"
 30381 ;; Parameters:    Size  Location     Type
 30382 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30383 ;;		 -> UART2_Receive_ISR(1), 
 30384 ;; Auto vars:     Size  Location     Type
 30385 ;;		None
 30386 ;; Return value:  Size  Location     Type
 30387 ;;                  1  [STACK] void 
 30388 ;; Registers used:
 30389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30390 ;; Tracked objects:
 30391 ;;		On entry : 3F/39
 30392 ;;		On exit  : 0/0
 30393 ;;		Unchanged: 0/0
 30394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30399 ;;Total ram usage:        0 bytes
 30400 ;; Hardware stack levels used:    1
 30401 ;; Hardware stack levels required when called:   15
 30402 ;; This function calls:
 30403 ;;		Nothing
 30404 ;; This function is called by:
 30405 ;;		_UART2_Initialize
 30406 ;; This function uses a reentrant model
 30407 ;;
 30408                           
 30409                           	psect	text117
 30410  01C05E                     __ptext117:
 30411                           	opt callstack 0
 30412  01C05E                     _UART2_SetRxInterruptHandler:
 30413                           	opt callstack 13
 30414                           
 30415                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 30416                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30417                           
 30418                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30419                           ;incstack = 0
 30420  01C05E  50E1               	movf	fsr1l,w,c
 30421  01C060  0FFD               	addlw	-3
 30422  01C062  6ED9               	movwf	fsr2l,c
 30423  01C064  50E2               	movf	fsr1h,w,c
 30424  01C066  6EDA               	movwf	fsr2h,c
 30425  01C068  0EFF               	movlw	255
 30426  01C06A  22DA               	addwfc	fsr2h,f,c
 30427  01C06C  006F FF78  F091    	movff	postinc2,_UART2_RxInterruptHandler
 30428  01C072  006F FF78  F092    	movff	postinc2,_UART2_RxInterruptHandler+1
 30429  01C078  006F FF74  F093    	movff	postdec2,_UART2_RxInterruptHandler+2
 30430                           
 30431                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30432  01C07E  52E5               	movf	postdec1,f,c
 30433  01C080  52E5               	movf	postdec1,f,c
 30434  01C082  52E5               	movf	postdec1,f,c
 30435  01C084  0012               	return		;funcret
 30436  01C086                     __end_of_UART2_SetRxInterruptHandler:
 30437                           	opt callstack 0
 30438                           
 30439 ;; *************** function _UART1_Initialize *****************
 30440 ;; Defined at:
 30441 ;;		line 75 in file "mcc_generated_files/uart1.c"
 30442 ;; Parameters:    Size  Location     Type
 30443 ;;		None
 30444 ;; Auto vars:     Size  Location     Type
 30445 ;;		None
 30446 ;; Return value:  Size  Location     Type
 30447 ;;                  1  [STACK] void 
 30448 ;; Registers used:
 30449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30450 ;; Tracked objects:
 30451 ;;		On entry : 0/39
 30452 ;;		On exit  : 3F/39
 30453 ;;		Unchanged: 0/0
 30454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30459 ;;Total ram usage:        0 bytes
 30460 ;; Hardware stack levels used:    1
 30461 ;; Hardware stack levels required when called:   16
 30462 ;; This function calls:
 30463 ;;		_UART1_SetRxInterruptHandler
 30464 ;; This function is called by:
 30465 ;;		_SYSTEM_Initialize
 30466 ;; This function uses a reentrant model
 30467 ;;
 30468                           
 30469                           	psect	text118
 30470  01B8B4                     __ptext118:
 30471                           	opt callstack 0
 30472  01B8B4                     _UART1_Initialize:
 30473                           	opt callstack 13
 30474                           
 30475                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 30476                           
 30477                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30478                           ;incstack = 0
 30479  01B8B4  0139               	movlb	57	; () banked
 30480  01B8B6  9793               	bcf	147,3,b	;volatile
 30481                           
 30482                           ; BSR set to: 57
 30483                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 30484  01B8B8  0E5C               	movlw	low _UART1_Receive_ISR
 30485  01B8BA  6EE6               	movwf	postinc1,c
 30486  01B8BC  0EC3               	movlw	high _UART1_Receive_ISR
 30487  01B8BE  6EE6               	movwf	postinc1,c
 30488  01B8C0  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 30489  01B8C2  6EE6               	movwf	postinc1,c
 30490  01B8C4  EC43  F0E0         	call	_UART1_SetRxInterruptHandler	;wreg free
 30491                           
 30492                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 30493  01B8C8  013D               	movlb	61	; () banked
 30494  01B8CA  6BEC               	clrf	236,b	;volatile
 30495                           
 30496                           ; BSR set to: 61
 30497                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 30498  01B8CC  6BED               	clrf	237,b	;volatile
 30499                           
 30500                           ; BSR set to: 61
 30501                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 30502  01B8CE  6BEE               	clrf	238,b	;volatile
 30503                           
 30504                           ; BSR set to: 61
 30505                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 30506  01B8D0  6BEF               	clrf	239,b	;volatile
 30507                           
 30508                           ; BSR set to: 61
 30509                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 30510  01B8D2  6BF0               	clrf	240,b	;volatile
 30511                           
 30512                           ; BSR set to: 61
 30513                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 30514  01B8D4  6BF1               	clrf	241,b	;volatile
 30515                           
 30516                           ; BSR set to: 61
 30517                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 30518  01B8D6  0EB0               	movlw	176
 30519  01B8D8  6FF2               	movwf	242,b	;volatile
 30520                           
 30521                           ; BSR set to: 61
 30522                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 30523  01B8DA  0E80               	movlw	128
 30524  01B8DC  6FF3               	movwf	243,b	;volatile
 30525                           
 30526                           ; BSR set to: 61
 30527                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 30528  01B8DE  6BF4               	clrf	244,b	;volatile
 30529                           
 30530                           ; BSR set to: 61
 30531                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 30532  01B8E0  0E8A               	movlw	138
 30533  01B8E2  6FF5               	movwf	245,b	;volatile
 30534                           
 30535                           ; BSR set to: 61
 30536                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 30537  01B8E4  6BF6               	clrf	246,b	;volatile
 30538                           
 30539                           ; BSR set to: 61
 30540                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 30541  01B8E6  6BF7               	clrf	247,b	;volatile
 30542                           
 30543                           ; BSR set to: 61
 30544                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 30545  01B8E8  6BF8               	clrf	248,b	;volatile
 30546                           
 30547                           ; BSR set to: 61
 30548                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 30549  01B8EA  6BF9               	clrf	249,b	;volatile
 30550                           
 30551                           ; BSR set to: 61
 30552                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 30553  01B8EC  6BFA               	clrf	250,b	;volatile
 30554                           
 30555                           ; BSR set to: 61
 30556                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 30557  01B8EE  6A47               	clrf	_uart1RxHead^0,c	;volatile
 30558                           
 30559                           ; BSR set to: 61
 30560                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 30561  01B8F0  0100               	movlb	0	; () banked
 30562  01B8F2  6BAE               	clrf	_uart1RxTail& (0+255),b	;volatile
 30563                           
 30564                           ; BSR set to: 0
 30565                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 30566  01B8F4  6BAD               	clrf	_uart1RxCount& (0+255),b	;volatile
 30567                           
 30568                           ; BSR set to: 0
 30569                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 30570  01B8F6  0139               	movlb	57	; () banked
 30571  01B8F8  8793               	bsf	147,3,b	;volatile
 30572                           
 30573                           ; BSR set to: 57
 30574                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 30575  01B8FA  0012               	return		;funcret
 30576  01B8FC                     __end_of_UART1_Initialize:
 30577                           	opt callstack 0
 30578                           
 30579 ;; *************** function _UART1_SetRxInterruptHandler *****************
 30580 ;; Defined at:
 30581 ;;		line 207 in file "mcc_generated_files/uart1.c"
 30582 ;; Parameters:    Size  Location     Type
 30583 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30584 ;;		 -> UART1_Receive_ISR(1), 
 30585 ;; Auto vars:     Size  Location     Type
 30586 ;;		None
 30587 ;; Return value:  Size  Location     Type
 30588 ;;                  1  [STACK] void 
 30589 ;; Registers used:
 30590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30591 ;; Tracked objects:
 30592 ;;		On entry : 3F/39
 30593 ;;		On exit  : 0/0
 30594 ;;		Unchanged: 0/0
 30595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30600 ;;Total ram usage:        0 bytes
 30601 ;; Hardware stack levels used:    1
 30602 ;; Hardware stack levels required when called:   15
 30603 ;; This function calls:
 30604 ;;		Nothing
 30605 ;; This function is called by:
 30606 ;;		_UART1_Initialize
 30607 ;; This function uses a reentrant model
 30608 ;;
 30609                           
 30610                           	psect	text119
 30611  01C086                     __ptext119:
 30612                           	opt callstack 0
 30613  01C086                     _UART1_SetRxInterruptHandler:
 30614                           	opt callstack 13
 30615                           
 30616                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 30617                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30618                           
 30619                           ; BSR set to: 57
 30620                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30621                           ;incstack = 0
 30622  01C086  50E1               	movf	fsr1l,w,c
 30623  01C088  0FFD               	addlw	-3
 30624  01C08A  6ED9               	movwf	fsr2l,c
 30625  01C08C  50E2               	movf	fsr1h,w,c
 30626  01C08E  6EDA               	movwf	fsr2h,c
 30627  01C090  0EFF               	movlw	255
 30628  01C092  22DA               	addwfc	fsr2h,f,c
 30629  01C094  006F FF78  F08B    	movff	postinc2,_UART1_RxInterruptHandler
 30630  01C09A  006F FF78  F08C    	movff	postinc2,_UART1_RxInterruptHandler+1
 30631  01C0A0  006F FF74  F08D    	movff	postdec2,_UART1_RxInterruptHandler+2
 30632                           
 30633                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30634  01C0A6  52E5               	movf	postdec1,f,c
 30635  01C0A8  52E5               	movf	postdec1,f,c
 30636  01C0AA  52E5               	movf	postdec1,f,c
 30637  01C0AC  0012               	return		;funcret
 30638  01C0AE                     __end_of_UART1_SetRxInterruptHandler:
 30639                           	opt callstack 0
 30640                           
 30641 ;; *************** function _TMR6_Initialize *****************
 30642 ;; Defined at:
 30643 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 30644 ;; Parameters:    Size  Location     Type
 30645 ;;		None
 30646 ;; Auto vars:     Size  Location     Type
 30647 ;;		None
 30648 ;; Return value:  Size  Location     Type
 30649 ;;                  1  [STACK] void 
 30650 ;; Registers used:
 30651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30652 ;; Tracked objects:
 30653 ;;		On entry : 3F/39
 30654 ;;		On exit  : 0/0
 30655 ;;		Unchanged: 0/0
 30656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30661 ;;Total ram usage:        0 bytes
 30662 ;; Hardware stack levels used:    1
 30663 ;; Hardware stack levels required when called:   16
 30664 ;; This function calls:
 30665 ;;		_TMR6_SetInterruptHandler
 30666 ;; This function is called by:
 30667 ;;		_SYSTEM_Initialize
 30668 ;; This function uses a reentrant model
 30669 ;;
 30670                           
 30671                           	psect	text120
 30672  01BFBC                     __ptext120:
 30673                           	opt callstack 0
 30674  01BFBC                     _TMR6_Initialize:
 30675                           	opt callstack 13
 30676                           
 30677                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 30678                           
 30679                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30680                           ;incstack = 0
 30681  01BFBC  0E01               	movlw	1
 30682  01BFBE  6E96               	movwf	150,c	;volatile
 30683                           
 30684                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 30685  01BFC0  6A95               	clrf	149,c	;volatile
 30686                           
 30687                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 30688  01BFC2  6A97               	clrf	151,c	;volatile
 30689                           
 30690                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 30691  01BFC4  0E7C               	movlw	124
 30692  01BFC6  6E93               	movwf	147,c	;volatile
 30693                           
 30694                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 30695  01BFC8  6A92               	clrf	146,c	;volatile
 30696                           
 30697                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 30698  01BFCA  0139               	movlb	57	; () banked
 30699  01BFCC  91A9               	bcf	169,0,b	;volatile
 30700                           
 30701                           ; BSR set to: 57
 30702                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 30703  01BFCE  8199               	bsf	153,0,b	;volatile
 30704                           
 30705                           ; BSR set to: 57
 30706                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 30707  01BFD0  0E8A               	movlw	low _TMR6_DefaultInterruptHandler
 30708  01BFD2  6EE6               	movwf	postinc1,c
 30709  01BFD4  0EB7               	movlw	high _TMR6_DefaultInterruptHandler
 30710  01BFD6  6EE6               	movwf	postinc1,c
 30711  01BFD8  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 30712  01BFDA  6EE6               	movwf	postinc1,c
 30713  01BFDC  EC57  F0E0         	call	_TMR6_SetInterruptHandler	;wreg free
 30714                           
 30715                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 30716  01BFE0  0EE0               	movlw	224
 30717  01BFE2  6E94               	movwf	148,c	;volatile
 30718                           
 30719                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30720  01BFE4  0012               	return		;funcret
 30721  01BFE6                     __end_of_TMR6_Initialize:
 30722                           	opt callstack 0
 30723                           
 30724 ;; *************** function _TMR6_SetInterruptHandler *****************
 30725 ;; Defined at:
 30726 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 30727 ;; Parameters:    Size  Location     Type
 30728 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30729 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 30730 ;; Auto vars:     Size  Location     Type
 30731 ;;		None
 30732 ;; Return value:  Size  Location     Type
 30733 ;;                  1  [STACK] void 
 30734 ;; Registers used:
 30735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30736 ;; Tracked objects:
 30737 ;;		On entry : 3F/39
 30738 ;;		On exit  : 0/0
 30739 ;;		Unchanged: 0/0
 30740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30745 ;;Total ram usage:        0 bytes
 30746 ;; Hardware stack levels used:    1
 30747 ;; Hardware stack levels required when called:   15
 30748 ;; This function calls:
 30749 ;;		Nothing
 30750 ;; This function is called by:
 30751 ;;		_TMR6_Initialize
 30752 ;; This function uses a reentrant model
 30753 ;;
 30754                           
 30755                           	psect	text121
 30756  01C0AE                     __ptext121:
 30757                           	opt callstack 0
 30758  01C0AE                     _TMR6_SetInterruptHandler:
 30759                           	opt callstack 13
 30760                           
 30761                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 30762                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30763                           
 30764                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30765                           ;incstack = 0
 30766  01C0AE  50E1               	movf	fsr1l,w,c
 30767  01C0B0  0FFD               	addlw	-3
 30768  01C0B2  6ED9               	movwf	fsr2l,c
 30769  01C0B4  50E2               	movf	fsr1h,w,c
 30770  01C0B6  6EDA               	movwf	fsr2h,c
 30771  01C0B8  0EFF               	movlw	255
 30772  01C0BA  22DA               	addwfc	fsr2h,f,c
 30773  01C0BC  006F FF78  F082    	movff	postinc2,_TMR6_InterruptHandler
 30774  01C0C2  006F FF78  F083    	movff	postinc2,_TMR6_InterruptHandler+1
 30775  01C0C8  006F FF74  F084    	movff	postdec2,_TMR6_InterruptHandler+2
 30776                           
 30777                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30778  01C0CE  52E5               	movf	postdec1,f,c
 30779  01C0D0  52E5               	movf	postdec1,f,c
 30780  01C0D2  52E5               	movf	postdec1,f,c
 30781  01C0D4  0012               	return		;funcret
 30782  01C0D6                     __end_of_TMR6_SetInterruptHandler:
 30783                           	opt callstack 0
 30784                           
 30785 ;; *************** function _TMR5_Initialize *****************
 30786 ;; Defined at:
 30787 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 30788 ;; Parameters:    Size  Location     Type
 30789 ;;		None
 30790 ;; Auto vars:     Size  Location     Type
 30791 ;;		None
 30792 ;; Return value:  Size  Location     Type
 30793 ;;                  1  [STACK] void 
 30794 ;; Registers used:
 30795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 30796 ;; Tracked objects:
 30797 ;;		On entry : 0/39
 30798 ;;		On exit  : 0/0
 30799 ;;		Unchanged: 0/0
 30800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30805 ;;Total ram usage:        0 bytes
 30806 ;; Hardware stack levels used:    1
 30807 ;; Hardware stack levels required when called:   16
 30808 ;; This function calls:
 30809 ;;		_TMR5_SetInterruptHandler
 30810 ;; This function is called by:
 30811 ;;		_SYSTEM_Initialize
 30812 ;; This function uses a reentrant model
 30813 ;;
 30814                           
 30815                           	psect	text122
 30816  01B8FC                     __ptext122:
 30817                           	opt callstack 0
 30818  01B8FC                     _TMR5_Initialize:
 30819                           	opt callstack 13
 30820                           
 30821                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 30822                           
 30823                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30824                           ;incstack = 0
 30825  01B8FC  6A9B               	clrf	155,c	;volatile
 30826                           
 30827                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 30828  01B8FE  6A9C               	clrf	156,c	;volatile
 30829                           
 30830                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 30831  01B900  0E01               	movlw	1
 30832  01B902  6E9D               	movwf	157,c	;volatile
 30833                           
 30834                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 30835  01B904  0E63               	movlw	99
 30836  01B906  6E99               	movwf	153,c	;volatile
 30837                           
 30838                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 30839  01B908  0EC0               	movlw	192
 30840  01B90A  6E98               	movwf	152,c	;volatile
 30841                           
 30842                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 30843  01B90C  5098               	movf	152,w,c	;volatile
 30844  01B90E  006F FE64  F001    	movff	16281,btemp	;volatile
 30845  01B914  6A02               	clrf	(btemp+1)^0,c
 30846  01B916  0060  F004  F002   	movff	btemp,btemp+1
 30847  01B91C  6A01               	clrf	btemp^0,c
 30848  01B91E  1001               	iorwf	btemp^0,w,c
 30849  01B920  0100               	movlb	0	; () banked
 30850  01B922  6FA2               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 30851  01B924  5002               	movf	(btemp+1)^0,w,c
 30852  01B926  6FA3               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 30853                           
 30854                           ; BSR set to: 0
 30855                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 30856  01B928  0139               	movlb	57	; () banked
 30857  01B92A  9DA8               	bcf	168,6,b	;volatile
 30858                           
 30859                           ; BSR set to: 57
 30860                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 30861  01B92C  8D98               	bsf	152,6,b	;volatile
 30862                           
 30863                           ; BSR set to: 57
 30864                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 30865  01B92E  0ED4               	movlw	low _TMR5_DefaultInterruptHandler
 30866  01B930  6EE6               	movwf	postinc1,c
 30867  01B932  0EBC               	movlw	high _TMR5_DefaultInterruptHandler
 30868  01B934  6EE6               	movwf	postinc1,c
 30869  01B936  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 30870  01B938  6EE6               	movwf	postinc1,c
 30871  01B93A  EC6B  F0E0         	call	_TMR5_SetInterruptHandler	;wreg free
 30872                           
 30873                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 30874  01B93E  0E31               	movlw	49
 30875  01B940  6E9A               	movwf	154,c	;volatile
 30876                           
 30877                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30878  01B942  0012               	return		;funcret
 30879  01B944                     __end_of_TMR5_Initialize:
 30880                           	opt callstack 0
 30881                           
 30882 ;; *************** function _TMR5_SetInterruptHandler *****************
 30883 ;; Defined at:
 30884 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 30885 ;; Parameters:    Size  Location     Type
 30886 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30887 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 30888 ;; Auto vars:     Size  Location     Type
 30889 ;;		None
 30890 ;; Return value:  Size  Location     Type
 30891 ;;                  1  [STACK] void 
 30892 ;; Registers used:
 30893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30894 ;; Tracked objects:
 30895 ;;		On entry : 3F/39
 30896 ;;		On exit  : 0/0
 30897 ;;		Unchanged: 0/0
 30898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30903 ;;Total ram usage:        0 bytes
 30904 ;; Hardware stack levels used:    1
 30905 ;; Hardware stack levels required when called:   15
 30906 ;; This function calls:
 30907 ;;		Nothing
 30908 ;; This function is called by:
 30909 ;;		_TMR5_Initialize
 30910 ;; This function uses a reentrant model
 30911 ;;
 30912                           
 30913                           	psect	text123
 30914  01C0D6                     __ptext123:
 30915                           	opt callstack 0
 30916  01C0D6                     _TMR5_SetInterruptHandler:
 30917                           	opt callstack 13
 30918                           
 30919                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 30920                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30921                           
 30922                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30923                           ;incstack = 0
 30924  01C0D6  50E1               	movf	fsr1l,w,c
 30925  01C0D8  0FFD               	addlw	-3
 30926  01C0DA  6ED9               	movwf	fsr2l,c
 30927  01C0DC  50E2               	movf	fsr1h,w,c
 30928  01C0DE  6EDA               	movwf	fsr2h,c
 30929  01C0E0  0EFF               	movlw	255
 30930  01C0E2  22DA               	addwfc	fsr2h,f,c
 30931  01C0E4  006F FF78  F07F    	movff	postinc2,_TMR5_InterruptHandler
 30932  01C0EA  006F FF78  F080    	movff	postinc2,_TMR5_InterruptHandler+1
 30933  01C0F0  006F FF74  F081    	movff	postdec2,_TMR5_InterruptHandler+2
 30934                           
 30935                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30936  01C0F6  52E5               	movf	postdec1,f,c
 30937  01C0F8  52E5               	movf	postdec1,f,c
 30938  01C0FA  52E5               	movf	postdec1,f,c
 30939  01C0FC  0012               	return		;funcret
 30940  01C0FE                     __end_of_TMR5_SetInterruptHandler:
 30941                           	opt callstack 0
 30942                           
 30943 ;; *************** function _TMR3_Initialize *****************
 30944 ;; Defined at:
 30945 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 30946 ;; Parameters:    Size  Location     Type
 30947 ;;		None
 30948 ;; Auto vars:     Size  Location     Type
 30949 ;;		None
 30950 ;; Return value:  Size  Location     Type
 30951 ;;                  1  [STACK] void 
 30952 ;; Registers used:
 30953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 30954 ;; Tracked objects:
 30955 ;;		On entry : 0/39
 30956 ;;		On exit  : 0/0
 30957 ;;		Unchanged: 0/0
 30958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30963 ;;Total ram usage:        0 bytes
 30964 ;; Hardware stack levels used:    1
 30965 ;; Hardware stack levels required when called:   16
 30966 ;; This function calls:
 30967 ;;		_TMR3_SetInterruptHandler
 30968 ;; This function is called by:
 30969 ;;		_SYSTEM_Initialize
 30970 ;; This function uses a reentrant model
 30971 ;;
 30972                           
 30973                           	psect	text124
 30974  01B944                     __ptext124:
 30975                           	opt callstack 0
 30976  01B944                     _TMR3_Initialize:
 30977                           	opt callstack 13
 30978                           
 30979                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 30980                           
 30981                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30982                           ;incstack = 0
 30983  01B944  6AA7               	clrf	167,c	;volatile
 30984                           
 30985                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 30986  01B946  6AA8               	clrf	168,c	;volatile
 30987                           
 30988                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 30989  01B948  0E01               	movlw	1
 30990  01B94A  6EA9               	movwf	169,c	;volatile
 30991                           
 30992                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 30993  01B94C  0E3C               	movlw	60
 30994  01B94E  6EA5               	movwf	165,c	;volatile
 30995                           
 30996                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 30997  01B950  0EB0               	movlw	176
 30998  01B952  6EA4               	movwf	164,c	;volatile
 30999                           
 31000                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 31001  01B954  50A4               	movf	164,w,c	;volatile
 31002  01B956  006F FE94  F001    	movff	16293,btemp	;volatile
 31003  01B95C  6A02               	clrf	(btemp+1)^0,c
 31004  01B95E  0060  F004  F002   	movff	btemp,btemp+1
 31005  01B964  6A01               	clrf	btemp^0,c
 31006  01B966  1001               	iorwf	btemp^0,w,c
 31007  01B968  0100               	movlb	0	; () banked
 31008  01B96A  6F9E               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 31009  01B96C  5002               	movf	(btemp+1)^0,w,c
 31010  01B96E  6F9F               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 31011                           
 31012                           ; BSR set to: 0
 31013                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 31014  01B970  0139               	movlb	57	; () banked
 31015  01B972  9DA6               	bcf	166,6,b	;volatile
 31016                           
 31017                           ; BSR set to: 57
 31018                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 31019  01B974  8D96               	bsf	150,6,b	;volatile
 31020                           
 31021                           ; BSR set to: 57
 31022                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 31023  01B976  0E2C               	movlw	low _TMR3_DefaultInterruptHandler
 31024  01B978  6EE6               	movwf	postinc1,c
 31025  01B97A  0EC6               	movlw	high _TMR3_DefaultInterruptHandler
 31026  01B97C  6EE6               	movwf	postinc1,c
 31027  01B97E  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 31028  01B980  6EE6               	movwf	postinc1,c
 31029  01B982  EC7F  F0E0         	call	_TMR3_SetInterruptHandler	;wreg free
 31030                           
 31031                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 31032  01B986  0E31               	movlw	49
 31033  01B988  6EA6               	movwf	166,c	;volatile
 31034                           
 31035                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31036  01B98A  0012               	return		;funcret
 31037  01B98C                     __end_of_TMR3_Initialize:
 31038                           	opt callstack 0
 31039                           
 31040 ;; *************** function _TMR3_SetInterruptHandler *****************
 31041 ;; Defined at:
 31042 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 31043 ;; Parameters:    Size  Location     Type
 31044 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31045 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 31046 ;; Auto vars:     Size  Location     Type
 31047 ;;		None
 31048 ;; Return value:  Size  Location     Type
 31049 ;;                  1  [STACK] void 
 31050 ;; Registers used:
 31051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31052 ;; Tracked objects:
 31053 ;;		On entry : 0/0
 31054 ;;		On exit  : 0/0
 31055 ;;		Unchanged: 0/0
 31056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31061 ;;Total ram usage:        0 bytes
 31062 ;; Hardware stack levels used:    1
 31063 ;; Hardware stack levels required when called:   15
 31064 ;; This function calls:
 31065 ;;		Nothing
 31066 ;; This function is called by:
 31067 ;;		_TMR3_Initialize
 31068 ;;		_init_bsoc
 31069 ;; This function uses a reentrant model
 31070 ;;
 31071                           
 31072                           	psect	text125
 31073  01C0FE                     __ptext125:
 31074                           	opt callstack 0
 31075  01C0FE                     _TMR3_SetInterruptHandler:
 31076                           	opt callstack 14
 31077                           
 31078                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 31079                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31080                           
 31081                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31082                           ;incstack = 0
 31083  01C0FE  50E1               	movf	fsr1l,w,c
 31084  01C100  0FFD               	addlw	-3
 31085  01C102  6ED9               	movwf	fsr2l,c
 31086  01C104  50E2               	movf	fsr1h,w,c
 31087  01C106  6EDA               	movwf	fsr2h,c
 31088  01C108  0EFF               	movlw	255
 31089  01C10A  22DA               	addwfc	fsr2h,f,c
 31090  01C10C  006F FF78  F07C    	movff	postinc2,_TMR3_InterruptHandler
 31091  01C112  006F FF78  F07D    	movff	postinc2,_TMR3_InterruptHandler+1
 31092  01C118  006F FF74  F07E    	movff	postdec2,_TMR3_InterruptHandler+2
 31093                           
 31094                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31095  01C11E  52E5               	movf	postdec1,f,c
 31096  01C120  52E5               	movf	postdec1,f,c
 31097  01C122  52E5               	movf	postdec1,f,c
 31098  01C124  0012               	return		;funcret
 31099  01C126                     __end_of_TMR3_SetInterruptHandler:
 31100                           	opt callstack 0
 31101                           
 31102 ;; *************** function _TMR2_Initialize *****************
 31103 ;; Defined at:
 31104 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 31105 ;; Parameters:    Size  Location     Type
 31106 ;;		None
 31107 ;; Auto vars:     Size  Location     Type
 31108 ;;		None
 31109 ;; Return value:  Size  Location     Type
 31110 ;;                  1  [STACK] void 
 31111 ;; Registers used:
 31112 ;;		wreg, status,2
 31113 ;; Tracked objects:
 31114 ;;		On entry : 0/3E
 31115 ;;		On exit  : 3F/39
 31116 ;;		Unchanged: 0/0
 31117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31122 ;;Total ram usage:        0 bytes
 31123 ;; Hardware stack levels used:    1
 31124 ;; Hardware stack levels required when called:   15
 31125 ;; This function calls:
 31126 ;;		Nothing
 31127 ;; This function is called by:
 31128 ;;		_SYSTEM_Initialize
 31129 ;; This function uses a reentrant model
 31130 ;;
 31131                           
 31132                           	psect	text126
 31133  01C4A2                     __ptext126:
 31134                           	opt callstack 0
 31135  01C4A2                     _TMR2_Initialize:
 31136                           	opt callstack 14
 31137                           
 31138                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 31139                           
 31140                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31141                           ;incstack = 0
 31142  01C4A2  0E01               	movlw	1
 31143  01C4A4  6EAE               	movwf	174,c	;volatile
 31144                           
 31145                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 31146  01C4A6  6AAD               	clrf	173,c	;volatile
 31147                           
 31148                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 31149  01C4A8  6AAF               	clrf	175,c	;volatile
 31150                           
 31151                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 31152  01C4AA  0E63               	movlw	99
 31153  01C4AC  6EAB               	movwf	171,c	;volatile
 31154                           
 31155                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 31156  01C4AE  6AAA               	clrf	170,c	;volatile
 31157                           
 31158                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 31159  01C4B0  0139               	movlb	57	; () banked
 31160  01C4B2  95A4               	bcf	164,2,b	;volatile
 31161                           
 31162                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 31163  01C4B4  0EC0               	movlw	192
 31164  01C4B6  6EAC               	movwf	172,c	;volatile
 31165                           
 31166                           ; BSR set to: 57
 31167                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31168  01C4B8  0012               	return		;funcret
 31169  01C4BA                     __end_of_TMR2_Initialize:
 31170                           	opt callstack 0
 31171                           
 31172 ;; *************** function _SPI1_Initialize *****************
 31173 ;; Defined at:
 31174 ;;		line 64 in file "mcc_generated_files/spi1.c"
 31175 ;; Parameters:    Size  Location     Type
 31176 ;;		None
 31177 ;; Auto vars:     Size  Location     Type
 31178 ;;		None
 31179 ;; Return value:  Size  Location     Type
 31180 ;;                  1  [STACK] void 
 31181 ;; Registers used:
 31182 ;;		wreg, status,2
 31183 ;; Tracked objects:
 31184 ;;		On entry : 3F/39
 31185 ;;		On exit  : 3F/3D
 31186 ;;		Unchanged: 0/0
 31187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31192 ;;Total ram usage:        0 bytes
 31193 ;; Hardware stack levels used:    1
 31194 ;; Hardware stack levels required when called:   15
 31195 ;; This function calls:
 31196 ;;		Nothing
 31197 ;; This function is called by:
 31198 ;;		_SYSTEM_Initialize
 31199 ;; This function uses a reentrant model
 31200 ;;
 31201                           
 31202                           	psect	text127
 31203  01C4BA                     __ptext127:
 31204                           	opt callstack 0
 31205  01C4BA                     _SPI1_Initialize:
 31206                           	opt callstack 14
 31207                           
 31208                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 31209                           
 31210                           ; BSR set to: 57
 31211                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31212                           ;incstack = 0
 31213  01C4BA  0E40               	movlw	64
 31214  01C4BC  013D               	movlb	61	; () banked
 31215  01C4BE  6F15               	movwf	21,b	;volatile
 31216                           
 31217                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 31218  01C4C0  0E03               	movlw	3
 31219  01C4C2  6F16               	movwf	22,b	;volatile
 31220                           
 31221                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 31222  01C4C4  0E4F               	movlw	79
 31223  01C4C6  6F19               	movwf	25,b	;volatile
 31224                           
 31225                           ; BSR set to: 61
 31226                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 31227  01C4C8  6B1C               	clrf	28,b	;volatile
 31228                           
 31229                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 31230  01C4CA  0E83               	movlw	131
 31231  01C4CC  6F14               	movwf	20,b	;volatile
 31232                           
 31233                           ; BSR set to: 61
 31234                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31235  01C4CE  0012               	return		;funcret
 31236  01C4D0                     __end_of_SPI1_Initialize:
 31237                           	opt callstack 0
 31238                           
 31239 ;; *************** function _PWM8_Initialize *****************
 31240 ;; Defined at:
 31241 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 31242 ;; Parameters:    Size  Location     Type
 31243 ;;		None
 31244 ;; Auto vars:     Size  Location     Type
 31245 ;;		None
 31246 ;; Return value:  Size  Location     Type
 31247 ;;                  1  [STACK] void 
 31248 ;; Registers used:
 31249 ;;		wreg, status,2
 31250 ;; Tracked objects:
 31251 ;;		On entry : 3F/39
 31252 ;;		On exit  : 3F/3F
 31253 ;;		Unchanged: 0/0
 31254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31259 ;;Total ram usage:        0 bytes
 31260 ;; Hardware stack levels used:    1
 31261 ;; Hardware stack levels required when called:   15
 31262 ;; This function calls:
 31263 ;;		Nothing
 31264 ;; This function is called by:
 31265 ;;		_SYSTEM_Initialize
 31266 ;; This function uses a reentrant model
 31267 ;;
 31268                           
 31269                           	psect	text128
 31270  01C4D0                     __ptext128:
 31271                           	opt callstack 0
 31272  01C4D0                     _PWM8_Initialize:
 31273                           	opt callstack 14
 31274                           
 31275                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 31276                           
 31277                           ; BSR set to: 61
 31278                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31279                           ;incstack = 0
 31280  01C4D0  0E80               	movlw	128
 31281  01C4D2  6E62               	movwf	98,c	;volatile
 31282                           
 31283                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 31284  01C4D4  6A61               	clrf	97,c	;volatile
 31285                           
 31286                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 31287  01C4D6  0E40               	movlw	64
 31288  01C4D8  6E60               	movwf	96,c	;volatile
 31289                           
 31290                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 31291  01C4DA  013F               	movlb	63	; () banked
 31292  01C4DC  515F               	movf	95,w,b	;volatile
 31293  01C4DE  0B3F               	andlw	-193
 31294  01C4E0  0940               	iorlw	64
 31295  01C4E2  6F5F               	movwf	95,b	;volatile
 31296                           
 31297                           ; BSR set to: 63
 31298                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31299  01C4E4  0012               	return		;funcret
 31300  01C4E6                     __end_of_PWM8_Initialize:
 31301                           	opt callstack 0
 31302                           
 31303 ;; *************** function _PMD_Initialize *****************
 31304 ;; Defined at:
 31305 ;;		line 90 in file "mcc_generated_files/mcc.c"
 31306 ;; Parameters:    Size  Location     Type
 31307 ;;		None
 31308 ;; Auto vars:     Size  Location     Type
 31309 ;;		None
 31310 ;; Return value:  Size  Location     Type
 31311 ;;                  1  [STACK] void 
 31312 ;; Registers used:
 31313 ;;		None
 31314 ;; Tracked objects:
 31315 ;;		On entry : 3F/39
 31316 ;;		On exit  : 3F/39
 31317 ;;		Unchanged: 0/0
 31318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31323 ;;Total ram usage:        0 bytes
 31324 ;; Hardware stack levels used:    1
 31325 ;; Hardware stack levels required when called:   15
 31326 ;; This function calls:
 31327 ;;		Nothing
 31328 ;; This function is called by:
 31329 ;;		_SYSTEM_Initialize
 31330 ;; This function uses a reentrant model
 31331 ;;
 31332                           
 31333                           	psect	text129
 31334  01C4FC                     __ptext129:
 31335                           	opt callstack 0
 31336  01C4FC                     _PMD_Initialize:
 31337                           	opt callstack 14
 31338                           
 31339                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 31340                           
 31341                           ; BSR set to: 63
 31342                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31343                           ;incstack = 0
 31344  01C4FC  0139               	movlb	57	; () banked
 31345  01C4FE  6BC0               	clrf	192,b	;volatile
 31346                           
 31347                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 31348  01C500  6BC1               	clrf	193,b	;volatile
 31349                           
 31350                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 31351  01C502  6BC2               	clrf	194,b	;volatile
 31352                           
 31353                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 31354  01C504  6BC3               	clrf	195,b	;volatile
 31355                           
 31356                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 31357  01C506  6BC4               	clrf	196,b	;volatile
 31358                           
 31359                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 31360  01C508  6BC5               	clrf	197,b	;volatile
 31361                           
 31362                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 31363  01C50A  6BC6               	clrf	198,b	;volatile
 31364                           
 31365                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 31366  01C50C  6BC7               	clrf	199,b	;volatile
 31367                           
 31368                           ; BSR set to: 57
 31369                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31370  01C50E  0012               	return		;funcret
 31371  01C510                     __end_of_PMD_Initialize:
 31372                           	opt callstack 0
 31373                           
 31374 ;; *************** function _PIN_MANAGER_Initialize *****************
 31375 ;; Defined at:
 31376 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 31377 ;; Parameters:    Size  Location     Type
 31378 ;;		None
 31379 ;; Auto vars:     Size  Location     Type
 31380 ;;		None
 31381 ;; Return value:  Size  Location     Type
 31382 ;;                  1  [STACK] void 
 31383 ;; Registers used:
 31384 ;;		wreg, status,2
 31385 ;; Tracked objects:
 31386 ;;		On entry : 3F/39
 31387 ;;		On exit  : 3F/3A
 31388 ;;		Unchanged: 0/0
 31389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31394 ;;Total ram usage:        0 bytes
 31395 ;; Hardware stack levels used:    1
 31396 ;; Hardware stack levels required when called:   15
 31397 ;; This function calls:
 31398 ;;		Nothing
 31399 ;; This function is called by:
 31400 ;;		_SYSTEM_Initialize
 31401 ;; This function uses a reentrant model
 31402 ;;
 31403                           
 31404                           	psect	text130
 31405  01AEA8                     __ptext130:
 31406                           	opt callstack 0
 31407  01AEA8                     _PIN_MANAGER_Initialize:
 31408                           	opt callstack 14
 31409                           
 31410                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 31411                           
 31412                           ; BSR set to: 57
 31413                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31414                           ;incstack = 0
 31415  01AEA8  0E07               	movlw	7
 31416  01AEAA  6EBE               	movwf	190,c	;volatile
 31417                           
 31418                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 31419  01AEAC  6ABD               	clrf	189,c	;volatile
 31420                           
 31421                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 31422  01AEAE  6ABA               	clrf	186,c	;volatile
 31423                           
 31424                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 31425  01AEB0  0E23               	movlw	35
 31426  01AEB2  6EBF               	movwf	191,c	;volatile
 31427                           
 31428                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 31429  01AEB4  6ABB               	clrf	187,c	;volatile
 31430                           
 31431                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 31432  01AEB6  0E07               	movlw	7
 31433  01AEB8  6EBC               	movwf	188,c	;volatile
 31434                           
 31435                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 31436  01AEBA  6AC6               	clrf	198,c	;volatile
 31437                           
 31438                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 31439  01AEBC  0E0C               	movlw	12
 31440  01AEBE  6EC7               	movwf	199,c	;volatile
 31441                           
 31442                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 31443  01AEC0  68C2               	setf	194,c	;volatile
 31444                           
 31445                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 31446  01AEC2  0EBF               	movlw	191
 31447  01AEC4  6EC3               	movwf	195,c	;volatile
 31448                           
 31449                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 31450  01AEC6  0E90               	movlw	144
 31451  01AEC8  6EC4               	movwf	196,c	;volatile
 31452                           
 31453                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 31454  01AECA  0E0C               	movlw	12
 31455  01AECC  6EC5               	movwf	197,c	;volatile
 31456                           
 31457                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 31458  01AECE  013A               	movlb	58	; () banked
 31459  01AED0  6B70               	clrf	112,b	;volatile
 31460                           
 31461                           ; BSR set to: 58
 31462                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 31463  01AED2  6B60               	clrf	96,b	;volatile
 31464                           
 31465                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 31466  01AED4  0E3C               	movlw	60
 31467  01AED6  6F50               	movwf	80,b	;volatile
 31468                           
 31469                           ; BSR set to: 58
 31470                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 31471  01AED8  6B80               	clrf	128,b	;volatile
 31472                           
 31473                           ; BSR set to: 58
 31474                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 31475  01AEDA  6B90               	clrf	144,b	;volatile
 31476                           
 31477                           ; BSR set to: 58
 31478                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 31479  01AEDC  6940               	setf	64,b	;volatile
 31480                           
 31481                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 31482  01AEDE  0E0C               	movlw	12
 31483  01AEE0  6F71               	movwf	113,b	;volatile
 31484                           
 31485                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 31486  01AEE2  0E0C               	movlw	12
 31487  01AEE4  6F91               	movwf	145,b	;volatile
 31488                           
 31489                           ; BSR set to: 58
 31490                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 31491  01AEE6  6B81               	clrf	129,b	;volatile
 31492                           
 31493                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 31494  01AEE8  0E83               	movlw	131
 31495  01AEEA  6F51               	movwf	81,b	;volatile
 31496                           
 31497                           ; BSR set to: 58
 31498                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 31499  01AEEC  6B41               	clrf	65,b	;volatile
 31500                           
 31501                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 31502  01AEEE  0E97               	movlw	151
 31503  01AEF0  6F61               	movwf	97,b	;volatile
 31504                           
 31505                           ; BSR set to: 58
 31506                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 31507  01AEF2  6B82               	clrf	130,b	;volatile
 31508                           
 31509                           ; BSR set to: 58
 31510                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 31511  01AEF4  6B92               	clrf	146,b	;volatile
 31512                           
 31513                           ; BSR set to: 58
 31514                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 31515  01AEF6  6B42               	clrf	66,b	;volatile
 31516                           
 31517                           ; BSR set to: 58
 31518                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 31519  01AEF8  6B52               	clrf	82,b	;volatile
 31520                           
 31521                           ; BSR set to: 58
 31522                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 31523  01AEFA  6B62               	clrf	98,b	;volatile
 31524                           
 31525                           ; BSR set to: 58
 31526                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 31527  01AEFC  6B72               	clrf	114,b	;volatile
 31528                           
 31529                           ; BSR set to: 58
 31530                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 31531  01AEFE  6943               	setf	67,b	;volatile
 31532                           
 31533                           ; BSR set to: 58
 31534                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 31535  01AF00  6953               	setf	83,b	;volatile
 31536                           
 31537                           ; BSR set to: 58
 31538                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 31539  01AF02  6963               	setf	99,b	;volatile
 31540                           
 31541                           ; BSR set to: 58
 31542                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 31543  01AF04  6973               	setf	115,b	;volatile
 31544                           
 31545                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 31546  01AF06  0E07               	movlw	7
 31547  01AF08  6F83               	movwf	131,b	;volatile
 31548                           
 31549                           ; BSR set to: 58
 31550                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 31551  01AF0A  6993               	setf	147,b	;volatile
 31552                           
 31553                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 31554  01AF0C  0E0F               	movlw	15
 31555  01AF0E  6FE8               	movwf	232,b	;volatile
 31556                           
 31557                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 31558  01AF10  0E13               	movlw	19
 31559  01AF12  6FDE               	movwf	222,b	;volatile
 31560                           
 31561                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 31562  01AF14  0E16               	movlw	22
 31563  01AF16  6F0E               	movwf	14,b	;volatile
 31564                           
 31565                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 31566  01AF18  0E1E               	movlw	30
 31567  01AF1A  6F13               	movwf	19,b	;volatile
 31568                           
 31569                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 31570  01AF1C  0E08               	movlw	8
 31571  01AF1E  6FC0               	movwf	192,b	;volatile
 31572                           
 31573                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 31574  01AF20  0E10               	movlw	16
 31575  01AF22  6F19               	movwf	25,b	;volatile
 31576                           
 31577                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 31578  01AF24  0E09               	movlw	9
 31579  01AF26  6FC1               	movwf	193,b	;volatile
 31580                           
 31581                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 31582  01AF28  0E1F               	movlw	31
 31583  01AF2A  6F15               	movwf	21,b	;volatile
 31584                           
 31585                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 31586  01AF2C  0E13               	movlw	19
 31587  01AF2E  6F16               	movwf	22,b	;volatile
 31588                           
 31589                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 31590  01AF30  0E17               	movlw	23
 31591  01AF32  6FE5               	movwf	229,b	;volatile
 31592                           
 31593                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 31594  01AF34  0E14               	movlw	20
 31595  01AF36  6FDF               	movwf	223,b	;volatile
 31596                           
 31597                           ; BSR set to: 58
 31598                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 31599  01AF38  0012               	return		;funcret
 31600  01AF3A                     __end_of_PIN_MANAGER_Initialize:
 31601                           	opt callstack 0
 31602                           
 31603 ;; *************** function _OSCILLATOR_Initialize *****************
 31604 ;; Defined at:
 31605 ;;		line 72 in file "mcc_generated_files/mcc.c"
 31606 ;; Parameters:    Size  Location     Type
 31607 ;;		None
 31608 ;; Auto vars:     Size  Location     Type
 31609 ;;		None
 31610 ;; Return value:  Size  Location     Type
 31611 ;;                  1  [STACK] void 
 31612 ;; Registers used:
 31613 ;;		wreg, status,2
 31614 ;; Tracked objects:
 31615 ;;		On entry : 3F/3A
 31616 ;;		On exit  : 3F/39
 31617 ;;		Unchanged: 0/0
 31618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31623 ;;Total ram usage:        0 bytes
 31624 ;; Hardware stack levels used:    1
 31625 ;; Hardware stack levels required when called:   15
 31626 ;; This function calls:
 31627 ;;		Nothing
 31628 ;; This function is called by:
 31629 ;;		_SYSTEM_Initialize
 31630 ;; This function uses a reentrant model
 31631 ;;
 31632                           
 31633                           	psect	text131
 31634  01C4E6                     __ptext131:
 31635                           	opt callstack 0
 31636  01C4E6                     _OSCILLATOR_Initialize:
 31637                           	opt callstack 14
 31638                           
 31639                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 31640                           
 31641                           ; BSR set to: 58
 31642                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31643                           ;incstack = 0
 31644  01C4E6  0E20               	movlw	32
 31645  01C4E8  0139               	movlb	57	; () banked
 31646  01C4EA  6FD9               	movwf	217,b	;volatile
 31647                           
 31648                           ; BSR set to: 57
 31649                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 31650  01C4EC  6BDB               	clrf	219,b	;volatile
 31651                           
 31652                           ; BSR set to: 57
 31653                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 31654  01C4EE  6BDD               	clrf	221,b	;volatile
 31655                           
 31656                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 31657  01C4F0  0E02               	movlw	2
 31658  01C4F2  6FDF               	movwf	223,b	;volatile
 31659                           
 31660                           ; BSR set to: 57
 31661                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 31662  01C4F4  6BDE               	clrf	222,b	;volatile
 31663  01C4F6                     l169:
 31664                           
 31665                           ; BSR set to: 57
 31666                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 31667  01C4F6  B1DC               	btfsc	220,0,b	;volatile
 31668  01C4F8  0012               	return	
 31669  01C4FA  D7FD               	goto	l169
 31670  01C4FC                     __end_of_OSCILLATOR_Initialize:
 31671                           	opt callstack 0
 31672                           
 31673 ;; *************** function _INTERRUPT_Initialize *****************
 31674 ;; Defined at:
 31675 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 31676 ;; Parameters:    Size  Location     Type
 31677 ;;		None
 31678 ;; Auto vars:     Size  Location     Type
 31679 ;;  state           1  [STACK] _Bool 
 31680 ;; Return value:  Size  Location     Type
 31681 ;;                  1  [STACK] void 
 31682 ;; Registers used:
 31683 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 31684 ;; Tracked objects:
 31685 ;;		On entry : 0/0
 31686 ;;		On exit  : 3F/39
 31687 ;;		Unchanged: 0/0
 31688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31693 ;;Total ram usage:        0 bytes
 31694 ;; Hardware stack levels used:    1
 31695 ;; Hardware stack levels required when called:   15
 31696 ;; This function calls:
 31697 ;;		Nothing
 31698 ;; This function is called by:
 31699 ;;		_SYSTEM_Initialize
 31700 ;; This function uses a reentrant model
 31701 ;;
 31702                           
 31703                           	psect	text132
 31704  01B3EA                     __ptext132:
 31705                           	opt callstack 0
 31706  01B3EA                     _INTERRUPT_Initialize:
 31707                           	opt callstack 0
 31708                           
 31709                           ; BSR set to: 57
 31710                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31711  01B3EA  52E6               	movf	postinc1,f,c
 31712                           
 31713                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 31714                           
 31715                           ;incstack = 0
 31716  01B3EC  8AD2               	bsf	210,5,c	;volatile
 31717                           
 31718                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 31719  01B3EE  AED2               	btfss	16338,7,c	;volatile
 31720  01B3F0  D003               	goto	u9500
 31721  01B3F2  6A0C               	clrf	(btemp+11)^0,c
 31722  01B3F4  2A0C               	incf	(btemp+11)^0,f,c
 31723  01B3F6  D001               	goto	u9518
 31724  01B3F8                     u9500:
 31725  01B3F8  6A0C               	clrf	(btemp+11)^0,c
 31726  01B3FA                     u9518:
 31727                           
 31728                           ;stkvar	_state @ sp[(-1)+0]
 31729  01B3FA  0EFF               	movlw	-1
 31730  01B3FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 31731                           
 31732                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 31733  01B402  9ED2               	bcf	16338,7,c	;volatile
 31734                           
 31735                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 31736  01B404  0E55               	movlw	85
 31737  01B406  6ED4               	movwf	212,c	;volatile
 31738                           
 31739                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 31740  01B408  0EAA               	movlw	170
 31741  01B40A  6ED4               	movwf	212,c	;volatile
 31742                           
 31743                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 31744  01B40C  90D4               	bcf	212,0,c	;volatile
 31745                           
 31746                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 31747  01B40E  0138               	movlb	56	; () banked
 31748  01B410  6B9F               	clrf	159,b	;volatile
 31749                           
 31750                           ; BSR set to: 56
 31751                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 31752  01B412  6B9E               	clrf	158,b	;volatile
 31753                           
 31754                           ; BSR set to: 56
 31755                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 31756  01B414  0E08               	movlw	8
 31757  01B416  6F9D               	movwf	157,b	;volatile
 31758                           
 31759                           ; BSR set to: 56
 31760                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 31761  01B418  0E55               	movlw	85
 31762  01B41A  6ED4               	movwf	212,c	;volatile
 31763                           
 31764                           ; BSR set to: 56
 31765                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 31766  01B41C  0EAA               	movlw	170
 31767  01B41E  6ED4               	movwf	212,c	;volatile
 31768                           
 31769                           ; BSR set to: 56
 31770                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 31771  01B420  80D4               	bsf	212,0,c	;volatile
 31772                           
 31773                           ; BSR set to: 56
 31774                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 31775                           ;stkvar	_state @ sp[(-1)+0]
 31776  01B422  0EFF               	movlw	-1
 31777  01B424  B0E3               	btfsc	plusw1,0,c
 31778  01B426  D002               	bra	u9525
 31779  01B428  9ED2               	bcf	16338,7,c	;volatile
 31780  01B42A  D001               	bra	u9526
 31781  01B42C                     u9525:
 31782  01B42C  8ED2               	bsf	16338,7,c	;volatile
 31783  01B42E                     u9526:
 31784                           
 31785                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 31786  01B42E  0139               	movlb	57	; () banked
 31787  01B430  8782               	bsf	130,3,b	;volatile
 31788                           
 31789                           ; BSR set to: 57
 31790                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 31791  01B432  8382               	bsf	130,1,b	;volatile
 31792                           
 31793                           ; BSR set to: 57
 31794                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 31795  01B434  8182               	bsf	130,0,b	;volatile
 31796                           
 31797                           ; BSR set to: 57
 31798                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 31799  01B436  8582               	bsf	130,2,b	;volatile
 31800                           
 31801                           ; BSR set to: 57
 31802                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 31803  01B438  8786               	bsf	134,3,b	;volatile
 31804                           
 31805                           ; BSR set to: 57
 31806                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 31807  01B43A  8586               	bsf	134,2,b	;volatile
 31808                           
 31809                           ; BSR set to: 57
 31810                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 31811  01B43C  8783               	bsf	131,3,b	;volatile
 31812                           
 31813                           ; BSR set to: 57
 31814                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 31815  01B43E  8181               	bsf	129,0,b	;volatile
 31816                           
 31817                           ; BSR set to: 57
 31818                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 31819  01B440  9185               	bcf	133,0,b	;volatile
 31820                           
 31821                           ; BSR set to: 57
 31822                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 31823  01B442  8189               	bsf	137,0,b	;volatile
 31824                           
 31825                           ; BSR set to: 57
 31826                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 31827  01B444  9D88               	bcf	136,6,b	;volatile
 31828                           
 31829                           ; BSR set to: 57
 31830                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 31831  01B446  9D86               	bcf	134,6,b	;volatile
 31832                           
 31833                           ; BSR set to: 57
 31834                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 31835  01B448  8581               	bsf	129,2,b	;volatile
 31836                           
 31837                           ; BSR set to: 57
 31838                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 31839  01B44A  8781               	bsf	129,3,b	;volatile
 31840                           
 31841                           ; BSR set to: 57
 31842                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 31843  01B44C  52E5               	movf	postdec1,f,c
 31844  01B44E  0012               	return		;funcret
 31845  01B450                     __end_of_INTERRUPT_Initialize:
 31846                           	opt callstack 0
 31847                           
 31848 ;; *************** function _FVR_Initialize *****************
 31849 ;; Defined at:
 31850 ;;		line 58 in file "mcc_generated_files/fvr.c"
 31851 ;; Parameters:    Size  Location     Type
 31852 ;;		None
 31853 ;; Auto vars:     Size  Location     Type
 31854 ;;		None
 31855 ;; Return value:  Size  Location     Type
 31856 ;;                  1  [STACK] void 
 31857 ;; Registers used:
 31858 ;;		wreg, status,2
 31859 ;; Tracked objects:
 31860 ;;		On entry : 3F/39
 31861 ;;		On exit  : 3F/3E
 31862 ;;		Unchanged: 0/0
 31863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31868 ;;Total ram usage:        0 bytes
 31869 ;; Hardware stack levels used:    1
 31870 ;; Hardware stack levels required when called:   15
 31871 ;; This function calls:
 31872 ;;		Nothing
 31873 ;; This function is called by:
 31874 ;;		_SYSTEM_Initialize
 31875 ;; This function uses a reentrant model
 31876 ;;
 31877                           
 31878                           	psect	text133
 31879  01C602                     __ptext133:
 31880                           	opt callstack 0
 31881  01C602                     _FVR_Initialize:
 31882                           	opt callstack 14
 31883                           
 31884                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 31885                           
 31886                           ; BSR set to: 57
 31887                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31888                           ;incstack = 0
 31889  01C602  0EAF               	movlw	175
 31890  01C604  013E               	movlb	62	; () banked
 31891  01C606  6FC1               	movwf	193,b	;volatile
 31892                           
 31893                           ; BSR set to: 62
 31894                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31895  01C608  0012               	return		;funcret
 31896  01C60A                     __end_of_FVR_Initialize:
 31897                           	opt callstack 0
 31898                           
 31899 ;; *************** function _EXT_INT_Initialize *****************
 31900 ;; Defined at:
 31901 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 31902 ;; Parameters:    Size  Location     Type
 31903 ;;		None
 31904 ;; Auto vars:     Size  Location     Type
 31905 ;;		None
 31906 ;; Return value:  Size  Location     Type
 31907 ;;                  1  [STACK] void 
 31908 ;; Registers used:
 31909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31910 ;; Tracked objects:
 31911 ;;		On entry : 3F/3F
 31912 ;;		On exit  : 3F/39
 31913 ;;		Unchanged: 0/0
 31914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31919 ;;Total ram usage:        0 bytes
 31920 ;; Hardware stack levels used:    1
 31921 ;; Hardware stack levels required when called:   16
 31922 ;; This function calls:
 31923 ;;		_INT0_SetInterruptHandler
 31924 ;;		_INT1_SetInterruptHandler
 31925 ;; This function is called by:
 31926 ;;		_SYSTEM_Initialize
 31927 ;; This function uses a reentrant model
 31928 ;;
 31929                           
 31930                           	psect	text134
 31931  01BE14                     __ptext134:
 31932                           	opt callstack 0
 31933  01BE14                     _EXT_INT_Initialize:
 31934                           	opt callstack 13
 31935                           
 31936                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 31937                           
 31938                           ; BSR set to: 62
 31939                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31940                           ;incstack = 0
 31941  01BE14  0139               	movlb	57	; () banked
 31942  01BE16  91A1               	bcf	161,0,b	;volatile
 31943                           
 31944                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 31945  01BE18  90D2               	bcf	210,0,c	;volatile
 31946                           
 31947                           ; BSR set to: 57
 31948                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 31949  01BE1A  0E2E               	movlw	low _INT0_DefaultInterruptHandler
 31950  01BE1C  6EE6               	movwf	postinc1,c
 31951  01BE1E  0EC6               	movlw	high _INT0_DefaultInterruptHandler
 31952  01BE20  6EE6               	movwf	postinc1,c
 31953  01BE22  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 31954  01BE24  6EE6               	movwf	postinc1,c
 31955  01BE26  ECA7  F0E0         	call	_INT0_SetInterruptHandler	;wreg free
 31956                           
 31957                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 31958  01BE2A  0139               	movlb	57	; () banked
 31959  01BE2C  8191               	bsf	145,0,b	;volatile
 31960                           
 31961                           ; BSR set to: 57
 31962                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 31963  01BE2E  91A5               	bcf	165,0,b	;volatile
 31964                           
 31965                           ; BSR set to: 57
 31966                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 31967  01BE30  92D2               	bcf	210,1,c	;volatile
 31968                           
 31969                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 31970  01BE32  0E2A               	movlw	low _INT1_DefaultInterruptHandler
 31971  01BE34  6EE6               	movwf	postinc1,c
 31972  01BE36  0EC6               	movlw	high _INT1_DefaultInterruptHandler
 31973  01BE38  6EE6               	movwf	postinc1,c
 31974  01BE3A  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 31975  01BE3C  6EE6               	movwf	postinc1,c
 31976  01BE3E  EC93  F0E0         	call	_INT1_SetInterruptHandler	;wreg free
 31977                           
 31978                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 31979  01BE42  0139               	movlb	57	; () banked
 31980  01BE44  8195               	bsf	149,0,b	;volatile
 31981                           
 31982                           ; BSR set to: 57
 31983                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 31984  01BE46  0012               	return		;funcret
 31985  01BE48                     __end_of_EXT_INT_Initialize:
 31986                           	opt callstack 0
 31987                           
 31988 ;; *************** function _INT1_SetInterruptHandler *****************
 31989 ;; Defined at:
 31990 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 31991 ;; Parameters:    Size  Location     Type
 31992 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31993 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 31994 ;; Auto vars:     Size  Location     Type
 31995 ;;		None
 31996 ;; Return value:  Size  Location     Type
 31997 ;;                  1  [STACK] void 
 31998 ;; Registers used:
 31999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32000 ;; Tracked objects:
 32001 ;;		On entry : 3F/39
 32002 ;;		On exit  : 0/0
 32003 ;;		Unchanged: 0/0
 32004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32009 ;;Total ram usage:        0 bytes
 32010 ;; Hardware stack levels used:    1
 32011 ;; Hardware stack levels required when called:   15
 32012 ;; This function calls:
 32013 ;;		Nothing
 32014 ;; This function is called by:
 32015 ;;		_EXT_INT_Initialize
 32016 ;;		_start_switch_handler
 32017 ;; This function uses a reentrant model
 32018 ;;
 32019                           
 32020                           	psect	text135
 32021  01C126                     __ptext135:
 32022                           	opt callstack 0
 32023  01C126                     _INT1_SetInterruptHandler:
 32024                           	opt callstack 14
 32025                           
 32026                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 32027                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32028                           
 32029                           ; BSR set to: 57
 32030                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32031                           ;incstack = 0
 32032  01C126  50E1               	movf	fsr1l,w,c
 32033  01C128  0FFD               	addlw	-3
 32034  01C12A  6ED9               	movwf	fsr2l,c
 32035  01C12C  50E2               	movf	fsr1h,w,c
 32036  01C12E  6EDA               	movwf	fsr2h,c
 32037  01C130  0EFF               	movlw	255
 32038  01C132  22DA               	addwfc	fsr2h,f,c
 32039  01C134  006F FF78  F094    	movff	postinc2,_INT1_InterruptHandler
 32040  01C13A  006F FF78  F095    	movff	postinc2,_INT1_InterruptHandler+1
 32041  01C140  006F FF74  F096    	movff	postdec2,_INT1_InterruptHandler+2
 32042                           
 32043                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32044  01C146  52E5               	movf	postdec1,f,c
 32045  01C148  52E5               	movf	postdec1,f,c
 32046  01C14A  52E5               	movf	postdec1,f,c
 32047  01C14C  0012               	return		;funcret
 32048  01C14E                     __end_of_INT1_SetInterruptHandler:
 32049                           	opt callstack 0
 32050                           
 32051 ;; *************** function _INT0_SetInterruptHandler *****************
 32052 ;; Defined at:
 32053 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 32054 ;; Parameters:    Size  Location     Type
 32055 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32056 ;;		 -> INT0_DefaultInterruptHandler(1), 
 32057 ;; Auto vars:     Size  Location     Type
 32058 ;;		None
 32059 ;; Return value:  Size  Location     Type
 32060 ;;                  1  [STACK] void 
 32061 ;; Registers used:
 32062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32063 ;; Tracked objects:
 32064 ;;		On entry : 3F/39
 32065 ;;		On exit  : 0/0
 32066 ;;		Unchanged: 0/0
 32067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32072 ;;Total ram usage:        0 bytes
 32073 ;; Hardware stack levels used:    1
 32074 ;; Hardware stack levels required when called:   15
 32075 ;; This function calls:
 32076 ;;		Nothing
 32077 ;; This function is called by:
 32078 ;;		_EXT_INT_Initialize
 32079 ;; This function uses a reentrant model
 32080 ;;
 32081                           
 32082                           	psect	text136
 32083  01C14E                     __ptext136:
 32084                           	opt callstack 0
 32085  01C14E                     _INT0_SetInterruptHandler:
 32086                           	opt callstack 13
 32087                           
 32088                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 32089                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32090                           
 32091                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32092                           ;incstack = 0
 32093  01C14E  50E1               	movf	fsr1l,w,c
 32094  01C150  0FFD               	addlw	-3
 32095  01C152  6ED9               	movwf	fsr2l,c
 32096  01C154  50E2               	movf	fsr1h,w,c
 32097  01C156  6EDA               	movwf	fsr2h,c
 32098  01C158  0EFF               	movlw	255
 32099  01C15A  22DA               	addwfc	fsr2h,f,c
 32100  01C15C  006F FF78  F097    	movff	postinc2,_INT0_InterruptHandler
 32101  01C162  006F FF78  F098    	movff	postinc2,_INT0_InterruptHandler+1
 32102  01C168  006F FF74  F099    	movff	postdec2,_INT0_InterruptHandler+2
 32103                           
 32104                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32105  01C16E  52E5               	movf	postdec1,f,c
 32106  01C170  52E5               	movf	postdec1,f,c
 32107  01C172  52E5               	movf	postdec1,f,c
 32108  01C174  0012               	return		;funcret
 32109  01C176                     __end_of_INT0_SetInterruptHandler:
 32110                           	opt callstack 0
 32111                           
 32112 ;; *************** function _DMA2_Initialize *****************
 32113 ;; Defined at:
 32114 ;;		line 61 in file "mcc_generated_files/dma2.c"
 32115 ;; Parameters:    Size  Location     Type
 32116 ;;		None
 32117 ;; Auto vars:     Size  Location     Type
 32118 ;;		None
 32119 ;; Return value:  Size  Location     Type
 32120 ;;                  1  [STACK] void 
 32121 ;; Registers used:
 32122 ;;		wreg, status,2
 32123 ;; Tracked objects:
 32124 ;;		On entry : 3F/3D
 32125 ;;		On exit  : 3F/3B
 32126 ;;		Unchanged: 0/0
 32127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32132 ;;Total ram usage:        0 bytes
 32133 ;; Hardware stack levels used:    1
 32134 ;; Hardware stack levels required when called:   15
 32135 ;; This function calls:
 32136 ;;		Nothing
 32137 ;; This function is called by:
 32138 ;;		_SYSTEM_Initialize
 32139 ;; This function uses a reentrant model
 32140 ;;
 32141                           
 32142                           	psect	text137
 32143  01B68C                     __ptext137:
 32144                           	opt callstack 0
 32145  01B68C                     _DMA2_Initialize:
 32146                           	opt callstack 14
 32147                           
 32148                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 32149                           
 32150                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32151                           ;incstack = 0
 32152  01B68C  0E00               	movlw	0
 32153  01B68E  013B               	movlb	59	; () banked
 32154  01B690  6FD9               	movwf	217,b	;volatile
 32155  01B692  0E10               	movlw	16
 32156  01B694  6FDA               	movwf	218,b	;volatile
 32157  01B696  0E00               	movlw	0
 32158  01B698  6FDB               	movwf	219,b	;volatile
 32159                           
 32160                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 32161  01B69A  0E3F               	movlw	63
 32162  01B69C  6FD1               	movwf	209,b	;volatile
 32163  01B69E  0EBB               	movlw	187
 32164  01B6A0  6FD0               	movwf	208,b	;volatile
 32165                           
 32166                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 32167  01B6A2  0E03               	movlw	3
 32168  01B6A4  6FDD               	movwf	221,b	;volatile
 32169                           
 32170                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 32171  01B6A6  0E00               	movlw	0
 32172  01B6A8  6FD8               	movwf	216,b	;volatile
 32173  01B6AA  0E01               	movlw	1
 32174  01B6AC  6FD7               	movwf	215,b	;volatile
 32175                           
 32176                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 32177  01B6AE  0E00               	movlw	0
 32178  01B6B0  6FCF               	movwf	207,b	;volatile
 32179  01B6B2  0E01               	movlw	1
 32180  01B6B4  6FCE               	movwf	206,b	;volatile
 32181                           
 32182                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 32183  01B6B6  0E1C               	movlw	28
 32184  01B6B8  6FDF               	movwf	223,b	;volatile
 32185                           
 32186                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 32187  01B6BA  0E3D               	movlw	61
 32188  01B6BC  6FDE               	movwf	222,b	;volatile
 32189                           
 32190                           ; BSR set to: 59
 32191                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 32192  01B6BE  0139               	movlb	57	; () banked
 32193  01B6C0  97A5               	bcf	165,3,b	;volatile
 32194                           
 32195                           ; BSR set to: 57
 32196                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 32197  01B6C2  95A5               	bcf	165,2,b	;volatile
 32198                           
 32199                           ; BSR set to: 57
 32200                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 32201  01B6C4  9BA5               	bcf	165,5,b	;volatile
 32202                           
 32203                           ; BSR set to: 57
 32204                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 32205  01B6C6  99A5               	bcf	165,4,b	;volatile
 32206                           
 32207                           ; BSR set to: 57
 32208                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 32209  01B6C8  9795               	bcf	149,3,b	;volatile
 32210                           
 32211                           ; BSR set to: 57
 32212                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 32213  01B6CA  9595               	bcf	149,2,b	;volatile
 32214                           
 32215                           ; BSR set to: 57
 32216                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 32217  01B6CC  9B95               	bcf	149,5,b	;volatile
 32218                           
 32219                           ; BSR set to: 57
 32220                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 32221  01B6CE  9995               	bcf	149,4,b	;volatile
 32222  01B6D0  9ED2               	bcf	16338,7,c	;# 
 32223  01B6D2  0139               	banksel	14831	;# 
 32224  01B6D4  0E55               	movlw	85	;# 
 32225  01B6D6  6FEF               	movwf	14831,b	;# 
 32226  01B6D8  0EAA               	movlw	170	;# 
 32227  01B6DA  6FEF               	movwf	14831,b	;# 
 32228  01B6DC  81EF               	bsf	14831,0,b	;# 
 32229  01B6DE  8ED2               	bsf	16338,7,c	;# 
 32230                           
 32231                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 32232  01B6E0  013B               	movlb	59	; () banked
 32233  01B6E2  6BDC               	clrf	220,b	;volatile
 32234                           
 32235                           ; BSR set to: 59
 32236                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32237  01B6E4  0012               	return		;funcret
 32238  01B6E6                     __end_of_DMA2_Initialize:
 32239                           	opt callstack 0
 32240                           
 32241 ;; *************** function _DMA1_Initialize *****************
 32242 ;; Defined at:
 32243 ;;		line 86 in file "mcc_generated_files/dma1.c"
 32244 ;; Parameters:    Size  Location     Type
 32245 ;;		None
 32246 ;; Auto vars:     Size  Location     Type
 32247 ;;		None
 32248 ;; Return value:  Size  Location     Type
 32249 ;;                  1  [STACK] void 
 32250 ;; Registers used:
 32251 ;;		wreg, status,2
 32252 ;; Tracked objects:
 32253 ;;		On entry : 3F/3B
 32254 ;;		On exit  : 3F/3B
 32255 ;;		Unchanged: 0/0
 32256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32261 ;;Total ram usage:        0 bytes
 32262 ;; Hardware stack levels used:    1
 32263 ;; Hardware stack levels required when called:   15
 32264 ;; This function calls:
 32265 ;;		Nothing
 32266 ;; This function is called by:
 32267 ;;		_SYSTEM_Initialize
 32268 ;; This function uses a reentrant model
 32269 ;;
 32270                           
 32271                           	psect	text138
 32272  01B2AC                     __ptext138:
 32273                           	opt callstack 0
 32274  01B2AC                     _DMA1_Initialize:
 32275                           	opt callstack 14
 32276                           
 32277                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 32278                           
 32279                           ; BSR set to: 59
 32280                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32281                           ;incstack = 0
 32282  01B2AC  0E00               	movlw	0
 32283  01B2AE  013B               	movlb	59	; () banked
 32284  01B2B0  6FF9               	movwf	249,b	;volatile
 32285  01B2B2  0E10               	movlw	16
 32286  01B2B4  6FFA               	movwf	250,b	;volatile
 32287  01B2B6  0E00               	movlw	0
 32288  01B2B8  6FFB               	movwf	251,b	;volatile
 32289                           
 32290                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 32291  01B2BA  0E3D               	movlw	61
 32292  01B2BC  6FF1               	movwf	241,b	;volatile
 32293  01B2BE  0E11               	movlw	17
 32294  01B2C0  6FF0               	movwf	240,b	;volatile
 32295                           
 32296                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 32297  01B2C2  0E03               	movlw	3
 32298  01B2C4  6FFD               	movwf	253,b	;volatile
 32299                           
 32300                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 32301  01B2C6  0E00               	movlw	0
 32302  01B2C8  6FF8               	movwf	248,b	;volatile
 32303  01B2CA  0E01               	movlw	1
 32304  01B2CC  6FF7               	movwf	247,b	;volatile
 32305                           
 32306                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 32307  01B2CE  0E00               	movlw	0
 32308  01B2D0  6FEF               	movwf	239,b	;volatile
 32309  01B2D2  0E01               	movlw	1
 32310  01B2D4  6FEE               	movwf	238,b	;volatile
 32311                           
 32312                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 32313  01B2D6  0E15               	movlw	21
 32314  01B2D8  6FFF               	movwf	255,b	;volatile
 32315                           
 32316                           ; BSR set to: 59
 32317                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 32318  01B2DA  6BFE               	clrf	254,b	;volatile
 32319                           
 32320                           ; BSR set to: 59
 32321                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 32322  01B2DC  0139               	movlb	57	; () banked
 32323  01B2DE  93A2               	bcf	162,1,b	;volatile
 32324                           
 32325                           ; BSR set to: 57
 32326                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 32327  01B2E0  91A2               	bcf	162,0,b	;volatile
 32328                           
 32329                           ; BSR set to: 57
 32330                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 32331  01B2E2  97A2               	bcf	162,3,b	;volatile
 32332                           
 32333                           ; BSR set to: 57
 32334                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 32335  01B2E4  95A2               	bcf	162,2,b	;volatile
 32336                           
 32337                           ; BSR set to: 57
 32338                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 32339  01B2E6  8392               	bsf	146,1,b	;volatile
 32340                           
 32341                           ; BSR set to: 57
 32342                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 32343  01B2E8  8192               	bsf	146,0,b	;volatile
 32344                           
 32345                           ; BSR set to: 57
 32346                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 32347  01B2EA  8792               	bsf	146,3,b	;volatile
 32348                           
 32349                           ; BSR set to: 57
 32350                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 32351  01B2EC  8592               	bsf	146,2,b	;volatile
 32352                           
 32353                           ; BSR set to: 57
 32354                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 32355  01B2EE  6BF1               	clrf	241,b	;volatile
 32356                           
 32357                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 32358  01B2F0  0E01               	movlw	1
 32359  01B2F2  6FF2               	movwf	242,b	;volatile
 32360                           
 32361                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 32362  01B2F4  0E04               	movlw	4
 32363  01B2F6  6FF3               	movwf	243,b	;volatile
 32364                           
 32365                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 32366  01B2F8  0E02               	movlw	2
 32367  01B2FA  6FF4               	movwf	244,b	;volatile
 32368                           
 32369                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 32370  01B2FC  0E03               	movlw	3
 32371  01B2FE  6FF7               	movwf	247,b	;volatile
 32372  01B300  9ED2               	bcf	16338,7,c	;# 
 32373  01B302  0139               	banksel	14831	;# 
 32374  01B304  0E55               	movlw	85	;# 
 32375  01B306  6FEF               	movwf	14831,b	;# 
 32376  01B308  0EAA               	movlw	170	;# 
 32377  01B30A  6FEF               	movwf	14831,b	;# 
 32378  01B30C  81EF               	bsf	14831,0,b	;# 
 32379  01B30E  8ED2               	bsf	16338,7,c	;# 
 32380                           
 32381                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 32382  01B310  013B               	movlb	59	; () banked
 32383  01B312  6BFC               	clrf	252,b	;volatile
 32384                           
 32385                           ; BSR set to: 59
 32386                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32387  01B314  0012               	return		;funcret
 32388  01B316                     __end_of_DMA1_Initialize:
 32389                           	opt callstack 0
 32390                           
 32391 ;; *************** function _CLKREF_Initialize *****************
 32392 ;; Defined at:
 32393 ;;		line 58 in file "mcc_generated_files/clkref.c"
 32394 ;; Parameters:    Size  Location     Type
 32395 ;;		None
 32396 ;; Auto vars:     Size  Location     Type
 32397 ;;		None
 32398 ;; Return value:  Size  Location     Type
 32399 ;;                  1  [STACK] void 
 32400 ;; Registers used:
 32401 ;;		wreg, status,2
 32402 ;; Tracked objects:
 32403 ;;		On entry : 3F/3B
 32404 ;;		On exit  : 3F/3C
 32405 ;;		Unchanged: 0/0
 32406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32411 ;;Total ram usage:        0 bytes
 32412 ;; Hardware stack levels used:    1
 32413 ;; Hardware stack levels required when called:   15
 32414 ;; This function calls:
 32415 ;;		Nothing
 32416 ;; This function is called by:
 32417 ;;		_SYSTEM_Initialize
 32418 ;; This function uses a reentrant model
 32419 ;;
 32420                           
 32421                           	psect	text139
 32422  01C5AA                     __ptext139:
 32423                           	opt callstack 0
 32424  01C5AA                     _CLKREF_Initialize:
 32425                           	opt callstack 14
 32426                           
 32427                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 32428                           
 32429                           ; BSR set to: 59
 32430                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32431                           ;incstack = 0
 32432  01C5AA  013C               	movlb	60	; () banked
 32433  01C5AC  6BE6               	clrf	230,b	;volatile
 32434                           
 32435                           ; BSR set to: 60
 32436                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 32437  01C5AE  0E94               	movlw	148
 32438  01C5B0  6FE5               	movwf	229,b	;volatile
 32439                           
 32440                           ; BSR set to: 60
 32441                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32442  01C5B2  0012               	return		;funcret
 32443  01C5B4                     __end_of_CLKREF_Initialize:
 32444                           	opt callstack 0
 32445                           
 32446 ;; *************** function _ADCC_Initialize *****************
 32447 ;; Defined at:
 32448 ;;		line 65 in file "mcc_generated_files/adcc.c"
 32449 ;; Parameters:    Size  Location     Type
 32450 ;;		None
 32451 ;; Auto vars:     Size  Location     Type
 32452 ;;		None
 32453 ;; Return value:  Size  Location     Type
 32454 ;;                  1  [STACK] void 
 32455 ;; Registers used:
 32456 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 32457 ;; Tracked objects:
 32458 ;;		On entry : 3F/3E
 32459 ;;		On exit  : 0/0
 32460 ;;		Unchanged: 0/0
 32461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32466 ;;Total ram usage:        0 bytes
 32467 ;; Hardware stack levels used:    1
 32468 ;; Hardware stack levels required when called:   16
 32469 ;; This function calls:
 32470 ;;		_ADCC_SetADIInterruptHandler
 32471 ;;		_ADCC_SetADTIInterruptHandler
 32472 ;; This function is called by:
 32473 ;;		_SYSTEM_Initialize
 32474 ;; This function uses a reentrant model
 32475 ;;
 32476                           
 32477                           	psect	text140
 32478  01B316                     __ptext140:
 32479                           	opt callstack 0
 32480  01B316                     _ADCC_Initialize:
 32481                           	opt callstack 13
 32482                           
 32483                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 32484                           
 32485                           ; BSR set to: 60
 32486                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32487                           ;incstack = 0
 32488  01B316  013E               	movlb	62	; () banked
 32489  01B318  6BDE               	clrf	222,b	;volatile
 32490                           
 32491                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 32492  01B31A  6BDF               	clrf	223,b	;volatile
 32493                           
 32494                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 32495  01B31C  6BE0               	clrf	224,b	;volatile
 32496                           
 32497                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 32498  01B31E  6BE1               	clrf	225,b	;volatile
 32499                           
 32500                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 32501  01B320  6BE4               	clrf	228,b	;volatile
 32502                           
 32503                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 32504  01B322  6BE5               	clrf	229,b	;volatile
 32505                           
 32506                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 32507  01B324  6BEA               	clrf	234,b	;volatile
 32508                           
 32509                           ; BSR set to: 62
 32510                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 32511  01B326  0E40               	movlw	64
 32512  01B328  6FEC               	movwf	236,b	;volatile
 32513                           
 32514                           ; BSR set to: 62
 32515                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 32516  01B32A  6BF1               	clrf	241,b	;volatile
 32517                           
 32518                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 32519  01B32C  0E20               	movlw	32
 32520  01B32E  6FF3               	movwf	243,b	;volatile
 32521                           
 32522                           ; BSR set to: 62
 32523                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 32524  01B330  6BF4               	clrf	244,b	;volatile
 32525                           
 32526                           ; BSR set to: 62
 32527                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 32528  01B332  6BF5               	clrf	245,b	;volatile
 32529                           
 32530                           ; BSR set to: 62
 32531                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 32532  01B334  6BF6               	clrf	246,b	;volatile
 32533                           
 32534                           ; BSR set to: 62
 32535                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 32536  01B336  6BF7               	clrf	247,b	;volatile
 32537                           
 32538                           ; BSR set to: 62
 32539                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 32540  01B338  6BF9               	clrf	249,b	;volatile
 32541                           
 32542                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 32543  01B33A  0E5B               	movlw	91
 32544  01B33C  6FFA               	movwf	250,b	;volatile
 32545                           
 32546                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 32547  01B33E  0E27               	movlw	39
 32548  01B340  6FFB               	movwf	251,b	;volatile
 32549                           
 32550                           ; BSR set to: 62
 32551                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 32552  01B342  6BFC               	clrf	252,b	;volatile
 32553                           
 32554                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 32555  01B344  0E02               	movlw	2
 32556  01B346  6FFD               	movwf	253,b	;volatile
 32557                           
 32558                           ; BSR set to: 62
 32559                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 32560  01B348  6BFE               	clrf	254,b	;volatile
 32561                           
 32562                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 32563  01B34A  0E07               	movlw	7
 32564  01B34C  6FFF               	movwf	255,b	;volatile
 32565                           
 32566                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 32567  01B34E  0E84               	movlw	132
 32568  01B350  6FF8               	movwf	248,b	;volatile
 32569                           
 32570                           ; BSR set to: 62
 32571                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 32572  01B352  0139               	movlb	57	; () banked
 32573  01B354  95A1               	bcf	161,2,b	;volatile
 32574                           
 32575                           ; BSR set to: 57
 32576                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 32577  01B356  8591               	bsf	145,2,b	;volatile
 32578                           
 32579                           ; BSR set to: 57
 32580                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 32581  01B358  0E30               	movlw	low _ADCC_DefaultInterruptHandler
 32582  01B35A  6EE6               	movwf	postinc1,c
 32583  01B35C  0EC6               	movlw	high _ADCC_DefaultInterruptHandler
 32584  01B35E  6EE6               	movwf	postinc1,c
 32585  01B360  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 32586  01B362  6EE6               	movwf	postinc1,c
 32587  01B364  ECCF  F0E0         	call	_ADCC_SetADIInterruptHandler	;wreg free
 32588                           
 32589                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 32590  01B368  0139               	movlb	57	; () banked
 32591  01B36A  97A1               	bcf	161,3,b	;volatile
 32592                           
 32593                           ; BSR set to: 57
 32594                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 32595  01B36C  8791               	bsf	145,3,b	;volatile
 32596                           
 32597                           ; BSR set to: 57
 32598                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 32599  01B36E  0E30               	movlw	low _ADCC_DefaultInterruptHandler
 32600  01B370  6EE6               	movwf	postinc1,c
 32601  01B372  0EC6               	movlw	high _ADCC_DefaultInterruptHandler
 32602  01B374  6EE6               	movwf	postinc1,c
 32603  01B376  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 32604  01B378  6EE6               	movwf	postinc1,c
 32605  01B37A  ECBB  F0E0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 32606                           
 32607                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32608  01B37E  0012               	return		;funcret
 32609  01B380                     __end_of_ADCC_Initialize:
 32610                           	opt callstack 0
 32611                           
 32612 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 32613 ;; Defined at:
 32614 ;;		line 336 in file "mcc_generated_files/adcc.c"
 32615 ;; Parameters:    Size  Location     Type
 32616 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32617 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 32618 ;; Auto vars:     Size  Location     Type
 32619 ;;		None
 32620 ;; Return value:  Size  Location     Type
 32621 ;;                  1  [STACK] void 
 32622 ;; Registers used:
 32623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32624 ;; Tracked objects:
 32625 ;;		On entry : 0/0
 32626 ;;		On exit  : 0/0
 32627 ;;		Unchanged: 0/0
 32628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32633 ;;Total ram usage:        0 bytes
 32634 ;; Hardware stack levels used:    1
 32635 ;; Hardware stack levels required when called:   15
 32636 ;; This function calls:
 32637 ;;		Nothing
 32638 ;; This function is called by:
 32639 ;;		_ADCC_Initialize
 32640 ;;		_start_adc_scan
 32641 ;; This function uses a reentrant model
 32642 ;;
 32643                           
 32644                           	psect	text141
 32645  01C176                     __ptext141:
 32646                           	opt callstack 0
 32647  01C176                     _ADCC_SetADTIInterruptHandler:
 32648                           	opt callstack 14
 32649                           
 32650                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 32651                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32652                           
 32653                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32654                           ;incstack = 0
 32655  01C176  50E1               	movf	fsr1l,w,c
 32656  01C178  0FFD               	addlw	-3
 32657  01C17A  6ED9               	movwf	fsr2l,c
 32658  01C17C  50E2               	movf	fsr1h,w,c
 32659  01C17E  6EDA               	movwf	fsr2h,c
 32660  01C180  0EFF               	movlw	255
 32661  01C182  22DA               	addwfc	fsr2h,f,c
 32662  01C184  006F FF78  F085    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 32663  01C18A  006F FF78  F086    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 32664  01C190  006F FF74  F087    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 32665                           
 32666                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 32667  01C196  52E5               	movf	postdec1,f,c
 32668  01C198  52E5               	movf	postdec1,f,c
 32669  01C19A  52E5               	movf	postdec1,f,c
 32670  01C19C  0012               	return		;funcret
 32671  01C19E                     __end_of_ADCC_SetADTIInterruptHandler:
 32672                           	opt callstack 0
 32673                           
 32674 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 32675 ;; Defined at:
 32676 ;;		line 323 in file "mcc_generated_files/adcc.c"
 32677 ;; Parameters:    Size  Location     Type
 32678 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32679 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 32680 ;; Auto vars:     Size  Location     Type
 32681 ;;		None
 32682 ;; Return value:  Size  Location     Type
 32683 ;;                  1  [STACK] void 
 32684 ;; Registers used:
 32685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32686 ;; Tracked objects:
 32687 ;;		On entry : 6/0
 32688 ;;		On exit  : 0/0
 32689 ;;		Unchanged: 0/0
 32690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32695 ;;Total ram usage:        0 bytes
 32696 ;; Hardware stack levels used:    1
 32697 ;; Hardware stack levels required when called:   15
 32698 ;; This function calls:
 32699 ;;		Nothing
 32700 ;; This function is called by:
 32701 ;;		_ADCC_Initialize
 32702 ;;		_start_adc_scan
 32703 ;; This function uses a reentrant model
 32704 ;;
 32705                           
 32706                           	psect	text142
 32707  01C19E                     __ptext142:
 32708                           	opt callstack 0
 32709  01C19E                     _ADCC_SetADIInterruptHandler:
 32710                           	opt callstack 14
 32711                           
 32712                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 32713                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32714                           
 32715                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32716                           ;incstack = 0
 32717  01C19E  50E1               	movf	fsr1l,w,c
 32718  01C1A0  0FFD               	addlw	-3
 32719  01C1A2  6ED9               	movwf	fsr2l,c
 32720  01C1A4  50E2               	movf	fsr1h,w,c
 32721  01C1A6  6EDA               	movwf	fsr2h,c
 32722  01C1A8  0EFF               	movlw	255
 32723  01C1AA  22DA               	addwfc	fsr2h,f,c
 32724  01C1AC  006F FF78  F088    	movff	postinc2,_ADCC_ADI_InterruptHandler
 32725  01C1B2  006F FF78  F089    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 32726  01C1B8  006F FF74  F08A    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 32727                           
 32728                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 32729  01C1BE  52E5               	movf	postdec1,f,c
 32730  01C1C0  52E5               	movf	postdec1,f,c
 32731  01C1C2  52E5               	movf	postdec1,f,c
 32732  01C1C4  0012               	return		;funcret
 32733  01C1C6                     __end_of_ADCC_SetADIInterruptHandler:
 32734                           	opt callstack 0
 32735                           
 32736 ;; *************** function _INT1_ISR *****************
 32737 ;; Defined at:
 32738 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 32739 ;; Parameters:    Size  Location     Type
 32740 ;;		None
 32741 ;; Auto vars:     Size  Location     Type
 32742 ;;		None
 32743 ;; Return value:  Size  Location     Type
 32744 ;;                  1    wreg      void 
 32745 ;; Registers used:
 32746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 32747 ;; Tracked objects:
 32748 ;;		On entry : 0/0
 32749 ;;		On exit  : 0/0
 32750 ;;		Unchanged: 0/0
 32751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32754 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32755 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32756 ;;Total ram usage:        4 bytes
 32757 ;; Hardware stack levels used:    1
 32758 ;; Hardware stack levels required when called:    5
 32759 ;; This function calls:
 32760 ;;		_INT1_CallBack
 32761 ;; This function is called by:
 32762 ;;		Interrupt level 1
 32763 ;; This function uses a non-reentrant model
 32764 ;;
 32765                           
 32766                           	psect	text143
 32767  01BC24                     __ptext143:
 32768                           	opt callstack 0
 32769  01BC24                     _INT1_ISR:
 32770                           	opt callstack 11
 32771                           
 32772                           ;incstack = 0
 32773  01BC24  006F FF60  F027    	movff	status,??_INT1_ISR
 32774  01BC2A  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 32775  01BC30  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 32776  01BC36  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 32777  01BC3C  EE16  F0AF         	lfsr	1,___intlo_sp
 32778                           
 32779                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 32780  01BC40  0139               	movlb	57	; () banked
 32781  01BC42  91A5               	bcf	165,0,b	;volatile
 32782                           
 32783                           ; BSR set to: 57
 32784                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 32785  01BC44  EC32  F0E1         	call	_INT1_CallBack	;wreg free
 32786  01BC48  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 32787  01BC4E  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 32788  01BC54  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 32789  01BC5A  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 32790  01BC60  0011               	retfie		f
 32791  01BC62                     __end_of_INT1_ISR:
 32792                           	opt callstack 0
 32793                           
 32794 ;; *************** function _INT1_CallBack *****************
 32795 ;; Defined at:
 32796 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 32797 ;; Parameters:    Size  Location     Type
 32798 ;;		None
 32799 ;; Auto vars:     Size  Location     Type
 32800 ;;		None
 32801 ;; Return value:  Size  Location     Type
 32802 ;;                  1  [STACK] void 
 32803 ;; Registers used:
 32804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 32805 ;; Tracked objects:
 32806 ;;		On entry : 3F/39
 32807 ;;		On exit  : 0/0
 32808 ;;		Unchanged: 0/0
 32809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32814 ;;Total ram usage:        0 bytes
 32815 ;; Hardware stack levels used:    1
 32816 ;; Hardware stack levels required when called:    4
 32817 ;; This function calls:
 32818 ;;		Absolute function
 32819 ;;		_INT1_DefaultInterruptHandler
 32820 ;;		_switch_handler
 32821 ;; This function is called by:
 32822 ;;		_INT1_ISR
 32823 ;; This function uses a reentrant model
 32824 ;;
 32825                           
 32826                           	psect	text144
 32827  01C264                     __ptext144:
 32828                           	opt callstack 0
 32829  01C264                     _INT1_CallBack:
 32830                           	opt callstack 11
 32831                           
 32832                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 32833                           
 32834                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32835                           ;incstack = 0
 32836  01C264  0100               	movlb	0	; () banked
 32837  01C266  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 32838  01C268  1195               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 32839  01C26A  1196               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 32840  01C26C  B4D8               	btfsc	status,2,c
 32841  01C26E  0012               	return	
 32842                           
 32843                           ; BSR set to: 0
 32844                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 32845  01C270  D801               	call	u1009_28
 32846  01C272  0012               	return	
 32847  01C274                     u1009_28:
 32848  01C274  0005               	push	
 32849  01C276  6EFA               	movwf	pclath,c
 32850  01C278  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 32851  01C27A  6EFD               	movwf	tosl,c
 32852  01C27C  5195               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 32853  01C27E  6EFE               	movwf	tosh,c
 32854  01C280  5196               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 32855  01C282  6EFF               	movwf	tosu,c
 32856  01C284  50FA               	movf	pclath,w,c
 32857  01C286  0012               	return		;indir
 32858  01C288                     __end_of_INT1_CallBack:
 32859                           	opt callstack 0
 32860                           
 32861 ;; *************** function _INT1_DefaultInterruptHandler *****************
 32862 ;; Defined at:
 32863 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 32864 ;; Parameters:    Size  Location     Type
 32865 ;;		None
 32866 ;; Auto vars:     Size  Location     Type
 32867 ;;		None
 32868 ;; Return value:  Size  Location     Type
 32869 ;;                  1  [STACK] void 
 32870 ;; Registers used:
 32871 ;;		None
 32872 ;; Tracked objects:
 32873 ;;		On entry : 3F/0
 32874 ;;		On exit  : 0/0
 32875 ;;		Unchanged: 0/0
 32876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32881 ;;Total ram usage:        0 bytes
 32882 ;; Hardware stack levels used:    1
 32883 ;; Hardware stack levels required when called:    3
 32884 ;; This function calls:
 32885 ;;		Nothing
 32886 ;; This function is called by:
 32887 ;;		_EXT_INT_Initialize
 32888 ;;		_INT1_CallBack
 32889 ;; This function uses a reentrant model
 32890 ;;
 32891                           
 32892                           	psect	text145
 32893  01C62A                     __ptext145:
 32894                           	opt callstack 0
 32895  01C62A                     _INT1_DefaultInterruptHandler:
 32896                           	opt callstack 11
 32897                           
 32898                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32899                           
 32900                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32901                           ;incstack = 0
 32902  01C62A  0012               	return		;funcret
 32903  01C62C                     __end_of_INT1_DefaultInterruptHandler:
 32904                           	opt callstack 0
 32905                           
 32906 ;; *************** function _switch_handler *****************
 32907 ;; Defined at:
 32908 ;;		line 58 in file "dio.c"
 32909 ;; Parameters:    Size  Location     Type
 32910 ;;		None
 32911 ;; Auto vars:     Size  Location     Type
 32912 ;;  i               1  [STACK] unsigned char 
 32913 ;;  sw_value        1  [STACK] unsigned char 
 32914 ;; Return value:  Size  Location     Type
 32915 ;;                  1  [STACK] void 
 32916 ;; Registers used:
 32917 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 32918 ;; Tracked objects:
 32919 ;;		On entry : 3F/0
 32920 ;;		On exit  : 0/0
 32921 ;;		Unchanged: 0/0
 32922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32927 ;;Total ram usage:        0 bytes
 32928 ;; Hardware stack levels used:    1
 32929 ;; Hardware stack levels required when called:    3
 32930 ;; This function calls:
 32931 ;;		Nothing
 32932 ;; This function is called by:
 32933 ;;		_start_switch_handler
 32934 ;;		_INT1_CallBack
 32935 ;; This function uses a reentrant model
 32936 ;;
 32937                           
 32938                           	psect	text146
 32939  0197A0                     __ptext146:
 32940                           	opt callstack 0
 32941  0197A0                     _switch_handler:
 32942                           	opt callstack 0
 32943                           
 32944                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32945  0197A0  52E6               	movf	postinc1,f,c
 32946  0197A2  52E6               	movf	postinc1,f,c
 32947                           
 32948                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 32949                           ;stkvar	_i @ sp[(-2)+0]
 32950                           
 32951                           ;incstack = 0
 32952  0197A4  0EFE               	movlw	-2
 32953  0197A6  6AE3               	clrf	plusw1,c
 32954  0197A8  9ABF               	bcf	191,5,c	;volatile
 32955                           
 32956                           ;dio.c: 72:  __nop();
 32957  0197AA  F000               	nop	
 32958                           
 32959                           ;dio.c: 73:  __nop();
 32960  0197AC  F000               	nop	
 32961                           
 32962                           ;dio.c: 74:  __nop();
 32963  0197AE  F000               	nop	
 32964                           
 32965                           ;dio.c: 75:  __nop();
 32966  0197B0  F000               	nop	
 32967                           
 32968                           ;dio.c: 76:  __nop();
 32969  0197B2  F000               	nop	
 32970                           
 32971                           ;dio.c: 77:  __nop();
 32972  0197B4  F000               	nop	
 32973  0197B6  D013               	goto	l10774
 32974  0197B8                     l10762:
 32975                           
 32976                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 32977  0197B8  A6CF               	btfss	207,3,c	;volatile
 32978  0197BA  D00B               	goto	u978_20
 32979  0197BC  D007               	goto	u978_21
 32980  0197BE                     u977_28:
 32981                           
 32982                           ;stkvar	_sw_value @ sp[(-2)+1]
 32983  0197BE  0EFF               	movlw	-1
 32984  0197C0  0060  F033  FFE3   	movff	btemp+11,plusw1
 32985                           
 32986                           ;dio.c: 83:    break;
 32987  0197C6  D021               	goto	l10776
 32988  0197C8                     l10764:
 32989                           
 32990                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 32991  0197C8  A4CF               	btfss	207,2,c	;volatile
 32992  0197CA  D003               	goto	u978_20
 32993  0197CC                     u978_21:
 32994  0197CC  6A0C               	clrf	(btemp+11)^0,c
 32995  0197CE  2A0C               	incf	(btemp+11)^0,f,c
 32996  0197D0  D7F6               	goto	u977_28
 32997  0197D2                     u978_20:
 32998  0197D2  6A0C               	clrf	(btemp+11)^0,c
 32999  0197D4  D7F4               	goto	u977_28
 33000  0197D6                     l10766:
 33001                           
 33002                           ;dio.c: 88:    sw_value = 1;
 33003                           ;stkvar	_sw_value @ sp[(-2)+1]
 33004  0197D6  0EFF               	movlw	-1
 33005  0197D8  6AE3               	clrf	plusw1,c
 33006  0197DA  2AE3               	incf	plusw1,f,c
 33007                           
 33008                           ;dio.c: 89:    break;
 33009  0197DC  D016               	goto	l10776
 33010  0197DE                     l10774:
 33011                           
 33012                           ;stkvar	_i @ sp[(-2)+0]
 33013  0197DE  0EFE               	movlw	-2
 33014  0197E0  50E3               	movf	plusw1,w,c
 33015  0197E2  6E0B               	movwf	(btemp+10)^0,c
 33016  0197E4  6A0C               	clrf	(btemp+11)^0,c
 33017                           
 33018                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33019                           ; Switch size 1, requested type "simple"
 33020                           ; Number of cases is 1, Range of values is 0 to 0
 33021                           ; switch strategies available:
 33022                           ; Name         Instructions Cycles
 33023                           ; simple_byte            4     3 (average)
 33024                           ;	Chosen strategy is simple_byte
 33025  0197E6  500C               	movf	(btemp+11)^0,w,c
 33026  0197E8  0A00               	xorlw	0	; case 0
 33027  0197EA  A4D8               	btfss	status,2,c
 33028  0197EC  D7F4               	goto	l10766
 33029                           
 33030                           ; Switch size 1, requested type "simple"
 33031                           ; Number of cases is 4, Range of values is 0 to 3
 33032                           ; switch strategies available:
 33033                           ; Name         Instructions Cycles
 33034                           ; simple_byte           13     7 (average)
 33035                           ;	Chosen strategy is simple_byte
 33036  0197EE  500B               	movf	(btemp+10)^0,w,c
 33037  0197F0  0A00               	xorlw	0	; case 0
 33038  0197F2  B4D8               	btfsc	status,2,c
 33039  0197F4  D7F0               	goto	l10766
 33040  0197F6  0A01               	xorlw	1	; case 1
 33041  0197F8  B4D8               	btfsc	status,2,c
 33042  0197FA  D7ED               	goto	l10766
 33043  0197FC  0A03               	xorlw	3	; case 2
 33044  0197FE  B4D8               	btfsc	status,2,c
 33045  019800  D7E3               	goto	l10764
 33046  019802  0A01               	xorlw	1	; case 3
 33047  019804  B4D8               	btfsc	status,2,c
 33048  019806  D7D8               	goto	l10762
 33049  019808  D7E6               	goto	l10766
 33050  01980A                     l10776:
 33051                           
 33052                           ;dio.c: 99:   if (sw_value) {
 33053                           ;stkvar	_sw_value @ sp[(-2)+1]
 33054  01980A  0EFF               	movlw	-1
 33055  01980C  50E3               	movf	plusw1,w,c
 33056  01980E  B4D8               	btfsc	status,2,c
 33057  019810  D018               	goto	l10782
 33058                           
 33059                           ;dio.c: 100:    if (S.button[i].sw == SW_ON) {
 33060                           ;stkvar	_i @ sp[(-2)+0]
 33061  019812  0EFE               	movlw	-2
 33062  019814  50E3               	movf	plusw1,w,c
 33063  019816  0D05               	mullw	5
 33064  019818  0E54               	movlw	low _S
 33065  01981A  24F3               	addwf	243,w,c
 33066  01981C  6ED9               	movwf	fsr2l,c
 33067  01981E  0E02               	movlw	high _S
 33068  019820  20F4               	addwfc	prodh,w,c
 33069  019822  6EDA               	movwf	fsr2h,c
 33070  019824  04DE               	decf	postinc2,w,c
 33071  019826  A4D8               	btfss	status,2,c
 33072  019828  D049               	goto	l10790
 33073                           
 33074                           ;dio.c: 101:     S.button[i].sw = SW_OFF;
 33075                           ;stkvar	_i @ sp[(-2)+0]
 33076  01982A  0EFE               	movlw	-2
 33077  01982C  50E3               	movf	plusw1,w,c
 33078  01982E  0D05               	mullw	5
 33079  019830  0E54               	movlw	low _S
 33080  019832  24F3               	addwf	243,w,c
 33081  019834  6ED9               	movwf	fsr2l,c
 33082  019836  0E02               	movlw	high _S
 33083  019838  20F4               	addwfc	prodh,w,c
 33084  01983A  6EDA               	movwf	fsr2h,c
 33085  01983C  0E00               	movlw	0
 33086  01983E  6EDF               	movwf	indf2,c
 33087  019840  D03D               	goto	l10790
 33088  019842                     l10782:
 33089                           
 33090                           ;dio.c: 104:    if (S.button[i].sw == SW_OFF) {
 33091                           ;stkvar	_i @ sp[(-2)+0]
 33092  019842  0EFE               	movlw	-2
 33093  019844  50E3               	movf	plusw1,w,c
 33094  019846  0D05               	mullw	5
 33095  019848  0E54               	movlw	low _S
 33096  01984A  24F3               	addwf	243,w,c
 33097  01984C  6ED9               	movwf	fsr2l,c
 33098  01984E  0E02               	movlw	high _S
 33099  019850  20F4               	addwfc	prodh,w,c
 33100  019852  6EDA               	movwf	fsr2h,c
 33101  019854  50DF               	movf	indf2,w,c
 33102  019856  A4D8               	btfss	status,2,c
 33103  019858  D031               	goto	l10790
 33104                           
 33105                           ;dio.c: 105:     S.button[i].sw = SW_ON;
 33106                           ;stkvar	_i @ sp[(-2)+0]
 33107  01985A  0EFE               	movlw	-2
 33108  01985C  50E3               	movf	plusw1,w,c
 33109  01985E  0D05               	mullw	5
 33110  019860  0E54               	movlw	low _S
 33111  019862  24F3               	addwf	243,w,c
 33112  019864  6ED9               	movwf	fsr2l,c
 33113  019866  0E02               	movlw	high _S
 33114  019868  20F4               	addwfc	prodh,w,c
 33115  01986A  6EDA               	movwf	fsr2h,c
 33116  01986C  0E01               	movlw	1
 33117  01986E  6EDF               	movwf	indf2,c
 33118                           
 33119                           ;dio.c: 106:     S.button[i].count = V.timerint_count;
 33120  019870  EE20  F1C2         	lfsr	2,_V+187	;volatile
 33121                           
 33122                           ;stkvar	_i @ sp[(-2)+0]
 33123  019874  0EFE               	movlw	-2
 33124  019876  50E3               	movf	plusw1,w,c
 33125  019878  0D05               	mullw	5
 33126  01987A  0E55               	movlw	low (_S+1)
 33127  01987C  24F3               	addwf	243,w,c
 33128  01987E  6EE9               	movwf	fsr0l,c
 33129  019880  0E02               	movlw	high (_S+1)
 33130  019882  20F4               	addwfc	prodh,w,c
 33131  019884  6EEA               	movwf	fsr0h,c
 33132  019886  006F FF7B FFEE     	movff	postinc2,postinc0
 33133  01988C  006F FF7B FFEE     	movff	postinc2,postinc0
 33134  019892  006F FF7B FFEE     	movff	postinc2,postinc0
 33135  019898  006F FF7B FFEE     	movff	postinc2,postinc0
 33136                           
 33137                           ;dio.c: 107:     S.sw_bitmap |= 1 << i;
 33138                           ;stkvar	_i @ sp[(-2)+0]
 33139  01989E  0EFE               	movlw	-2
 33140  0198A0  006F FF8C  F00C    	movff	plusw1,btemp+11
 33141  0198A6  0E01               	movlw	1
 33142  0198A8  6E0B               	movwf	(btemp+10)^0,c
 33143  0198AA  2A0C               	incf	(btemp+11)^0,f,c
 33144  0198AC  D002               	goto	u982_24
 33145  0198AE                     u982_25:
 33146  0198AE  90D8               	bcf	status,0,c
 33147  0198B0  360B               	rlcf	(btemp+10)^0,f,c
 33148  0198B2                     u982_24:
 33149  0198B2  2E0C               	decfsz	(btemp+11)^0,f,c
 33150  0198B4  D7FC               	goto	u982_25
 33151  0198B6  500B               	movf	(btemp+10)^0,w,c
 33152  0198B8  0102               	movlb	2	; () banked
 33153  0198BA  137C               	iorwf	(_S+40)& (0+255),f,b	;volatile
 33154  0198BC                     l10790:
 33155                           
 33156                           ;dio.c: 110:  } while (++i < 4);
 33157                           ;stkvar	_i @ sp[(-2)+0]
 33158  0198BC  0EFE               	movlw	-2
 33159  0198BE  2AE3               	incf	plusw1,f,c
 33160  0198C0  0EFE               	movlw	-2
 33161  0198C2  006F FF8C  F001    	movff	plusw1,btemp
 33162  0198C8  0E03               	movlw	3
 33163  0198CA  6401               	cpfsgt	btemp^0,c
 33164  0198CC  D788               	goto	l10774
 33165                           
 33166                           ;dio.c: 119:  do { LATFbits.LATF5 = 1; } while(0);
 33167  0198CE  8ABF               	bsf	191,5,c	;volatile
 33168                           
 33169                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 33170  0198D0  52E5               	movf	postdec1,f,c
 33171  0198D2  52E5               	movf	postdec1,f,c
 33172  0198D4  0012               	return		;funcret
 33173  0198D6                     __end_of_switch_handler:
 33174                           	opt callstack 0
 33175                           
 33176 ;; *************** function _TMR5_ISR *****************
 33177 ;; Defined at:
 33178 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 33179 ;; Parameters:    Size  Location     Type
 33180 ;;		None
 33181 ;; Auto vars:     Size  Location     Type
 33182 ;;		None
 33183 ;; Return value:  Size  Location     Type
 33184 ;;                  1    wreg      void 
 33185 ;; Registers used:
 33186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 33187 ;; Tracked objects:
 33188 ;;		On entry : 0/0
 33189 ;;		On exit  : 3F/0
 33190 ;;		Unchanged: 0/0
 33191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33194 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33195 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33196 ;;Total ram usage:       15 bytes
 33197 ;; Hardware stack levels used:    1
 33198 ;; Hardware stack levels required when called:    9
 33199 ;; This function calls:
 33200 ;;		_TMR5_CallBack
 33201 ;;		_TMR5_WriteTimer
 33202 ;; This function is called by:
 33203 ;;		Interrupt level 1
 33204 ;; This function uses a non-reentrant model
 33205 ;;
 33206                           
 33207                           	psect	text147
 33208  01A268                     __ptext147:
 33209                           	opt callstack 0
 33210  01A268                     _TMR5_ISR:
 33211                           	opt callstack 7
 33212                           
 33213                           ;incstack = 0
 33214  01A268  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 33215  01A26E  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 33216  01A274  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 33217  01A27A  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 33218  01A280  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 33219  01A286  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 33220  01A28C  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 33221  01A292  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 33222  01A298  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 33223  01A29E  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 33224  01A2A4  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 33225  01A2AA  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 33226  01A2B0  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 33227  01A2B6  EE16  F0AF         	lfsr	1,___intlo_sp
 33228                           
 33229                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 33230  01A2BA  0139               	movlb	57	; () banked
 33231  01A2BC  9DA8               	bcf	168,6,b	;volatile
 33232                           
 33233                           ; BSR set to: 57
 33234                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 33235  01A2BE  0060  F28B  FFE6   	movff	_timer5ReloadVal,postinc1
 33236  01A2C4  0060  F28F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 33237  01A2CA  ECD2  F0DD         	call	_TMR5_WriteTimer	;wreg free
 33238                           
 33239                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 33240  01A2CE  0101               	movlb	1	; () banked
 33241  01A2D0  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 33242  01A2D2  6E2B               	movwf	??_TMR5_ISR^0,c
 33243  01A2D4  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 33244  01A2D6  0E05               	movlw	5
 33245  01A2D8  262B               	addwf	??_TMR5_ISR^0,f,c
 33246  01A2DA  0E00               	movlw	0
 33247  01A2DC  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 33248  01A2DE  0100               	movlb	0	; () banked
 33249  01A2E0  4BA0               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 33250  01A2E2  2BA1               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 33251  01A2E4  502B               	movf	??_TMR5_ISR^0,w,c
 33252  01A2E6  5DA0               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 33253  01A2E8  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 33254  01A2EA  59A1               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 33255  01A2EC  A0D8               	btfss	status,0,c
 33256  01A2EE  D005               	goto	i1l1019
 33257                           
 33258                           ; BSR set to: 0
 33259                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 33260  01A2F0  EC44  F0E1         	call	_TMR5_CallBack	;wreg free
 33261                           
 33262                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 33263  01A2F4  0100               	movlb	0	; () banked
 33264  01A2F6  6BA0               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 33265  01A2F8  6BA1               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 33266  01A2FA                     i1l1019:
 33267                           
 33268                           ; BSR set to: 0
 33269  01A2FA  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 33270  01A300  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 33271  01A306  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 33272  01A30C  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 33273  01A312  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 33274  01A318  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 33275  01A31E  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 33276  01A324  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 33277  01A32A  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 33278  01A330  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 33279  01A336  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 33280  01A33C  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 33281  01A342  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 33282  01A348  0011               	retfie		f
 33283  01A34A                     __end_of_TMR5_ISR:
 33284                           	opt callstack 0
 33285                           
 33286 ;; *************** function _TMR5_WriteTimer *****************
 33287 ;; Defined at:
 33288 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 33289 ;; Parameters:    Size  Location     Type
 33290 ;;  timerVal        2  [STACK] unsigned short 
 33291 ;; Auto vars:     Size  Location     Type
 33292 ;;		None
 33293 ;; Return value:  Size  Location     Type
 33294 ;;                  1  [STACK] void 
 33295 ;; Registers used:
 33296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 33297 ;; Tracked objects:
 33298 ;;		On entry : 3F/39
 33299 ;;		On exit  : 0/0
 33300 ;;		Unchanged: 0/0
 33301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33306 ;;Total ram usage:        0 bytes
 33307 ;; Hardware stack levels used:    1
 33308 ;; Hardware stack levels required when called:    3
 33309 ;; This function calls:
 33310 ;;		Nothing
 33311 ;; This function is called by:
 33312 ;;		_TMR5_ISR
 33313 ;; This function uses a reentrant model
 33314 ;;
 33315                           
 33316                           	psect	text148
 33317  01BBA4                     __ptext148:
 33318                           	opt callstack 0
 33319  01BBA4                     _TMR5_WriteTimer:
 33320                           	opt callstack 12
 33321                           
 33322                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 33323                           
 33324                           ; BSR set to: 0
 33325                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33326                           ;incstack = 0
 33327  01BBA4  A49A               	btfss	154,2,c	;volatile
 33328  01BBA6  D00F               	goto	l10994
 33329                           
 33330                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 33331  01BBA8  909A               	bcf	154,0,c	;volatile
 33332                           
 33333                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 33334                           ;stkvar	_timerVal @ sp[(0)+-2]
 33335  01BBAA  0EFF               	movlw	255
 33336  01BBAC  24E1               	addwf	fsr1l,w,c
 33337  01BBAE  6ED9               	movwf	fsr2l,c
 33338  01BBB0  0EFF               	movlw	255
 33339  01BBB2  20E2               	addwfc	fsr1h,w,c
 33340  01BBB4  6EDA               	movwf	fsr2h,c
 33341  01BBB6  50DF               	movf	indf2,w,c
 33342  01BBB8  6E99               	movwf	153,c	;volatile
 33343                           
 33344                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 33345                           ;stkvar	_timerVal @ sp[(0)+-2]
 33346  01BBBA  0EFE               	movlw	-2
 33347  01BBBC  006F FF8F FF98     	movff	plusw1,16280	;volatile
 33348                           
 33349                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 33350  01BBC2  809A               	bsf	154,0,c	;volatile
 33351                           
 33352                           ;mcc_generated_files/tmr5.c: 144:  } else {
 33353  01BBC4  D00C               	goto	l1002
 33354  01BBC6                     l10994:
 33355                           
 33356                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 33357                           ;stkvar	_timerVal @ sp[(0)+-2]
 33358  01BBC6  0EFF               	movlw	255
 33359  01BBC8  24E1               	addwf	fsr1l,w,c
 33360  01BBCA  6ED9               	movwf	fsr2l,c
 33361  01BBCC  0EFF               	movlw	255
 33362  01BBCE  20E2               	addwfc	fsr1h,w,c
 33363  01BBD0  6EDA               	movwf	fsr2h,c
 33364  01BBD2  50DF               	movf	indf2,w,c
 33365  01BBD4  6E99               	movwf	153,c	;volatile
 33366                           
 33367                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 33368                           ;stkvar	_timerVal @ sp[(0)+-2]
 33369  01BBD6  0EFE               	movlw	-2
 33370  01BBD8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 33371  01BBDE                     l1002:
 33372                           
 33373                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 33374  01BBDE  52E5               	movf	postdec1,f,c
 33375  01BBE0  52E5               	movf	postdec1,f,c
 33376  01BBE2  0012               	return		;funcret
 33377  01BBE4                     __end_of_TMR5_WriteTimer:
 33378                           	opt callstack 0
 33379                           
 33380 ;; *************** function _TMR5_CallBack *****************
 33381 ;; Defined at:
 33382 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 33383 ;; Parameters:    Size  Location     Type
 33384 ;;		None
 33385 ;; Auto vars:     Size  Location     Type
 33386 ;;		None
 33387 ;; Return value:  Size  Location     Type
 33388 ;;                  1  [STACK] void 
 33389 ;; Registers used:
 33390 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 33391 ;; Tracked objects:
 33392 ;;		On entry : 3F/0
 33393 ;;		On exit  : 0/0
 33394 ;;		Unchanged: 0/0
 33395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33400 ;;Total ram usage:        0 bytes
 33401 ;; Hardware stack levels used:    1
 33402 ;; Hardware stack levels required when called:    8
 33403 ;; This function calls:
 33404 ;;		Absolute function
 33405 ;;		_TMR5_DefaultInterruptHandler
 33406 ;; This function is called by:
 33407 ;;		_TMR5_ISR
 33408 ;; This function uses a reentrant model
 33409 ;;
 33410                           
 33411                           	psect	text149
 33412  01C288                     __ptext149:
 33413                           	opt callstack 0
 33414  01C288                     _TMR5_CallBack:
 33415                           	opt callstack 7
 33416                           
 33417                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 33418                           
 33419                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33420                           ;incstack = 0
 33421  01C288  0100               	movlb	0	; () banked
 33422  01C28A  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 33423  01C28C  1180               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 33424  01C28E  1181               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 33425  01C290  B4D8               	btfsc	status,2,c
 33426  01C292  0012               	return	
 33427                           
 33428                           ; BSR set to: 0
 33429                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 33430  01C294  D801               	call	u1018_28
 33431  01C296  0012               	return	
 33432  01C298                     u1018_28:
 33433  01C298  0005               	push	
 33434  01C29A  6EFA               	movwf	pclath,c
 33435  01C29C  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 33436  01C29E  6EFD               	movwf	tosl,c
 33437  01C2A0  5180               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 33438  01C2A2  6EFE               	movwf	tosh,c
 33439  01C2A4  5181               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 33440  01C2A6  6EFF               	movwf	tosu,c
 33441  01C2A8  50FA               	movf	pclath,w,c
 33442  01C2AA  0012               	return		;indir
 33443  01C2AC                     __end_of_TMR5_CallBack:
 33444                           	opt callstack 0
 33445                           
 33446 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 33447 ;; Defined at:
 33448 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 33449 ;; Parameters:    Size  Location     Type
 33450 ;;		None
 33451 ;; Auto vars:     Size  Location     Type
 33452 ;;		None
 33453 ;; Return value:  Size  Location     Type
 33454 ;;                  1  [STACK] void 
 33455 ;; Registers used:
 33456 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 33457 ;; Tracked objects:
 33458 ;;		On entry : 3F/0
 33459 ;;		On exit  : 0/0
 33460 ;;		Unchanged: 0/0
 33461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33466 ;;Total ram usage:        0 bytes
 33467 ;; Hardware stack levels used:    1
 33468 ;; Hardware stack levels required when called:    7
 33469 ;; This function calls:
 33470 ;;		_check_day_time
 33471 ;; This function is called by:
 33472 ;;		_TMR5_Initialize
 33473 ;;		_TMR5_CallBack
 33474 ;; This function uses a reentrant model
 33475 ;;
 33476                           
 33477                           	psect	text150
 33478  01BCD4                     __ptext150:
 33479                           	opt callstack 0
 33480  01BCD4                     _TMR5_DefaultInterruptHandler:
 33481                           	opt callstack 7
 33482                           
 33483                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 33484                           
 33485                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33486                           ;incstack = 0
 33487  01BCD4  A0BE               	btfss	190,0,c	;volatile
 33488  01BCD6  D002               	goto	u956_20
 33489  01BCD8  0E01               	movlw	1
 33490  01BCDA  D001               	goto	u956_26
 33491  01BCDC                     u956_20:
 33492  01BCDC  0E00               	movlw	0
 33493  01BCDE                     u956_26:
 33494  01BCDE  0AFF               	xorlw	255
 33495  01BCE0  6E0C               	movwf	(btemp+11)^0,c
 33496  01BCE2  50BE               	movf	190,w,c	;volatile
 33497  01BCE4  180C               	xorwf	(btemp+11)^0,w,c
 33498  01BCE6  0BFE               	andlw	-2
 33499  01BCE8  180C               	xorwf	(btemp+11)^0,w,c
 33500  01BCEA  6EBE               	movwf	190,c	;volatile
 33501                           
 33502                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 33503  01BCEC  0E01               	movlw	1
 33504  01BCEE  0101               	movlb	1	; () banked
 33505  01BCF0  27C2               	addwf	(_V+187)& (0+255),f,b	;volatile
 33506  01BCF2  0E00               	movlw	0
 33507  01BCF4  23C3               	addwfc	(_V+188)& (0+255),f,b	;volatile
 33508  01BCF6  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 33509  01BCF8  23C5               	addwfc	(_V+190)& (0+255),f,b	;volatile
 33510                           
 33511                           ; BSR set to: 1
 33512                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 33513  01BCFA  0E01               	movlw	1
 33514  01BCFC  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 33515  01BCFE  0E00               	movlw	0
 33516  01BD00  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 33517  01BD02  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 33518  01BD04  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 33519                           
 33520                           ; BSR set to: 1
 33521                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 33522  01BD06  EC4F  F0C5         	call	_check_day_time	;wreg free
 33523                           
 33524                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33525  01BD0A  0012               	return		;funcret
 33526  01BD0C                     __end_of_TMR5_DefaultInterruptHandler:
 33527                           	opt callstack 0
 33528                           
 33529 ;; *************** function _check_day_time *****************
 33530 ;; Defined at:
 33531 ;;		line 165 in file "mbmc.c"
 33532 ;; Parameters:    Size  Location     Type
 33533 ;;		None
 33534 ;; Auto vars:     Size  Location     Type
 33535 ;;  light           4  [STACK] float 
 33536 ;; Return value:  Size  Location     Type
 33537 ;;                  1  [STACK] _Bool 
 33538 ;; Registers used:
 33539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 33540 ;; Tracked objects:
 33541 ;;		On entry : 3F/1
 33542 ;;		On exit  : 0/0
 33543 ;;		Unchanged: 0/0
 33544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33549 ;;Total ram usage:        0 bytes
 33550 ;; Hardware stack levels used:    1
 33551 ;; Hardware stack levels required when called:    6
 33552 ;; This function calls:
 33553 ;;		___flge
 33554 ;;		_conv_raw_result
 33555 ;;		_get_ac_charger_relay
 33556 ;;		_set_ac_charger_relay
 33557 ;; This function is called by:
 33558 ;;		_TMR5_DefaultInterruptHandler
 33559 ;; This function uses a reentrant model
 33560 ;;
 33561                           
 33562                           	psect	text151
 33563  018A9E                     __ptext151:
 33564                           	opt callstack 0
 33565  018A9E                     _check_day_time:
 33566                           	opt callstack 0
 33567                           
 33568                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33569  018A9E  52E6               	movf	postinc1,f,c
 33570  018AA0  52E6               	movf	postinc1,f,c
 33571  018AA2  52E6               	movf	postinc1,f,c
 33572  018AA4  52E6               	movf	postinc1,f,c
 33573                           
 33574                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 33575                           
 33576                           ;incstack = 0
 33577  018AA6  0E00               	movlw	0
 33578  018AA8  6EE6               	movwf	postinc1,c
 33579  018AAA  0E0D               	movlw	13
 33580  018AAC  6EE6               	movwf	postinc1,c
 33581  018AAE  ECB1  F0A9         	call	_conv_raw_result	;wreg free
 33582                           
 33583                           ;stkvar	_light @ sp[(-4)+0]
 33584  018AB2  0EFC               	movlw	-4
 33585  018AB4  0060  F007  FFE3   	movff	btemp,plusw1
 33586  018ABA  0EFD               	movlw	-3
 33587  018ABC  0060  F00B  FFE3   	movff	btemp+1,plusw1
 33588  018AC2  0EFE               	movlw	-2
 33589  018AC4  0060  F00F  FFE3   	movff	btemp+2,plusw1
 33590  018ACA  0EFF               	movlw	-1
 33591  018ACC  0060  F013  FFE3   	movff	btemp+3,plusw1
 33592                           
 33593                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 33594  018AD2  2A41               	incf	check_day_time@day_delay^0,f,c
 33595  018AD4  0441               	decf	check_day_time@day_delay^0,w,c
 33596  018AD6  A4D8               	btfss	status,2,c
 33597  018AD8  D0A9               	goto	l1982
 33598  018ADA  0101               	movlb	1	; () banked
 33599  018ADC  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
 33600  018ADE  B4D8               	btfsc	status,2,c
 33601  018AE0  D0A5               	goto	l1982
 33602                           
 33603                           ; BSR set to: 1
 33604                           ;mbmc.c: 173:   if (C.soc > 3) {
 33605  018AE2  EE21  F3B5         	lfsr	2,_C+182	;volatile
 33606  018AE6  0E01               	movlw	1
 33607  018AE8  50DB               	movf	plusw2,w,c
 33608  018AEA  E104               	bnz	u935_20
 33609  018AEC  0E04               	movlw	4
 33610  018AEE  5CDE               	subwf	postinc2,w,c
 33611  018AF0  A0D8               	btfss	status,0,c
 33612  018AF2  D073               	goto	l10032
 33613  018AF4                     u935_20:
 33614                           
 33615                           ; BSR set to: 1
 33616                           ;mbmc.c: 174:    if (!C.day) {
 33617  018AF4  EE22  F021         	lfsr	2,_C+290	;volatile
 33618  018AF8  50DF               	movf	indf2,w,c
 33619  018AFA  A4D8               	btfss	status,2,c
 33620  018AFC  D035               	goto	l10020
 33621                           
 33622                           ; BSR set to: 1
 33623                           ;mbmc.c: 175:     if (light > 22.0) {
 33624                           ;stkvar	_light @ sp[(-4)+0]
 33625  018AFE  0EFC               	movlw	-4
 33626  018B00  006F FF8F FFE6     	movff	plusw1,postinc1
 33627  018B06  006F FF8F FFE6     	movff	plusw1,postinc1
 33628  018B0C  006F FF8F FFE6     	movff	plusw1,postinc1
 33629  018B12  006F FF8F FFE6     	movff	plusw1,postinc1
 33630  018B18  0E00               	movlw	0
 33631  018B1A  6EE6               	movwf	postinc1,c
 33632  018B1C  0E00               	movlw	0
 33633  018B1E  6EE6               	movwf	postinc1,c
 33634  018B20  0EB0               	movlw	176
 33635  018B22  6EE6               	movwf	postinc1,c
 33636  018B24  0E41               	movlw	65
 33637  018B26  6EE6               	movwf	postinc1,c
 33638  018B28  EC26  F0C9         	call	___flge	;wreg free
 33639  018B2C  B001               	btfsc	btemp& (0+255),0,c
 33640  018B2E  D07E               	goto	l1982
 33641                           
 33642                           ;mbmc.c: 176:      C.day = 1;
 33643  018B30  0E01               	movlw	1
 33644  018B32  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 33645                           
 33646                           ;mbmc.c: 177:      C.day_start = V.ticks;
 33647  018B38  EE20  F188         	lfsr	2,_V+129	;volatile
 33648  018B3C  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 33649  018B42  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 33650  018B48  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 33651  018B4E  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 33652                           
 33653                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 33654  018B54  ECBF  F0E2         	call	_get_ac_charger_relay	;wreg free
 33655  018B58  5001               	movf	btemp^0,w,c
 33656  018B5A  B4D8               	btfsc	status,2,c
 33657  018B5C  D06B               	goto	l1978
 33658                           
 33659                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 33660  018B5E  0E00               	movlw	0
 33661  018B60  6EE6               	movwf	postinc1,c
 33662  018B62  ECA9  F0E2         	call	_set_ac_charger_relay	;wreg free
 33663  018B66  D066               	goto	l1978
 33664  018B68                     l10020:
 33665                           
 33666                           ; BSR set to: 1
 33667                           ;mbmc.c: 184:     if (light < 12.0) {
 33668  018B68  0E00               	movlw	0
 33669  018B6A  6EE6               	movwf	postinc1,c
 33670  018B6C  0E00               	movlw	0
 33671  018B6E  6EE6               	movwf	postinc1,c
 33672  018B70  0E40               	movlw	64
 33673  018B72  6EE6               	movwf	postinc1,c
 33674  018B74  0E41               	movlw	65
 33675  018B76  6EE6               	movwf	postinc1,c
 33676                           
 33677                           ;stkvar	_light @ sp[(-8)+0]
 33678  018B78  0EF8               	movlw	-8
 33679  018B7A  006F FF8F FFE6     	movff	plusw1,postinc1
 33680  018B80  006F FF8F FFE6     	movff	plusw1,postinc1
 33681  018B86  006F FF8F FFE6     	movff	plusw1,postinc1
 33682  018B8C  006F FF8F FFE6     	movff	plusw1,postinc1
 33683  018B92  EC26  F0C9         	call	___flge	;wreg free
 33684  018B96  B001               	btfsc	btemp& (0+255),0,c
 33685  018B98  D049               	goto	l1982
 33686                           
 33687                           ;mbmc.c: 185:      C.day = 0;
 33688  018B9A  0E00               	movlw	0
 33689  018B9C  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 33690                           
 33691                           ;mbmc.c: 186:      C.day_end = V.ticks;
 33692  018BA2  EE20  F188         	lfsr	2,_V+129	;volatile
 33693  018BA6  006F FF78  F826    	movff	postinc2,_C+295	;volatile
 33694  018BAC  006F FF78  F827    	movff	postinc2,_C+296	;volatile
 33695  018BB2  006F FF78  F828    	movff	postinc2,_C+297	;volatile
 33696  018BB8  006F FF74  F829    	movff	postdec2,_C+298	;volatile
 33697                           
 33698                           ;mbmc.c: 190:      if ((C.soc < 20)) {
 33699  018BBE  EE21  F3B5         	lfsr	2,_C+182	;volatile
 33700  018BC2  0E01               	movlw	1
 33701  018BC4  50DB               	movf	plusw2,w,c
 33702  018BC6  E136               	bnz	l1978
 33703  018BC8  0E14               	movlw	20
 33704  018BCA  5CDE               	subwf	postinc2,w,c
 33705  018BCC  B0D8               	btfsc	status,0,c
 33706  018BCE  D032               	goto	l1978
 33707                           
 33708                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 33709  018BD0  0E01               	movlw	1
 33710  018BD2  6EE6               	movwf	postinc1,c
 33711  018BD4  ECA9  F0E2         	call	_set_ac_charger_relay	;wreg free
 33712  018BD8  D02D               	goto	l1978
 33713  018BDA                     l10032:
 33714                           
 33715                           ; BSR set to: 1
 33716                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 33717  018BDA  EE21  F377         	lfsr	2,_C+120	;volatile
 33718  018BDE  006F FF7B FFE6     	movff	postinc2,postinc1
 33719  018BE4  006F FF7B FFE6     	movff	postinc2,postinc1
 33720  018BEA  006F FF7B FFE6     	movff	postinc2,postinc1
 33721  018BF0  006F FF7B FFE6     	movff	postinc2,postinc1
 33722  018BF6  EE21  F37B         	lfsr	2,_C+124	;volatile
 33723  018BFA  006F FF7B FFE6     	movff	postinc2,postinc1
 33724  018C00  006F FF7B FFE6     	movff	postinc2,postinc1
 33725  018C06  006F FF7B FFE6     	movff	postinc2,postinc1
 33726  018C0C  006F FF7B FFE6     	movff	postinc2,postinc1
 33727  018C12  EC26  F0C9         	call	___flge	;wreg free
 33728  018C16  B001               	btfsc	btemp& (0+255),0,c
 33729  018C18  D009               	goto	l1982
 33730                           
 33731                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 33732  018C1A  ECBF  F0E2         	call	_get_ac_charger_relay	;wreg free
 33733  018C1E  5001               	movf	btemp^0,w,c
 33734  018C20  A4D8               	btfss	status,2,c
 33735  018C22  D004               	goto	l1982
 33736                           
 33737                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 33738  018C24  0E01               	movlw	1
 33739  018C26  6EE6               	movwf	postinc1,c
 33740  018C28  ECA9  F0E2         	call	_set_ac_charger_relay	;wreg free
 33741  018C2C                     l1982:
 33742                           
 33743                           ;mbmc.c: 204:  if (day_delay >= 240)
 33744  018C2C  0EEF               	movlw	239
 33745  018C2E  6441               	cpfsgt	check_day_time@day_delay^0,c
 33746  018C30  D001               	goto	l1978
 33747                           
 33748                           ;mbmc.c: 205:   day_delay = 0;
 33749  018C32  6A41               	clrf	check_day_time@day_delay^0,c
 33750  018C34                     l1978:
 33751                           
 33752                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 33753  018C34  52E5               	movf	postdec1,f,c
 33754  018C36  52E5               	movf	postdec1,f,c
 33755  018C38  52E5               	movf	postdec1,f,c
 33756  018C3A  52E5               	movf	postdec1,f,c
 33757  018C3C  0012               	return		;funcret
 33758  018C3E                     __end_of_check_day_time:
 33759                           	opt callstack 0
 33760                           
 33761 ;; *************** function _set_ac_charger_relay *****************
 33762 ;; Defined at:
 33763 ;;		line 135 in file "mbmc.c"
 33764 ;; Parameters:    Size  Location     Type
 33765 ;;  mode            1  [STACK] const _Bool 
 33766 ;; Auto vars:     Size  Location     Type
 33767 ;;		None
 33768 ;; Return value:  Size  Location     Type
 33769 ;;                  1  [STACK] void 
 33770 ;; Registers used:
 33771 ;;		wreg, fsr1l, fsr1h
 33772 ;; Tracked objects:
 33773 ;;		On entry : 0/1
 33774 ;;		On exit  : 0/0
 33775 ;;		Unchanged: 0/0
 33776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33781 ;;Total ram usage:        0 bytes
 33782 ;; Hardware stack levels used:    1
 33783 ;; Hardware stack levels required when called:    3
 33784 ;; This function calls:
 33785 ;;		Nothing
 33786 ;; This function is called by:
 33787 ;;		_check_day_time
 33788 ;; This function uses a reentrant model
 33789 ;;
 33790                           
 33791                           	psect	text152
 33792  01C552                     __ptext152:
 33793                           	opt callstack 0
 33794  01C552                     _set_ac_charger_relay:
 33795                           	opt callstack 9
 33796                           
 33797                           ;mbmc.c: 135: void set_ac_charger_relay(const _Bool mode);mbmc.c: 136: {;mbmc.c: 137:  L
      +                          ATDbits.LATD6 = mode;
 33798                           ;stkvar	_mode @ sp[(0)+-1]
 33799                           
 33800                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33801                           ;incstack = 0
 33802  01C552  0EFF               	movlw	-1
 33803  01C554  B0E3               	btfsc	plusw1,0,c
 33804  01C556  D002               	bra	u930_25
 33805  01C558  9CBD               	bcf	189,6,c	;volatile
 33806  01C55A  D001               	bra	u930_26
 33807  01C55C                     u930_25:
 33808  01C55C  8CBD               	bsf	189,6,c	;volatile
 33809  01C55E                     u930_26:
 33810                           
 33811                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 33812  01C55E  52E5               	movf	postdec1,f,c
 33813  01C560  0012               	return		;funcret
 33814  01C562                     __end_of_set_ac_charger_relay:
 33815                           	opt callstack 0
 33816                           
 33817 ;; *************** function _get_ac_charger_relay *****************
 33818 ;; Defined at:
 33819 ;;		line 140 in file "mbmc.c"
 33820 ;; Parameters:    Size  Location     Type
 33821 ;;		None
 33822 ;; Auto vars:     Size  Location     Type
 33823 ;;		None
 33824 ;; Return value:  Size  Location     Type
 33825 ;;                  1  [STACK] _Bool 
 33826 ;; Registers used:
 33827 ;;		btemp
 33828 ;; Tracked objects:
 33829 ;;		On entry : 0/1
 33830 ;;		On exit  : 0/0
 33831 ;;		Unchanged: 0/0
 33832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33837 ;;Total ram usage:        0 bytes
 33838 ;; Hardware stack levels used:    1
 33839 ;; Hardware stack levels required when called:    3
 33840 ;; This function calls:
 33841 ;;		Nothing
 33842 ;; This function is called by:
 33843 ;;		_check_day_time
 33844 ;;		_calc_bsoc
 33845 ;; This function uses a reentrant model
 33846 ;;
 33847                           
 33848                           	psect	text153
 33849  01C57E                     __ptext153:
 33850                           	opt callstack 0
 33851  01C57E                     _get_ac_charger_relay:
 33852                           	opt callstack 10
 33853                           
 33854                           ;mbmc.c: 142:  return LATDbits.LATD6;
 33855                           
 33856                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33857                           ;incstack = 0
 33858  01C57E  ACBD               	btfss	189,6,c	;volatile
 33859  01C580  D003               	goto	u949_20
 33860  01C582  6A01               	clrf	btemp^0,c
 33861  01C584  2A01               	incf	btemp^0,f,c
 33862  01C586  0012               	return	
 33863  01C588                     u949_20:
 33864  01C588  6A01               	clrf	btemp^0,c
 33865                           
 33866                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 33867  01C58A  0012               	return		;funcret
 33868  01C58C                     __end_of_get_ac_charger_relay:
 33869                           	opt callstack 0
 33870                           
 33871 ;; *************** function _TMR3_ISR *****************
 33872 ;; Defined at:
 33873 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 33874 ;; Parameters:    Size  Location     Type
 33875 ;;		None
 33876 ;; Auto vars:     Size  Location     Type
 33877 ;;		None
 33878 ;; Return value:  Size  Location     Type
 33879 ;;                  1    wreg      void 
 33880 ;; Registers used:
 33881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 33882 ;; Tracked objects:
 33883 ;;		On entry : 0/0
 33884 ;;		On exit  : 3F/0
 33885 ;;		Unchanged: 0/0
 33886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33889 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33890 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33891 ;;Total ram usage:       25 bytes
 33892 ;; Hardware stack levels used:    1
 33893 ;; Hardware stack levels required when called:   14
 33894 ;; This function calls:
 33895 ;;		_TMR3_CallBack
 33896 ;;		_TMR3_WriteTimer
 33897 ;; This function is called by:
 33898 ;;		Interrupt level 1
 33899 ;; This function uses a non-reentrant model
 33900 ;;
 33901                           
 33902                           	psect	text154
 33903  0193B0                     __ptext154:
 33904                           	opt callstack 0
 33905  0193B0                     _TMR3_ISR:
 33906                           	opt callstack 2
 33907                           
 33908                           ;incstack = 0
 33909  0193B0  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 33910  0193B6  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 33911  0193BC  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 33912  0193C2  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 33913  0193C8  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 33914  0193CE  0060  F004  F0EA   	movff	btemp,??_TMR3_ISR+5
 33915  0193D4  0060  F008  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 33916  0193DA  0060  F00C  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 33917  0193E0  0060  F010  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 33918  0193E6  0060  F014  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 33919  0193EC  0060  F018  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 33920  0193F2  0060  F01C  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 33921  0193F8  0060  F020  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 33922  0193FE  0060  F024  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 33923  019404  0060  F028  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 33924  01940A  0060  F02C  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 33925  019410  0060  F030  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 33926  019416  0060  F044  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 33927  01941C  0060  F048  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 33928  019422  0060  F04C  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 33929  019428  0060  F050  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 33930  01942E  0060  F054  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 33931  019434  0060  F058  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 33932  01943A  0060  F05C  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 33933  019440  0060  F060  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 33934  019446  EE16  F0AF         	lfsr	1,___intlo_sp
 33935                           
 33936                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 33937  01944A  0139               	movlb	57	; () banked
 33938  01944C  9DA6               	bcf	166,6,b	;volatile
 33939                           
 33940                           ; BSR set to: 57
 33941                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 33942  01944E  0060  F27B  FFE6   	movff	_timer3ReloadVal,postinc1
 33943  019454  0060  F27F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 33944  01945A  ECF2  F0DD         	call	_TMR3_WriteTimer	;wreg free
 33945                           
 33946                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 33947  01945E  0100               	movlb	0	; () banked
 33948  019460  4B9C               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 33949  019462  2B9D               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 33950  019464  519D               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 33951  019466  E104               	bnz	i1u1278_20
 33952  019468  0E28               	movlw	40
 33953  01946A  5D9C               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 33954  01946C  A0D8               	btfss	status,0,c
 33955  01946E  D005               	goto	i1l1207
 33956  019470                     i1u1278_20:
 33957                           
 33958                           ; BSR set to: 0
 33959                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 33960  019470  EC56  F0E1         	call	_TMR3_CallBack	;wreg free
 33961                           
 33962                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 33963  019474  0100               	movlb	0	; () banked
 33964  019476  6B9C               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 33965  019478  6B9D               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 33966  01947A                     i1l1207:
 33967                           
 33968                           ; BSR set to: 0
 33969  01947A  0060  F3F4  F018   	movff	??_TMR3_ISR+24,btemp+23
 33970  019480  0060  F3F0  F017   	movff	??_TMR3_ISR+23,btemp+22
 33971  019486  0060  F3EC  F016   	movff	??_TMR3_ISR+22,btemp+21
 33972  01948C  0060  F3E8  F015   	movff	??_TMR3_ISR+21,btemp+20
 33973  019492  0060  F3E4  F014   	movff	??_TMR3_ISR+20,btemp+19
 33974  019498  0060  F3E0  F013   	movff	??_TMR3_ISR+19,btemp+18
 33975  01949E  0060  F3DC  F012   	movff	??_TMR3_ISR+18,btemp+17
 33976  0194A4  0060  F3D8  F011   	movff	??_TMR3_ISR+17,btemp+16
 33977  0194AA  0060  F3D4  F00C   	movff	??_TMR3_ISR+16,btemp+11
 33978  0194B0  0060  F3D0  F00B   	movff	??_TMR3_ISR+15,btemp+10
 33979  0194B6  0060  F3CC  F00A   	movff	??_TMR3_ISR+14,btemp+9
 33980  0194BC  0060  F3C8  F009   	movff	??_TMR3_ISR+13,btemp+8
 33981  0194C2  0060  F3C4  F008   	movff	??_TMR3_ISR+12,btemp+7
 33982  0194C8  0060  F3C0  F007   	movff	??_TMR3_ISR+11,btemp+6
 33983  0194CE  0060  F3BC  F006   	movff	??_TMR3_ISR+10,btemp+5
 33984  0194D4  0060  F3B8  F005   	movff	??_TMR3_ISR+9,btemp+4
 33985  0194DA  0060  F3B4  F004   	movff	??_TMR3_ISR+8,btemp+3
 33986  0194E0  0060  F3B0  F003   	movff	??_TMR3_ISR+7,btemp+2
 33987  0194E6  0060  F3AC  F002   	movff	??_TMR3_ISR+6,btemp+1
 33988  0194EC  0060  F3A8  F001   	movff	??_TMR3_ISR+5,btemp
 33989  0194F2  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 33990  0194F8  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 33991  0194FE  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 33992  019504  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 33993  01950A  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 33994  019510  0011               	retfie		f
 33995  019512                     __end_of_TMR3_ISR:
 33996                           	opt callstack 0
 33997                           
 33998 ;; *************** function _TMR3_WriteTimer *****************
 33999 ;; Defined at:
 34000 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 34001 ;; Parameters:    Size  Location     Type
 34002 ;;  timerVal        2  [STACK] unsigned short 
 34003 ;; Auto vars:     Size  Location     Type
 34004 ;;		None
 34005 ;; Return value:  Size  Location     Type
 34006 ;;                  1  [STACK] void 
 34007 ;; Registers used:
 34008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 34009 ;; Tracked objects:
 34010 ;;		On entry : 3F/39
 34011 ;;		On exit  : 0/0
 34012 ;;		Unchanged: 0/0
 34013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34018 ;;Total ram usage:        0 bytes
 34019 ;; Hardware stack levels used:    1
 34020 ;; Hardware stack levels required when called:    3
 34021 ;; This function calls:
 34022 ;;		Nothing
 34023 ;; This function is called by:
 34024 ;;		_TMR3_ISR
 34025 ;; This function uses a reentrant model
 34026 ;;
 34027                           
 34028                           	psect	text155
 34029  01BBE4                     __ptext155:
 34030                           	opt callstack 0
 34031  01BBE4                     _TMR3_WriteTimer:
 34032                           	opt callstack 12
 34033                           
 34034                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 34035                           
 34036                           ; BSR set to: 0
 34037                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34038                           ;incstack = 0
 34039  01BBE4  A4A6               	btfss	166,2,c	;volatile
 34040  01BBE6  D00F               	goto	l11012
 34041                           
 34042                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 34043  01BBE8  90A6               	bcf	166,0,c	;volatile
 34044                           
 34045                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 34046                           ;stkvar	_timerVal @ sp[(0)+-2]
 34047  01BBEA  0EFF               	movlw	255
 34048  01BBEC  24E1               	addwf	fsr1l,w,c
 34049  01BBEE  6ED9               	movwf	fsr2l,c
 34050  01BBF0  0EFF               	movlw	255
 34051  01BBF2  20E2               	addwfc	fsr1h,w,c
 34052  01BBF4  6EDA               	movwf	fsr2h,c
 34053  01BBF6  50DF               	movf	indf2,w,c
 34054  01BBF8  6EA5               	movwf	165,c	;volatile
 34055                           
 34056                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 34057                           ;stkvar	_timerVal @ sp[(0)+-2]
 34058  01BBFA  0EFE               	movlw	-2
 34059  01BBFC  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 34060                           
 34061                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 34062  01BC02  80A6               	bsf	166,0,c	;volatile
 34063                           
 34064                           ;mcc_generated_files/tmr3.c: 141:     }
 34065  01BC04  D00C               	goto	l1190
 34066  01BC06                     l11012:
 34067                           
 34068                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 34069                           ;stkvar	_timerVal @ sp[(0)+-2]
 34070  01BC06  0EFF               	movlw	255
 34071  01BC08  24E1               	addwf	fsr1l,w,c
 34072  01BC0A  6ED9               	movwf	fsr2l,c
 34073  01BC0C  0EFF               	movlw	255
 34074  01BC0E  20E2               	addwfc	fsr1h,w,c
 34075  01BC10  6EDA               	movwf	fsr2h,c
 34076  01BC12  50DF               	movf	indf2,w,c
 34077  01BC14  6EA5               	movwf	165,c	;volatile
 34078                           
 34079                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 34080                           ;stkvar	_timerVal @ sp[(0)+-2]
 34081  01BC16  0EFE               	movlw	-2
 34082  01BC18  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 34083  01BC1E                     l1190:
 34084                           
 34085                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 34086  01BC1E  52E5               	movf	postdec1,f,c
 34087  01BC20  52E5               	movf	postdec1,f,c
 34088  01BC22  0012               	return		;funcret
 34089  01BC24                     __end_of_TMR3_WriteTimer:
 34090                           	opt callstack 0
 34091                           
 34092 ;; *************** function _TMR3_CallBack *****************
 34093 ;; Defined at:
 34094 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 34095 ;; Parameters:    Size  Location     Type
 34096 ;;		None
 34097 ;; Auto vars:     Size  Location     Type
 34098 ;;		None
 34099 ;; Return value:  Size  Location     Type
 34100 ;;                  1  [STACK] void 
 34101 ;; Registers used:
 34102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 34103 ;; Tracked objects:
 34104 ;;		On entry : 3F/0
 34105 ;;		On exit  : 0/0
 34106 ;;		Unchanged: 0/0
 34107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34112 ;;Total ram usage:        0 bytes
 34113 ;; Hardware stack levels used:    1
 34114 ;; Hardware stack levels required when called:   13
 34115 ;; This function calls:
 34116 ;;		Absolute function
 34117 ;;		_TMR3_DefaultInterruptHandler
 34118 ;;		_calc_bsoc
 34119 ;; This function is called by:
 34120 ;;		_TMR3_ISR
 34121 ;; This function uses a reentrant model
 34122 ;;
 34123                           
 34124                           	psect	text156
 34125  01C2AC                     __ptext156:
 34126                           	opt callstack 0
 34127  01C2AC                     _TMR3_CallBack:
 34128                           	opt callstack 2
 34129                           
 34130                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 34131                           
 34132                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34133                           ;incstack = 0
 34134  01C2AC  0100               	movlb	0	; () banked
 34135  01C2AE  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 34136  01C2B0  117D               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 34137  01C2B2  117E               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 34138  01C2B4  B4D8               	btfsc	status,2,c
 34139  01C2B6  0012               	return	
 34140                           
 34141                           ; BSR set to: 0
 34142                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 34143  01C2B8  D801               	call	u1265_28
 34144  01C2BA  0012               	return	
 34145  01C2BC                     u1265_28:
 34146  01C2BC  0005               	push	
 34147  01C2BE  6EFA               	movwf	pclath,c
 34148  01C2C0  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 34149  01C2C2  6EFD               	movwf	tosl,c
 34150  01C2C4  517D               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 34151  01C2C6  6EFE               	movwf	tosh,c
 34152  01C2C8  517E               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 34153  01C2CA  6EFF               	movwf	tosu,c
 34154  01C2CC  50FA               	movf	pclath,w,c
 34155  01C2CE  0012               	return		;indir
 34156  01C2D0                     __end_of_TMR3_CallBack:
 34157                           	opt callstack 0
 34158                           
 34159 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 34160 ;; Defined at:
 34161 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 34162 ;; Parameters:    Size  Location     Type
 34163 ;;		None
 34164 ;; Auto vars:     Size  Location     Type
 34165 ;;		None
 34166 ;; Return value:  Size  Location     Type
 34167 ;;                  1  [STACK] void 
 34168 ;; Registers used:
 34169 ;;		None
 34170 ;; Tracked objects:
 34171 ;;		On entry : 3F/0
 34172 ;;		On exit  : 0/0
 34173 ;;		Unchanged: 0/0
 34174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34179 ;;Total ram usage:        0 bytes
 34180 ;; Hardware stack levels used:    1
 34181 ;; Hardware stack levels required when called:    3
 34182 ;; This function calls:
 34183 ;;		Nothing
 34184 ;; This function is called by:
 34185 ;;		_TMR3_Initialize
 34186 ;;		_TMR3_CallBack
 34187 ;; This function uses a reentrant model
 34188 ;;
 34189                           
 34190                           	psect	text157
 34191  01C62C                     __ptext157:
 34192                           	opt callstack 0
 34193  01C62C                     _TMR3_DefaultInterruptHandler:
 34194                           	opt callstack 11
 34195                           
 34196                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34197                           
 34198                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34199                           ;incstack = 0
 34200  01C62C  0012               	return		;funcret
 34201  01C62E                     __end_of_TMR3_DefaultInterruptHandler:
 34202                           	opt callstack 0
 34203                           
 34204 ;; *************** function _calc_bsoc *****************
 34205 ;; Defined at:
 34206 ;;		line 39 in file "bsoc.c"
 34207 ;; Parameters:    Size  Location     Type
 34208 ;;		None
 34209 ;; Auto vars:     Size  Location     Type
 34210 ;;  adj             4  [STACK] float 
 34211 ;;  log_ptr         2  [STACK] PTR unsigned char 
 34212 ;;		 -> port_data(512), 
 34213 ;; Return value:  Size  Location     Type
 34214 ;;                  1  [STACK] void 
 34215 ;; Registers used:
 34216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 34217 ;; Tracked objects:
 34218 ;;		On entry : 3F/0
 34219 ;;		On exit  : 5/1
 34220 ;;		Unchanged: 0/0
 34221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34226 ;;Total ram usage:        0 bytes
 34227 ;; Hardware stack levels used:    1
 34228 ;; Hardware stack levels required when called:   12
 34229 ;; This function calls:
 34230 ;;		_StartTimer
 34231 ;;		___asfladd
 34232 ;;		___fldiv
 34233 ;;		___flge
 34234 ;;		___flmul
 34235 ;;		___flneg
 34236 ;;		___fltol
 34237 ;;		_fabsf
 34238 ;;		_get_ac_charger_relay
 34239 ;;		_port_data_dma_ptr
 34240 ;;		_send_port_data_dma
 34241 ;;		_sprintf
 34242 ;;		_strlen
 34243 ;; This function is called by:
 34244 ;;		_init_bsoc
 34245 ;;		_TMR3_CallBack
 34246 ;; This function uses a reentrant model
 34247 ;;
 34248                           
 34249                           	psect	text158
 34250  013394                     __ptext158:
 34251                           	opt callstack 0
 34252  013394                     _calc_bsoc:
 34253                           	opt callstack 0
 34254                           
 34255                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34256  013394  0E06               	movlw	6
 34257  013396  26E1               	addwf	fsr1l,f,c
 34258  013398  0E00               	movlw	0
 34259  01339A  22E2               	addwfc	fsr1h,f,c
 34260                           
 34261                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 34262                           
 34263                           ;incstack = 0
 34264  01339C  0E00               	movlw	0
 34265  01339E  6E09               	movwf	(btemp+8)^0,c
 34266  0133A0  0E00               	movlw	0
 34267  0133A2  6E0A               	movwf	(btemp+9)^0,c
 34268  0133A4  0E80               	movlw	128
 34269  0133A6  6E0B               	movwf	(btemp+10)^0,c
 34270  0133A8  0E3F               	movlw	63
 34271  0133AA  6E0C               	movwf	(btemp+11)^0,c
 34272                           
 34273                           ;stkvar	_adj @ sp[(-6)+0]
 34274  0133AC  0EFA               	movlw	-6
 34275  0133AE  0060  F027  FFE3   	movff	btemp+8,plusw1
 34276  0133B4  0EFB               	movlw	-5
 34277  0133B6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34278  0133BC  0EFC               	movlw	-4
 34279  0133BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34280  0133C4  0EFD               	movlw	-3
 34281  0133C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 34282  0133CC  82BE               	bsf	190,1,c	;volatile
 34283                           
 34284                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 34285  0133CE  0E00               	movlw	0
 34286  0133D0  6EE6               	movwf	postinc1,c
 34287  0133D2  0E00               	movlw	0
 34288  0133D4  6EE6               	movwf	postinc1,c
 34289  0133D6  0E61               	movlw	97
 34290  0133D8  6EE6               	movwf	postinc1,c
 34291  0133DA  0E45               	movlw	69
 34292  0133DC  6EE6               	movwf	postinc1,c
 34293  0133DE  EE21  F343         	lfsr	2,_C+68	;volatile
 34294  0133E2  006F FF7B FFE6     	movff	postinc2,postinc1
 34295  0133E8  006F FF7B FFE6     	movff	postinc2,postinc1
 34296  0133EE  006F FF7B FFE6     	movff	postinc2,postinc1
 34297  0133F4  006F FF7B FFE6     	movff	postinc2,postinc1
 34298  0133FA  ECF4  F0A6         	call	___fldiv	;wreg free
 34299  0133FE  0060  F007  FFE6   	movff	btemp,postinc1
 34300  013404  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34301  01340A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34302  013410  0060  F013  FFE6   	movff	btemp+3,postinc1
 34303  013416  0E8F               	movlw	low (_C+144)
 34304  013418  6EE6               	movwf	postinc1,c
 34305  01341A  0E07               	movlw	high (_C+144)
 34306  01341C  6EE6               	movwf	postinc1,c
 34307  01341E  ECE1  F0D8         	call	___asfladd	;wreg free
 34308                           
 34309                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 34310  013422  EE21  F38F         	lfsr	2,_C+144	;volatile
 34311  013426  006F FF7B FFE6     	movff	postinc2,postinc1
 34312  01342C  006F FF7B FFE6     	movff	postinc2,postinc1
 34313  013432  006F FF7B FFE6     	movff	postinc2,postinc1
 34314  013438  006F FF7B FFE6     	movff	postinc2,postinc1
 34315  01343E  EE21  F38B         	lfsr	2,_C+140	;volatile
 34316  013442  006F FF7B FFE6     	movff	postinc2,postinc1
 34317  013448  006F FF7B FFE6     	movff	postinc2,postinc1
 34318  01344E  006F FF7B FFE6     	movff	postinc2,postinc1
 34319  013454  006F FF7B FFE6     	movff	postinc2,postinc1
 34320  01345A  EC26  F0C9         	call	___flge	;wreg free
 34321  01345E  B001               	btfsc	btemp& (0+255),0,c
 34322  013460  D00E               	goto	l13116
 34323                           
 34324                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 34325  013462  EE21  F38B         	lfsr	2,_C+140	;volatile
 34326  013466  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 34327  01346C  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 34328  013472  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 34329  013478  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 34330  01347E                     l13116:
 34331                           
 34332                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 34333  01347E  0ECD               	movlw	205
 34334  013480  6EE6               	movwf	postinc1,c
 34335  013482  0ECC               	movlw	204
 34336  013484  6EE6               	movwf	postinc1,c
 34337  013486  0ECC               	movlw	204
 34338  013488  6EE6               	movwf	postinc1,c
 34339  01348A  0E3D               	movlw	61
 34340  01348C  6EE6               	movwf	postinc1,c
 34341  01348E  EE21  F38F         	lfsr	2,_C+144	;volatile
 34342  013492  006F FF7B FFE6     	movff	postinc2,postinc1
 34343  013498  006F FF7B FFE6     	movff	postinc2,postinc1
 34344  01349E  006F FF7B FFE6     	movff	postinc2,postinc1
 34345  0134A4  006F FF7B FFE6     	movff	postinc2,postinc1
 34346  0134AA  EC26  F0C9         	call	___flge	;wreg free
 34347  0134AE  B001               	btfsc	btemp& (0+255),0,c
 34348  0134B0  D010               	goto	l13120
 34349                           
 34350                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 34351  0134B2  0ECD               	movlw	205
 34352  0134B4  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 34353  0134BA  0ECC               	movlw	204
 34354  0134BC  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 34355  0134C2  0ECC               	movlw	204
 34356  0134C4  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 34357  0134CA  0E3D               	movlw	61
 34358  0134CC  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 34359  0134D2                     l13120:
 34360                           
 34361                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 34362  0134D2  EE21  F343         	lfsr	2,_C+68	;volatile
 34363  0134D6  006F FF7B FFE6     	movff	postinc2,postinc1
 34364  0134DC  006F FF7B FFE6     	movff	postinc2,postinc1
 34365  0134E2  006F FF7B FFE6     	movff	postinc2,postinc1
 34366  0134E8  006F FF7B FFE6     	movff	postinc2,postinc1
 34367  0134EE  0E0A               	movlw	10
 34368  0134F0  6EE6               	movwf	postinc1,c
 34369  0134F2  0ED7               	movlw	215
 34370  0134F4  6EE6               	movwf	postinc1,c
 34371  0134F6  0E23               	movlw	35
 34372  0134F8  6EE6               	movwf	postinc1,c
 34373  0134FA  0E3C               	movlw	60
 34374  0134FC  6EE6               	movwf	postinc1,c
 34375  0134FE  EC26  F0C9         	call	___flge	;wreg free
 34376  013502  B001               	btfsc	btemp& (0+255),0,c
 34377  013504  D01C               	goto	l13124
 34378                           
 34379                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 34380  013506  0061  FEF4  F009   	movff	_C+190,btemp+8	;volatile
 34381  01350C  0061  FEF8  F00A   	movff	_C+191,btemp+9	;volatile
 34382  013512  0061  FEFC  F00B   	movff	_C+192,btemp+10	;volatile
 34383  013518  0061  FF00  F00C   	movff	_C+193,btemp+11	;volatile
 34384                           
 34385                           ;stkvar	_adj @ sp[(-6)+0]
 34386  01351E  0EFA               	movlw	-6
 34387  013520  0060  F027  FFE3   	movff	btemp+8,plusw1
 34388  013526  0EFB               	movlw	-5
 34389  013528  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34390  01352E  0EFC               	movlw	-4
 34391  013530  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34392  013536  0EFD               	movlw	-3
 34393  013538  0060  F033  FFE3   	movff	btemp+11,plusw1
 34394  01353E                     l13124:
 34395                           
 34396                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 34397  01353E  0E0A               	movlw	10
 34398  013540  6EE6               	movwf	postinc1,c
 34399  013542  0ED7               	movlw	215
 34400  013544  6EE6               	movwf	postinc1,c
 34401  013546  0E23               	movlw	35
 34402  013548  6EE6               	movwf	postinc1,c
 34403  01354A  0E3C               	movlw	60
 34404  01354C  6EE6               	movwf	postinc1,c
 34405  01354E  EE21  F343         	lfsr	2,_C+68	;volatile
 34406  013552  006F FF7B FFE6     	movff	postinc2,postinc1
 34407  013558  006F FF7B FFE6     	movff	postinc2,postinc1
 34408  01355E  006F FF7B FFE6     	movff	postinc2,postinc1
 34409  013564  006F FF7B FFE6     	movff	postinc2,postinc1
 34410  01356A  EC26  F0C9         	call	___flge	;wreg free
 34411  01356E  B001               	btfsc	btemp& (0+255),0,c
 34412  013570  D01C               	goto	l13128
 34413                           
 34414                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 34415  013572  0061  FEE4  F009   	movff	_C+186,btemp+8	;volatile
 34416  013578  0061  FEE8  F00A   	movff	_C+187,btemp+9	;volatile
 34417  01357E  0061  FEEC  F00B   	movff	_C+188,btemp+10	;volatile
 34418  013584  0061  FEF0  F00C   	movff	_C+189,btemp+11	;volatile
 34419                           
 34420                           ;stkvar	_adj @ sp[(-6)+0]
 34421  01358A  0EFA               	movlw	-6
 34422  01358C  0060  F027  FFE3   	movff	btemp+8,plusw1
 34423  013592  0EFB               	movlw	-5
 34424  013594  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34425  01359A  0EFC               	movlw	-4
 34426  01359C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34427  0135A2  0EFD               	movlw	-3
 34428  0135A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 34429  0135AA                     l13128:
 34430                           
 34431                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 34432  0135AA  0E00               	movlw	0
 34433  0135AC  6EE6               	movwf	postinc1,c
 34434  0135AE  0E00               	movlw	0
 34435  0135B0  6EE6               	movwf	postinc1,c
 34436  0135B2  0E61               	movlw	97
 34437  0135B4  6EE6               	movwf	postinc1,c
 34438  0135B6  0E45               	movlw	69
 34439  0135B8  6EE6               	movwf	postinc1,c
 34440                           
 34441                           ;stkvar	_adj @ sp[(-10)+0]
 34442  0135BA  0EF6               	movlw	-10
 34443  0135BC  006F FF8F FFE6     	movff	plusw1,postinc1
 34444  0135C2  006F FF8F FFE6     	movff	plusw1,postinc1
 34445  0135C8  006F FF8F FFE6     	movff	plusw1,postinc1
 34446  0135CE  006F FF8F FFE6     	movff	plusw1,postinc1
 34447  0135D4  EE21  F343         	lfsr	2,_C+68	;volatile
 34448  0135D8  006F FF7B FFE6     	movff	postinc2,postinc1
 34449  0135DE  006F FF7B FFE6     	movff	postinc2,postinc1
 34450  0135E4  006F FF7B FFE6     	movff	postinc2,postinc1
 34451  0135EA  006F FF7B FFE6     	movff	postinc2,postinc1
 34452  0135F0  EC01  F09F         	call	___flmul	;wreg free
 34453  0135F4  0060  F007  FFE6   	movff	btemp,postinc1
 34454  0135FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34455  013600  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34456  013606  0060  F013  FFE6   	movff	btemp+3,postinc1
 34457  01360C  ECF4  F0A6         	call	___fldiv	;wreg free
 34458  013610  0060  F007  FFE6   	movff	btemp,postinc1
 34459  013616  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34460  01361C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34461  013622  0060  F013  FFE6   	movff	btemp+3,postinc1
 34462  013628  0E8F               	movlw	low (_C+144)
 34463  01362A  6EE6               	movwf	postinc1,c
 34464  01362C  0E07               	movlw	high (_C+144)
 34465  01362E  6EE6               	movwf	postinc1,c
 34466  013630  ECE1  F0D8         	call	___asfladd	;wreg free
 34467                           
 34468                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 34469  013634  EE21  F38F         	lfsr	2,_C+144	;volatile
 34470  013638  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 34471  01363E  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 34472  013644  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 34473  01364A  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 34474                           
 34475                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 34476  013650  EE21  F39B         	lfsr	2,_C+156	;volatile
 34477  013654  006F FF7B FFE6     	movff	postinc2,postinc1
 34478  01365A  006F FF7B FFE6     	movff	postinc2,postinc1
 34479  013660  006F FF7B FFE6     	movff	postinc2,postinc1
 34480  013666  006F FF7B FFE6     	movff	postinc2,postinc1
 34481  01366C  EE21  F38B         	lfsr	2,_C+140	;volatile
 34482  013670  006F FF7B FFE6     	movff	postinc2,postinc1
 34483  013676  006F FF7B FFE6     	movff	postinc2,postinc1
 34484  01367C  006F FF7B FFE6     	movff	postinc2,postinc1
 34485  013682  006F FF7B FFE6     	movff	postinc2,postinc1
 34486  013688  EC26  F0C9         	call	___flge	;wreg free
 34487  01368C  B001               	btfsc	btemp& (0+255),0,c
 34488  01368E  D00E               	goto	l13136
 34489                           
 34490                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 34491  013690  EE21  F38B         	lfsr	2,_C+140	;volatile
 34492  013694  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 34493  01369A  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 34494  0136A0  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 34495  0136A6  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 34496  0136AC                     l13136:
 34497                           
 34498                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 34499  0136AC  0ECD               	movlw	205
 34500  0136AE  6EE6               	movwf	postinc1,c
 34501  0136B0  0ECC               	movlw	204
 34502  0136B2  6EE6               	movwf	postinc1,c
 34503  0136B4  0ECC               	movlw	204
 34504  0136B6  6EE6               	movwf	postinc1,c
 34505  0136B8  0E3D               	movlw	61
 34506  0136BA  6EE6               	movwf	postinc1,c
 34507  0136BC  EE21  F39B         	lfsr	2,_C+156	;volatile
 34508  0136C0  006F FF7B FFE6     	movff	postinc2,postinc1
 34509  0136C6  006F FF7B FFE6     	movff	postinc2,postinc1
 34510  0136CC  006F FF7B FFE6     	movff	postinc2,postinc1
 34511  0136D2  006F FF7B FFE6     	movff	postinc2,postinc1
 34512  0136D8  EC26  F0C9         	call	___flge	;wreg free
 34513  0136DC  B001               	btfsc	btemp& (0+255),0,c
 34514  0136DE  D010               	goto	l13140
 34515                           
 34516                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 34517  0136E0  0ECD               	movlw	205
 34518  0136E2  006F FFA0  F79B    	movff	wreg,_C+156	;volatile
 34519  0136E8  0ECC               	movlw	204
 34520  0136EA  006F FFA0  F79C    	movff	wreg,_C+157	;volatile
 34521  0136F0  0ECC               	movlw	204
 34522  0136F2  006F FFA0  F79D    	movff	wreg,_C+158	;volatile
 34523  0136F8  0E3D               	movlw	61
 34524  0136FA  006F FFA0  F79E    	movff	wreg,_C+159	;volatile
 34525  013700                     l13140:
 34526                           
 34527                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 34528  013700  0E00               	movlw	0
 34529  013702  6EE6               	movwf	postinc1,c
 34530  013704  0E00               	movlw	0
 34531  013706  6EE6               	movwf	postinc1,c
 34532  013708  0E61               	movlw	97
 34533  01370A  6EE6               	movwf	postinc1,c
 34534  01370C  0E45               	movlw	69
 34535  01370E  6EE6               	movwf	postinc1,c
 34536  013710  EE21  F347         	lfsr	2,_C+72	;volatile
 34537  013714  006F FF7B FFE6     	movff	postinc2,postinc1
 34538  01371A  006F FF7B FFE6     	movff	postinc2,postinc1
 34539  013720  006F FF7B FFE6     	movff	postinc2,postinc1
 34540  013726  006F FF7B FFE6     	movff	postinc2,postinc1
 34541  01372C  ECF4  F0A6         	call	___fldiv	;wreg free
 34542  013730  0060  F007  FFE6   	movff	btemp,postinc1
 34543  013736  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34544  01373C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34545  013742  0060  F013  FFE6   	movff	btemp+3,postinc1
 34546  013748  0E93               	movlw	low (_C+148)
 34547  01374A  6EE6               	movwf	postinc1,c
 34548  01374C  0E07               	movlw	high (_C+148)
 34549  01374E  6EE6               	movwf	postinc1,c
 34550  013750  ECE1  F0D8         	call	___asfladd	;wreg free
 34551                           
 34552                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 34553  013754  0E00               	movlw	0
 34554  013756  6EE6               	movwf	postinc1,c
 34555  013758  0E00               	movlw	0
 34556  01375A  6EE6               	movwf	postinc1,c
 34557  01375C  0E61               	movlw	97
 34558  01375E  6EE6               	movwf	postinc1,c
 34559  013760  0E45               	movlw	69
 34560  013762  6EE6               	movwf	postinc1,c
 34561  013764  EE21  F37B         	lfsr	2,_C+124	;volatile
 34562  013768  006F FF7B FFE6     	movff	postinc2,postinc1
 34563  01376E  006F FF7B FFE6     	movff	postinc2,postinc1
 34564  013774  006F FF7B FFE6     	movff	postinc2,postinc1
 34565  01377A  006F FF7B FFE6     	movff	postinc2,postinc1
 34566  013780  ECF4  F0A6         	call	___fldiv	;wreg free
 34567  013784  0060  F007  FFE6   	movff	btemp,postinc1
 34568  01378A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34569  013790  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34570  013796  0060  F013  FFE6   	movff	btemp+3,postinc1
 34571  01379C  0EA7               	movlw	low (_C+168)
 34572  01379E  6EE6               	movwf	postinc1,c
 34573  0137A0  0E07               	movlw	high (_C+168)
 34574  0137A2  6EE6               	movwf	postinc1,c
 34575  0137A4  ECE1  F0D8         	call	___asfladd	;wreg free
 34576                           
 34577                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 34578  0137A8  0E00               	movlw	0
 34579  0137AA  6EE6               	movwf	postinc1,c
 34580  0137AC  0E00               	movlw	0
 34581  0137AE  6EE6               	movwf	postinc1,c
 34582  0137B0  0E61               	movlw	97
 34583  0137B2  6EE6               	movwf	postinc1,c
 34584  0137B4  0E45               	movlw	69
 34585  0137B6  6EE6               	movwf	postinc1,c
 34586  0137B8  EE21  F377         	lfsr	2,_C+120	;volatile
 34587  0137BC  006F FF7B FFE6     	movff	postinc2,postinc1
 34588  0137C2  006F FF7B FFE6     	movff	postinc2,postinc1
 34589  0137C8  006F FF7B FFE6     	movff	postinc2,postinc1
 34590  0137CE  006F FF7B FFE6     	movff	postinc2,postinc1
 34591  0137D4  ECF4  F0A6         	call	___fldiv	;wreg free
 34592  0137D8  0060  F007  FFE6   	movff	btemp,postinc1
 34593  0137DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34594  0137E4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34595  0137EA  0060  F013  FFE6   	movff	btemp+3,postinc1
 34596  0137F0  0EAB               	movlw	low (_C+172)
 34597  0137F2  6EE6               	movwf	postinc1,c
 34598  0137F4  0E07               	movlw	high (_C+172)
 34599  0137F6  6EE6               	movwf	postinc1,c
 34600  0137F8  ECE1  F0D8         	call	___asfladd	;wreg free
 34601                           
 34602                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 34603  0137FC  0E00               	movlw	0
 34604  0137FE  6EE6               	movwf	postinc1,c
 34605  013800  0E00               	movlw	0
 34606  013802  6EE6               	movwf	postinc1,c
 34607  013804  0E61               	movlw	97
 34608  013806  6EE6               	movwf	postinc1,c
 34609  013808  0E45               	movlw	69
 34610  01380A  6EE6               	movwf	postinc1,c
 34611  01380C  EE21  F373         	lfsr	2,_C+116	;volatile
 34612  013810  006F FF7B FFE6     	movff	postinc2,postinc1
 34613  013816  006F FF7B FFE6     	movff	postinc2,postinc1
 34614  01381C  006F FF7B FFE6     	movff	postinc2,postinc1
 34615  013822  006F FF7B FFE6     	movff	postinc2,postinc1
 34616  013828  ECF4  F0A6         	call	___fldiv	;wreg free
 34617  01382C  0060  F007  FFE6   	movff	btemp,postinc1
 34618  013832  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34619  013838  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34620  01383E  0060  F013  FFE6   	movff	btemp+3,postinc1
 34621  013844  0EAF               	movlw	low (_C+176)
 34622  013846  6EE6               	movwf	postinc1,c
 34623  013848  0E07               	movlw	high (_C+176)
 34624  01384A  6EE6               	movwf	postinc1,c
 34625  01384C  ECE1  F0D8         	call	___asfladd	;wreg free
 34626                           
 34627                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 34628  013850  EE21  F37F         	lfsr	2,_C+128	;volatile
 34629  013854  006F FF7B FFE6     	movff	postinc2,postinc1
 34630  01385A  006F FF7B FFE6     	movff	postinc2,postinc1
 34631  013860  006F FF7B FFE6     	movff	postinc2,postinc1
 34632  013866  006F FF7B FFE6     	movff	postinc2,postinc1
 34633  01386C  0E00               	movlw	0
 34634  01386E  6EE6               	movwf	postinc1,c
 34635  013870  0E00               	movlw	0
 34636  013872  6EE6               	movwf	postinc1,c
 34637  013874  0E00               	movlw	0
 34638  013876  6EE6               	movwf	postinc1,c
 34639  013878  0E00               	movlw	0
 34640  01387A  6EE6               	movwf	postinc1,c
 34641  01387C  EC26  F0C9         	call	___flge	;wreg free
 34642  013880  B001               	btfsc	btemp& (0+255),0,c
 34643  013882  D02A               	goto	l13146
 34644                           
 34645                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 34646  013884  0E00               	movlw	0
 34647  013886  6EE6               	movwf	postinc1,c
 34648  013888  0E00               	movlw	0
 34649  01388A  6EE6               	movwf	postinc1,c
 34650  01388C  0E61               	movlw	97
 34651  01388E  6EE6               	movwf	postinc1,c
 34652  013890  0E45               	movlw	69
 34653  013892  6EE6               	movwf	postinc1,c
 34654  013894  EE21  F37F         	lfsr	2,_C+128	;volatile
 34655  013898  006F FF7B FFE6     	movff	postinc2,postinc1
 34656  01389E  006F FF7B FFE6     	movff	postinc2,postinc1
 34657  0138A4  006F FF7B FFE6     	movff	postinc2,postinc1
 34658  0138AA  006F FF7B FFE6     	movff	postinc2,postinc1
 34659  0138B0  ECF4  F0A6         	call	___fldiv	;wreg free
 34660  0138B4  0060  F007  FFE6   	movff	btemp,postinc1
 34661  0138BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34662  0138C0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34663  0138C6  0060  F013  FFE6   	movff	btemp+3,postinc1
 34664  0138CC  0E9F               	movlw	low (_C+160)
 34665  0138CE  6EE6               	movwf	postinc1,c
 34666  0138D0  0E07               	movlw	high (_C+160)
 34667  0138D2  6EE6               	movwf	postinc1,c
 34668  0138D4  ECE1  F0D8         	call	___asfladd	;wreg free
 34669  0138D8                     l13146:
 34670                           
 34671                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 34672  0138D8  EE21  F37F         	lfsr	2,_C+128	;volatile
 34673  0138DC  0E03               	movlw	3
 34674  0138DE  AEDB               	btfss	plusw2,7,c
 34675  0138E0  D038               	goto	l13150
 34676                           
 34677                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 34678  0138E2  0E00               	movlw	0
 34679  0138E4  6EE6               	movwf	postinc1,c
 34680  0138E6  0E00               	movlw	0
 34681  0138E8  6EE6               	movwf	postinc1,c
 34682  0138EA  0E61               	movlw	97
 34683  0138EC  6EE6               	movwf	postinc1,c
 34684  0138EE  0E45               	movlw	69
 34685  0138F0  6EE6               	movwf	postinc1,c
 34686  0138F2  EE21  F37F         	lfsr	2,_C+128	;volatile
 34687  0138F6  006F FF7B FFE6     	movff	postinc2,postinc1
 34688  0138FC  006F FF7B FFE6     	movff	postinc2,postinc1
 34689  013902  006F FF7B FFE6     	movff	postinc2,postinc1
 34690  013908  006F FF7B FFE6     	movff	postinc2,postinc1
 34691  01390E  ECF4  F0A6         	call	___fldiv	;wreg free
 34692  013912  0060  F007  FFE6   	movff	btemp,postinc1
 34693  013918  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34694  01391E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34695  013924  0060  F013  FFE6   	movff	btemp+3,postinc1
 34696  01392A  ECC5  F0D4         	call	_fabsf	;wreg free
 34697  01392E  0060  F007  FFE6   	movff	btemp,postinc1
 34698  013934  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34699  01393A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34700  013940  0060  F013  FFE6   	movff	btemp+3,postinc1
 34701  013946  0EA3               	movlw	low (_C+164)
 34702  013948  6EE6               	movwf	postinc1,c
 34703  01394A  0E07               	movlw	high (_C+164)
 34704  01394C  6EE6               	movwf	postinc1,c
 34705  01394E  ECE1  F0D8         	call	___asfladd	;wreg free
 34706  013952                     l13150:
 34707                           
 34708                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 34709  013952  0E00               	movlw	0
 34710  013954  6EE6               	movwf	postinc1,c
 34711  013956  0E00               	movlw	0
 34712  013958  6EE6               	movwf	postinc1,c
 34713  01395A  0EC8               	movlw	200
 34714  01395C  6EE6               	movwf	postinc1,c
 34715  01395E  0E42               	movlw	66
 34716  013960  6EE6               	movwf	postinc1,c
 34717  013962  EE21  F38B         	lfsr	2,_C+140	;volatile
 34718  013966  006F FF7B FFE6     	movff	postinc2,postinc1
 34719  01396C  006F FF7B FFE6     	movff	postinc2,postinc1
 34720  013972  006F FF7B FFE6     	movff	postinc2,postinc1
 34721  013978  006F FF7B FFE6     	movff	postinc2,postinc1
 34722  01397E  EE21  F39B         	lfsr	2,_C+156	;volatile
 34723  013982  006F FF7B FFE6     	movff	postinc2,postinc1
 34724  013988  006F FF7B FFE6     	movff	postinc2,postinc1
 34725  01398E  006F FF7B FFE6     	movff	postinc2,postinc1
 34726  013994  006F FF7B FFE6     	movff	postinc2,postinc1
 34727  01399A  ECF4  F0A6         	call	___fldiv	;wreg free
 34728  01399E  0060  F007  FFE6   	movff	btemp,postinc1
 34729  0139A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34730  0139AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34731  0139B0  0060  F013  FFE6   	movff	btemp+3,postinc1
 34732  0139B6  EC01  F09F         	call	___flmul	;wreg free
 34733  0139BA  0060  F007  FFE6   	movff	btemp,postinc1
 34734  0139C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34735  0139C6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34736  0139CC  0060  F013  FFE6   	movff	btemp+3,postinc1
 34737  0139D2  EC6D  F0C8         	call	___fltol	;wreg free
 34738  0139D6  0060  F004  F00B   	movff	btemp,btemp+10
 34739  0139DC  0060  F008  F00C   	movff	btemp+1,btemp+11
 34740  0139E2  0E01               	movlw	1
 34741  0139E4  260B               	addwf	(btemp+10)^0,f,c
 34742  0139E6  0E00               	movlw	0
 34743  0139E8  220C               	addwfc	(btemp+11)^0,f,c
 34744  0139EA  0060  F02C  F7B5   	movff	btemp+10,_C+182	;volatile
 34745  0139F0  0060  F030  F7B6   	movff	btemp+11,_C+183	;volatile
 34746                           
 34747                           ;bsoc.c: 76:  if (C.soc > 100)
 34748  0139F6  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34749  0139FA  0E01               	movlw	1
 34750  0139FC  50DB               	movf	plusw2,w,c
 34751  0139FE  E104               	bnz	u1258_20
 34752  013A00  0E65               	movlw	101
 34753  013A02  5CDE               	subwf	postinc2,w,c
 34754  013A04  A0D8               	btfss	status,0,c
 34755  013A06  D008               	goto	l13156
 34756  013A08                     u1258_20:
 34757                           
 34758                           ;bsoc.c: 77:   C.soc = 100;
 34759  013A08  0E64               	movlw	100
 34760  013A0A  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
 34761  013A10  0E00               	movlw	0
 34762  013A12  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
 34763  013A18                     l13156:
 34764                           
 34765                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 34766  013A18  EE21  F343         	lfsr	2,_C+68	;volatile
 34767  013A1C  0E03               	movlw	3
 34768  013A1E  AEDB               	btfss	plusw2,7,c
 34769  013A20  D047               	goto	l2119
 34770                           
 34771                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 34772  013A22  EE21  F343         	lfsr	2,_C+68	;volatile
 34773  013A26  006F FF7B FFE6     	movff	postinc2,postinc1
 34774  013A2C  006F FF7B FFE6     	movff	postinc2,postinc1
 34775  013A32  006F FF7B FFE6     	movff	postinc2,postinc1
 34776  013A38  006F FF7B FFE6     	movff	postinc2,postinc1
 34777  013A3E  EE21  F39B         	lfsr	2,_C+156	;volatile
 34778  013A42  006F FF7B FFE6     	movff	postinc2,postinc1
 34779  013A48  006F FF7B FFE6     	movff	postinc2,postinc1
 34780  013A4E  006F FF7B FFE6     	movff	postinc2,postinc1
 34781  013A54  006F FF7B FFE6     	movff	postinc2,postinc1
 34782  013A5A  ECF4  F0A6         	call	___fldiv	;wreg free
 34783  013A5E  0060  F007  FFE6   	movff	btemp,postinc1
 34784  013A64  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34785  013A6A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34786  013A70  0060  F013  FFE6   	movff	btemp+3,postinc1
 34787  013A76  EC36  F0DC         	call	___flneg	;wreg free
 34788  013A7A  0060  F007  FFE6   	movff	btemp,postinc1
 34789  013A80  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34790  013A86  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34791  013A8C  0060  F013  FFE6   	movff	btemp+3,postinc1
 34792  013A92  EC6D  F0C8         	call	___fltol	;wreg free
 34793  013A96  0060  F004  F00B   	movff	btemp,btemp+10
 34794  013A9C  0060  F008  F00C   	movff	btemp+1,btemp+11
 34795  013AA2  0060  F02C  F7B3   	movff	btemp+10,_C+180	;volatile
 34796  013AA8  0060  F030  F7B4   	movff	btemp+11,_C+181	;volatile
 34797                           
 34798                           ;bsoc.c: 81:  } else {
 34799  013AAE  D008               	goto	l13160
 34800  013AB0                     l2119:
 34801                           
 34802                           ;bsoc.c: 82:   C.runtime = 99;
 34803  013AB0  0E63               	movlw	99
 34804  013AB2  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 34805  013AB8  0E00               	movlw	0
 34806  013ABA  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 34807  013AC0                     l13160:
 34808                           
 34809                           ;bsoc.c: 84:  if (C.runtime > 99)
 34810  013AC0  EE21  F3B3         	lfsr	2,_C+180	;volatile
 34811  013AC4  0E01               	movlw	1
 34812  013AC6  50DB               	movf	plusw2,w,c
 34813  013AC8  E104               	bnz	u1260_20
 34814  013ACA  0E64               	movlw	100
 34815  013ACC  5CDE               	subwf	postinc2,w,c
 34816  013ACE  A0D8               	btfss	status,0,c
 34817  013AD0  D008               	goto	l13164
 34818  013AD2                     u1260_20:
 34819                           
 34820                           ;bsoc.c: 85:   C.runtime = 99;
 34821  013AD2  0E63               	movlw	99
 34822  013AD4  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 34823  013ADA  0E00               	movlw	0
 34824  013ADC  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 34825  013AE2                     l13164:
 34826                           
 34827                           ;bsoc.c: 87:  V.lowint_count++;
 34828  013AE2  0E01               	movlw	1
 34829  013AE4  0101               	movlb	1	; () banked
 34830  013AE6  27BA               	addwf	(_V+179)& (0+255),f,b	;volatile
 34831  013AE8  0E00               	movlw	0
 34832  013AEA  23BB               	addwfc	(_V+180)& (0+255),f,b	;volatile
 34833  013AEC  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 34834  013AEE  23BD               	addwfc	(_V+182)& (0+255),f,b	;volatile
 34835                           
 34836                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 34837  013AF0  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 34838  013AF2  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 34839  013AF4  A4D8               	btfss	status,2,c
 34840  013AF6  D177               	goto	l13176
 34841                           
 34842                           ; BSR set to: 1
 34843  013AF8  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
 34844  013AFA  B4D8               	btfsc	status,2,c
 34845  013AFC  D174               	goto	l13176
 34846                           
 34847                           ; BSR set to: 1
 34848                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 34849  013AFE  ECDA  F0E2         	call	_port_data_dma_ptr	;wreg free
 34850                           
 34851                           ;stkvar	_log_ptr @ sp[(-6)+4]
 34852  013B02  0EFF               	movlw	-1
 34853  013B04  0060  F00B  FFE3   	movff	btemp+1,plusw1
 34854  013B0A  0EFE               	movlw	-2
 34855  013B0C  0060  F007  FFE3   	movff	btemp,plusw1
 34856                           
 34857                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 34858  013B12  EE21  F3B9         	lfsr	2,_C+186	;volatile
 34859  013B16  006F FF7B FFE6     	movff	postinc2,postinc1
 34860  013B1C  006F FF7B FFE6     	movff	postinc2,postinc1
 34861  013B22  006F FF7B FFE6     	movff	postinc2,postinc1
 34862  013B28  006F FF7B FFE6     	movff	postinc2,postinc1
 34863  013B2E  EE21  F3BD         	lfsr	2,_C+190	;volatile
 34864  013B32  006F FF7B FFE6     	movff	postinc2,postinc1
 34865  013B38  006F FF7B FFE6     	movff	postinc2,postinc1
 34866  013B3E  006F FF7B FFE6     	movff	postinc2,postinc1
 34867  013B44  006F FF7B FFE6     	movff	postinc2,postinc1
 34868  013B4A  EE21  F39B         	lfsr	2,_C+156	;volatile
 34869  013B4E  006F FF7B FFE6     	movff	postinc2,postinc1
 34870  013B54  006F FF7B FFE6     	movff	postinc2,postinc1
 34871  013B5A  006F FF7B FFE6     	movff	postinc2,postinc1
 34872  013B60  006F FF7B FFE6     	movff	postinc2,postinc1
 34873  013B66  EE22  F026         	lfsr	2,_C+295	;volatile
 34874  013B6A  006F FF7B FFE6     	movff	postinc2,postinc1
 34875  013B70  006F FF7B FFE6     	movff	postinc2,postinc1
 34876  013B76  006F FF7B FFE6     	movff	postinc2,postinc1
 34877  013B7C  006F FF7B FFE6     	movff	postinc2,postinc1
 34878  013B82  EE22  F022         	lfsr	2,_C+291	;volatile
 34879  013B86  006F FF7B FFE6     	movff	postinc2,postinc1
 34880  013B8C  006F FF7B FFE6     	movff	postinc2,postinc1
 34881  013B92  006F FF7B FFE6     	movff	postinc2,postinc1
 34882  013B98  006F FF7B FFE6     	movff	postinc2,postinc1
 34883  013B9E  EE22  F021         	lfsr	2,_C+290	;volatile
 34884  013BA2  50DF               	movf	indf2,w,c
 34885  013BA4  6EE6               	movwf	postinc1,c
 34886  013BA6  0E00               	movlw	0
 34887  013BA8  6EE6               	movwf	postinc1,c
 34888  013BAA  ECBF  F0E2         	call	_get_ac_charger_relay	;wreg free
 34889  013BAE  5001               	movf	btemp^0,w,c
 34890  013BB0  6EE6               	movwf	postinc1,c
 34891  013BB2  0E00               	movlw	0
 34892  013BB4  6EE6               	movwf	postinc1,c
 34893  013BB6  EE21  F367         	lfsr	2,_C+104	;volatile
 34894  013BBA  006F FF7B FFE6     	movff	postinc2,postinc1
 34895  013BC0  006F FF7B FFE6     	movff	postinc2,postinc1
 34896  013BC6  006F FF7B FFE6     	movff	postinc2,postinc1
 34897  013BCC  006F FF7B FFE6     	movff	postinc2,postinc1
 34898  013BD2  EE21  F387         	lfsr	2,_C+136	;volatile
 34899  013BD6  006F FF7B FFE6     	movff	postinc2,postinc1
 34900  013BDC  006F FF7B FFE6     	movff	postinc2,postinc1
 34901  013BE2  006F FF7B FFE6     	movff	postinc2,postinc1
 34902  013BE8  006F FF7B FFE6     	movff	postinc2,postinc1
 34903  013BEE  EE21  F3B3         	lfsr	2,_C+180	;volatile
 34904  013BF2  006F FF78  F00B    	movff	postinc2,btemp+10
 34905  013BF8  006F FF74  F00C    	movff	postdec2,btemp+11
 34906  013BFE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34907  013C04  0060  F033  FFE6   	movff	btemp+11,postinc1
 34908  013C0A  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34909  013C0E  006F FF78  F00B    	movff	postinc2,btemp+10
 34910  013C14  006F FF74  F00C    	movff	postdec2,btemp+11
 34911  013C1A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34912  013C20  0060  F033  FFE6   	movff	btemp+11,postinc1
 34913  013C26  EE21  F393         	lfsr	2,_C+148	;volatile
 34914  013C2A  006F FF7B FFE6     	movff	postinc2,postinc1
 34915  013C30  006F FF7B FFE6     	movff	postinc2,postinc1
 34916  013C36  006F FF7B FFE6     	movff	postinc2,postinc1
 34917  013C3C  006F FF7B FFE6     	movff	postinc2,postinc1
 34918  013C42  EE21  F38F         	lfsr	2,_C+144	;volatile
 34919  013C46  006F FF7B FFE6     	movff	postinc2,postinc1
 34920  013C4C  006F FF7B FFE6     	movff	postinc2,postinc1
 34921  013C52  006F FF7B FFE6     	movff	postinc2,postinc1
 34922  013C58  006F FF7B FFE6     	movff	postinc2,postinc1
 34923  013C5E  EE21  F377         	lfsr	2,_C+120	;volatile
 34924  013C62  006F FF7B FFE6     	movff	postinc2,postinc1
 34925  013C68  006F FF7B FFE6     	movff	postinc2,postinc1
 34926  013C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 34927  013C74  006F FF7B FFE6     	movff	postinc2,postinc1
 34928  013C7A  EE21  F373         	lfsr	2,_C+116	;volatile
 34929  013C7E  006F FF7B FFE6     	movff	postinc2,postinc1
 34930  013C84  006F FF7B FFE6     	movff	postinc2,postinc1
 34931  013C8A  006F FF7B FFE6     	movff	postinc2,postinc1
 34932  013C90  006F FF7B FFE6     	movff	postinc2,postinc1
 34933  013C96  EE21  F37B         	lfsr	2,_C+124	;volatile
 34934  013C9A  006F FF7B FFE6     	movff	postinc2,postinc1
 34935  013CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 34936  013CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 34937  013CAC  006F FF7B FFE6     	movff	postinc2,postinc1
 34938  013CB2  EE21  F37F         	lfsr	2,_C+128	;volatile
 34939  013CB6  006F FF7B FFE6     	movff	postinc2,postinc1
 34940  013CBC  006F FF7B FFE6     	movff	postinc2,postinc1
 34941  013CC2  006F FF7B FFE6     	movff	postinc2,postinc1
 34942  013CC8  006F FF7B FFE6     	movff	postinc2,postinc1
 34943  013CCE  EE21  F347         	lfsr	2,_C+72	;volatile
 34944  013CD2  006F FF7B FFE6     	movff	postinc2,postinc1
 34945  013CD8  006F FF7B FFE6     	movff	postinc2,postinc1
 34946  013CDE  006F FF7B FFE6     	movff	postinc2,postinc1
 34947  013CE4  006F FF7B FFE6     	movff	postinc2,postinc1
 34948  013CEA  EE21  F343         	lfsr	2,_C+68	;volatile
 34949  013CEE  006F FF7B FFE6     	movff	postinc2,postinc1
 34950  013CF4  006F FF7B FFE6     	movff	postinc2,postinc1
 34951  013CFA  006F FF7B FFE6     	movff	postinc2,postinc1
 34952  013D00  006F FF7B FFE6     	movff	postinc2,postinc1
 34953  013D06  EE21  F363         	lfsr	2,_C+100	;volatile
 34954  013D0A  006F FF7B FFE6     	movff	postinc2,postinc1
 34955  013D10  006F FF7B FFE6     	movff	postinc2,postinc1
 34956  013D16  006F FF7B FFE6     	movff	postinc2,postinc1
 34957  013D1C  006F FF7B FFE6     	movff	postinc2,postinc1
 34958  013D22  EE21  F34B         	lfsr	2,_C+76	;volatile
 34959  013D26  006F FF7B FFE6     	movff	postinc2,postinc1
 34960  013D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 34961  013D32  006F FF7B FFE6     	movff	postinc2,postinc1
 34962  013D38  006F FF7B FFE6     	movff	postinc2,postinc1
 34963  013D3E  EE21  F34F         	lfsr	2,_C+80	;volatile
 34964  013D42  006F FF7B FFE6     	movff	postinc2,postinc1
 34965  013D48  006F FF7B FFE6     	movff	postinc2,postinc1
 34966  013D4E  006F FF7B FFE6     	movff	postinc2,postinc1
 34967  013D54  006F FF7B FFE6     	movff	postinc2,postinc1
 34968  013D5A  EE21  F353         	lfsr	2,_C+84	;volatile
 34969  013D5E  006F FF7B FFE6     	movff	postinc2,postinc1
 34970  013D64  006F FF7B FFE6     	movff	postinc2,postinc1
 34971  013D6A  006F FF7B FFE6     	movff	postinc2,postinc1
 34972  013D70  006F FF7B FFE6     	movff	postinc2,postinc1
 34973  013D76  0060  F623  FFE6   	movff	_V+129,postinc1
 34974  013D7C  0060  F627  FFE6   	movff	_V+130,postinc1
 34975  013D82  0060  F62B  FFE6   	movff	_V+131,postinc1
 34976  013D88  0060  F62F  FFE6   	movff	_V+132,postinc1
 34977  013D8E  0E32               	movlw	50
 34978  013D90  6EE6               	movwf	postinc1,c
 34979  013D92  0E00               	movlw	0
 34980  013D94  6EE6               	movwf	postinc1,c
 34981  013D96  0ECB               	movlw	low STR_64
 34982  013D98  6EE6               	movwf	postinc1,c
 34983  013D9A  0EFB               	movlw	high STR_64
 34984  013D9C  6EE6               	movwf	postinc1,c
 34985                           
 34986                           ;stkvar	_log_ptr @ sp[(-98)+4]
 34987  013D9E  0EA2               	movlw	-94
 34988  013DA0  006F FF8F FFE6     	movff	plusw1,postinc1
 34989  013DA6  006F FF8F FFE6     	movff	plusw1,postinc1
 34990  013DAC  0E5E               	movlw	94
 34991  013DAE  6EE6               	movwf	postinc1,c
 34992  013DB0  ECBE  F0CF         	call	_sprintf	;wreg free
 34993                           
 34994                           ; BSR set to: 0
 34995                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 34996  013DB4  0E7D               	movlw	125
 34997  013DB6  6EE6               	movwf	postinc1,c
 34998  013DB8  0E00               	movlw	0
 34999  013DBA  6EE6               	movwf	postinc1,c
 35000  013DBC  0E0A               	movlw	10
 35001  013DBE  6EE6               	movwf	postinc1,c
 35002  013DC0  ECB2  F0DD         	call	_StartTimer	;wreg free
 35003                           
 35004                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 35005                           ;stkvar	_log_ptr @ sp[(-6)+4]
 35006  013DC4  0EFE               	movlw	-2
 35007  013DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 35008  013DCC  006F FF8F FFE6     	movff	plusw1,postinc1
 35009  013DD2  EC6E  F0D6         	call	_strlen	;wreg free
 35010  013DD6  0060  F007  FFE6   	movff	btemp,postinc1
 35011  013DDC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35012  013DE2  EC9C  F0DB         	call	_send_port_data_dma	;wreg free
 35013  013DE6                     l13176:
 35014                           
 35015                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 35016  013DE6  0E09               	movlw	9
 35017  013DE8  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 35018  013DEA  D001               	goto	l2123
 35019                           
 35020                           ;bsoc.c: 102:   log_update_wait = 0;
 35021  013DEC  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 35022  013DEE                     l2123:
 35023                           
 35024                           ;bsoc.c: 104:  C.update = 0;
 35025  013DEE  0E00               	movlw	0
 35026  013DF0  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 35027                           
 35028                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 35029  013DF6  92BE               	bcf	190,1,c	;volatile
 35030                           
 35031                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 35032  013DF8  0EFA               	movlw	250
 35033  013DFA  26E1               	addwf	fsr1l,f,c
 35034  013DFC  0EFF               	movlw	255
 35035  013DFE  22E2               	addwfc	fsr1h,f,c
 35036  013E00  0012               	return		;funcret
 35037  013E02                     __end_of_calc_bsoc:
 35038                           	opt callstack 0
 35039                           
 35040 ;; *************** function _send_port_data_dma *****************
 35041 ;; Defined at:
 35042 ;;		line 398 in file "eadog.c"
 35043 ;; Parameters:    Size  Location     Type
 35044 ;;  dsize           2  [STACK] unsigned short 
 35045 ;; Auto vars:     Size  Location     Type
 35046 ;;		None
 35047 ;; Return value:  Size  Location     Type
 35048 ;;                  1  [STACK] void 
 35049 ;; Registers used:
 35050 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 35051 ;; Tracked objects:
 35052 ;;		On entry : 0/0
 35053 ;;		On exit  : 3F/3B
 35054 ;;		Unchanged: 0/0
 35055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35060 ;;Total ram usage:        0 bytes
 35061 ;; Hardware stack levels used:    1
 35062 ;; Hardware stack levels required when called:    3
 35063 ;; This function calls:
 35064 ;;		Nothing
 35065 ;; This function is called by:
 35066 ;;		_calc_bsoc
 35067 ;; This function uses a reentrant model
 35068 ;;
 35069                           
 35070                           	psect	text159
 35071  01B738                     __ptext159:
 35072                           	opt callstack 0
 35073  01B738                     _send_port_data_dma:
 35074                           	opt callstack 10
 35075                           
 35076                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 35077                           ;stkvar	_dsize @ sp[(0)+-2]
 35078                           
 35079                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35080                           ;incstack = 0
 35081  01B738  0EFE               	movlw	-2
 35082  01B73A  04E3               	decf	plusw1,w,c
 35083  01B73C  0EFF               	movlw	-1
 35084  01B73E  006F FF8C  F001    	movff	plusw1,btemp
 35085  01B744  0E02               	movlw	2
 35086  01B746  5A01               	subwfb	btemp^0,f,c
 35087  01B748  A0D8               	btfss	status,0,c
 35088  01B74A  D00C               	goto	l10142
 35089                           
 35090                           ;eadog.c: 401:   dsize = 512;
 35091  01B74C  0E00               	movlw	0
 35092  01B74E  6E0B               	movwf	(btemp+10)^0,c
 35093  01B750  0E02               	movlw	2
 35094  01B752  6E0C               	movwf	(btemp+11)^0,c
 35095                           
 35096                           ;stkvar	_dsize @ sp[(0)+-2]
 35097  01B754  0EFE               	movlw	-2
 35098  01B756  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35099  01B75C  0EFF               	movlw	-1
 35100  01B75E  0060  F033  FFE3   	movff	btemp+11,plusw1
 35101  01B764                     l10142:
 35102                           
 35103                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 35104  01B764  013B               	movlb	59	; () banked
 35105  01B766  9FDC               	bcf	220,7,b	;volatile
 35106                           
 35107                           ; BSR set to: 59
 35108                           ;eadog.c: 404:  DMA2SSZ = dsize;
 35109                           ;stkvar	_dsize @ sp[(0)+-2]
 35110  01B768  0EFE               	movlw	-2
 35111  01B76A  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 35112  01B770  0EFF               	movlw	-1
 35113  01B772  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 35114                           
 35115                           ; BSR set to: 59
 35116                           ;eadog.c: 405:  DMA2DSZ = 1;
 35117  01B778  0E00               	movlw	0
 35118  01B77A  6FCF               	movwf	207,b	;volatile
 35119  01B77C  0E01               	movlw	1
 35120  01B77E  6FCE               	movwf	206,b	;volatile
 35121                           
 35122                           ; BSR set to: 59
 35123                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 35124  01B780  8FDC               	bsf	220,7,b	;volatile
 35125                           
 35126                           ; BSR set to: 59
 35127                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 35128  01B782  8DDC               	bsf	220,6,b	;volatile
 35129                           
 35130                           ; BSR set to: 59
 35131                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 35132  01B784  52E5               	movf	postdec1,f,c
 35133  01B786  52E5               	movf	postdec1,f,c
 35134  01B788  0012               	return		;funcret
 35135  01B78A                     __end_of_send_port_data_dma:
 35136                           	opt callstack 0
 35137                           
 35138 ;; *************** function _port_data_dma_ptr *****************
 35139 ;; Defined at:
 35140 ;;		line 413 in file "eadog.c"
 35141 ;; Parameters:    Size  Location     Type
 35142 ;;		None
 35143 ;; Auto vars:     Size  Location     Type
 35144 ;;		None
 35145 ;; Return value:  Size  Location     Type
 35146 ;;                  2  [STACK] PTR unsigned char 
 35147 ;; Registers used:
 35148 ;;		wreg, status,2, status,0, btemp, btemp+1
 35149 ;; Tracked objects:
 35150 ;;		On entry : 3F/1
 35151 ;;		On exit  : 0/0
 35152 ;;		Unchanged: 0/0
 35153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35158 ;;Total ram usage:        0 bytes
 35159 ;; Hardware stack levels used:    1
 35160 ;; Hardware stack levels required when called:    3
 35161 ;; This function calls:
 35162 ;;		Nothing
 35163 ;; This function is called by:
 35164 ;;		_calc_bsoc
 35165 ;; This function uses a reentrant model
 35166 ;;
 35167                           
 35168                           	psect	text160
 35169  01C5B4                     __ptext160:
 35170                           	opt callstack 0
 35171  01C5B4                     _port_data_dma_ptr:
 35172                           	opt callstack 10
 35173                           
 35174                           ;eadog.c: 415:  return port_data;
 35175                           
 35176                           ; BSR set to: 59
 35177                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35178                           ;incstack = 0
 35179  01C5B4  0EFF               	movlw	low _port_data
 35180  01C5B6  6E01               	movwf	btemp^0,c
 35181  01C5B8  0E04               	movlw	high _port_data
 35182  01C5BA  6E02               	movwf	(btemp+1)^0,c
 35183                           
 35184                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35185  01C5BC  0012               	return		;funcret
 35186  01C5BE                     __end_of_port_data_dma_ptr:
 35187                           	opt callstack 0
 35188                           
 35189 ;; *************** function ___asfladd *****************
 35190 ;; Defined at:
 35191 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 35192 ;; Parameters:    Size  Location     Type
 35193 ;;  f1p             2  [STACK] PTR 
 35194 ;;		 -> C(299), 
 35195 ;;  f2              4  [STACK] PTR 
 35196 ;; Auto vars:     Size  Location     Type
 35197 ;;		None
 35198 ;; Return value:  Size  Location     Type
 35199 ;;                  4  [STACK] PTR 
 35200 ;; Registers used:
 35201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 35202 ;; Tracked objects:
 35203 ;;		On entry : 0/0
 35204 ;;		On exit  : 0/0
 35205 ;;		Unchanged: 0/0
 35206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35211 ;;Total ram usage:        0 bytes
 35212 ;; Hardware stack levels used:    1
 35213 ;; Hardware stack levels required when called:    4
 35214 ;; This function calls:
 35215 ;;		___fladd
 35216 ;; This function is called by:
 35217 ;;		_calc_bsoc
 35218 ;; This function uses a reentrant model
 35219 ;;
 35220                           
 35221                           	psect	text161
 35222  01B1C2                     __ptext161:
 35223                           	opt callstack 0
 35224  01B1C2                     ___asfladd:
 35225                           	opt callstack 9
 35226                           
 35227                           ;	Return value of ___asfladd is never used
 35228                           ;stkvar	_f2 @ sp[(0)+-6]
 35229                           
 35230                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35231                           ;incstack = 0
 35232  01B1C2  0EFA               	movlw	-6
 35233  01B1C4  006F FF8F FFE6     	movff	plusw1,postinc1
 35234  01B1CA  006F FF8F FFE6     	movff	plusw1,postinc1
 35235  01B1D0  006F FF8F FFE6     	movff	plusw1,postinc1
 35236  01B1D6  006F FF8F FFE6     	movff	plusw1,postinc1
 35237                           
 35238                           ;stkvar	_f1p @ sp[(-4)+-2]
 35239  01B1DC  0EFA               	movlw	-6
 35240  01B1DE  006F FF8F FFD9     	movff	plusw1,fsr2l
 35241  01B1E4  0EFB               	movlw	-5
 35242  01B1E6  006F FF8F FFDA     	movff	plusw1,fsr2h
 35243  01B1EC  006F FF7B FFE6     	movff	postinc2,postinc1
 35244  01B1F2  006F FF7B FFE6     	movff	postinc2,postinc1
 35245  01B1F8  006F FF7B FFE6     	movff	postinc2,postinc1
 35246  01B1FE  006F FF7B FFE6     	movff	postinc2,postinc1
 35247  01B204  EC16  F0A3         	call	___fladd	;wreg free
 35248                           
 35249                           ;stkvar	_f1p @ sp[(0)+-2]
 35250  01B208  0EFE               	movlw	-2
 35251  01B20A  006F FF8F FFD9     	movff	plusw1,fsr2l
 35252  01B210  0EFF               	movlw	-1
 35253  01B212  006F FF8F FFDA     	movff	plusw1,fsr2h
 35254  01B218  0060  F007  FFDE   	movff	btemp,postinc2
 35255  01B21E  0060  F00B  FFDE   	movff	btemp+1,postinc2
 35256  01B224  0060  F00F  FFDE   	movff	btemp+2,postinc2
 35257  01B22A  0060  F013  FFDE   	movff	btemp+3,postinc2
 35258                           
 35259                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 35260  01B230  0EFA               	movlw	250
 35261  01B232  26E1               	addwf	fsr1l,f,c
 35262  01B234  0EFF               	movlw	255
 35263  01B236  22E2               	addwfc	fsr1h,f,c
 35264  01B238  0012               	return		;funcret
 35265  01B23A                     __end_of___asfladd:
 35266                           	opt callstack 0
 35267                           
 35268 ;; *************** function _INT0_ISR *****************
 35269 ;; Defined at:
 35270 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 35271 ;; Parameters:    Size  Location     Type
 35272 ;;		None
 35273 ;; Auto vars:     Size  Location     Type
 35274 ;;		None
 35275 ;; Return value:  Size  Location     Type
 35276 ;;                  1    wreg      void 
 35277 ;; Registers used:
 35278 ;;		wreg, status,2, status,0, pclath, tosl
 35279 ;; Tracked objects:
 35280 ;;		On entry : 0/0
 35281 ;;		On exit  : 0/0
 35282 ;;		Unchanged: 0/0
 35283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35288 ;;Total ram usage:        0 bytes
 35289 ;; Hardware stack levels used:    1
 35290 ;; Hardware stack levels required when called:    2
 35291 ;; This function calls:
 35292 ;;		_INT0_CallBack
 35293 ;; This function is called by:
 35294 ;;		Interrupt level 2
 35295 ;; This function uses a non-reentrant model
 35296 ;;
 35297                           
 35298                           	psect	text162
 35299  01C58C                     __ptext162:
 35300                           	opt callstack 0
 35301  01C58C                     _INT0_ISR:
 35302                           	opt callstack 2
 35303                           
 35304                           ;incstack = 0
 35305  01C58C  EE14  F15E         	lfsr	1,___inthi_sp
 35306                           
 35307                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 35308  01C590  0139               	movlb	57	; () banked
 35309  01C592  91A1               	bcf	161,0,b	;volatile
 35310                           
 35311                           ; BSR set to: 57
 35312                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 35313  01C594  EC68  F0E1         	call	_INT0_CallBack	;wreg free
 35314  01C598  0011               	retfie		f
 35315  01C59A                     __end_of_INT0_ISR:
 35316                           	opt callstack 0
 35317                           
 35318 ;; *************** function _INT0_CallBack *****************
 35319 ;; Defined at:
 35320 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 35321 ;; Parameters:    Size  Location     Type
 35322 ;;		None
 35323 ;; Auto vars:     Size  Location     Type
 35324 ;;		None
 35325 ;; Return value:  Size  Location     Type
 35326 ;;                  1  [STACK] void 
 35327 ;; Registers used:
 35328 ;;		wreg, status,2, status,0, pclath, tosl
 35329 ;; Tracked objects:
 35330 ;;		On entry : 3F/39
 35331 ;;		On exit  : 0/0
 35332 ;;		Unchanged: 0/0
 35333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35338 ;;Total ram usage:        0 bytes
 35339 ;; Hardware stack levels used:    1
 35340 ;; Hardware stack levels required when called:    1
 35341 ;; This function calls:
 35342 ;;		Absolute function
 35343 ;;		_INT0_DefaultInterruptHandler
 35344 ;; This function is called by:
 35345 ;;		_INT0_ISR
 35346 ;; This function uses a reentrant model
 35347 ;;
 35348                           
 35349                           	psect	text163
 35350  01C2D0                     __ptext163:
 35351                           	opt callstack 0
 35352  01C2D0                     _INT0_CallBack:
 35353                           	opt callstack 2
 35354                           
 35355                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 35356                           
 35357                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35358                           ;incstack = 0
 35359  01C2D0  0100               	movlb	0	; () banked
 35360  01C2D2  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 35361  01C2D4  1198               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 35362  01C2D6  1199               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 35363  01C2D8  B4D8               	btfsc	status,2,c
 35364  01C2DA  0012               	return	
 35365                           
 35366                           ; BSR set to: 0
 35367                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 35368  01C2DC  D801               	call	u1007_48
 35369  01C2DE  0012               	return	
 35370  01C2E0                     u1007_48:
 35371  01C2E0  0005               	push	
 35372  01C2E2  6EFA               	movwf	pclath,c
 35373  01C2E4  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 35374  01C2E6  6EFD               	movwf	tosl,c
 35375  01C2E8  5198               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 35376  01C2EA  6EFE               	movwf	tosh,c
 35377  01C2EC  5199               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 35378  01C2EE  6EFF               	movwf	tosu,c
 35379  01C2F0  50FA               	movf	pclath,w,c
 35380  01C2F2  0012               	return		;indir
 35381  01C2F4                     __end_of_INT0_CallBack:
 35382                           	opt callstack 0
 35383                           
 35384 ;; *************** function _INT0_DefaultInterruptHandler *****************
 35385 ;; Defined at:
 35386 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 35387 ;; Parameters:    Size  Location     Type
 35388 ;;		None
 35389 ;; Auto vars:     Size  Location     Type
 35390 ;;		None
 35391 ;; Return value:  Size  Location     Type
 35392 ;;                  1  [STACK] void 
 35393 ;; Registers used:
 35394 ;;		None
 35395 ;; Tracked objects:
 35396 ;;		On entry : 3F/0
 35397 ;;		On exit  : 0/0
 35398 ;;		Unchanged: 0/0
 35399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35404 ;;Total ram usage:        0 bytes
 35405 ;; Hardware stack levels used:    1
 35406 ;; This function calls:
 35407 ;;		Nothing
 35408 ;; This function is called by:
 35409 ;;		_EXT_INT_Initialize
 35410 ;;		_INT0_CallBack
 35411 ;; This function uses a reentrant model
 35412 ;;
 35413                           
 35414                           	psect	text164
 35415  01C62E                     __ptext164:
 35416                           	opt callstack 0
 35417  01C62E                     _INT0_DefaultInterruptHandler:
 35418                           	opt callstack 2
 35419                           
 35420                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35421                           
 35422                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35423                           ;incstack = 0
 35424  01C62E  0012               	return		;funcret
 35425  01C630                     __end_of_INT0_DefaultInterruptHandler:
 35426                           	opt callstack 0
 35427                           
 35428 ;; *************** function _Default_ISR *****************
 35429 ;; Defined at:
 35430 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 35431 ;; Parameters:    Size  Location     Type
 35432 ;;		None
 35433 ;; Auto vars:     Size  Location     Type
 35434 ;;		None
 35435 ;; Return value:  Size  Location     Type
 35436 ;;                  1    wreg      void 
 35437 ;; Registers used:
 35438 ;;		None
 35439 ;; Tracked objects:
 35440 ;;		On entry : 0/0
 35441 ;;		On exit  : 0/0
 35442 ;;		Unchanged: 0/0
 35443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35448 ;;Total ram usage:        0 bytes
 35449 ;; Hardware stack levels used:    1
 35450 ;; This function calls:
 35451 ;;		Nothing
 35452 ;; This function is called by:
 35453 ;;		Interrupt level 2
 35454 ;; This function uses a non-reentrant model
 35455 ;;
 35456                           
 35457                           	psect	text165
 35458  01C624                     __ptext165:
 35459                           	opt callstack 0
 35460  01C624                     _Default_ISR:
 35461                           	opt callstack 4
 35462                           
 35463                           ;incstack = 0
 35464  01C624  EE14  F15E         	lfsr	1,___inthi_sp
 35465  01C628  0011               	retfie		f
 35466  01C62A                     __end_of_Default_ISR:
 35467                           	opt callstack 0
 35468                           
 35469 ;; *************** function _ADCC_ISR *****************
 35470 ;; Defined at:
 35471 ;;		line 314 in file "mcc_generated_files/adcc.c"
 35472 ;; Parameters:    Size  Location     Type
 35473 ;;		None
 35474 ;; Auto vars:     Size  Location     Type
 35475 ;;		None
 35476 ;; Return value:  Size  Location     Type
 35477 ;;                  1    wreg      void 
 35478 ;; Registers used:
 35479 ;;		wreg, status,2, status,0, pclath, tosl
 35480 ;; Tracked objects:
 35481 ;;		On entry : 0/0
 35482 ;;		On exit  : 0/0
 35483 ;;		Unchanged: 0/0
 35484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35489 ;;Total ram usage:        0 bytes
 35490 ;; Hardware stack levels used:    1
 35491 ;; Hardware stack levels required when called:    1
 35492 ;; This function calls:
 35493 ;;		Absolute function
 35494 ;;		_ADCC_DefaultInterruptHandler
 35495 ;;		_adc_int_handler
 35496 ;; This function is called by:
 35497 ;;		Interrupt level 2
 35498 ;; This function uses a non-reentrant model
 35499 ;;
 35500                           
 35501                           	psect	text166
 35502  01BF64                     __ptext166:
 35503                           	opt callstack 0
 35504  01BF64                     _ADCC_ISR:
 35505                           	opt callstack 3
 35506                           
 35507                           ;incstack = 0
 35508  01BF64  EE14  F15E         	lfsr	1,___inthi_sp
 35509                           
 35510                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 35511  01BF68  0139               	movlb	57	; () banked
 35512  01BF6A  95A1               	bcf	161,2,b	;volatile
 35513                           
 35514                           ; BSR set to: 57
 35515                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 35516  01BF6C  0100               	movlb	0	; () banked
 35517  01BF6E  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 35518  01BF70  1189               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 35519  01BF72  118A               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 35520  01BF74  B4D8               	btfsc	status,2,c
 35521  01BF76  0011               	retfie		f
 35522                           
 35523                           ; BSR set to: 0
 35524                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 35525  01BF78  D801               	call	i2u1052_48
 35526  01BF7A  0011               	retfie		f
 35527  01BF7C                     i2u1052_48:
 35528  01BF7C  0005               	push	
 35529  01BF7E  6EFA               	movwf	pclath,c
 35530  01BF80  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 35531  01BF82  6EFD               	movwf	tosl,c
 35532  01BF84  5189               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 35533  01BF86  6EFE               	movwf	tosh,c
 35534  01BF88  518A               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 35535  01BF8A  6EFF               	movwf	tosu,c
 35536  01BF8C  50FA               	movf	pclath,w,c
 35537  01BF8E  0012               	return		;indir
 35538  01BF90                     __end_of_ADCC_ISR:
 35539                           	opt callstack 0
 35540                           
 35541 ;; *************** function _adc_int_t_handler *****************
 35542 ;; Defined at:
 35543 ;;		line 170 in file "daq.c"
 35544 ;; Parameters:    Size  Location     Type
 35545 ;;		None
 35546 ;; Auto vars:     Size  Location     Type
 35547 ;;		None
 35548 ;; Return value:  Size  Location     Type
 35549 ;;                  1  [STACK] void 
 35550 ;; Registers used:
 35551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 35552 ;; Tracked objects:
 35553 ;;		On entry : 3F/0
 35554 ;;		On exit  : 1/0
 35555 ;;		Unchanged: 0/0
 35556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35561 ;;Total ram usage:        0 bytes
 35562 ;; Hardware stack levels used:    1
 35563 ;; Hardware stack levels required when called:    1
 35564 ;; This function calls:
 35565 ;;		_ADCC_DischargeSampleCapacitor
 35566 ;;		_ADCC_StartConversion
 35567 ;; This function is called by:
 35568 ;;		_start_adc_scan
 35569 ;;		_ADCC_ThresholdISR
 35570 ;; This function uses a reentrant model
 35571 ;;
 35572                           
 35573                           	psect	text167
 35574  01B0CA                     __ptext167:
 35575                           	opt callstack 0
 35576  01B0CA                     _adc_int_t_handler:
 35577                           	opt callstack 2
 35578                           
 35579                           ;daq.c: 175:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 35580                           
 35581                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35582                           ;incstack = 0
 35583  01B0CA  013E               	movlb	62	; () banked
 35584  01B0CC  51E6               	movf	230,w,b	;volatile
 35585  01B0CE  006F FB9C  F001    	movff	16103,btemp	;volatile
 35586  01B0D4  6A02               	clrf	(btemp+1)^0,c
 35587  01B0D6  0060  F004  F002   	movff	btemp,btemp+1
 35588  01B0DC  6A01               	clrf	btemp^0,c
 35589  01B0DE  2601               	addwf	btemp^0,f,c
 35590  01B0E0  0E00               	movlw	0
 35591  01B0E2  2202               	addwfc	(btemp+1)^0,f,c
 35592  01B0E4  0100               	movlb	0	; () banked
 35593  01B0E6  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 35594  01B0E8  0D02               	mullw	2
 35595  01B0EA  50F3               	movf	243,w,c
 35596  01B0EC  0FAF               	addlw	low _R
 35597  01B0EE  6ED9               	movwf	fsr2l,c
 35598  01B0F0  6ADA               	clrf	fsr2h,c
 35599  01B0F2  0060  F007  FFDE   	movff	btemp,postinc2
 35600  01B0F8  0060  F00B  FFDD   	movff	btemp+1,postdec2
 35601  01B0FE                     l11428:
 35602                           
 35603                           ;daq.c: 177:   if (++R.scan_index > 0XD) {
 35604  01B0FE  0100               	movlb	0	; () banked
 35605  01B100  2BE1               	incf	(_R+50)& (0+255),f,b	;volatile
 35606  01B102  0E0D               	movlw	13
 35607  01B104  65E1               	cpfsgt	(_R+50)& (0+255),b	;volatile
 35608  01B106  D003               	goto	l11434
 35609                           
 35610                           ; BSR set to: 0
 35611                           ;daq.c: 178:    R.done = 1;
 35612  01B108  0E01               	movlw	1
 35613  01B10A  6FE4               	movwf	(_R+53)& (0+255),b	;volatile
 35614  01B10C  0012               	return	
 35615  01B10E                     l11434:
 35616                           
 35617                           ; BSR set to: 0
 35618                           ;daq.c: 184:  } while (!((R.scan_select >> R.scan_index) &0x1));
 35619  01B10E  0060  F384  F00C   	movff	_R+50,btemp+11	;volatile
 35620  01B114  EE20  F0E2         	lfsr	2,_R+51	;volatile
 35621  01B118  006F FF78  F009    	movff	postinc2,btemp+8
 35622  01B11E  006F FF74  F00A    	movff	postdec2,btemp+9
 35623  01B124  2A0C               	incf	(btemp+11)^0,f,c
 35624  01B126  D003               	goto	u1049_44
 35625  01B128                     u1049_45:
 35626  01B128  90D8               	bcf	status,0,c
 35627  01B12A  320A               	rrcf	(btemp+9)^0,f,c
 35628  01B12C  3209               	rrcf	(btemp+8)^0,f,c
 35629  01B12E                     u1049_44:
 35630  01B12E  2E0C               	decfsz	(btemp+11)^0,f,c
 35631  01B130  D7FB               	goto	u1049_45
 35632  01B132  A009               	btfss	(btemp+8)^0,0,c
 35633  01B134  D7E4               	goto	l11428
 35634                           
 35635                           ;daq.c: 185:  ADCC_DischargeSampleCapacitor();
 35636  01B136  ECF1  F0E2         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 35637                           
 35638                           ; BSR set to: 62
 35639                           ;daq.c: 186:  ADCC_StartConversion(R.scan_index & 0xf);
 35640  01B13A  0100               	movlb	0	; () banked
 35641  01B13C  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 35642  01B13E  0B0F               	andlw	15
 35643  01B140  6EE6               	movwf	postinc1,c
 35644  01B142  EC88  F0E2         	call	_ADCC_StartConversion	;wreg free
 35645                           
 35646                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35647  01B146  0012               	return		;funcret
 35648  01B148                     __end_of_adc_int_t_handler:
 35649                           	opt callstack 0
 35650                           
 35651 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 35652 ;; Defined at:
 35653 ;;		line 339 in file "mcc_generated_files/adcc.c"
 35654 ;; Parameters:    Size  Location     Type
 35655 ;;		None
 35656 ;; Auto vars:     Size  Location     Type
 35657 ;;		None
 35658 ;; Return value:  Size  Location     Type
 35659 ;;                  1  [STACK] void 
 35660 ;; Registers used:
 35661 ;;		None
 35662 ;; Tracked objects:
 35663 ;;		On entry : 3F/0
 35664 ;;		On exit  : 0/0
 35665 ;;		Unchanged: 0/0
 35666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35671 ;;Total ram usage:        0 bytes
 35672 ;; Hardware stack levels used:    1
 35673 ;; This function calls:
 35674 ;;		Nothing
 35675 ;; This function is called by:
 35676 ;;		_ADCC_Initialize
 35677 ;;		_ADCC_ISR
 35678 ;;		_ADCC_ThresholdISR
 35679 ;; This function uses a reentrant model
 35680 ;;
 35681                           
 35682                           	psect	text168
 35683  01C630                     __ptext168:
 35684                           	opt callstack 0
 35685  01C630                     _ADCC_DefaultInterruptHandler:
 35686                           	opt callstack 3
 35687                           
 35688                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35689                           
 35690                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35691                           ;incstack = 0
 35692  01C630  0012               	return		;funcret
 35693  01C632                     __end_of_ADCC_DefaultInterruptHandler:
 35694                           	opt callstack 0
 35695                           
 35696 ;; *************** function _adc_int_handler *****************
 35697 ;; Defined at:
 35698 ;;		line 160 in file "daq.c"
 35699 ;; Parameters:    Size  Location     Type
 35700 ;;		None
 35701 ;; Auto vars:     Size  Location     Type
 35702 ;;		None
 35703 ;; Return value:  Size  Location     Type
 35704 ;;                  1  [STACK] void 
 35705 ;; Registers used:
 35706 ;;		None
 35707 ;; Tracked objects:
 35708 ;;		On entry : 3F/0
 35709 ;;		On exit  : 0/0
 35710 ;;		Unchanged: 0/0
 35711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35716 ;;Total ram usage:        0 bytes
 35717 ;; Hardware stack levels used:    1
 35718 ;; This function calls:
 35719 ;;		Nothing
 35720 ;; This function is called by:
 35721 ;;		_start_adc_scan
 35722 ;;		_ADCC_ISR
 35723 ;; This function uses a reentrant model
 35724 ;;
 35725                           
 35726                           	psect	text169
 35727  01C632                     __ptext169:
 35728                           	opt callstack 0
 35729  01C632                     _adc_int_handler:
 35730                           	opt callstack 3
 35731                           
 35732                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35733                           
 35734                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35735                           ;incstack = 0
 35736  01C632  0012               	return		;funcret
 35737  01C634                     __end_of_adc_int_handler:
 35738                           	opt callstack 0
 35739                           
 35740 ;; *************** function _ADCC_ThresholdISR *****************
 35741 ;; Defined at:
 35742 ;;		line 327 in file "mcc_generated_files/adcc.c"
 35743 ;; Parameters:    Size  Location     Type
 35744 ;;		None
 35745 ;; Auto vars:     Size  Location     Type
 35746 ;;		None
 35747 ;; Return value:  Size  Location     Type
 35748 ;;                  1    wreg      void 
 35749 ;; Registers used:
 35750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 35751 ;; Tracked objects:
 35752 ;;		On entry : 0/0
 35753 ;;		On exit  : 0/0
 35754 ;;		Unchanged: 0/0
 35755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35758 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35759 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35760 ;;Total ram usage:        5 bytes
 35761 ;; Hardware stack levels used:    1
 35762 ;; Hardware stack levels required when called:    2
 35763 ;; This function calls:
 35764 ;;		Absolute function
 35765 ;;		_ADCC_DefaultInterruptHandler
 35766 ;;		_adc_int_t_handler
 35767 ;; This function is called by:
 35768 ;;		Interrupt level 2
 35769 ;; This function uses a non-reentrant model
 35770 ;;
 35771                           
 35772                           	psect	text170
 35773  01B380                     __ptext170:
 35774                           	opt callstack 0
 35775  01B380                     _ADCC_ThresholdISR:
 35776                           	opt callstack 2
 35777                           
 35778                           ;incstack = 0
 35779  01B380  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 35780  01B386  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 35781  01B38C  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 35782  01B392  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 35783  01B398  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 35784  01B39E  EE14  F15E         	lfsr	1,___inthi_sp
 35785                           
 35786                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 35787  01B3A2  0139               	movlb	57	; () banked
 35788  01B3A4  97A1               	bcf	161,3,b	;volatile
 35789                           
 35790                           ; BSR set to: 57
 35791                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 35792  01B3A6  0100               	movlb	0	; () banked
 35793  01B3A8  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 35794  01B3AA  1186               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 35795  01B3AC  1187               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 35796  01B3AE  B4D8               	btfsc	status,2,c
 35797  01B3B0  D00C               	goto	i2u1054_49
 35798                           
 35799                           ; BSR set to: 0
 35800                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 35801  01B3B2  D801               	call	i2u1054_48
 35802  01B3B4  D00A               	goto	i2u1054_49
 35803  01B3B6                     i2u1054_48:
 35804  01B3B6  0005               	push	
 35805  01B3B8  6EFA               	movwf	pclath,c
 35806  01B3BA  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 35807  01B3BC  6EFD               	movwf	tosl,c
 35808  01B3BE  5186               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 35809  01B3C0  6EFE               	movwf	tosh,c
 35810  01B3C2  5187               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 35811  01B3C4  6EFF               	movwf	tosu,c
 35812  01B3C6  50FA               	movf	pclath,w,c
 35813  01B3C8  0012               	return		;indir
 35814  01B3CA                     i2u1054_49:
 35815  01B3CA  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 35816  01B3D0  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 35817  01B3D6  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 35818  01B3DC  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 35819  01B3E2  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 35820  01B3E8  0011               	retfie		f
 35821  01B3EA                     __end_of_ADCC_ThresholdISR:
 35822                           	opt callstack 0
 35823                           
 35824 ;; *************** function _UART1_rx_vect_isr *****************
 35825 ;; Defined at:
 35826 ;;		line 181 in file "mcc_generated_files/uart1.c"
 35827 ;; Parameters:    Size  Location     Type
 35828 ;;		None
 35829 ;; Auto vars:     Size  Location     Type
 35830 ;;		None
 35831 ;; Return value:  Size  Location     Type
 35832 ;;                  1    wreg      void 
 35833 ;; Registers used:
 35834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35835 ;; Tracked objects:
 35836 ;;		On entry : 0/0
 35837 ;;		On exit  : 0/0
 35838 ;;		Unchanged: 0/0
 35839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35844 ;;Total ram usage:        0 bytes
 35845 ;; Hardware stack levels used:    1
 35846 ;; Hardware stack levels required when called:    1
 35847 ;; This function calls:
 35848 ;;		Absolute function
 35849 ;;		_UART1_Receive_ISR
 35850 ;; This function is called by:
 35851 ;;		Interrupt level 2
 35852 ;; This function uses a non-reentrant model
 35853 ;;
 35854                           
 35855                           	psect	text171
 35856  01C1C8                     __ptext171:
 35857                           	opt callstack 0
 35858  01C1C8                     _UART1_rx_vect_isr:
 35859                           	opt callstack 3
 35860                           
 35861                           ;incstack = 0
 35862  01C1C8  EE14  F15E         	lfsr	1,___inthi_sp
 35863                           
 35864                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 35865  01C1CC  0100               	movlb	0	; () banked
 35866  01C1CE  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35867  01C1D0  118C               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35868  01C1D2  118D               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35869  01C1D4  B4D8               	btfsc	status,2,c
 35870  01C1D6  0011               	retfie		f
 35871                           
 35872                           ; BSR set to: 0
 35873                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 35874  01C1D8  D801               	call	i2u1056_48
 35875  01C1DA  0011               	retfie		f
 35876  01C1DC                     i2u1056_48:
 35877  01C1DC  0005               	push	
 35878  01C1DE  6EFA               	movwf	pclath,c
 35879  01C1E0  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35880  01C1E2  6EFD               	movwf	tosl,c
 35881  01C1E4  518C               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35882  01C1E6  6EFE               	movwf	tosh,c
 35883  01C1E8  518D               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35884  01C1EA  6EFF               	movwf	tosu,c
 35885  01C1EC  50FA               	movf	pclath,w,c
 35886  01C1EE  0012               	return		;indir
 35887  01C1F0                     __end_of_UART1_rx_vect_isr:
 35888                           	opt callstack 0
 35889                           
 35890 ;; *************** function _UART1_Receive_ISR *****************
 35891 ;; Defined at:
 35892 ;;		line 192 in file "mcc_generated_files/uart1.c"
 35893 ;; Parameters:    Size  Location     Type
 35894 ;;		None
 35895 ;; Auto vars:     Size  Location     Type
 35896 ;;		None
 35897 ;; Return value:  Size  Location     Type
 35898 ;;                  1  [STACK] void 
 35899 ;; Registers used:
 35900 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35901 ;; Tracked objects:
 35902 ;;		On entry : 3F/0
 35903 ;;		On exit  : 3F/0
 35904 ;;		Unchanged: 0/0
 35905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35910 ;;Total ram usage:        0 bytes
 35911 ;; Hardware stack levels used:    1
 35912 ;; This function calls:
 35913 ;;		Nothing
 35914 ;; This function is called by:
 35915 ;;		_UART1_Initialize
 35916 ;;		_UART1_rx_vect_isr
 35917 ;; This function uses a reentrant model
 35918 ;;
 35919                           
 35920                           	psect	text172
 35921  01C35C                     __ptext172:
 35922                           	opt callstack 0
 35923  01C35C                     _UART1_Receive_ISR:
 35924                           	opt callstack 3
 35925                           
 35926                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 35927                           
 35928                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35929                           ;incstack = 0
 35930  01C35C  0ED9               	movlw	low _uart1RxBuffer
 35931  01C35E  2447               	addwf	_uart1RxHead^0,w,c	;volatile
 35932  01C360  6ED9               	movwf	fsr2l,c
 35933  01C362  6ADA               	clrf	fsr2h,c
 35934  01C364  0E01               	movlw	high _uart1RxBuffer
 35935  01C366  22DA               	addwfc	fsr2h,f,c
 35936  01C368  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 35937  01C36E  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 35938                           
 35939                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 35940  01C370  0E07               	movlw	7
 35941  01C372  6447               	cpfsgt	_uart1RxHead^0,c
 35942  01C374  D001               	goto	l10956
 35943                           
 35944                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 35945  01C376  6A47               	clrf	_uart1RxHead^0,c	;volatile
 35946  01C378                     l10956:
 35947                           
 35948                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 35949  01C378  0100               	movlb	0	; () banked
 35950  01C37A  2BAD               	incf	_uart1RxCount& (0+255),f,b	;volatile
 35951                           
 35952                           ; BSR set to: 0
 35953                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35954  01C37C  0012               	return		;funcret
 35955  01C37E                     __end_of_UART1_Receive_ISR:
 35956                           	opt callstack 0
 35957                           
 35958 ;; *************** function _UART2_tx_vect_isr *****************
 35959 ;; Defined at:
 35960 ;;		line 195 in file "mcc_generated_files/uart2.c"
 35961 ;; Parameters:    Size  Location     Type
 35962 ;;		None
 35963 ;; Auto vars:     Size  Location     Type
 35964 ;;		None
 35965 ;; Return value:  Size  Location     Type
 35966 ;;                  1    wreg      void 
 35967 ;; Registers used:
 35968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35969 ;; Tracked objects:
 35970 ;;		On entry : 0/0
 35971 ;;		On exit  : 0/0
 35972 ;;		Unchanged: 0/0
 35973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35978 ;;Total ram usage:        0 bytes
 35979 ;; Hardware stack levels used:    1
 35980 ;; Hardware stack levels required when called:    1
 35981 ;; This function calls:
 35982 ;;		Absolute function
 35983 ;;		_UART2_Transmit_ISR
 35984 ;; This function is called by:
 35985 ;;		Interrupt level 2
 35986 ;; This function uses a non-reentrant model
 35987 ;;
 35988                           
 35989                           	psect	text173
 35990  01C1F0                     __ptext173:
 35991                           	opt callstack 0
 35992  01C1F0                     _UART2_tx_vect_isr:
 35993                           	opt callstack 3
 35994                           
 35995                           ; BSR set to: 0
 35996                           ;incstack = 0
 35997  01C1F0  EE14  F15E         	lfsr	1,___inthi_sp
 35998                           
 35999                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 36000  01C1F4  0100               	movlb	0	; () banked
 36001  01C1F6  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 36002  01C1F8  118F               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 36003  01C1FA  1190               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 36004  01C1FC  B4D8               	btfsc	status,2,c
 36005  01C1FE  0011               	retfie		f
 36006                           
 36007                           ; BSR set to: 0
 36008                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 36009  01C200  D801               	call	i2u1058_48
 36010  01C202  0011               	retfie		f
 36011  01C204                     i2u1058_48:
 36012  01C204  0005               	push	
 36013  01C206  6EFA               	movwf	pclath,c
 36014  01C208  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 36015  01C20A  6EFD               	movwf	tosl,c
 36016  01C20C  518F               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 36017  01C20E  6EFE               	movwf	tosh,c
 36018  01C210  5190               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 36019  01C212  6EFF               	movwf	tosu,c
 36020  01C214  50FA               	movf	pclath,w,c
 36021  01C216  0012               	return		;indir
 36022  01C218                     __end_of_UART2_tx_vect_isr:
 36023                           	opt callstack 0
 36024                           
 36025 ;; *************** function _UART2_Transmit_ISR *****************
 36026 ;; Defined at:
 36027 ;;		line 213 in file "mcc_generated_files/uart2.c"
 36028 ;; Parameters:    Size  Location     Type
 36029 ;;		None
 36030 ;; Auto vars:     Size  Location     Type
 36031 ;;		None
 36032 ;; Return value:  Size  Location     Type
 36033 ;;                  1  [STACK] void 
 36034 ;; Registers used:
 36035 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36036 ;; Tracked objects:
 36037 ;;		On entry : 3F/0
 36038 ;;		On exit  : 3B/39
 36039 ;;		Unchanged: 0/0
 36040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36045 ;;Total ram usage:        0 bytes
 36046 ;; Hardware stack levels used:    1
 36047 ;; This function calls:
 36048 ;;		Nothing
 36049 ;; This function is called by:
 36050 ;;		_UART2_Initialize
 36051 ;;		_UART2_tx_vect_isr
 36052 ;; This function uses a reentrant model
 36053 ;;
 36054                           
 36055                           	psect	text174
 36056  01BF90                     __ptext174:
 36057                           	opt callstack 0
 36058  01BF90                     _UART2_Transmit_ISR:
 36059                           	opt callstack 3
 36060                           
 36061                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 36062                           
 36063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36064                           ;incstack = 0
 36065  01BF90  0E40               	movlw	64
 36066  01BF92  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 36067  01BF94  D010               	goto	l673
 36068                           
 36069                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 36070  01BF96  0E00               	movlw	low _uart2TxBuffer
 36071  01BF98  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 36072  01BF9A  6ED9               	movwf	fsr2l,c
 36073  01BF9C  6ADA               	clrf	fsr2h,c
 36074  01BF9E  0E03               	movlw	high _uart2TxBuffer
 36075  01BFA0  22DA               	addwfc	fsr2h,f,c
 36076  01BFA2  50DF               	movf	indf2,w,c
 36077  01BFA4  013D               	movlb	61	; () banked
 36078  01BFA6  6FD2               	movwf	210,b	;volatile
 36079                           
 36080                           ; BSR set to: 61
 36081  01BFA8  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 36082                           
 36083                           ; BSR set to: 61
 36084                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 36085  01BFAA  0E3F               	movlw	63
 36086  01BFAC  6446               	cpfsgt	_uart2TxTail^0,c
 36087  01BFAE  D001               	goto	l10968
 36088                           
 36089                           ; BSR set to: 61
 36090                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 36091  01BFB0  6A46               	clrf	_uart2TxTail^0,c	;volatile
 36092  01BFB2                     l10968:
 36093                           
 36094                           ; BSR set to: 61
 36095                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 36096  01BFB2  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 36097                           
 36098                           ;mcc_generated_files/uart2.c: 224:     }
 36099  01BFB4  0012               	return	
 36100  01BFB6                     l673:
 36101                           
 36102                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 36103  01BFB6  0139               	movlb	57	; () banked
 36104  01BFB8  9796               	bcf	150,3,b	;volatile
 36105                           
 36106                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 36107  01BFBA  0012               	return		;funcret
 36108  01BFBC                     __end_of_UART2_Transmit_ISR:
 36109                           	opt callstack 0
 36110                           
 36111 ;; *************** function _UART2_rx_vect_isr *****************
 36112 ;; Defined at:
 36113 ;;		line 203 in file "mcc_generated_files/uart2.c"
 36114 ;; Parameters:    Size  Location     Type
 36115 ;;		None
 36116 ;; Auto vars:     Size  Location     Type
 36117 ;;		None
 36118 ;; Return value:  Size  Location     Type
 36119 ;;                  1    wreg      void 
 36120 ;; Registers used:
 36121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 36122 ;; Tracked objects:
 36123 ;;		On entry : 0/0
 36124 ;;		On exit  : 0/0
 36125 ;;		Unchanged: 0/0
 36126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36131 ;;Total ram usage:        0 bytes
 36132 ;; Hardware stack levels used:    1
 36133 ;; Hardware stack levels required when called:    1
 36134 ;; This function calls:
 36135 ;;		Absolute function
 36136 ;;		_UART2_Receive_ISR
 36137 ;; This function is called by:
 36138 ;;		Interrupt level 2
 36139 ;; This function uses a non-reentrant model
 36140 ;;
 36141                           
 36142                           	psect	text175
 36143  01C218                     __ptext175:
 36144                           	opt callstack 0
 36145  01C218                     _UART2_rx_vect_isr:
 36146                           	opt callstack 3
 36147                           
 36148                           ;incstack = 0
 36149  01C218  EE14  F15E         	lfsr	1,___inthi_sp
 36150                           
 36151                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 36152  01C21C  0100               	movlb	0	; () banked
 36153  01C21E  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 36154  01C220  1192               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 36155  01C222  1193               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 36156  01C224  B4D8               	btfsc	status,2,c
 36157  01C226  0011               	retfie		f
 36158                           
 36159                           ; BSR set to: 0
 36160                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 36161  01C228  D801               	call	i2u1060_48
 36162  01C22A  0011               	retfie		f
 36163  01C22C                     i2u1060_48:
 36164  01C22C  0005               	push	
 36165  01C22E  6EFA               	movwf	pclath,c
 36166  01C230  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 36167  01C232  6EFD               	movwf	tosl,c
 36168  01C234  5192               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 36169  01C236  6EFE               	movwf	tosh,c
 36170  01C238  5193               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 36171  01C23A  6EFF               	movwf	tosu,c
 36172  01C23C  50FA               	movf	pclath,w,c
 36173  01C23E  0012               	return		;indir
 36174  01C240                     __end_of_UART2_rx_vect_isr:
 36175                           	opt callstack 0
 36176                           
 36177 ;; *************** function _UART2_Receive_ISR *****************
 36178 ;; Defined at:
 36179 ;;		line 233 in file "mcc_generated_files/uart2.c"
 36180 ;; Parameters:    Size  Location     Type
 36181 ;;		None
 36182 ;; Auto vars:     Size  Location     Type
 36183 ;;		None
 36184 ;; Return value:  Size  Location     Type
 36185 ;;                  1  [STACK] void 
 36186 ;; Registers used:
 36187 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36188 ;; Tracked objects:
 36189 ;;		On entry : 3F/0
 36190 ;;		On exit  : 3F/0
 36191 ;;		Unchanged: 0/0
 36192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36197 ;;Total ram usage:        0 bytes
 36198 ;; Hardware stack levels used:    1
 36199 ;; This function calls:
 36200 ;;		Nothing
 36201 ;; This function is called by:
 36202 ;;		_UART2_Initialize
 36203 ;;		_UART2_rx_vect_isr
 36204 ;; This function uses a reentrant model
 36205 ;;
 36206                           
 36207                           	psect	text176
 36208  01C39E                     __ptext176:
 36209                           	opt callstack 0
 36210  01C39E                     _UART2_Receive_ISR:
 36211                           	opt callstack 3
 36212                           
 36213                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 36214                           
 36215                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36216                           ;incstack = 0
 36217  01C39E  0E00               	movlw	low _uart2RxBuffer
 36218  01C3A0  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 36219  01C3A2  6ED9               	movwf	fsr2l,c
 36220  01C3A4  6ADA               	clrf	fsr2h,c
 36221  01C3A6  0E04               	movlw	high _uart2RxBuffer
 36222  01C3A8  22DA               	addwfc	fsr2h,f,c
 36223  01C3AA  006F F743 FFDF     	movff	15824,indf2	;volatile
 36224  01C3B0  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 36225                           
 36226                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 36227  01C3B2  2844               	incf	_uart2RxHead^0,w,c
 36228  01C3B4  B4D8               	btfsc	status,2,c
 36229                           
 36230                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 36231  01C3B6  6A44               	clrf	_uart2RxHead^0,c	;volatile
 36232                           
 36233                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 36234  01C3B8  0100               	movlb	0	; () banked
 36235  01C3BA  2BAA               	incf	_uart2RxCount& (0+255),f,b	;volatile
 36236                           
 36237                           ; BSR set to: 0
 36238                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 36239  01C3BC  0012               	return		;funcret
 36240  01C3BE                     __end_of_UART2_Receive_ISR:
 36241                           	opt callstack 0
 36242                           
 36243 ;; *************** function _TMR6_ISR *****************
 36244 ;; Defined at:
 36245 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 36246 ;; Parameters:    Size  Location     Type
 36247 ;;		None
 36248 ;; Auto vars:     Size  Location     Type
 36249 ;;		None
 36250 ;; Return value:  Size  Location     Type
 36251 ;;                  1    wreg      void 
 36252 ;; Registers used:
 36253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 36254 ;; Tracked objects:
 36255 ;;		On entry : 0/0
 36256 ;;		On exit  : 0/0
 36257 ;;		Unchanged: 0/0
 36258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36261 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36262 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36263 ;;Total ram usage:        1 bytes
 36264 ;; Hardware stack levels used:    1
 36265 ;; Hardware stack levels required when called:    2
 36266 ;; This function calls:
 36267 ;;		_TMR6_CallBack
 36268 ;; This function is called by:
 36269 ;;		Interrupt level 2
 36270 ;; This function uses a non-reentrant model
 36271 ;;
 36272                           
 36273                           	psect	text177
 36274  01C470                     __ptext177:
 36275                           	opt callstack 0
 36276  01C470                     _TMR6_ISR:
 36277                           	opt callstack 2
 36278                           
 36279                           ; BSR set to: 0
 36280                           ;incstack = 0
 36281  01C470  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 36282  01C476  EE14  F15E         	lfsr	1,___inthi_sp
 36283                           
 36284                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 36285  01C47A  0139               	movlb	57	; () banked
 36286  01C47C  91A9               	bcf	169,0,b	;volatile
 36287                           
 36288                           ; BSR set to: 57
 36289                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 36290  01C47E  EC7A  F0E1         	call	_TMR6_CallBack	;wreg free
 36291  01C482  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 36292  01C488  0011               	retfie		f
 36293  01C48A                     __end_of_TMR6_ISR:
 36294                           	opt callstack 0
 36295                           
 36296 ;; *************** function _TMR6_CallBack *****************
 36297 ;; Defined at:
 36298 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 36299 ;; Parameters:    Size  Location     Type
 36300 ;;		None
 36301 ;; Auto vars:     Size  Location     Type
 36302 ;;		None
 36303 ;; Return value:  Size  Location     Type
 36304 ;;                  1  [STACK] void 
 36305 ;; Registers used:
 36306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 36307 ;; Tracked objects:
 36308 ;;		On entry : 3F/39
 36309 ;;		On exit  : 0/0
 36310 ;;		Unchanged: 0/0
 36311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36316 ;;Total ram usage:        0 bytes
 36317 ;; Hardware stack levels used:    1
 36318 ;; Hardware stack levels required when called:    1
 36319 ;; This function calls:
 36320 ;;		Absolute function
 36321 ;;		_TMR6_DefaultInterruptHandler
 36322 ;; This function is called by:
 36323 ;;		_TMR6_ISR
 36324 ;; This function uses a reentrant model
 36325 ;;
 36326                           
 36327                           	psect	text178
 36328  01C2F4                     __ptext178:
 36329                           	opt callstack 0
 36330  01C2F4                     _TMR6_CallBack:
 36331                           	opt callstack 2
 36332                           
 36333                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 36334                           
 36335                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36336                           ;incstack = 0
 36337  01C2F4  0100               	movlb	0	; () banked
 36338  01C2F6  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 36339  01C2F8  1183               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 36340  01C2FA  1184               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 36341  01C2FC  B4D8               	btfsc	status,2,c
 36342  01C2FE  0012               	return	
 36343                           
 36344                           ; BSR set to: 0
 36345                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 36346  01C300  D801               	call	u1015_48
 36347  01C302  0012               	return	
 36348  01C304                     u1015_48:
 36349  01C304  0005               	push	
 36350  01C306  6EFA               	movwf	pclath,c
 36351  01C308  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 36352  01C30A  6EFD               	movwf	tosl,c
 36353  01C30C  5183               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 36354  01C30E  6EFE               	movwf	tosh,c
 36355  01C310  5184               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 36356  01C312  6EFF               	movwf	tosu,c
 36357  01C314  50FA               	movf	pclath,w,c
 36358  01C316  0012               	return		;indir
 36359  01C318                     __end_of_TMR6_CallBack:
 36360                           	opt callstack 0
 36361                           
 36362 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 36363 ;; Defined at:
 36364 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 36365 ;; Parameters:    Size  Location     Type
 36366 ;;		None
 36367 ;; Auto vars:     Size  Location     Type
 36368 ;;  i               1  [STACK] unsigned char 
 36369 ;; Return value:  Size  Location     Type
 36370 ;;                  1  [STACK] void 
 36371 ;; Registers used:
 36372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 36373 ;; Tracked objects:
 36374 ;;		On entry : 3F/0
 36375 ;;		On exit  : 0/0
 36376 ;;		Unchanged: 0/0
 36377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36382 ;;Total ram usage:        0 bytes
 36383 ;; Hardware stack levels used:    1
 36384 ;; This function calls:
 36385 ;;		Nothing
 36386 ;; This function is called by:
 36387 ;;		_TMR6_Initialize
 36388 ;;		_TMR6_CallBack
 36389 ;; This function uses a reentrant model
 36390 ;;
 36391                           
 36392                           	psect	text179
 36393  01B78A                     __ptext179:
 36394                           	opt callstack 0
 36395  01B78A                     _TMR6_DefaultInterruptHandler:
 36396                           	opt callstack 0
 36397                           
 36398                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36399  01B78A  52E6               	movf	postinc1,f,c
 36400                           
 36401                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 36402                           ;stkvar	_i @ sp[(-1)+0]
 36403                           
 36404                           ;incstack = 0
 36405  01B78C  0EFF               	movlw	-1
 36406  01B78E  6AE3               	clrf	plusw1,c
 36407  01B790                     l10532:
 36408                           
 36409                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 36410                           ;stkvar	_i @ sp[(-1)+0]
 36411  01B790  0EFF               	movlw	-1
 36412  01B792  50E3               	movf	plusw1,w,c
 36413  01B794  0D02               	mullw	2
 36414  01B796  0E7D               	movlw	low _tickCount
 36415  01B798  24F3               	addwf	243,w,c
 36416  01B79A  6ED9               	movwf	fsr2l,c
 36417  01B79C  0E02               	movlw	high _tickCount
 36418  01B79E  20F4               	addwfc	prodh,w,c
 36419  01B7A0  6EDA               	movwf	fsr2h,c
 36420  01B7A2  50DE               	movf	postinc2,w,c
 36421  01B7A4  10DE               	iorwf	postinc2,w,c
 36422  01B7A6  B4D8               	btfsc	status,2,c
 36423  01B7A8  D00C               	goto	l10536
 36424                           
 36425                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 36426                           ;stkvar	_i @ sp[(-1)+0]
 36427  01B7AA  0EFF               	movlw	-1
 36428  01B7AC  50E3               	movf	plusw1,w,c
 36429  01B7AE  0D02               	mullw	2
 36430  01B7B0  0E7D               	movlw	low _tickCount
 36431  01B7B2  24F3               	addwf	243,w,c
 36432  01B7B4  6ED9               	movwf	fsr2l,c
 36433  01B7B6  0E02               	movlw	high _tickCount
 36434  01B7B8  20F4               	addwfc	prodh,w,c
 36435  01B7BA  6EDA               	movwf	fsr2h,c
 36436  01B7BC  06DE               	decf	postinc2,f,c
 36437  01B7BE  0E00               	movlw	0
 36438  01B7C0  5ADD               	subwfb	postdec2,f,c
 36439  01B7C2                     l10536:
 36440                           
 36441                           ;mcc_generated_files/tmr6.c: 207:  }
 36442                           ;stkvar	_i @ sp[(-1)+0]
 36443  01B7C2  0EFF               	movlw	-1
 36444  01B7C4  2AE3               	incf	plusw1,f,c
 36445                           
 36446                           ;stkvar	_i @ sp[(-1)+0]
 36447  01B7C6  0EFF               	movlw	-1
 36448  01B7C8  006F FF8C  F001    	movff	plusw1,btemp
 36449  01B7CE  0E0C               	movlw	12
 36450  01B7D0  6401               	cpfsgt	btemp^0,c
 36451  01B7D2  D7DE               	goto	l10532
 36452                           
 36453                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36454  01B7D4  52E5               	movf	postdec1,f,c
 36455  01B7D6  0012               	return		;funcret
 36456  01B7D8                     __end_of_TMR6_DefaultInterruptHandler:
 36457                           	opt callstack 0
 36458                           
 36459 ;; *************** function _DMA1_DMASCNT_ISR *****************
 36460 ;; Defined at:
 36461 ;;		line 126 in file "mcc_generated_files/dma1.c"
 36462 ;; Parameters:    Size  Location     Type
 36463 ;;		None
 36464 ;; Auto vars:     Size  Location     Type
 36465 ;;		None
 36466 ;; Return value:  Size  Location     Type
 36467 ;;                  1    wreg      void 
 36468 ;; Registers used:
 36469 ;;		None
 36470 ;; Tracked objects:
 36471 ;;		On entry : 0/0
 36472 ;;		On exit  : 3F/1
 36473 ;;		Unchanged: 0/0
 36474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36479 ;;Total ram usage:        0 bytes
 36480 ;; Hardware stack levels used:    1
 36481 ;; This function calls:
 36482 ;;		Nothing
 36483 ;; This function is called by:
 36484 ;;		Interrupt level 2
 36485 ;; This function uses a non-reentrant model
 36486 ;;
 36487                           
 36488                           	psect	text180
 36489  01C59C                     __ptext180:
 36490                           	opt callstack 0
 36491  01C59C                     _DMA1_DMASCNT_ISR:
 36492                           	opt callstack 4
 36493                           
 36494                           ;incstack = 0
 36495  01C59C  EE14  F15E         	lfsr	1,___inthi_sp
 36496                           
 36497                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 36498  01C5A0  0139               	movlb	57	; () banked
 36499  01C5A2  91A2               	bcf	162,0,b	;volatile
 36500                           
 36501                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 36502  01C5A4  0101               	movlb	1	; () banked
 36503  01C5A6  97CD               	bcf	_spi_link& (0+255),3,b	;volatile
 36504                           
 36505                           ; BSR set to: 1
 36506  01C5A8  0011               	retfie		f
 36507  01C5AA                     __end_of_DMA1_DMASCNT_ISR:
 36508                           	opt callstack 0
 36509                           
 36510 ;; *************** function _DMA1_DMADCNT_ISR *****************
 36511 ;; Defined at:
 36512 ;;		line 133 in file "mcc_generated_files/dma1.c"
 36513 ;; Parameters:    Size  Location     Type
 36514 ;;		None
 36515 ;; Auto vars:     Size  Location     Type
 36516 ;;		None
 36517 ;; Return value:  Size  Location     Type
 36518 ;;                  1    wreg      void 
 36519 ;; Registers used:
 36520 ;;		None
 36521 ;; Tracked objects:
 36522 ;;		On entry : 0/0
 36523 ;;		On exit  : 3F/39
 36524 ;;		Unchanged: 0/0
 36525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36530 ;;Total ram usage:        0 bytes
 36531 ;; Hardware stack levels used:    1
 36532 ;; This function calls:
 36533 ;;		Nothing
 36534 ;; This function is called by:
 36535 ;;		Interrupt level 2
 36536 ;; This function uses a non-reentrant model
 36537 ;;
 36538                           
 36539                           	psect	text181
 36540  01C5C0                     __ptext181:
 36541                           	opt callstack 0
 36542  01C5C0                     _DMA1_DMADCNT_ISR:
 36543                           	opt callstack 4
 36544                           
 36545                           ; BSR set to: 1
 36546                           ;incstack = 0
 36547  01C5C0  EE14  F15E         	lfsr	1,___inthi_sp
 36548                           
 36549                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 36550  01C5C4  0139               	movlb	57	; () banked
 36551  01C5C6  93A2               	bcf	162,1,b	;volatile
 36552                           
 36553                           ; BSR set to: 57
 36554  01C5C8  0011               	retfie		f
 36555  01C5CA                     __end_of_DMA1_DMADCNT_ISR:
 36556                           	opt callstack 0
 36557                           
 36558 ;; *************** function _DMA1_DMAA_ISR *****************
 36559 ;; Defined at:
 36560 ;;		line 143 in file "mcc_generated_files/dma1.c"
 36561 ;; Parameters:    Size  Location     Type
 36562 ;;		None
 36563 ;; Auto vars:     Size  Location     Type
 36564 ;;		None
 36565 ;; Return value:  Size  Location     Type
 36566 ;;                  1    wreg      void 
 36567 ;; Registers used:
 36568 ;;		None
 36569 ;; Tracked objects:
 36570 ;;		On entry : 0/0
 36571 ;;		On exit  : 3F/39
 36572 ;;		Unchanged: 0/0
 36573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36578 ;;Total ram usage:        0 bytes
 36579 ;; Hardware stack levels used:    1
 36580 ;; This function calls:
 36581 ;;		Nothing
 36582 ;; This function is called by:
 36583 ;;		Interrupt level 2
 36584 ;; This function uses a non-reentrant model
 36585 ;;
 36586                           
 36587                           	psect	text182
 36588  01C5CC                     __ptext182:
 36589                           	opt callstack 0
 36590  01C5CC                     _DMA1_DMAA_ISR:
 36591                           	opt callstack 4
 36592                           
 36593                           ; BSR set to: 57
 36594                           ;incstack = 0
 36595  01C5CC  EE14  F15E         	lfsr	1,___inthi_sp
 36596                           
 36597                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 36598  01C5D0  0139               	movlb	57	; () banked
 36599  01C5D2  97A2               	bcf	162,3,b	;volatile
 36600                           
 36601                           ; BSR set to: 57
 36602  01C5D4  0011               	retfie		f
 36603  01C5D6                     __end_of_DMA1_DMAA_ISR:
 36604                           	opt callstack 0
 36605                           
 36606 ;; *************** function _DMA1_DMAOR_ISR *****************
 36607 ;; Defined at:
 36608 ;;		line 154 in file "mcc_generated_files/dma1.c"
 36609 ;; Parameters:    Size  Location     Type
 36610 ;;		None
 36611 ;; Auto vars:     Size  Location     Type
 36612 ;;		None
 36613 ;; Return value:  Size  Location     Type
 36614 ;;                  1    wreg      void 
 36615 ;; Registers used:
 36616 ;;		None
 36617 ;; Tracked objects:
 36618 ;;		On entry : 0/0
 36619 ;;		On exit  : 3F/39
 36620 ;;		Unchanged: 0/0
 36621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36626 ;;Total ram usage:        0 bytes
 36627 ;; Hardware stack levels used:    1
 36628 ;; This function calls:
 36629 ;;		Nothing
 36630 ;; This function is called by:
 36631 ;;		Interrupt level 2
 36632 ;; This function uses a non-reentrant model
 36633 ;;
 36634                           
 36635                           	psect	text183
 36636  01C5D8                     __ptext183:
 36637                           	opt callstack 0
 36638  01C5D8                     _DMA1_DMAOR_ISR:
 36639                           	opt callstack 4
 36640                           
 36641                           ; BSR set to: 57
 36642                           ;incstack = 0
 36643  01C5D8  EE14  F15E         	lfsr	1,___inthi_sp
 36644                           
 36645                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 36646  01C5DC  0139               	movlb	57	; () banked
 36647  01C5DE  95A2               	bcf	162,2,b	;volatile
 36648                           
 36649                           ; BSR set to: 57
 36650  01C5E0  0011               	retfie		f
 36651  01C5E2                     __end_of_DMA1_DMAOR_ISR:
 36652                           	opt callstack 0
 36653                           
 36654                           ;
 36655                           ; Interrupt Vector Table @ 0x8
 36656                           ;
 36657                           
 36658                           	psect	ivt0x8
 36659  000008                     __pivt0x8:
 36660                           	opt callstack 0
 36661  000008                     ivt0x8_base:
 36662                           	opt callstack 0
 36663                           
 36664                           ; Vector 0 : SWINT
 36665  000008  7189               	dw	_Default_ISR shr (0+2)
 36666                           
 36667                           ; Vector 1 : HLVD
 36668  00000A  7189               	dw	_Default_ISR shr (0+2)
 36669                           
 36670                           ; Vector 2 : OSF
 36671  00000C  7189               	dw	_Default_ISR shr (0+2)
 36672                           
 36673                           ; Vector 3 : CSW
 36674  00000E  7189               	dw	_Default_ISR shr (0+2)
 36675                           
 36676                           ; Vector 4 : NVM
 36677  000010  7189               	dw	_Default_ISR shr (0+2)
 36678                           
 36679                           ; Vector 5 : SCAN
 36680  000012  7189               	dw	_Default_ISR shr (0+2)
 36681                           
 36682                           ; Vector 6 : CRC
 36683  000014  7189               	dw	_Default_ISR shr (0+2)
 36684                           
 36685                           ; Vector 7 : IOC
 36686  000016  7189               	dw	_Default_ISR shr (0+2)
 36687                           
 36688                           ; Vector 8 : INT0
 36689  000018  7163               	dw	_INT0_ISR shr (0+2)
 36690                           
 36691                           ; Vector 9 : ZCD
 36692  00001A  7189               	dw	_Default_ISR shr (0+2)
 36693                           
 36694                           ; Vector 10 : AD
 36695  00001C  6FD9               	dw	_ADCC_ISR shr (0+2)
 36696                           
 36697                           ; Vector 11 : ADT
 36698  00001E  6CE0               	dw	_ADCC_ThresholdISR shr (0+2)
 36699                           
 36700                           ; Vector 12 : CMP1
 36701  000020  7189               	dw	_Default_ISR shr (0+2)
 36702                           
 36703                           ; Vector 13 : SMT1
 36704  000022  7189               	dw	_Default_ISR shr (0+2)
 36705                           
 36706                           ; Vector 14 : SMT1PRA
 36707  000024  7189               	dw	_Default_ISR shr (0+2)
 36708                           
 36709                           ; Vector 15 : SMT1PRW
 36710  000026  7189               	dw	_Default_ISR shr (0+2)
 36711                           
 36712                           ; Vector 16 : DMA1SCNT
 36713  000028  7167               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 36714                           
 36715                           ; Vector 17 : DMA1DCNT
 36716  00002A  7170               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 36717                           
 36718                           ; Vector 18 : DMA1OR
 36719  00002C  7176               	dw	_DMA1_DMAOR_ISR shr (0+2)
 36720                           
 36721                           ; Vector 19 : DMA1A
 36722  00002E  7173               	dw	_DMA1_DMAA_ISR shr (0+2)
 36723                           
 36724                           ; Vector 20 : SPI1RX
 36725  000030  7189               	dw	_Default_ISR shr (0+2)
 36726                           
 36727                           ; Vector 21 : SPI1TX
 36728  000032  7189               	dw	_Default_ISR shr (0+2)
 36729                           
 36730                           ; Vector 22 : SPI1
 36731  000034  7189               	dw	_Default_ISR shr (0+2)
 36732                           
 36733                           ; Vector 23 : I2C1RX
 36734  000036  7189               	dw	_Default_ISR shr (0+2)
 36735                           
 36736                           ; Vector 24 : I2C1TX
 36737  000038  7189               	dw	_Default_ISR shr (0+2)
 36738                           
 36739                           ; Vector 25 : I2C1
 36740  00003A  7189               	dw	_Default_ISR shr (0+2)
 36741                           
 36742                           ; Vector 26 : I2C1E
 36743  00003C  7189               	dw	_Default_ISR shr (0+2)
 36744                           
 36745                           ; Vector 27 : U1RX
 36746  00003E  7072               	dw	_UART1_rx_vect_isr shr (0+2)
 36747                           
 36748                           ; Vector 28 : U1TX
 36749  000040  7189               	dw	_Default_ISR shr (0+2)
 36750                           
 36751                           ; Vector 29 : U1E
 36752  000042  7189               	dw	_Default_ISR shr (0+2)
 36753                           
 36754                           ; Vector 30 : U1
 36755  000044  7189               	dw	_Default_ISR shr (0+2)
 36756                           
 36757                           ; Vector 31 : TMR0
 36758  000046  7189               	dw	_Default_ISR shr (0+2)
 36759                           
 36760                           ; Vector 32 : TMR1
 36761  000048  7189               	dw	_Default_ISR shr (0+2)
 36762                           
 36763                           ; Vector 33 : TMR1G
 36764  00004A  7189               	dw	_Default_ISR shr (0+2)
 36765                           
 36766                           ; Vector 34 : TMR2
 36767  00004C  7189               	dw	_Default_ISR shr (0+2)
 36768                           
 36769                           ; Vector 35 : CCP1
 36770  00004E  7189               	dw	_Default_ISR shr (0+2)
 36771                           
 36772                           ; Vector 36 : Undefined
 36773  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 36774                           
 36775                           ; Vector 37 : NCO1
 36776  000052  7189               	dw	_Default_ISR shr (0+2)
 36777                           
 36778                           ; Vector 38 : CWG1
 36779  000054  7189               	dw	_Default_ISR shr (0+2)
 36780                           
 36781                           ; Vector 39 : CLC1
 36782  000056  7189               	dw	_Default_ISR shr (0+2)
 36783                           
 36784                           ; Vector 40 : INT1
 36785  000058  6F09               	dw	_INT1_ISR shr (0+2)
 36786                           
 36787                           ; Vector 41 : CMP2
 36788  00005A  7189               	dw	_Default_ISR shr (0+2)
 36789                           
 36790                           ; Vector 42 : DMA2SCNT
 36791  00005C  7189               	dw	_Default_ISR shr (0+2)
 36792                           
 36793                           ; Vector 43 : DMA2DCNT
 36794  00005E  7189               	dw	_Default_ISR shr (0+2)
 36795                           
 36796                           ; Vector 44 : DMA2OR
 36797  000060  7189               	dw	_Default_ISR shr (0+2)
 36798                           
 36799                           ; Vector 45 : DMA2A
 36800  000062  7189               	dw	_Default_ISR shr (0+2)
 36801                           
 36802                           ; Vector 46 : I2C2RX
 36803  000064  7189               	dw	_Default_ISR shr (0+2)
 36804                           
 36805                           ; Vector 47 : I2C2TX
 36806  000066  7189               	dw	_Default_ISR shr (0+2)
 36807                           
 36808                           ; Vector 48 : I2C2
 36809  000068  7189               	dw	_Default_ISR shr (0+2)
 36810                           
 36811                           ; Vector 49 : I2C2E
 36812  00006A  7189               	dw	_Default_ISR shr (0+2)
 36813                           
 36814                           ; Vector 50 : U2RX
 36815  00006C  7086               	dw	_UART2_rx_vect_isr shr (0+2)
 36816                           
 36817                           ; Vector 51 : U2TX
 36818  00006E  707C               	dw	_UART2_tx_vect_isr shr (0+2)
 36819                           
 36820                           ; Vector 52 : U2E
 36821  000070  7189               	dw	_Default_ISR shr (0+2)
 36822                           
 36823                           ; Vector 53 : U2
 36824  000072  7189               	dw	_Default_ISR shr (0+2)
 36825                           
 36826                           ; Vector 54 : TMR3
 36827  000074  64EC               	dw	_TMR3_ISR shr (0+2)
 36828                           
 36829                           ; Vector 55 : TMR3G
 36830  000076  7189               	dw	_Default_ISR shr (0+2)
 36831                           
 36832                           ; Vector 56 : TMR4
 36833  000078  7189               	dw	_Default_ISR shr (0+2)
 36834                           
 36835                           ; Vector 57 : CCP2
 36836  00007A  7189               	dw	_Default_ISR shr (0+2)
 36837                           
 36838                           ; Vector 58 : Undefined
 36839  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 36840                           
 36841                           ; Vector 59 : CWG2
 36842  00007E  7189               	dw	_Default_ISR shr (0+2)
 36843                           
 36844                           ; Vector 60 : CLC2
 36845  000080  7189               	dw	_Default_ISR shr (0+2)
 36846                           
 36847                           ; Vector 61 : INT2
 36848  000082  7189               	dw	_Default_ISR shr (0+2)
 36849                           
 36850                           ; Vector 62 : Undefined
 36851  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 36852                           
 36853                           ; Vector 63 : Undefined
 36854  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 36855                           
 36856                           ; Vector 64 : Undefined
 36857  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 36858                           
 36859                           ; Vector 65 : Undefined
 36860  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 36861                           
 36862                           ; Vector 66 : Undefined
 36863  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 36864                           
 36865                           ; Vector 67 : Undefined
 36866  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 36867                           
 36868                           ; Vector 68 : Undefined
 36869  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 36870                           
 36871                           ; Vector 69 : Undefined
 36872  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 36873                           
 36874                           ; Vector 70 : TMR5
 36875  000094  689A               	dw	_TMR5_ISR shr (0+2)
 36876                           
 36877                           ; Vector 71 : TMR5G
 36878  000096  7189               	dw	_Default_ISR shr (0+2)
 36879                           
 36880                           ; Vector 72 : TMR6
 36881  000098  711C               	dw	_TMR6_ISR shr (0+2)
 36882                           
 36883                           ; Vector 73 : CCP3
 36884  00009A  7189               	dw	_Default_ISR shr (0+2)
 36885                           
 36886                           ; Vector 74 : CWG3
 36887  00009C  7189               	dw	_Default_ISR shr (0+2)
 36888                           
 36889                           ; Vector 75 : CLC3
 36890  00009E  7189               	dw	_Default_ISR shr (0+2)
 36891                           
 36892                           ; Vector 76 : Undefined
 36893  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 36894                           
 36895                           ; Vector 77 : Undefined
 36896  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 36897                           
 36898                           ; Vector 78 : Undefined
 36899  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 36900                           
 36901                           ; Vector 79 : Undefined
 36902  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 36903                           
 36904                           ; Vector 80 : CCP4
 36905  0000A8  7189               	dw	_Default_ISR shr (0+2)
 36906                           
 36907                           ; Vector 81 : CLC4
 36908  0000AA  7189               	dw	_Default_ISR shr (0+2)
 36909  0000AC                     ivt0x8_undefint:
 36910                           	opt callstack 0
 36911  0000AC  00FF               	reset	
 36912                           
 36913                           	psect	text184
 36914  000000                     __ptext184:
 36915                           	opt callstack 0
 36916                           
 36917                           	psect	rparam
 36918  0000                     
 36919                           	psect	temp
 36920  000001                     btemp:
 36921                           	opt callstack 0
 36922  000001                     	ds	32
 36923  0000                     wtemp0	set	btemp
 36924  0000                     wtemp1	set	btemp+2
 36925  0000                     wtemp2	set	btemp+4
 36926  0000                     wtemp3	set	btemp+6
 36927  0000                     wtemp4	set	btemp+8
 36928  0000                     wtemp5	set	btemp+10
 36929  0000                     wtemp8	set	btemp+1
 36930  0000                     ttemp0	set	btemp
 36931  0000                     ttemp1	set	btemp+3
 36932  0000                     ttemp2	set	btemp+6
 36933  0000                     ttemp3	set	btemp+9
 36934  0000                     ttemp5	set	btemp+1
 36935  0000                     ttemp6	set	btemp+4
 36936  0000                     ttemp7	set	btemp+8
 36937  0000                     ltemp0	set	btemp
 36938  0000                     ltemp1	set	btemp+4
 36939  0000                     ltemp2	set	btemp+8
 36940  0000                     lltemp0	set	btemp
 36941  0000                     lltemp1	set	btemp+8
 36942  0000                     lltemp2	set	btemp+16
 36943  0000                     lltemp3	set	btemp+24
 36944                           tosu	equ	0x3FFF
 36945                           tosh	equ	0x3FFE
 36946                           tosl	equ	0x3FFD
 36947                           stkptr	equ	0x3FFC
 36948                           pclatu	equ	0x3FFB
 36949                           pclath	equ	0x3FFA
 36950                           pcl	equ	0x3FF9
 36951                           tblptru	equ	0x3FF8
 36952                           tblptrh	equ	0x3FF7
 36953                           tblptrl	equ	0x3FF6
 36954                           tablat	equ	0x3FF5
 36955                           prodh	equ	0x3FF4
 36956                           prodl	equ	0x3FF3
 36957                           indf0	equ	0x3FEF
 36958                           postinc0	equ	0x3FEE
 36959                           postdec0	equ	0x3FED
 36960                           preinc0	equ	0x3FEC
 36961                           plusw0	equ	0x3FEB
 36962                           fsr0h	equ	0x3FEA
 36963                           fsr0l	equ	0x3FE9
 36964                           wreg	equ	0x3FE8
 36965                           indf1	equ	0x3FE7
 36966                           postinc1	equ	0x3FE6
 36967                           postdec1	equ	0x3FE5
 36968                           preinc1	equ	0x3FE4
 36969                           plusw1	equ	0x3FE3
 36970                           fsr1h	equ	0x3FE2
 36971                           fsr1l	equ	0x3FE1
 36972                           bsr	equ	0x3FE0
 36973                           indf2	equ	0x3FDF
 36974                           postinc2	equ	0x3FDE
 36975                           postdec2	equ	0x3FDD
 36976                           preinc2	equ	0x3FDC
 36977                           plusw2	equ	0x3FDB
 36978                           fsr2h	equ	0x3FDA
 36979                           fsr2l	equ	0x3FD9
 36980                           status	equ	0x3FD8


Data Sizes:
    Strings     1076
    Constant    492
    Data        1070
    BSS         1305
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     251
    BANK2           256      0     231
    BANK3           256      0     198
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_101(CODE[1]), STR_63(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_64(CODE[127]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_64(CODE[127]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_64(CODE[127]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), 
		 -> STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6392_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_64(CODE[127]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_64(CODE[127]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_64(CODE[127]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_46(CODE[9]), 
		 -> STR_45(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    S4855tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_46(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_45(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  481379
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0   10397
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     647
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     175
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1   10561
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   12957
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      62
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    9380
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    7483
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    7393
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    7393
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    7393
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fladd
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     46C      58        0.0%
DATA                 0      0     979       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb  5 01:29:46 2020

                     _SPI1_Exchange8bit C3BE                __end_of_set_display_info C436  
                                     _C 06FF                                       _D 082A  
                                     _H 01C6                                       _P 01EF  
                                     _R 00AF                                       _S 0254  
                                     _T FAAF                                       _V 0107  
      __end_of_TMR5_SetInterruptHandler C0FE            __end_of_start_switch_handler C39E  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FBB7                  __end_of_FVR_Initialize C60A  
                        _check_day_time 8A9E                             __CFG_LVP$ON 000000  
                                   l169 C4F6                                     l807 C3CC  
                                   l673 BFB6                                     _GIE 01FE97  
                                   _abs B9D2                                     _pad 9D58  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize C4A2  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack C2D0  
                     _update_adc_result BC62                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00BA                           _INT1_CallBack C264  
                          __CFG_ZCD$OFF 000000                                    l1002 BBDE  
                                  l2123 3DEE                                    l2044 A5CA  
                                  l1332 12A2                                    l2053 88DC  
                                  l1190 BC1E                                    l3030 4C6E  
                                  l1350 1902                                    l2119 3AB0  
                                  l2224 9DB4                                    l3201 7C40  
                                  l1601 AEA0                                    l3018 4DDE  
                       _timer3ReloadVal 009E                                    l2244 5954  
                                  l2324 0B1A                                    l1348 18FE  
                                  l2309 066A                                    l2165 7494  
                                  l1374 23A8                                    l1358 19A2  
                                  l3063 5358                                    l2280 123A  
                                  l1616 BD5A                                    l1368 1BA6  
                                  l1369 1DCE                                    l3170 BA12  
                                  l3162 8DCA                                    l2362 7582  
                                  l3139 86FC                                    l1732 C432  
                                  l1469 B63C                                    l3270 9B1E  
                                  l2383 68AC                                    l1816 5870  
                                  l2448 338A                                    l3099 4622  
                                  l1675 BCB8                                    l2740 A758  
                                  l1692 9F78                                    l1684 83A2  
                                  l1597 AB86                                    l1685 84FE  
                                  l1918 8A94                                    l2398 6186  
                  _ADCC_StartConversion C510                                    l2751 93A4  
                                  l2744 92D0                                    l3552 B0C0  
                                  l1856 B1BE                                    l1872 A978  
                                  l3537 82E6                                    l3565 B03C  
                                  l1965 A09A                                    l1982 8C2C  
                                  l1978 8C34                                    l2778 9242  
                                  l8110 4DBE                                    l8102 4D7E  
                                  l8022 4AEE                                    l8104 4D8E  
                                  l8040 4C1E                                    l8016 4AD2  
                                  l8200 8D68                                    l8018 4AE4  
                                  l8026 4B20                                    l8210 8DC2  
                                  l8300 77B8                                    l8204 8D6C  
                                  l8062 4CAE                                    l8038 4BF8  
                                  l8072 4CD6                                    l8056 4C90  
                                  l8048 4C52                                    l8400 4F1C  
                                  l8312 7852                                    l8058 4CA2  
                                  l8410 4F72                                    l8306 780C  
                                  l8242 661A                                    l8076 4CDC  
                                  l8500 5298                                    l8412 4FA2  
                                  l8324 7924                                    l8228 B0B0  
                                  l8406 4F5C                                    l8262 67D0  
                                  l8088 4D3A                                    l8520 533C  
                                  l8512 5304                                    l8432 5034  
                                  l8424 501A                                    l8360 8022  
                                  l8352 7F76                                    l8344 7EEE  
                                  l8256 6738                                    l8098 4D66  
                                  l8506 52D4                                    l8450 50FA  
                                  l8442 50C4                                    l8418 4FE0  
                                  l8186 BA02                                    l8266 683E  
                                  l8258 6788                                    l8452 510C  
                                  l8460 5164                                    l8380 4E3E  
                                  l9500 7A12                                    l8284 B02C  
                                  l8630 4432                                    l8542 3E98  
                                  l7902 4682                                    l8518 532C  
                                  l8390 4E94                                    l8710 956C  
                                  l8624 4416                                    l8560 3F66  
                                  l8544 3E9E                                    l8536 3E58  
                                  l7920 4740                                    l7912 46D8  
                                  l8800 931E                                    l8472 51AE  
                                  l8392 4EC4                                    l9520 7B2C  
                                  l8704 954C                                    l8634 4458  
                                  l8562 3F6C                                    l8554 3F26  
                                  l8546 3ECE                                    l7914 4708  
                                  l8490 5224                                    l8466 5192  
                                  l8458 5160                                    l8386 4E7E  
                                  l9514 7AB2                                    l8644 44A2  
                                  l8572 3FBE                                    l8564 3F9C  
                                  l7932 47B2                                    l7908 46C2  
                                  l8812 93A2                                    l8804 936C  
                                  l8476 51D4                                    l9524 7B94  
                                  l9516 7ACA                                    l9508 7A86  
                                  l8732 9646                                    l8724 9612  
                                  l8820 B88A                                    l8662 4562  
                                  l7926 4772                                    l8486 521E  
                                  l9534 7C30                                    l9518 7AEE  
                                  l8830 912C                                    l9550 8158  
                                  l8902 9746                                    l8648 44A8  
                                  l7944 481A                                    l7936 47C8  
                                  l8752 9C8A                                    l8744 9C60  
                                  l9552 81C4                                    l8658 451C  
                                  l7938 47F8                                    l7874 AD02  
                                  l8770 9D3E                                    l8762 9D0A  
                                  l8676 45D0                                    l8668 458C  
                                  l9820 85DC                                    l9900 57A2  
                                  l7876 AD24                                    l8748 9C72  
                                  l8678 45EA                                    l7990 49FC  
                                  l7974 4958                                    l9830 8646  
                                  l9822 85FA                                    l8918 B728  
                                  l8782 A722                                    l8854 91DA  
                                  l8846 91AE                                    l8870 8FA8  
                                  l7984 49CA                                    l9840 867A  
                                  l9832 865C                                    l9816 85B8  
                                  l9808 854C                                    l8856 91F0  
                                  l8848 91CA                                    l7994 4A06  
                                  l8794 928E                                    l9850 86DC  
                                  l9818 85C6                                    l9906 583E  
                                  l9914 5850                                    l9498 79F0  
                                  l8698 9536                                    l8786 A756  
                                  l8778 A6E0                                    l8882 907A  
                                  l7988 49EA                                    l9828 8628  
                                  l9860 5364                                    l9932 C02E  
                                  l7998 4A36                                    l8894 969A  
                                  STR_1 FF1E                                    l9880 55F4  
                                  STR_2 FF09                                    STR_3 FFD2  
                                  l9866 5394                                    STR_4 FECA  
                                  STR_5 FEA0                                    l9892 56C2  
                                  l9876 54E6                                    STR_6 FEA0  
                                  STR_7 FEA0                                    STR_8 FEB5  
                                  STR_9 FC9B                                    l9888 5626  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    u6120 8DBA  
                                  u6200 65FE                                    u7010 44F6  
                                  u6130 8DBC                                    _T6PR 003F93  
                                  u6115 8D9C                                    u7020 4530  
                                  u6060 B9E6                                    u7100 9632  
                                  u6300 BA98                                    _PMD0 0039C0  
                                  _PMD1 0039C1                                    u7030 4576  
                                  u6070 8CEC                                    u5510 BECC  
                                  u6310 AFEA                                    _PMD2 0039C2  
                                  u7015 44E6                                    _PMD3 0039C3  
                                  u6240 66DE                                    u5520 BECE  
                                  u6160 B06E                                    u6320 AFEC  
                                  _PMD4 0039C4                                    u6401 7812  
                                  u6225 6638                                    _PMD5 0039C5  
                                  u6410 784C                                    u7210 A752  
                                  u6226 663E                                    u6170 B070  
                                  _PMD6 0039C6                                    u6075 8CE2  
                                  u6227 664C                                    _PMD7 0039C7  
                                  u5620 497E                                    u6340 BEFC  
                                  u6420 787E                                    u7300 915A  
                                  u6260 67B6                                    u6245 66D4  
                                  u5630 499E                                    u6350 BEFE  
                                  u6510 7F3E                                    u7150 9CB6  
                                  u6190 65B2                                    u5631 4998  
                                  u5480 AD52                                    u6440 795C  
                                  u6520 7F70                                    u7080 9598  
                                  u7400 8FD4                                    u7305 9150  
                                  u6265 67AC                                    u6370 77B2  
                                  u6530 7FA2                                    u7170 9D2A  
                                  u6290 BA96                                    u6195 65A8  
                                  u5820 4CB4                                    u5740 4B16  
                                  u7500 B724                                    u6460 79AE  
                                  u7420 90B2                                    u5910 4D4A  
                                  u5670 4A2E                                    u6710 518C  
                                  u6390 7808                                    u6550 805A  
                                  u7270 B886                                    u7350 91F8  
                                  u5487 AD44                                    u5840 4CCE  
                                  u5680 4A4E                                    u5648 49A0  
                                  u6800 52AC                                    u9120 8670  
                                  u7280 910C                                    u7440 9694  
                                  u5745 4B06                                    u6810 52E8  
                                  u6570 80AC                                    u6490 7EE8  
                                  u7370 9222                                    u7290 9120  
                                  u7450 96C6                                    u5675 4A1E  
                                  u6900 3FAC                                    u5780 4C40  
                                  u9204 53D0                                    u9205 53CA  
                                  u7285 9102                                    u7381 8F68  
                                  u6750 5216                                    u7390 8FA2  
                                  u7470 977E                                    u5950 BE9C  
                                  u5880 4D2A                                    u9224 560E  
                                  u8600 7A82                                    u5960 BE9E  
                                  u9225 5608                                    u7490 B704  
                                  u6915 4140                                    u9500 B3F8  
                                  u9244 56DC                                    u9164 537E  
                                  u8620 7BDA                                    u6925 4208  
                                  u5885 4D1A                                    u9245 56D6  
                                  u9165 5378                                    u6790 5272  
                                  u9270 5706                                    u8630 7BDC  
                                  u8710 828C                                    u6935 43D0  
                                  u9264 56FE                                    u9184 53AE  
                                  u8720 82BA                                    u9265 56F8  
                                  u9185 53A8                                    u6970 449A  
                                  u8730 C31E                                    u6795 5262  
                                  u8715 8286                                    u9620 88F8  
                                  u9525 B42C                                    u9445 BAD2  
                                  u8717 8278                                    u9526 B42E  
                                  u9518 B3FA                                    u8670 81F2  
                                  u8727 82AC                                    _PLLR 01CEE0  
                                  u8677 81E4                                    u9575 C53C  
                                  u9760 C346                                    u9576 C53E  
                                  u9585 C52C                                    u9586 C52E  
                                  u9766 C348                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR BF90  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0297  
                                  _cp_h FBC7                                    _cp_l FBC3  
                                  _atoi 79D6                                    _ctoa AF3A  
                                  _main 1244                                    _dtoa 5876  
                                  _nanf B516                                    _seed 01F3  
                                  _prec 003C                                    _nout 009A  
                                  _spin FB3F                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 7498                                    btemp 0001  
                                  _utoa 6868                                    _xtoa 6142  
                __end_of_check_adc_scan C5F2                           ___fpclassifyf 8C3E  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 00A2  
             __end_of_SPI1_Exchange8bit C3DC               __size_of_clear_hid_pflags 0046  
                       _TMR3_Initialize B944             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                        _SPI1STATUSbits 003D17                       _UART1_rx_vect_isr C1C8  
                          ___param_bank 000000                  __end_of_check_day_time 8C3E  
                    ?_UART1_rx_vect_isr 0021                        __end_of_INT0_ISR C59A  
                      __end_of_INT1_ISR BC62          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma AB8E           __end_of_OSCILLATOR_Initialize C4FC  
                                 l10020 8B68                                   l10032 8BDA  
                                 l10050 BD64                                   l11012 BC06  
                                 l10108 BF48                                   l10142 B764  
                                 l11112 8F34                                   l11120 A0BA  
                                 l12110 AD8E                                   l11230 A822  
                                 l11150 71EC                                   l11126 A16C  
                                 l12200 AF58                                   l13000 AAA6  
                                 l11152 71F2                                   l11216 745A  
                                 l12114 ADCC                                   l12202 AF84  
                                 l12130 6F6C                                   l11234 A860  
                                 l11162 722E                                   l11218 7484  
                                 l10532 B790                                   l10604 8946  
                                 l11148 71DC                                   l12150 7142  
                                 l12142 7094                                   l13022 AB92  
                                 l11174 7280                                   l11158 7222  
                                 l10536 B7C2                                   l13120 34D2  
                                 l10608 895A                                   l12320 022C  
                                 l12136 702A                                   l13024 AB9A  
                                 l11168 7258                                   l10712 B17C  
                                 l11434 B10E                                   l12162 9D84  
                                 l12234 598E                                   l12226 5944  
                                 l12410 06B8                                   l12306 0146  
                                 l13026 ABA4                                   l13034 ABBA  
                                 l11194 7300                                   l11186 72DA  
                                 l11178 728C                                   l11428 B0FE  
                                 l13140 3700                                   l13124 353E  
                                 l13116 347E                                   l12172 9DFA  
                                 l12420 077A                                   l12316 01EA  
                                 l12324 0258                                   l13028 ABB2  
                                 l13036 ABE6                                   l10724 B194  
                                 l10732 9B8A                                   l13150 3952  
                                 l11278 6134                                   l10646 BCCE  
                                 l12166 9DAC                                   l12238 59AC  
                                 l12182 A472                                   l12430 0926  
                                 l12414 06F0                                   l12350 0396  
                                 l12334 02FC                                   l12342 032A  
                                 l12318 0216                                   l13160 3AC0  
                                 l13136 36AC                                   l13128 35AA  
                                 l12176 9E44                                   l12168 9DBE  
                                 l12272 5CAC                                   l12248 5BBE  
                                 l12504 0EA2                                   l12360 04D2  
                                 l10736 9BEC                                   l13146 38D8  
                                 l10762 97B8                                   l12098 9A34  
                                 l12530 0FD6                                   l12354 0406  
                                 l13058 9E90                                   l13164 3AE2  
                                 l13156 3A18                                   l10764 97C8  
                                 l10596 891A                                   l12268 5C70  
                                 l12532 0FF0                                   l12516 0F3A  
                                 l12452 0B12                                   l12444 0A48  
                                 l12372 0554                                   l12356 0470  
                                 l12612 7624                                   l12604 75B8  
                                 l12700 624C                                   l13324 8372  
                                 PRLOCK 0039EF                                   l10790 98BC  
                                 l10782 9842                                   l10766 97D6  
                                 l10774 97DE                                   l12542 1092  
                                 l12454 0B34                                   l12286 00AC  
                                 l12622 76DA                                   l13270 87CE  
                                 l13502 17B0                                   l13176 3DE6  
                                 l10776 980A                                   l12552 10E2  
                                 l12480 0CBA                                   l12392 05F6  
                                 l12384 0594                                   l12376 057C  
                                 l12608 75F4                                   l12640 689C  
                                 l12800 264C                                   l10688 BC82  
                                 l13280 88A6                                   l13512 1906  
                                 l12394 0602                                   l12378 058E  
                                 l12298 00F0                                   l12626 7716  
                                 l12618 76AE                                   l12802 2686  
                                 l13338 849A                                   l13098 A564  
                                 l13258 871A                                   l13610 22D2  
                                 l13514 1934                                   l10956 C378  
                                 l12468 0C32                                   l12740 64B2  
                                 l12716 6342                                   l12724 63C8  
                                 l12820 2800                                   l12804 269C  
                                 l10892 A774                                   l13620 2310  
                                 l13444 146E                                   l12830 2898  
                                 l13534 198E                                   l13526 1968  
                                 l10968 BFB2                                   l12568 119A  
                                 l12488 0D24                                   l12496 0D90  
                                 l12648 68F8                                   l12680 6176  
                                 l10896 A7F0                                   l13544 19B2  
                                 l13392 12AA                                   l10994 BBC6  
                                 l13298 B2A2                                   l12658 6AEE  
                                 l12930 3180                                   l12906 2F4E  
                                 l12842 29D8                                   l13634 2358  
                                 l13626 2322                                   l13490 16D6  
                                 l13394 12BC                                   l13386 1284  
                                 l12588 7504                                   l12692 61EC  
                                 l12916 3004                                   l12780 2504  
                                 l13628 233A                                   l13572 206A  
                                 l13556 1AB2                                   l13388 128C  
                                 l12686 61B0                                   l12950 3312  
                                 l12862 2BEA                                   l12854 2B32  
                                 l12838 2984                                   l12782 251A  
                                 l13638 237E                                   l13582 21FE  
                                 l12944 32B8                                   l12960 3336  
                                 l13648 23D4                                   l13568 200A  
                                 l13584 222A                                   l12954 3316  
                                 l12866 2C1E                                   l12778 24CA  
                                 l12886 2D7E                                   l13598 2280  
                                 l12896 2E2C                                   l12978 AC8E  
                                 l12998 AA64                         __end_of___aodiv 79D6  
                          _Volts_to_SOC A762                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 4DE8  
                                 _ADCLK 003EFF                         __end_of___aomod 80D0  
                                 _ADPCH 003EF1                         __end_of___fldiv 5362  
                                 _ADREF 003EFD                         __end_of___awdiv 9660  
                       __end_of___flneg B8B4                                   STR_10 FD56  
                                 STR_11 FE32                                   STR_12 FEDF  
                                 STR_21 FF83                                   STR_13 FEF4  
                                 STR_14 FF48                                   STR_30 FE5E  
                                 STR_22 FE1C                                   STR_15 FF33  
                                 STR_23 FE06                                   STR_31 FD6C  
                                 STR_40 FE8A                                   STR_24 FDF0  
                                 STR_32 FD82                                   STR_16 FD40  
                                 STR_41 FE8A                                   STR_25 FDDA  
                                 STR_33 FD98                                   STR_17 FC67  
                         __CFG_WDTE$OFF 000000                                   STR_50 FFBF  
                                 STR_42 FE8A                                   STR_26 FDC4  
                                 STR_34 FCE4                                   STR_18 FC81  
                                 STR_43 FFFC                                   STR_51 FFA4  
                                 STR_19 FF94                                   STR_27 FDAE  
                                 STR_35 FD29                                   STR_52 FFA4  
                                 STR_44 FFF9                                   STR_28 FE74  
                                 STR_36 FC4A                         __end_of___awmod 9D58  
                                 STR_53 FFA4                                   STR_45 FFB3  
                                 STR_29 FE48                                   STR_37 FCCD  
                                 STR_70 FFE3                                   STR_46 FFC9  
                                 STR_38 FCFB                                   STR_54 FCB5  
                                 STR_63 FC49                                   STR_47 FF5D  
                                 STR_39 FD12                                   STR_48 FF5D  
                                 STR_56 FF70                                   STR_64 FBCB  
                                 _ADRPT 003EEC                                   STR_73 FFEA  
                                 STR_65 FFD7                                   STR_49 FFBF  
                                 STR_82 FFED                                   STR_66 FFDF  
                                 STR_75 FFEA                                   STR_84 FFED  
                                 STR_92 FFF6                                   STR_77 FFF0  
                                 STR_69 FFDB                                   STR_94 FFF6  
                                 STR_79 FFF0                                   STR_87 FFF3  
                                 STR_96 FFE7                         __end_of___flmul 462C  
                                 STR_89 FFF3                                   STR_98 FFE7  
                       __end_of___flsub BA5E                         __end_of___fltol 924C  
                                 u11000 A4EC                                   u11100 592A  
                                 u11007 A4DE                                   u11120 597A  
                                 u12000 62FA                                   u11130 5BD2  
                                 u11050 58A6                                   u11060 58A8  
                                 u11300 02A6                                   u12020 63C4  
                                 u11141 5C02                                   u11150 5C18  
                                 u11310 02A8                                   u11230 00DA  
                                 u12030 63E4                                   u11151 5C16  
                                 u11160 5C2C                                   u11080 5918  
                                 u12120 2562                                   u12041 6414  
                                 u12025 63A6                                   u11170 5C30  
                                 u11410 05C6                                   u12050 642A  
                                 u12130 2564                         __end_of___lodiv 90DA  
                                 u12051 6428                                   u11260 0194  
                                 u12060 643E                                   u12300 2CDA  
                                 u12140 258A                                   u11190 5C46  
                                 u11350 050E                                   u11270 0196  
                                 u12070 6442                                   u11520 0A18  
                                 u12240 28EC                                   u12400 AC6E  
                                 u11450 0648                                   u12170 26E4  
                                 _U1P1H 003DED                                   u11700 116E  
                                 u11620 0EE4                                   u11380 0562  
                                 u12260 2A60                                   u12180 26E6  
                                 _U1P2H 003DEF                                   u11710 1170  
                                 u12190 270C                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T3CLK 003FA9  
                                 u12360 3058                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u12290 2CD8  
                                 u12450 A540                                   _U1P3L 003DF0  
                                 u11820 773C                                   u11900 6B5E  
                                 u12380 3208                                   u10870 9A28  
                                 u10950 71B6                                   _U2P1L 003DD4  
                                 u11680 10B8                                   u11840 6882  
                                 u11920 615C                                   u12480 A5A6  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u10890 9AA4                                   _U2P3L 003DD8  
                                 u11780 761A                                   u12468 A542  
                                 u12820 1588                                   u11790 7660  
                                 u11950 6244                                   u11871 6B30  
                                 _T5CLK 003F9D                                   u11880 6B46  
                                 u11960 6298                                   u12760 84EA  
                                 u12840 17DE                         __end_of___lomod 97A0  
                                 u11881 6B44                                   u11890 6B5A  
                                 u11970 629A                                   u12770 84EC  
                                 u12498 A5A8                                   u12940 2270  
                                 _T2HLT 003FAD                                   u11797 7652  
                                 u11990 62F8                                   u12950 2288  
                                 u12960 229A                                   _T5CON 003F9A  
                                 u12946 2272                                   u12956 228A  
                                 u12966 229C                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 0085                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0026                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98               __end_of_update_adc_result BC9C  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR C624                 __size_of_clear_adc_scan 0006  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 9512  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR A34A                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR C48A                            _DMA1CON1bits 003BFD  
            __size_of_send_lcd_data_dma 004A                                   _fabsf A98A  
                                 _flags 003E                __size_of_calc_model_data 044C  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
          __end_of_get_ac_charger_relay C58C                                   _fputc 9A04  
            __size_of_send_lcd_cmd_long 0040                         __end_of_isalpha BAA2  
                                 _fputs AD7E                         __end_of_isdigit BF08  
                       __end_of_ivln2_h FBC3                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand BD78                                   _width 003A  
                                 _putch C454            __end_of_set_ac_charger_relay C562  
                       __end_of_islower BEA8                         __end_of_isspace B738  
              _INT1_SetInterruptHandler C126                         __end_of_set_dac A98A  
                       __end_of_isupper BED8                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0001  
                                 ltemp1 0005                                   ltemp2 0009  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler C0AE  
           _UART1_SetRxInterruptHandler C086                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf A086                         __end_of_tolower B0CA  
                       __end_of_strncmp 82F0                         __end_of_toupper B046  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr C1F0  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize B8FC  
                 __end_of_ringBufS_init C00E                         __initialization A34A  
                     _UART2_rx_vect_isr C218                            __end_of_cp_h FBCB  
                          __end_of_cp_l FBC7                            __end_of_atoi 7C4A  
                          __end_of_ctoa AFC2                            __end_of_main 23E8  
                          __end_of_dtoa 5CF6                            __end_of_nanf B578  
                          __end_of_spin FBB7                            __end_of_stoa 7756  
                          __end_of_utoa 6BA8                            __end_of_xtoa 64FC  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0021  
               __end_of_TMR2_Initialize C4BA                   __end_of_send_lcd_data C264  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button B2AC  
              _TMR5_SetInterruptHandler C0D6                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 007C  
                     _port_data_dma_ptr C5B4                      esr_check@esr_state 00A4  
                   ??_UART2_rx_vect_isr 0026                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize BFBC                         _PWM8_Initialize C4D0  
                      _UART1_Initialize B8B4                       _UART2_tx_vect_isr C1F0  
                    _UART2_Transmit_ISR BF90                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan B450                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue BAA2                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0021  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  i1l1019 A2FA  
                                _RB6PPS 003A0E                                  i1l1207 947A  
                  _start_switch_handler C37E                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize B98C  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright C570                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u930_25 C55C  
                                u930_26 C55E                                  u935_20 8AF4  
                                u956_20 BCDC                    __size_of_hid_display 01DC  
                                u956_26 BCDE                                  u949_20 C588  
                                u982_24 98B2                                  u982_25 98AE  
                                u978_20 97D2                                  u977_28 97BE  
                                u978_21 97CC                        __end_of___xxtofl 8706  
 __end_of_ADCC_DischargeSampleCapacitor C5EA  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor C5E2                __end_of_send_lcd_cmd_dma C3FA  
                       _TMR3_WriteTimer BBE4                     ??_UART2_tx_vect_isr 0026  
             __end_of_UART2_rx_vect_isr C240              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize C5AA                        _UART2_Initialize B578  
                                _WaitMs BD42                         _conv_raw_result 5362  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 924C                                  ___fleq A69E  
                     _ADCC_ThresholdISR B380                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush AE16                                  _efgtoa 0000  
                                _floorf 64FC                       dac_spi_control@S0 0042  
                     dac_spi_control@S1 00A8                       dac_spi_control@S2 00A7  
                     dac_spi_control@SB 00A5                       dac_spi_control@SC 00A6  
                    ?_ADCC_ThresholdISR 0021                                  _memset 6ED4  
                  __size_of_help_button 0038                                  clear_0 A3BC  
                                clear_1 A3D0                                  clear_2 A3E2  
                                clear_3 A3EE                                  clear_4 A3FA  
                                clear_5 A406                                  clear_6 A412  
             __end_of_port_data_dma_ptr C5BE                                  _printf B4B4  
                    _eaDogM_WriteString AC36                                  _strcpy A42A  
                             ?_ADCC_ISR 0021                                  _strlen ACDC  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 04FF  
                       _ADCC_Initialize B316                          _PMD_Initialize C4FC  
            __size_of_update_adc_result 003A               __end_of_UART2_tx_vect_isr C218  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0021                  __end_of_start_adc_scan B4B4  
                          __mediumconst F9DE                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay B68C                        __end_of_spinners A17C  
                      __end_of_vfprintf AAE4                              _StartTimer BB64  
                    __size_of___asfladd 0078           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize B944                       _SYSTEM_Initialize B822  
                            __accesstop 0060                 __end_of__initialization A424  
                             ?_INT0_ISR 0021                               ?_INT1_ISR 0021  
                  __end_of_display_help C602                    __end_of_display_info C5FA  
             __end_of_CLKREF_Initialize C5B4                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer BBA4  
                 _set_temp_display_help C542                        _clear_hid_pflags B98C  
                 __end_of_TMR3_CallBack C2D0               __end_of_ADCC_ThresholdISR B3EA  
                    __size_of_calc_bsoc 0A6E                  __end_of_ringBufS_flush AEA8  
                        __pcstackCOMRAM 0021                              ___inthi_sp 115E  
                            ___intlo_sp 18AF                            __pidataBANK0 BD0C  
                          __pidataBANK1 A5D0             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf AA38                               ?_TMR3_ISR 0021  
                             ?_TMR5_ISR 0021                               ?_TMR6_ISR 0021  
                        ivt0x8_undefint 00AC                           __end_of_fputc 9B28  
                         __end_of_fputs AE16                    _get_ac_charger_relay C57E  
                         __end_of_srand BDAC                   __end_of_TMR5_CallBack C2AC  
                         __end_of_putch C46E                    _set_ac_charger_relay C552  
               __end_of_PWM8_Initialize C4E6                 __end_of_TMR6_Initialize BFE6  
                     _adc_int_t_handler B0CA                  __end_of_PMD_Initialize C510  
                            __end_of_bp FBBF                              ??_ADCC_ISR 0021  
                 __end_of_TMR6_CallBack C318             __size_of_EXT_INT_Initialize 0034  
              calc_bsoc@log_update_wait 0040                  __size_of_calc_ror_data 0186  
                         _DMA1_DMAA_ISR C5CC                   TMR3_ISR@CountCallBack 009C  
                        _clear_adc_scan C60A                      __size_of_hid_input 00D2  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 0091  
             __end_of_SYSTEM_Initialize B86C                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer BC24  
                            __pbssBANK0 0060                              __pbssBANK1 01CD  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              _check_help 82F0  
               __end_of_conv_raw_result 5876                      __size_of_esr_check 02D8  
                 _INT0_InterruptHandler 0097                              ??_INT0_ISR 0021  
                            ??_INT1_ISR 0027                       __end_of_TimerDone C036  
                      _DMA1_DMADCNT_ISR C5C0                         _convert_dac_raw 9B28  
                    __size_of_init_bsoc 0246              __size_of_UART2_rx_vect_isr 0028  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma BE48                   __end_of_wait_lcd_done C33A  
      __end_of_TMR3_SetInterruptHandler C126                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler C0D6                              ??_TMR3_ISR 00E5  
               __end_of_ADCC_Initialize B380                              ??_TMR5_ISR 002B  
             __end_of_adc_int_t_handler B148                              ??_TMR6_ISR 0026  
                     __end_of___asfladd B23A                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9                      __size_of_set_dac_a 0034  
                    __size_of_set_dac_b 0034    __end_of_ADCC_SetADTIInterruptHandler C19E  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler C176  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR C35C  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan C610                                 u1015_48 C304  
                               u1007_48 C2E0                                 u1009_28 C274  
                               u1018_28 C298                          ?_DMA1_DMAA_ISR 0021  
                      _DMA1_DMASCNT_ISR C59C                                 _U1ERRIE 003DFA  
                               u1049_44 B12E                                 u1049_45 B128  
                    __size_of_set_vterm 001E                                 _U1ERRIR 003DF9  
                               u1260_20 3AD2                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 u1258_20 3A08  
                               u1265_28 C2BC                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0021              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                       _dac_spi_control B148                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 3E02  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch BF36  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer BBE4  
               __size_of_switch_handler 0136                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one C542              __end_of_set_load_relay_two C532  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 8DD4                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim C48A                                 __Lparam 0000  
              __end_of_UART1_Initialize B8FC                       __end_of_hid_input A5D0  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 7756  
                               ___fladd 462C                                 ___aomod 7E90  
                               ___fldiv 4DE8                                 ___awdiv 9512  
                               ___flneg B86C                                 ___awmod 9C40  
                               ___flmul 3E02                                 ___flsub BA18  
                               ___fltol 90DA                                 ___lodiv 8F5A  
                               ___lomod 9660               __end_of_UART1_Receive_ISR C37E  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display A266                                 __pcinit A34A  
              __end_of_mode_lamp_bright C57E                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand C562  
                               __ramtop 2000                                 __ptext0 1244  
                               __ptext1 B5D8                                 __ptext2 C37E  
                               __ptext3 BD78                                 __ptext4 A086  
                               __ptext5 BDAC                                 __ptext6 BDE0  
                               __ptext7 9B28                                 __ptext8 A8D4  
                               __ptext9 B148                       __end_of_esr_check 7498  
                     _UART2_Receive_ISR C39E                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize C4E6  
                          __size_of_abs 0046                            __size_of_pad 0114  
                     __end_of_init_bsoc 7E90                                 _isalpha BA5E  
                               us647999 79C0                                 us743999 90C4  
                               _isdigit BED8                                 _ivln2_h FBBF  
                               us658999 80BE                                 us748999 9790  
                             _T3CONbits 003FA6                                 _mode_sw 00A9  
                     __end_of_lp_filter 8A9E                                 _islower BE78  
                               _isspace B6E6                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                                 _set_dac A8D4  
              __end_of_UART2_Initialize B5D8                                 _isupper BEA8  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf 9F7C  
                               _tolower B046                   __size_of_display_help 0008  
                               _utctime 01EB                 __end_of_convert_dac_raw 9C40  
                 __size_of_display_info 0008                                 _strncmp 80D0  
                               _toupper AFC2                    end_of_initialization A424  
             __size_of_convert_adc_data 00B8                      _check_enter_button B23A  
                     __end_of_set_dac_a BE14                       __end_of_set_dac_b BDE0  
                             i1u1278_20 9470     __end_of_UART2_SetRxInterruptHandler C086  
           _UART2_SetRxInterruptHandler C05E                               i2u1060_48 C22C  
                             i2u1052_48 BF7C                               i2u1054_48 B3B6  
                             i2u1054_49 B3CA                               i2u1056_48 C1DC  
                             i2u1058_48 C204                 check_day_time@day_delay 0041  
                     __end_of_set_vterm C418                       __end_of_vfpfcnvrt 3394  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd C61C  
             __end_of_UART2_Receive_ISR C3BE                          wdtdelay@dcount 0078  
               __end_of_dac_spi_control B1C2                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0027                   _INT1_InterruptHandler 0094  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc C622  
              _TMR3_SetInterruptHandler C0FE                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler C0AE                            _display_help C5FA  
                 _TMR5_InterruptHandler 007F                            _display_info C5F2  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags B9D2  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler C1C6  
           _ADCC_SetADIInterruptHandler C19E                              _update_lcd 9E6C  
                       _calc_model_data 5CF6                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc B5D8  
                       _DMA1_Initialize B2AC                              _start_bsoc C33A  
                __size_of_send_lcd_data 0024                         _SPI1_Initialize C4BA  
                 __end_of_get_vterm_ptr BF36                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs BD78  
          __end_of_INTERRUPT_Initialize B450                              _vterm_dump 98D6  
                        __end_of___flge 93AE                          __end_of___fleq A762  
  __end_of_INT0_DefaultInterruptHandler C630   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler C62E              __size_of_UART1_Receive_ISR 0022  
                       _DMA2_Initialize B68C                           __pidataBIGRAM 6BA8  
                        __end_of_efgtoa 1244                       __size_of_TMR3_ISR 0162  
                     __size_of_TMR5_ISR 00E2                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 6868  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 01E7  
                        __end_of_memset 71C0                          __end_of_printf B516  
              __end_of_DMA1_DMADCNT_ISR C5CA             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack C2F4                          __end_of_strcpy A4FE  
                        __end_of_strlen AD7E                     start_initialization A34A  
  __end_of_TMR5_DefaultInterruptHandler BD0C   __size_of_TMR5_DefaultInterruptHandler 0038  
          _TMR5_DefaultInterruptHandler BCD4         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs BA18                   __end_of_INT1_CallBack C288  
             __size_of_set_display_info 001E                             __end_of_pad 9E6C  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd BB64  
                        _switch_handler 97A0           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 01D9  
                 __end_of___fpclassifyf 8DD4                           _uart2RxBuffer 0400  
              __end_of_DMA1_DMASCNT_ISR C5AA                           _uart2TxBuffer 0300  
                        _DMA1_DMAOR_ISR C5D8                     __end_of_hid_display 88E2  
            __end_of_send_port_data_dma B78A                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone C00E                           _ringBufS_init BFE6  
                           __pdataBANK0 00AF                             __pdataBANK1 0100  
            __size_of_UART2_Receive_ISR 0020                     __size_of_get_switch 002C  
            __end_of_EXT_INT_Initialize BE48                 __end_of_calc_model_data 6142  
                         _send_lcd_data C240                     __end_of_help_button BCD4  
       __end_of_eaDogM_WriteStringAtPos AC36                     __end_of_BVSOC_TABLE FAAF  
                             ___asfladd B1C2                    calc_model_data@bcror 0070  
                           __pbssBIGRAM 082A                 __end_of_DMA1_Initialize B316  
                  calc_model_data@bvror 0074                             __pbssCOMRAM 003A  
      __end_of_INT0_SetInterruptHandler C176                           __pcstackBANK0 00E5  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 98D6                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize C4D0                _UART1_RxInterruptHandler 008B  
              _UART2_TxInterruptHandler 008E                               __end_of_T FB3F  
                      _convert_adc_data A81C                               _calc_bsoc 3394  
             __size_of_ringBufS_put_dma 00AA                            _init_display A17C  
                __end_of_DMA1_DMAOR_ISR C5E2                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 0082                      calc_ror_data@bcror 0068  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize B6E6  
                    calc_ror_data@bvror 006C                  _PIN_MANAGER_Initialize AEA8  
              __size_of_TMR3_Initialize 0048                    __end_of_wait_lcd_set C616  
                         __pmediumconst F9DE                               __ptext100 A98A  
                             __ptext101 5362                               __ptext110 88E2  
                             __ptext102 B516                               __ptext111 BA18  
                             __ptext103 C436                               __ptext120 BFBC  
                             __ptext112 462C                               __ptext104 8502  
                             __ptext121 C0AE                               __ptext113 3E02  
                             __ptext105 4DE8                               __ptext130 AEA8  
                             __ptext122 B8FC                               __ptext114 B822  
                             __ptext106 924C                               __ptext131 C4E6  
                             __ptext123 C0D6                               __ptext115 B578  
                             __ptext107 5CF6                               __ptext140 B316  
                             __ptext132 B3EA                               __ptext124 B944  
                             __ptext116 C036                               __ptext108 C61C  
                             __ptext141 C176                               __ptext133 C602  
                             __ptext125 C0FE                               __ptext117 C05E  
                             __ptext109 C33A                               __ptext150 BCD4  
                             __ptext142 C19E                               __ptext134 BE14  
                             __ptext126 C4A2                               __ptext118 B8B4  
                             __ptext151 8A9E                               __ptext143 BC24  
                             __ptext135 C126                               __ptext127 C4BA  
                             __ptext119 C086                               __ptext160 C5B4  
                             __ptext152 C552                               __ptext144 C264  
                             __ptext136 C14E                               __ptext128 C4D0  
                             __ptext161 B1C2                               __ptext153 C57E  
                             __ptext145 C62A                               __ptext137 B68C  
                             __ptext129 C4FC                               __ptext170 B380  
                             __ptext162 C58C                               __ptext154 93B0  
                             __ptext146 97A0                               __ptext138 B2AC  
                             __ptext171 C1C8                               __ptext163 C2D0  
                             __ptext155 BBE4                               __ptext147 A268  
                             __ptext139 C5AA                               __ptext180 C59C  
                             __ptext172 C35C                               __ptext164 C62E  
                             __ptext156 C2AC                               __ptext148 BBA4  
                             __ptext181 C5C0                               __ptext173 C1F0  
                             __ptext165 C624                               __ptext157 C62C  
                             __ptext149 C288                               __ptext182 C5CC  
                             __ptext174 BF90                               __ptext166 BF64  
                             __ptext158 3394                               __ptext183 C5D8  
                             __ptext175 C218                               __ptext167 B0CA  
                             __ptext159 B738                               __ptext184 0000  
                             __ptext176 C39E                               __ptext168 C630  
                             __ptext177 C470                               __ptext169 C632  
                             __ptext178 C2F4                               __ptext179 B78A  
                             _hid_input A4FE                      __end_of_StartTimer BBA4  
                    _set_load_relay_one C532                      _set_load_relay_two C522  
                     __size_of_wdtdelay 005A                       __size_of_spinners 00F6  
                     __size_of_vfprintf 00AC                                _ADCC_ISR BF64  
                __CFG_BBSIZE$BBSIZE_512 000000                               fabsf@F463 0060  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
                             _esr_check 71C0                 __size_of_get_raw_result 001E  
                        __size_of_fabsf 00AE                               _init_bsoc 7C4A  
                __size_of_wait_lcd_done 0022                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 88E2                             _hid_display 8706  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize B3EA                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0021  
                              _INT0_ISR C58C                                _INT1_ISR BC24  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE                                _LATFbits 003FBF  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 027D                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                            _SPI1CON0bits 003D14  
                          _SPI1CON1bits 003D15                               _set_dac_a BDE0  
                             _set_dac_b BDAC                               _ring_buf1 0383  
                             _ring_buf2 0340                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack C2AC                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                __size_of_TMR5_Initialize 0048  
                             _set_vterm C3FA                     __size_of_update_lcd 0110  
                           _help_button BC9C                                _TMR3_ISR 93B0  
                           _BVSOC_TABLE F9DF                                _TMR5_ISR A268  
                              _TMR6_ISR C470                               _port_data 04FF  
                   __size_of_static_soc 005A                               _vfpfcnvrt 23E8  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack C288                              _ADCON0bits 003EF8  
                    __end_of_check_help 8502                               _start_lcd C616  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 001E  
                         _TMR6_CallBack C2F4                   __size_of_send_lcd_cmd 0040  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc C61C  
                      _set_display_info C418                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 A35E                               copy_data1 A384  
                             copy_data2 A3A6                _INT0_SetInterruptHandler C14E  
                   __size_of_vterm_dump 012E     __end_of_UART2_SetTxInterruptHandler C05E  
           _UART2_SetTxInterruptHandler C036                            _uart1RxCount 00AD  
                          _uart2RxCount 00AA                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 00A8                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 0514                           _wait_lcd_done C318  
                          _send_lcd_cmd BB24                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC           __size_of_get_ac_charger_relay 000E  
                      __size_of___aomod 0240                         _adc_int_handler C632  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140           __size_of_set_ac_charger_relay 0010  
                    __end_of_get_switch BF62                 __size_of_check_day_time 01A0  
                 __end_of_DMA1_DMAA_ISR C5D6                      ___fpclassifyf@F463 0064  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0200  
                              ___xxtofl 8502                       ?_DMA1_DMADCNT_ISR 0021  
           __size_of_check_enter_button 0072                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand C570                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0027                        __size_of_set_dac 00B6  
                              __ptext10 BE48                                __ptext11 A17C  
                              __ptext20 A4FE                                __ptext12 C240  
                              __ptext21 BF36                                __ptext13 BAE4  
                              __ptext30 C532                                __ptext22 71C0  
                              __ptext14 BB24                                __ptext31 C562  
                              __ptext23 BC62                                __ptext15 C3BE  
                              __ptext40 AB8E                                __ptext32 A81C  
                              __ptext24 B450                                __ptext16 BFE6  
                              __ptext41 C3DC                                __ptext33 B98C  
                              __ptext25 C510                                __ptext17 7C4A  
                              __ptext50 B4B4                                __ptext42 C318  
                              __ptext34 82F0                                __ptext26 C5E2  
                              __ptext18 A762                                __ptext51 AA38  
                              __ptext43 B632                                __ptext35 98D6  
                              __ptext27 C60A                                __ptext19 8706  
                              __ptext60 80D0                                __ptext52 23E8  
                              __ptext44 B7D8                                __ptext36 9F7C  
                              __ptext28 C5EA                                __ptext61 7498  
                              __ptext53 6142                                __ptext45 AC36  
                              __ptext37 BF08                                __ptext29 C522  
                              __ptext70 A69E                                __ptext62 0000  
                              __ptext54 AFC2                                __ptext46 C610  
                              __ptext38 BD42                                __ptext71 9C40  
                              __ptext63 B046                                __ptext55 BE78  
                              __ptext47 C616                                __ptext39 9E6C  
                              __ptext80 AD7E                                __ptext72 9512  
                              __ptext64 BEA8                                __ptext56 BA5E  
                              __ptext48 AE16                                __ptext81 9A04  
                              __ptext73 5876                                __ptext65 A42A  
                              __ptext57 6868                                __ptext49 6ED4  
                              __ptext90 C48A                                __ptext82 C454  
                              __ptext74 B9D2                                __ptext66 64FC  
                              __ptext58 9660                                __ptext91 C570  
                              __ptext83 AAE4                                __ptext75 7E90  
                              __ptext67 8C3E                                __ptext59 8F5A  
                              __ptext92 BAA2                                __ptext84 79D6  
                              __ptext76 7756                                __ptext68 90DA  
                              __ptext93 BC9C                                __ptext85 B6E6  
                              __ptext77 AF3A                                __ptext69 B86C  
                              __ptext94 C00E                                __ptext86 BED8  
                              __ptext78 9D58                                __ptext95 BB64  
                              __ptext87 C3FA                                __ptext79 ACDC  
                              __ptext96 C5F2                                __ptext88 C542  
                              __ptext97 C5FA                                __ptext89 C418  
                              __ptext98 B23A                                __ptext99 8DD4  
                      __size_of_isupper 0030                                us1104999 5890  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1173999 74AA                                us1185999 68CE  
                              us1194999 61C2                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma AAE4  
                  __end_of_Volts_to_SOC A81C                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 11A4  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                   dac_spi_control@init 0043                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0021                   __end_of_init_port_dma BE78  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 0088                               stoa@F1166 0100  
                    ??_DMA1_DMASCNT_ISR 0027            __end_of_ADCC_StartConversion C522  
                              _spi_link 01CD                                _wdtdelay B632  
            __end_of_UART2_Transmit_ISR BFBC                                _spinners A086  
                              _vfprintf AA38                __end_of_convert_adc_data A8D4  
            __end_of_PWM8_LoadDutyValue BAE4    __end_of_TMR3_DefaultInterruptHandler C62E  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler C62C  
  __end_of_INT1_DefaultInterruptHandler C62C   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler C62A                      _send_port_data_dma B738  
                         ??_Default_ISR 0021                             _uart1RxHead 0047  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0044  
                           _uart1RxTail 00AE                          _get_raw_result C436  
                           _uart2TxHead 00AC                             _uart2RxTail 00AB  
                             spinners@s 01E1                             _uart2TxTail 0046  
                          _wait_lcd_set C610                      _EXT_INT_Initialize BE14  
  __end_of_TMR6_DefaultInterruptHandler B7D8   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler B78A                       _send_lcd_data_dma B7D8  
  __end_of_ADCC_DefaultInterruptHandler C632   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler C630                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long BAE4  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help C552  
                 __end_of_calc_ror_data 8F5A                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString ACDC                   __end_of_mode_lamp_dim C4A2  
               __end_of_adc_int_handler C634                __size_of_convert_dac_raw 0118  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd 9F7C                  _uart2TxBufferRemaining 0045  
                    __end_of_static_soc B632                      __end_of_start_bsoc C35C  
                        _FVR_Initialize C602                  __end_of_get_raw_result C454  
                      _send_lcd_cmd_dma C3DC                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 00A0        __end_of_INT1_SetInterruptHandler C14E  
             __size_of_UART1_Initialize 0048                __size_of_dac_spi_control 007A  
             __end_of_send_lcd_data_dma B822                        ??_DMA1_DMAOR_ISR 0027  
             __end_of_send_lcd_cmd_long BB24                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR C62A          __end_of_PIN_MANAGER_Initialize AF3A  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 9A04  
               _eaDogM_WriteStringAtPos AB8E                           _get_vterm_ptr BF08  
                        _check_adc_scan C5EA               __size_of_UART2_Initialize 0060  
