

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Nov 27 17:17:54 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=4,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=4,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=4,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=4,class=CODE,delta=1
   150                           	psect	text125,global,reloc=4,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=4,class=CODE,delta=1
   155                           	psect	text130,global,reloc=4,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=4,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=4,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=4,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=4,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=4,class=CODE,delta=1
   167                           	psect	text142,global,reloc=4,class=CODE,delta=1
   168                           	psect	text143,global,reloc=4,class=CODE,delta=1
   169                           	psect	text144,global,reloc=4,class=CODE,delta=1
   170                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   171                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   172                           	psect	text145,global,reloc=4,class=CODE,delta=1
   173                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   174                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   175  0000                     
   176                           ; Version 2.10
   177                           ; Generated 31/07/2019 GMT
   178                           ; 
   179                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   180                           ; All rights reserved.
   181                           ; 
   182                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   183                           ; 
   184                           ; Redistribution and use in source and binary forms, with or without modification, are
   185                           ; permitted provided that the following conditions are met:
   186                           ; 
   187                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   188                           ;        conditions and the following disclaimer.
   189                           ; 
   190                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   191                           ;        of conditions and the following disclaimer in the documentation and/or other
   192                           ;        materials provided with the distribution.
   193                           ; 
   194                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   195                           ;        software without specific prior written permission.
   196                           ; 
   197                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   198                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   199                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   200                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   201                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   202                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   203                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   204                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   205                           ; 
   206                           ; 
   207                           ; Code-generator required, PIC18F57K42 Definitions
   208                           ; 
   209                           ; SFR Addresses
   210  0000                     
   211 ;;_mode	offset	0
   212 ;;_channel	offset=-1 (param)
   213 ;;_s	offset=-2 (param)
   214 ;;_cmd	offset=-1 (param)
   215 ;;_cmd	offset=-1 (param)
   216 ;;_data	offset=-1 (param)
   217 ;;__this	offset=-2 (param)
   218 ;;_cmd	offset=-1 (param)
   219 ;;_i	offset	0
   220 ;;_lp_speed	offset	0
   221 ;;_new	offset=-4 (param)
   222 ;;_bn	offset=-5 (param)
   223 ;;_slow	offset=-6 (param)
   224 ;;_chan	offset=-1 (param)
   225 ;;_to_what	offset=-2 (param)
   226 ;;_u	offset	0
   227 ;;_s	offset=-2 (param)
   228 ;;_index	offset=-1 (param)
   229 ;;_arg	offset	0
   230 ;;_exp	offset	4
   231 ;;_sign	offset=-1 (param)
   232 ;;_val	offset=-5 (param)
   233 ;;_estatus	offset	0
   234 ;;_flipper	offset=-1 (param)
   235 ;;_f	offset	0
   236 ;;_ap	offset	6
   237 ;;_s	offset=-3 (param)
   238 ;;_fmt	offset=-5 (param)
   239 ;;_line	offset=-1 (param)
   240 ;;_vterm	offset=-2 (param)
   241 ;;_numMilliseconds	offset=-2 (param)
   242 ;;_vterm	offset=-1 (param)
   243 ;;_r	offset=-1 (param)
   244 ;;_c	offset=-2 (param)
   245 ;;_strPtr	offset=-4 (param)
   246 ;;_strPtr	offset=-1 (param)
   247 ;;_delay	offset=-4 (param)
   248 ;;_strPtr	offset=-2 (param)
   249 ;;__this	offset=-2 (param)
   250 ;;_clearBuffer	offset=-3 (param)
   251 ;;_s	offset	0
   252 ;;_k	offset	2
   253 ;;_dest	offset=-2 (param)
   254 ;;_c	offset=-4 (param)
   255 ;;_n	offset=-6 (param)
   256 ;;_ap	offset	0
   257 ;;_fmt	offset=-3 (param)
   258 ;;_cfmt	offset	0
   259 ;;_fp	offset=-2 (param)
   260 ;;_fmt	offset=-4 (param)
   261 ;;_ap	offset=-6 (param)
   262 ;;_vfpfcnvrt$4404	offset	0
   263 ;;_vfpfcnvrt$4410	offset	2
   264 ;;_vfpfcnvrt$4403	offset	4
   265 ;;_llu	offset	6
   266 ;;_ll	offset	14
   267 ;;_f	offset	22
   268 ;;_ct	offset	26
   269 ;;_cp	offset	29
   270 ;;_c	offset	31
   271 ;;_fp	offset=-2 (param)
   272 ;;_fmt	offset=-4 (param)
   273 ;;_ap	offset=-6 (param)
   274 ;;_xtoa$4389	offset	0
   275 ;;_xtoa$4388	offset	2
   276 ;;_n	offset	4
   277 ;;_c	offset	12
   278 ;;_i	offset	14
   279 ;;_w	offset	16
   280 ;;_p	offset	18
   281 ;;_fp	offset=-2 (param)
   282 ;;_d	offset=-10 (param)
   283 ;;_x	offset=-11 (param)
   284 ;;_toupper$5049	offset	0
   285 ;;_c	offset=-2 (param)
   286 ;;_c	offset=-2 (param)
   287 ;;_c	offset=-2 (param)
   288 ;;_r	offset	0
   289 ;;_l	offset	2
   290 ;;__l	offset=-2 (param)
   291 ;;__r	offset=-4 (param)
   292 ;;_n	offset=-6 (param)
   293 ;;_nuls	offset	0
   294 ;;_l	offset	7
   295 ;;_p	offset	9
   296 ;;_cp	offset	11
   297 ;;_w	offset	13
   298 ;;_i	offset	15
   299 ;;_fp	offset=-2 (param)
   300 ;;_s	offset=-4 (param)
   301 ;;_efgtoa$4368	offset	0
   302 ;;_efgtoa$4367	offset	2
   303 ;;_efgtoa$4366	offset	4
   304 ;;_efgtoa$4362	offset	6
   305 ;;_efgtoa$4358	offset	8
   306 ;;_efgtoa$4357	offset	10
   307 ;;_u	offset	12
   308 ;;_g	offset	16
   309 ;;_l	offset	20
   310 ;;_h	offset	24
   311 ;;_ou	offset	28
   312 ;;_n	offset	32
   313 ;;_e	offset	34
   314 ;;_i	offset	36
   315 ;;_w	offset	38
   316 ;;_p	offset	40
   317 ;;_sign	offset	42
   318 ;;_d	offset	44
   319 ;;_ne	offset	46
   320 ;;_m	offset	48
   321 ;;_pp	offset	50
   322 ;;_t	offset	52
   323 ;;_mode	offset	54
   324 ;;_nmode	offset	55
   325 ;;_fp	offset=-2 (param)
   326 ;;_f	offset=-6 (param)
   327 ;;_c	offset=-7 (param)
   328 ;;_tolower$5034	offset	0
   329 ;;_c	offset=-2 (param)
   330 ;;_c	offset=-2 (param)
   331 ;;_d	offset	0
   332 ;;_s	offset	2
   333 ;;_dest	offset=-2 (param)
   334 ;;_src	offset=-4 (param)
   335 ;;_u	offset	0
   336 ;;_m	offset	4
   337 ;;_e	offset	8
   338 ;;_x	offset=-4 (param)
   339 ;;_u	offset	0
   340 ;;_e	offset	4
   341 ;;_x	offset=-4 (param)
   342 ;;_exp1	offset	0
   343 ;;_sign1	offset	1
   344 ;;_f1	offset=-4 (param)
   345 ;;_b	offset=-4 (param)
   346 ;;_a	offset=-8 (param)
   347 ;;_grs	offset	0
   348 ;;_bexp	offset	1
   349 ;;_aexp	offset	2
   350 ;;_signs	offset	3
   351 ;;_b	offset=-4 (param)
   352 ;;_a	offset=-8 (param)
   353 ;;_f1	offset=-4 (param)
   354 ;;_prod	offset	0
   355 ;;_grs	offset	4
   356 ;;_temp	offset	8
   357 ;;_bexp	offset	10
   358 ;;_aexp	offset	11
   359 ;;_sign	offset	12
   360 ;;_b	offset=-4 (param)
   361 ;;_a	offset=-8 (param)
   362 ;;_ff1	offset=-4 (param)
   363 ;;_ff2	offset=-8 (param)
   364 ;;_ff1	offset=-4 (param)
   365 ;;_ff2	offset=-8 (param)
   366 ;;_grs	offset	0
   367 ;;_rem	offset	4
   368 ;;_new_exp	offset	8
   369 ;;_aexp	offset	10
   370 ;;_bexp	offset	11
   371 ;;_sign	offset	12
   372 ;;_b	offset=-4 (param)
   373 ;;_a	offset=-8 (param)
   374 ;;_sign	offset	0
   375 ;;_counter	offset	1
   376 ;;_dividend	offset=-2 (param)
   377 ;;_divisor	offset=-4 (param)
   378 ;;_quotient	offset	0
   379 ;;_sign	offset	2
   380 ;;_counter	offset	3
   381 ;;_dividend	offset=-2 (param)
   382 ;;_divisor	offset=-4 (param)
   383 ;;_dtoa$4334	offset	0
   384 ;;_n	offset	2
   385 ;;_i	offset	10
   386 ;;_s	offset	12
   387 ;;_w	offset	14
   388 ;;_p	offset	16
   389 ;;_fp	offset=-2 (param)
   390 ;;_d	offset=-10 (param)
   391 ;;_a	offset=-2 (param)
   392 ;;_sign	offset	0
   393 ;;_counter	offset	1
   394 ;;_dividend	offset=-8 (param)
   395 ;;_divisor	offset=-16 (param)
   396 ;;_quotient	offset	0
   397 ;;_sign	offset	8
   398 ;;_counter	offset	9
   399 ;;_dividend	offset=-8 (param)
   400 ;;_divisor	offset=-16 (param)
   401 ;;_w	offset	0
   402 ;;_fp	offset=-2 (param)
   403 ;;_c	offset=-3 (param)
   404 ;;_w	offset	0
   405 ;;_i	offset	2
   406 ;;_fp	offset=-2 (param)
   407 ;;_buf	offset=-4 (param)
   408 ;;_p	offset=-6 (param)
   409 ;;_a	offset	0
   410 ;;_s	offset=-2 (param)
   411 ;;_i	offset	0
   412 ;;_c	offset	2
   413 ;;_s	offset=-2 (param)
   414 ;;_fp	offset=-4 (param)
   415 ;;_c	offset=-2 (param)
   416 ;;_fp	offset=-4 (param)
   417 ;;_c	offset=-1 (param)
   418 ;;__this	offset=-2 (param)
   419 ;;_c	offset=-3 (param)
   420 ;;_atoi$4887	offset	0
   421 ;;_atoi$4885	offset	2
   422 ;;_atoi$4886	offset	4
   423 ;;_n	offset	5
   424 ;;_neg	offset	7
   425 ;;_s	offset=-2 (param)
   426 ;;_isspace$4925	offset	0
   427 ;;_c	offset=-2 (param)
   428 ;;_c	offset=-2 (param)
   429 ;;_vterm	offset=-1 (param)
   430 ;;_new_response_info	offset=-1 (param)
   431 ;;_new_response_info	offset=-1 (param)
   432 ;;_level	offset=-2 (param)
   433 ;;_dutyValue	offset=-2 (param)
   434 ;;_timer	offset=-1 (param)
   435 ;;_timer	offset=-1 (param)
   436 ;;_count	offset=-3 (param)
   437 ;;_InterruptHandler	offset=-3 (param)
   438 ;;_InterruptHandler	offset=-3 (param)
   439 ;;_InterruptHandler	offset=-3 (param)
   440 ;;_InterruptHandler	offset=-3 (param)
   441 ;;_InterruptHandler	offset=-3 (param)
   442 ;;_InterruptHandler	offset=-3 (param)
   443 ;;_state	offset	0
   444 ;;_InterruptHandler	offset=-3 (param)
   445 ;;_InterruptHandler	offset=-3 (param)
   446 ;;_InterruptHandler	offset=-3 (param)
   447 ;;_InterruptHandler	offset=-3 (param)
   448 ;;_i	offset	0
   449 ;;_sw_value	offset	1
   450 ;;_timerVal	offset=-2 (param)
   451 ;;_channel	offset=-1 (param)
   452 ;;_i	offset	0
   453                           
   454                           	psect	idataBANK0
   455  017E1A                     __pidataBANK0:
   456                           	opt callstack 0
   457                           
   458                           ;initializer for _R
   459  017E1A  0000               	dw	0
   460  017E1C  0000               	dw	0
   461  017E1E  0000               	dw	0
   462  017E20  0000               	dw	0
   463  017E22  0000               	dw	0
   464  017E24  0000               	dw	0
   465  017E26  0000               	dw	0
   466  017E28  0000               	dw	0
   467  017E2A  0000               	dw	0
   468  017E2C  0000               	dw	0
   469  017E2E  0000               	dw	0
   470  017E30  0000               	dw	0
   471  017E32  0000               	dw	0
   472  017E34  0000               	dw	0
   473  017E36  0000               	dw	0
   474  017E38  0000               	dw	0
   475  017E3A  0F67               	dw	3943
   476  017E3C  0F98               	dw	3992
   477  017E3E  00                 	db	0
   478  017E3F  0000               	dw	0
   479  017E41  00                 	db	0
   480                           
   481                           ;initializer for stoa@F1166
   482  017E42  28                 	db	40
   483  017E43  6E                 	db	110
   484  017E44  75                 	db	117
   485  017E45  6C                 	db	108
   486  017E46  6C                 	db	108
   487  017E47  29                 	db	41
   488  017E48  00                 	db	0
   489                           
   490                           	psect	idataBANK1
   491  016CBC                     __pidataBANK1:
   492                           	opt callstack 0
   493                           
   494                           ;initializer for _V
   495  016CBC  00                 	db	0
   496  016CBD  00                 	db	0
   497  016CBE  00                 	db	0
   498  016CBF  00                 	db	0
   499  016CC0  00                 	db	0
   500  016CC1  00                 	db	0
   501  016CC2  00                 	db	0
   502  016CC3  00                 	db	0
   503  016CC4  00                 	db	0
   504  016CC5  00                 	db	0
   505  016CC6  00                 	db	0
   506  016CC7  00                 	db	0
   507  016CC8  00                 	db	0
   508  016CC9  00                 	db	0
   509  016CCA  00                 	db	0
   510  016CCB  00                 	db	0
   511  016CCC  00                 	db	0
   512  016CCD  00                 	db	0
   513  016CCE  00                 	db	0
   514  016CCF  00                 	db	0
   515  016CD0  00                 	db	0
   516  016CD1  00                 	db	0
   517  016CD2  00                 	db	0
   518  016CD3  00                 	db	0
   519  016CD4  00                 	db	0
   520  016CD5  00                 	db	0
   521  016CD6  00                 	db	0
   522  016CD7  00                 	db	0
   523  016CD8  00                 	db	0
   524  016CD9  00                 	db	0
   525  016CDA  00                 	db	0
   526  016CDB  00                 	db	0
   527  016CDC  00                 	db	0
   528  016CDD  00                 	db	0
   529  016CDE  00                 	db	0
   530  016CDF  00                 	db	0
   531  016CE0  00                 	db	0
   532  016CE1  00                 	db	0
   533  016CE2  00                 	db	0
   534  016CE3  00                 	db	0
   535  016CE4  00                 	db	0
   536  016CE5  00                 	db	0
   537  016CE6  00                 	db	0
   538  016CE7  00                 	db	0
   539  016CE8  00                 	db	0
   540  016CE9  00                 	db	0
   541  016CEA  00                 	db	0
   542  016CEB  00                 	db	0
   543  016CEC  00                 	db	0
   544  016CED  00                 	db	0
   545  016CEE  00                 	db	0
   546  016CEF  00                 	db	0
   547  016CF0  00                 	db	0
   548  016CF1  00                 	db	0
   549  016CF2  00                 	db	0
   550  016CF3  00                 	db	0
   551  016CF4  00                 	db	0
   552  016CF5  00                 	db	0
   553  016CF6  00                 	db	0
   554  016CF7  00                 	db	0
   555  016CF8  00                 	db	0
   556  016CF9  00                 	db	0
   557  016CFA  00                 	db	0
   558  016CFB  00                 	db	0
   559  016CFC  00                 	db	0
   560  016CFD  00                 	db	0
   561  016CFE  00                 	db	0
   562  016CFF  00                 	db	0
   563  016D00  00                 	db	0
   564  016D01  00                 	db	0
   565  016D02  00                 	db	0
   566  016D03  00                 	db	0
   567  016D04  00                 	db	0
   568  016D05  00                 	db	0
   569  016D06  00                 	db	0
   570  016D07  00                 	db	0
   571  016D08  00                 	db	0
   572  016D09  00                 	db	0
   573  016D0A  00                 	db	0
   574  016D0B  00                 	db	0
   575  016D0C  00                 	db	0
   576  016D0D  00                 	db	0
   577  016D0E  00                 	db	0
   578  016D0F  00                 	db	0
   579  016D10  00                 	db	0
   580  016D11  00                 	db	0
   581  016D12  00                 	db	0
   582  016D13  00                 	db	0
   583  016D14  00                 	db	0
   584  016D15  00                 	db	0
   585  016D16  00                 	db	0
   586  016D17  00                 	db	0
   587  016D18  00                 	db	0
   588  016D19  00                 	db	0
   589  016D1A  00                 	db	0
   590  016D1B  00                 	db	0
   591  016D1C  00                 	db	0
   592  016D1D  00                 	db	0
   593  016D1E  00                 	db	0
   594  016D1F  00                 	db	0
   595  016D20  00                 	db	0
   596  016D21  00                 	db	0
   597  016D22  00                 	db	0
   598  016D23  00                 	db	0
   599  016D24  00                 	db	0
   600  016D25  00                 	db	0
   601  016D26  00                 	db	0
   602  016D27  00                 	db	0
   603  016D28  00                 	db	0
   604  016D29  00                 	db	0
   605  016D2A  00                 	db	0
   606  016D2B  00                 	db	0
   607  016D2C  00                 	db	0
   608  016D2D  00                 	db	0
   609  016D2E  00                 	db	0
   610  016D2F  00                 	db	0
   611  016D30  00                 	db	0
   612  016D31  00                 	db	0
   613  016D32  00                 	db	0
   614  016D33  00                 	db	0
   615  016D34  00                 	db	0
   616  016D35  00                 	db	0
   617  016D36  00                 	db	0
   618  016D37  00                 	db	0
   619  016D38  00                 	db	0
   620  016D39  00                 	db	0
   621  016D3A  00                 	db	0
   622  016D3B  00                 	db	0
   623  016D3C  00                 	db	0
   624  016D3D  0000               	dw	0
   625  016D3F  0000               	dw	0
   626  016D41  0000               	dw	0
   627  016D43  0000               	dw	0
   628  016D45  00                 	db	0
   629  016D46  00                 	db	0
   630  016D47  00                 	db	0
   631  016D48  00                 	db	0
   632  016D49  00                 	db	0
   633  016D4A  00                 	db	0
   634  016D4B  0000               	dw	0
   635  016D4D  0000               	dw	0
   636  016D4F  0000               	dw	0
   637  016D51  0000               	dw	0
   638  016D53  0000               	dw	0
   639  016D55  0000               	dw	0
   640  016D57  00                 	db	0
   641  016D58  00                 	db	0
   642  016D59  00                 	db	0
   643  016D5A  00                 	db	0
   644  016D5B  00                 	db	0
   645  016D5C  00                 	db	0
   646  016D5D  00                 	db	0
   647  016D5E  00                 	db	0
   648  016D5F  00                 	db	0
   649  016D60  00                 	db	0
   650  016D61  0000               	dw	0
   651  016D63  0000               	dw	0
   652  016D65  2D                 	db	45
   653  016D66  00                 	db	0
   654  016D67  0000               	dw	0
   655  016D69  0000               	dw	0
   656  016D6B  0000               	dw	0
   657  016D6D  0000               	dw	0
   658  016D6F  0000               	dw	0
   659  016D71  0000               	dw	0
   660  016D73  0000               	dw	0
   661  016D75  0000               	dw	0
   662                           
   663                           	psect	idataBANK2
   664  018462                     __pidataBANK2:
   665                           	opt callstack 0
   666                           
   667                           ;initializer for _port_data
   668  018462  FF                 	db	255
   669  018463  00                 	db	0
   670  018464  FF                 	db	255
   671  018465  00                 	db	0
   672  018466  FF                 	db	255
   673  018467  00                 	db	0
   674  018468  FF                 	db	255
   675  018469  00                 	db	0
   676  01846A  FF                 	db	255
   677  01846B  00                 	db	0
   678  01846C  FF                 	db	255
   679  01846D  00                 	db	0
   680  01846E  FF                 	db	255
   681  01846F  00                 	db	0
   682  018470  FF                 	db	255
   683  018471  00                 	db	0
   684                           
   685                           	psect	mediumconst
   686  00FE44                     __pmediumconst:
   687                           	opt callstack 0
   688  00FE44  00                 	db	0
   689  00FE45                     _T:
   690                           	opt callstack 0
   691  00FE45  63                 	db	99
   692  00FE46  6F                 	db	111
   693  00FE47  6D                 	db	109
   694  00FE48  6D                 	db	109
   695  00FE49  61                 	db	97
   696  00FE4A  6E                 	db	110
   697  00FE4B  64                 	db	100
   698  00FE4C  73                 	db	115
   699  00FE4D  20                 	db	32
   700  00FE4E  31                 	db	49
   701  00FE4F  00                 	db	0
   702  00FE50  00                 	db	0
   703  00FE51  00                 	db	0
   704  00FE52  00                 	db	0
   705  00FE53  00                 	db	0
   706  00FE54  00                 	db	0
   707  00FE55  00                 	db	0
   708  00FE56  00                 	db	0
   709  00FE57  64                 	db	100
   710  00FE58  69                 	db	105
   711  00FE59  73                 	db	115
   712  00FE5A  70                 	db	112
   713  00FE5B  6C                 	db	108
   714  00FE5C  61                 	db	97
   715  00FE5D  79                 	db	121
   716  00FE5E  73                 	db	115
   717  00FE5F  20                 	db	32
   718  00FE60  31                 	db	49
   719  00FE61  00                 	db	0
   720  00FE62  00                 	db	0
   721  00FE63  00                 	db	0
   722  00FE64  00                 	db	0
   723  00FE65  00                 	db	0
   724  00FE66  00                 	db	0
   725  00FE67  00                 	db	0
   726  00FE68  00                 	db	0
   727  00FE69  63                 	db	99
   728  00FE6A  6F                 	db	111
   729  00FE6B  6D                 	db	109
   730  00FE6C  6D                 	db	109
   731  00FE6D  61                 	db	97
   732  00FE6E  6E                 	db	110
   733  00FE6F  64                 	db	100
   734  00FE70  73                 	db	115
   735  00FE71  20                 	db	32
   736  00FE72  32                 	db	50
   737  00FE73  00                 	db	0
   738  00FE74  00                 	db	0
   739  00FE75  00                 	db	0
   740  00FE76  00                 	db	0
   741  00FE77  00                 	db	0
   742  00FE78  00                 	db	0
   743  00FE79  00                 	db	0
   744  00FE7A  00                 	db	0
   745  00FE7B  64                 	db	100
   746  00FE7C  69                 	db	105
   747  00FE7D  73                 	db	115
   748  00FE7E  70                 	db	112
   749  00FE7F  6C                 	db	108
   750  00FE80  61                 	db	97
   751  00FE81  79                 	db	121
   752  00FE82  73                 	db	115
   753  00FE83  20                 	db	32
   754  00FE84  32                 	db	50
   755  00FE85  00                 	db	0
   756  00FE86  00                 	db	0
   757  00FE87  00                 	db	0
   758  00FE88  00                 	db	0
   759  00FE89  00                 	db	0
   760  00FE8A  00                 	db	0
   761  00FE8B  00                 	db	0
   762  00FE8C  00                 	db	0
   763  00FE8D  63                 	db	99
   764  00FE8E  6F                 	db	111
   765  00FE8F  6D                 	db	109
   766  00FE90  6D                 	db	109
   767  00FE91  61                 	db	97
   768  00FE92  6E                 	db	110
   769  00FE93  64                 	db	100
   770  00FE94  73                 	db	115
   771  00FE95  20                 	db	32
   772  00FE96  33                 	db	51
   773  00FE97  00                 	db	0
   774  00FE98  00                 	db	0
   775  00FE99  00                 	db	0
   776  00FE9A  00                 	db	0
   777  00FE9B  00                 	db	0
   778  00FE9C  00                 	db	0
   779  00FE9D  00                 	db	0
   780  00FE9E  00                 	db	0
   781  00FE9F  64                 	db	100
   782  00FEA0  69                 	db	105
   783  00FEA1  73                 	db	115
   784  00FEA2  70                 	db	112
   785  00FEA3  6C                 	db	108
   786  00FEA4  61                 	db	97
   787  00FEA5  79                 	db	121
   788  00FEA6  73                 	db	115
   789  00FEA7  20                 	db	32
   790  00FEA8  33                 	db	51
   791  00FEA9  00                 	db	0
   792  00FEAA  00                 	db	0
   793  00FEAB  00                 	db	0
   794  00FEAC  00                 	db	0
   795  00FEAD  00                 	db	0
   796  00FEAE  00                 	db	0
   797  00FEAF  00                 	db	0
   798  00FEB0  00                 	db	0
   799  00FEB1  63                 	db	99
   800  00FEB2  6F                 	db	111
   801  00FEB3  6D                 	db	109
   802  00FEB4  6D                 	db	109
   803  00FEB5  61                 	db	97
   804  00FEB6  6E                 	db	110
   805  00FEB7  64                 	db	100
   806  00FEB8  73                 	db	115
   807  00FEB9  20                 	db	32
   808  00FEBA  34                 	db	52
   809  00FEBB  00                 	db	0
   810  00FEBC  00                 	db	0
   811  00FEBD  00                 	db	0
   812  00FEBE  00                 	db	0
   813  00FEBF  00                 	db	0
   814  00FEC0  00                 	db	0
   815  00FEC1  00                 	db	0
   816  00FEC2  00                 	db	0
   817  00FEC3  64                 	db	100
   818  00FEC4  69                 	db	105
   819  00FEC5  73                 	db	115
   820  00FEC6  70                 	db	112
   821  00FEC7  6C                 	db	108
   822  00FEC8  61                 	db	97
   823  00FEC9  79                 	db	121
   824  00FECA  73                 	db	115
   825  00FECB  20                 	db	32
   826  00FECC  34                 	db	52
   827  00FECD  00                 	db	0
   828  00FECE  00                 	db	0
   829  00FECF  00                 	db	0
   830  00FED0  00                 	db	0
   831  00FED1  00                 	db	0
   832  00FED2  00                 	db	0
   833  00FED3  00                 	db	0
   834  00FED4  00                 	db	0
   835  00FED5                     __end_of_T:
   836                           	opt callstack 0
   837  0000                     _IVTADL	set	14493
   838  0000                     _IVTADH	set	14494
   839  0000                     _IVTADU	set	14495
   840  0000                     _PIR4bits	set	14756
   841  0000                     _PIE8bits	set	14744
   842  0000                     _PIR8bits	set	14760
   843  0000                     _SCANPR	set	14839
   844  0000                     _DMA2PR	set	14836
   845  0000                     _DMA1PR	set	14835
   846  0000                     _MAINPR	set	14834
   847  0000                     _ISRPR	set	14833
   848  0000                     _PIE2bits	set	14738
   849  0000                     _PIR2bits	set	14754
   850  0000                     _PIE9bits	set	14745
   851  0000                     _PIR9bits	set	14761
   852  0000                     _PIE6bits	set	14742
   853  0000                     _PIE3bits	set	14739
   854  0000                     _PMD7	set	14791
   855  0000                     _PMD6	set	14790
   856  0000                     _PMD5	set	14789
   857  0000                     _PMD4	set	14788
   858  0000                     _PMD3	set	14787
   859  0000                     _PMD2	set	14786
   860  0000                     _PMD1	set	14785
   861  0000                     _PMD0	set	14784
   862  0000                     _OSCTUNE	set	14814
   863  0000                     _OSCFRQ	set	14815
   864  0000                     _OSCEN	set	14813
   865  0000                     _OSCCON3	set	14811
   866  0000                     _OSCCON1	set	14809
   867  0000                     _IPR8bits	set	14728
   868  0000                     _IPR9bits	set	14729
   869  0000                     _IPR5bits	set	14725
   870  0000                     _IPR1bits	set	14721
   871  0000                     _IPR3bits	set	14723
   872  0000                     _IPR6bits	set	14726
   873  0000                     _IPR2bits	set	14722
   874  0000                     _PIE5bits	set	14741
   875  0000                     _PIE1bits	set	14737
   876  0000                     _PIR5bits	set	14757
   877  0000                     _PIR1bits	set	14753
   878  0000                     _PLLR	set	118496
   879  0000                     _SPI1SDIPPS	set	15071
   880  0000                     _U1RXPPS	set	15077
   881  0000                     _RC6PPS	set	14870
   882  0000                     _RC5PPS	set	14869
   883  0000                     _INT1PPS	set	15041
   884  0000                     _RD1PPS	set	14873
   885  0000                     _INT0PPS	set	15040
   886  0000                     _RC3PPS	set	14867
   887  0000                     _RB6PPS	set	14862
   888  0000                     _SPI1SCKPPS	set	15070
   889  0000                     _U2RXPPS	set	15080
   890  0000                     _SLRCONF	set	14995
   891  0000                     _SLRCONE	set	14979
   892  0000                     _SLRCOND	set	14963
   893  0000                     _SLRCONC	set	14947
   894  0000                     _SLRCONB	set	14931
   895  0000                     _SLRCONA	set	14915
   896  0000                     _ODCOND	set	14962
   897  0000                     _ODCONC	set	14946
   898  0000                     _ODCONB	set	14930
   899  0000                     _ODCONA	set	14914
   900  0000                     _ODCONF	set	14994
   901  0000                     _ODCONE	set	14978
   902  0000                     _WPUC	set	14945
   903  0000                     _WPUA	set	14913
   904  0000                     _WPUB	set	14929
   905  0000                     _WPUE	set	14977
   906  0000                     _WPUF	set	14993
   907  0000                     _WPUD	set	14961
   908  0000                     _ANSELA	set	14912
   909  0000                     _ANSELF	set	14992
   910  0000                     _ANSELE	set	14976
   911  0000                     _ANSELB	set	14928
   912  0000                     _ANSELC	set	14944
   913  0000                     _ANSELD	set	14960
   914  0000                     _DMA2SSA	set	15321
   915  0000                     _DMA1SSA	set	15353
   916  0000                     _DMA2DSZ	set	15310
   917  0000                     _DMA2SSZ	set	15319
   918  0000                     _DMA2DSA	set	15312
   919  0000                     _DMA1DSZ	set	15342
   920  0000                     _DMA1SSZ	set	15351
   921  0000                     _DMA1DSA	set	15344
   922  0000                     _DMA1CON0bits	set	15356
   923  0000                     _DMA1CON1bits	set	15357
   924  0000                     _DMA2CON0	set	15324
   925  0000                     _DMA2AIRQ	set	15326
   926  0000                     _DMA2SIRQ	set	15327
   927  0000                     _DMA2CON1	set	15325
   928  0000                     _DMA1CON0	set	15356
   929  0000                     _DMA1AIRQ	set	15358
   930  0000                     _DMA1SIRQ	set	15359
   931  0000                     _DMA1CON1	set	15357
   932  0000                     _CLKRCON	set	15589
   933  0000                     _CLKRCLK	set	15590
   934  0000                     _SPI1INTFbits	set	15642
   935  0000                     _SPI1RXB	set	15632
   936  0000                     _SPI1TXB	set	15633
   937  0000                     _SPI1TCNTL	set	15634
   938  0000                     _SPI1CON0	set	15636
   939  0000                     _SPI1CLK	set	15644
   940  0000                     _SPI1BAUD	set	15641
   941  0000                     _SPI1CON2	set	15638
   942  0000                     _SPI1CON1	set	15637
   943  0000                     _U2RXB	set	15824
   944  0000                     _U2TXB	set	15826
   945  0000                     _U2ERRIE	set	15842
   946  0000                     _U2ERRIR	set	15841
   947  0000                     _U2UIR	set	15840
   948  0000                     _U2FIFO	set	15839
   949  0000                     _U2BRGH	set	15838
   950  0000                     _U2BRGL	set	15837
   951  0000                     _U2CON2	set	15836
   952  0000                     _U2CON1	set	15835
   953  0000                     _U2CON0	set	15834
   954  0000                     _U2P3L	set	15832
   955  0000                     _U2P2L	set	15830
   956  0000                     _U2P1L	set	15828
   957  0000                     _U1RXB	set	15848
   958  0000                     _U1TXB	set	15850
   959  0000                     _U1ERRIE	set	15866
   960  0000                     _U1ERRIR	set	15865
   961  0000                     _U1UIR	set	15864
   962  0000                     _U1FIFO	set	15863
   963  0000                     _U1BRGH	set	15862
   964  0000                     _U1BRGL	set	15861
   965  0000                     _U1CON2	set	15860
   966  0000                     _U1CON1	set	15859
   967  0000                     _U1CON0	set	15858
   968  0000                     _U1P3H	set	15857
   969  0000                     _U1P3L	set	15856
   970  0000                     _U1P2H	set	15855
   971  0000                     _U1P2L	set	15854
   972  0000                     _U1P1H	set	15853
   973  0000                     _U1P1L	set	15852
   974  0000                     _FVRCON	set	16065
   975  0000                     _ADFLTRL	set	16102
   976  0000                     _ADFLTRH	set	16103
   977  0000                     _ADCON0bits	set	16120
   978  0000                     _ADCON0	set	16120
   979  0000                     _ADCLK	set	16127
   980  0000                     _ADACT	set	16126
   981  0000                     _ADREF	set	16125
   982  0000                     _ADSTAT	set	16124
   983  0000                     _ADCON3	set	16123
   984  0000                     _ADCON2	set	16122
   985  0000                     _ADCON1	set	16121
   986  0000                     _ADPREH	set	16119
   987  0000                     _ADPREL	set	16118
   988  0000                     _ADCAP	set	16117
   989  0000                     _ADACQH	set	16116
   990  0000                     _ADACQL	set	16115
   991  0000                     _ADPCH	set	16113
   992  0000                     _ADRPT	set	16108
   993  0000                     _ADACCU	set	16106
   994  0000                     _ADSTPTH	set	16101
   995  0000                     _ADSTPTL	set	16100
   996  0000                     _ADUTHH	set	16097
   997  0000                     _ADUTHL	set	16096
   998  0000                     _ADLTHH	set	16095
   999  0000                     _ADLTHL	set	16094
  1000  0000                     _CCPTMRS1bits	set	16223
  1001  0000                     _PORTFbits	set	16335
  1002  0000                     _LATCbits	set	16316
  1003  0000                     _LATDbits	set	16317
  1004  0000                     _PORTBbits	set	16331
  1005  0000                     _T2CON	set	16300
  1006  0000                     _T2TMR	set	16298
  1007  0000                     _T2PR	set	16299
  1008  0000                     _T2RST	set	16303
  1009  0000                     _T2HLT	set	16301
  1010  0000                     _T2CLKCON	set	16302
  1011  0000                     _PWM8DCL	set	16224
  1012  0000                     _PWM8DCH	set	16225
  1013  0000                     _PWM8CON	set	16226
  1014  0000                     _LATEbits	set	16318
  1015  0000                     _T5CONbits	set	16282
  1016  0000                     _T5CON	set	16282
  1017  0000                     _TMR5L	set	16280
  1018  0000                     _TMR5H	set	16281
  1019  0000                     _T5CLK	set	16285
  1020  0000                     _T5GATE	set	16284
  1021  0000                     _T5GCON	set	16283
  1022  0000                     _T6CON	set	16276
  1023  0000                     _T6TMR	set	16274
  1024  0000                     _T6PR	set	16275
  1025  0000                     _T6RST	set	16279
  1026  0000                     _T6HLT	set	16277
  1027  0000                     _T6CLKCON	set	16278
  1028  0000                     _TRISD	set	16325
  1029  0000                     _TRISC	set	16324
  1030  0000                     _TRISB	set	16323
  1031  0000                     _TRISA	set	16322
  1032  0000                     _TRISF	set	16327
  1033  0000                     _TRISE	set	16326
  1034  0000                     _LATC	set	16316
  1035  0000                     _LATB	set	16315
  1036  0000                     _LATF	set	16319
  1037  0000                     _LATA	set	16314
  1038  0000                     _LATD	set	16317
  1039  0000                     _LATE	set	16318
  1040  0000                     _IVTLOCKbits	set	16340
  1041  0000                     _IVTLOCK	set	16340
  1042  0000                     _INTCON0bits	set	16338
  1043  0000                     _GIE	set	130711
  1044  00FED5                     
  1045                           ; BSR set to: 57
  1046  00FED5  20                 	db	32
  1047  00FED6  4D                 	db	77	;'M'
  1048  00FED7  65                 	db	101	;'e'
  1049  00FED8  73                 	db	115	;'s'
  1050  00FED9  67                 	db	103	;'g'
  1051  00FEDA  20                 	db	32
  1052  00FEDB  25                 	db	37
  1053  00FEDC  64                 	db	100	;'d'
  1054  00FEDD  20                 	db	32
  1055  00FEDE  53                 	db	83	;'S'
  1056  00FEDF  74                 	db	116	;'t'
  1057  00FEE0  61                 	db	97	;'a'
  1058  00FEE1  63                 	db	99	;'c'
  1059  00FEE2  6B                 	db	107	;'k'
  1060  00FEE3  20                 	db	32
  1061  00FEE4  25                 	db	37
  1062  00FEE5  64                 	db	100	;'d'
  1063  00FEE6  20                 	db	32
  1064  00FEE7  20                 	db	32
  1065  00FEE8  20                 	db	32
  1066  00FEE9  20                 	db	32
  1067  00FEEA  20                 	db	32
  1068  00FEEB  20                 	db	32
  1069  00FEEC  00                 	db	0
  1070  00FEED                     STR_27:
  1071                           
  1072                           ; BSR set to: 57
  1073  00FEED  20                 	db	32
  1074  00FEEE  20                 	db	32
  1075  00FEEF  20                 	db	32
  1076  00FEF0  20                 	db	32
  1077  00FEF1  20                 	db	32
  1078  00FEF2  20                 	db	32
  1079  00FEF3  20                 	db	32
  1080  00FEF4  20                 	db	32
  1081  00FEF5  20                 	db	32
  1082  00FEF6  20                 	db	32
  1083  00FEF7  20                 	db	32
  1084  00FEF8  20                 	db	32
  1085  00FEF9  20                 	db	32
  1086  00FEFA  20                 	db	32
  1087  00FEFB  20                 	db	32
  1088  00FEFC  20                 	db	32
  1089  00FEFD  20                 	db	32
  1090  00FEFE  20                 	db	32
  1091  00FEFF  00                 	db	0
  1092  00FF00                     STR_17:
  1093                           
  1094                           ; BSR set to: 57
  1095  00FF00  48                 	db	72	;'H'
  1096  00FF01  45                 	db	69	;'E'
  1097  00FF02  4C                 	db	76	;'L'
  1098  00FF03  50                 	db	80	;'P'
  1099  00FF04  20                 	db	32
  1100  00FF05  25                 	db	37
  1101  00FF06  73                 	db	115	;'s'
  1102  00FF07  20                 	db	32
  1103  00FF08  20                 	db	32
  1104  00FF09  20                 	db	32
  1105  00FF0A  20                 	db	32
  1106  00FF0B  20                 	db	32
  1107  00FF0C  20                 	db	32
  1108  00FF0D  20                 	db	32
  1109  00FF0E  20                 	db	32
  1110  00FF0F  20                 	db	32
  1111  00FF10  20                 	db	32
  1112  00FF11  20                 	db	32
  1113  00FF12  00                 	db	0
  1114  00FF13                     
  1115                           ; BSR set to: 57
  1116  00FF13  44                 	db	68	;'D'
  1117  00FF14  49                 	db	73	;'I'
  1118  00FF15  53                 	db	83	;'S'
  1119  00FF16  50                 	db	80	;'P'
  1120  00FF17  4C                 	db	76	;'L'
  1121  00FF18  41                 	db	65	;'A'
  1122  00FF19  59                 	db	89	;'Y'
  1123  00FF1A  20                 	db	32
  1124  00FF1B  25                 	db	37
  1125  00FF1C  73                 	db	115	;'s'
  1126  00FF1D  20                 	db	32
  1127  00FF1E  20                 	db	32
  1128  00FF1F  20                 	db	32
  1129  00FF20  20                 	db	32
  1130  00FF21  20                 	db	32
  1131  00FF22  20                 	db	32
  1132  00FF23  20                 	db	32
  1133  00FF24  20                 	db	32
  1134  00FF25  00                 	db	0
  1135  00FF26                     STR_10:
  1136                           
  1137                           ; BSR set to: 57
  1138  00FF26  42                 	db	66	;'B'
  1139  00FF27  56                 	db	86	;'V'
  1140  00FF28  20                 	db	32
  1141  00FF29  25                 	db	37
  1142  00FF2A  32                 	db	50	;'2'
  1143  00FF2B  2E                 	db	46
  1144  00FF2C  32                 	db	50	;'2'
  1145  00FF2D  66                 	db	102	;'f'
  1146  00FF2E  20                 	db	32
  1147  00FF2F  42                 	db	66	;'B'
  1148  00FF30  43                 	db	67	;'C'
  1149  00FF31  20                 	db	32
  1150  00FF32  25                 	db	37
  1151  00FF33  32                 	db	50	;'2'
  1152  00FF34  2E                 	db	46
  1153  00FF35  32                 	db	50	;'2'
  1154  00FF36  66                 	db	102	;'f'
  1155  00FF37  20                 	db	32
  1156  00FF38  00                 	db	0
  1157  00FF39                     STR_9:
  1158                           
  1159                           ; BSR set to: 57
  1160  00FF39  50                 	db	80	;'P'
  1161  00FF3A  56                 	db	86	;'V'
  1162  00FF3B  20                 	db	32
  1163  00FF3C  25                 	db	37
  1164  00FF3D  32                 	db	50	;'2'
  1165  00FF3E  2E                 	db	46
  1166  00FF3F  32                 	db	50	;'2'
  1167  00FF40  66                 	db	102	;'f'
  1168  00FF41  20                 	db	32
  1169  00FF42  50                 	db	80	;'P'
  1170  00FF43  43                 	db	67	;'C'
  1171  00FF44  20                 	db	32
  1172  00FF45  25                 	db	37
  1173  00FF46  32                 	db	50	;'2'
  1174  00FF47  2E                 	db	46
  1175  00FF48  32                 	db	50	;'2'
  1176  00FF49  66                 	db	102	;'f'
  1177  00FF4A  20                 	db	32
  1178  00FF4B  00                 	db	0
  1179  00FF4C                     STR_11:
  1180                           
  1181                           ; BSR set to: 57
  1182  00FF4C  43                 	db	67	;'C'
  1183  00FF4D  56                 	db	86	;'V'
  1184  00FF4E  20                 	db	32
  1185  00FF4F  25                 	db	37
  1186  00FF50  32                 	db	50	;'2'
  1187  00FF51  2E                 	db	46
  1188  00FF52  32                 	db	50	;'2'
  1189  00FF53  66                 	db	102	;'f'
  1190  00FF54  20                 	db	32
  1191  00FF55  49                 	db	73	;'I'
  1192  00FF56  56                 	db	86	;'V'
  1193  00FF57  20                 	db	32
  1194  00FF58  25                 	db	37
  1195  00FF59  32                 	db	50	;'2'
  1196  00FF5A  2E                 	db	46
  1197  00FF5B  32                 	db	50	;'2'
  1198  00FF5C  66                 	db	102	;'f'
  1199  00FF5D  20                 	db	32
  1200  00FF5E  00                 	db	0
  1201  00FF5F                     STR_8:
  1202                           
  1203                           ; BSR set to: 57
  1204  00FF5F  20                 	db	32
  1205  00FF60  56                 	db	86	;'V'
  1206  00FF61  54                 	db	84	;'T'
  1207  00FF62  45                 	db	69	;'E'
  1208  00FF63  52                 	db	82	;'R'
  1209  00FF64  4D                 	db	77	;'M'
  1210  00FF65  20                 	db	32
  1211  00FF66  23                 	db	35
  1212  00FF67  32                 	db	50	;'2'
  1213  00FF68  20                 	db	32
  1214  00FF69  20                 	db	32
  1215  00FF6A  20                 	db	32
  1216  00FF6B  20                 	db	32
  1217  00FF6C  20                 	db	32
  1218  00FF6D  20                 	db	32
  1219  00FF6E  20                 	db	32
  1220  00FF6F  00                 	db	0
  1221  00FF70                     STR_4:
  1222                           
  1223                           ; BSR set to: 57
  1224  00FF70  20                 	db	32
  1225  00FF71  4E                 	db	78	;'N'
  1226  00FF72  53                 	db	83	;'S'
  1227  00FF73  41                 	db	65	;'A'
  1228  00FF74  53                 	db	83	;'S'
  1229  00FF75  50                 	db	80	;'P'
  1230  00FF76  4F                 	db	79	;'O'
  1231  00FF77  4F                 	db	79	;'O'
  1232  00FF78  4B                 	db	75	;'K'
  1233  00FF79  20                 	db	32
  1234  00FF7A  20                 	db	32
  1235  00FF7B  20                 	db	32
  1236  00FF7C  20                 	db	32
  1237  00FF7D  20                 	db	32
  1238  00FF7E  20                 	db	32
  1239  00FF7F  20                 	db	32
  1240  00FF80  00                 	db	0
  1241  00FF81                     STR_1:
  1242                           
  1243                           ; BSR set to: 57
  1244  00FF81  20                 	db	32
  1245  00FF82  4D                 	db	77	;'M'
  1246  00FF83  42                 	db	66	;'B'
  1247  00FF84  4D                 	db	77	;'M'
  1248  00FF85  43                 	db	67	;'C'
  1249  00FF86  20                 	db	32
  1250  00FF87  53                 	db	83	;'S'
  1251  00FF88  4F                 	db	79	;'O'
  1252  00FF89  4C                 	db	76	;'L'
  1253  00FF8A  41                 	db	65	;'A'
  1254  00FF8B  52                 	db	82	;'R'
  1255  00FF8C  4D                 	db	77	;'M'
  1256  00FF8D  4F                 	db	79	;'O'
  1257  00FF8E  4E                 	db	78	;'N'
  1258  00FF8F  20                 	db	32
  1259  00FF90  20                 	db	32
  1260  00FF91  00                 	db	0
  1261  00FF92                     STR_5:
  1262                           
  1263                           ; BSR set to: 57
  1264  00FF92  20                 	db	32
  1265  00FF93  53                 	db	83	;'S'
  1266  00FF94  45                 	db	69	;'E'
  1267  00FF95  51                 	db	81	;'Q'
  1268  00FF96  55                 	db	85	;'U'
  1269  00FF97  45                 	db	69	;'E'
  1270  00FF98  4E                 	db	78	;'N'
  1271  00FF99  43                 	db	67	;'C'
  1272  00FF9A  45                 	db	69	;'E'
  1273  00FF9B  20                 	db	32
  1274  00FF9C  54                 	db	84	;'T'
  1275  00FF9D  45                 	db	69	;'E'
  1276  00FF9E  53                 	db	83	;'S'
  1277  00FF9F  54                 	db	84	;'T'
  1278  00FFA0  20                 	db	32
  1279  00FFA1  20                 	db	32
  1280  00FFA2  00                 	db	0
  1281  00FFA3                     STR_21:
  1282                           
  1283                           ; BSR set to: 57
  1284  00FFA3  76                 	db	118	;'v'
  1285  00FFA4  74                 	db	116	;'t'
  1286  00FFA5  65                 	db	101	;'e'
  1287  00FFA6  72                 	db	114	;'r'
  1288  00FFA7  6D                 	db	109	;'m'
  1289  00FFA8  20                 	db	32
  1290  00FFA9  25                 	db	37
  1291  00FFAA  78                 	db	120	;'x'
  1292  00FFAB  3A                 	db	58	;':'
  1293  00FFAC  25                 	db	37
  1294  00FFAD  78                 	db	120	;'x'
  1295  00FFAE  20                 	db	32
  1296  00FFAF  20                 	db	32
  1297  00FFB0  20                 	db	32
  1298  00FFB1  00                 	db	0
  1299  00FFB2                     STR_2:
  1300                           
  1301                           ; BSR set to: 57
  1302  00FFB2  20                 	db	32
  1303  00FFB3  56                 	db	86	;'V'
  1304  00FFB4  65                 	db	101	;'e'
  1305  00FFB5  72                 	db	114	;'r'
  1306  00FFB6  73                 	db	115	;'s'
  1307  00FFB7  69                 	db	105	;'i'
  1308  00FFB8  6F                 	db	111	;'o'
  1309  00FFB9  6E                 	db	110	;'n'
  1310  00FFBA  20                 	db	32
  1311  00FFBB  25                 	db	37
  1312  00FFBC  73                 	db	115	;'s'
  1313  00FFBD  20                 	db	32
  1314  00FFBE  20                 	db	32
  1315  00FFBF  20                 	db	32
  1316  00FFC0  00                 	db	0
  1317  00FFC1                     STR_15:
  1318                           
  1319                           ; BSR set to: 57
  1320  00FFC1  4E                 	db	78	;'N'
  1321  00FFC2  6F                 	db	111	;'o'
  1322  00FFC3  76                 	db	118	;'v'
  1323  00FFC4  20                 	db	32
  1324  00FFC5  32                 	db	50	;'2'
  1325  00FFC6  37                 	db	55	;'7'
  1326  00FFC7  20                 	db	32
  1327  00FFC8  32                 	db	50	;'2'
  1328  00FFC9  30                 	db	48	;'0'
  1329  00FFCA  31                 	db	49	;'1'
  1330  00FFCB  39                 	db	57	;'9'
  1331  00FFCC  00                 	db	0
  1332  00FFCD                     STR_19:
  1333                           
  1334                           ; BSR set to: 57
  1335  00FFCD  25                 	db	37
  1336  00FFCE  73                 	db	115	;'s'
  1337  00FFCF  20                 	db	32
  1338  00FFD0  20                 	db	32
  1339  00FFD1  20                 	db	32
  1340  00FFD2  20                 	db	32
  1341  00FFD3  20                 	db	32
  1342  00FFD4  20                 	db	32
  1343  00FFD5  20                 	db	32
  1344  00FFD6  00                 	db	0
  1345  00FFD7                     STR_16:
  1346                           
  1347                           ; BSR set to: 57
  1348  00FFD7  30                 	db	48	;'0'
  1349  00FFD8  39                 	db	57	;'9'
  1350  00FFD9  3A                 	db	58	;':'
  1351  00FFDA  31                 	db	49	;'1'
  1352  00FFDB  31                 	db	49	;'1'
  1353  00FFDC  3A                 	db	58	;':'
  1354  00FFDD  34                 	db	52	;'4'
  1355  00FFDE  37                 	db	55	;'7'
  1356  00FFDF  00                 	db	0
  1357  00FFE0                     STR_3:
  1358                           
  1359                           ; BSR set to: 57
  1360  00FFE0  30                 	db	48	;'0'
  1361  00FFE1  2E                 	db	46
  1362  00FFE2  39                 	db	57	;'9'
  1363  00FFE3  38                 	db	56	;'8'
  1364  00FFE4  00                 	db	0
  1365  00FFE5                     STR_34:
  1366                           
  1367                           ; BSR set to: 57
  1368  00FFE5  49                 	db	73	;'I'
  1369  00FFE6  4E                 	db	78	;'N'
  1370  00FFE7  46                 	db	70	;'F'
  1371  00FFE8  00                 	db	0
  1372  00FFE9                     STR_38:
  1373                           
  1374                           ; BSR set to: 57
  1375  00FFE9  4E                 	db	78	;'N'
  1376  00FFEA  41                 	db	65	;'A'
  1377  00FFEB  4E                 	db	78	;'N'
  1378  00FFEC  00                 	db	0
  1379  00FFED                     STR_35:
  1380                           
  1381                           ; BSR set to: 57
  1382  00FFED  69                 	db	105	;'i'
  1383  00FFEE  6E                 	db	110	;'n'
  1384  00FFEF  66                 	db	102	;'f'
  1385  00FFF0  00                 	db	0
  1386  00FFF1                     STR_39:
  1387                           
  1388                           ; BSR set to: 57
  1389  00FFF1  6E                 	db	110	;'n'
  1390  00FFF2  61                 	db	97	;'a'
  1391  00FFF3  6E                 	db	110	;'n'
  1392  00FFF4  00                 	db	0
  1393  00FFF5                     STR_42:
  1394                           
  1395                           ; BSR set to: 57
  1396  00FFF5  6C                 	db	108	;'l'
  1397  00FFF6  66                 	db	102	;'f'
  1398  00FFF7  00                 	db	0
  1399  00FFF8                     STR_13:
  1400                           
  1401                           ; BSR set to: 57
  1402  00FFF8  25                 	db	37
  1403  00FFF9  63                 	db	99	;'c'
  1404  00FFFA  00                 	db	0
  1405  00FFFB                     STR_12:
  1406                           
  1407                           ; BSR set to: 57
  1408  00FFFB  25                 	db	37
  1409  00FFFC  73                 	db	115	;'s'
  1410  00FFFD  00                 	db	0
  1411  0000                     
  1412                           ; #config settings
  1413  00FFFE  00                 	db	0	; dummy byte at the end
  1414  0000                     
  1415                           	psect	cinit
  1416  016946                     __pcinit:
  1417                           	opt callstack 0
  1418  016946                     start_initialization:
  1419                           	opt callstack 0
  1420  016946                     __initialization:
  1421                           	opt callstack 0
  1422                           
  1423                           ; Initialize objects allocated to BANK2 (16 bytes)
  1424                           ; load TBLPTR registers with __pidataBANK2
  1425  016946  0E62               	movlw	low __pidataBANK2
  1426  016948  6EF6               	movwf	tblptrl,c
  1427  01694A  0E84               	movlw	high __pidataBANK2
  1428  01694C  6EF7               	movwf	tblptrh,c
  1429  01694E  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1430  016950  6EF8               	movwf	tblptru,c
  1431  016952  EE00  F290         	lfsr	0,__pdataBANK2
  1432  016956  EE20 F010          	lfsr	2,16
  1433  01695A                     copy_data0:
  1434  01695A  0009               	tblrd		*+
  1435  01695C  006F FFD7 FFEE     	movff	tablat,postinc0
  1436  016962  50DD               	movf	postdec2,w,c
  1437  016964  50D9               	movf	fsr2l,w,c
  1438  016966  E1F9               	bnz	copy_data0
  1439                           
  1440                           ; Initialize objects allocated to BANK1 (187 bytes)
  1441                           ; load TBLPTR registers with __pidataBANK1
  1442  016968  0EBC               	movlw	low __pidataBANK1
  1443  01696A  6EF6               	movwf	tblptrl,c
  1444  01696C  0E6C               	movlw	high __pidataBANK1
  1445  01696E  6EF7               	movwf	tblptrh,c
  1446  016970  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1447  016972  6EF8               	movwf	tblptru,c
  1448  016974  EE00  F100         	lfsr	0,__pdataBANK1
  1449  016978  EE20 F0BB          	lfsr	2,187
  1450  01697C                     copy_data1:
  1451  01697C  0009               	tblrd		*+
  1452  01697E  006F FFD7 FFEE     	movff	tablat,postinc0
  1453  016984  50DD               	movf	postdec2,w,c
  1454  016986  50D9               	movf	fsr2l,w,c
  1455  016988  E1F9               	bnz	copy_data1
  1456                           
  1457                           ; Initialize objects allocated to BANK0 (47 bytes)
  1458                           ; load TBLPTR registers with __pidataBANK0
  1459  01698A  0E1A               	movlw	low __pidataBANK0
  1460  01698C  6EF6               	movwf	tblptrl,c
  1461  01698E  0E7E               	movlw	high __pidataBANK0
  1462  016990  6EF7               	movwf	tblptrh,c
  1463  016992  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1464  016994  6EF8               	movwf	tblptru,c
  1465  016996  EE00  F0C7         	lfsr	0,__pdataBANK0
  1466  01699A  EE20 F02F          	lfsr	2,47
  1467  01699E                     copy_data2:
  1468  01699E  0009               	tblrd		*+
  1469  0169A0  006F FFD7 FFEE     	movff	tablat,postinc0
  1470  0169A6  50DD               	movf	postdec2,w,c
  1471  0169A8  50D9               	movf	fsr2l,w,c
  1472  0169AA  E1F9               	bnz	copy_data2
  1473                           
  1474                           ; Clear objects allocated to BANK7 (255 bytes)
  1475  0169AC  EE01  F300         	lfsr	0,__pbssBANK7
  1476  0169B0  EE20 F0FF          	lfsr	2,255
  1477  0169B4                     clear_0:
  1478  0169B4  6AEE               	clrf	postinc0,c
  1479  0169B6  50DD               	movf	postdec2,w,c
  1480  0169B8  50D9               	movf	fsr2l,w,c
  1481  0169BA  E1FC               	bnz	clear_0
  1482  0169BC  50DA               	movf	fsr2h,w,c
  1483  0169BE  E1FA               	bnz	clear_0
  1484                           
  1485                           ; Clear objects allocated to BANK6 (255 bytes)
  1486  0169C0  EE01  F200         	lfsr	0,__pbssBANK6
  1487  0169C4  EE20 F0FF          	lfsr	2,255
  1488  0169C8                     clear_1:
  1489  0169C8  6AEE               	clrf	postinc0,c
  1490  0169CA  50DD               	movf	postdec2,w,c
  1491  0169CC  50D9               	movf	fsr2l,w,c
  1492  0169CE  E1FC               	bnz	clear_1
  1493  0169D0  50DA               	movf	fsr2h,w,c
  1494  0169D2  E1FA               	bnz	clear_1
  1495                           
  1496                           ; Clear objects allocated to BANK5 (218 bytes)
  1497  0169D4  EE01  F100         	lfsr	0,__pbssBANK5
  1498  0169D8  0EDA               	movlw	218
  1499  0169DA                     clear_2:
  1500  0169DA  6AEE               	clrf	postinc0,c
  1501  0169DC  06E8               	decf	wreg,f,c
  1502  0169DE  E1FD               	bnz	clear_2
  1503                           
  1504                           ; Clear objects allocated to BANK4 (134 bytes)
  1505  0169E0  EE01  F000         	lfsr	0,__pbssBANK4
  1506  0169E4  0E86               	movlw	134
  1507  0169E6                     clear_3:
  1508  0169E6  6AEE               	clrf	postinc0,c
  1509  0169E8  06E8               	decf	wreg,f,c
  1510  0169EA  E1FD               	bnz	clear_3
  1511                           
  1512                           ; Clear objects allocated to BANK3 (236 bytes)
  1513  0169EC  EE00  F300         	lfsr	0,__pbssBANK3
  1514  0169F0  0EEC               	movlw	236
  1515  0169F2                     clear_4:
  1516  0169F2  6AEE               	clrf	postinc0,c
  1517  0169F4  06E8               	decf	wreg,f,c
  1518  0169F6  E1FD               	bnz	clear_4
  1519                           
  1520                           ; Clear objects allocated to BANK2 (144 bytes)
  1521  0169F8  EE00  F200         	lfsr	0,__pbssBANK2
  1522  0169FC  0E90               	movlw	144
  1523  0169FE                     clear_5:
  1524  0169FE  6AEE               	clrf	postinc0,c
  1525  016A00  06E8               	decf	wreg,f,c
  1526  016A02  E1FD               	bnz	clear_5
  1527                           
  1528                           ; Clear objects allocated to BANK1 (8 bytes)
  1529  016A04  EE00  F1BB         	lfsr	0,__pbssBANK1
  1530  016A08  0E08               	movlw	8
  1531  016A0A                     clear_6:
  1532  016A0A  6AEE               	clrf	postinc0,c
  1533  016A0C  06E8               	decf	wreg,f,c
  1534  016A0E  E1FD               	bnz	clear_6
  1535                           
  1536                           ; Clear objects allocated to BANK0 (103 bytes)
  1537  016A10  EE00  F060         	lfsr	0,__pbssBANK0
  1538  016A14  0E67               	movlw	103
  1539  016A16                     clear_7:
  1540  016A16  6AEE               	clrf	postinc0,c
  1541  016A18  06E8               	decf	wreg,f,c
  1542  016A1A  E1FD               	bnz	clear_7
  1543                           
  1544                           ; Clear objects allocated to COMRAM (49 bytes)
  1545  016A1C  EE00  F001         	lfsr	0,__pbssCOMRAM
  1546  016A20  0E31               	movlw	49
  1547  016A22                     clear_8:
  1548  016A22  6AEE               	clrf	postinc0,c
  1549  016A24  06E8               	decf	wreg,f,c
  1550  016A26  E1FD               	bnz	clear_8
  1551                           
  1552                           ;
  1553                           ; Setup IVTBASE
  1554                           ;
  1555  016A28  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1556  016A2A  6ED5               	movwf	213,c
  1557  016A2C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1558  016A2E  6ED6               	movwf	214,c
  1559  016A30  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1560  016A32  6ED7               	movwf	215,c
  1561  016A34                     end_of_initialization:
  1562                           	opt callstack 0
  1563  016A34                     __end_of__initialization:
  1564                           	opt callstack 0
  1565  016A34  0100               	movlb	0
  1566  016A36  EF07  F09E         	goto	_main	;jump to C main() function
  1567                           
  1568                           	psect	bssCOMRAM
  1569  000001                     __pbssCOMRAM:
  1570                           	opt callstack 0
  1571  000001                     _ADCC_ADTI_InterruptHandler:
  1572                           	opt callstack 0
  1573  000001                     	ds	3
  1574  000004                     _ADCC_ADI_InterruptHandler:
  1575                           	opt callstack 0
  1576  000004                     	ds	3
  1577  000007                     _UART1_TxInterruptHandler:
  1578                           	opt callstack 0
  1579  000007                     	ds	3
  1580  00000A                     _UART1_RxInterruptHandler:
  1581                           	opt callstack 0
  1582  00000A                     	ds	3
  1583  00000D                     _UART2_TxInterruptHandler:
  1584                           	opt callstack 0
  1585  00000D                     	ds	3
  1586  000010                     _UART2_RxInterruptHandler:
  1587                           	opt callstack 0
  1588  000010                     	ds	3
  1589  000013                     _INT1_InterruptHandler:
  1590                           	opt callstack 0
  1591  000013                     	ds	3
  1592  000016                     _INT0_InterruptHandler:
  1593                           	opt callstack 0
  1594  000016                     	ds	3
  1595  000019                     _nout:
  1596                           	opt callstack 0
  1597  000019                     	ds	2
  1598  00001B                     _width:
  1599                           	opt callstack 0
  1600  00001B                     	ds	2
  1601  00001D                     _prec:
  1602                           	opt callstack 0
  1603  00001D                     	ds	2
  1604  00001F                     _flags:
  1605                           	opt callstack 0
  1606  00001F                     	ds	2
  1607  000021                     TMR5_ISR@CountCallBack:
  1608                           	opt callstack 0
  1609  000021                     	ds	2
  1610  000023                     _timer5ReloadVal:
  1611                           	opt callstack 0
  1612  000023                     	ds	2
  1613  000025                     _mode_sw:
  1614                           	opt callstack 0
  1615  000025                     	ds	1
  1616  000026                     _uart2RxCount:
  1617                           	opt callstack 0
  1618  000026                     	ds	1
  1619  000027                     _uart2RxTail:
  1620                           	opt callstack 0
  1621  000027                     	ds	1
  1622  000028                     _uart2RxHead:
  1623                           	opt callstack 0
  1624  000028                     	ds	1
  1625  000029                     _uart2TxBufferRemaining:
  1626                           	opt callstack 0
  1627  000029                     	ds	1
  1628  00002A                     _uart2TxTail:
  1629                           	opt callstack 0
  1630  00002A                     	ds	1
  1631  00002B                     _uart2TxHead:
  1632                           	opt callstack 0
  1633  00002B                     	ds	1
  1634  00002C                     _uart1RxCount:
  1635                           	opt callstack 0
  1636  00002C                     	ds	1
  1637  00002D                     _uart1RxTail:
  1638                           	opt callstack 0
  1639  00002D                     	ds	1
  1640  00002E                     _uart1RxHead:
  1641                           	opt callstack 0
  1642  00002E                     	ds	1
  1643  00002F                     _uart1TxBufferRemaining:
  1644                           	opt callstack 0
  1645  00002F                     	ds	1
  1646  000030                     _uart1TxTail:
  1647                           	opt callstack 0
  1648  000030                     	ds	1
  1649  000031                     _uart1TxHead:
  1650                           	opt callstack 0
  1651  000031                     	ds	1
  1652                           
  1653                           	psect	bssBANK0
  1654  000060                     __pbssBANK0:
  1655                           	opt callstack 0
  1656  000060                     _S:
  1657                           	opt callstack 0
  1658  000060                     	ds	41
  1659  000089                     _tickCount:
  1660                           	opt callstack 0
  1661  000089                     	ds	24
  1662  0000A1                     _spi_link:
  1663                           	opt callstack 0
  1664  0000A1                     	ds	12
  1665  0000AD                     floorf@F524:
  1666                           	opt callstack 0
  1667  0000AD                     	ds	4
  1668  0000B1                     ___fpclassifyf@F463:
  1669                           	opt callstack 0
  1670  0000B1                     	ds	4
  1671  0000B5                     _utctime:
  1672                           	opt callstack 0
  1673  0000B5                     	ds	4
  1674  0000B9                     wdtdelay@dcount:
  1675                           	opt callstack 0
  1676  0000B9                     	ds	4
  1677  0000BD                     _P:
  1678                           	opt callstack 0
  1679  0000BD                     	ds	4
  1680  0000C1                     _TMR5_InterruptHandler:
  1681                           	opt callstack 0
  1682  0000C1                     	ds	3
  1683  0000C4                     _TMR6_InterruptHandler:
  1684                           	opt callstack 0
  1685  0000C4                     	ds	3
  1686                           
  1687                           	psect	dataBANK0
  1688  0000C7                     __pdataBANK0:
  1689                           	opt callstack 0
  1690  0000C7                     _R:
  1691                           	opt callstack 0
  1692  0000C7                     	ds	40
  1693  0000EF                     stoa@F1166:
  1694                           	opt callstack 0
  1695  0000EF                     	ds	7
  1696                           
  1697                           	psect	bssBANK1
  1698  0001BB                     __pbssBANK1:
  1699                           	opt callstack 0
  1700  0001BB                     _seed:
  1701                           	opt callstack 0
  1702  0001BB                     	ds	8
  1703                           
  1704                           	psect	dataBANK1
  1705  000100                     __pdataBANK1:
  1706                           	opt callstack 0
  1707  000100                     _V:
  1708                           	opt callstack 0
  1709  000100                     	ds	187
  1710                           
  1711                           	psect	bssBANK2
  1712  000200                     __pbssBANK2:
  1713                           	opt callstack 0
  1714  000200                     lp_filter@smooth:
  1715                           	opt callstack 0
  1716  000200                     	ds	64
  1717  000240                     _dbuf:
  1718                           	opt callstack 0
  1719  000240                     	ds	80
  1720                           
  1721                           	psect	dataBANK2
  1722  000290                     __pdataBANK2:
  1723                           	opt callstack 0
  1724  000290                     _port_data:
  1725                           	opt callstack 0
  1726  000290                     	ds	16
  1727                           
  1728                           	psect	bssBANK3
  1729  000300                     __pbssBANK3:
  1730                           	opt callstack 0
  1731  000300                     _C:
  1732                           	opt callstack 0
  1733  000300                     	ds	108
  1734  00036C                     _uart2TxBuffer:
  1735                           	opt callstack 0
  1736  00036C                     	ds	64
  1737  0003AC                     _uart1TxBuffer:
  1738                           	opt callstack 0
  1739  0003AC                     	ds	64
  1740                           
  1741                           	psect	bssBANK4
  1742  000400                     __pbssBANK4:
  1743                           	opt callstack 0
  1744  000400                     _ring_buf2:
  1745                           	opt callstack 0
  1746  000400                     	ds	67
  1747  000443                     _ring_buf1:
  1748                           	opt callstack 0
  1749  000443                     	ds	67
  1750                           
  1751                           	psect	bssBANK5
  1752  000500                     __pbssBANK5:
  1753                           	opt callstack 0
  1754  000500                     _D:
  1755                           	opt callstack 0
  1756  000500                     	ds	218
  1757                           
  1758                           	psect	bssBANK6
  1759  000600                     __pbssBANK6:
  1760                           	opt callstack 0
  1761  000600                     _uart1RxBuffer:
  1762                           	opt callstack 0
  1763  000600                     	ds	255
  1764                           
  1765                           	psect	bssBANK7
  1766  000700                     __pbssBANK7:
  1767                           	opt callstack 0
  1768  000700                     _uart2RxBuffer:
  1769                           	opt callstack 0
  1770  000700                     	ds	255
  1771                           
  1772                           	psect	cstackBANK1
  1773  0001C3                     __pcstackBANK1:
  1774                           	opt callstack 0
  1775  0001C3                     ??_TMR5_ISR:
  1776                           
  1777                           ; 1 bytes @ 0x0
  1778  0001C3                     	ds	4
  1779                           
  1780                           	psect	cstackBANK0
  1781  0000F6                     __pcstackBANK0:
  1782                           	opt callstack 0
  1783  0000F6                     ??_INT1_ISR:
  1784                           
  1785                           ; 1 bytes @ 0x0
  1786  0000F6                     	ds	4
  1787                           
  1788                           	psect	cstackCOMRAM
  1789  000052                     __pcstackCOMRAM:
  1790                           	opt callstack 0
  1791  000052                     ??_ADCC_ThresholdISR:
  1792  000052                     
  1793                           ; 1 bytes @ 0x0
  1794  000052                     	ds	5
  1795  000057                     ??_TMR6_ISR:
  1796                           
  1797                           ; 1 bytes @ 0x5
  1798  000057                     	ds	1
  1799  000058                     
  1800                           ; 1 bytes @ 0x6
  1801 ;;
  1802 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1803 ;;
  1804 ;; *************** function _main *****************
  1805 ;; Defined at:
  1806 ;;		line 158 in file "main.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;		None
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  mode            1  [STACK] enum E17005
  1811 ;;  k               1    0        unsigned char 
  1812 ;;  j               1    0        unsigned char 
  1813 ;;  i               1    0        unsigned char 
  1814 ;;  inp_index       1    0        unsigned char 
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1  [STACK] void 
  1817 ;; Registers used:
  1818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 1/1
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1828 ;;Total ram usage:        0 bytes
  1829 ;; Hardware stack levels required when called:   19
  1830 ;; This function calls:
  1831 ;;		_SYSTEM_Initialize
  1832 ;;		_StartTimer
  1833 ;;		_TimerDone
  1834 ;;		_WaitMs
  1835 ;;		_check_adc_scan
  1836 ;;		_check_help
  1837 ;;		_clear_adc_scan
  1838 ;;		_convert_adc_data
  1839 ;;		_eaDogM_WriteCommand
  1840 ;;		_get_vterm_ptr
  1841 ;;		_init_display
  1842 ;;		_mode_lamp_dim
  1843 ;;		_set_display_info
  1844 ;;		_set_vterm
  1845 ;;		_sprintf
  1846 ;;		_srand
  1847 ;;		_start_adc_scan
  1848 ;;		_start_switch_handler
  1849 ;;		_update_lcd
  1850 ;; This function is called by:
  1851 ;;		Startup code after reset
  1852 ;; This function uses a reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text0
  1856  013C0E                     __ptext0:
  1857                           	opt callstack 0
  1858  013C0E                     _main:
  1859                           	opt callstack 0
  1860                           
  1861                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1862  013C0E  52E6               	movf	postinc1,f,c
  1863                           
  1864                           ;main.c: 163:  SYSTEM_Initialize();
  1865                           
  1866                           ;incstack = 0
  1867  013C10  EC35  F0BD         	call	_SYSTEM_Initialize	;wreg free
  1868                           
  1869                           ; BSR set to: 60
  1870                           ;main.c: 166:  (INTCON0bits.GIEH = 1);
  1871  013C14  8ED2               	bsf	210,7,c	;volatile
  1872                           
  1873                           ; BSR set to: 60
  1874                           ;main.c: 169:  (INTCON0bits.GIEL = 1);
  1875  013C16  8CD2               	bsf	210,6,c	;volatile
  1876                           
  1877                           ; BSR set to: 60
  1878                           ;main.c: 171:  V.ui_state = UI_STATE_INIT;
  1879  013C18  0101               	movlb	1	; () banked
  1880  013C1A  6B00               	clrf	_V& (0+255),b	;volatile
  1881                           
  1882                           ; BSR set to: 1
  1883                           ;main.c: 176:  WaitMs(300);
  1884  013C1C  0E2C               	movlw	44
  1885  013C1E  6EE6               	movwf	postinc1,c
  1886  013C20  0E01               	movlw	1
  1887  013C22  6EE6               	movwf	postinc1,c
  1888  013C24  EC5B  F0BE         	call	_WaitMs	;wreg free
  1889                           
  1890                           ;main.c: 177:  if (PORTBbits.RB0) {
  1891  013C28  A0CB               	btfss	203,0,c	;volatile
  1892  013C2A  D004               	goto	l11942
  1893                           
  1894                           ;main.c: 178:   mode = UI_STATE_HOST;
  1895                           ;stkvar	_mode @ sp[(-1)+0]
  1896  013C2C  0EFF               	movlw	-1
  1897  013C2E  6AE3               	clrf	plusw1,c
  1898  013C30  2AE3               	incf	plusw1,f,c
  1899                           
  1900                           ;main.c: 179:  } else {
  1901  013C32  D004               	goto	l11944
  1902  013C34                     l11942:
  1903                           
  1904                           ;main.c: 180:   mode = UI_STATE_LOG;
  1905                           ;stkvar	_mode @ sp[(-1)+0]
  1906  013C34  0EFF               	movlw	-1
  1907  013C36  6AE3               	clrf	plusw1,c
  1908  013C38  80E3               	bsf	plusw1,0,c
  1909  013C3A  82E3               	bsf	plusw1,1,c	;indir
  1910  013C3C                     l11944:
  1911                           
  1912                           ;main.c: 183:  if (mode == UI_STATE_HOST) {
  1913                           ;stkvar	_mode @ sp[(-1)+0]
  1914  013C3C  0EFF               	movlw	-1
  1915  013C3E  04E3               	decf	plusw1,w,c
  1916  013C40  A4D8               	btfss	status,2,c
  1917  013C42  D007               	goto	l1242
  1918                           
  1919                           ;main.c: 184:   do { LATDbits.LATD0 = 1; } while(0);
  1920  013C44  80BD               	bsf	189,0,c	;volatile
  1921                           
  1922                           ;main.c: 185:   V.mode_pwm = 70;
  1923  013C46  0E00               	movlw	0
  1924  013C48  0101               	movlb	1	; () banked
  1925  013C4A  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  1926  013C4C  0E46               	movlw	70
  1927  013C4E  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  1928                           
  1929                           ;main.c: 186:  } else {
  1930  013C50  D004               	goto	l11948
  1931  013C52                     l1242:
  1932  013C52  90BD               	bcf	189,0,c	;volatile
  1933                           
  1934                           ;main.c: 188:   V.mode_pwm = 0;
  1935  013C54  0101               	movlb	1	; () banked
  1936  013C56  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  1937  013C58  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  1938  013C5A                     l11948:
  1939                           
  1940                           ; BSR set to: 1
  1941                           ;main.c: 190:  mode_lamp_dim(V.mode_pwm);
  1942  013C5A  0060  F657  FFE6   	movff	_V+149,postinc1
  1943  013C60  0060  F65B  FFE6   	movff	_V+150,postinc1
  1944  013C66  ECE5  F0C1         	call	_mode_lamp_dim	;wreg free
  1945  013C6A  D0D0               	goto	l11992
  1946  013C6C                     l11950:
  1947                           
  1948                           ; BSR set to: 1
  1949                           ;main.c: 201:    init_display();
  1950  013C6C  EC1D  F0B5         	call	_init_display	;wreg free
  1951                           
  1952                           ; BSR set to: 61
  1953                           ;main.c: 202:    eaDogM_WriteCommand(0b00001100);
  1954  013C70  0E0C               	movlw	12
  1955  013C72  6EE6               	movwf	postinc1,c
  1956  013C74  EC41  F0C2         	call	_eaDogM_WriteCommand	;wreg free
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;main.c: 204:    V.ui_state = mode;
  1960                           ;stkvar	_mode @ sp[(-1)+0]
  1961  013C78  0EFF               	movlw	-1
  1962  013C7A  006F FF8C  F100    	movff	plusw1,_V	;volatile
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;main.c: 205:    srand(1957);
  1966  013C80  0EA5               	movlw	165
  1967  013C82  6EE6               	movwf	postinc1,c
  1968  013C84  0E07               	movlw	7
  1969  013C86  6EE6               	movwf	postinc1,c
  1970  013C88  EC91  F0BE         	call	_srand	;wreg free
  1971                           
  1972                           ; BSR set to: 1
  1973                           ;main.c: 206:    set_vterm(0);
  1974  013C8C  0E00               	movlw	0
  1975  013C8E  6EE6               	movwf	postinc1,c
  1976  013C90  ECBC  F0C1         	call	_set_vterm	;wreg free
  1977                           
  1978                           ; BSR set to: 5
  1979                           ;main.c: 207:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1980  013C94  0E81               	movlw	low STR_1
  1981  013C96  6EE6               	movwf	postinc1,c
  1982  013C98  0EFF               	movlw	high STR_1
  1983  013C9A  6EE6               	movwf	postinc1,c
  1984  013C9C  0E00               	movlw	0
  1985  013C9E  6EE6               	movwf	postinc1,c
  1986  013CA0  0E00               	movlw	0
  1987  013CA2  6EE6               	movwf	postinc1,c
  1988  013CA4  EC25  F0BF         	call	_get_vterm_ptr	;wreg free
  1989  013CA8  0060  F0CB  FFE6   	movff	btemp,postinc1
  1990  013CAE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  1991  013CB4  0E04               	movlw	4
  1992  013CB6  6EE6               	movwf	postinc1,c
  1993  013CB8  EC1E  F0B4         	call	_sprintf	;wreg free
  1994                           
  1995                           ;main.c: 208:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.98");
  1996  013CBC  0EE0               	movlw	low STR_3
  1997  013CBE  6EE6               	movwf	postinc1,c
  1998  013CC0  0EFF               	movlw	high STR_3
  1999  013CC2  6EE6               	movwf	postinc1,c
  2000  013CC4  0EB2               	movlw	low STR_2
  2001  013CC6  6EE6               	movwf	postinc1,c
  2002  013CC8  0EFF               	movlw	high STR_2
  2003  013CCA  6EE6               	movwf	postinc1,c
  2004  013CCC  0E00               	movlw	0
  2005  013CCE  6EE6               	movwf	postinc1,c
  2006  013CD0  0E01               	movlw	1
  2007  013CD2  6EE6               	movwf	postinc1,c
  2008  013CD4  EC25  F0BF         	call	_get_vterm_ptr	;wreg free
  2009  013CD8  0060  F0CB  FFE6   	movff	btemp,postinc1
  2010  013CDE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2011  013CE4  0E06               	movlw	6
  2012  013CE6  6EE6               	movwf	postinc1,c
  2013  013CE8  EC1E  F0B4         	call	_sprintf	;wreg free
  2014                           
  2015                           ;main.c: 209:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2016  013CEC  0E70               	movlw	low STR_4
  2017  013CEE  6EE6               	movwf	postinc1,c
  2018  013CF0  0EFF               	movlw	high STR_4
  2019  013CF2  6EE6               	movwf	postinc1,c
  2020  013CF4  0E00               	movlw	0
  2021  013CF6  6EE6               	movwf	postinc1,c
  2022  013CF8  0E02               	movlw	2
  2023  013CFA  6EE6               	movwf	postinc1,c
  2024  013CFC  EC25  F0BF         	call	_get_vterm_ptr	;wreg free
  2025  013D00  0060  F0CB  FFE6   	movff	btemp,postinc1
  2026  013D06  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2027  013D0C  0E04               	movlw	4
  2028  013D0E  6EE6               	movwf	postinc1,c
  2029  013D10  EC1E  F0B4         	call	_sprintf	;wreg free
  2030                           
  2031                           ;main.c: 210:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2032  013D14  0E92               	movlw	low STR_5
  2033  013D16  6EE6               	movwf	postinc1,c
  2034  013D18  0EFF               	movlw	high STR_5
  2035  013D1A  6EE6               	movwf	postinc1,c
  2036  013D1C  0E02               	movlw	2
  2037  013D1E  6EE6               	movwf	postinc1,c
  2038  013D20  0E00               	movlw	0
  2039  013D22  6EE6               	movwf	postinc1,c
  2040  013D24  EC25  F0BF         	call	_get_vterm_ptr	;wreg free
  2041  013D28  0060  F0CB  FFE6   	movff	btemp,postinc1
  2042  013D2E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2043  013D34  0E04               	movlw	4
  2044  013D36  6EE6               	movwf	postinc1,c
  2045  013D38  EC1E  F0B4         	call	_sprintf	;wreg free
  2046                           
  2047                           ;main.c: 211:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.98");
  2048  013D3C  0EE0               	movlw	low STR_3
  2049  013D3E  6EE6               	movwf	postinc1,c
  2050  013D40  0EFF               	movlw	high STR_3
  2051  013D42  6EE6               	movwf	postinc1,c
  2052  013D44  0EB2               	movlw	low STR_2
  2053  013D46  6EE6               	movwf	postinc1,c
  2054  013D48  0EFF               	movlw	high STR_2
  2055  013D4A  6EE6               	movwf	postinc1,c
  2056  013D4C  0E02               	movlw	2
  2057  013D4E  6EE6               	movwf	postinc1,c
  2058  013D50  0E01               	movlw	1
  2059  013D52  6EE6               	movwf	postinc1,c
  2060  013D54  EC25  F0BF         	call	_get_vterm_ptr	;wreg free
  2061  013D58  0060  F0CB  FFE6   	movff	btemp,postinc1
  2062  013D5E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2063  013D64  0E06               	movlw	6
  2064  013D66  6EE6               	movwf	postinc1,c
  2065  013D68  EC1E  F0B4         	call	_sprintf	;wreg free
  2066                           
  2067                           ;main.c: 212:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2068  013D6C  0E5F               	movlw	low STR_8
  2069  013D6E  6EE6               	movwf	postinc1,c
  2070  013D70  0EFF               	movlw	high STR_8
  2071  013D72  6EE6               	movwf	postinc1,c
  2072  013D74  0E02               	movlw	2
  2073  013D76  6EE6               	movwf	postinc1,c
  2074  013D78  0E02               	movlw	2
  2075  013D7A  6EE6               	movwf	postinc1,c
  2076  013D7C  EC25  F0BF         	call	_get_vterm_ptr	;wreg free
  2077  013D80  0060  F0CB  FFE6   	movff	btemp,postinc1
  2078  013D86  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2079  013D8C  0E04               	movlw	4
  2080  013D8E  6EE6               	movwf	postinc1,c
  2081  013D90  EC1E  F0B4         	call	_sprintf	;wreg free
  2082                           
  2083                           ;main.c: 213:    update_lcd(0);
  2084  013D94  0E00               	movlw	0
  2085  013D96  6EE6               	movwf	postinc1,c
  2086  013D98  EC97  F0B3         	call	_update_lcd	;wreg free
  2087                           
  2088                           ;main.c: 214:    WaitMs(3000);
  2089  013D9C  0EB8               	movlw	184
  2090  013D9E  6EE6               	movwf	postinc1,c
  2091  013DA0  0E0B               	movlw	11
  2092  013DA2  6EE6               	movwf	postinc1,c
  2093  013DA4  EC5B  F0BE         	call	_WaitMs	;wreg free
  2094                           
  2095                           ;main.c: 215:    StartTimer(TMR_DISPLAY, 250);
  2096  013DA8  0EFA               	movlw	250
  2097  013DAA  6EE6               	movwf	postinc1,c
  2098  013DAC  0E00               	movlw	0
  2099  013DAE  6EE6               	movwf	postinc1,c
  2100  013DB0  0E0A               	movlw	10
  2101  013DB2  6EE6               	movwf	postinc1,c
  2102  013DB4  EC21  F0BE         	call	_StartTimer	;wreg free
  2103                           
  2104                           ;main.c: 216:    StartTimer(TMR_ADC, 200);
  2105  013DB8  0EC8               	movlw	200
  2106  013DBA  6EE6               	movwf	postinc1,c
  2107  013DBC  0E00               	movlw	0
  2108  013DBE  6EE6               	movwf	postinc1,c
  2109  013DC0  0E01               	movlw	1
  2110  013DC2  6EE6               	movwf	postinc1,c
  2111  013DC4  EC21  F0BE         	call	_StartTimer	;wreg free
  2112                           
  2113                           ;main.c: 217:    StartTimer(TMR_INFO, 3000);
  2114  013DC8  0EB8               	movlw	184
  2115  013DCA  6EE6               	movwf	postinc1,c
  2116  013DCC  0E0B               	movlw	11
  2117  013DCE  6EE6               	movwf	postinc1,c
  2118  013DD0  0E07               	movlw	7
  2119  013DD2  6EE6               	movwf	postinc1,c
  2120  013DD4  EC21  F0BE         	call	_StartTimer	;wreg free
  2121                           
  2122                           ;main.c: 218:    StartTimer(TMR_FLIPPER, 1500);
  2123  013DD8  0EDC               	movlw	220
  2124  013DDA  6EE6               	movwf	postinc1,c
  2125  013DDC  0E05               	movlw	5
  2126  013DDE  6EE6               	movwf	postinc1,c
  2127  013DE0  0E0B               	movlw	11
  2128  013DE2  6EE6               	movwf	postinc1,c
  2129  013DE4  EC21  F0BE         	call	_StartTimer	;wreg free
  2130                           
  2131                           ;main.c: 219:    StartTimer(TMR_HELPDIS, 3000);
  2132  013DE8  0EB8               	movlw	184
  2133  013DEA  6EE6               	movwf	postinc1,c
  2134  013DEC  0E0B               	movlw	11
  2135  013DEE  6EE6               	movwf	postinc1,c
  2136  013DF0  0E09               	movlw	9
  2137  013DF2  6EE6               	movwf	postinc1,c
  2138  013DF4  EC21  F0BE         	call	_StartTimer	;wreg free
  2139                           
  2140                           ;main.c: 221:    start_adc_scan();
  2141  013DF8  ECFD  F0BA         	call	_start_adc_scan	;wreg free
  2142                           
  2143                           ;main.c: 222:    start_switch_handler();
  2144  013DFC  EC53  F0C1         	call	_start_switch_handler	;wreg free
  2145                           
  2146                           ;main.c: 224:    break;
  2147  013E00  D01C               	goto	l11994
  2148  013E02                     l1250:
  2149                           
  2150                           ; BSR set to: 1
  2151                           ;main.c: 230:    P.SYSTEM_STABLE = 1;
  2152  013E02  0100               	movlb	0	; () banked
  2153  013E04  81BE               	bsf	(_P+1)& (0+255),0,b	;volatile
  2154                           
  2155                           ;main.c: 231:    break;
  2156  013E06  D019               	goto	l11994
  2157  013E08                     l1252:
  2158                           
  2159                           ; BSR set to: 1
  2160                           ;main.c: 234:    V.ui_state = UI_STATE_INIT;
  2161  013E08  6B00               	clrf	_V& (0+255),b	;volatile
  2162                           
  2163                           ;main.c: 235:    break;
  2164  013E0A  D017               	goto	l11994
  2165  013E0C                     l11992:
  2166  013E0C  0101               	movlb	1	; () banked
  2167  013E0E  5100               	movf	_V& (0+255),w,b	;volatile
  2168  013E10  6E3C               	movwf	(btemp+10)^0,c
  2169  013E12  6A3D               	clrf	(btemp+11)^0,c
  2170                           
  2171                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2172                           ; Switch size 1, requested type "simple"
  2173                           ; Number of cases is 1, Range of values is 0 to 0
  2174                           ; switch strategies available:
  2175                           ; Name         Instructions Cycles
  2176                           ; simple_byte            4     3 (average)
  2177                           ;	Chosen strategy is simple_byte
  2178  013E14  503D               	movf	(btemp+11)^0,w,c
  2179  013E16  0A00               	xorlw	0	; case 0
  2180  013E18  A4D8               	btfss	status,2,c
  2181  013E1A  D7F6               	goto	l1252
  2182                           
  2183                           ; BSR set to: 1
  2184                           ; Switch size 1, requested type "simple"
  2185                           ; Number of cases is 5, Range of values is 0 to 5
  2186                           ; switch strategies available:
  2187                           ; Name         Instructions Cycles
  2188                           ; simple_byte           16     9 (average)
  2189                           ;	Chosen strategy is simple_byte
  2190  013E1C  503C               	movf	(btemp+10)^0,w,c
  2191  013E1E  0A00               	xorlw	0	; case 0
  2192  013E20  B4D8               	btfsc	status,2,c
  2193  013E22  D724               	goto	l11950
  2194  013E24  0A01               	xorlw	1	; case 1
  2195  013E26  B4D8               	btfsc	status,2,c
  2196  013E28  D008               	goto	l11994
  2197  013E2A  0A02               	xorlw	2	; case 3
  2198  013E2C  B4D8               	btfsc	status,2,c
  2199  013E2E  D005               	goto	l11994
  2200  013E30  0A07               	xorlw	7	; case 4
  2201  013E32  B4D8               	btfsc	status,2,c
  2202  013E34  D7E6               	goto	l1250
  2203  013E36  0A01               	xorlw	1	; case 5
  2204  013E38  D7E7               	goto	l1252
  2205  013E3A                     l11994:
  2206                           
  2207                           ;main.c: 238:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2208  013E3A  0E01               	movlw	1
  2209  013E3C  6EE6               	movwf	postinc1,c
  2210  013E3E  ECFB  F0C0         	call	_TimerDone	;wreg free
  2211  013E42  5032               	movf	btemp^0,w,c
  2212  013E44  B4D8               	btfsc	status,2,c
  2213  013E46  D013               	goto	l12006
  2214  013E48  EC81  F0C2         	call	_check_adc_scan	;wreg free
  2215  013E4C  5032               	movf	btemp^0,w,c
  2216  013E4E  B4D8               	btfsc	status,2,c
  2217  013E50  D00E               	goto	l12006
  2218                           
  2219                           ;main.c: 242:    convert_adc_data();
  2220  013E52  ECEE  F0B9         	call	_convert_adc_data	;wreg free
  2221                           
  2222                           ;main.c: 246:    clear_adc_scan();
  2223  013E56  EC89  F0C2         	call	_clear_adc_scan	;wreg free
  2224                           
  2225                           ; BSR set to: 0
  2226                           ;main.c: 247:    start_adc_scan();
  2227  013E5A  ECFD  F0BA         	call	_start_adc_scan	;wreg free
  2228                           
  2229                           ;main.c: 248:    StartTimer(TMR_ADC, 200);
  2230  013E5E  0EC8               	movlw	200
  2231  013E60  6EE6               	movwf	postinc1,c
  2232  013E62  0E00               	movlw	0
  2233  013E64  6EE6               	movwf	postinc1,c
  2234  013E66  0E01               	movlw	1
  2235  013E68  6EE6               	movwf	postinc1,c
  2236  013E6A  EC21  F0BE         	call	_StartTimer	;wreg free
  2237  013E6E                     l12006:
  2238                           
  2239                           ;main.c: 255:   if (TimerDone(TMR_DISPLAY)) {
  2240                           
  2241                           ;main.c: 251:   if (V.ticks) {
  2242  013E6E  0E0A               	movlw	10
  2243  013E70  6EE6               	movwf	postinc1,c
  2244  013E72  ECFB  F0C0         	call	_TimerDone	;wreg free
  2245  013E76  5032               	movf	btemp^0,w,c
  2246  013E78  B4D8               	btfsc	status,2,c
  2247  013E7A  D09B               	goto	l12024
  2248                           
  2249                           ;main.c: 256:    if (TimerDone(TMR_HELPDIS)) {
  2250  013E7C  0E09               	movlw	9
  2251  013E7E  6EE6               	movwf	postinc1,c
  2252  013E80  ECFB  F0C0         	call	_TimerDone	;wreg free
  2253  013E84  5032               	movf	btemp^0,w,c
  2254  013E86  B4D8               	btfsc	status,2,c
  2255  013E88  D004               	goto	l12014
  2256                           
  2257                           ;main.c: 257:     set_display_info(DIS_STR);
  2258  013E8A  0E00               	movlw	0
  2259  013E8C  6EE6               	movwf	postinc1,c
  2260  013E8E  EC81  F0C1         	call	_set_display_info	;wreg free
  2261  013E92                     l12014:
  2262                           
  2263                           ;main.c: 265:    sprintf(get_vterm_ptr(0, 0), "PV %2.2f PC %2.2f ", C.calc[V_PV],C.calc[
      +                          C_PV]);
  2264  013E92  0060  FC13  FFE6   	movff	_C+4,postinc1
  2265  013E98  0060  FC17  FFE6   	movff	_C+5,postinc1
  2266  013E9E  0060  FC1B  FFE6   	movff	_C+6,postinc1
  2267  013EA4  0060  FC1F  FFE6   	movff	_C+7,postinc1
  2268  013EAA  0060  FC53  FFE6   	movff	_C+20,postinc1
  2269  013EB0  0060  FC57  FFE6   	movff	_C+21,postinc1
  2270  013EB6  0060  FC5B  FFE6   	movff	_C+22,postinc1
  2271  013EBC  0060  FC5F  FFE6   	movff	_C+23,postinc1
  2272  013EC2  0E39               	movlw	low STR_9
  2273  013EC4  6EE6               	movwf	postinc1,c
  2274  013EC6  0EFF               	movlw	high STR_9
  2275  013EC8  6EE6               	movwf	postinc1,c
  2276  013ECA  0E00               	movlw	0
  2277  013ECC  6EE6               	movwf	postinc1,c
  2278  013ECE  0E00               	movlw	0
  2279  013ED0  6EE6               	movwf	postinc1,c
  2280  013ED2  EC25  F0BF         	call	_get_vterm_ptr	;wreg free
  2281  013ED6  0060  F0CB  FFE6   	movff	btemp,postinc1
  2282  013EDC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2283  013EE2  0E0C               	movlw	12
  2284  013EE4  6EE6               	movwf	postinc1,c
  2285  013EE6  EC1E  F0B4         	call	_sprintf	;wreg free
  2286                           
  2287                           ;main.c: 266:    sprintf(get_vterm_ptr(1, 0), "BV %2.2f BC %2.2f ", C.calc[V_BAT],C.calc
      +                          [C_BATT]);
  2288  013EEA  0060  FC03  FFE6   	movff	_C,postinc1
  2289  013EF0  0060  FC07  FFE6   	movff	_C+1,postinc1
  2290  013EF6  0060  FC0B  FFE6   	movff	_C+2,postinc1
  2291  013EFC  0060  FC0F  FFE6   	movff	_C+3,postinc1
  2292  013F02  0060  FC43  FFE6   	movff	_C+16,postinc1
  2293  013F08  0060  FC47  FFE6   	movff	_C+17,postinc1
  2294  013F0E  0060  FC4B  FFE6   	movff	_C+18,postinc1
  2295  013F14  0060  FC4F  FFE6   	movff	_C+19,postinc1
  2296  013F1A  0E26               	movlw	low STR_10
  2297  013F1C  6EE6               	movwf	postinc1,c
  2298  013F1E  0EFF               	movlw	high STR_10
  2299  013F20  6EE6               	movwf	postinc1,c
  2300  013F22  0E00               	movlw	0
  2301  013F24  6EE6               	movwf	postinc1,c
  2302  013F26  0E01               	movlw	1
  2303  013F28  6EE6               	movwf	postinc1,c
  2304  013F2A  EC25  F0BF         	call	_get_vterm_ptr	;wreg free
  2305  013F2E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2306  013F34  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2307  013F3A  0E0C               	movlw	12
  2308  013F3C  6EE6               	movwf	postinc1,c
  2309  013F3E  EC1E  F0B4         	call	_sprintf	;wreg free
  2310                           
  2311                           ;main.c: 267:    sprintf(get_vterm_ptr(2, 0), "CV %2.2f IV %2.2f ", C.calc[V_CC],C.calc[
      +                          V_INVERTER]);
  2312  013F42  0060  FCC3  FFE6   	movff	_C+48,postinc1
  2313  013F48  0060  FCC7  FFE6   	movff	_C+49,postinc1
  2314  013F4E  0060  FCCB  FFE6   	movff	_C+50,postinc1
  2315  013F54  0060  FCCF  FFE6   	movff	_C+51,postinc1
  2316  013F5A  0060  FC23  FFE6   	movff	_C+8,postinc1
  2317  013F60  0060  FC27  FFE6   	movff	_C+9,postinc1
  2318  013F66  0060  FC2B  FFE6   	movff	_C+10,postinc1
  2319  013F6C  0060  FC2F  FFE6   	movff	_C+11,postinc1
  2320  013F72  0E4C               	movlw	low STR_11
  2321  013F74  6EE6               	movwf	postinc1,c
  2322  013F76  0EFF               	movlw	high STR_11
  2323  013F78  6EE6               	movwf	postinc1,c
  2324  013F7A  0E00               	movlw	0
  2325  013F7C  6EE6               	movwf	postinc1,c
  2326  013F7E  0E02               	movlw	2
  2327  013F80  6EE6               	movwf	postinc1,c
  2328  013F82  EC25  F0BF         	call	_get_vterm_ptr	;wreg free
  2329  013F86  0060  F0CB  FFE6   	movff	btemp,postinc1
  2330  013F8C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2331  013F92  0E0C               	movlw	12
  2332  013F94  6EE6               	movwf	postinc1,c
  2333  013F96  EC1E  F0B4         	call	_sprintf	;wreg free
  2334                           
  2335                           ;main.c: 269:    StartTimer(TMR_DISPLAY, 250);
  2336  013F9A  0EFA               	movlw	250
  2337  013F9C  6EE6               	movwf	postinc1,c
  2338  013F9E  0E00               	movlw	0
  2339  013FA0  6EE6               	movwf	postinc1,c
  2340  013FA2  0E0A               	movlw	10
  2341  013FA4  6EE6               	movwf	postinc1,c
  2342  013FA6  EC21  F0BE         	call	_StartTimer	;wreg free
  2343                           
  2344                           ;main.c: 270:    update_lcd(0);
  2345  013FAA  0E00               	movlw	0
  2346  013FAC  6EE6               	movwf	postinc1,c
  2347  013FAE  EC97  F0B3         	call	_update_lcd	;wreg free
  2348  013FB2                     l12024:
  2349                           
  2350                           ;main.c: 276:   if (check_help(V.flipper)) {
  2351  013FB2  0101               	movlb	1	; () banked
  2352  013FB4  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2353  013FB6  6EE6               	movwf	postinc1,c
  2354  013FB8  ECFE  F0A9         	call	_check_help	;wreg free
  2355                           
  2356                           ;main.c: 312:   if (V.set_sequ) {
  2357                           
  2358                           ;main.c: 307:   };
  2359  013FBC  0101               	movlb	1	; () banked
  2360  013FBE  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  2361  013FC0  D725               	goto	l11992
  2362                           
  2363                           ; BSR set to: 1
  2364                           ;main.c: 313:    if (TimerDone(TMR_INFO)) {
  2365  013FC2  0E07               	movlw	7
  2366  013FC4  6EE6               	movwf	postinc1,c
  2367  013FC6  ECFB  F0C0         	call	_TimerDone	;wreg free
  2368  013FCA  5032               	movf	btemp^0,w,c
  2369  013FCC  B4D8               	btfsc	status,2,c
  2370  013FCE  D00B               	goto	l12034
  2371                           
  2372                           ;main.c: 314:     V.set_sequ = 0;
  2373  013FD0  0101               	movlb	1	; () banked
  2374  013FD2  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  2375                           
  2376                           ; BSR set to: 1
  2377                           ;main.c: 315:     set_vterm(0);
  2378  013FD4  0E00               	movlw	0
  2379  013FD6  6EE6               	movwf	postinc1,c
  2380  013FD8  ECBC  F0C1         	call	_set_vterm	;wreg free
  2381                           
  2382                           ; BSR set to: 5
  2383                           ;main.c: 316:     update_lcd(0);
  2384  013FDC  0E00               	movlw	0
  2385  013FDE  6EE6               	movwf	postinc1,c
  2386  013FE0  EC97  F0B3         	call	_update_lcd	;wreg free
  2387                           
  2388                           ;main.c: 317:    } else {
  2389  013FE4  D713               	goto	l11992
  2390  013FE6                     l12034:
  2391                           
  2392                           ;main.c: 318:     set_vterm(2);
  2393  013FE6  0E02               	movlw	2
  2394  013FE8  6EE6               	movwf	postinc1,c
  2395  013FEA  ECBC  F0C1         	call	_set_vterm	;wreg free
  2396                           
  2397                           ; BSR set to: 5
  2398                           ;main.c: 319:     update_lcd(2);
  2399  013FEE  0E02               	movlw	2
  2400  013FF0  6EE6               	movwf	postinc1,c
  2401  013FF2  EC97  F0B3         	call	_update_lcd	;wreg free
  2402  013FF6  D70A               	goto	l11992
  2403  013FF8                     __end_of_main:
  2404                           	opt callstack 0
  2405                           
  2406 ;; *************** function _start_switch_handler *****************
  2407 ;; Defined at:
  2408 ;;		line 119 in file "dio.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;		None
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;		None
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  1  [STACK] void 
  2415 ;; Registers used:
  2416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  2417 ;; Tracked objects:
  2418 ;;		On entry : 1/4
  2419 ;;		On exit  : 3F/39
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2426 ;;Total ram usage:        0 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; Hardware stack levels required when called:    7
  2429 ;; This function calls:
  2430 ;;		_INT1_SetInterruptHandler
  2431 ;; This function is called by:
  2432 ;;		_main
  2433 ;; This function uses a reentrant model
  2434 ;;
  2435                           
  2436                           	psect	text1
  2437  0182A6                     __ptext1:
  2438                           	opt callstack 0
  2439  0182A6                     _start_switch_handler:
  2440                           	opt callstack 23
  2441                           
  2442                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  2443                           
  2444                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2445                           ;incstack = 0
  2446  0182A6  0139               	movlb	57	; () banked
  2447  0182A8  9195               	bcf	149,0,b	;volatile
  2448                           
  2449                           ; BSR set to: 57
  2450                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  2451  0182AA  0E68               	movlw	low _switch_handler
  2452  0182AC  6EE6               	movwf	postinc1,c
  2453  0182AE  0E61               	movlw	high _switch_handler
  2454  0182B0  6EE6               	movwf	postinc1,c
  2455  0182B2  0E01               	movlw	low (_switch_handler shr (0+16))
  2456  0182B4  6EE6               	movwf	postinc1,c
  2457  0182B6  EC47  F0C0         	call	_INT1_SetInterruptHandler	;wreg free
  2458                           
  2459                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  2460  0182BA  0E02               	movlw	2
  2461  0182BC  0100               	movlb	0	; () banked
  2462  0182BE  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  2466  0182C0  0139               	movlb	57	; () banked
  2467  0182C2  8195               	bsf	149,0,b	;volatile
  2468                           
  2469                           ; BSR set to: 57
  2470                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  2471  0182C4  0012               	return		;funcret
  2472  0182C6                     __end_of_start_switch_handler:
  2473                           	opt callstack 0
  2474                           
  2475 ;; *************** function _start_adc_scan *****************
  2476 ;; Defined at:
  2477 ;;		line 33 in file "daq.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;		None
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;		None
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1  [STACK] _Bool 
  2484 ;; Registers used:
  2485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/5
  2488 ;;		On exit  : 1/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2495 ;;Total ram usage:        0 bytes
  2496 ;; Hardware stack levels used:    1
  2497 ;; Hardware stack levels required when called:    7
  2498 ;; This function calls:
  2499 ;;		_ADCC_DischargeSampleCapacitor
  2500 ;;		_ADCC_SetADIInterruptHandler
  2501 ;;		_ADCC_SetADTIInterruptHandler
  2502 ;;		_ADCC_StartConversion
  2503 ;; This function is called by:
  2504 ;;		_main
  2505 ;; This function uses a reentrant model
  2506 ;;
  2507                           
  2508                           	psect	text2
  2509  0175FA                     __ptext2:
  2510                           	opt callstack 0
  2511  0175FA                     _start_adc_scan:
  2512                           	opt callstack 23
  2513                           
  2514                           ;daq.c: 35:  if (R.done)
  2515                           
  2516                           ; BSR set to: 57
  2517                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2518                           ;incstack = 0
  2519  0175FA  0100               	movlb	0	; () banked
  2520  0175FC  51EE               	movf	(_R+39)& (0+255),w,b	;volatile
  2521  0175FE  A4D8               	btfss	status,2,c
  2522  017600  0012               	return	
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;daq.c: 38:  R.scan_index = 0;
  2526  017602  6BEB               	clrf	(_R+36)& (0+255),b	;volatile
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2530  017604  013A               	movlb	58	; () banked
  2531  017606  5140               	movf	64,w,b	;volatile
  2532  017608  006E F940  F032    	movff	14928,btemp	;volatile
  2533  01760E  6A33               	clrf	(btemp+1)^0,c
  2534  017610  0060  F0C8  F033   	movff	btemp,btemp+1
  2535  017616  6A32               	clrf	btemp^0,c
  2536  017618  2632               	addwf	btemp^0,f,c
  2537  01761A  0E00               	movlw	0
  2538  01761C  2233               	addwfc	(btemp+1)^0,f,c
  2539  01761E  0E77               	movlw	119
  2540  017620  1432               	andwf	btemp^0,w,c
  2541  017622  0100               	movlb	0	; () banked
  2542  017624  6FEC               	movwf	(_R+37)& (0+255),b	;volatile
  2543  017626  0E3C               	movlw	60
  2544  017628  1433               	andwf	(btemp+1)^0,w,c
  2545  01762A  6FED               	movwf	(_R+38)& (0+255),b	;volatile
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2549  01762C  0E30               	movlw	low _adc_int_handler
  2550  01762E  6EE6               	movwf	postinc1,c
  2551  017630  0E85               	movlw	high _adc_int_handler
  2552  017632  6EE6               	movwf	postinc1,c
  2553  017634  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2554  017636  6EE6               	movwf	postinc1,c
  2555  017638  EC83  F0C0         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2556                           
  2557                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2558  01763C  0E5E               	movlw	low _adc_int_t_handler
  2559  01763E  6EE6               	movwf	postinc1,c
  2560  017640  0E73               	movlw	high _adc_int_t_handler
  2561  017642  6EE6               	movwf	postinc1,c
  2562  017644  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2563  017646  6EE6               	movwf	postinc1,c
  2564  017648  EC6F  F0C0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2565                           
  2566                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  2567  01764C  EC75  F0C2         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  2568                           
  2569                           ; BSR set to: 62
  2570                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  2571  017650  0100               	movlb	0	; () banked
  2572  017652  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
  2573  017654  0B0F               	andlw	15
  2574  017656  6EE6               	movwf	postinc1,c
  2575  017658  EC28  F0C2         	call	_ADCC_StartConversion	;wreg free
  2576                           
  2577                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2578  01765C  0012               	return		;funcret
  2579  01765E                     __end_of_start_adc_scan:
  2580                           	opt callstack 0
  2581                           
  2582 ;; *************** function _ADCC_StartConversion *****************
  2583 ;; Defined at:
  2584 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;  channel         1  [STACK] enum E16136
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;		None
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1  [STACK] void 
  2591 ;; Registers used:
  2592 ;;		fsr1l, fsr1h
  2593 ;; Tracked objects:
  2594 ;;		On entry : 3F/0
  2595 ;;		On exit  : 3F/3E
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2602 ;;Total ram usage:        0 bytes
  2603 ;; Hardware stack levels used:    1
  2604 ;; Hardware stack levels required when called:    6
  2605 ;; This function calls:
  2606 ;;		Nothing
  2607 ;; This function is called by:
  2608 ;;		_start_adc_scan
  2609 ;;		_adc_int_t_handler
  2610 ;; This function uses a reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text3
  2614  018450                     __ptext3:
  2615                           	opt callstack 0
  2616  018450                     _ADCC_StartConversion:
  2617                           	opt callstack 6
  2618                           
  2619                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2620                           ;stkvar	_channel @ sp[(0)+-1]
  2621                           
  2622                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2623                           ;incstack = 0
  2624  018450  0EFF               	movlw	-1
  2625  018452  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2626                           
  2627                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2628  018458  013E               	movlb	62	; () banked
  2629  01845A  8FF8               	bsf	248,7,b	;volatile
  2630                           
  2631                           ; BSR set to: 62
  2632                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2633  01845C  81F8               	bsf	248,0,b	;volatile
  2634                           
  2635                           ; BSR set to: 62
  2636                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2637  01845E  52E5               	movf	postdec1,f,c
  2638  018460  0012               	return		;funcret
  2639  018462                     __end_of_ADCC_StartConversion:
  2640                           	opt callstack 0
  2641                           
  2642 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  2643 ;; Defined at:
  2644 ;;		line 189 in file "mcc_generated_files/adcc.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;		None
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;		None
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1  [STACK] void 
  2651 ;; Registers used:
  2652 ;;		wreg, status,2
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 3F/3E
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2662 ;;Total ram usage:        0 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; Hardware stack levels required when called:    6
  2665 ;; This function calls:
  2666 ;;		Nothing
  2667 ;; This function is called by:
  2668 ;;		_start_adc_scan
  2669 ;;		_adc_int_t_handler
  2670 ;; This function uses a reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text4
  2674  0184EA                     __ptext4:
  2675                           	opt callstack 0
  2676  0184EA                     _ADCC_DischargeSampleCapacitor:
  2677                           	opt callstack 6
  2678                           
  2679                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  2680                           
  2681                           ; BSR set to: 62
  2682                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2683                           ;incstack = 0
  2684  0184EA  0E3B               	movlw	59
  2685  0184EC  013E               	movlb	62	; () banked
  2686  0184EE  6FF1               	movwf	241,b	;volatile
  2687                           
  2688                           ; BSR set to: 62
  2689                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  2690  0184F0  0012               	return		;funcret
  2691  0184F2                     __end_of_ADCC_DischargeSampleCapacitor:
  2692                           	opt callstack 0
  2693                           
  2694 ;; *************** function _srand *****************
  2695 ;; Defined at:
  2696 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;  s               2  [STACK] unsigned int 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  1  [STACK] void 
  2703 ;; Registers used:
  2704 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2705 ;; Tracked objects:
  2706 ;;		On entry : 3F/0
  2707 ;;		On exit  : 3F/1
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2714 ;;Total ram usage:        0 bytes
  2715 ;; Hardware stack levels used:    1
  2716 ;; Hardware stack levels required when called:    6
  2717 ;; This function calls:
  2718 ;;		Nothing
  2719 ;; This function is called by:
  2720 ;;		_main
  2721 ;; This function uses a reentrant model
  2722 ;;
  2723                           
  2724                           	psect	text5
  2725  017D22                     __ptext5:
  2726                           	opt callstack 0
  2727  017D22                     _srand:
  2728                           	opt callstack 24
  2729                           
  2730                           ;stkvar	_s @ sp[(0)+-2]
  2731                           
  2732                           ; BSR set to: 62
  2733                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2734                           ;incstack = 0
  2735  017D22  0EFE               	movlw	-2
  2736  017D24  50E3               	movf	plusw1,w,c
  2737  017D26  0FFF               	addlw	255
  2738  017D28  6E3C               	movwf	(btemp+10)^0,c
  2739  017D2A  0EFF               	movlw	-1
  2740  017D2C  006F FF8C  F03D    	movff	plusw1,btemp+11
  2741  017D32  0EFF               	movlw	255
  2742  017D34  223D               	addwfc	(btemp+11)^0,f,c
  2743  017D36  0060  F0F0  F1BB   	movff	btemp+10,_seed
  2744  017D3C  0060  F0F4  F1BC   	movff	btemp+11,_seed+1
  2745  017D42  0101               	movlb	1	; () banked
  2746  017D44  6BBD               	clrf	(_seed+2)& (0+255),b
  2747  017D46  6BBE               	clrf	(_seed+3)& (0+255),b
  2748  017D48  6BBF               	clrf	(_seed+4)& (0+255),b
  2749  017D4A  6BC0               	clrf	(_seed+5)& (0+255),b
  2750  017D4C  6BC1               	clrf	(_seed+6)& (0+255),b
  2751  017D4E  6BC2               	clrf	(_seed+7)& (0+255),b
  2752                           
  2753                           ; BSR set to: 1
  2754                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2755  017D50  52E5               	movf	postdec1,f,c
  2756  017D52  52E5               	movf	postdec1,f,c
  2757  017D54  0012               	return		;funcret
  2758  017D56                     __end_of_srand:
  2759                           	opt callstack 0
  2760                           
  2761 ;; *************** function _init_display *****************
  2762 ;; Defined at:
  2763 ;;		line 37 in file "eadog.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;		None
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;		None
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1  [STACK] void 
  2770 ;; Registers used:
  2771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/1
  2774 ;;		On exit  : 3F/3D
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2781 ;;Total ram usage:        0 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; Hardware stack levels required when called:    8
  2784 ;; This function calls:
  2785 ;;		_ringBufS_init
  2786 ;;		_send_lcd_cmd
  2787 ;;		_send_lcd_cmd_long
  2788 ;;		_wdtdelay
  2789 ;; This function is called by:
  2790 ;;		_main
  2791 ;; This function uses a reentrant model
  2792 ;;
  2793                           
  2794                           	psect	text6
  2795  016A3A                     __ptext6:
  2796                           	opt callstack 0
  2797  016A3A                     _init_display:
  2798                           	opt callstack 22
  2799                           
  2800                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2801                           
  2802                           ; BSR set to: 1
  2803                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2804                           ;incstack = 0
  2805  016A3A  0E43               	movlw	low _ring_buf1
  2806  016A3C  0100               	movlb	0	; () banked
  2807  016A3E  6FA7               	movwf	(_spi_link+6)& (0+255),b	;volatile
  2808  016A40  0E04               	movlw	high _ring_buf1
  2809  016A42  6FA8               	movwf	(_spi_link+7)& (0+255),b	;volatile
  2810                           
  2811                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  2812  016A44  0E00               	movlw	low _ring_buf2
  2813  016A46  6FA5               	movwf	(_spi_link+4)& (0+255),b	;volatile
  2814  016A48  0E04               	movlw	high _ring_buf2
  2815  016A4A  6FA6               	movwf	(_spi_link+5)& (0+255),b	;volatile
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  2819  016A4C  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  2820  016A52  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  2821  016A58  ECBB  F0BF         	call	_ringBufS_init	;wreg free
  2822                           
  2823                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  2824  016A5C  0060  F297  FFE6   	movff	_spi_link+4,postinc1
  2825  016A62  0060  F29B  FFE6   	movff	_spi_link+5,postinc1
  2826  016A68  ECBB  F0BF         	call	_ringBufS_init	;wreg free
  2827                           
  2828                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  2829  016A6C  84BE               	bsf	190,2,c	;volatile
  2830  016A6E  84BC               	bsf	188,2,c	;volatile
  2831                           
  2832                           ;eadog.c: 46:  wdtdelay(350000);
  2833  016A70  0E30               	movlw	48
  2834  016A72  6EE6               	movwf	postinc1,c
  2835  016A74  0E57               	movlw	87
  2836  016A76  6EE6               	movwf	postinc1,c
  2837  016A78  0E05               	movlw	5
  2838  016A7A  6EE6               	movwf	postinc1,c
  2839  016A7C  0E00               	movlw	0
  2840  016A7E  6EE6               	movwf	postinc1,c
  2841  016A80  ECF2  F0BB         	call	_wdtdelay	;wreg free
  2842                           
  2843                           ; BSR set to: 0
  2844                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  2845  016A84  0E39               	movlw	57
  2846  016A86  6EE6               	movwf	postinc1,c
  2847  016A88  ECA7  F0BF         	call	_send_lcd_cmd	;wreg free
  2848                           
  2849                           ; BSR set to: 0
  2850                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  2851  016A8C  0E1D               	movlw	29
  2852  016A8E  6EE6               	movwf	postinc1,c
  2853  016A90  ECA7  F0BF         	call	_send_lcd_cmd	;wreg free
  2854                           
  2855                           ; BSR set to: 0
  2856                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  2857  016A94  0E50               	movlw	80
  2858  016A96  6EE6               	movwf	postinc1,c
  2859  016A98  ECA7  F0BF         	call	_send_lcd_cmd	;wreg free
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  2863  016A9C  0E6C               	movlw	108
  2864  016A9E  6EE6               	movwf	postinc1,c
  2865  016AA0  ECA7  F0BF         	call	_send_lcd_cmd	;wreg free
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  2869  016AA4  0E76               	movlw	118
  2870  016AA6  6EE6               	movwf	postinc1,c
  2871  016AA8  ECA7  F0BF         	call	_send_lcd_cmd	;wreg free
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  2875  016AAC  0E38               	movlw	56
  2876  016AAE  6EE6               	movwf	postinc1,c
  2877  016AB0  EC93  F0BF         	call	_send_lcd_cmd_long	;wreg free
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  2881  016AB4  0E0F               	movlw	15
  2882  016AB6  6EE6               	movwf	postinc1,c
  2883  016AB8  ECA7  F0BF         	call	_send_lcd_cmd	;wreg free
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  2887  016ABC  0E01               	movlw	1
  2888  016ABE  6EE6               	movwf	postinc1,c
  2889  016AC0  EC93  F0BF         	call	_send_lcd_cmd_long	;wreg free
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  2893  016AC4  0E02               	movlw	2
  2894  016AC6  6EE6               	movwf	postinc1,c
  2895  016AC8  ECA7  F0BF         	call	_send_lcd_cmd	;wreg free
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  2899  016ACC  0E06               	movlw	6
  2900  016ACE  6EE6               	movwf	postinc1,c
  2901  016AD0  ECA7  F0BF         	call	_send_lcd_cmd	;wreg free
  2902                           
  2903                           ; BSR set to: 0
  2904                           ;eadog.c: 57:  wdtdelay(30);
  2905  016AD4  0E1E               	movlw	30
  2906  016AD6  6EE6               	movwf	postinc1,c
  2907  016AD8  0E00               	movlw	0
  2908  016ADA  6EE6               	movwf	postinc1,c
  2909  016ADC  0E00               	movlw	0
  2910  016ADE  6EE6               	movwf	postinc1,c
  2911  016AE0  0E00               	movlw	0
  2912  016AE2  6EE6               	movwf	postinc1,c
  2913  016AE4  ECF2  F0BB         	call	_wdtdelay	;wreg free
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  2917  016AE8  0E02               	movlw	2
  2918  016AEA  013D               	movlb	61	; () banked
  2919  016AEC  6F16               	movwf	22,b	;volatile
  2920                           
  2921                           ; BSR set to: 61
  2922                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  2923  016AEE  0E40               	movlw	64
  2924  016AF0  6F15               	movwf	21,b	;volatile
  2925                           
  2926                           ; BSR set to: 61
  2927                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  2928  016AF2  0E83               	movlw	131
  2929  016AF4  6F14               	movwf	20,b	;volatile
  2930                           
  2931                           ; BSR set to: 61
  2932                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  2933  016AF6  931A               	bcf	26,1,b	;volatile
  2934                           
  2935                           ; BSR set to: 61
  2936                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  2937  016AF8  0E3F               	movlw	-193
  2938  016AFA  013B               	movlb	59	; () banked
  2939  016AFC  17FD               	andwf	253,f,b	;volatile
  2940                           
  2941                           ; BSR set to: 59
  2942                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  2943  016AFE  9BFD               	bcf	253,5,b	;volatile
  2944                           
  2945                           ; BSR set to: 59
  2946                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  2947  016B00  51FD               	movf	253,w,b	;volatile
  2948  016B02  0BF9               	andlw	-7
  2949  016B04  0902               	iorlw	2
  2950  016B06  6FFD               	movwf	253,b	;volatile
  2951                           
  2952                           ; BSR set to: 59
  2953                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  2954  016B08  0EE7               	movlw	-25
  2955  016B0A  17FD               	andwf	253,f,b	;volatile
  2956                           
  2957                           ; BSR set to: 59
  2958                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  2959  016B0C  81FD               	bsf	253,0,b	;volatile
  2960                           
  2961                           ; BSR set to: 59
  2962                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  2963  016B0E  0E43               	movlw	low _ring_buf1
  2964  016B10  6FF9               	movwf	249,b	;volatile
  2965  016B12  0E04               	movlw	high _ring_buf1
  2966  016B14  6FFA               	movwf	250,b	;volatile
  2967  016B16  0E00               	movlw	low (_ring_buf1 shr (0+16))
  2968  016B18  6FFB               	movwf	251,b	;volatile
  2969                           
  2970                           ; BSR set to: 59
  2971                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  2972  016B1A  9BFC               	bcf	252,5,b	;volatile
  2973                           
  2974                           ; BSR set to: 59
  2975                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  2976  016B1C  013D               	movlb	61	; () banked
  2977  016B1E  831A               	bsf	26,1,b	;volatile
  2978                           
  2979                           ; BSR set to: 61
  2980                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  2981  016B20  94BE               	bcf	190,2,c	;volatile
  2982                           
  2983                           ; BSR set to: 61
  2984                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  2985  016B22  0012               	return		;funcret
  2986  016B24                     __end_of_init_display:
  2987                           	opt callstack 0
  2988                           
  2989 ;; *************** function _send_lcd_cmd_long *****************
  2990 ;; Defined at:
  2991 ;;		line 114 in file "eadog.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;  cmd             1  [STACK] const unsigned char 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1  [STACK] void 
  2998 ;; Registers used:
  2999 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3000 ;; Tracked objects:
  3001 ;;		On entry : 3F/0
  3002 ;;		On exit  : 3F/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3009 ;;Total ram usage:        0 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:    7
  3012 ;; This function calls:
  3013 ;;		_SPI1_Exchange8bit
  3014 ;;		_wdtdelay
  3015 ;; This function is called by:
  3016 ;;		_init_display
  3017 ;; This function uses a reentrant model
  3018 ;;
  3019                           
  3020                           	psect	text7
  3021  017F26                     __ptext7:
  3022                           	opt callstack 0
  3023  017F26                     _send_lcd_cmd_long:
  3024                           	opt callstack 22
  3025                           
  3026                           ; BSR set to: 61
  3027                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3028                           ;incstack = 0
  3029                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  3030  017F26  92BC               	bcf	188,1,c	;volatile
  3031                           
  3032                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  3033  017F28  94BC               	bcf	188,2,c	;volatile
  3034                           
  3035                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  3036                           ;stkvar	_cmd @ sp[(0)+-1]
  3037  017F2A  0EFF               	movlw	-1
  3038  017F2C  50E3               	movf	plusw1,w,c
  3039  017F2E  6EE6               	movwf	postinc1,c
  3040  017F30  EC63  F0C1         	call	_SPI1_Exchange8bit	;wreg free
  3041                           
  3042                           ; BSR set to: 57
  3043                           ;eadog.c: 119:  wdtdelay(800);
  3044  017F34  0E20               	movlw	32
  3045  017F36  6EE6               	movwf	postinc1,c
  3046  017F38  0E03               	movlw	3
  3047  017F3A  6EE6               	movwf	postinc1,c
  3048  017F3C  0E00               	movlw	0
  3049  017F3E  6EE6               	movwf	postinc1,c
  3050  017F40  0E00               	movlw	0
  3051  017F42  6EE6               	movwf	postinc1,c
  3052  017F44  ECF2  F0BB         	call	_wdtdelay	;wreg free
  3053                           
  3054                           ; BSR set to: 0
  3055  017F48  82BC               	bsf	188,1,c	;volatile
  3056                           
  3057                           ; BSR set to: 0
  3058                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3059  017F4A  52E5               	movf	postdec1,f,c
  3060  017F4C  0012               	return		;funcret
  3061  017F4E                     __end_of_send_lcd_cmd_long:
  3062                           	opt callstack 0
  3063                           
  3064 ;; *************** function _send_lcd_cmd *****************
  3065 ;; Defined at:
  3066 ;;		line 102 in file "eadog.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;  cmd             1  [STACK] const unsigned char 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;		None
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  1  [STACK] void 
  3073 ;; Registers used:
  3074 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3075 ;; Tracked objects:
  3076 ;;		On entry : 3F/0
  3077 ;;		On exit  : 3F/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3084 ;;Total ram usage:        0 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; Hardware stack levels required when called:    7
  3087 ;; This function calls:
  3088 ;;		_SPI1_Exchange8bit
  3089 ;;		_wdtdelay
  3090 ;; This function is called by:
  3091 ;;		_init_display
  3092 ;; This function uses a reentrant model
  3093 ;;
  3094                           
  3095                           	psect	text8
  3096  017F4E                     __ptext8:
  3097                           	opt callstack 0
  3098  017F4E                     _send_lcd_cmd:
  3099                           	opt callstack 22
  3100                           
  3101                           ; BSR set to: 0
  3102                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3103                           ;incstack = 0
  3104                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3105  017F4E  92BC               	bcf	188,1,c	;volatile
  3106                           
  3107                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3108  017F50  94BC               	bcf	188,2,c	;volatile
  3109                           
  3110                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3111                           ;stkvar	_cmd @ sp[(0)+-1]
  3112  017F52  0EFF               	movlw	-1
  3113  017F54  50E3               	movf	plusw1,w,c
  3114  017F56  6EE6               	movwf	postinc1,c
  3115  017F58  EC63  F0C1         	call	_SPI1_Exchange8bit	;wreg free
  3116                           
  3117                           ; BSR set to: 57
  3118                           ;eadog.c: 107:  wdtdelay(30);
  3119  017F5C  0E1E               	movlw	30
  3120  017F5E  6EE6               	movwf	postinc1,c
  3121  017F60  0E00               	movlw	0
  3122  017F62  6EE6               	movwf	postinc1,c
  3123  017F64  0E00               	movlw	0
  3124  017F66  6EE6               	movwf	postinc1,c
  3125  017F68  0E00               	movlw	0
  3126  017F6A  6EE6               	movwf	postinc1,c
  3127  017F6C  ECF2  F0BB         	call	_wdtdelay	;wreg free
  3128                           
  3129                           ; BSR set to: 0
  3130  017F70  82BC               	bsf	188,1,c	;volatile
  3131                           
  3132                           ; BSR set to: 0
  3133                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3134  017F72  52E5               	movf	postdec1,f,c
  3135  017F74  0012               	return		;funcret
  3136  017F76                     __end_of_send_lcd_cmd:
  3137                           	opt callstack 0
  3138                           
  3139 ;; *************** function _SPI1_Exchange8bit *****************
  3140 ;; Defined at:
  3141 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;  data            1  [STACK] unsigned char 
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;		None
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  1  [STACK] unsigned char 
  3148 ;; Registers used:
  3149 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 3F/39
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3159 ;;Total ram usage:        0 bytes
  3160 ;; Hardware stack levels used:    1
  3161 ;; Hardware stack levels required when called:    6
  3162 ;; This function calls:
  3163 ;;		Nothing
  3164 ;; This function is called by:
  3165 ;;		_send_lcd_cmd
  3166 ;;		_send_lcd_cmd_long
  3167 ;; This function uses a reentrant model
  3168 ;;
  3169                           
  3170                           	psect	text9
  3171  0182C6                     __ptext9:
  3172                           	opt callstack 0
  3173  0182C6                     _SPI1_Exchange8bit:
  3174                           	opt callstack 22
  3175                           
  3176                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3177                           
  3178                           ; BSR set to: 0
  3179                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3180                           ;incstack = 0
  3181  0182C6  0E01               	movlw	1
  3182  0182C8  013D               	movlb	61	; () banked
  3183  0182CA  6F12               	movwf	18,b	;volatile
  3184                           
  3185                           ; BSR set to: 61
  3186                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3187                           ;stkvar	_data @ sp[(0)+-1]
  3188  0182CC  0EFF               	movlw	-1
  3189  0182CE  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3190  0182D4                     l835:
  3191                           
  3192                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3193  0182D4  0139               	movlb	57	; () banked
  3194  0182D6  A9A2               	btfss	162,4,b	;volatile
  3195  0182D8  D7FD               	goto	l835
  3196                           
  3197                           ; BSR set to: 57
  3198                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3199  0182DA  006F F440  F032    	movff	15632,btemp	;volatile
  3200                           
  3201                           ; BSR set to: 57
  3202                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3203  0182E0  52E5               	movf	postdec1,f,c
  3204  0182E2  0012               	return		;funcret
  3205  0182E4                     __end_of_SPI1_Exchange8bit:
  3206                           	opt callstack 0
  3207                           
  3208 ;; *************** function _ringBufS_init *****************
  3209 ;; Defined at:
  3210 ;;		line 22 in file "ringbufs.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;  _this           2  [STACK] PTR volatile struct ring
  3213 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1  [STACK] void 
  3218 ;; Registers used:
  3219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3229 ;;Total ram usage:        0 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; Hardware stack levels required when called:    7
  3232 ;; This function calls:
  3233 ;;		_memset
  3234 ;; This function is called by:
  3235 ;;		_init_display
  3236 ;; This function uses a reentrant model
  3237 ;;
  3238                           
  3239                           	psect	text10
  3240  017F76                     __ptext10:
  3241                           	opt callstack 0
  3242  017F76                     _ringBufS_init:
  3243                           	opt callstack 22
  3244                           
  3245                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3246                           
  3247                           ; BSR set to: 57
  3248                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3249                           ;incstack = 0
  3250  017F76  0E43               	movlw	67
  3251  017F78  6EE6               	movwf	postinc1,c
  3252  017F7A  0E00               	movlw	0
  3253  017F7C  6EE6               	movwf	postinc1,c
  3254  017F7E  0E00               	movlw	0
  3255  017F80  6EE6               	movwf	postinc1,c
  3256  017F82  0E00               	movlw	0
  3257  017F84  6EE6               	movwf	postinc1,c
  3258                           
  3259                           ;stkvar	__this @ sp[(-4)+-2]
  3260  017F86  0EFA               	movlw	-6
  3261  017F88  006F FF8F FFE6     	movff	plusw1,postinc1
  3262  017F8E  006F FF8F FFE6     	movff	plusw1,postinc1
  3263  017F94  EC8F  F0A3         	call	_memset	;wreg free
  3264                           
  3265                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3266  017F98  52E5               	movf	postdec1,f,c
  3267  017F9A  52E5               	movf	postdec1,f,c
  3268  017F9C  0012               	return		;funcret
  3269  017F9E                     __end_of_ringBufS_init:
  3270                           	opt callstack 0
  3271                           
  3272 ;; *************** function _eaDogM_WriteCommand *****************
  3273 ;; Defined at:
  3274 ;;		line 160 in file "eadog.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;  cmd             1  [STACK] const unsigned char 
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;		None
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1  [STACK] void 
  3281 ;; Registers used:
  3282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3283 ;; Tracked objects:
  3284 ;;		On entry : 3F/3D
  3285 ;;		On exit  : 3F/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3292 ;;Total ram usage:        0 bytes
  3293 ;; Hardware stack levels used:    1
  3294 ;; Hardware stack levels required when called:   16
  3295 ;; This function calls:
  3296 ;;		_send_lcd_cmd_dma
  3297 ;; This function is called by:
  3298 ;;		_main
  3299 ;; This function uses a reentrant model
  3300 ;;
  3301                           
  3302                           	psect	text11
  3303  018482                     __ptext11:
  3304                           	opt callstack 0
  3305  018482                     _eaDogM_WriteCommand:
  3306                           	opt callstack 14
  3307                           
  3308                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3309                           ;stkvar	_cmd @ sp[(0)+-1]
  3310                           
  3311                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3312                           ;incstack = 0
  3313  018482  0EFF               	movlw	-1
  3314  018484  50E3               	movf	plusw1,w,c
  3315  018486  6EE6               	movwf	postinc1,c
  3316  018488  EC79  F0BC         	call	_send_lcd_cmd_dma	;wreg free
  3317                           
  3318                           ; BSR set to: 0
  3319                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3320  01848C  52E5               	movf	postdec1,f,c
  3321  01848E  0012               	return		;funcret
  3322  018490                     __end_of_eaDogM_WriteCommand:
  3323                           	opt callstack 0
  3324                           
  3325 ;; *************** function _convert_adc_data *****************
  3326 ;; Defined at:
  3327 ;;		line 38 in file "mbmc.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;		None
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;  i               1  [STACK] unsigned char 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1  [STACK] void 
  3334 ;; Registers used:
  3335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/39
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3345 ;;Total ram usage:        0 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    9
  3348 ;; This function calls:
  3349 ;;		_conv_raw_result
  3350 ;;		_lp_filter
  3351 ;; This function is called by:
  3352 ;;		_main
  3353 ;; This function uses a reentrant model
  3354 ;;
  3355                           
  3356                           	psect	text12
  3357  0173DC                     __ptext12:
  3358                           	opt callstack 0
  3359  0173DC                     _convert_adc_data:
  3360                           	opt callstack 0
  3361                           
  3362                           ; BSR set to: 0
  3363                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3364  0173DC  52E6               	movf	postinc1,f,c
  3365                           
  3366                           ;mbmc.c: 40:  uint8_t i = 0;
  3367                           ;stkvar	_i @ sp[(-1)+0]
  3368                           
  3369                           ;incstack = 0
  3370  0173DE  0EFF               	movlw	-1
  3371  0173E0  6AE3               	clrf	plusw1,c
  3372  0173E2                     l11832:
  3373                           
  3374                           ;mbmc.c: 46:   C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  3375  0173E2  0E00               	movlw	0
  3376  0173E4  6EE6               	movwf	postinc1,c
  3377                           
  3378                           ;stkvar	_i @ sp[(-2)+0]
  3379  0173E6  0EFE               	movlw	-2
  3380  0173E8  50E3               	movf	plusw1,w,c
  3381  0173EA  6EE6               	movwf	postinc1,c
  3382  0173EC  0E00               	movlw	0
  3383  0173EE  6EE6               	movwf	postinc1,c
  3384                           
  3385                           ;stkvar	_i @ sp[(-4)+0]
  3386  0173F0  0EFC               	movlw	-4
  3387  0173F2  50E3               	movf	plusw1,w,c
  3388  0173F4  6EE6               	movwf	postinc1,c
  3389  0173F6  EC71  F099         	call	_conv_raw_result	;wreg free
  3390  0173FA  0060  F0CB  FFE6   	movff	btemp,postinc1
  3391  017400  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3392  017406  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3393  01740C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3394  017412  ECF8  F0AC         	call	_lp_filter	;wreg free
  3395                           
  3396                           ;stkvar	_i @ sp[(-1)+0]
  3397  017416  0EFF               	movlw	-1
  3398  017418  50E3               	movf	plusw1,w,c
  3399  01741A  0D04               	mullw	4
  3400  01741C  0E00               	movlw	low _C
  3401  01741E  24F3               	addwf	243,w,c
  3402  017420  6ED9               	movwf	fsr2l,c
  3403  017422  0E03               	movlw	high _C
  3404  017424  20F4               	addwfc	prodh,w,c
  3405  017426  6EDA               	movwf	fsr2h,c
  3406  017428  0060  F0CB  FFDE   	movff	btemp,postinc2
  3407  01742E  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  3408  017434  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  3409  01743A  0060  F0D7  FFDE   	movff	btemp+3,postinc2
  3410                           
  3411                           ;mbmc.c: 48:  } while (++i < 16);
  3412                           ;stkvar	_i @ sp[(-1)+0]
  3413  017440  0EFF               	movlw	-1
  3414  017442  2AE3               	incf	plusw1,f,c
  3415  017444  0EFF               	movlw	-1
  3416  017446  006F FF8C  F032    	movff	plusw1,btemp
  3417  01744C  0E0F               	movlw	15
  3418  01744E  6432               	cpfsgt	btemp^0,c
  3419  017450  D7C8               	goto	l11832
  3420                           
  3421                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  3422  017452  52E5               	movf	postdec1,f,c
  3423  017454  0012               	return		;funcret
  3424  017456                     __end_of_convert_adc_data:
  3425                           	opt callstack 0
  3426                           
  3427 ;; *************** function _lp_filter *****************
  3428 ;; Defined at:
  3429 ;;		line 16 in file "mbmc.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  new             4  [STACK] const float 
  3432 ;;  bn              1  [STACK] const unsigned char 
  3433 ;;  slow            1  [STACK] const char 
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;  lp_speed        4  [STACK] float 
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  4  [STACK] float 
  3438 ;; Registers used:
  3439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3440 ;; Tracked objects:
  3441 ;;		On entry : 0/39
  3442 ;;		On exit  : 0/0
  3443 ;;		Unchanged: 0/0
  3444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3449 ;;Total ram usage:        0 bytes
  3450 ;; Hardware stack levels used:    1
  3451 ;; Hardware stack levels required when called:    8
  3452 ;; This function calls:
  3453 ;;		___fladd
  3454 ;;		___flmul
  3455 ;;		___flsub
  3456 ;; This function is called by:
  3457 ;;		_convert_adc_data
  3458 ;; This function uses a reentrant model
  3459 ;;
  3460                           
  3461                           	psect	text13
  3462  0159F0                     __ptext13:
  3463                           	opt callstack 0
  3464  0159F0                     _lp_filter:
  3465                           	opt callstack 0
  3466                           
  3467                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3468  0159F0  52E6               	movf	postinc1,f,c
  3469  0159F2  52E6               	movf	postinc1,f,c
  3470  0159F4  52E6               	movf	postinc1,f,c
  3471  0159F6  52E6               	movf	postinc1,f,c
  3472                           
  3473                           ;mbmc.c: 16: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 17: {;mbmc.c: 18:  static float smooth[16];;mbmc.c: 19:  float lp_speed;;mbmc.c: 21: 
      +                           if (bn >= 16)
  3474                           ;stkvar	_bn @ sp[(-4)+-5]
  3475                           
  3476                           ;incstack = 0
  3477  0159F8  0EF7               	movlw	-9
  3478  0159FA  006F FF8C  F032    	movff	plusw1,btemp
  3479  015A00  0E0F               	movlw	15
  3480  015A02  6432               	cpfsgt	btemp^0,c
  3481  015A04  D011               	goto	l11686
  3482  015A06                     u12460:
  3483                           
  3484                           ;mbmc.c: 22:   return new;
  3485                           ;stkvar	_new @ sp[(-4)+-4]
  3486  015A06  0EF8               	movlw	-8
  3487  015A08  006F FF8C  F032    	movff	plusw1,btemp
  3488  015A0E  0EF9               	movlw	-7
  3489  015A10  006F FF8C  F033    	movff	plusw1,btemp+1
  3490  015A16  0EFA               	movlw	-6
  3491  015A18  006F FF8C  F034    	movff	plusw1,btemp+2
  3492  015A1E  0EFB               	movlw	-5
  3493  015A20  006F FF8C  F035    	movff	plusw1,btemp+3
  3494  015A26  D0BF               	goto	l1688
  3495  015A28                     l11686:
  3496                           
  3497                           ;mbmc.c: 24:  if (slow == (-1)) {
  3498                           ;stkvar	_slow @ sp[(-4)+-6]
  3499  015A28  0EF6               	movlw	-10
  3500  015A2A  28E3               	incf	plusw1,w,c
  3501  015A2C  A4D8               	btfss	status,2,c
  3502  015A2E  D012               	goto	l11694
  3503                           
  3504                           ;mbmc.c: 25:   smooth[bn] = 0.0;
  3505                           ;stkvar	_bn @ sp[(-4)+-5]
  3506  015A30  0EF7               	movlw	-9
  3507  015A32  50E3               	movf	plusw1,w,c
  3508  015A34  0D04               	mullw	4
  3509  015A36  0E00               	movlw	low lp_filter@smooth
  3510  015A38  24F3               	addwf	243,w,c
  3511  015A3A  6ED9               	movwf	fsr2l,c
  3512  015A3C  0E02               	movlw	high lp_filter@smooth
  3513  015A3E  20F4               	addwfc	prodh,w,c
  3514  015A40  6EDA               	movwf	fsr2h,c
  3515  015A42  0E00               	movlw	0
  3516  015A44  6EDE               	movwf	postinc2,c
  3517  015A46  0E00               	movlw	0
  3518  015A48  6EDE               	movwf	postinc2,c
  3519  015A4A  0E00               	movlw	0
  3520  015A4C  6EDE               	movwf	postinc2,c
  3521  015A4E  0E00               	movlw	0
  3522  015A50  6EDD               	movwf	postdec2,c
  3523  015A52  D7D9               	goto	u12460
  3524  015A54                     l11694:
  3525                           
  3526                           ;mbmc.c: 29:  if (slow) {
  3527                           ;stkvar	_slow @ sp[(-4)+-6]
  3528  015A54  0EF6               	movlw	-10
  3529  015A56  50E3               	movf	plusw1,w,c
  3530  015A58  B4D8               	btfsc	status,2,c
  3531  015A5A  D008               	goto	l11698
  3532                           
  3533                           ;mbmc.c: 30:   lp_speed = 0.066;
  3534  015A5C  0E02               	movlw	2
  3535  015A5E  6E3A               	movwf	(btemp+8)^0,c
  3536  015A60  0E2B               	movlw	43
  3537  015A62  6E3B               	movwf	(btemp+9)^0,c
  3538  015A64  0E87               	movlw	135
  3539  015A66  6E3C               	movwf	(btemp+10)^0,c
  3540  015A68  0E3D               	movlw	61
  3541  015A6A  D007               	goto	L1
  3542  015A6C                     l11698:
  3543                           
  3544                           ;mbmc.c: 32:   lp_speed = 0.125;
  3545  015A6C  0E00               	movlw	0
  3546  015A6E  6E3A               	movwf	(btemp+8)^0,c
  3547  015A70  0E00               	movlw	0
  3548  015A72  6E3B               	movwf	(btemp+9)^0,c
  3549  015A74  0E00               	movlw	0
  3550  015A76  6E3C               	movwf	(btemp+10)^0,c
  3551  015A78  0E3E               	movlw	62
  3552  015A7A                     L1:
  3553  015A7A  6E3D               	movwf	(btemp+11)^0,c
  3554                           
  3555                           ;stkvar	_lp_speed @ sp[(-4)+0]
  3556  015A7C  0EFC               	movlw	-4
  3557  015A7E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  3558  015A84  0EFD               	movlw	-3
  3559  015A86  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  3560  015A8C  0EFE               	movlw	-2
  3561  015A8E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  3562  015A94  0EFF               	movlw	-1
  3563  015A96  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3564                           
  3565                           ;mbmc.c: 35:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
  3566                           ;stkvar	_bn @ sp[(-4)+-5]
  3567  015A9C  0EF7               	movlw	-9
  3568  015A9E  50E3               	movf	plusw1,w,c
  3569  015AA0  0D04               	mullw	4
  3570  015AA2  0E00               	movlw	low lp_filter@smooth
  3571  015AA4  24F3               	addwf	243,w,c
  3572  015AA6  6ED9               	movwf	fsr2l,c
  3573  015AA8  0E02               	movlw	high lp_filter@smooth
  3574  015AAA  20F4               	addwfc	prodh,w,c
  3575  015AAC  6EDA               	movwf	fsr2h,c
  3576  015AAE  006F FF7B FFE6     	movff	postinc2,postinc1
  3577  015AB4  006F FF7B FFE6     	movff	postinc2,postinc1
  3578  015ABA  006F FF7B FFE6     	movff	postinc2,postinc1
  3579  015AC0  006F FF7B FFE6     	movff	postinc2,postinc1
  3580                           
  3581                           ;stkvar	_lp_speed @ sp[(-8)+0]
  3582  015AC6  0EF8               	movlw	-8
  3583  015AC8  006F FF8F FFE6     	movff	plusw1,postinc1
  3584  015ACE  006F FF8F FFE6     	movff	plusw1,postinc1
  3585  015AD4  006F FF8F FFE6     	movff	plusw1,postinc1
  3586  015ADA  006F FF8F FFE6     	movff	plusw1,postinc1
  3587                           
  3588                           ;stkvar	_bn @ sp[(-12)+-5]
  3589  015AE0  0EEF               	movlw	-17
  3590  015AE2  50E3               	movf	plusw1,w,c
  3591  015AE4  0D04               	mullw	4
  3592  015AE6  0E00               	movlw	low lp_filter@smooth
  3593  015AE8  24F3               	addwf	243,w,c
  3594  015AEA  6ED9               	movwf	fsr2l,c
  3595  015AEC  0E02               	movlw	high lp_filter@smooth
  3596  015AEE  20F4               	addwfc	prodh,w,c
  3597  015AF0  6EDA               	movwf	fsr2h,c
  3598  015AF2  006F FF7B FFE6     	movff	postinc2,postinc1
  3599  015AF8  006F FF7B FFE6     	movff	postinc2,postinc1
  3600  015AFE  006F FF7B FFE6     	movff	postinc2,postinc1
  3601  015B04  006F FF7B FFE6     	movff	postinc2,postinc1
  3602                           
  3603                           ;stkvar	_new @ sp[(-16)+-4]
  3604  015B0A  0EEC               	movlw	-20
  3605  015B0C  006F FF8F FFE6     	movff	plusw1,postinc1
  3606  015B12  006F FF8F FFE6     	movff	plusw1,postinc1
  3607  015B18  006F FF8F FFE6     	movff	plusw1,postinc1
  3608  015B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  3609  015B24  ECEF  F0BC         	call	___flsub	;wreg free
  3610  015B28  0060  F0CB  FFE6   	movff	btemp,postinc1
  3611  015B2E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3612  015B34  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3613  015B3A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3614  015B40  ECC1  F08E         	call	___flmul	;wreg free
  3615  015B44  0060  F0CB  FFE6   	movff	btemp,postinc1
  3616  015B4A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3617  015B50  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3618  015B56  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3619  015B5C  ECD6  F092         	call	___fladd	;wreg free
  3620                           
  3621                           ;stkvar	_bn @ sp[(-4)+-5]
  3622  015B60  0EF7               	movlw	-9
  3623  015B62  50E3               	movf	plusw1,w,c
  3624  015B64  0D04               	mullw	4
  3625  015B66  0E00               	movlw	low lp_filter@smooth
  3626  015B68  24F3               	addwf	243,w,c
  3627  015B6A  6ED9               	movwf	fsr2l,c
  3628  015B6C  0E02               	movlw	high lp_filter@smooth
  3629  015B6E  20F4               	addwfc	prodh,w,c
  3630  015B70  6EDA               	movwf	fsr2h,c
  3631  015B72  0060  F0CB  FFDE   	movff	btemp,postinc2
  3632  015B78  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  3633  015B7E  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  3634  015B84  0060  F0D7  FFDD   	movff	btemp+3,postdec2
  3635  015B8A  52DD               	movf	postdec2,f,c
  3636  015B8C  52DD               	movf	postdec2,f,c
  3637  015B8E  006F FF78  F032    	movff	postinc2,btemp
  3638  015B94  006F FF78  F033    	movff	postinc2,btemp+1
  3639  015B9A  006F FF78  F034    	movff	postinc2,btemp+2
  3640  015BA0  006F FF78  F035    	movff	postinc2,btemp+3
  3641  015BA6                     l1688:
  3642                           
  3643                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
  3644  015BA6  0EF6               	movlw	246
  3645  015BA8  26E1               	addwf	fsr1l,f,c
  3646  015BAA  0EFF               	movlw	255
  3647  015BAC  22E2               	addwfc	fsr1h,f,c
  3648  015BAE  0012               	return		;funcret
  3649  015BB0                     __end_of_lp_filter:
  3650                           	opt callstack 0
  3651                           
  3652 ;; *************** function _conv_raw_result *****************
  3653 ;; Defined at:
  3654 ;;		line 80 in file "daq.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;  chan            1  [STACK] const enum E16136
  3657 ;;  to_what         1  [STACK] const enum E16198
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;		None
  3660 ;; Return value:  Size  Location     Type
  3661 ;;                  4  [STACK] float 
  3662 ;; Registers used:
  3663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/39
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3673 ;;Total ram usage:        0 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; Hardware stack levels required when called:    8
  3676 ;; This function calls:
  3677 ;;		___fldiv
  3678 ;;		___flmul
  3679 ;;		___flsub
  3680 ;;		___xxtofl
  3681 ;;		_get_raw_result
  3682 ;;		_nanf
  3683 ;; This function is called by:
  3684 ;;		_convert_adc_data
  3685 ;; This function uses a reentrant model
  3686 ;;
  3687                           
  3688                           	psect	text14
  3689  0132E2                     __ptext14:
  3690                           	opt callstack 0
  3691  0132E2                     _conv_raw_result:
  3692                           	opt callstack 21
  3693                           
  3694                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  3695                           
  3696                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3697                           ;incstack = 0
  3698  0132E2  D242               	goto	l11670
  3699  0132E4                     l11616:
  3700                           
  3701                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  3702                           ;stkvar	_chan @ sp[(0)+-1]
  3703  0132E4  0EFF               	movlw	-1
  3704  0132E6  006F FF8C  F03D    	movff	plusw1,btemp+11
  3705  0132EC  0E77               	movlw	119
  3706  0132EE  6E3A               	movwf	(btemp+8)^0,c
  3707  0132F0  0E3C               	movlw	60
  3708  0132F2  6E3B               	movwf	(btemp+9)^0,c
  3709  0132F4  2A3D               	incf	(btemp+11)^0,f,c
  3710  0132F6  D003               	goto	u12344
  3711  0132F8                     u12345:
  3712  0132F8  343B               	rlcf	(btemp+9)^0,w,c
  3713  0132FA  323B               	rrcf	(btemp+9)^0,f,c
  3714  0132FC  323A               	rrcf	(btemp+8)^0,f,c
  3715  0132FE                     u12344:
  3716  0132FE  2E3D               	decfsz	(btemp+11)^0,f,c
  3717  013300  D7FB               	goto	u12345
  3718  013302  B03A               	btfsc	(btemp+8)^0,0,c
  3719  013304  D007               	goto	l11622
  3720                           
  3721                           ;daq.c: 86:    return nanf("");
  3722  013306  0EFF               	movlw	low (STR_27+18)
  3723  013308  6EE6               	movwf	postinc1,c
  3724  01330A  0EFE               	movlw	high (STR_27+18)
  3725  01330C  6EE6               	movwf	postinc1,c
  3726  01330E  EC61  F0BB         	call	_nanf	;wreg free
  3727  013312  D23A               	goto	l1651
  3728  013314                     l11622:
  3729                           
  3730                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  3731                           ;stkvar	_chan @ sp[(0)+-1]
  3732  013314  0EFF               	movlw	-1
  3733  013316  006F FF8C  F03D    	movff	plusw1,btemp+11
  3734  01331C  0E03               	movlw	3
  3735  01331E  6E3A               	movwf	(btemp+8)^0,c
  3736  013320  0E00               	movlw	0
  3737  013322  6E3B               	movwf	(btemp+9)^0,c
  3738  013324  2A3D               	incf	(btemp+11)^0,f,c
  3739  013326  D003               	goto	u12364
  3740  013328                     u12365:
  3741  013328  343B               	rlcf	(btemp+9)^0,w,c
  3742  01332A  323B               	rrcf	(btemp+9)^0,f,c
  3743  01332C  323A               	rrcf	(btemp+8)^0,f,c
  3744  01332E                     u12364:
  3745  01332E  2E3D               	decfsz	(btemp+11)^0,f,c
  3746  013330  D7FB               	goto	u12365
  3747  013332  A03A               	btfss	(btemp+8)^0,0,c
  3748  013334  D0EB               	goto	l11636
  3749                           
  3750                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  3751                           ;stkvar	_chan @ sp[(0)+-1]
  3752  013336  0EFF               	movlw	-1
  3753  013338  006F FF8C  F03D    	movff	plusw1,btemp+11
  3754  01333E  0E01               	movlw	1
  3755  013340  6E3A               	movwf	(btemp+8)^0,c
  3756  013342  0E00               	movlw	0
  3757  013344  6E3B               	movwf	(btemp+9)^0,c
  3758  013346  2A3D               	incf	(btemp+11)^0,f,c
  3759  013348  D003               	goto	u12384
  3760  01334A                     u12385:
  3761  01334A  343B               	rlcf	(btemp+9)^0,w,c
  3762  01334C  323B               	rrcf	(btemp+9)^0,f,c
  3763  01334E  323A               	rrcf	(btemp+8)^0,f,c
  3764  013350                     u12384:
  3765  013350  2E3D               	decfsz	(btemp+11)^0,f,c
  3766  013352  D7FB               	goto	u12385
  3767  013354  A03A               	btfss	(btemp+8)^0,0,c
  3768  013356  D06D               	goto	l11632
  3769                           
  3770                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.14385
      +                          00;
  3771  013358  0E6A               	movlw	106
  3772  01335A  6EE6               	movwf	postinc1,c
  3773  01335C  0E4D               	movlw	77
  3774  01335E  6EE6               	movwf	postinc1,c
  3775  013360  0E13               	movlw	19
  3776  013362  6EE6               	movwf	postinc1,c
  3777  013364  0E3E               	movlw	62
  3778  013366  6EE6               	movwf	postinc1,c
  3779  013368  0060  F39C  F03A   	movff	_R+32,btemp+8	;volatile
  3780  01336E  0060  F3A0  F03B   	movff	_R+33,btemp+9	;volatile
  3781  013374  0E00               	movlw	0
  3782  013376  BE3B               	btfsc	(btemp+9)^0,7,c
  3783  013378  0EFF               	movlw	255
  3784  01337A  6E3C               	movwf	(btemp+10)^0,c
  3785  01337C  6E3D               	movwf	(btemp+11)^0,c
  3786  01337E  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  3787  013384  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  3788  01338A  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  3789  013390  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  3790  013396  0E01               	movlw	1
  3791  013398  6EE6               	movwf	postinc1,c
  3792  01339A  EC12  F0AB         	call	___xxtofl	;wreg free
  3793  01339E  0060  F0CB  FFE6   	movff	btemp,postinc1
  3794  0133A4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3795  0133AA  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3796  0133B0  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3797                           
  3798                           ;stkvar	_chan @ sp[(-8)+-1]
  3799  0133B6  0EF7               	movlw	-9
  3800  0133B8  50E3               	movf	plusw1,w,c
  3801  0133BA  6EE6               	movwf	postinc1,c
  3802  0133BC  EC72  F0C1         	call	_get_raw_result	;wreg free
  3803  0133C0  0060  F0C8  F03C   	movff	btemp,btemp+10
  3804  0133C6  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  3805  0133CC  503C               	movf	(btemp+10)^0,w,c
  3806  0133CE  6E36               	movwf	(btemp+4)^0,c
  3807  0133D0  503D               	movf	(btemp+11)^0,w,c
  3808  0133D2  6E37               	movwf	(btemp+5)^0,c
  3809  0133D4  6A38               	clrf	(btemp+6)^0,c
  3810  0133D6  6A39               	clrf	(btemp+7)^0,c
  3811  0133D8  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  3812  0133DE  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  3813  0133E4  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  3814  0133EA  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  3815  0133F0  0E00               	movlw	0
  3816  0133F2  6EE6               	movwf	postinc1,c
  3817  0133F4  EC12  F0AB         	call	___xxtofl	;wreg free
  3818  0133F8  0060  F0CB  FFE6   	movff	btemp,postinc1
  3819  0133FE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3820  013404  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3821  01340A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3822  013410  ECEF  F0BC         	call	___flsub	;wreg free
  3823  013414  0060  F0CB  FFE6   	movff	btemp,postinc1
  3824  01341A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3825  013420  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3826  013426  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3827  01342C  ECC1  F08E         	call	___flmul	;wreg free
  3828  013430  D1AB               	goto	l1651
  3829  013432                     l11632:
  3830                           
  3831                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.06010
      +                          00;
  3832  013432  0E6B               	movlw	107
  3833  013434  6EE6               	movwf	postinc1,c
  3834  013436  0E2B               	movlw	43
  3835  013438  6EE6               	movwf	postinc1,c
  3836  01343A  0E76               	movlw	118
  3837  01343C  6EE6               	movwf	postinc1,c
  3838  01343E  0E3D               	movlw	61
  3839  013440  6EE6               	movwf	postinc1,c
  3840  013442  0060  F3A4  F03A   	movff	_R+34,btemp+8	;volatile
  3841  013448  0060  F3A8  F03B   	movff	_R+35,btemp+9	;volatile
  3842  01344E  0E00               	movlw	0
  3843  013450  BE3B               	btfsc	(btemp+9)^0,7,c
  3844  013452  0EFF               	movlw	255
  3845  013454  6E3C               	movwf	(btemp+10)^0,c
  3846  013456  6E3D               	movwf	(btemp+11)^0,c
  3847  013458  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  3848  01345E  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  3849  013464  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  3850  01346A  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  3851  013470  0E01               	movlw	1
  3852  013472  6EE6               	movwf	postinc1,c
  3853  013474  EC12  F0AB         	call	___xxtofl	;wreg free
  3854  013478  0060  F0CB  FFE6   	movff	btemp,postinc1
  3855  01347E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3856  013484  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3857  01348A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3858                           
  3859                           ;stkvar	_chan @ sp[(-8)+-1]
  3860  013490  0EF7               	movlw	-9
  3861  013492  50E3               	movf	plusw1,w,c
  3862  013494  6EE6               	movwf	postinc1,c
  3863  013496  EC72  F0C1         	call	_get_raw_result	;wreg free
  3864  01349A  0060  F0C8  F03C   	movff	btemp,btemp+10
  3865  0134A0  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  3866  0134A6  503C               	movf	(btemp+10)^0,w,c
  3867  0134A8  6E36               	movwf	(btemp+4)^0,c
  3868  0134AA  503D               	movf	(btemp+11)^0,w,c
  3869  0134AC  6E37               	movwf	(btemp+5)^0,c
  3870  0134AE  6A38               	clrf	(btemp+6)^0,c
  3871  0134B0  6A39               	clrf	(btemp+7)^0,c
  3872  0134B2  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  3873  0134B8  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  3874  0134BE  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  3875  0134C4  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  3876  0134CA  0E00               	movlw	0
  3877  0134CC  6EE6               	movwf	postinc1,c
  3878  0134CE  EC12  F0AB         	call	___xxtofl	;wreg free
  3879  0134D2  0060  F0CB  FFE6   	movff	btemp,postinc1
  3880  0134D8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3881  0134DE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3882  0134E4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3883  0134EA  ECEF  F0BC         	call	___flsub	;wreg free
  3884  0134EE  0060  F0CB  FFE6   	movff	btemp,postinc1
  3885  0134F4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3886  0134FA  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3887  013500  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3888  013506  ECC1  F08E         	call	___flmul	;wreg free
  3889  01350A  D13E               	goto	l1651
  3890  01350C                     l11636:
  3891                           
  3892                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  3893                           ;stkvar	_chan @ sp[(0)+-1]
  3894  01350C  0EFF               	movlw	-1
  3895  01350E  006F FF8C  F03D    	movff	plusw1,btemp+11
  3896  013514  0E00               	movlw	0
  3897  013516  6E3A               	movwf	(btemp+8)^0,c
  3898  013518  0E08               	movlw	8
  3899  01351A  6E3B               	movwf	(btemp+9)^0,c
  3900  01351C  2A3D               	incf	(btemp+11)^0,f,c
  3901  01351E  D003               	goto	u12404
  3902  013520                     u12405:
  3903  013520  343B               	rlcf	(btemp+9)^0,w,c
  3904  013522  323B               	rrcf	(btemp+9)^0,f,c
  3905  013524  323A               	rrcf	(btemp+8)^0,f,c
  3906  013526                     u12404:
  3907  013526  2E3D               	decfsz	(btemp+11)^0,f,c
  3908  013528  D7FB               	goto	u12405
  3909  01352A  A03A               	btfss	(btemp+8)^0,0,c
  3910  01352C  D008               	goto	l11644
  3911                           
  3912                           ;daq.c: 96:     return 25.0;
  3913  01352E  0E00               	movlw	0
  3914  013530  6E32               	movwf	btemp^0,c
  3915  013532  0E00               	movlw	0
  3916  013534  6E33               	movwf	(btemp+1)^0,c
  3917  013536  0EC8               	movlw	200
  3918  013538  6E34               	movwf	(btemp+2)^0,c
  3919  01353A  0E41               	movlw	65
  3920  01353C  D113               	goto	L2
  3921  01353E                     l11644:
  3922                           
  3923                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  3924  01353E  0E00               	movlw	0
  3925  013540  6EE6               	movwf	postinc1,c
  3926  013542  0E00               	movlw	0
  3927  013544  6EE6               	movwf	postinc1,c
  3928  013546  0E7A               	movlw	122
  3929  013548  6EE6               	movwf	postinc1,c
  3930  01354A  0E44               	movlw	68
  3931  01354C  6EE6               	movwf	postinc1,c
  3932  01354E  0E61               	movlw	97
  3933  013550  6EE6               	movwf	postinc1,c
  3934  013552  0E03               	movlw	3
  3935  013554  6EE6               	movwf	postinc1,c
  3936  013556  0E84               	movlw	132
  3937  013558  6EE6               	movwf	postinc1,c
  3938  01355A  0E40               	movlw	64
  3939  01355C  6EE6               	movwf	postinc1,c
  3940                           
  3941                           ;stkvar	_chan @ sp[(-8)+-1]
  3942  01355E  0EF7               	movlw	-9
  3943  013560  50E3               	movf	plusw1,w,c
  3944  013562  6EE6               	movwf	postinc1,c
  3945  013564  EC72  F0C1         	call	_get_raw_result	;wreg free
  3946  013568  0060  F0C8  F03C   	movff	btemp,btemp+10
  3947  01356E  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  3948  013574  503C               	movf	(btemp+10)^0,w,c
  3949  013576  6E36               	movwf	(btemp+4)^0,c
  3950  013578  503D               	movf	(btemp+11)^0,w,c
  3951  01357A  6E37               	movwf	(btemp+5)^0,c
  3952  01357C  6A38               	clrf	(btemp+6)^0,c
  3953  01357E  6A39               	clrf	(btemp+7)^0,c
  3954  013580  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  3955  013586  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  3956  01358C  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  3957  013592  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  3958  013598  0E00               	movlw	0
  3959  01359A  6EE6               	movwf	postinc1,c
  3960  01359C  EC12  F0AB         	call	___xxtofl	;wreg free
  3961  0135A0  0060  F0CB  FFE6   	movff	btemp,postinc1
  3962  0135A6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3963  0135AC  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3964  0135B2  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3965  0135B8  ECC1  F08E         	call	___flmul	;wreg free
  3966  0135BC  0060  F0CB  FFE6   	movff	btemp,postinc1
  3967  0135C2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3968  0135C8  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3969  0135CE  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3970  0135D4  ECB4  F096         	call	___fldiv	;wreg free
  3971  0135D8  D0D7               	goto	l1651
  3972  0135DA                     l11648:
  3973                           
  3974                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  3975                           ;stkvar	_chan @ sp[(0)+-1]
  3976  0135DA  0EFF               	movlw	-1
  3977  0135DC  006F FF8C  F03D    	movff	plusw1,btemp+11
  3978  0135E2  0E03               	movlw	3
  3979  0135E4  6E3A               	movwf	(btemp+8)^0,c
  3980  0135E6  0E00               	movlw	0
  3981  0135E8  6E3B               	movwf	(btemp+9)^0,c
  3982  0135EA  2A3D               	incf	(btemp+11)^0,f,c
  3983  0135EC  D003               	goto	u12424
  3984  0135EE                     u12425:
  3985  0135EE  343B               	rlcf	(btemp+9)^0,w,c
  3986  0135F0  323B               	rrcf	(btemp+9)^0,f,c
  3987  0135F2  323A               	rrcf	(btemp+8)^0,f,c
  3988  0135F4                     u12424:
  3989  0135F4  2E3D               	decfsz	(btemp+11)^0,f,c
  3990  0135F6  D7FB               	goto	u12425
  3991  0135F8  B03A               	btfsc	(btemp+8)^0,0,c
  3992  0135FA  D011               	goto	u12450
  3993                           
  3994                           ;stkvar	_chan @ sp[(0)+-1]
  3995  0135FC  0EFF               	movlw	-1
  3996  0135FE  006F FF8C  F03D    	movff	plusw1,btemp+11
  3997  013604  0E00               	movlw	0
  3998  013606  6E3A               	movwf	(btemp+8)^0,c
  3999  013608  0E08               	movlw	8
  4000  01360A  6E3B               	movwf	(btemp+9)^0,c
  4001  01360C  2A3D               	incf	(btemp+11)^0,f,c
  4002  01360E  D003               	goto	u12444
  4003  013610                     u12445:
  4004  013610  343B               	rlcf	(btemp+9)^0,w,c
  4005  013612  323B               	rrcf	(btemp+9)^0,f,c
  4006  013614  323A               	rrcf	(btemp+8)^0,f,c
  4007  013616                     u12444:
  4008  013616  2E3D               	decfsz	(btemp+11)^0,f,c
  4009  013618  D7FB               	goto	u12445
  4010  01361A  A03A               	btfss	(btemp+8)^0,0,c
  4011  01361C  D04E               	goto	l11656
  4012  01361E                     u12450:
  4013                           
  4014                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  4015  01361E  0E00               	movlw	0
  4016  013620  6EE6               	movwf	postinc1,c
  4017  013622  0E00               	movlw	0
  4018  013624  6EE6               	movwf	postinc1,c
  4019  013626  0E7A               	movlw	122
  4020  013628  6EE6               	movwf	postinc1,c
  4021  01362A  0E44               	movlw	68
  4022  01362C  6EE6               	movwf	postinc1,c
  4023  01362E  0E00               	movlw	0
  4024  013630  6EE6               	movwf	postinc1,c
  4025  013632  0E00               	movlw	0
  4026  013634  6EE6               	movwf	postinc1,c
  4027  013636  0E20               	movlw	32
  4028  013638  6EE6               	movwf	postinc1,c
  4029  01363A  0E3F               	movlw	63
  4030  01363C  6EE6               	movwf	postinc1,c
  4031                           
  4032                           ;stkvar	_chan @ sp[(-8)+-1]
  4033  01363E  0EF7               	movlw	-9
  4034  013640  50E3               	movf	plusw1,w,c
  4035  013642  6EE6               	movwf	postinc1,c
  4036  013644  EC72  F0C1         	call	_get_raw_result	;wreg free
  4037  013648  0060  F0C8  F03C   	movff	btemp,btemp+10
  4038  01364E  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4039  013654  503C               	movf	(btemp+10)^0,w,c
  4040  013656  6E36               	movwf	(btemp+4)^0,c
  4041  013658  503D               	movf	(btemp+11)^0,w,c
  4042  01365A  6E37               	movwf	(btemp+5)^0,c
  4043  01365C  6A38               	clrf	(btemp+6)^0,c
  4044  01365E  6A39               	clrf	(btemp+7)^0,c
  4045  013660  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4046  013666  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4047  01366C  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4048  013672  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4049  013678  0E00               	movlw	0
  4050  01367A  6EE6               	movwf	postinc1,c
  4051  01367C  EC12  F0AB         	call	___xxtofl	;wreg free
  4052  013680  0060  F0CB  FFE6   	movff	btemp,postinc1
  4053  013686  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4054  01368C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4055  013692  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4056  013698  ECC1  F08E         	call	___flmul	;wreg free
  4057  01369C  0060  F0CB  FFE6   	movff	btemp,postinc1
  4058  0136A2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4059  0136A8  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4060  0136AE  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4061  0136B4  ECB4  F096         	call	___fldiv	;wreg free
  4062  0136B8  D067               	goto	l1651
  4063  0136BA                     l11656:
  4064                           
  4065                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  4066  0136BA  0E00               	movlw	0
  4067  0136BC  6EE6               	movwf	postinc1,c
  4068  0136BE  0E00               	movlw	0
  4069  0136C0  6EE6               	movwf	postinc1,c
  4070  0136C2  0E7A               	movlw	122
  4071  0136C4  6EE6               	movwf	postinc1,c
  4072  0136C6  0E44               	movlw	68
  4073  0136C8  6EE6               	movwf	postinc1,c
  4074  0136CA  0E61               	movlw	97
  4075  0136CC  6EE6               	movwf	postinc1,c
  4076  0136CE  0E03               	movlw	3
  4077  0136D0  6EE6               	movwf	postinc1,c
  4078  0136D2  0E84               	movlw	132
  4079  0136D4  6EE6               	movwf	postinc1,c
  4080  0136D6  0E40               	movlw	64
  4081  0136D8  6EE6               	movwf	postinc1,c
  4082                           
  4083                           ;stkvar	_chan @ sp[(-8)+-1]
  4084  0136DA  0EF7               	movlw	-9
  4085  0136DC  50E3               	movf	plusw1,w,c
  4086  0136DE  6EE6               	movwf	postinc1,c
  4087  0136E0  EC72  F0C1         	call	_get_raw_result	;wreg free
  4088  0136E4  0060  F0C8  F03C   	movff	btemp,btemp+10
  4089  0136EA  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4090  0136F0  503C               	movf	(btemp+10)^0,w,c
  4091  0136F2  6E36               	movwf	(btemp+4)^0,c
  4092  0136F4  503D               	movf	(btemp+11)^0,w,c
  4093  0136F6  6E37               	movwf	(btemp+5)^0,c
  4094  0136F8  6A38               	clrf	(btemp+6)^0,c
  4095  0136FA  6A39               	clrf	(btemp+7)^0,c
  4096  0136FC  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4097  013702  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4098  013708  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4099  01370E  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4100  013714  0E00               	movlw	0
  4101  013716  6EE6               	movwf	postinc1,c
  4102  013718  EC12  F0AB         	call	___xxtofl	;wreg free
  4103  01371C  0060  F0CB  FFE6   	movff	btemp,postinc1
  4104  013722  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4105  013728  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4106  01372E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4107  013734  ECC1  F08E         	call	___flmul	;wreg free
  4108  013738  0060  F0CB  FFE6   	movff	btemp,postinc1
  4109  01373E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4110  013744  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4111  01374A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4112  013750  ECB4  F096         	call	___fldiv	;wreg free
  4113  013754  D019               	goto	l1651
  4114  013756                     l11662:
  4115                           
  4116                           ;daq.c: 109:   return 0.0;
  4117  013756  0E00               	movlw	0
  4118  013758  6E32               	movwf	btemp^0,c
  4119  01375A  0E00               	movlw	0
  4120  01375C  6E33               	movwf	(btemp+1)^0,c
  4121  01375E  0E00               	movlw	0
  4122  013760  6E34               	movwf	(btemp+2)^0,c
  4123  013762  0E00               	movlw	0
  4124  013764                     L2:
  4125  013764  6E35               	movwf	(btemp+3)^0,c
  4126  013766  D010               	goto	l1651
  4127  013768                     l11670:
  4128                           
  4129                           ;stkvar	_to_what @ sp[(0)+-2]
  4130  013768  0EFE               	movlw	-2
  4131  01376A  50E3               	movf	plusw1,w,c
  4132  01376C  6E3C               	movwf	(btemp+10)^0,c
  4133  01376E  6A3D               	clrf	(btemp+11)^0,c
  4134                           
  4135                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4136                           ; Switch size 1, requested type "simple"
  4137                           ; Number of cases is 1, Range of values is 0 to 0
  4138                           ; switch strategies available:
  4139                           ; Name         Instructions Cycles
  4140                           ; simple_byte            4     3 (average)
  4141                           ;	Chosen strategy is simple_byte
  4142  013770  503D               	movf	(btemp+11)^0,w,c
  4143  013772  0A00               	xorlw	0	; case 0
  4144  013774  A4D8               	btfss	status,2,c
  4145  013776  D7EF               	goto	l11662
  4146                           
  4147                           ; Switch size 1, requested type "simple"
  4148                           ; Number of cases is 2, Range of values is 0 to 1
  4149                           ; switch strategies available:
  4150                           ; Name         Instructions Cycles
  4151                           ; simple_byte            7     4 (average)
  4152                           ;	Chosen strategy is simple_byte
  4153  013778  503C               	movf	(btemp+10)^0,w,c
  4154  01377A  0A00               	xorlw	0	; case 0
  4155  01377C  B4D8               	btfsc	status,2,c
  4156  01377E  D5B2               	goto	l11616
  4157  013780  0A01               	xorlw	1	; case 1
  4158  013782  B4D8               	btfsc	status,2,c
  4159  013784  D72A               	goto	l11648
  4160  013786  D7E7               	goto	l11662
  4161  013788                     l1651:
  4162                           
  4163                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  4164  013788  52E5               	movf	postdec1,f,c
  4165  01378A  52E5               	movf	postdec1,f,c
  4166  01378C  0012               	return		;funcret
  4167  01378E                     __end_of_conv_raw_result:
  4168                           	opt callstack 0
  4169                           
  4170 ;; *************** function _nanf *****************
  4171 ;; Defined at:
  4172 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  s               2  [STACK] PTR const unsigned char 
  4175 ;;		 -> STR_33(1), 
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;  u               4  [STACK] struct .
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  4  [STACK] float 
  4180 ;; Registers used:
  4181 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/39
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4191 ;;Total ram usage:        0 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; Hardware stack levels required when called:    6
  4194 ;; This function calls:
  4195 ;;		Nothing
  4196 ;; This function is called by:
  4197 ;;		_conv_raw_result
  4198 ;; This function uses a reentrant model
  4199 ;;
  4200                           
  4201                           	psect	text15
  4202  0176C2                     __ptext15:
  4203                           	opt callstack 0
  4204  0176C2                     _nanf:
  4205                           	opt callstack 0
  4206                           
  4207                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4208  0176C2  52E6               	movf	postinc1,f,c
  4209  0176C4  52E6               	movf	postinc1,f,c
  4210  0176C6  52E6               	movf	postinc1,f,c
  4211  0176C8  52E6               	movf	postinc1,f,c
  4212                           
  4213                           ;incstack = 0
  4214  0176CA  0EFF               	movlw	255
  4215  0176CC  6E3A               	movwf	(btemp+8)^0,c
  4216  0176CE  0EFF               	movlw	255
  4217  0176D0  6E3B               	movwf	(btemp+9)^0,c
  4218  0176D2  0EFF               	movlw	255
  4219  0176D4  6E3C               	movwf	(btemp+10)^0,c
  4220  0176D6  0E7F               	movlw	127
  4221  0176D8  6E3D               	movwf	(btemp+11)^0,c
  4222                           
  4223                           ;stkvar	_u @ sp[(-4)+0]
  4224  0176DA  0EFC               	movlw	-4
  4225  0176DC  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4226  0176E2  0EFD               	movlw	-3
  4227  0176E4  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4228  0176EA  0EFE               	movlw	-2
  4229  0176EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4230  0176F2  0EFF               	movlw	-1
  4231  0176F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4232                           
  4233                           ;stkvar	_u @ sp[(-4)+0]
  4234  0176FA  0EFC               	movlw	-4
  4235  0176FC  006F FF8C  F032    	movff	plusw1,btemp
  4236  017702  0EFD               	movlw	-3
  4237  017704  006F FF8C  F033    	movff	plusw1,btemp+1
  4238  01770A  0EFE               	movlw	-2
  4239  01770C  006F FF8C  F034    	movff	plusw1,btemp+2
  4240  017712  0EFF               	movlw	-1
  4241  017714  006F FF8C  F035    	movff	plusw1,btemp+3
  4242                           
  4243                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  4244  01771A  0EFA               	movlw	250
  4245  01771C  26E1               	addwf	fsr1l,f,c
  4246  01771E  0EFF               	movlw	255
  4247  017720  22E2               	addwfc	fsr1h,f,c
  4248  017722  0012               	return		;funcret
  4249  017724                     __end_of_nanf:
  4250                           	opt callstack 0
  4251                           
  4252 ;; *************** function _get_raw_result *****************
  4253 ;; Defined at:
  4254 ;;		line 72 in file "daq.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;  index           1  [STACK] const enum E16136
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;		None
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  2  [STACK] unsigned short 
  4261 ;; Registers used:
  4262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/39
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4272 ;;Total ram usage:        0 bytes
  4273 ;; Hardware stack levels used:    1
  4274 ;; Hardware stack levels required when called:    6
  4275 ;; This function calls:
  4276 ;;		Nothing
  4277 ;; This function is called by:
  4278 ;;		_conv_raw_result
  4279 ;; This function uses a reentrant model
  4280 ;;
  4281                           
  4282                           	psect	text16
  4283  0182E4                     __ptext16:
  4284                           	opt callstack 0
  4285  0182E4                     _get_raw_result:
  4286                           	opt callstack 22
  4287                           
  4288                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  4289                           ;stkvar	_index @ sp[(0)+-1]
  4290                           
  4291                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4292                           ;incstack = 0
  4293  0182E4  0EFF               	movlw	-1
  4294  0182E6  50E3               	movf	plusw1,w,c
  4295  0182E8  0D02               	mullw	2
  4296  0182EA  50F3               	movf	243,w,c
  4297  0182EC  0FC7               	addlw	low _R
  4298  0182EE  6ED9               	movwf	fsr2l,c
  4299  0182F0  6ADA               	clrf	fsr2h,c
  4300  0182F2  006F FF78  F032    	movff	postinc2,btemp
  4301  0182F8  006F FF74  F033    	movff	postdec2,btemp+1
  4302                           
  4303                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  4304  0182FE  52E5               	movf	postdec1,f,c
  4305  018300  0012               	return		;funcret
  4306  018302                     __end_of_get_raw_result:
  4307                           	opt callstack 0
  4308                           
  4309 ;; *************** function ___xxtofl *****************
  4310 ;; Defined at:
  4311 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  sign            1  [STACK] unsigned char 
  4314 ;;  val             4  [STACK] long 
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;  arg             4  [STACK] unsigned long 
  4317 ;;  exp             1  [STACK] unsigned char 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  4  [STACK] unsigned char 
  4320 ;; Registers used:
  4321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/39
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4331 ;;Total ram usage:        0 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:    6
  4334 ;; This function calls:
  4335 ;;		Nothing
  4336 ;; This function is called by:
  4337 ;;		_conv_raw_result
  4338 ;; This function uses a reentrant model
  4339 ;;
  4340                           
  4341                           	psect	text17
  4342  015624                     __ptext17:
  4343                           	opt callstack 0
  4344  015624                     ___xxtofl:
  4345                           	opt callstack 0
  4346                           
  4347                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4348  015624  0E05               	movlw	5
  4349  015626  26E1               	addwf	fsr1l,f,c
  4350  015628  0E00               	movlw	0
  4351  01562A  22E2               	addwfc	fsr1h,f,c
  4352                           
  4353                           ;stkvar	_sign @ sp[(-5)+-1]
  4354                           
  4355                           ;incstack = 0
  4356  01562C  0EFA               	movlw	-6
  4357  01562E  50E3               	movf	plusw1,w,c
  4358  015630  B4D8               	btfsc	status,2,c
  4359  015632  D01D               	goto	l11112
  4360                           
  4361                           ;stkvar	_val @ sp[(-5)+-5]
  4362  015634  0EF9               	movlw	-7
  4363  015636  AEE3               	btfss	plusw1,7,c
  4364  015638  D01A               	goto	l11112
  4365                           
  4366                           ;stkvar	_val @ sp[(-5)+-5]
  4367  01563A  0EF6               	movlw	-10
  4368  01563C  006F FF8C  F03A    	movff	plusw1,btemp+8
  4369  015642  0EF7               	movlw	-9
  4370  015644  006F FF8C  F03B    	movff	plusw1,btemp+9
  4371  01564A  0EF8               	movlw	-8
  4372  01564C  006F FF8C  F03C    	movff	plusw1,btemp+10
  4373  015652  0EF9               	movlw	-7
  4374  015654  006F FF8C  F03D    	movff	plusw1,btemp+11
  4375  01565A  1E3A               	comf	(btemp+8)^0,f,c
  4376  01565C  1E3B               	comf	(btemp+9)^0,f,c
  4377  01565E  1E3C               	comf	(btemp+10)^0,f,c
  4378  015660  1E3D               	comf	(btemp+11)^0,f,c
  4379  015662  2A3A               	incf	(btemp+8)^0,f,c
  4380  015664  0E00               	movlw	0
  4381  015666  223B               	addwfc	(btemp+9)^0,f,c
  4382  015668  223C               	addwfc	(btemp+10)^0,f,c
  4383  01566A  223D               	addwfc	(btemp+11)^0,f,c
  4384  01566C  D010               	goto	L3
  4385  01566E                     l11112:
  4386                           
  4387                           ;stkvar	_val @ sp[(-5)+-5]
  4388  01566E  0EF6               	movlw	-10
  4389  015670  006F FF8C  F03A    	movff	plusw1,btemp+8
  4390  015676  0EF7               	movlw	-9
  4391  015678  006F FF8C  F03B    	movff	plusw1,btemp+9
  4392  01567E  0EF8               	movlw	-8
  4393  015680  006F FF8C  F03C    	movff	plusw1,btemp+10
  4394  015686  0EF9               	movlw	-7
  4395  015688  006F FF8C  F03D    	movff	plusw1,btemp+11
  4396  01568E                     L3:
  4397                           
  4398                           ;stkvar	_arg @ sp[(-5)+0]
  4399  01568E  0EFB               	movlw	-5
  4400  015690  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4401  015696  0EFC               	movlw	-4
  4402  015698  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4403  01569E  0EFD               	movlw	-3
  4404  0156A0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4405  0156A6  0EFE               	movlw	-2
  4406  0156A8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4407                           
  4408                           ;stkvar	_val @ sp[(-5)+-5]
  4409  0156AE  0EF6               	movlw	-10
  4410  0156B0  50E3               	movf	plusw1,w,c
  4411  0156B2  E113               	bnz	l11120
  4412  0156B4  0EF7               	movlw	-9
  4413  0156B6  50E3               	movf	plusw1,w,c
  4414  0156B8  E110               	bnz	l11120
  4415  0156BA  0EF8               	movlw	-8
  4416  0156BC  50E3               	movf	plusw1,w,c
  4417  0156BE  E10D               	bnz	l11120
  4418  0156C0  0EF9               	movlw	-7
  4419  0156C2  50E3               	movf	plusw1,w,c
  4420  0156C4  A4D8               	btfss	status,2,c
  4421  0156C6  D009               	goto	l11120
  4422  0156C8  0E00               	movlw	0
  4423  0156CA  6E32               	movwf	btemp^0,c
  4424  0156CC  0E00               	movlw	0
  4425  0156CE  6E33               	movwf	(btemp+1)^0,c
  4426  0156D0  0E00               	movlw	0
  4427  0156D2  6E34               	movwf	(btemp+2)^0,c
  4428  0156D4  0E00               	movlw	0
  4429  0156D6  6E35               	movwf	(btemp+3)^0,c
  4430  0156D8  D0A2               	goto	l2695
  4431  0156DA                     l11120:
  4432  0156DA  0E96               	movlw	150
  4433  0156DC  6E3D               	movwf	(btemp+11)^0,c
  4434                           
  4435                           ;stkvar	_exp @ sp[(-5)+4]
  4436  0156DE  0EFF               	movlw	-1
  4437  0156E0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4438  0156E6  D00B               	goto	l11124
  4439  0156E8                     l11122:
  4440                           
  4441                           ;stkvar	_exp @ sp[(-5)+4]
  4442  0156E8  0EFF               	movlw	-1
  4443  0156EA  2AE3               	incf	plusw1,f,c
  4444                           
  4445                           ;stkvar	_arg @ sp[(-5)+0]
  4446  0156EC  90D8               	bcf	status,0,c
  4447  0156EE  0EFE               	movlw	-2
  4448  0156F0  32E3               	rrcf	plusw1,f,c
  4449  0156F2  0EFD               	movlw	-3
  4450  0156F4  32E3               	rrcf	plusw1,f,c
  4451  0156F6  0EFC               	movlw	-4
  4452  0156F8  32E3               	rrcf	plusw1,f,c
  4453  0156FA  0EFB               	movlw	-5
  4454  0156FC  32E3               	rrcf	plusw1,f,c
  4455  0156FE                     l11124:
  4456                           
  4457                           ;stkvar	_arg @ sp[(-5)+0]
  4458  0156FE  50E1               	movf	fsr1l,w,c
  4459  015700  0FFB               	addlw	-5
  4460  015702  6ED9               	movwf	fsr2l,c
  4461  015704  50E2               	movf	fsr1h,w,c
  4462  015706  6EDA               	movwf	fsr2h,c
  4463  015708  0EFF               	movlw	255
  4464  01570A  22DA               	addwfc	fsr2h,f,c
  4465  01570C  52DE               	movf	postinc2,f,c
  4466  01570E  52DE               	movf	postinc2,f,c
  4467  015710  52DE               	movf	postinc2,f,c
  4468  015712  0EFE               	movlw	254
  4469  015714  14DD               	andwf	postdec2,w,c
  4470  015716  B4D8               	btfsc	status,2,c
  4471  015718  D018               	goto	l11132
  4472  01571A  D7E6               	goto	l11122
  4473  01571C                     l11126:
  4474                           
  4475                           ;stkvar	_exp @ sp[(-5)+4]
  4476  01571C  0EFF               	movlw	-1
  4477  01571E  2AE3               	incf	plusw1,f,c
  4478                           
  4479                           ;stkvar	_arg @ sp[(-5)+0]
  4480  015720  50E1               	movf	fsr1l,w,c
  4481  015722  0FFB               	addlw	-5
  4482  015724  6ED9               	movwf	fsr2l,c
  4483  015726  50E2               	movf	fsr1h,w,c
  4484  015728  6EDA               	movwf	fsr2h,c
  4485  01572A  0EFF               	movlw	255
  4486  01572C  22DA               	addwfc	fsr2h,f,c
  4487  01572E  2ADE               	incf	postinc2,f,c
  4488  015730  0E00               	movlw	0
  4489  015732  22DE               	addwfc	postinc2,f,c
  4490  015734  22DE               	addwfc	postinc2,f,c
  4491  015736  22DE               	addwfc	postinc2,f,c
  4492                           
  4493                           ;stkvar	_arg @ sp[(-5)+0]
  4494  015738  90D8               	bcf	status,0,c
  4495  01573A  0EFE               	movlw	-2
  4496  01573C  32E3               	rrcf	plusw1,f,c
  4497  01573E  0EFD               	movlw	-3
  4498  015740  32E3               	rrcf	plusw1,f,c
  4499  015742  0EFC               	movlw	-4
  4500  015744  32E3               	rrcf	plusw1,f,c
  4501  015746  0EFB               	movlw	-5
  4502  015748  32E3               	rrcf	plusw1,f,c
  4503  01574A                     l11132:
  4504                           
  4505                           ;stkvar	_arg @ sp[(-5)+0]
  4506  01574A  50E1               	movf	fsr1l,w,c
  4507  01574C  0FFB               	addlw	-5
  4508  01574E  6ED9               	movwf	fsr2l,c
  4509  015750  50E2               	movf	fsr1h,w,c
  4510  015752  6EDA               	movwf	fsr2h,c
  4511  015754  0EFF               	movlw	255
  4512  015756  22DA               	addwfc	fsr2h,f,c
  4513  015758  52DE               	movf	postinc2,f,c
  4514  01575A  52DE               	movf	postinc2,f,c
  4515  01575C  52DE               	movf	postinc2,f,c
  4516  01575E  0EFF               	movlw	255
  4517  015760  14DD               	andwf	postdec2,w,c
  4518  015762  B4D8               	btfsc	status,2,c
  4519  015764  D00C               	goto	l11136
  4520  015766  D7DA               	goto	l11126
  4521  015768                     l11134:
  4522                           
  4523                           ;stkvar	_exp @ sp[(-5)+4]
  4524  015768  0EFF               	movlw	-1
  4525  01576A  06E3               	decf	plusw1,f,c
  4526                           
  4527                           ;stkvar	_arg @ sp[(-5)+0]
  4528  01576C  90D8               	bcf	status,0,c
  4529  01576E  0EFB               	movlw	-5
  4530  015770  36E3               	rlcf	plusw1,f,c
  4531  015772  0EFC               	movlw	-4
  4532  015774  36E3               	rlcf	plusw1,f,c
  4533  015776  0EFD               	movlw	-3
  4534  015778  36E3               	rlcf	plusw1,f,c
  4535  01577A  0EFE               	movlw	-2
  4536  01577C  36E3               	rlcf	plusw1,f,c
  4537  01577E                     l11136:
  4538                           
  4539                           ;stkvar	_arg @ sp[(-5)+0]
  4540  01577E  0EFD               	movlw	-3
  4541  015780  BEE3               	btfsc	plusw1,7,c
  4542  015782  D007               	goto	u12200
  4543                           
  4544                           ;stkvar	_exp @ sp[(-5)+4]
  4545  015784  0EFF               	movlw	-1
  4546  015786  006F FF8C  F032    	movff	plusw1,btemp
  4547  01578C  0E02               	movlw	2
  4548  01578E  6032               	cpfslt	btemp^0,c
  4549  015790  D7EB               	goto	l11134
  4550  015792                     u12200:
  4551                           
  4552                           ;stkvar	_exp @ sp[(-5)+4]
  4553  015792  0EFF               	movlw	-1
  4554  015794  B0E3               	btfsc	plusw1,0,c
  4555  015796  D002               	goto	l11144
  4556                           
  4557                           ;stkvar	_arg @ sp[(-5)+0]
  4558  015798  0EFD               	movlw	-3
  4559  01579A  9EE3               	bcf	plusw1,7,c
  4560  01579C                     l11144:
  4561                           
  4562                           ;stkvar	_exp @ sp[(-5)+4]
  4563  01579C  50E1               	movf	fsr1l,w,c
  4564  01579E  0FFF               	addlw	-1
  4565  0157A0  6ED9               	movwf	fsr2l,c
  4566  0157A2  50E2               	movf	fsr1h,w,c
  4567  0157A4  6EDA               	movwf	fsr2h,c
  4568  0157A6  0EFF               	movlw	255
  4569  0157A8  22DA               	addwfc	fsr2h,f,c
  4570  0157AA  90D8               	bcf	status,0,c
  4571  0157AC  32DF               	rrcf	indf2,f,c
  4572                           
  4573                           ;stkvar	_exp @ sp[(-5)+4]
  4574  0157AE  0EFF               	movlw	-1
  4575  0157B0  006F FF8C  F03D    	movff	plusw1,btemp+11
  4576  0157B6  0060  F0F4  F036   	movff	btemp+11,btemp+4
  4577  0157BC  6A37               	clrf	(btemp+5)^0,c
  4578  0157BE  6A38               	clrf	(btemp+6)^0,c
  4579  0157C0  6A39               	clrf	(btemp+7)^0,c
  4580  0157C2  0060  F0D8  F039   	movff	btemp+4,btemp+7
  4581  0157C8  6A38               	clrf	(btemp+6)^0,c
  4582  0157CA  6A37               	clrf	(btemp+5)^0,c
  4583  0157CC  6A36               	clrf	(btemp+4)^0,c
  4584                           
  4585                           ;stkvar	_arg @ sp[(-5)+0]
  4586  0157CE  50E1               	movf	fsr1l,w,c
  4587  0157D0  0FFB               	addlw	-5
  4588  0157D2  6ED9               	movwf	fsr2l,c
  4589  0157D4  50E2               	movf	fsr1h,w,c
  4590  0157D6  6EDA               	movwf	fsr2h,c
  4591  0157D8  0EFF               	movlw	255
  4592  0157DA  22DA               	addwfc	fsr2h,f,c
  4593  0157DC  5036               	movf	(btemp+4)^0,w,c
  4594  0157DE  12DE               	iorwf	postinc2,f,c
  4595  0157E0  5037               	movf	(btemp+5)^0,w,c
  4596  0157E2  12DE               	iorwf	postinc2,f,c
  4597  0157E4  5038               	movf	(btemp+6)^0,w,c
  4598  0157E6  12DE               	iorwf	postinc2,f,c
  4599  0157E8  5039               	movf	(btemp+7)^0,w,c
  4600  0157EA  12DE               	iorwf	postinc2,f,c
  4601                           
  4602                           ;stkvar	_sign @ sp[(-5)+-1]
  4603  0157EC  0EFA               	movlw	-6
  4604  0157EE  50E3               	movf	plusw1,w,c
  4605  0157F0  B4D8               	btfsc	status,2,c
  4606  0157F2  D005               	goto	l11154
  4607                           
  4608                           ;stkvar	_val @ sp[(-5)+-5]
  4609  0157F4  0EF9               	movlw	-7
  4610  0157F6  AEE3               	btfss	plusw1,7,c
  4611  0157F8  D002               	goto	l11154
  4612                           
  4613                           ;stkvar	_arg @ sp[(-5)+0]
  4614  0157FA  0EFE               	movlw	-2
  4615  0157FC  8EE3               	bsf	plusw1,7,c
  4616  0157FE                     l11154:
  4617                           
  4618                           ;stkvar	_arg @ sp[(-5)+0]
  4619  0157FE  0EFB               	movlw	-5
  4620  015800  006F FF8C  F032    	movff	plusw1,btemp
  4621  015806  0EFC               	movlw	-4
  4622  015808  006F FF8C  F033    	movff	plusw1,btemp+1
  4623  01580E  0EFD               	movlw	-3
  4624  015810  006F FF8C  F034    	movff	plusw1,btemp+2
  4625  015816  0EFE               	movlw	-2
  4626  015818  006F FF8C  F035    	movff	plusw1,btemp+3
  4627  01581E                     l2695:
  4628                           
  4629                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  4630  01581E  0EF6               	movlw	246
  4631  015820  26E1               	addwf	fsr1l,f,c
  4632  015822  0EFF               	movlw	255
  4633  015824  22E2               	addwfc	fsr1h,f,c
  4634  015826  0012               	return		;funcret
  4635  015828                     __end_of___xxtofl:
  4636                           	opt callstack 0
  4637                           
  4638 ;; *************** function _clear_adc_scan *****************
  4639 ;; Defined at:
  4640 ;;		line 64 in file "daq.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;		None
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;		None
  4645 ;; Return value:  Size  Location     Type
  4646 ;;                  1  [STACK] void 
  4647 ;; Registers used:
  4648 ;;		None
  4649 ;; Tracked objects:
  4650 ;;		On entry : 0/39
  4651 ;;		On exit  : 3F/0
  4652 ;;		Unchanged: 0/0
  4653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4658 ;;Total ram usage:        0 bytes
  4659 ;; Hardware stack levels used:    1
  4660 ;; Hardware stack levels required when called:    6
  4661 ;; This function calls:
  4662 ;;		Nothing
  4663 ;; This function is called by:
  4664 ;;		_main
  4665 ;; This function uses a reentrant model
  4666 ;;
  4667                           
  4668                           	psect	text18
  4669  018512                     __ptext18:
  4670                           	opt callstack 0
  4671  018512                     _clear_adc_scan:
  4672                           	opt callstack 24
  4673                           
  4674                           ;daq.c: 66:  R.done = 0;
  4675                           
  4676                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4677                           ;incstack = 0
  4678  018512  0100               	movlb	0	; () banked
  4679  018514  6BEE               	clrf	(_R+39)& (0+255),b	;volatile
  4680                           
  4681                           ; BSR set to: 0
  4682                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4683  018516  0012               	return		;funcret
  4684  018518                     __end_of_clear_adc_scan:
  4685                           	opt callstack 0
  4686                           
  4687 ;; *************** function _check_help *****************
  4688 ;; Defined at:
  4689 ;;		line 40 in file "mconfig.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;  flipper         1  [STACK] const _Bool 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  estatus         1  [STACK] _Bool 
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  1  [STACK] _Bool 
  4696 ;; Registers used:
  4697 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4698 ;; Tracked objects:
  4699 ;;		On entry : 3F/1
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4707 ;;Total ram usage:        0 bytes
  4708 ;; Hardware stack levels used:    1
  4709 ;; Hardware stack levels required when called:   18
  4710 ;; This function calls:
  4711 ;;		_StartTimer
  4712 ;;		_TimerDone
  4713 ;;		_display_help
  4714 ;;		_display_info
  4715 ;;		_get_vterm_ptr
  4716 ;;		_help_button
  4717 ;;		_mode_lamp_bright
  4718 ;;		_mode_lamp_dim
  4719 ;;		_set_display_info
  4720 ;;		_set_temp_display_help
  4721 ;;		_set_vterm
  4722 ;;		_sprintf
  4723 ;;		_update_lcd
  4724 ;;		_vterm_dump
  4725 ;; This function is called by:
  4726 ;;		_main
  4727 ;; This function uses a reentrant model
  4728 ;;
  4729                           
  4730                           	psect	text19
  4731  0153FC                     __ptext19:
  4732                           	opt callstack 0
  4733  0153FC                     _check_help:
  4734                           	opt callstack 0
  4735                           
  4736                           ; BSR set to: 0
  4737                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4738  0153FC  52E6               	movf	postinc1,f,c
  4739                           
  4740                           ;mconfig.c: 40: _Bool check_help(const _Bool flipper);mconfig.c: 41: {;mconfig.c: 42:  _
      +                          Bool estatus=0;
  4741                           ;stkvar	_estatus @ sp[(-1)+0]
  4742                           
  4743                           ;incstack = 0
  4744  0153FE  0EFF               	movlw	-1
  4745  015400  6AE3               	clrf	plusw1,c
  4746                           
  4747                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  4748  015402  EC3F  F0BE         	call	_help_button	;wreg free
  4749  015406  5032               	movf	btemp^0,w,c
  4750  015408  B4D8               	btfsc	status,2,c
  4751  01540A  D0D3               	goto	l11874
  4752  01540C  EC79  F0C2         	call	_display_info	;wreg free
  4753  015410  0432               	decf	btemp^0,w,c
  4754  015412  B4D8               	btfsc	status,2,c
  4755  015414  D0CE               	goto	l11874
  4756                           
  4757                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  4758  015416  0EDC               	movlw	220
  4759  015418  6EE6               	movwf	postinc1,c
  4760  01541A  0E05               	movlw	5
  4761  01541C  6EE6               	movwf	postinc1,c
  4762  01541E  0E0B               	movlw	11
  4763  015420  6EE6               	movwf	postinc1,c
  4764  015422  EC21  F0BE         	call	_StartTimer	;wreg free
  4765                           
  4766                           ;mconfig.c: 48:   if (V.debug)
  4767  015426  0101               	movlb	1	; () banked
  4768  015428  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  4769                           
  4770                           ; BSR set to: 1
  4771                           ;mconfig.c: 49:    vterm_dump();
  4772  01542A  EC58  F0B1         	call	_vterm_dump	;wreg free
  4773                           
  4774                           ;mconfig.c: 51:   set_vterm(1);
  4775  01542E  0E01               	movlw	1
  4776  015430  6EE6               	movwf	postinc1,c
  4777  015432  ECBC  F0C1         	call	_set_vterm	;wreg free
  4778                           
  4779                           ; BSR set to: 5
  4780                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  4781  015436  EC79  F0C2         	call	_display_info	;wreg free
  4782  01543A  5032               	movf	btemp^0,w,c
  4783  01543C  6EE6               	movwf	postinc1,c
  4784  01543E  EC39  F0C2         	call	_set_temp_display_help	;wreg free
  4785                           
  4786                           ; BSR set to: 1
  4787                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  4788  015442  0E01               	movlw	1
  4789  015444  6EE6               	movwf	postinc1,c
  4790  015446  EC81  F0C1         	call	_set_display_info	;wreg free
  4791                           
  4792                           ;mconfig.c: 54:   if (flipper) {
  4793                           ;stkvar	_flipper @ sp[(-1)+-1]
  4794  01544A  0EFE               	movlw	-2
  4795  01544C  50E3               	movf	plusw1,w,c
  4796  01544E  B4D8               	btfsc	status,2,c
  4797  015450  D019               	goto	l11860
  4798                           
  4799                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  4800  015452  0EC1               	movlw	low STR_15
  4801  015454  6EE6               	movwf	postinc1,c
  4802  015456  0EFF               	movlw	high STR_15
  4803  015458  6EE6               	movwf	postinc1,c
  4804  01545A  0E00               	movlw	low STR_17
  4805  01545C  6EE6               	movwf	postinc1,c
  4806  01545E  0EFF               	movlw	high STR_17
  4807  015460  6EE6               	movwf	postinc1,c
  4808  015462  0E01               	movlw	1
  4809  015464  6EE6               	movwf	postinc1,c
  4810  015466  0E00               	movlw	0
  4811  015468  6EE6               	movwf	postinc1,c
  4812  01546A  EC25  F0BF         	call	_get_vterm_ptr	;wreg free
  4813  01546E  0060  F0CB  FFE6   	movff	btemp,postinc1
  4814  015474  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4815  01547A  0E06               	movlw	6
  4816  01547C  6EE6               	movwf	postinc1,c
  4817  01547E  EC1E  F0B4         	call	_sprintf	;wreg free
  4818                           
  4819                           ;mconfig.c: 56:   } else {
  4820  015482  D018               	goto	l1555
  4821  015484                     l11860:
  4822                           
  4823                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  4824  015484  0ED7               	movlw	low STR_16
  4825  015486  6EE6               	movwf	postinc1,c
  4826  015488  0EFF               	movlw	high STR_16
  4827  01548A  6EE6               	movwf	postinc1,c
  4828  01548C  0E00               	movlw	low STR_17
  4829  01548E  6EE6               	movwf	postinc1,c
  4830  015490  0EFF               	movlw	high STR_17
  4831  015492  6EE6               	movwf	postinc1,c
  4832  015494  0E01               	movlw	1
  4833  015496  6EE6               	movwf	postinc1,c
  4834  015498  0E00               	movlw	0
  4835  01549A  6EE6               	movwf	postinc1,c
  4836  01549C  EC25  F0BF         	call	_get_vterm_ptr	;wreg free
  4837  0154A0  0060  F0CB  FFE6   	movff	btemp,postinc1
  4838  0154A6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4839  0154AC  0E06               	movlw	6
  4840  0154AE  6EE6               	movwf	postinc1,c
  4841  0154B0  EC1E  F0B4         	call	_sprintf	;wreg free
  4842  0154B4                     l1555:
  4843                           
  4844                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  4845  0154B4  0101               	movlb	1	; () banked
  4846  0154B6  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4847  0154B8  32E8               	rrcf	wreg,f,c
  4848  0154BA  32E8               	rrcf	wreg,f,c
  4849  0154BC  0B03               	andlw	3
  4850  0154BE  0D24               	mullw	36
  4851  0154C0  0E12               	movlw	18
  4852  0154C2  26F3               	addwf	243,f,c
  4853  0154C4  0E00               	movlw	0
  4854  0154C6  22F4               	addwfc	244,f,c
  4855  0154C8  0E45               	movlw	low _T
  4856  0154CA  6E3C               	movwf	(btemp+10)^0,c
  4857  0154CC  0EFE               	movlw	high _T
  4858  0154CE  6E3D               	movwf	(btemp+11)^0,c
  4859  0154D0  50F3               	movf	243,w,c
  4860  0154D2  263C               	addwf	(btemp+10)^0,f,c
  4861  0154D4  50F4               	movf	244,w,c
  4862  0154D6  223D               	addwfc	(btemp+11)^0,f,c
  4863  0154D8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4864  0154DE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4865  0154E4  0ECD               	movlw	low STR_19
  4866  0154E6  6EE6               	movwf	postinc1,c
  4867  0154E8  0EFF               	movlw	high STR_19
  4868  0154EA  6EE6               	movwf	postinc1,c
  4869  0154EC  0E01               	movlw	1
  4870  0154EE  6EE6               	movwf	postinc1,c
  4871  0154F0  0E01               	movlw	1
  4872  0154F2  6EE6               	movwf	postinc1,c
  4873  0154F4  EC25  F0BF         	call	_get_vterm_ptr	;wreg free
  4874  0154F8  0060  F0CB  FFE6   	movff	btemp,postinc1
  4875  0154FE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4876  015504  0E06               	movlw	6
  4877  015506  6EE6               	movwf	postinc1,c
  4878  015508  EC1E  F0B4         	call	_sprintf	;wreg free
  4879                           
  4880                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  4881  01550C  0101               	movlb	1	; () banked
  4882  01550E  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4883  015510  32E8               	rrcf	wreg,f,c
  4884  015512  32E8               	rrcf	wreg,f,c
  4885  015514  0B03               	andlw	3
  4886  015516  0D24               	mullw	36
  4887  015518  0E45               	movlw	low _T
  4888  01551A  6E3C               	movwf	(btemp+10)^0,c
  4889  01551C  0EFE               	movlw	high _T
  4890  01551E  6E3D               	movwf	(btemp+11)^0,c
  4891  015520  50F3               	movf	243,w,c
  4892  015522  263C               	addwf	(btemp+10)^0,f,c
  4893  015524  50F4               	movf	244,w,c
  4894  015526  223D               	addwfc	(btemp+11)^0,f,c
  4895  015528  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4896  01552E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4897  015534  0ECD               	movlw	low STR_19
  4898  015536  6EE6               	movwf	postinc1,c
  4899  015538  0EFF               	movlw	high STR_19
  4900  01553A  6EE6               	movwf	postinc1,c
  4901  01553C  0E01               	movlw	1
  4902  01553E  6EE6               	movwf	postinc1,c
  4903  015540  0E02               	movlw	2
  4904  015542  6EE6               	movwf	postinc1,c
  4905  015544  EC25  F0BF         	call	_get_vterm_ptr	;wreg free
  4906  015548  0060  F0CB  FFE6   	movff	btemp,postinc1
  4907  01554E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4908  015554  0E06               	movlw	6
  4909  015556  6EE6               	movwf	postinc1,c
  4910  015558  EC1E  F0B4         	call	_sprintf	;wreg free
  4911                           
  4912                           ;mconfig.c: 61:   V.help_id++;
  4913  01555C  EE20  F19B         	lfsr	2,_V+155	;volatile
  4914  015560  38DF               	swapf	223,w,c
  4915  015562  6E3D               	movwf	(btemp+11)^0,c
  4916  015564  323D               	rrcf	(btemp+11)^0,f,c
  4917  015566  303D               	rrcf	(btemp+11)^0,w,c
  4918  015568  0B03               	andlw	3
  4919  01556A  6E3D               	movwf	(btemp+11)^0,c
  4920  01556C  2A3D               	incf	(btemp+11)^0,f,c
  4921  01556E  3A3D               	swapf	(btemp+11)^0,f,c
  4922  015570  363D               	rlcf	(btemp+11)^0,f,c
  4923  015572  363D               	rlcf	(btemp+11)^0,f,c
  4924  015574  50DF               	movf	223,w,c
  4925  015576  183D               	xorwf	(btemp+11)^0,w,c
  4926  015578  0B3F               	andlw	-193
  4927  01557A  183D               	xorwf	(btemp+11)^0,w,c
  4928  01557C  6EDF               	movwf	223,c
  4929                           
  4930                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  4931  01557E  0EB8               	movlw	184
  4932  015580  6EE6               	movwf	postinc1,c
  4933  015582  0E0B               	movlw	11
  4934  015584  6EE6               	movwf	postinc1,c
  4935  015586  0E09               	movlw	9
  4936  015588  6EE6               	movwf	postinc1,c
  4937  01558A  EC21  F0BE         	call	_StartTimer	;wreg free
  4938                           
  4939                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  4940  01558E  0EB8               	movlw	184
  4941  015590  6EE6               	movwf	postinc1,c
  4942  015592  0E0B               	movlw	11
  4943  015594  6EE6               	movwf	postinc1,c
  4944  015596  0E07               	movlw	7
  4945  015598  6EE6               	movwf	postinc1,c
  4946  01559A  EC21  F0BE         	call	_StartTimer	;wreg free
  4947                           
  4948                           ;mconfig.c: 64:   mode_lamp_bright();
  4949  01559E  EC48  F0C2         	call	_mode_lamp_bright	;wreg free
  4950                           
  4951                           ;mconfig.c: 65:   update_lcd(1);
  4952  0155A2  0E01               	movlw	1
  4953  0155A4  6EE6               	movwf	postinc1,c
  4954  0155A6  EC97  F0B3         	call	_update_lcd	;wreg free
  4955                           
  4956                           ;mconfig.c: 66:   estatus=1;
  4957                           ;stkvar	_estatus @ sp[(-1)+0]
  4958  0155AA  0EFF               	movlw	-1
  4959  0155AC  6AE3               	clrf	plusw1,c
  4960  0155AE  2AE3               	incf	plusw1,f,c
  4961                           
  4962                           ;mconfig.c: 67:  } else {
  4963  0155B0  D032               	goto	l11890
  4964  0155B2                     l11874:
  4965                           
  4966                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  4967  0155B2  0E09               	movlw	9
  4968  0155B4  6EE6               	movwf	postinc1,c
  4969  0155B6  ECFB  F0C0         	call	_TimerDone	;wreg free
  4970  0155BA  5032               	movf	btemp^0,w,c
  4971  0155BC  B4D8               	btfsc	status,2,c
  4972  0155BE  D02B               	goto	l11890
  4973                           
  4974                           ;mconfig.c: 69:    set_vterm(0);
  4975  0155C0  0E00               	movlw	0
  4976  0155C2  6EE6               	movwf	postinc1,c
  4977  0155C4  ECBC  F0C1         	call	_set_vterm	;wreg free
  4978                           
  4979                           ; BSR set to: 5
  4980                           ;mconfig.c: 70:    V.help = 0;
  4981  0155C8  0101               	movlb	1	; () banked
  4982  0155CA  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  4983                           
  4984                           ; BSR set to: 1
  4985                           ;mconfig.c: 71:    set_display_info(display_help());
  4986  0155CC  EC7D  F0C2         	call	_display_help	;wreg free
  4987  0155D0  5032               	movf	btemp^0,w,c
  4988  0155D2  6EE6               	movwf	postinc1,c
  4989  0155D4  EC81  F0C1         	call	_set_display_info	;wreg free
  4990                           
  4991                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  4992  0155D8  0060  F657  FFE6   	movff	_V+149,postinc1
  4993  0155DE  0060  F65B  FFE6   	movff	_V+150,postinc1
  4994  0155E4  ECE5  F0C1         	call	_mode_lamp_dim	;wreg free
  4995                           
  4996                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  4997  0155E8  0E0B               	movlw	11
  4998  0155EA  6EE6               	movwf	postinc1,c
  4999  0155EC  ECFB  F0C0         	call	_TimerDone	;wreg free
  5000  0155F0  5032               	movf	btemp^0,w,c
  5001  0155F2  B4D8               	btfsc	status,2,c
  5002  0155F4  D010               	goto	l11890
  5003                           
  5004                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  5005  0155F6  0101               	movlb	1	; () banked
  5006  0155F8  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  5007  0155FA  A4D8               	btfss	status,2,c
  5008  0155FC  D002               	goto	u12570
  5009  0155FE  0E01               	movlw	1
  5010  015600  D001               	goto	u12580
  5011  015602                     u12570:
  5012  015602  0E00               	movlw	0
  5013  015604                     u12580:
  5014  015604  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  5015                           
  5016                           ; BSR set to: 1
  5017                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  5018  015606  0EDC               	movlw	220
  5019  015608  6EE6               	movwf	postinc1,c
  5020  01560A  0E05               	movlw	5
  5021  01560C  6EE6               	movwf	postinc1,c
  5022  01560E  0E0B               	movlw	11
  5023  015610  6EE6               	movwf	postinc1,c
  5024  015612  EC21  F0BE         	call	_StartTimer	;wreg free
  5025  015616                     l11890:
  5026                           
  5027                           ;mconfig.c: 79:  return estatus;
  5028                           ;stkvar	_estatus @ sp[(-1)+0]
  5029  015616  0EFF               	movlw	-1
  5030  015618  006F FF8C  F032    	movff	plusw1,btemp
  5031                           
  5032                           ; _check_help: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5033  01561E  52E5               	movf	postdec1,f,c
  5034  015620  52E5               	movf	postdec1,f,c
  5035  015622  0012               	return		;funcret
  5036  015624                     __end_of_check_help:
  5037                           	opt callstack 0
  5038                           
  5039 ;; *************** function _vterm_dump *****************
  5040 ;; Defined at:
  5041 ;;		line 121 in file "mconfig.c"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;		None
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;		None
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  1  [STACK] void 
  5048 ;; Registers used:
  5049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5050 ;; Tracked objects:
  5051 ;;		On entry : 3F/1
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5059 ;;Total ram usage:        0 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; Hardware stack levels required when called:   17
  5062 ;; This function calls:
  5063 ;;		_WaitMs
  5064 ;;		_eaDogM_WriteStringAtPos
  5065 ;;		_get_vterm_ptr
  5066 ;;		_sprintf
  5067 ;;		_wait_lcd_done
  5068 ;; This function is called by:
  5069 ;;		_check_help
  5070 ;; This function uses a reentrant model
  5071 ;;
  5072                           
  5073                           	psect	text20
  5074  0162B0                     __ptext20:
  5075                           	opt callstack 0
  5076  0162B0                     _vterm_dump:
  5077                           	opt callstack 12
  5078                           
  5079                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  5080                           
  5081                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5082                           ;incstack = 0
  5083  0162B0  0E01               	movlw	1
  5084  0162B2  6EE6               	movwf	postinc1,c
  5085  0162B4  0E00               	movlw	0
  5086  0162B6  6EE6               	movwf	postinc1,c
  5087  0162B8  EC25  F0BF         	call	_get_vterm_ptr	;wreg free
  5088  0162BC  0060  F0CB  FFE6   	movff	btemp,postinc1
  5089  0162C2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5090  0162C8  0E00               	movlw	0
  5091  0162CA  6EE6               	movwf	postinc1,c
  5092  0162CC  0E00               	movlw	0
  5093  0162CE  6EE6               	movwf	postinc1,c
  5094  0162D0  EC25  F0BF         	call	_get_vterm_ptr	;wreg free
  5095  0162D4  0060  F0CB  FFE6   	movff	btemp,postinc1
  5096  0162DA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5097  0162E0  0EA3               	movlw	low STR_21
  5098  0162E2  6EE6               	movwf	postinc1,c
  5099  0162E4  0EFF               	movlw	high STR_21
  5100  0162E6  6EE6               	movwf	postinc1,c
  5101  0162E8  0E01               	movlw	low (_V+1)
  5102  0162EA  6EE6               	movwf	postinc1,c
  5103  0162EC  0E01               	movlw	high (_V+1)
  5104  0162EE  6EE6               	movwf	postinc1,c
  5105  0162F0  0E08               	movlw	8
  5106  0162F2  6EE6               	movwf	postinc1,c
  5107  0162F4  EC1E  F0B4         	call	_sprintf	;wreg free
  5108                           
  5109                           ;mconfig.c: 124:  wait_lcd_done();
  5110  0162F8  ECAE  F0C1         	call	_wait_lcd_done	;wreg free
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  5114  0162FC  0E01               	movlw	low (_V+1)
  5115  0162FE  6EE6               	movwf	postinc1,c
  5116  016300  0E01               	movlw	high (_V+1)
  5117  016302  6EE6               	movwf	postinc1,c
  5118  016304  0E00               	movlw	0
  5119  016306  6EE6               	movwf	postinc1,c
  5120  016308  0E00               	movlw	0
  5121  01630A  6EE6               	movwf	postinc1,c
  5122  01630C  EC76  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5123                           
  5124                           ; BSR set to: 59
  5125                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  5126  016310  0E01               	movlw	1
  5127  016312  6EE6               	movwf	postinc1,c
  5128  016314  0E01               	movlw	1
  5129  016316  6EE6               	movwf	postinc1,c
  5130  016318  EC25  F0BF         	call	_get_vterm_ptr	;wreg free
  5131  01631C  0060  F0CB  FFE6   	movff	btemp,postinc1
  5132  016322  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5133  016328  0E00               	movlw	0
  5134  01632A  6EE6               	movwf	postinc1,c
  5135  01632C  0E01               	movlw	1
  5136  01632E  6EE6               	movwf	postinc1,c
  5137  016330  EC25  F0BF         	call	_get_vterm_ptr	;wreg free
  5138  016334  0060  F0CB  FFE6   	movff	btemp,postinc1
  5139  01633A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5140  016340  0EA3               	movlw	low STR_21
  5141  016342  6EE6               	movwf	postinc1,c
  5142  016344  0EFF               	movlw	high STR_21
  5143  016346  6EE6               	movwf	postinc1,c
  5144  016348  0E01               	movlw	low (_V+1)
  5145  01634A  6EE6               	movwf	postinc1,c
  5146  01634C  0E01               	movlw	high (_V+1)
  5147  01634E  6EE6               	movwf	postinc1,c
  5148  016350  0E08               	movlw	8
  5149  016352  6EE6               	movwf	postinc1,c
  5150  016354  EC1E  F0B4         	call	_sprintf	;wreg free
  5151                           
  5152                           ;mconfig.c: 127:  wait_lcd_done();
  5153  016358  ECAE  F0C1         	call	_wait_lcd_done	;wreg free
  5154                           
  5155                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  5156  01635C  0E01               	movlw	low (_V+1)
  5157  01635E  6EE6               	movwf	postinc1,c
  5158  016360  0E01               	movlw	high (_V+1)
  5159  016362  6EE6               	movwf	postinc1,c
  5160  016364  0E00               	movlw	0
  5161  016366  6EE6               	movwf	postinc1,c
  5162  016368  0E01               	movlw	1
  5163  01636A  6EE6               	movwf	postinc1,c
  5164  01636C  EC76  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5165                           
  5166                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  5167  016370  0E01               	movlw	1
  5168  016372  6EE6               	movwf	postinc1,c
  5169  016374  0E02               	movlw	2
  5170  016376  6EE6               	movwf	postinc1,c
  5171  016378  EC25  F0BF         	call	_get_vterm_ptr	;wreg free
  5172  01637C  0060  F0CB  FFE6   	movff	btemp,postinc1
  5173  016382  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5174  016388  0E00               	movlw	0
  5175  01638A  6EE6               	movwf	postinc1,c
  5176  01638C  0E02               	movlw	2
  5177  01638E  6EE6               	movwf	postinc1,c
  5178  016390  EC25  F0BF         	call	_get_vterm_ptr	;wreg free
  5179  016394  0060  F0CB  FFE6   	movff	btemp,postinc1
  5180  01639A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5181  0163A0  0EA3               	movlw	low STR_21
  5182  0163A2  6EE6               	movwf	postinc1,c
  5183  0163A4  0EFF               	movlw	high STR_21
  5184  0163A6  6EE6               	movwf	postinc1,c
  5185  0163A8  0E01               	movlw	low (_V+1)
  5186  0163AA  6EE6               	movwf	postinc1,c
  5187  0163AC  0E01               	movlw	high (_V+1)
  5188  0163AE  6EE6               	movwf	postinc1,c
  5189  0163B0  0E08               	movlw	8
  5190  0163B2  6EE6               	movwf	postinc1,c
  5191  0163B4  EC1E  F0B4         	call	_sprintf	;wreg free
  5192                           
  5193                           ;mconfig.c: 130:  wait_lcd_done();
  5194  0163B8  ECAE  F0C1         	call	_wait_lcd_done	;wreg free
  5195                           
  5196                           ; BSR set to: 0
  5197                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  5198  0163BC  0E01               	movlw	low (_V+1)
  5199  0163BE  6EE6               	movwf	postinc1,c
  5200  0163C0  0E01               	movlw	high (_V+1)
  5201  0163C2  6EE6               	movwf	postinc1,c
  5202  0163C4  0E00               	movlw	0
  5203  0163C6  6EE6               	movwf	postinc1,c
  5204  0163C8  0E02               	movlw	2
  5205  0163CA  6EE6               	movwf	postinc1,c
  5206  0163CC  EC76  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5207                           
  5208                           ; BSR set to: 59
  5209                           ;mconfig.c: 132:  WaitMs(3000);
  5210  0163D0  0EB8               	movlw	184
  5211  0163D2  6EE6               	movwf	postinc1,c
  5212  0163D4  0E0B               	movlw	11
  5213  0163D6  6EE6               	movwf	postinc1,c
  5214  0163D8  EC5B  F0BE         	call	_WaitMs	;wreg free
  5215                           
  5216                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5217  0163DC  0012               	return		;funcret
  5218  0163DE                     __end_of_vterm_dump:
  5219                           	opt callstack 0
  5220                           
  5221 ;; *************** function _sprintf *****************
  5222 ;; Defined at:
  5223 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;  s               2  [STACK] PTR unsigned char 
  5226 ;;		 -> D.lcd(216), D(218), V(187), 
  5227 ;;  fmt             2  [STACK] PTR const unsigned char 
  5228 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  5229 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  5230 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  5231 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  5232 ;;		 -> STR_11(19), STR_10(19), STR_9(19), STR_8(17), 
  5233 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  5234 ;;		 -> STR_1(17), 
  5235 ;; Auto vars:     Size  Location     Type
  5236 ;;  f               6  [STACK] struct _IO_FILE
  5237 ;;  ap              2  [STACK] PTR void [1]
  5238 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5239 ;;  ret             2    0        int 
  5240 ;; Return value:  Size  Location     Type
  5241 ;;                  2  [STACK] int 
  5242 ;; Registers used:
  5243 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5244 ;; Tracked objects:
  5245 ;;		On entry : 0/5
  5246 ;;		On exit  : 0/0
  5247 ;;		Unchanged: 0/0
  5248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5253 ;;Total ram usage:        0 bytes
  5254 ;; Hardware stack levels used:    1
  5255 ;; Hardware stack levels required when called:   14
  5256 ;; This function calls:
  5257 ;;		_vfprintf
  5258 ;; This function is called by:
  5259 ;;		_main
  5260 ;;		_check_help
  5261 ;;		_vterm_dump
  5262 ;; This function uses a reentrant model
  5263 ;;
  5264                           
  5265                           	psect	text21
  5266  01683C                     __ptext21:
  5267                           	opt callstack 0
  5268  01683C                     _sprintf:
  5269                           	opt callstack 0
  5270                           
  5271                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5272  01683C  0E08               	movlw	8
  5273  01683E  26E1               	addwf	fsr1l,f,c
  5274  016840  0E00               	movlw	0
  5275  016842  22E2               	addwfc	fsr1h,f,c
  5276                           
  5277                           ;incstack = 0
  5278  016844  0EFE               	movlw	254
  5279  016846  6E3C               	movwf	(btemp+10)^0,c
  5280  016848  0EFF               	movlw	255
  5281  01684A  6E3D               	movwf	(btemp+11)^0,c
  5282                           
  5283                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  5284  01684C  0EF5               	movlw	245
  5285  01684E  24E1               	addwf	fsr1l,w,c
  5286  016850  6E3A               	movwf	(btemp+8)^0,c
  5287  016852  0EFF               	movlw	255
  5288  016854  20E2               	addwfc	fsr1h,w,c
  5289  016856  6E3B               	movwf	(btemp+9)^0,c
  5290  016858  503C               	movf	(btemp+10)^0,w,c
  5291  01685A  263A               	addwf	(btemp+8)^0,f,c
  5292  01685C  503D               	movf	(btemp+11)^0,w,c
  5293  01685E  223B               	addwfc	(btemp+9)^0,f,c
  5294                           
  5295                           ;stkvar	_ap @ sp[(-8)+6]
  5296  016860  0EFF               	movlw	-1
  5297  016862  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5298  016868  0EFE               	movlw	-2
  5299  01686A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5300                           
  5301                           ;stkvar	_s @ sp[(-8)+-3]
  5302  016870  0EF5               	movlw	-11
  5303  016872  006F FF8C  F03C    	movff	plusw1,btemp+10
  5304  016878  0EF6               	movlw	-10
  5305  01687A  006F FF8C  F03D    	movff	plusw1,btemp+11
  5306                           
  5307                           ;stkvar	_f @ sp[(-8)+0]
  5308  016880  0EF9               	movlw	-7
  5309  016882  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5310  016888  0EF8               	movlw	-8
  5311  01688A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5312                           
  5313                           ;stkvar	_f @ sp[(-8)+0]
  5314  016890  0EFA               	movlw	250
  5315  016892  24E1               	addwf	fsr1l,w,c
  5316  016894  6ED9               	movwf	fsr2l,c
  5317  016896  0EFF               	movlw	255
  5318  016898  20E2               	addwfc	fsr1h,w,c
  5319  01689A  6EDA               	movwf	fsr2h,c
  5320  01689C  0E00               	movlw	0
  5321  01689E  6EDE               	movwf	postinc2,c
  5322  0168A0  0E00               	movlw	0
  5323  0168A2  6EDD               	movwf	postdec2,c
  5324                           
  5325                           ;stkvar	_f @ sp[(-8)+0]
  5326  0168A4  0EFC               	movlw	252
  5327  0168A6  24E1               	addwf	fsr1l,w,c
  5328  0168A8  6ED9               	movwf	fsr2l,c
  5329  0168AA  0EFF               	movlw	255
  5330  0168AC  20E2               	addwfc	fsr1h,w,c
  5331  0168AE  6EDA               	movwf	fsr2h,c
  5332  0168B0  0E00               	movlw	0
  5333  0168B2  6EDE               	movwf	postinc2,c
  5334  0168B4  0E00               	movlw	0
  5335  0168B6  6EDD               	movwf	postdec2,c
  5336                           
  5337                           ;stkvar	_ap @ sp[(-8)+6]
  5338  0168B8  0EFE               	movlw	254
  5339  0168BA  24E1               	addwf	fsr1l,w,c
  5340  0168BC  6E32               	movwf	btemp^0,c
  5341  0168BE  0EFF               	movlw	255
  5342  0168C0  20E2               	addwfc	fsr1h,w,c
  5343  0168C2  6E33               	movwf	(btemp+1)^0,c
  5344  0168C4  0060  F0CB  FFE6   	movff	btemp,postinc1
  5345  0168CA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5346                           
  5347                           ;stkvar	_fmt @ sp[(-10)+-5]
  5348  0168D0  0EF1               	movlw	-15
  5349  0168D2  006F FF8F FFE6     	movff	plusw1,postinc1
  5350  0168D8  006F FF8F FFE6     	movff	plusw1,postinc1
  5351                           
  5352                           ;stkvar	_f @ sp[(-12)+0]
  5353  0168DE  0EF4               	movlw	244
  5354  0168E0  24E1               	addwf	fsr1l,w,c
  5355  0168E2  6E32               	movwf	btemp^0,c
  5356  0168E4  0EFF               	movlw	255
  5357  0168E6  20E2               	addwfc	fsr1h,w,c
  5358  0168E8  6E33               	movwf	(btemp+1)^0,c
  5359  0168EA  0060  F0CB  FFE6   	movff	btemp,postinc1
  5360  0168F0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5361  0168F6  EC11  F0B7         	call	_vfprintf	;wreg free
  5362                           
  5363                           ;stkvar	_f @ sp[(-8)+0]
  5364  0168FA  0EFA               	movlw	250
  5365  0168FC  24E1               	addwf	fsr1l,w,c
  5366  0168FE  6ED9               	movwf	fsr2l,c
  5367  016900  0EFF               	movlw	255
  5368  016902  20E2               	addwfc	fsr1h,w,c
  5369  016904  6EDA               	movwf	fsr2h,c
  5370  016906  006F FF78  F03C    	movff	postinc2,btemp+10
  5371  01690C  006F FF74  F03D    	movff	postdec2,btemp+11
  5372                           
  5373                           ;stkvar	_s @ sp[(-8)+-3]
  5374  016912  0EF5               	movlw	-11
  5375  016914  006F FF8C  F03A    	movff	plusw1,btemp+8
  5376  01691A  0EF6               	movlw	-10
  5377  01691C  006F FF8C  F03B    	movff	plusw1,btemp+9
  5378  016922  503C               	movf	(btemp+10)^0,w,c
  5379  016924  243A               	addwf	(btemp+8)^0,w,c
  5380  016926  6ED9               	movwf	fsr2l,c
  5381  016928  503D               	movf	(btemp+11)^0,w,c
  5382  01692A  203B               	addwfc	(btemp+9)^0,w,c
  5383  01692C  6EDA               	movwf	fsr2h,c
  5384  01692E  0E00               	movlw	0
  5385  016930  6EDF               	movwf	indf2,c
  5386                           
  5387                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  5388  016932  0EF8               	movlw	248
  5389  016934  26E1               	addwf	fsr1l,f,c
  5390  016936  0EFF               	movlw	255
  5391  016938  22E2               	addwfc	fsr1h,f,c
  5392  01693A  52E5               	movf	postdec1,f,c
  5393  01693C  50E7               	movf	indf1,w,c
  5394  01693E  5EE1               	subwf	fsr1l,f,c
  5395  016940  0E00               	movlw	0
  5396  016942  5AE2               	subwfb	fsr1h,f,c
  5397  016944  0012               	return		;funcret
  5398  016946                     __end_of_sprintf:
  5399                           	opt callstack 0
  5400                           
  5401 ;; *************** function _get_vterm_ptr *****************
  5402 ;; Defined at:
  5403 ;;		line 116 in file "mconfig.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;  line            1  [STACK] const unsigned char 
  5406 ;;  vterm           1  [STACK] const unsigned char 
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;		None
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  2  [STACK] PTR unsigned char 
  5411 ;; Registers used:
  5412 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/5
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5422 ;;Total ram usage:        0 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; Hardware stack levels required when called:    6
  5425 ;; This function calls:
  5426 ;;		Nothing
  5427 ;; This function is called by:
  5428 ;;		_main
  5429 ;;		_check_help
  5430 ;;		_vterm_dump
  5431 ;; This function uses a reentrant model
  5432 ;;
  5433                           
  5434                           	psect	text22
  5435  017E4A                     __ptext22:
  5436                           	opt callstack 0
  5437  017E4A                     _get_vterm_ptr:
  5438                           	opt callstack 24
  5439                           
  5440                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  5441                           ;stkvar	_vterm @ sp[(0)+-2]
  5442                           
  5443                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5444                           ;incstack = 0
  5445  017E4A  0EFE               	movlw	-2
  5446  017E4C  50E3               	movf	plusw1,w,c
  5447  017E4E  0B03               	andlw	3
  5448  017E50  0D36               	mullw	54
  5449  017E52  0E00               	movlw	low _D
  5450  017E54  6E32               	movwf	btemp^0,c
  5451  017E56  0E05               	movlw	high _D
  5452  017E58  6E33               	movwf	(btemp+1)^0,c
  5453  017E5A  50F3               	movf	243,w,c
  5454  017E5C  2632               	addwf	btemp^0,f,c
  5455  017E5E  50F4               	movf	244,w,c
  5456  017E60  2233               	addwfc	(btemp+1)^0,f,c
  5457                           
  5458                           ;stkvar	_line @ sp[(0)+-1]
  5459  017E62  0EFF               	movlw	-1
  5460  017E64  50E3               	movf	plusw1,w,c
  5461  017E66  0B03               	andlw	3
  5462  017E68  0D12               	mullw	18
  5463  017E6A  50F3               	movf	243,w,c
  5464  017E6C  2632               	addwf	btemp^0,f,c
  5465  017E6E  50F4               	movf	244,w,c
  5466  017E70  2233               	addwfc	(btemp+1)^0,f,c
  5467                           
  5468                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5469  017E72  52E5               	movf	postdec1,f,c
  5470  017E74  52E5               	movf	postdec1,f,c
  5471  017E76  0012               	return		;funcret
  5472  017E78                     __end_of_get_vterm_ptr:
  5473                           	opt callstack 0
  5474                           
  5475 ;; *************** function _WaitMs *****************
  5476 ;; Defined at:
  5477 ;;		line 32 in file "timers.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;  numMilliseco    2  [STACK] const unsigned short 
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;		None
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  1  [STACK] void 
  5484 ;; Registers used:
  5485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5486 ;; Tracked objects:
  5487 ;;		On entry : 1/1
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5495 ;;Total ram usage:        0 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; Hardware stack levels required when called:    7
  5498 ;; This function calls:
  5499 ;;		_StartTimer
  5500 ;;		_TimerDone
  5501 ;; This function is called by:
  5502 ;;		_main
  5503 ;;		_vterm_dump
  5504 ;; This function uses a reentrant model
  5505 ;;
  5506                           
  5507                           	psect	text23
  5508  017CB6                     __ptext23:
  5509                           	opt callstack 0
  5510  017CB6                     _WaitMs:
  5511                           	opt callstack 21
  5512                           
  5513                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5514                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  5515                           
  5516                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5517                           ;incstack = 0
  5518  017CB6  0EFE               	movlw	-2
  5519  017CB8  006F FF8F FFE6     	movff	plusw1,postinc1
  5520  017CBE  006F FF8F FFE6     	movff	plusw1,postinc1
  5521  017CC4  0E00               	movlw	0
  5522  017CC6  6EE6               	movwf	postinc1,c
  5523  017CC8  EC21  F0BE         	call	_StartTimer	;wreg free
  5524                           
  5525                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5526  017CCC  D005               	goto	l11074
  5527  017CCE                     l1485:
  5528                           
  5529                           ;timers.c: 36:   __nop();
  5530  017CCE  F000               	nop	
  5531                           
  5532                           ;timers.c: 37:   __nop();
  5533  017CD0  F000               	nop	
  5534                           
  5535                           ;timers.c: 38:   __nop();
  5536  017CD2  F000               	nop	
  5537                           
  5538                           ;timers.c: 39:   __nop();
  5539  017CD4  F000               	nop	
  5540  017CD6  0004               	clrwdt		;# 
  5541  017CD8                     l11074:
  5542                           
  5543                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5544  017CD8  0E00               	movlw	0
  5545  017CDA  6EE6               	movwf	postinc1,c
  5546  017CDC  ECFB  F0C0         	call	_TimerDone	;wreg free
  5547  017CE0  5032               	movf	btemp^0,w,c
  5548  017CE2  B4D8               	btfsc	status,2,c
  5549  017CE4  D7F4               	goto	l1485
  5550                           
  5551                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  5552  017CE6  52E5               	movf	postdec1,f,c
  5553  017CE8  52E5               	movf	postdec1,f,c
  5554  017CEA  0012               	return		;funcret
  5555  017CEC                     __end_of_WaitMs:
  5556                           	opt callstack 0
  5557                           
  5558 ;; *************** function _update_lcd *****************
  5559 ;; Defined at:
  5560 ;;		line 85 in file "mconfig.c"
  5561 ;; Parameters:    Size  Location     Type
  5562 ;;  vterm           1  [STACK] unsigned char 
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;		None
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  1  [STACK] unsigned char 
  5567 ;; Registers used:
  5568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/5
  5571 ;;		On exit  : 1/1
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5578 ;;Total ram usage:        0 bytes
  5579 ;; Hardware stack levels used:    1
  5580 ;; Hardware stack levels required when called:   17
  5581 ;; This function calls:
  5582 ;;		_eaDogM_WriteStringAtPos
  5583 ;;		_wait_lcd_done
  5584 ;; This function is called by:
  5585 ;;		_main
  5586 ;;		_check_help
  5587 ;; This function uses a reentrant model
  5588 ;;
  5589                           
  5590                           	psect	text24
  5591  01672E                     __ptext24:
  5592                           	opt callstack 0
  5593  01672E                     _update_lcd:
  5594                           	opt callstack 13
  5595                           
  5596                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  5597                           ;stkvar	_vterm @ sp[(0)+-1]
  5598                           
  5599                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5600                           ;incstack = 0
  5601  01672E  0EFF               	movlw	-1
  5602  016730  006F FF8C  F032    	movff	plusw1,btemp
  5603  016736  0E03               	movlw	3
  5604  016738  1632               	andwf	btemp^0,f,c
  5605  01673A  0EFF               	movlw	-1
  5606  01673C  0060  F0CB  FFE3   	movff	btemp,plusw1
  5607                           
  5608                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  5609  016742  0105               	movlb	5	; () banked
  5610  016744  A1D8               	btfss	(_D+216)& (0+255),0,b
  5611  016746  D004               	goto	l11528
  5612                           
  5613                           ; BSR set to: 5
  5614                           ;stkvar	_vterm @ sp[(0)+-1]
  5615  016748  0EFF               	movlw	-1
  5616  01674A  50E3               	movf	plusw1,w,c
  5617  01674C  B4D8               	btfsc	status,2,c
  5618  01674E  D074               	goto	l1563
  5619  016750                     l11528:
  5620                           
  5621                           ; BSR set to: 5
  5622                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  5623                           ;stkvar	_vterm @ sp[(0)+-1]
  5624  016750  0EFF               	movlw	-1
  5625  016752  50E3               	movf	plusw1,w,c
  5626  016754  0D36               	mullw	54
  5627  016756  0E10               	movlw	low (_D+16)
  5628  016758  24F3               	addwf	243,w,c
  5629  01675A  6ED9               	movwf	fsr2l,c
  5630  01675C  0E05               	movlw	high (_D+16)
  5631  01675E  20F4               	addwfc	prodh,w,c
  5632  016760  6EDA               	movwf	fsr2h,c
  5633  016762  0E00               	movlw	0
  5634  016764  6EDF               	movwf	indf2,c
  5635                           
  5636                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  5637                           ;stkvar	_vterm @ sp[(0)+-1]
  5638  016766  0EFF               	movlw	-1
  5639  016768  50E3               	movf	plusw1,w,c
  5640  01676A  0D36               	mullw	54
  5641  01676C  0E22               	movlw	low (_D+34)
  5642  01676E  24F3               	addwf	243,w,c
  5643  016770  6ED9               	movwf	fsr2l,c
  5644  016772  0E05               	movlw	high (_D+34)
  5645  016774  20F4               	addwfc	prodh,w,c
  5646  016776  6EDA               	movwf	fsr2h,c
  5647  016778  0E00               	movlw	0
  5648  01677A  6EDF               	movwf	indf2,c
  5649                           
  5650                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  5651                           ;stkvar	_vterm @ sp[(0)+-1]
  5652  01677C  0EFF               	movlw	-1
  5653  01677E  50E3               	movf	plusw1,w,c
  5654  016780  0D36               	mullw	54
  5655  016782  0E34               	movlw	low (_D+52)
  5656  016784  24F3               	addwf	243,w,c
  5657  016786  6ED9               	movwf	fsr2l,c
  5658  016788  0E05               	movlw	high (_D+52)
  5659  01678A  20F4               	addwfc	prodh,w,c
  5660  01678C  6EDA               	movwf	fsr2h,c
  5661  01678E  0E00               	movlw	0
  5662  016790  6EDF               	movwf	indf2,c
  5663                           
  5664                           ; BSR set to: 5
  5665                           ;mconfig.c: 95:  wait_lcd_done();
  5666  016792  ECAE  F0C1         	call	_wait_lcd_done	;wreg free
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  5670                           ;stkvar	_vterm @ sp[(0)+-1]
  5671  016796  0EFF               	movlw	-1
  5672  016798  50E3               	movf	plusw1,w,c
  5673  01679A  0D36               	mullw	54
  5674  01679C  0E00               	movlw	low _D
  5675  01679E  6E3C               	movwf	(btemp+10)^0,c
  5676  0167A0  0E05               	movlw	high _D
  5677  0167A2  6E3D               	movwf	(btemp+11)^0,c
  5678  0167A4  50F3               	movf	243,w,c
  5679  0167A6  263C               	addwf	(btemp+10)^0,f,c
  5680  0167A8  50F4               	movf	244,w,c
  5681  0167AA  223D               	addwfc	(btemp+11)^0,f,c
  5682  0167AC  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5683  0167B2  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5684  0167B8  0E00               	movlw	0
  5685  0167BA  6EE6               	movwf	postinc1,c
  5686  0167BC  0E00               	movlw	0
  5687  0167BE  6EE6               	movwf	postinc1,c
  5688  0167C0  EC76  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5689                           
  5690                           ; BSR set to: 59
  5691                           ;mconfig.c: 97:  wait_lcd_done();
  5692  0167C4  ECAE  F0C1         	call	_wait_lcd_done	;wreg free
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  5696                           ;stkvar	_vterm @ sp[(0)+-1]
  5697  0167C8  0EFF               	movlw	-1
  5698  0167CA  50E3               	movf	plusw1,w,c
  5699  0167CC  0D36               	mullw	54
  5700  0167CE  0E00               	movlw	low _D
  5701  0167D0  6E3C               	movwf	(btemp+10)^0,c
  5702  0167D2  0E05               	movlw	high _D
  5703  0167D4  6E3D               	movwf	(btemp+11)^0,c
  5704  0167D6  0E12               	movlw	18
  5705  0167D8  263C               	addwf	(btemp+10)^0,f,c
  5706  0167DA  0E00               	movlw	0
  5707  0167DC  223D               	addwfc	(btemp+11)^0,f,c
  5708  0167DE  50F3               	movf	243,w,c
  5709  0167E0  263C               	addwf	(btemp+10)^0,f,c
  5710  0167E2  50F4               	movf	244,w,c
  5711  0167E4  223D               	addwfc	(btemp+11)^0,f,c
  5712  0167E6  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5713  0167EC  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5714  0167F2  0E00               	movlw	0
  5715  0167F4  6EE6               	movwf	postinc1,c
  5716  0167F6  0E01               	movlw	1
  5717  0167F8  6EE6               	movwf	postinc1,c
  5718  0167FA  EC76  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5719                           
  5720                           ; BSR set to: 59
  5721                           ;mconfig.c: 99:  wait_lcd_done();
  5722  0167FE  ECAE  F0C1         	call	_wait_lcd_done	;wreg free
  5723                           
  5724                           ; BSR set to: 0
  5725                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  5726                           ;stkvar	_vterm @ sp[(0)+-1]
  5727  016802  0EFF               	movlw	-1
  5728  016804  50E3               	movf	plusw1,w,c
  5729  016806  0D36               	mullw	54
  5730  016808  0E00               	movlw	low _D
  5731  01680A  6E3C               	movwf	(btemp+10)^0,c
  5732  01680C  0E05               	movlw	high _D
  5733  01680E  6E3D               	movwf	(btemp+11)^0,c
  5734  016810  0E24               	movlw	36
  5735  016812  263C               	addwf	(btemp+10)^0,f,c
  5736  016814  0E00               	movlw	0
  5737  016816  223D               	addwfc	(btemp+11)^0,f,c
  5738  016818  50F3               	movf	243,w,c
  5739  01681A  263C               	addwf	(btemp+10)^0,f,c
  5740  01681C  50F4               	movf	244,w,c
  5741  01681E  223D               	addwfc	(btemp+11)^0,f,c
  5742  016820  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5743  016826  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5744  01682C  0E00               	movlw	0
  5745  01682E  6EE6               	movwf	postinc1,c
  5746  016830  0E02               	movlw	2
  5747  016832  6EE6               	movwf	postinc1,c
  5748  016834  EC76  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5749  016838                     l1563:
  5750                           
  5751                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5752  016838  52E5               	movf	postdec1,f,c
  5753  01683A  0012               	return		;funcret
  5754  01683C                     __end_of_update_lcd:
  5755                           	opt callstack 0
  5756                           
  5757 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5758 ;; Defined at:
  5759 ;;		line 252 in file "eadog.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;  r               1  [STACK] const unsigned char 
  5762 ;;  c               1  [STACK] const unsigned char 
  5763 ;;  strPtr          2  [STACK] PTR unsigned char 
  5764 ;;		 -> D.lcd(216), D(218), V(187), 
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;		None
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  1  [STACK] void 
  5769 ;; Registers used:
  5770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5771 ;; Tracked objects:
  5772 ;;		On entry : 3F/0
  5773 ;;		On exit  : 3F/3B
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5780 ;;Total ram usage:        0 bytes
  5781 ;; Hardware stack levels used:    1
  5782 ;; Hardware stack levels required when called:   16
  5783 ;; This function calls:
  5784 ;;		_eaDogM_WriteString
  5785 ;;		_send_lcd_cmd_dma
  5786 ;; This function is called by:
  5787 ;;		_update_lcd
  5788 ;;		_vterm_dump
  5789 ;; This function uses a reentrant model
  5790 ;;
  5791                           
  5792                           	psect	text25
  5793  017CEC                     __ptext25:
  5794                           	opt callstack 0
  5795  017CEC                     _eaDogM_WriteStringAtPos:
  5796                           	opt callstack 13
  5797                           
  5798                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5799                           ;stkvar	_c @ sp[(0)+-2]
  5800                           
  5801                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5802                           ;incstack = 0
  5803  017CEC  0EFE               	movlw	-2
  5804  017CEE  006F FF8C  F03D    	movff	plusw1,btemp+11
  5805                           
  5806                           ;stkvar	_r @ sp[(0)+-1]
  5807  017CF4  0EFF               	movlw	-1
  5808  017CF6  50E3               	movf	plusw1,w,c
  5809  017CF8  0D10               	mullw	16
  5810  017CFA  50F3               	movf	243,w,c
  5811  017CFC  243D               	addwf	(btemp+11)^0,w,c
  5812  017CFE  0F80               	addlw	128
  5813  017D00  6EE6               	movwf	postinc1,c
  5814  017D02  EC79  F0BC         	call	_send_lcd_cmd_dma	;wreg free
  5815                           
  5816                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  5817                           ;stkvar	_strPtr @ sp[(0)+-4]
  5818  017D06  0EFC               	movlw	-4
  5819  017D08  006F FF8F FFE6     	movff	plusw1,postinc1
  5820  017D0E  006F FF8F FFE6     	movff	plusw1,postinc1
  5821  017D14  EC65  F0B7         	call	_eaDogM_WriteString	;wreg free
  5822                           
  5823                           ; BSR set to: 59
  5824                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  5825  017D18  52E5               	movf	postdec1,f,c
  5826  017D1A  52E5               	movf	postdec1,f,c
  5827  017D1C  52E5               	movf	postdec1,f,c
  5828  017D1E  52E5               	movf	postdec1,f,c
  5829  017D20  0012               	return		;funcret
  5830  017D22                     __end_of_eaDogM_WriteStringAtPos:
  5831                           	opt callstack 0
  5832                           
  5833 ;; *************** function _send_lcd_cmd_dma *****************
  5834 ;; Defined at:
  5835 ;;		line 205 in file "eadog.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;  strPtr          1  [STACK] unsigned char 
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;		None
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  1  [STACK] void 
  5842 ;; Registers used:
  5843 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/3D
  5846 ;;		On exit  : 3F/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5853 ;;Total ram usage:        0 bytes
  5854 ;; Hardware stack levels used:    1
  5855 ;; Hardware stack levels required when called:   15
  5856 ;; This function calls:
  5857 ;;		_printf
  5858 ;;		_ringBufS_flush
  5859 ;;		_start_lcd
  5860 ;;		_wait_lcd_done
  5861 ;;		_wait_lcd_set
  5862 ;; This function is called by:
  5863 ;;		_eaDogM_WriteCommand
  5864 ;;		_eaDogM_WriteStringAtPos
  5865 ;; This function uses a reentrant model
  5866 ;;
  5867                           
  5868                           	psect	text26
  5869  0178F2                     __ptext26:
  5870                           	opt callstack 0
  5871  0178F2                     _send_lcd_cmd_dma:
  5872                           	opt callstack 13
  5873                           
  5874                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  5875                           
  5876                           ; BSR set to: 59
  5877                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5878                           ;incstack = 0
  5879  0178F2  EC8C  F0C2         	call	_wait_lcd_set	;wreg free
  5880                           
  5881                           ; BSR set to: 0
  5882                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  5883  0178F6  0E00               	movlw	0
  5884  0178F8  6EE6               	movwf	postinc1,c
  5885  0178FA  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  5886  017900  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  5887  017906  EC55  F0B8         	call	_ringBufS_flush	;wreg free
  5888  01790A  92BC               	bcf	188,1,c	;volatile
  5889  01790C  94BC               	bcf	188,2,c	;volatile
  5890                           
  5891                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  5892  01790E  013B               	movlb	59	; () banked
  5893  017910  9FFC               	bcf	252,7,b	;volatile
  5894                           
  5895                           ; BSR set to: 59
  5896                           ;eadog.c: 214:  DMA1SSZ = 1;
  5897  017912  0E00               	movlw	0
  5898  017914  6FF8               	movwf	248,b	;volatile
  5899  017916  0E01               	movlw	1
  5900  017918  6FF7               	movwf	247,b	;volatile
  5901                           
  5902                           ; BSR set to: 59
  5903                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  5904  01791A  8FFC               	bsf	252,7,b	;volatile
  5905                           
  5906                           ; BSR set to: 59
  5907                           ;eadog.c: 216:  printf("%c", strPtr);
  5908                           ;stkvar	_strPtr @ sp[(0)+-1]
  5909  01791C  0EFF               	movlw	-1
  5910  01791E  50E3               	movf	plusw1,w,c
  5911  017920  6EE6               	movwf	postinc1,c
  5912  017922  0E00               	movlw	0
  5913  017924  6EE6               	movwf	postinc1,c
  5914  017926  0EF8               	movlw	low STR_13
  5915  017928  6EE6               	movwf	postinc1,c
  5916  01792A  0EFF               	movlw	high STR_13
  5917  01792C  6EE6               	movwf	postinc1,c
  5918  01792E  0E04               	movlw	4
  5919  017930  6EE6               	movwf	postinc1,c
  5920  017932  EC92  F0BB         	call	_printf	;wreg free
  5921                           
  5922                           ;eadog.c: 217:  start_lcd();
  5923  017936  EC8F  F0C2         	call	_start_lcd	;wreg free
  5924                           
  5925                           ; BSR set to: 59
  5926                           ;eadog.c: 218:  wait_lcd_done();
  5927  01793A  ECAE  F0C1         	call	_wait_lcd_done	;wreg free
  5928                           
  5929                           ; BSR set to: 0
  5930  01793E  82BC               	bsf	188,1,c	;volatile
  5931                           
  5932                           ; BSR set to: 0
  5933                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5934  017940  52E5               	movf	postdec1,f,c
  5935  017942  0012               	return		;funcret
  5936  017944                     __end_of_send_lcd_cmd_dma:
  5937                           	opt callstack 0
  5938                           
  5939 ;; *************** function _wait_lcd_done *****************
  5940 ;; Defined at:
  5941 ;;		line 141 in file "eadog.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;		None
  5944 ;; Auto vars:     Size  Location     Type
  5945 ;;		None
  5946 ;; Return value:  Size  Location     Type
  5947 ;;                  1  [STACK] void 
  5948 ;; Registers used:
  5949 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5950 ;; Tracked objects:
  5951 ;;		On entry : 0/1
  5952 ;;		On exit  : 3F/0
  5953 ;;		Unchanged: 0/0
  5954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5959 ;;Total ram usage:        0 bytes
  5960 ;; Hardware stack levels used:    1
  5961 ;; Hardware stack levels required when called:    7
  5962 ;; This function calls:
  5963 ;;		_wdtdelay
  5964 ;; This function is called by:
  5965 ;;		_send_lcd_cmd_dma
  5966 ;;		_update_lcd
  5967 ;;		_vterm_dump
  5968 ;; This function uses a reentrant model
  5969 ;;
  5970                           
  5971                           	psect	text27
  5972  01835C                     __ptext27:
  5973                           	opt callstack 0
  5974  01835C                     _wait_lcd_done:
  5975                           	opt callstack 22
  5976                           
  5977                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  5978                           
  5979                           ; BSR set to: 0
  5980                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5981                           ;incstack = 0
  5982  01835C  0100               	movlb	0	; () banked
  5983  01835E  B7A1               	btfsc	_spi_link& (0+255),3,b	;volatile
  5984  018360  D7FD               	goto	_wait_lcd_done
  5985                           
  5986                           ; BSR set to: 0
  5987                           ;eadog.c: 144:  wdtdelay(50);
  5988  018362  0E32               	movlw	50
  5989  018364  6EE6               	movwf	postinc1,c
  5990  018366  0E00               	movlw	0
  5991  018368  6EE6               	movwf	postinc1,c
  5992  01836A  0E00               	movlw	0
  5993  01836C  6EE6               	movwf	postinc1,c
  5994  01836E  0E00               	movlw	0
  5995  018370  6EE6               	movwf	postinc1,c
  5996  018372  ECF2  F0BB         	call	_wdtdelay	;wreg free
  5997                           
  5998                           ; BSR set to: 0
  5999                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6000  018376  0012               	return		;funcret
  6001  018378                     __end_of_wait_lcd_done:
  6002                           	opt callstack 0
  6003                           
  6004 ;; *************** function _wdtdelay *****************
  6005 ;; Defined at:
  6006 ;;		line 22 in file "eadog.c"
  6007 ;; Parameters:    Size  Location     Type
  6008 ;;  delay           4  [STACK] const unsigned long 
  6009 ;; Auto vars:     Size  Location     Type
  6010 ;;		None
  6011 ;; Return value:  Size  Location     Type
  6012 ;;                  1  [STACK] void 
  6013 ;; Registers used:
  6014 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6015 ;; Tracked objects:
  6016 ;;		On entry : 0/0
  6017 ;;		On exit  : 3F/0
  6018 ;;		Unchanged: 0/0
  6019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6024 ;;Total ram usage:        0 bytes
  6025 ;; Hardware stack levels used:    1
  6026 ;; Hardware stack levels required when called:    6
  6027 ;; This function calls:
  6028 ;;		Nothing
  6029 ;; This function is called by:
  6030 ;;		_init_display
  6031 ;;		_send_lcd_cmd
  6032 ;;		_send_lcd_cmd_long
  6033 ;;		_wait_lcd_done
  6034 ;; This function uses a reentrant model
  6035 ;;
  6036                           
  6037                           	psect	text28
  6038  0177E4                     __ptext28:
  6039                           	opt callstack 0
  6040  0177E4                     _wdtdelay:
  6041                           	opt callstack 22
  6042                           
  6043                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  6044                           
  6045                           ; BSR set to: 0
  6046                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6047                           ;incstack = 0
  6048  0177E4  0100               	movlb	0	; () banked
  6049  0177E6  6BB9               	clrf	wdtdelay@dcount& (0+255),b
  6050  0177E8  6BBA               	clrf	(wdtdelay@dcount+1)& (0+255),b
  6051  0177EA  6BBB               	clrf	(wdtdelay@dcount+2)& (0+255),b
  6052  0177EC  6BBC               	clrf	(wdtdelay@dcount+3)& (0+255),b
  6053  0177EE                     l1330:
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;eadog.c: 27:   __nop();
  6057  0177EE  F000               	nop	
  6058  0177F0  0004               	clrwdt		;# 
  6059                           
  6060                           ;eadog.c: 29:  };
  6061  0177F2  0E01               	movlw	1
  6062  0177F4  0100               	movlb	0	; () banked
  6063  0177F6  27B9               	addwf	wdtdelay@dcount& (0+255),f,b
  6064  0177F8  0E00               	movlw	0
  6065  0177FA  23BA               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  6066  0177FC  23BB               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  6067  0177FE  23BC               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  6068                           
  6069                           ; BSR set to: 0
  6070                           ;stkvar	_delay @ sp[(0)+-4]
  6071  017800  0EFC               	movlw	-4
  6072  017802  006F FF8C  F032    	movff	plusw1,btemp
  6073  017808  51B9               	movf	wdtdelay@dcount& (0+255),w,b
  6074  01780A  5C32               	subwf	btemp^0,w,c
  6075  01780C  0EFD               	movlw	-3
  6076  01780E  006F FF8C  F032    	movff	plusw1,btemp
  6077  017814  51BA               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  6078  017816  5832               	subwfb	btemp^0,w,c
  6079  017818  0EFE               	movlw	-2
  6080  01781A  006F FF8C  F032    	movff	plusw1,btemp
  6081  017820  51BB               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  6082  017822  5832               	subwfb	btemp^0,w,c
  6083  017824  0EFF               	movlw	-1
  6084  017826  006F FF8C  F032    	movff	plusw1,btemp
  6085  01782C  51BC               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  6086  01782E  5832               	subwfb	btemp^0,w,c
  6087  017830  B0D8               	btfsc	status,0,c
  6088  017832  D7DD               	goto	l1330
  6089                           
  6090                           ; BSR set to: 0
  6091                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  6092  017834  52E5               	movf	postdec1,f,c
  6093  017836  52E5               	movf	postdec1,f,c
  6094  017838  52E5               	movf	postdec1,f,c
  6095  01783A  52E5               	movf	postdec1,f,c
  6096  01783C  0012               	return		;funcret
  6097  01783E                     __end_of_wdtdelay:
  6098                           	opt callstack 0
  6099                           
  6100 ;; *************** function _eaDogM_WriteString *****************
  6101 ;; Defined at:
  6102 ;;		line 184 in file "eadog.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  strPtr          2  [STACK] PTR unsigned char 
  6105 ;;		 -> D.lcd(216), D(218), V(187), 
  6106 ;; Auto vars:     Size  Location     Type
  6107 ;;		None
  6108 ;; Return value:  Size  Location     Type
  6109 ;;                  1  [STACK] void 
  6110 ;; Registers used:
  6111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6112 ;; Tracked objects:
  6113 ;;		On entry : 3F/0
  6114 ;;		On exit  : 3F/3B
  6115 ;;		Unchanged: 0/0
  6116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6121 ;;Total ram usage:        0 bytes
  6122 ;; Hardware stack levels used:    1
  6123 ;; Hardware stack levels required when called:   15
  6124 ;; This function calls:
  6125 ;;		_printf
  6126 ;;		_ringBufS_flush
  6127 ;;		_start_lcd
  6128 ;;		_strlen
  6129 ;;		_wait_lcd_set
  6130 ;; This function is called by:
  6131 ;;		_eaDogM_WriteStringAtPos
  6132 ;; This function uses a reentrant model
  6133 ;;
  6134                           
  6135                           	psect	text29
  6136  016ECA                     __ptext29:
  6137                           	opt callstack 0
  6138  016ECA                     _eaDogM_WriteString:
  6139                           	opt callstack 13
  6140                           
  6141                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  6142                           
  6143                           ; BSR set to: 0
  6144                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6145                           ;incstack = 0
  6146  016ECA  EC8C  F0C2         	call	_wait_lcd_set	;wreg free
  6147                           
  6148                           ; BSR set to: 0
  6149                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  6150  016ECE  0E00               	movlw	0
  6151  016ED0  6EE6               	movwf	postinc1,c
  6152  016ED2  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  6153  016ED8  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  6154  016EDE  EC55  F0B8         	call	_ringBufS_flush	;wreg free
  6155  016EE2  94BC               	bcf	188,2,c	;volatile
  6156                           
  6157                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  6158                           ;stkvar	_strPtr @ sp[(0)+-2]
  6159  016EE4  0EFE               	movlw	-2
  6160  016EE6  006F FF8F FFE6     	movff	plusw1,postinc1
  6161  016EEC  006F FF8F FFE6     	movff	plusw1,postinc1
  6162  016EF2  ECB8  F0B7         	call	_strlen	;wreg free
  6163  016EF6  5033               	movf	(btemp+1)^0,w,c
  6164  016EF8  E104               	bnz	u12100
  6165  016EFA  0E41               	movlw	65
  6166  016EFC  5C32               	subwf	btemp^0,w,c
  6167  016EFE  A0D8               	btfss	status,0,c
  6168  016F00  D010               	goto	l11030
  6169  016F02                     u12100:
  6170                           
  6171                           ;stkvar	_strPtr @ sp[(0)+-2]
  6172  016F02  0EFE               	movlw	-2
  6173  016F04  006F FF8C  F03C    	movff	plusw1,btemp+10
  6174  016F0A  0EFF               	movlw	-1
  6175  016F0C  006F FF8C  F03D    	movff	plusw1,btemp+11
  6176  016F12  0E40               	movlw	64
  6177  016F14  243C               	addwf	(btemp+10)^0,w,c
  6178  016F16  6ED9               	movwf	fsr2l,c
  6179  016F18  0E00               	movlw	0
  6180  016F1A  203D               	addwfc	(btemp+11)^0,w,c
  6181  016F1C  6EDA               	movwf	fsr2h,c
  6182  016F1E  0E00               	movlw	0
  6183  016F20  6EDF               	movwf	indf2,c
  6184  016F22                     l11030:
  6185                           
  6186                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  6187  016F22  013B               	movlb	59	; () banked
  6188  016F24  9FFC               	bcf	252,7,b	;volatile
  6189                           
  6190                           ; BSR set to: 59
  6191                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  6192                           ;stkvar	_strPtr @ sp[(0)+-2]
  6193  016F26  0EFE               	movlw	-2
  6194  016F28  006F FF8F FFE6     	movff	plusw1,postinc1
  6195  016F2E  006F FF8F FFE6     	movff	plusw1,postinc1
  6196  016F34  ECB8  F0B7         	call	_strlen	;wreg free
  6197  016F38  0060  F0CB  FBF7   	movff	btemp,15351	;volatile
  6198  016F3E  0060  F0CF  FBF8   	movff	btemp+1,15352	;volatile
  6199                           
  6200                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  6201  016F44  013B               	movlb	59	; () banked
  6202  016F46  8FFC               	bsf	252,7,b	;volatile
  6203                           
  6204                           ; BSR set to: 59
  6205                           ;eadog.c: 195:  printf("%s", strPtr);
  6206                           ;stkvar	_strPtr @ sp[(0)+-2]
  6207  016F48  0EFE               	movlw	-2
  6208  016F4A  006F FF8F FFE6     	movff	plusw1,postinc1
  6209  016F50  006F FF8F FFE6     	movff	plusw1,postinc1
  6210  016F56  0EFB               	movlw	low STR_12
  6211  016F58  6EE6               	movwf	postinc1,c
  6212  016F5A  0EFF               	movlw	high STR_12
  6213  016F5C  6EE6               	movwf	postinc1,c
  6214  016F5E  0E04               	movlw	4
  6215  016F60  6EE6               	movwf	postinc1,c
  6216  016F62  EC92  F0BB         	call	_printf	;wreg free
  6217                           
  6218                           ;eadog.c: 196:  start_lcd();
  6219  016F66  EC8F  F0C2         	call	_start_lcd	;wreg free
  6220                           
  6221                           ; BSR set to: 59
  6222                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  6223  016F6A  52E5               	movf	postdec1,f,c
  6224  016F6C  52E5               	movf	postdec1,f,c
  6225  016F6E  0012               	return		;funcret
  6226  016F70                     __end_of_eaDogM_WriteString:
  6227                           	opt callstack 0
  6228                           
  6229 ;; *************** function _wait_lcd_set *****************
  6230 ;; Defined at:
  6231 ;;		line 131 in file "eadog.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;		None
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;		None
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  1  [STACK] void 
  6238 ;; Registers used:
  6239 ;;		None
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/3D
  6242 ;;		On exit  : 3F/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6249 ;;Total ram usage:        0 bytes
  6250 ;; Hardware stack levels used:    1
  6251 ;; Hardware stack levels required when called:    6
  6252 ;; This function calls:
  6253 ;;		Nothing
  6254 ;; This function is called by:
  6255 ;;		_eaDogM_WriteString
  6256 ;;		_send_lcd_cmd_dma
  6257 ;; This function uses a reentrant model
  6258 ;;
  6259                           
  6260                           	psect	text30
  6261  018518                     __ptext30:
  6262                           	opt callstack 0
  6263  018518                     _wait_lcd_set:
  6264                           	opt callstack 21
  6265                           
  6266                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  6267                           
  6268                           ; BSR set to: 59
  6269                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6270                           ;incstack = 0
  6271  018518  0100               	movlb	0	; () banked
  6272  01851A  87A1               	bsf	_spi_link& (0+255),3,b	;volatile
  6273                           
  6274                           ; BSR set to: 0
  6275                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6276  01851C  0012               	return		;funcret
  6277  01851E                     __end_of_wait_lcd_set:
  6278                           	opt callstack 0
  6279                           
  6280 ;; *************** function _start_lcd *****************
  6281 ;; Defined at:
  6282 ;;		line 126 in file "eadog.c"
  6283 ;; Parameters:    Size  Location     Type
  6284 ;;		None
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;		None
  6287 ;; Return value:  Size  Location     Type
  6288 ;;                  1  [STACK] void 
  6289 ;; Registers used:
  6290 ;;		None
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/3B
  6293 ;;		On exit  : 3F/3B
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6300 ;;Total ram usage:        0 bytes
  6301 ;; Hardware stack levels used:    1
  6302 ;; Hardware stack levels required when called:    6
  6303 ;; This function calls:
  6304 ;;		Nothing
  6305 ;; This function is called by:
  6306 ;;		_eaDogM_WriteString
  6307 ;;		_send_lcd_cmd_dma
  6308 ;; This function uses a reentrant model
  6309 ;;
  6310                           
  6311                           	psect	text31
  6312  01851E                     __ptext31:
  6313                           	opt callstack 0
  6314  01851E                     _start_lcd:
  6315                           	opt callstack 21
  6316                           
  6317                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  6318                           
  6319                           ; BSR set to: 0
  6320                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6321                           ;incstack = 0
  6322  01851E  013B               	movlb	59	; () banked
  6323  018520  8DFC               	bsf	252,6,b	;volatile
  6324                           
  6325                           ; BSR set to: 59
  6326                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6327  018522  0012               	return		;funcret
  6328  018524                     __end_of_start_lcd:
  6329                           	opt callstack 0
  6330                           
  6331 ;; *************** function _ringBufS_flush *****************
  6332 ;; Defined at:
  6333 ;;		line 76 in file "ringbufs.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;  _this           2  [STACK] PTR struct ringBufS_t
  6336 ;;		 -> ring_buf1(67), 
  6337 ;;  clearBuffer     1  [STACK] const char 
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;		None
  6340 ;; Return value:  Size  Location     Type
  6341 ;;                  1  [STACK] void 
  6342 ;; Registers used:
  6343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6344 ;; Tracked objects:
  6345 ;;		On entry : 3F/0
  6346 ;;		On exit  : 0/0
  6347 ;;		Unchanged: 0/0
  6348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6353 ;;Total ram usage:        0 bytes
  6354 ;; Hardware stack levels used:    1
  6355 ;; Hardware stack levels required when called:    7
  6356 ;; This function calls:
  6357 ;;		_memset
  6358 ;; This function is called by:
  6359 ;;		_eaDogM_WriteString
  6360 ;;		_send_lcd_cmd_dma
  6361 ;; This function uses a reentrant model
  6362 ;;
  6363                           
  6364                           	psect	text32
  6365  0170AA                     __ptext32:
  6366                           	opt callstack 0
  6367  0170AA                     _ringBufS_flush:
  6368                           	opt callstack 20
  6369                           
  6370                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  6371                           ;stkvar	__this @ sp[(0)+-2]
  6372                           
  6373                           ; BSR set to: 59
  6374                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6375                           ;incstack = 0
  6376  0170AA  0EFE               	movlw	-2
  6377  0170AC  006F FF8C  F03C    	movff	plusw1,btemp+10
  6378  0170B2  0EFF               	movlw	-1
  6379  0170B4  006F FF8C  F03D    	movff	plusw1,btemp+11
  6380  0170BA  0E42               	movlw	66
  6381  0170BC  243C               	addwf	(btemp+10)^0,w,c
  6382  0170BE  6ED9               	movwf	fsr2l,c
  6383  0170C0  0E00               	movlw	0
  6384  0170C2  203D               	addwfc	(btemp+11)^0,w,c
  6385  0170C4  6EDA               	movwf	fsr2h,c
  6386  0170C6  0E00               	movlw	0
  6387  0170C8  6EDF               	movwf	indf2,c
  6388                           
  6389                           ;ringbufs.c: 79:  _this->head = 0;
  6390                           ;stkvar	__this @ sp[(0)+-2]
  6391  0170CA  0EFE               	movlw	-2
  6392  0170CC  006F FF8C  F03C    	movff	plusw1,btemp+10
  6393  0170D2  0EFF               	movlw	-1
  6394  0170D4  006F FF8C  F03D    	movff	plusw1,btemp+11
  6395  0170DA  0E40               	movlw	64
  6396  0170DC  243C               	addwf	(btemp+10)^0,w,c
  6397  0170DE  6ED9               	movwf	fsr2l,c
  6398  0170E0  0E00               	movlw	0
  6399  0170E2  203D               	addwfc	(btemp+11)^0,w,c
  6400  0170E4  6EDA               	movwf	fsr2h,c
  6401  0170E6  0E00               	movlw	0
  6402  0170E8  6EDF               	movwf	indf2,c
  6403                           
  6404                           ;ringbufs.c: 80:  _this->tail = 0;
  6405                           ;stkvar	__this @ sp[(0)+-2]
  6406  0170EA  0EFE               	movlw	-2
  6407  0170EC  006F FF8C  F03C    	movff	plusw1,btemp+10
  6408  0170F2  0EFF               	movlw	-1
  6409  0170F4  006F FF8C  F03D    	movff	plusw1,btemp+11
  6410  0170FA  0E41               	movlw	65
  6411  0170FC  243C               	addwf	(btemp+10)^0,w,c
  6412  0170FE  6ED9               	movwf	fsr2l,c
  6413  017100  0E00               	movlw	0
  6414  017102  203D               	addwfc	(btemp+11)^0,w,c
  6415  017104  6EDA               	movwf	fsr2h,c
  6416  017106  0E00               	movlw	0
  6417  017108  6EDF               	movwf	indf2,c
  6418                           
  6419                           ;ringbufs.c: 81:  if (clearBuffer) {
  6420                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6421  01710A  0EFD               	movlw	-3
  6422  01710C  50E3               	movf	plusw1,w,c
  6423  01710E  B4D8               	btfsc	status,2,c
  6424  017110  D011               	goto	l1470
  6425                           
  6426                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6427  017112  0E40               	movlw	64
  6428  017114  6EE6               	movwf	postinc1,c
  6429  017116  0E00               	movlw	0
  6430  017118  6EE6               	movwf	postinc1,c
  6431  01711A  0E00               	movlw	0
  6432  01711C  6EE6               	movwf	postinc1,c
  6433  01711E  0E00               	movlw	0
  6434  017120  6EE6               	movwf	postinc1,c
  6435                           
  6436                           ;stkvar	__this @ sp[(-4)+-2]
  6437  017122  0EFA               	movlw	-6
  6438  017124  006F FF8F FFE6     	movff	plusw1,postinc1
  6439  01712A  006F FF8F FFE6     	movff	plusw1,postinc1
  6440  017130  EC8F  F0A3         	call	_memset	;wreg free
  6441  017134                     l1470:
  6442                           
  6443                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6444  017134  52E5               	movf	postdec1,f,c
  6445  017136  52E5               	movf	postdec1,f,c
  6446  017138  52E5               	movf	postdec1,f,c
  6447  01713A  0012               	return		;funcret
  6448  01713C                     __end_of_ringBufS_flush:
  6449                           	opt callstack 0
  6450                           
  6451 ;; *************** function _memset *****************
  6452 ;; Defined at:
  6453 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  6454 ;; Parameters:    Size  Location     Type
  6455 ;;  dest            2  [STACK] PTR void 
  6456 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6457 ;;  c               2  [STACK] int 
  6458 ;;  n               2  [STACK] unsigned int 
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;  s               2  [STACK] PTR unsigned char 
  6461 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6462 ;;  k               2  [STACK] unsigned int 
  6463 ;; Return value:  Size  Location     Type
  6464 ;;                  2  [STACK] PTR void 
  6465 ;; Registers used:
  6466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6476 ;;Total ram usage:        0 bytes
  6477 ;; Hardware stack levels used:    1
  6478 ;; Hardware stack levels required when called:    6
  6479 ;; This function calls:
  6480 ;;		Nothing
  6481 ;; This function is called by:
  6482 ;;		_ringBufS_init
  6483 ;;		_ringBufS_flush
  6484 ;; This function uses a reentrant model
  6485 ;;
  6486                           
  6487                           	psect	text33
  6488  01471E                     __ptext33:
  6489                           	opt callstack 0
  6490  01471E                     _memset:
  6491                           	opt callstack 0
  6492                           
  6493                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6494  01471E  52E6               	movf	postinc1,f,c
  6495  014720  52E6               	movf	postinc1,f,c
  6496  014722  52E6               	movf	postinc1,f,c
  6497  014724  52E6               	movf	postinc1,f,c
  6498                           
  6499                           ;stkvar	_dest @ sp[(-4)+-2]
  6500                           
  6501                           ;incstack = 0
  6502  014726  0EFA               	movlw	-6
  6503  014728  006F FF8C  F03C    	movff	plusw1,btemp+10
  6504  01472E  0EFB               	movlw	-5
  6505  014730  006F FF8C  F03D    	movff	plusw1,btemp+11
  6506                           
  6507                           ;stkvar	_s @ sp[(-4)+0]
  6508  014736  0EFD               	movlw	-3
  6509  014738  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6510  01473E  0EFC               	movlw	-4
  6511  014740  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6512                           
  6513                           ;stkvar	_n @ sp[(-4)+-6]
  6514  014746  0EF6               	movlw	-10
  6515  014748  006F FF8C  F032    	movff	plusw1,btemp
  6516  01474E  0EF7               	movlw	-9
  6517  014750  50E3               	movf	plusw1,w,c
  6518  014752  1032               	iorwf	btemp^0,w,c
  6519  014754  B4D8               	btfsc	status,2,c
  6520  014756  D154               	goto	u12050
  6521                           
  6522                           ;stkvar	_c @ sp[(-4)+-4]
  6523                           ;stkvar	_s @ sp[(-4)+0]
  6524  014758  0EFC               	movlw	-4
  6525  01475A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6526  014760  0EFD               	movlw	-3
  6527  014762  006F FF8F FFDA     	movff	plusw1,fsr2h
  6528  014768  0EF8               	movlw	-8
  6529  01476A  006F FF8F FFDF     	movff	plusw1,indf2
  6530                           
  6531                           ;stkvar	_c @ sp[(-4)+-4]
  6532                           ;stkvar	_n @ sp[(-4)+-6]
  6533                           ;stkvar	_s @ sp[(-4)+0]
  6534  014770  0EFC               	movlw	-4
  6535  014772  006F FF8C  F03C    	movff	plusw1,btemp+10
  6536  014778  0EFD               	movlw	-3
  6537  01477A  006F FF8C  F03D    	movff	plusw1,btemp+11
  6538  014780  0EF6               	movlw	-10
  6539  014782  50E3               	movf	plusw1,w,c
  6540  014784  263C               	addwf	(btemp+10)^0,f,c
  6541  014786  0EF7               	movlw	-9
  6542  014788  50E3               	movf	plusw1,w,c
  6543  01478A  223D               	addwfc	(btemp+11)^0,f,c
  6544  01478C  0EFF               	movlw	255
  6545  01478E  243C               	addwf	(btemp+10)^0,w,c
  6546  014790  6ED9               	movwf	fsr2l,c
  6547  014792  0EFF               	movlw	255
  6548  014794  203D               	addwfc	(btemp+11)^0,w,c
  6549  014796  6EDA               	movwf	fsr2h,c
  6550  014798  0EF8               	movlw	-8
  6551  01479A  006F FF8F FFDF     	movff	plusw1,indf2
  6552                           
  6553                           ;stkvar	_n @ sp[(-4)+-6]
  6554  0147A0  0EF7               	movlw	-9
  6555  0147A2  50E3               	movf	plusw1,w,c
  6556  0147A4  E108               	bnz	l10924
  6557  0147A6  0EF6               	movlw	-10
  6558  0147A8  006F FF8C  F032    	movff	plusw1,btemp
  6559  0147AE  0E03               	movlw	3
  6560  0147B0  5E32               	subwf	btemp^0,f,c
  6561  0147B2  A0D8               	btfss	status,0,c
  6562  0147B4  D125               	goto	u12050
  6563  0147B6                     l10924:
  6564                           
  6565                           ;stkvar	_c @ sp[(-4)+-4]
  6566                           ;stkvar	_s @ sp[(-4)+0]
  6567  0147B6  0EFC               	movlw	-4
  6568  0147B8  006F FF8C  F03C    	movff	plusw1,btemp+10
  6569  0147BE  0EFD               	movlw	-3
  6570  0147C0  006F FF8C  F03D    	movff	plusw1,btemp+11
  6571  0147C6  0E01               	movlw	1
  6572  0147C8  243C               	addwf	(btemp+10)^0,w,c
  6573  0147CA  6ED9               	movwf	fsr2l,c
  6574  0147CC  0E00               	movlw	0
  6575  0147CE  203D               	addwfc	(btemp+11)^0,w,c
  6576  0147D0  6EDA               	movwf	fsr2h,c
  6577  0147D2  0EF8               	movlw	-8
  6578  0147D4  006F FF8F FFDF     	movff	plusw1,indf2
  6579                           
  6580                           ;stkvar	_c @ sp[(-4)+-4]
  6581                           ;stkvar	_s @ sp[(-4)+0]
  6582  0147DA  0EFC               	movlw	-4
  6583  0147DC  006F FF8C  F03C    	movff	plusw1,btemp+10
  6584  0147E2  0EFD               	movlw	-3
  6585  0147E4  006F FF8C  F03D    	movff	plusw1,btemp+11
  6586  0147EA  0E02               	movlw	2
  6587  0147EC  243C               	addwf	(btemp+10)^0,w,c
  6588  0147EE  6ED9               	movwf	fsr2l,c
  6589  0147F0  0E00               	movlw	0
  6590  0147F2  203D               	addwfc	(btemp+11)^0,w,c
  6591  0147F4  6EDA               	movwf	fsr2h,c
  6592  0147F6  0EF8               	movlw	-8
  6593  0147F8  006F FF8F FFDF     	movff	plusw1,indf2
  6594                           
  6595                           ;stkvar	_c @ sp[(-4)+-4]
  6596                           ;stkvar	_n @ sp[(-4)+-6]
  6597                           ;stkvar	_s @ sp[(-4)+0]
  6598  0147FE  0EFC               	movlw	-4
  6599  014800  006F FF8C  F03C    	movff	plusw1,btemp+10
  6600  014806  0EFD               	movlw	-3
  6601  014808  006F FF8C  F03D    	movff	plusw1,btemp+11
  6602  01480E  0EF6               	movlw	-10
  6603  014810  50E3               	movf	plusw1,w,c
  6604  014812  263C               	addwf	(btemp+10)^0,f,c
  6605  014814  0EF7               	movlw	-9
  6606  014816  50E3               	movf	plusw1,w,c
  6607  014818  223D               	addwfc	(btemp+11)^0,f,c
  6608  01481A  0EFE               	movlw	254
  6609  01481C  243C               	addwf	(btemp+10)^0,w,c
  6610  01481E  6ED9               	movwf	fsr2l,c
  6611  014820  0EFF               	movlw	255
  6612  014822  203D               	addwfc	(btemp+11)^0,w,c
  6613  014824  6EDA               	movwf	fsr2h,c
  6614  014826  0EF8               	movlw	-8
  6615  014828  006F FF8F FFDF     	movff	plusw1,indf2
  6616                           
  6617                           ;stkvar	_c @ sp[(-4)+-4]
  6618                           ;stkvar	_n @ sp[(-4)+-6]
  6619                           ;stkvar	_s @ sp[(-4)+0]
  6620  01482E  0EFC               	movlw	-4
  6621  014830  006F FF8C  F03C    	movff	plusw1,btemp+10
  6622  014836  0EFD               	movlw	-3
  6623  014838  006F FF8C  F03D    	movff	plusw1,btemp+11
  6624  01483E  0EF6               	movlw	-10
  6625  014840  50E3               	movf	plusw1,w,c
  6626  014842  263C               	addwf	(btemp+10)^0,f,c
  6627  014844  0EF7               	movlw	-9
  6628  014846  50E3               	movf	plusw1,w,c
  6629  014848  223D               	addwfc	(btemp+11)^0,f,c
  6630  01484A  0EFD               	movlw	253
  6631  01484C  243C               	addwf	(btemp+10)^0,w,c
  6632  01484E  6ED9               	movwf	fsr2l,c
  6633  014850  0EFF               	movlw	255
  6634  014852  203D               	addwfc	(btemp+11)^0,w,c
  6635  014854  6EDA               	movwf	fsr2h,c
  6636  014856  0EF8               	movlw	-8
  6637  014858  006F FF8F FFDF     	movff	plusw1,indf2
  6638                           
  6639                           ;stkvar	_n @ sp[(-4)+-6]
  6640  01485E  0EF7               	movlw	-9
  6641  014860  50E3               	movf	plusw1,w,c
  6642  014862  E108               	bnz	l10930
  6643  014864  0EF6               	movlw	-10
  6644  014866  006F FF8C  F032    	movff	plusw1,btemp
  6645  01486C  0E07               	movlw	7
  6646  01486E  5E32               	subwf	btemp^0,f,c
  6647  014870  A0D8               	btfss	status,0,c
  6648  014872  D0C6               	goto	u12050
  6649  014874                     l10930:
  6650                           
  6651                           ;stkvar	_c @ sp[(-4)+-4]
  6652                           ;stkvar	_s @ sp[(-4)+0]
  6653  014874  0EFC               	movlw	-4
  6654  014876  006F FF8C  F03C    	movff	plusw1,btemp+10
  6655  01487C  0EFD               	movlw	-3
  6656  01487E  006F FF8C  F03D    	movff	plusw1,btemp+11
  6657  014884  0E03               	movlw	3
  6658  014886  243C               	addwf	(btemp+10)^0,w,c
  6659  014888  6ED9               	movwf	fsr2l,c
  6660  01488A  0E00               	movlw	0
  6661  01488C  203D               	addwfc	(btemp+11)^0,w,c
  6662  01488E  6EDA               	movwf	fsr2h,c
  6663  014890  0EF8               	movlw	-8
  6664  014892  006F FF8F FFDF     	movff	plusw1,indf2
  6665                           
  6666                           ;stkvar	_c @ sp[(-4)+-4]
  6667                           ;stkvar	_n @ sp[(-4)+-6]
  6668                           ;stkvar	_s @ sp[(-4)+0]
  6669  014898  0EFC               	movlw	-4
  6670  01489A  006F FF8C  F03C    	movff	plusw1,btemp+10
  6671  0148A0  0EFD               	movlw	-3
  6672  0148A2  006F FF8C  F03D    	movff	plusw1,btemp+11
  6673  0148A8  0EF6               	movlw	-10
  6674  0148AA  50E3               	movf	plusw1,w,c
  6675  0148AC  263C               	addwf	(btemp+10)^0,f,c
  6676  0148AE  0EF7               	movlw	-9
  6677  0148B0  50E3               	movf	plusw1,w,c
  6678  0148B2  223D               	addwfc	(btemp+11)^0,f,c
  6679  0148B4  0EFC               	movlw	252
  6680  0148B6  243C               	addwf	(btemp+10)^0,w,c
  6681  0148B8  6ED9               	movwf	fsr2l,c
  6682  0148BA  0EFF               	movlw	255
  6683  0148BC  203D               	addwfc	(btemp+11)^0,w,c
  6684  0148BE  6EDA               	movwf	fsr2h,c
  6685  0148C0  0EF8               	movlw	-8
  6686  0148C2  006F FF8F FFDF     	movff	plusw1,indf2
  6687                           
  6688                           ;stkvar	_n @ sp[(-4)+-6]
  6689  0148C8  0EF7               	movlw	-9
  6690  0148CA  50E3               	movf	plusw1,w,c
  6691  0148CC  E108               	bnz	l10936
  6692  0148CE  0EF6               	movlw	-10
  6693  0148D0  006F FF8C  F032    	movff	plusw1,btemp
  6694  0148D6  0E09               	movlw	9
  6695  0148D8  5E32               	subwf	btemp^0,f,c
  6696  0148DA  A0D8               	btfss	status,0,c
  6697  0148DC  D091               	goto	u12050
  6698  0148DE                     l10936:
  6699                           
  6700                           ;stkvar	_s @ sp[(-4)+0]
  6701  0148DE  0EFC               	movlw	-4
  6702  0148E0  006F FF8C  F03C    	movff	plusw1,btemp+10
  6703  0148E6  1E3C               	comf	(btemp+10)^0,f,c
  6704  0148E8  0EFD               	movlw	-3
  6705  0148EA  006F FF8C  F03D    	movff	plusw1,btemp+11
  6706  0148F0  1E3D               	comf	(btemp+11)^0,f,c
  6707  0148F2  2A3C               	incf	(btemp+10)^0,f,c
  6708  0148F4  B4D8               	btfsc	status,2,c
  6709  0148F6  2A3D               	incf	(btemp+11)^0,f,c
  6710  0148F8  0E03               	movlw	3
  6711  0148FA  163C               	andwf	(btemp+10)^0,f,c
  6712  0148FC  0E00               	movlw	0
  6713  0148FE  163D               	andwf	(btemp+11)^0,f,c
  6714                           
  6715                           ;stkvar	_k @ sp[(-4)+2]
  6716  014900  0EFE               	movlw	-2
  6717  014902  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6718  014908  0EFF               	movlw	-1
  6719  01490A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6720                           
  6721                           ;stkvar	_k @ sp[(-4)+2]
  6722                           ;stkvar	_s @ sp[(-4)+0]
  6723  014910  0EFC               	movlw	-4
  6724  014912  50E3               	movf	plusw1,w,c
  6725  014914  6E32               	movwf	btemp^0,c
  6726  014916  0EFE               	movlw	-2
  6727  014918  50E3               	movf	plusw1,w,c
  6728  01491A  2632               	addwf	btemp^0,f,c
  6729  01491C  0EFC               	movlw	-4
  6730  01491E  0060  F0CB  FFE3   	movff	btemp,plusw1
  6731  014924  0EFD               	movlw	-3
  6732  014926  50E3               	movf	plusw1,w,c
  6733  014928  6E32               	movwf	btemp^0,c
  6734  01492A  0EFF               	movlw	-1
  6735  01492C  50E3               	movf	plusw1,w,c
  6736  01492E  2232               	addwfc	btemp^0,f,c
  6737  014930  0EFD               	movlw	-3
  6738  014932  0060  F0CB  FFE3   	movff	btemp,plusw1
  6739                           
  6740                           ;stkvar	_k @ sp[(-4)+2]
  6741                           ;stkvar	_n @ sp[(-4)+-6]
  6742  014938  0EF6               	movlw	-10
  6743  01493A  50E3               	movf	plusw1,w,c
  6744  01493C  6E32               	movwf	btemp^0,c
  6745  01493E  0EFE               	movlw	-2
  6746  014940  50E3               	movf	plusw1,w,c
  6747  014942  5E32               	subwf	btemp^0,f,c
  6748  014944  0EF6               	movlw	-10
  6749  014946  0060  F0CB  FFE3   	movff	btemp,plusw1
  6750  01494C  0EF7               	movlw	-9
  6751  01494E  50E3               	movf	plusw1,w,c
  6752  014950  6E32               	movwf	btemp^0,c
  6753  014952  0EFF               	movlw	-1
  6754  014954  50E3               	movf	plusw1,w,c
  6755  014956  5A32               	subwfb	btemp^0,f,c
  6756  014958  0EF7               	movlw	-9
  6757  01495A  0060  F0CB  FFE3   	movff	btemp,plusw1
  6758  014960  0EFC               	movlw	252
  6759  014962  6E3C               	movwf	(btemp+10)^0,c
  6760  014964  0EFF               	movlw	255
  6761  014966  6E3D               	movwf	(btemp+11)^0,c
  6762                           
  6763                           ;stkvar	_n @ sp[(-4)+-6]
  6764  014968  0EF6               	movlw	-10
  6765  01496A  006F FF8C  F032    	movff	plusw1,btemp
  6766  014970  503C               	movf	(btemp+10)^0,w,c
  6767  014972  1632               	andwf	btemp^0,f,c
  6768  014974  0EF6               	movlw	-10
  6769  014976  0060  F0CB  FFE3   	movff	btemp,plusw1
  6770  01497C  0EF7               	movlw	-9
  6771  01497E  006F FF8C  F032    	movff	plusw1,btemp
  6772  014984  503D               	movf	(btemp+11)^0,w,c
  6773  014986  1632               	andwf	btemp^0,f,c
  6774  014988  0EF7               	movlw	-9
  6775  01498A  D02E               	goto	L4
  6776  01498C                     l10944:
  6777                           
  6778                           ;stkvar	_c @ sp[(-4)+-4]
  6779                           ;stkvar	_s @ sp[(-4)+0]
  6780  01498C  0EFC               	movlw	-4
  6781  01498E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6782  014994  0EFD               	movlw	-3
  6783  014996  006F FF8F FFDA     	movff	plusw1,fsr2h
  6784  01499C  0EF8               	movlw	-8
  6785  01499E  006F FF8F FFDF     	movff	plusw1,indf2
  6786                           
  6787                           ;stkvar	_n @ sp[(-4)+-6]
  6788  0149A4  0EF6               	movlw	-10
  6789  0149A6  006F FF8C  F032    	movff	plusw1,btemp
  6790  0149AC  0E01               	movlw	1
  6791  0149AE  5E32               	subwf	btemp^0,f,c
  6792  0149B0  0EF6               	movlw	-10
  6793  0149B2  0060  F0CB  FFE3   	movff	btemp,plusw1
  6794  0149B8  0EF7               	movlw	-9
  6795  0149BA  006F FF8C  F032    	movff	plusw1,btemp
  6796  0149C0  0E00               	movlw	0
  6797  0149C2  5A32               	subwfb	btemp^0,f,c
  6798  0149C4  0EF7               	movlw	-9
  6799  0149C6  0060  F0CB  FFE3   	movff	btemp,plusw1
  6800                           
  6801                           ;stkvar	_s @ sp[(-4)+0]
  6802  0149CC  0EFC               	movlw	-4
  6803  0149CE  50E3               	movf	plusw1,w,c
  6804  0149D0  0F01               	addlw	1
  6805  0149D2  6E32               	movwf	btemp^0,c
  6806  0149D4  0EFC               	movlw	-4
  6807  0149D6  0060  F0CB  FFE3   	movff	btemp,plusw1
  6808  0149DC  6A32               	clrf	btemp^0,c
  6809  0149DE  0EFD               	movlw	-3
  6810  0149E0  50E3               	movf	plusw1,w,c
  6811  0149E2  2032               	addwfc	btemp^0,w,c
  6812  0149E4  6E32               	movwf	btemp^0,c
  6813  0149E6  0EFD               	movlw	-3
  6814  0149E8                     L4:
  6815  0149E8  0060  F0CB  FFE3   	movff	btemp,plusw1
  6816                           
  6817                           ;stkvar	_n @ sp[(-4)+-6]
  6818  0149EE  0EF6               	movlw	-10
  6819  0149F0  006F FF8C  F032    	movff	plusw1,btemp
  6820  0149F6  0EF7               	movlw	-9
  6821  0149F8  50E3               	movf	plusw1,w,c
  6822  0149FA  1032               	iorwf	btemp^0,w,c
  6823  0149FC  A4D8               	btfss	status,2,c
  6824  0149FE  D7C6               	goto	l10944
  6825  014A00                     u12050:
  6826                           
  6827                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6828  014A00  0EF6               	movlw	246
  6829  014A02  26E1               	addwf	fsr1l,f,c
  6830  014A04  0EFF               	movlw	255
  6831  014A06  22E2               	addwfc	fsr1h,f,c
  6832  014A08  0012               	return		;funcret
  6833  014A0A                     __end_of_memset:
  6834                           	opt callstack 0
  6835                           
  6836 ;; *************** function _printf *****************
  6837 ;; Defined at:
  6838 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  6839 ;; Parameters:    Size  Location     Type
  6840 ;;  fmt             2  [STACK] PTR const unsigned char 
  6841 ;;		 -> STR_14(3), STR_13(3), STR_12(3), 
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;  ap              2  [STACK] PTR void [1]
  6844 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6845 ;;  ret             2    0        int 
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  2  [STACK] int 
  6848 ;; Registers used:
  6849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6850 ;; Tracked objects:
  6851 ;;		On entry : 3F/3B
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6859 ;;Total ram usage:        0 bytes
  6860 ;; Hardware stack levels used:    1
  6861 ;; Hardware stack levels required when called:   14
  6862 ;; This function calls:
  6863 ;;		_vfprintf
  6864 ;; This function is called by:
  6865 ;;		_eaDogM_WriteString
  6866 ;;		_send_lcd_cmd_dma
  6867 ;; This function uses a reentrant model
  6868 ;;
  6869                           
  6870                           	psect	text34
  6871  017724                     __ptext34:
  6872                           	opt callstack 0
  6873  017724                     _printf:
  6874                           	opt callstack 0
  6875                           
  6876                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6877  017724  52E6               	movf	postinc1,f,c
  6878  017726  52E6               	movf	postinc1,f,c
  6879                           
  6880                           ;stkvar	?_printf @ sp[(-2)+-3]
  6881                           
  6882                           ;incstack = 0
  6883  017728  0EFB               	movlw	251
  6884  01772A  24E1               	addwf	fsr1l,w,c
  6885  01772C  6E3C               	movwf	(btemp+10)^0,c
  6886  01772E  0EFF               	movlw	255
  6887  017730  20E2               	addwfc	fsr1h,w,c
  6888  017732  6E3D               	movwf	(btemp+11)^0,c
  6889                           
  6890                           ;stkvar	_ap @ sp[(-2)+0]
  6891  017734  0EFF               	movlw	-1
  6892  017736  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6893  01773C  0EFE               	movlw	-2
  6894  01773E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6895                           
  6896                           ;stkvar	_ap @ sp[(-2)+0]
  6897  017744  0EFE               	movlw	254
  6898  017746  24E1               	addwf	fsr1l,w,c
  6899  017748  6E32               	movwf	btemp^0,c
  6900  01774A  0EFF               	movlw	255
  6901  01774C  20E2               	addwfc	fsr1h,w,c
  6902  01774E  6E33               	movwf	(btemp+1)^0,c
  6903  017750  0060  F0CB  FFE6   	movff	btemp,postinc1
  6904  017756  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6905                           
  6906                           ;stkvar	_fmt @ sp[(-4)+-3]
  6907  01775C  0EF9               	movlw	-7
  6908  01775E  006F FF8F FFE6     	movff	plusw1,postinc1
  6909  017764  006F FF8F FFE6     	movff	plusw1,postinc1
  6910  01776A  0E00               	movlw	0
  6911  01776C  6EE6               	movwf	postinc1,c
  6912  01776E  0E00               	movlw	0
  6913  017770  6EE6               	movwf	postinc1,c
  6914  017772  EC11  F0B7         	call	_vfprintf	;wreg free
  6915                           
  6916                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  6917  017776  52E5               	movf	postdec1,f,c
  6918  017778  52E5               	movf	postdec1,f,c
  6919  01777A  52E5               	movf	postdec1,f,c
  6920  01777C  50E7               	movf	indf1,w,c
  6921  01777E  5EE1               	subwf	fsr1l,f,c
  6922  017780  0E00               	movlw	0
  6923  017782  5AE2               	subwfb	fsr1h,f,c
  6924  017784  0012               	return		;funcret
  6925  017786                     __end_of_printf:
  6926                           	opt callstack 0
  6927                           
  6928 ;; *************** function _vfprintf *****************
  6929 ;; Defined at:
  6930 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6931 ;; Parameters:    Size  Location     Type
  6932 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6933 ;;		 -> f(6), NULL(0), 
  6934 ;;  fmt             2  [STACK] PTR const unsigned char 
  6935 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  6936 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  6937 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  6938 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  6939 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(19), 
  6940 ;;		 -> STR_10(19), STR_9(19), STR_8(17), STR_6(15), 
  6941 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  6942 ;;  ap              2  [STACK] PTR PTR void 
  6943 ;;		 -> ap(2), ap(2), 
  6944 ;; Auto vars:     Size  Location     Type
  6945 ;;  cfmt            2  [STACK] PTR unsigned char 
  6946 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  6947 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  6948 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  6949 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  6950 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(19), 
  6951 ;;		 -> STR_10(19), STR_9(19), STR_8(17), STR_6(15), 
  6952 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  2  [STACK] int 
  6955 ;; Registers used:
  6956 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/5
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6966 ;;Total ram usage:        0 bytes
  6967 ;; Hardware stack levels used:    1
  6968 ;; Hardware stack levels required when called:   13
  6969 ;; This function calls:
  6970 ;;		_vfpfcnvrt
  6971 ;; This function is called by:
  6972 ;;		_sprintf
  6973 ;;		_printf
  6974 ;; This function uses a reentrant model
  6975 ;;
  6976                           
  6977                           	psect	text35
  6978  016E22                     __ptext35:
  6979                           	opt callstack 0
  6980  016E22                     _vfprintf:
  6981                           	opt callstack 0
  6982                           
  6983                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6984  016E22  52E6               	movf	postinc1,f,c
  6985  016E24  52E6               	movf	postinc1,f,c
  6986                           
  6987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6988                           ;stkvar	_fmt @ sp[(-2)+-4]
  6989                           
  6990                           ;incstack = 0
  6991  016E26  0EFA               	movlw	-6
  6992  016E28  006F FF8C  F03C    	movff	plusw1,btemp+10
  6993  016E2E  0EFB               	movlw	-5
  6994  016E30  006F FF8C  F03D    	movff	plusw1,btemp+11
  6995                           
  6996                           ;stkvar	_cfmt @ sp[(-2)+0]
  6997  016E36  0EFF               	movlw	-1
  6998  016E38  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6999  016E3E  0EFE               	movlw	-2
  7000  016E40  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7001                           
  7002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  7003  016E46  6A19               	clrf	_nout^0,c
  7004  016E48  6A1A               	clrf	(_nout+1)^0,c
  7005                           
  7006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7007  016E4A  D020               	goto	l10958
  7008  016E4C                     l10956:
  7009                           
  7010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  7011                           ;stkvar	_ap @ sp[(-2)+-6]
  7012  016E4C  0EF8               	movlw	-8
  7013  016E4E  006F FF8F FFE6     	movff	plusw1,postinc1
  7014  016E54  006F FF8F FFE6     	movff	plusw1,postinc1
  7015                           
  7016                           ;stkvar	_cfmt @ sp[(-4)+0]
  7017  016E5A  0EFC               	movlw	252
  7018  016E5C  24E1               	addwf	fsr1l,w,c
  7019  016E5E  6E32               	movwf	btemp^0,c
  7020  016E60  0EFF               	movlw	255
  7021  016E62  20E2               	addwfc	fsr1h,w,c
  7022  016E64  6E33               	movwf	(btemp+1)^0,c
  7023  016E66  0060  F0CB  FFE6   	movff	btemp,postinc1
  7024  016E6C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7025                           
  7026                           ;stkvar	_fp @ sp[(-6)+-2]
  7027  016E72  0EF8               	movlw	-8
  7028  016E74  006F FF8F FFE6     	movff	plusw1,postinc1
  7029  016E7A  006F FF8F FFE6     	movff	plusw1,postinc1
  7030  016E80  EC22  F089         	call	_vfpfcnvrt	;wreg free
  7031  016E84  5032               	movf	btemp^0,w,c
  7032  016E86  2619               	addwf	_nout^0,f,c
  7033  016E88  5033               	movf	(btemp+1)^0,w,c
  7034  016E8A  221A               	addwfc	(_nout+1)^0,f,c
  7035  016E8C                     l10958:
  7036                           
  7037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7038                           ;stkvar	_cfmt @ sp[(-2)+0]
  7039  016E8C  50E1               	movf	fsr1l,w,c
  7040  016E8E  0FFE               	addlw	-2
  7041  016E90  6ED9               	movwf	fsr2l,c
  7042  016E92  50E2               	movf	fsr1h,w,c
  7043  016E94  6EDA               	movwf	fsr2h,c
  7044  016E96  0EFF               	movlw	255
  7045  016E98  22DA               	addwfc	fsr2h,f,c
  7046  016E9A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7047  016EA0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7048  016EA6                     	if	0	;tblptru may be non-zero
  7049  016EA6                     	endif
  7050  016EA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7051  016EA6  0E00               	movlw	low (__mediumconst shr (0+16))
  7052  016EA8  6EF8               	movwf	tblptru,c
  7053  016EAA                     	endif
  7054  016EAA  0008               	tblrd		*
  7055  016EAC  50F5               	movf	tablat,w,c
  7056  016EAE  0900               	iorlw	0
  7057  016EB0  A4D8               	btfss	status,2,c
  7058  016EB2  D7CC               	goto	l10956
  7059                           
  7060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  7061  016EB4  0060  F064  F032   	movff	_nout,btemp
  7062  016EBA  0060  F068  F033   	movff	_nout+1,btemp+1
  7063                           
  7064                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  7065  016EC0  0EF8               	movlw	248
  7066  016EC2  26E1               	addwf	fsr1l,f,c
  7067  016EC4  0EFF               	movlw	255
  7068  016EC6  22E2               	addwfc	fsr1h,f,c
  7069  016EC8  0012               	return		;funcret
  7070  016ECA                     __end_of_vfprintf:
  7071                           	opt callstack 0
  7072                           
  7073 ;; *************** function _vfpfcnvrt *****************
  7074 ;; Defined at:
  7075 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7076 ;; Parameters:    Size  Location     Type
  7077 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7078 ;;		 -> f(6), NULL(0), 
  7079 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  7080 ;;		 -> cfmt(2), 
  7081 ;;  ap              2  [STACK] PTR PTR void 
  7082 ;;		 -> ap(2), ap(2), 
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;  llu             8  [STACK] unsigned long long 
  7085 ;;  ll              8  [STACK] long long 
  7086 ;;  f               4  [STACK] long long 
  7087 ;;  ct              3  [STACK] unsigned char [3]
  7088 ;;  vp              3    0        PTR void 
  7089 ;;  cp              2  [STACK] PTR unsigned char 
  7090 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
  7091 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  7092 ;;		 -> STR_3(5), V(187), 
  7093 ;;  i               2    0        int 
  7094 ;;  done            2    0        int 
  7095 ;;  c               1  [STACK] unsigned char 
  7096 ;; Return value:  Size  Location     Type
  7097 ;;                  2  [STACK] int 
  7098 ;; Registers used:
  7099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7100 ;; Tracked objects:
  7101 ;;		On entry : 0/5
  7102 ;;		On exit  : 0/0
  7103 ;;		Unchanged: 0/0
  7104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7109 ;;Total ram usage:        0 bytes
  7110 ;; Hardware stack levels used:    1
  7111 ;; Hardware stack levels required when called:   12
  7112 ;; This function calls:
  7113 ;;		_atoi
  7114 ;;		_ctoa
  7115 ;;		_dtoa
  7116 ;;		_efgtoa
  7117 ;;		_fputc
  7118 ;;		_isdigit
  7119 ;;		_isupper
  7120 ;;		_stoa
  7121 ;;		_strncmp
  7122 ;;		_tolower
  7123 ;;		_xtoa
  7124 ;; This function is called by:
  7125 ;;		_vfprintf
  7126 ;; This function uses a reentrant model
  7127 ;;
  7128                           
  7129                           	psect	text36
  7130  011244                     __ptext36:
  7131                           	opt callstack 0
  7132  011244                     _vfpfcnvrt:
  7133                           	opt callstack 0
  7134                           
  7135                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7136  011244  0E20               	movlw	32
  7137  011246  26E1               	addwf	fsr1l,f,c
  7138  011248  0E00               	movlw	0
  7139  01124A  22E2               	addwfc	fsr1h,f,c
  7140                           
  7141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7142                           ;stkvar	_fmt @ sp[(-32)+-4]
  7143                           
  7144                           ;incstack = 0
  7145  01124C  0EDC               	movlw	-36
  7146  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7147  011254  0EDD               	movlw	-35
  7148  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  7149  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7150  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  7151  011268                     	if	0	;tblptru may be non-zero
  7152  011268                     	endif
  7153  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7154  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  7155  01126A  6EF8               	movwf	tblptru,c
  7156  01126C                     	endif
  7157  01126C  0008               	tblrd		*
  7158  01126E  50F5               	movf	tablat,w,c
  7159  011270  0A25               	xorlw	37
  7160  011272  A4D8               	btfss	status,2,c
  7161  011274  EF92  F08E         	goto	l10892
  7162                           
  7163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7164                           ;stkvar	_fmt @ sp[(-32)+-4]
  7165  011278  0EDC               	movlw	-36
  7166  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7167  011280  0EDD               	movlw	-35
  7168  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  7169  011288  2ADE               	incf	postinc2,f,c
  7170  01128A  0E00               	movlw	0
  7171  01128C  22DD               	addwfc	postdec2,f,c
  7172                           
  7173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7174  01128E  6A1B               	clrf	_width^0,c
  7175  011290  6A1C               	clrf	(_width+1)^0,c
  7176  011292  6A1F               	clrf	_flags^0,c
  7177  011294  6A20               	clrf	(_flags+1)^0,c
  7178                           
  7179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7180  011296  681D               	setf	_prec^0,c
  7181  011298  681E               	setf	(_prec+1)^0,c
  7182                           
  7183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  7184                           ;stkvar	_fmt @ sp[(-32)+-4]
  7185  01129A  0EDC               	movlw	-36
  7186  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7187  0112A2  0EDD               	movlw	-35
  7188  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7189  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  7190  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7191  0112B6                     	if	0	;tblptru may be non-zero
  7192  0112B6                     	endif
  7193  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7194  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  7195  0112B8  6EF8               	movwf	tblptru,c
  7196  0112BA                     	endif
  7197  0112BA  0008               	tblrd		*
  7198  0112BC  50F5               	movf	tablat,w,c
  7199  0112BE  0A2A               	xorlw	42
  7200  0112C0  A4D8               	btfss	status,2,c
  7201  0112C2  D031               	goto	l10756
  7202                           
  7203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  7204                           ;stkvar	_fmt @ sp[(-32)+-4]
  7205  0112C4  0EDC               	movlw	-36
  7206  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7207  0112CC  0EDD               	movlw	-35
  7208  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7209  0112D4  2ADE               	incf	postinc2,f,c
  7210  0112D6  0E00               	movlw	0
  7211  0112D8  22DD               	addwfc	postdec2,f,c
  7212                           
  7213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  7214                           ;stkvar	_ap @ sp[(-32)+-6]
  7215  0112DA  0EDA               	movlw	-38
  7216  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7217  0112E2  0EDB               	movlw	-37
  7218  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7219  0112EA  0E02               	movlw	2
  7220  0112EC  5EDE               	subwf	postinc2,f,c
  7221  0112EE  0E00               	movlw	0
  7222  0112F0  5ADD               	subwfb	postdec2,f,c
  7223  0112F2  006F FF78  F03C    	movff	postinc2,btemp+10
  7224  0112F8  006F FF74  F03D    	movff	postdec2,btemp+11
  7225  0112FE  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7226  011304  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7227  01130A  006F FF78  F01B    	movff	postinc2,_width
  7228  011310  006F FF74  F01C    	movff	postdec2,_width+1
  7229                           
  7230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  7231  011316  AE1C               	btfss	(_width+1)^0,7,c
  7232  011318  D066               	goto	u11800
  7233                           
  7234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  7235  01131A  801F               	bsf	_flags^0,0,c
  7236                           
  7237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  7238  01131C  6C1B               	negf	_width^0,c
  7239  01131E  1E1C               	comf	(_width+1)^0,f,c
  7240  011320  B0D8               	btfsc	status,0,c
  7241  011322  2A1C               	incf	(_width+1)^0,f,c
  7242  011324  D060               	goto	u11800
  7243  011326                     l10756:
  7244                           
  7245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  7246                           ;stkvar	_fmt @ sp[(-32)+-4]
  7247  011326  0EDC               	movlw	-36
  7248  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  7249  01132E  0EDD               	movlw	-35
  7250  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  7251  011336  006F FF78  F03C    	movff	postinc2,btemp+10
  7252  01133C  006F FF74  F03D    	movff	postdec2,btemp+11
  7253  011342  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7254  011348  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7255  01134E  ECA4  F0A7         	call	_atoi	;wreg free
  7256  011352  0060  F0C8  F01B   	movff	btemp,_width
  7257  011358  0060  F0CC  F01C   	movff	btemp+1,_width+1
  7258                           
  7259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7260  01135E  D00B               	goto	l10760
  7261  011360                     l10758:
  7262                           
  7263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  7264                           ;stkvar	_fmt @ sp[(-32)+-4]
  7265  011360  0EDC               	movlw	-36
  7266  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  7267  011368  0EDD               	movlw	-35
  7268  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7269  011370  2ADE               	incf	postinc2,f,c
  7270  011372  0E00               	movlw	0
  7271  011374  22DD               	addwfc	postdec2,f,c
  7272  011376                     l10760:
  7273  011376  0ED0               	movlw	208
  7274  011378  6E3C               	movwf	(btemp+10)^0,c
  7275  01137A  0EFF               	movlw	255
  7276  01137C  6E3D               	movwf	(btemp+11)^0,c
  7277                           
  7278                           ;stkvar	_fmt @ sp[(-32)+-4]
  7279  01137E  0EDC               	movlw	-36
  7280  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  7281  011386  0EDD               	movlw	-35
  7282  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  7283  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7284  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  7285  01139A                     	if	0	;tblptru may be non-zero
  7286  01139A                     	endif
  7287  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7288  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  7289  01139C  6EF8               	movwf	tblptru,c
  7290  01139E                     	endif
  7291  01139E  0008               	tblrd		*
  7292  0113A0  50F5               	movf	tablat,w,c
  7293  0113A2  6E3A               	movwf	(btemp+8)^0,c
  7294  0113A4  6A3B               	clrf	(btemp+9)^0,c
  7295  0113A6  503C               	movf	(btemp+10)^0,w,c
  7296  0113A8  263A               	addwf	(btemp+8)^0,f,c
  7297  0113AA  503D               	movf	(btemp+11)^0,w,c
  7298  0113AC  223B               	addwfc	(btemp+9)^0,f,c
  7299  0113AE  503B               	movf	(btemp+9)^0,w,c
  7300  0113B0  E106               	bnz	u11780
  7301  0113B2  0E0A               	movlw	10
  7302  0113B4  5C3A               	subwf	(btemp+8)^0,w,c
  7303  0113B6  B0D8               	btfsc	status,0,c
  7304  0113B8  D002               	goto	u11780
  7305  0113BA  0E01               	movlw	1
  7306  0113BC  D001               	goto	u11790
  7307  0113BE                     u11780:
  7308  0113BE  0E00               	movlw	0
  7309  0113C0                     u11790:
  7310  0113C0  6E3C               	movwf	(btemp+10)^0,c
  7311  0113C2  6A3D               	clrf	(btemp+11)^0,c
  7312                           
  7313                           ;stkvar	_vfpfcnvrt$4403 @ sp[(-32)+4]
  7314  0113C4  0EE4               	movlw	-28
  7315  0113C6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7316  0113CC  0EE5               	movlw	-27
  7317  0113CE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7318                           
  7319                           ;stkvar	_vfpfcnvrt$4403 @ sp[(-32)+4]
  7320  0113D4  0EE4               	movlw	-28
  7321  0113D6  006F FF8C  F032    	movff	plusw1,btemp
  7322  0113DC  0EE5               	movlw	-27
  7323  0113DE  50E3               	movf	plusw1,w,c
  7324  0113E0  1032               	iorwf	btemp^0,w,c
  7325  0113E2  A4D8               	btfss	status,2,c
  7326  0113E4  D7BD               	goto	l10758
  7327  0113E6                     u11800:
  7328                           
  7329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  7330                           ;stkvar	_fmt @ sp[(-32)+-4]
  7331  0113E6  0EDC               	movlw	-36
  7332  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7333  0113EE  0EDD               	movlw	-35
  7334  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7335  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7336  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7337  011402                     	if	0	;tblptru may be non-zero
  7338  011402                     	endif
  7339  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7340  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  7341  011404  6EF8               	movwf	tblptru,c
  7342  011406                     	endif
  7343  011406  0008               	tblrd		*
  7344  011408  50F5               	movf	tablat,w,c
  7345  01140A  0A2E               	xorlw	46
  7346  01140C  A4D8               	btfss	status,2,c
  7347  01140E  D0AC               	goto	u11850
  7348                           
  7349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  7350  011410  6A1D               	clrf	_prec^0,c
  7351  011412  6A1E               	clrf	(_prec+1)^0,c
  7352                           
  7353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  7354                           ;stkvar	_fmt @ sp[(-32)+-4]
  7355  011414  0EDC               	movlw	-36
  7356  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  7357  01141C  0EDD               	movlw	-35
  7358  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7359  011424  2ADE               	incf	postinc2,f,c
  7360  011426  0E00               	movlw	0
  7361  011428  22DD               	addwfc	postdec2,f,c
  7362                           
  7363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  7364                           ;stkvar	_fmt @ sp[(-32)+-4]
  7365  01142A  0EDC               	movlw	-36
  7366  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7367  011432  0EDD               	movlw	-35
  7368  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  7369  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7370  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  7371  011446                     	if	0	;tblptru may be non-zero
  7372  011446                     	endif
  7373  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7374  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  7375  011448  6EF8               	movwf	tblptru,c
  7376  01144A                     	endif
  7377  01144A  0008               	tblrd		*
  7378  01144C  50F5               	movf	tablat,w,c
  7379  01144E  0A2A               	xorlw	42
  7380  011450  A4D8               	btfss	status,2,c
  7381  011452  D02A               	goto	l10778
  7382                           
  7383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  7384                           ;stkvar	_fmt @ sp[(-32)+-4]
  7385  011454  0EDC               	movlw	-36
  7386  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  7387  01145C  0EDD               	movlw	-35
  7388  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7389  011464  2ADE               	incf	postinc2,f,c
  7390  011466  0E00               	movlw	0
  7391  011468  22DD               	addwfc	postdec2,f,c
  7392                           
  7393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  7394                           ;stkvar	_ap @ sp[(-32)+-6]
  7395  01146A  0EDA               	movlw	-38
  7396  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7397  011472  0EDB               	movlw	-37
  7398  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  7399  01147A  0E02               	movlw	2
  7400  01147C  5EDE               	subwf	postinc2,f,c
  7401  01147E  0E00               	movlw	0
  7402  011480  5ADD               	subwfb	postdec2,f,c
  7403  011482  006F FF78  F03C    	movff	postinc2,btemp+10
  7404  011488  006F FF74  F03D    	movff	postdec2,btemp+11
  7405  01148E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7406  011494  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7407  01149A  006F FF78  F01D    	movff	postinc2,_prec
  7408  0114A0  006F FF74  F01E    	movff	postdec2,_prec+1
  7409                           
  7410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  7411  0114A6  D060               	goto	u11850
  7412  0114A8                     l10778:
  7413                           
  7414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  7415                           ;stkvar	_fmt @ sp[(-32)+-4]
  7416  0114A8  0EDC               	movlw	-36
  7417  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7418  0114B0  0EDD               	movlw	-35
  7419  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7420  0114B8  006F FF78  F03C    	movff	postinc2,btemp+10
  7421  0114BE  006F FF74  F03D    	movff	postdec2,btemp+11
  7422  0114C4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7423  0114CA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7424  0114D0  ECA4  F0A7         	call	_atoi	;wreg free
  7425  0114D4  0060  F0C8  F01D   	movff	btemp,_prec
  7426  0114DA  0060  F0CC  F01E   	movff	btemp+1,_prec+1
  7427                           
  7428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7429  0114E0  D00B               	goto	l10782
  7430  0114E2                     l10780:
  7431                           
  7432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  7433                           ;stkvar	_fmt @ sp[(-32)+-4]
  7434  0114E2  0EDC               	movlw	-36
  7435  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7436  0114EA  0EDD               	movlw	-35
  7437  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7438  0114F2  2ADE               	incf	postinc2,f,c
  7439  0114F4  0E00               	movlw	0
  7440  0114F6  22DD               	addwfc	postdec2,f,c
  7441  0114F8                     l10782:
  7442  0114F8  0ED0               	movlw	208
  7443  0114FA  6E3C               	movwf	(btemp+10)^0,c
  7444  0114FC  0EFF               	movlw	255
  7445  0114FE  6E3D               	movwf	(btemp+11)^0,c
  7446                           
  7447                           ;stkvar	_fmt @ sp[(-32)+-4]
  7448  011500  0EDC               	movlw	-36
  7449  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  7450  011508  0EDD               	movlw	-35
  7451  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7452  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  7453  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  7454  01151C                     	if	0	;tblptru may be non-zero
  7455  01151C                     	endif
  7456  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7457  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  7458  01151E  6EF8               	movwf	tblptru,c
  7459  011520                     	endif
  7460  011520  0008               	tblrd		*
  7461  011522  50F5               	movf	tablat,w,c
  7462  011524  6E3A               	movwf	(btemp+8)^0,c
  7463  011526  6A3B               	clrf	(btemp+9)^0,c
  7464  011528  503C               	movf	(btemp+10)^0,w,c
  7465  01152A  263A               	addwf	(btemp+8)^0,f,c
  7466  01152C  503D               	movf	(btemp+11)^0,w,c
  7467  01152E  223B               	addwfc	(btemp+9)^0,f,c
  7468  011530  503B               	movf	(btemp+9)^0,w,c
  7469  011532  E106               	bnz	u11830
  7470  011534  0E0A               	movlw	10
  7471  011536  5C3A               	subwf	(btemp+8)^0,w,c
  7472  011538  B0D8               	btfsc	status,0,c
  7473  01153A  D002               	goto	u11830
  7474  01153C  0E01               	movlw	1
  7475  01153E  D001               	goto	u11840
  7476  011540                     u11830:
  7477  011540  0E00               	movlw	0
  7478  011542                     u11840:
  7479  011542  6E3C               	movwf	(btemp+10)^0,c
  7480  011544  6A3D               	clrf	(btemp+11)^0,c
  7481                           
  7482                           ;stkvar	_vfpfcnvrt$4404 @ sp[(-32)+0]
  7483  011546  0EE0               	movlw	-32
  7484  011548  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7485  01154E  0EE1               	movlw	-31
  7486  011550  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7487                           
  7488                           ;stkvar	_vfpfcnvrt$4404 @ sp[(-32)+0]
  7489  011556  0EE0               	movlw	-32
  7490  011558  006F FF8C  F032    	movff	plusw1,btemp
  7491  01155E  0EE1               	movlw	-31
  7492  011560  50E3               	movf	plusw1,w,c
  7493  011562  1032               	iorwf	btemp^0,w,c
  7494  011564  A4D8               	btfss	status,2,c
  7495  011566  D7BD               	goto	l10780
  7496  011568                     u11850:
  7497                           
  7498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  7499                           ;stkvar	_fmt @ sp[(-32)+-4]
  7500  011568  0EDC               	movlw	-36
  7501  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7502  011570  0EDD               	movlw	-35
  7503  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  7504  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  7505  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  7506  011584                     	if	0	;tblptru may be non-zero
  7507  011584                     	endif
  7508  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7509  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  7510  011586  6EF8               	movwf	tblptru,c
  7511  011588                     	endif
  7512  011588  0008               	tblrd		*
  7513  01158A  50F5               	movf	tablat,w,c
  7514  01158C  6EE6               	movwf	postinc1,c
  7515  01158E  0E00               	movlw	0
  7516  011590  6EE6               	movwf	postinc1,c
  7517  011592  EC6D  F0B9         	call	_tolower	;wreg free
  7518                           
  7519                           ;stkvar	_ct @ sp[(-32)+26]
  7520  011596  0EFA               	movlw	-6
  7521  011598  0060  F0CB  FFE3   	movff	btemp,plusw1
  7522                           
  7523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  7524                           ;stkvar	_ct @ sp[(-32)+26]
  7525  01159E  0EFA               	movlw	-6
  7526  0115A0  50E3               	movf	plusw1,w,c
  7527  0115A2  B4D8               	btfsc	status,2,c
  7528  0115A4  D05B               	goto	l10798
  7529                           
  7530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  7531                           ;stkvar	_ct @ sp[(-32)+26]
  7532  0115A6  0EFB               	movlw	251
  7533  0115A8  24E1               	addwf	fsr1l,w,c
  7534  0115AA  6ED9               	movwf	fsr2l,c
  7535  0115AC  0EFF               	movlw	255
  7536  0115AE  20E2               	addwfc	fsr1h,w,c
  7537  0115B0  6EDA               	movwf	fsr2h,c
  7538                           
  7539                           ;stkvar	_fmt @ sp[(-32)+-4]
  7540  0115B2  0EDC               	movlw	-36
  7541  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  7542  0115BA  0EDD               	movlw	-35
  7543  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  7544  0115C2  006F FFB8  F03C    	movff	postinc0,btemp+10
  7545  0115C8  006F FFB4  F03D    	movff	postdec0,btemp+11
  7546  0115CE  0E01               	movlw	1
  7547  0115D0  263C               	addwf	(btemp+10)^0,f,c
  7548  0115D2  0E00               	movlw	0
  7549  0115D4  223D               	addwfc	(btemp+11)^0,f,c
  7550  0115D6  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7551  0115DC  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7552  0115E2                     	if	0	;tblptru may be non-zero
  7553  0115E2                     	endif
  7554  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7555  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  7556  0115E4  6EF8               	movwf	tblptru,c
  7557  0115E6                     	endif
  7558  0115E6  0008               	tblrd		*
  7559  0115E8  50F5               	movf	tablat,w,c
  7560  0115EA  6EE6               	movwf	postinc1,c
  7561  0115EC  0E00               	movlw	0
  7562  0115EE  6EE6               	movwf	postinc1,c
  7563  0115F0  EC6D  F0B9         	call	_tolower	;wreg free
  7564  0115F4  5032               	movf	btemp^0,w,c
  7565  0115F6  6EDF               	movwf	indf2,c
  7566                           
  7567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  7568                           ;stkvar	_ct @ sp[(-32)+26]
  7569  0115F8  0EFB               	movlw	251
  7570  0115FA  24E1               	addwf	fsr1l,w,c
  7571  0115FC  6ED9               	movwf	fsr2l,c
  7572  0115FE  0EFF               	movlw	255
  7573  011600  20E2               	addwfc	fsr1h,w,c
  7574  011602  6EDA               	movwf	fsr2h,c
  7575  011604  50DF               	movf	indf2,w,c
  7576  011606  B4D8               	btfsc	status,2,c
  7577  011608  D029               	goto	l10798
  7578                           
  7579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  7580                           ;stkvar	_ct @ sp[(-32)+26]
  7581  01160A  0EFC               	movlw	252
  7582  01160C  24E1               	addwf	fsr1l,w,c
  7583  01160E  6ED9               	movwf	fsr2l,c
  7584  011610  0EFF               	movlw	255
  7585  011612  20E2               	addwfc	fsr1h,w,c
  7586  011614  6EDA               	movwf	fsr2h,c
  7587                           
  7588                           ;stkvar	_fmt @ sp[(-32)+-4]
  7589  011616  0EDC               	movlw	-36
  7590  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  7591  01161E  0EDD               	movlw	-35
  7592  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  7593  011626  006F FFB8  F03C    	movff	postinc0,btemp+10
  7594  01162C  006F FFB4  F03D    	movff	postdec0,btemp+11
  7595  011632  0E02               	movlw	2
  7596  011634  263C               	addwf	(btemp+10)^0,f,c
  7597  011636  0E00               	movlw	0
  7598  011638  223D               	addwfc	(btemp+11)^0,f,c
  7599  01163A  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7600  011640  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7601  011646                     	if	0	;tblptru may be non-zero
  7602  011646                     	endif
  7603  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7604  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  7605  011648  6EF8               	movwf	tblptru,c
  7606  01164A                     	endif
  7607  01164A  0008               	tblrd		*
  7608  01164C  50F5               	movf	tablat,w,c
  7609  01164E  6EE6               	movwf	postinc1,c
  7610  011650  0E00               	movlw	0
  7611  011652  6EE6               	movwf	postinc1,c
  7612  011654  EC6D  F0B9         	call	_tolower	;wreg free
  7613  011658  5032               	movf	btemp^0,w,c
  7614  01165A  6EDF               	movwf	indf2,c
  7615  01165C                     l10798:
  7616                           
  7617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  7618                           ;stkvar	_fmt @ sp[(-32)+-4]
  7619  01165C  0EDC               	movlw	-36
  7620  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7621  011664  0EDD               	movlw	-35
  7622  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  7623  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7624  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  7625  011678                     	if	0	;tblptru may be non-zero
  7626  011678                     	endif
  7627  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7628  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  7629  01167A  6EF8               	movwf	tblptru,c
  7630  01167C                     	endif
  7631  01167C  0008               	tblrd		*
  7632  01167E  50F5               	movf	tablat,w,c
  7633  011680  0A63               	xorlw	99
  7634  011682  A4D8               	btfss	status,2,c
  7635  011684  D036               	goto	l10808
  7636                           
  7637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  7638                           ;stkvar	_fmt @ sp[(-32)+-4]
  7639  011686  0EDC               	movlw	-36
  7640  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  7641  01168E  0EDD               	movlw	-35
  7642  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  7643  011696  2ADE               	incf	postinc2,f,c
  7644  011698  0E00               	movlw	0
  7645  01169A  22DD               	addwfc	postdec2,f,c
  7646                           
  7647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7648                           ;stkvar	_ap @ sp[(-32)+-6]
  7649  01169C  0EDA               	movlw	-38
  7650  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7651  0116A4  0EDB               	movlw	-37
  7652  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7653  0116AC  0E02               	movlw	2
  7654  0116AE  5EDE               	subwf	postinc2,f,c
  7655  0116B0  0E00               	movlw	0
  7656  0116B2  5ADD               	subwfb	postdec2,f,c
  7657  0116B4  006F FF78  F03C    	movff	postinc2,btemp+10
  7658  0116BA  006F FF74  F03D    	movff	postdec2,btemp+11
  7659  0116C0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7660  0116C6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7661  0116CC  50DF               	movf	indf2,w,c
  7662  0116CE  6E3D               	movwf	(btemp+11)^0,c
  7663                           
  7664                           ;stkvar	_c @ sp[(-32)+31]
  7665  0116D0  0EFF               	movlw	-1
  7666  0116D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7667                           
  7668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  7669                           ;stkvar	_c @ sp[(-32)+31]
  7670  0116D8  0EFF               	movlw	-1
  7671  0116DA  50E3               	movf	plusw1,w,c
  7672  0116DC  6EE6               	movwf	postinc1,c
  7673                           
  7674                           ;stkvar	_fp @ sp[(-33)+-2]
  7675  0116DE  0EDD               	movlw	-35
  7676  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  7677  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  7678  0116EC  ECE7  F0B8         	call	_ctoa	;wreg free
  7679  0116F0  D343               	goto	l2012
  7680  0116F2                     l10808:
  7681                           
  7682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7683                           ;stkvar	_fmt @ sp[(-32)+-4]
  7684  0116F2  0EDC               	movlw	-36
  7685  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7686  0116FA  0EDD               	movlw	-35
  7687  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7688  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  7689  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  7690  01170E                     	if	0	;tblptru may be non-zero
  7691  01170E                     	endif
  7692  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7693  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  7694  011710  6EF8               	movwf	tblptru,c
  7695  011712                     	endif
  7696  011712  0008               	tblrd		*
  7697  011714  50F5               	movf	tablat,w,c
  7698  011716  0A64               	xorlw	100
  7699  011718  B4D8               	btfsc	status,2,c
  7700  01171A  D015               	goto	u11900
  7701                           
  7702                           ;stkvar	_fmt @ sp[(-32)+-4]
  7703  01171C  0EDC               	movlw	-36
  7704  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7705  011724  0EDD               	movlw	-35
  7706  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  7707  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7708  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  7709  011738                     	if	0	;tblptru may be non-zero
  7710  011738                     	endif
  7711  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7712  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  7713  01173A  6EF8               	movwf	tblptru,c
  7714  01173C                     	endif
  7715  01173C  0008               	tblrd		*
  7716  01173E  50F5               	movf	tablat,w,c
  7717  011740  0A69               	xorlw	105
  7718  011742  A4D8               	btfss	status,2,c
  7719  011744  D075               	goto	l10820
  7720  011746                     u11900:
  7721                           
  7722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7723                           ;stkvar	_fmt @ sp[(-32)+-4]
  7724  011746  0EDC               	movlw	-36
  7725  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  7726  01174E  0EDD               	movlw	-35
  7727  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  7728  011756  2ADE               	incf	postinc2,f,c
  7729  011758  0E00               	movlw	0
  7730  01175A  22DD               	addwfc	postdec2,f,c
  7731                           
  7732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7733                           ;stkvar	_ap @ sp[(-32)+-6]
  7734  01175C  0EDA               	movlw	-38
  7735  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7736  011764  0EDB               	movlw	-37
  7737  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  7738  01176C  0E02               	movlw	2
  7739  01176E  5EDE               	subwf	postinc2,f,c
  7740  011770  0E00               	movlw	0
  7741  011772  5ADD               	subwfb	postdec2,f,c
  7742  011774  006F FF78  F03C    	movff	postinc2,btemp+10
  7743  01177A  006F FF74  F03D    	movff	postdec2,btemp+11
  7744  011780  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7745  011786  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7746  01178C  006F FF78  F03C    	movff	postinc2,btemp+10
  7747  011792  006F FF74  F03D    	movff	postdec2,btemp+11
  7748                           
  7749                           ;stkvar	_ll @ sp[(-32)+14]
  7750  011798  0EEE               	movlw	-18
  7751  01179A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7752  0117A0  0EEF               	movlw	-17
  7753  0117A2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7754  0117A8  6A32               	clrf	btemp^0,c
  7755  0117AA  BEE3               	btfsc	plusw1,7,c
  7756  0117AC  6832               	setf	btemp^0,c
  7757  0117AE  0EF0               	movlw	-16
  7758  0117B0  0060  F0CB  FFE3   	movff	btemp,plusw1
  7759  0117B6  0EF1               	movlw	-15
  7760  0117B8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7761  0117BE  0EF2               	movlw	-14
  7762  0117C0  0060  F0CB  FFE3   	movff	btemp,plusw1
  7763  0117C6  0EF3               	movlw	-13
  7764  0117C8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7765  0117CE  0EF4               	movlw	-12
  7766  0117D0  0060  F0CB  FFE3   	movff	btemp,plusw1
  7767  0117D6  0EF5               	movlw	-11
  7768  0117D8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7769                           
  7770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7771                           ;stkvar	_ll @ sp[(-32)+14]
  7772  0117DE  50E1               	movf	fsr1l,w,c
  7773  0117E0  0FEE               	addlw	-18
  7774  0117E2  6ED9               	movwf	fsr2l,c
  7775  0117E4  50E2               	movf	fsr1h,w,c
  7776  0117E6  6EDA               	movwf	fsr2h,c
  7777  0117E8  0EFF               	movlw	255
  7778  0117EA  22DA               	addwfc	fsr2h,f,c
  7779  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  7780  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  7781  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  7782  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  7783  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  7784  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  7785  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  7786  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  7787                           
  7788                           ;stkvar	_fp @ sp[(-40)+-2]
  7789  01181C  0ED6               	movlw	-42
  7790  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  7791  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  7792  01182A  ECC7  F09B         	call	_dtoa	;wreg free
  7793  01182E  D2A4               	goto	l2012
  7794  011830                     l10820:
  7795                           
  7796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  7797                           ;stkvar	_ct @ sp[(-32)+26]
  7798  011830  0EFA               	movlw	-6
  7799  011832  006F FF8C  F032    	movff	plusw1,btemp
  7800  011838  0E66               	movlw	102
  7801  01183A  1832               	xorwf	btemp^0,w,c
  7802  01183C  A4D8               	btfss	status,2,c
  7803  01183E  D06E               	goto	l10832
  7804                           
  7805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  7806                           ;stkvar	_fmt @ sp[(-32)+-4]
  7807  011840  0EDC               	movlw	-36
  7808  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  7809  011848  0EDD               	movlw	-35
  7810  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7811  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  7812  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  7813  01185C                     	if	0	;tblptru may be non-zero
  7814  01185C                     	endif
  7815  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7816  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  7817  01185E  6EF8               	movwf	tblptru,c
  7818  011860                     	endif
  7819                           
  7820                           ;stkvar	_c @ sp[(-32)+31]
  7821  011860  0008               	tblrd		*
  7822  011862  0EFF               	movlw	-1
  7823  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  7824                           
  7825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  7826                           ;stkvar	_fmt @ sp[(-32)+-4]
  7827  01186A  0EDC               	movlw	-36
  7828  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7829  011872  0EDD               	movlw	-35
  7830  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  7831  01187A  2ADE               	incf	postinc2,f,c
  7832  01187C  0E00               	movlw	0
  7833  01187E  22DD               	addwfc	postdec2,f,c
  7834                           
  7835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  7836                           ;stkvar	_ap @ sp[(-32)+-6]
  7837  011880  0EDA               	movlw	-38
  7838  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  7839  011888  0EDB               	movlw	-37
  7840  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7841  011890  0E04               	movlw	4
  7842  011892  5EDE               	subwf	postinc2,f,c
  7843  011894  0E00               	movlw	0
  7844  011896  5ADD               	subwfb	postdec2,f,c
  7845  011898  006F FF78  F03C    	movff	postinc2,btemp+10
  7846  01189E  006F FF74  F03D    	movff	postdec2,btemp+11
  7847  0118A4  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7848  0118AA  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7849  0118B0  006F FF78  F03A    	movff	postinc2,btemp+8
  7850  0118B6  006F FF78  F03B    	movff	postinc2,btemp+9
  7851  0118BC  006F FF78  F03C    	movff	postinc2,btemp+10
  7852  0118C2  006F FF78  F03D    	movff	postinc2,btemp+11
  7853                           
  7854                           ;stkvar	_f @ sp[(-32)+22]
  7855  0118C8  0EF6               	movlw	-10
  7856  0118CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  7857  0118D0  0EF7               	movlw	-9
  7858  0118D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  7859  0118D8  0EF8               	movlw	-8
  7860  0118DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7861  0118E0  0EF9               	movlw	-7
  7862  0118E2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7863  0118E8                     l10828:
  7864                           
  7865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  7866                           ;stkvar	_c @ sp[(-32)+31]
  7867  0118E8  0EFF               	movlw	-1
  7868  0118EA  50E3               	movf	plusw1,w,c
  7869  0118EC  6EE6               	movwf	postinc1,c
  7870                           
  7871                           ;stkvar	_f @ sp[(-33)+22]
  7872  0118EE  0EF5               	movlw	-11
  7873  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  7874  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  7875  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  7876  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  7877                           
  7878                           ;stkvar	_fp @ sp[(-37)+-2]
  7879  011908  0ED9               	movlw	-39
  7880  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  7881  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  7882  011916  EC00  F080         	call	_efgtoa	;wreg free
  7883  01191A  D22E               	goto	l2012
  7884  01191C                     l10832:
  7885                           
  7886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7887  01191C  0E02               	movlw	2
  7888  01191E  6EE6               	movwf	postinc1,c
  7889  011920  0E00               	movlw	0
  7890  011922  6EE6               	movwf	postinc1,c
  7891  011924  0EF5               	movlw	low STR_42
  7892  011926  6EE6               	movwf	postinc1,c
  7893  011928  0EFF               	movlw	high STR_42
  7894  01192A  6EE6               	movwf	postinc1,c
  7895                           
  7896                           ;stkvar	_ct @ sp[(-36)+26]
  7897  01192C  0EF6               	movlw	246
  7898  01192E  24E1               	addwf	fsr1l,w,c
  7899  011930  6E32               	movwf	btemp^0,c
  7900  011932  0EFF               	movlw	255
  7901  011934  20E2               	addwfc	fsr1h,w,c
  7902  011936  6E33               	movwf	(btemp+1)^0,c
  7903  011938  0060  F0CB  FFE6   	movff	btemp,postinc1
  7904  01193E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7905  011944  EC14  F0AC         	call	_strncmp	;wreg free
  7906  011948  5032               	movf	btemp^0,w,c
  7907  01194A  1033               	iorwf	(btemp+1)^0,w,c
  7908  01194C  A4D8               	btfss	status,2,c
  7909  01194E  D096               	goto	l10852
  7910                           
  7911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7912                           ;stkvar	_fmt @ sp[(-32)+-4]
  7913  011950  0EDC               	movlw	-36
  7914  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  7915  011958  0EDD               	movlw	-35
  7916  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7917  011960  006F FF78  F03C    	movff	postinc2,btemp+10
  7918  011966  006F FF74  F03D    	movff	postdec2,btemp+11
  7919  01196C  0E01               	movlw	1
  7920  01196E  263C               	addwf	(btemp+10)^0,f,c
  7921  011970  0E00               	movlw	0
  7922  011972  223D               	addwfc	(btemp+11)^0,f,c
  7923  011974  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7924  01197A  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7925  011980                     	if	0	;tblptru may be non-zero
  7926  011980                     	endif
  7927  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7928  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  7929  011982  6EF8               	movwf	tblptru,c
  7930  011984                     	endif
  7931                           
  7932                           ;stkvar	_c @ sp[(-32)+31]
  7933  011984  0008               	tblrd		*
  7934  011986  0EFF               	movlw	-1
  7935  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  7936  01198E  0EBF               	movlw	191
  7937  011990  6E3C               	movwf	(btemp+10)^0,c
  7938  011992  0EFF               	movlw	255
  7939  011994  6E3D               	movwf	(btemp+11)^0,c
  7940                           
  7941                           ;stkvar	_fmt @ sp[(-32)+-4]
  7942  011996  0EDC               	movlw	-36
  7943  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  7944  01199E  0EDD               	movlw	-35
  7945  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7946  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7947  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7948  0119B2                     	if	0	;tblptru may be non-zero
  7949  0119B2                     	endif
  7950  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7951  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  7952  0119B4  6EF8               	movwf	tblptru,c
  7953  0119B6                     	endif
  7954  0119B6  0008               	tblrd		*
  7955  0119B8  50F5               	movf	tablat,w,c
  7956  0119BA  6E3A               	movwf	(btemp+8)^0,c
  7957  0119BC  6A3B               	clrf	(btemp+9)^0,c
  7958  0119BE  503C               	movf	(btemp+10)^0,w,c
  7959  0119C0  263A               	addwf	(btemp+8)^0,f,c
  7960  0119C2  503D               	movf	(btemp+11)^0,w,c
  7961  0119C4  223B               	addwfc	(btemp+9)^0,f,c
  7962  0119C6  503B               	movf	(btemp+9)^0,w,c
  7963  0119C8  E106               	bnz	u11930
  7964  0119CA  0E1A               	movlw	26
  7965  0119CC  5C3A               	subwf	(btemp+8)^0,w,c
  7966  0119CE  B0D8               	btfsc	status,0,c
  7967  0119D0  D002               	goto	u11930
  7968  0119D2  0E01               	movlw	1
  7969  0119D4  D001               	goto	u11940
  7970  0119D6                     u11930:
  7971  0119D6  0E00               	movlw	0
  7972  0119D8                     u11940:
  7973  0119D8  6E3C               	movwf	(btemp+10)^0,c
  7974  0119DA  6A3D               	clrf	(btemp+11)^0,c
  7975                           
  7976                           ;stkvar	_vfpfcnvrt$4410 @ sp[(-32)+2]
  7977  0119DC  0EE2               	movlw	-30
  7978  0119DE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7979  0119E4  0EE3               	movlw	-29
  7980  0119E6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7981                           
  7982                           ;stkvar	_vfpfcnvrt$4410 @ sp[(-32)+2]
  7983  0119EC  0EE2               	movlw	-30
  7984  0119EE  006F FF8C  F032    	movff	plusw1,btemp
  7985  0119F4  0EE3               	movlw	-29
  7986  0119F6  50E3               	movf	plusw1,w,c
  7987  0119F8  1032               	iorwf	btemp^0,w,c
  7988                           
  7989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7990                           ;stkvar	_ap @ sp[(-32)+-6]
  7991                           
  7992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  7993                           
  7994                           ;stkvar	_f @ sp[(-32)+22]
  7995                           
  7996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  7997                           ;stkvar	_ap @ sp[(-32)+-6]
  7998  0119FA  0EDA               	movlw	-38
  7999  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8000  011A02  0EDB               	movlw	-37
  8001  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  8002  011A0A  0E04               	movlw	4
  8003  011A0C  5EDE               	subwf	postinc2,f,c
  8004  011A0E  0E00               	movlw	0
  8005  011A10  5ADD               	subwfb	postdec2,f,c
  8006  011A12  006F FF78  F03C    	movff	postinc2,btemp+10
  8007  011A18  006F FF74  F03D    	movff	postdec2,btemp+11
  8008  011A1E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8009  011A24  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8010  011A2A  006F FF78  F03A    	movff	postinc2,btemp+8
  8011  011A30  006F FF78  F03B    	movff	postinc2,btemp+9
  8012  011A36  006F FF78  F03C    	movff	postinc2,btemp+10
  8013  011A3C  006F FF78  F03D    	movff	postinc2,btemp+11
  8014                           
  8015                           ;stkvar	_f @ sp[(-32)+22]
  8016  011A42  0EF6               	movlw	-10
  8017  011A44  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8018  011A4A  0EF7               	movlw	-9
  8019  011A4C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8020  011A52  0EF8               	movlw	-8
  8021  011A54  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8022  011A5A  0EF9               	movlw	-7
  8023  011A5C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8024                           
  8025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  8026                           ;stkvar	_fmt @ sp[(-32)+-4]
  8027  011A62  0EDC               	movlw	-36
  8028  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  8029  011A6A  0EDD               	movlw	-35
  8030  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8031  011A72  0E02               	movlw	2
  8032  011A74  26DE               	addwf	postinc2,f,c
  8033  011A76  0E00               	movlw	0
  8034  011A78  22DD               	addwfc	postdec2,f,c
  8035  011A7A  D736               	goto	l10828
  8036  011A7C                     l10852:
  8037                           
  8038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  8039                           ;stkvar	_fmt @ sp[(-32)+-4]
  8040  011A7C  0EDC               	movlw	-36
  8041  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8042  011A84  0EDD               	movlw	-35
  8043  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  8044  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8045  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  8046  011A98                     	if	0	;tblptru may be non-zero
  8047  011A98                     	endif
  8048  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8049  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  8050  011A9A  6EF8               	movwf	tblptru,c
  8051  011A9C                     	endif
  8052  011A9C  0008               	tblrd		*
  8053  011A9E  50F5               	movf	tablat,w,c
  8054  011AA0  0A73               	xorlw	115
  8055  011AA2  A4D8               	btfss	status,2,c
  8056  011AA4  D042               	goto	l10862
  8057                           
  8058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  8059                           ;stkvar	_fmt @ sp[(-32)+-4]
  8060  011AA6  0EDC               	movlw	-36
  8061  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8062  011AAE  0EDD               	movlw	-35
  8063  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8064  011AB6  2ADE               	incf	postinc2,f,c
  8065  011AB8  0E00               	movlw	0
  8066  011ABA  22DD               	addwfc	postdec2,f,c
  8067                           
  8068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  8069                           ;stkvar	_ap @ sp[(-32)+-6]
  8070  011ABC  0EDA               	movlw	-38
  8071  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8072  011AC4  0EDB               	movlw	-37
  8073  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8074  011ACC  0E02               	movlw	2
  8075  011ACE  5EDE               	subwf	postinc2,f,c
  8076  011AD0  0E00               	movlw	0
  8077  011AD2  5ADD               	subwfb	postdec2,f,c
  8078  011AD4  006F FF78  F03C    	movff	postinc2,btemp+10
  8079  011ADA  006F FF74  F03D    	movff	postdec2,btemp+11
  8080  011AE0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8081  011AE6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8082  011AEC  006F FF78  F03C    	movff	postinc2,btemp+10
  8083  011AF2  006F FF74  F03D    	movff	postdec2,btemp+11
  8084                           
  8085                           ;stkvar	_cp @ sp[(-32)+29]
  8086  011AF8  0EFE               	movlw	-2
  8087  011AFA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8088  011B00  0EFD               	movlw	-3
  8089  011B02  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8090                           
  8091                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  8092                           ;stkvar	_cp @ sp[(-32)+29]
  8093  011B08  0EFD               	movlw	-3
  8094  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  8095  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  8096                           
  8097                           ;stkvar	_fp @ sp[(-34)+-2]
  8098  011B16  0EDC               	movlw	-36
  8099  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  8100  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  8101  011B24  EC05  F0A5         	call	_stoa	;wreg free
  8102  011B28  D127               	goto	l2012
  8103  011B2A                     l10862:
  8104                           
  8105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  8106                           ;stkvar	_fmt @ sp[(-32)+-4]
  8107  011B2A  0EDC               	movlw	-36
  8108  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8109  011B32  0EDD               	movlw	-35
  8110  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  8111  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8112  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  8113  011B46                     	if	0	;tblptru may be non-zero
  8114  011B46                     	endif
  8115  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8116  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  8117  011B48  6EF8               	movwf	tblptru,c
  8118  011B4A                     	endif
  8119  011B4A  0008               	tblrd		*
  8120  011B4C  50F5               	movf	tablat,w,c
  8121  011B4E  0A78               	xorlw	120
  8122  011B50  B4D8               	btfsc	status,2,c
  8123  011B52  D015               	goto	u11980
  8124                           
  8125                           ;stkvar	_fmt @ sp[(-32)+-4]
  8126  011B54  0EDC               	movlw	-36
  8127  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  8128  011B5C  0EDD               	movlw	-35
  8129  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8130  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  8131  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8132  011B70                     	if	0	;tblptru may be non-zero
  8133  011B70                     	endif
  8134  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8135  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  8136  011B72  6EF8               	movwf	tblptru,c
  8137  011B74                     	endif
  8138  011B74  0008               	tblrd		*
  8139  011B76  50F5               	movf	tablat,w,c
  8140  011B78  0A58               	xorlw	88
  8141  011B7A  A4D8               	btfss	status,2,c
  8142  011B7C  D094               	goto	l10876
  8143  011B7E                     u11980:
  8144                           
  8145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  8146                           ;stkvar	_fmt @ sp[(-32)+-4]
  8147  011B7E  0EDC               	movlw	-36
  8148  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  8149  011B86  0EDD               	movlw	-35
  8150  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  8151  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8152  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  8153  011B9A                     	if	0	;tblptru may be non-zero
  8154  011B9A                     	endif
  8155  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8156  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  8157  011B9C  6EF8               	movwf	tblptru,c
  8158  011B9E                     	endif
  8159                           
  8160                           ;stkvar	_c @ sp[(-32)+31]
  8161  011B9E  0008               	tblrd		*
  8162  011BA0  0EFF               	movlw	-1
  8163  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  8164                           
  8165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  8166                           ;stkvar	_fmt @ sp[(-32)+-4]
  8167  011BA8  0EDC               	movlw	-36
  8168  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8169  011BB0  0EDD               	movlw	-35
  8170  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8171  011BB8  2ADE               	incf	postinc2,f,c
  8172  011BBA  0E00               	movlw	0
  8173  011BBC  22DD               	addwfc	postdec2,f,c
  8174                           
  8175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8176                           ;stkvar	_ap @ sp[(-32)+-6]
  8177  011BBE  0EDA               	movlw	-38
  8178  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8179  011BC6  0EDB               	movlw	-37
  8180  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8181  011BCE  0E02               	movlw	2
  8182  011BD0  5EDE               	subwf	postinc2,f,c
  8183  011BD2  0E00               	movlw	0
  8184  011BD4  5ADD               	subwfb	postdec2,f,c
  8185  011BD6  006F FF78  F03C    	movff	postinc2,btemp+10
  8186  011BDC  006F FF74  F03D    	movff	postdec2,btemp+11
  8187  011BE2  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8188  011BE8  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8189  011BEE  006F FF78  F03C    	movff	postinc2,btemp+10
  8190  011BF4  006F FF74  F03D    	movff	postdec2,btemp+11
  8191  011BFA  503C               	movf	(btemp+10)^0,w,c
  8192  011BFC  6E42               	movwf	(btemp+16)^0,c
  8193  011BFE  503D               	movf	(btemp+11)^0,w,c
  8194  011C00  6E43               	movwf	(btemp+17)^0,c
  8195  011C02  6A44               	clrf	(btemp+18)^0,c
  8196  011C04  6A45               	clrf	(btemp+19)^0,c
  8197  011C06  6A46               	clrf	(btemp+20)^0,c
  8198  011C08  6A47               	clrf	(btemp+21)^0,c
  8199  011C0A  6A48               	clrf	(btemp+22)^0,c
  8200  011C0C  6A49               	clrf	(btemp+23)^0,c
  8201                           
  8202                           ;stkvar	_llu @ sp[(-32)+6]
  8203  011C0E  0EE6               	movlw	-26
  8204  011C10  0060  F10B  FFE3   	movff	btemp+16,plusw1
  8205  011C16  0EE7               	movlw	-25
  8206  011C18  0060  F10F  FFE3   	movff	btemp+17,plusw1
  8207  011C1E  0EE8               	movlw	-24
  8208  011C20  0060  F113  FFE3   	movff	btemp+18,plusw1
  8209  011C26  0EE9               	movlw	-23
  8210  011C28  0060  F117  FFE3   	movff	btemp+19,plusw1
  8211  011C2E  0EEA               	movlw	-22
  8212  011C30  0060  F11B  FFE3   	movff	btemp+20,plusw1
  8213  011C36  0EEB               	movlw	-21
  8214  011C38  0060  F11F  FFE3   	movff	btemp+21,plusw1
  8215  011C3E  0EEC               	movlw	-20
  8216  011C40  0060  F123  FFE3   	movff	btemp+22,plusw1
  8217  011C46  0EED               	movlw	-19
  8218  011C48  0060  F127  FFE3   	movff	btemp+23,plusw1
  8219                           
  8220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  8221                           ;stkvar	_c @ sp[(-32)+31]
  8222  011C4E  0EFF               	movlw	-1
  8223  011C50  50E3               	movf	plusw1,w,c
  8224  011C52  6EE6               	movwf	postinc1,c
  8225                           
  8226                           ;stkvar	_llu @ sp[(-33)+6]
  8227  011C54  50E1               	movf	fsr1l,w,c
  8228  011C56  0FE5               	addlw	-27
  8229  011C58  6ED9               	movwf	fsr2l,c
  8230  011C5A  50E2               	movf	fsr1h,w,c
  8231  011C5C  6EDA               	movwf	fsr2h,c
  8232  011C5E  0EFF               	movlw	255
  8233  011C60  22DA               	addwfc	fsr2h,f,c
  8234  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  8235  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  8236  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  8237  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  8238  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  8239  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  8240  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  8241  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  8242                           
  8243                           ;stkvar	_fp @ sp[(-41)+-2]
  8244  011C92  0ED5               	movlw	-43
  8245  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  8246  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  8247  011CA0  ECFC  F09F         	call	_xtoa	;wreg free
  8248  011CA4  D069               	goto	l2012
  8249  011CA6                     l10876:
  8250                           
  8251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  8252                           ;stkvar	_fmt @ sp[(-32)+-4]
  8253  011CA6  0EDC               	movlw	-36
  8254  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8255  011CAE  0EDD               	movlw	-35
  8256  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8257  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8258  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8259  011CC2                     	if	0	;tblptru may be non-zero
  8260  011CC2                     	endif
  8261  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8262  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  8263  011CC4  6EF8               	movwf	tblptru,c
  8264  011CC6                     	endif
  8265  011CC6  0008               	tblrd		*
  8266  011CC8  50F5               	movf	tablat,w,c
  8267  011CCA  0A25               	xorlw	37
  8268  011CCC  A4D8               	btfss	status,2,c
  8269  011CCE  D01A               	goto	l10886
  8270                           
  8271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  8272                           ;stkvar	_fmt @ sp[(-32)+-4]
  8273  011CD0  0EDC               	movlw	-36
  8274  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8275  011CD8  0EDD               	movlw	-35
  8276  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8277  011CE0  2ADE               	incf	postinc2,f,c
  8278  011CE2  0E00               	movlw	0
  8279  011CE4  22DD               	addwfc	postdec2,f,c
  8280                           
  8281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  8282                           ;stkvar	_fp @ sp[(-32)+-2]
  8283  011CE6  0EDE               	movlw	-34
  8284  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  8285  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  8286  011CF4  0E25               	movlw	37
  8287  011CF6  6EE6               	movwf	postinc1,c
  8288  011CF8  0E00               	movlw	0
  8289  011CFA  6EE6               	movwf	postinc1,c
  8290  011CFC  ECEF  F0B1         	call	_fputc	;wreg free
  8291  011D00                     l10882:
  8292                           
  8293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  8294  011D00  0E01               	movlw	1
  8295  011D02  D00C               	goto	L5
  8296  011D04                     l10886:
  8297                           
  8298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  8299                           ;stkvar	_fmt @ sp[(-32)+-4]
  8300  011D04  0EDC               	movlw	-36
  8301  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  8302  011D0C  0EDD               	movlw	-35
  8303  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8304  011D14  2ADE               	incf	postinc2,f,c
  8305  011D16  0E00               	movlw	0
  8306  011D18  22DD               	addwfc	postdec2,f,c
  8307                           
  8308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  8309  011D1A  0E00               	movlw	0
  8310  011D1C                     L5:
  8311  011D1C  6E32               	movwf	btemp^0,c
  8312  011D1E  0E00               	movlw	0
  8313  011D20  6E33               	movwf	(btemp+1)^0,c
  8314  011D22  D02A               	goto	l2012
  8315  011D24                     l10892:
  8316                           
  8317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  8318                           ;stkvar	_fp @ sp[(-32)+-2]
  8319  011D24  0EDE               	movlw	-34
  8320  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  8321  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  8322                           
  8323                           ;stkvar	_fmt @ sp[(-34)+-4]
  8324  011D32  0EDA               	movlw	-38
  8325  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  8326  011D3A  0EDB               	movlw	-37
  8327  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8328  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  8329  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  8330  011D4E                     	if	0	;tblptru may be non-zero
  8331  011D4E                     	endif
  8332  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8333  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  8334  011D50  6EF8               	movwf	tblptru,c
  8335  011D52                     	endif
  8336  011D52  0008               	tblrd		*
  8337  011D54  50F5               	movf	tablat,w,c
  8338  011D56  6EE6               	movwf	postinc1,c
  8339  011D58  0E00               	movlw	0
  8340  011D5A  6EE6               	movwf	postinc1,c
  8341  011D5C  ECEF  F0B1         	call	_fputc	;wreg free
  8342                           
  8343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  8344                           ;stkvar	_fmt @ sp[(-32)+-4]
  8345  011D60  0EDC               	movlw	-36
  8346  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  8347  011D68  0EDD               	movlw	-35
  8348  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8349  011D70  2ADE               	incf	postinc2,f,c
  8350  011D72  0E00               	movlw	0
  8351  011D74  22DD               	addwfc	postdec2,f,c
  8352  011D76  D7C4               	goto	l10882
  8353  011D78                     l2012:
  8354                           
  8355                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  8356  011D78  0EDA               	movlw	218
  8357  011D7A  26E1               	addwf	fsr1l,f,c
  8358  011D7C  0EFF               	movlw	255
  8359  011D7E  22E2               	addwfc	fsr1h,f,c
  8360  011D80  0012               	return		;funcret
  8361  011D82                     __end_of_vfpfcnvrt:
  8362                           	opt callstack 0
  8363                           
  8364 ;; *************** function _xtoa *****************
  8365 ;; Defined at:
  8366 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8367 ;; Parameters:    Size  Location     Type
  8368 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8369 ;;		 -> f(6), NULL(0), 
  8370 ;;  d               8  [STACK] unsigned long long 
  8371 ;;  x               1  [STACK] unsigned char 
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;  n               8  [STACK] unsigned long long 
  8374 ;;  c               2  [STACK] int 
  8375 ;;  i               2  [STACK] int 
  8376 ;;  w               2  [STACK] int 
  8377 ;;  p               2  [STACK] int 
  8378 ;; Return value:  Size  Location     Type
  8379 ;;                  2  [STACK] int 
  8380 ;; Registers used:
  8381 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/5
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8391 ;;Total ram usage:        0 bytes
  8392 ;; Hardware stack levels used:    1
  8393 ;; Hardware stack levels required when called:   11
  8394 ;; This function calls:
  8395 ;;		_isalpha
  8396 ;;		_isupper
  8397 ;;		_pad
  8398 ;;		_toupper
  8399 ;; This function is called by:
  8400 ;;		_vfpfcnvrt
  8401 ;; This function uses a reentrant model
  8402 ;;
  8403                           
  8404                           	psect	text37
  8405  013FF8                     __ptext37:
  8406                           	opt callstack 0
  8407  013FF8                     _xtoa:
  8408                           	opt callstack 0
  8409                           
  8410                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8411  013FF8  0E14               	movlw	20
  8412  013FFA  26E1               	addwf	fsr1l,f,c
  8413  013FFC  0E00               	movlw	0
  8414  013FFE  22E2               	addwfc	fsr1h,f,c
  8415                           
  8416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  8417                           
  8418                           ;incstack = 0
  8419  014000  AE1E               	btfss	(_prec+1)^0,7,c
  8420                           
  8421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  8422  014002  921F               	bcf	_flags^0,1,c
  8423                           
  8424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  8425  014004  BE1E               	btfsc	(_prec+1)^0,7,c
  8426  014006  D005               	goto	u11460
  8427  014008  501E               	movf	(_prec+1)^0,w,c
  8428  01400A  E110               	bnz	l10606
  8429  01400C  041D               	decf	_prec^0,w,c
  8430  01400E  B0D8               	btfsc	status,0,c
  8431  014010  D00D               	goto	l10606
  8432  014012                     u11460:
  8433  014012  0E01               	movlw	1
  8434  014014  6E3C               	movwf	(btemp+10)^0,c
  8435  014016  0E00               	movlw	0
  8436  014018  6E3D               	movwf	(btemp+11)^0,c
  8437                           
  8438                           ;stkvar	_p @ sp[(-20)+18]
  8439  01401A  0EFE               	movlw	-2
  8440  01401C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8441  014022  0EFF               	movlw	-1
  8442  014024  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8443  01402A  D008               	goto	l1962
  8444  01402C                     l10606:
  8445                           
  8446                           ;stkvar	_p @ sp[(-20)+18]
  8447  01402C  0EFE               	movlw	-2
  8448  01402E  0060  F077  FFE3   	movff	_prec,plusw1
  8449  014034  0EFF               	movlw	-1
  8450  014036  0060  F07B  FFE3   	movff	_prec+1,plusw1
  8451  01403C                     l1962:
  8452                           
  8453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  8454                           ;stkvar	_w @ sp[(-20)+16]
  8455  01403C  0EFC               	movlw	-4
  8456  01403E  0060  F06F  FFE3   	movff	_width,plusw1
  8457  014044  0EFD               	movlw	-3
  8458  014046  0060  F073  FFE3   	movff	_width+1,plusw1
  8459                           
  8460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  8461  01404C  A81F               	btfss	_flags^0,4,c
  8462  01404E  D00B               	goto	l10612
  8463                           
  8464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  8465                           ;stkvar	_w @ sp[(-20)+16]
  8466  014050  50E1               	movf	fsr1l,w,c
  8467  014052  0FFC               	addlw	-4
  8468  014054  6ED9               	movwf	fsr2l,c
  8469  014056  50E2               	movf	fsr1h,w,c
  8470  014058  6EDA               	movwf	fsr2h,c
  8471  01405A  0EFF               	movlw	255
  8472  01405C  22DA               	addwfc	fsr2h,f,c
  8473  01405E  0EFE               	movlw	254
  8474  014060  26DE               	addwf	postinc2,f,c
  8475  014062  0EFF               	movlw	255
  8476  014064  22DD               	addwfc	postdec2,f,c
  8477  014066                     l10612:
  8478                           
  8479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  8480                           ;stkvar	_d @ sp[(-20)+-10]
  8481  014066  0EE2               	movlw	226
  8482  014068  24E1               	addwf	fsr1l,w,c
  8483  01406A  6ED9               	movwf	fsr2l,c
  8484  01406C  0EFF               	movlw	255
  8485  01406E  20E2               	addwfc	fsr1h,w,c
  8486  014070  6EDA               	movwf	fsr2h,c
  8487                           
  8488                           ;stkvar	_n @ sp[(-20)+4]
  8489  014072  0E08               	movlw	8
  8490  014074  6E32               	movwf	btemp^0,c
  8491  014076  0EF0               	movlw	-16
  8492  014078                     us1148999:
  8493  014078  006F FF7B FFE3     	movff	postinc2,plusw1
  8494  01407E  28E8               	incf	wreg,w,c
  8495  014080  2E32               	decfsz	btemp^0,f,c
  8496  014082  D7FA               	bra	us1148999
  8497                           
  8498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  8499  014084  0E4F               	movlw	79
  8500  014086  6E3C               	movwf	(btemp+10)^0,c
  8501  014088  0E00               	movlw	0
  8502  01408A  6E3D               	movwf	(btemp+11)^0,c
  8503                           
  8504                           ;stkvar	_i @ sp[(-20)+14]
  8505  01408C  0EFA               	movlw	-6
  8506  01408E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8507  014094  0EFB               	movlw	-5
  8508  014096  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8509                           
  8510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  8511  01409C  0102               	movlb	2	; () banked
  8512  01409E  6B8F               	clrf	(_dbuf+79)& (0+255),b
  8513                           
  8514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8515  0140A0  D0EE               	goto	l10650
  8516  0140A2                     l10618:
  8517                           
  8518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  8519                           ;stkvar	_i @ sp[(-20)+14]
  8520  0140A2  50E1               	movf	fsr1l,w,c
  8521  0140A4  0FFA               	addlw	-6
  8522  0140A6  6ED9               	movwf	fsr2l,c
  8523  0140A8  50E2               	movf	fsr1h,w,c
  8524  0140AA  6EDA               	movwf	fsr2h,c
  8525  0140AC  0EFF               	movlw	255
  8526  0140AE  22DA               	addwfc	fsr2h,f,c
  8527  0140B0  06DE               	decf	postinc2,f,c
  8528  0140B2  0E00               	movlw	0
  8529  0140B4  5ADD               	subwfb	postdec2,f,c
  8530                           
  8531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  8532                           ;stkvar	_n @ sp[(-20)+4]
  8533  0140B6  0EF0               	movlw	-16
  8534  0140B8  006F FF8C  F03C    	movff	plusw1,btemp+10
  8535  0140BE  0EF1               	movlw	-15
  8536  0140C0  006F FF8C  F03D    	movff	plusw1,btemp+11
  8537  0140C6  0E0F               	movlw	15
  8538  0140C8  163C               	andwf	(btemp+10)^0,f,c
  8539  0140CA  0E00               	movlw	0
  8540  0140CC  163D               	andwf	(btemp+11)^0,f,c
  8541                           
  8542                           ;stkvar	_c @ sp[(-20)+12]
  8543  0140CE  0EF8               	movlw	-8
  8544  0140D0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8545  0140D6  0EF9               	movlw	-7
  8546  0140D8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8547                           
  8548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  8549                           ;stkvar	_c @ sp[(-20)+12]
  8550  0140DE  0EF9               	movlw	-7
  8551  0140E0  BEE3               	btfsc	plusw1,7,c
  8552  0140E2  D00F               	goto	l10626
  8553  0140E4  0EF9               	movlw	-7
  8554  0140E6  50E3               	movf	plusw1,w,c
  8555  0140E8  E108               	bnz	u11490
  8556  0140EA  0EF8               	movlw	-8
  8557  0140EC  006F FF8C  F032    	movff	plusw1,btemp
  8558  0140F2  0E0A               	movlw	10
  8559  0140F4  5E32               	subwf	btemp^0,f,c
  8560  0140F6  A0D8               	btfss	status,0,c
  8561  0140F8  D004               	goto	l10626
  8562  0140FA                     u11490:
  8563                           
  8564                           ;stkvar	_c @ sp[(-20)+12]
  8565  0140FA  0EF8               	movlw	-8
  8566  0140FC  50E3               	movf	plusw1,w,c
  8567  0140FE  0F57               	addlw	87
  8568  014100  D003               	goto	L6
  8569  014102                     l10626:
  8570                           
  8571                           ;stkvar	_c @ sp[(-20)+12]
  8572  014102  0EF8               	movlw	-8
  8573  014104  50E3               	movf	plusw1,w,c
  8574  014106  0F30               	addlw	48
  8575  014108                     L6:
  8576  014108  6E3C               	movwf	(btemp+10)^0,c
  8577  01410A  0EF9               	movlw	-7
  8578  01410C  006F FF8C  F03D    	movff	plusw1,btemp+11
  8579  014112  0E00               	movlw	0
  8580  014114  223D               	addwfc	(btemp+11)^0,f,c
  8581                           
  8582                           ;stkvar	_c @ sp[(-20)+12]
  8583  014116  0EF8               	movlw	-8
  8584  014118  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8585  01411E  0EF9               	movlw	-7
  8586  014120  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8587  014126  0EBF               	movlw	191
  8588  014128  6E3C               	movwf	(btemp+10)^0,c
  8589  01412A  0EFF               	movlw	255
  8590  01412C  6E3D               	movwf	(btemp+11)^0,c
  8591                           
  8592                           ;stkvar	_x @ sp[(-20)+-11]
  8593  01412E  0EE1               	movlw	-31
  8594  014130  50E3               	movf	plusw1,w,c
  8595  014132  6E3A               	movwf	(btemp+8)^0,c
  8596  014134  6A3B               	clrf	(btemp+9)^0,c
  8597  014136  503C               	movf	(btemp+10)^0,w,c
  8598  014138  263A               	addwf	(btemp+8)^0,f,c
  8599  01413A  503D               	movf	(btemp+11)^0,w,c
  8600  01413C  223B               	addwfc	(btemp+9)^0,f,c
  8601  01413E  503B               	movf	(btemp+9)^0,w,c
  8602  014140  E106               	bnz	u11500
  8603  014142  0E1A               	movlw	26
  8604  014144  5C3A               	subwf	(btemp+8)^0,w,c
  8605  014146  B0D8               	btfsc	status,0,c
  8606  014148  D002               	goto	u11500
  8607  01414A  0E01               	movlw	1
  8608  01414C  D001               	goto	u11510
  8609  01414E                     u11500:
  8610  01414E  0E00               	movlw	0
  8611  014150                     u11510:
  8612  014150  6E3C               	movwf	(btemp+10)^0,c
  8613  014152  6A3D               	clrf	(btemp+11)^0,c
  8614                           
  8615                           ;stkvar	_xtoa$4388 @ sp[(-20)+2]
  8616  014154  0EEE               	movlw	-18
  8617  014156  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8618  01415C  0EEF               	movlw	-17
  8619  01415E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8620                           
  8621                           ;stkvar	_xtoa$4388 @ sp[(-20)+2]
  8622  014164  0EEE               	movlw	-18
  8623  014166  006F FF8C  F032    	movff	plusw1,btemp
  8624  01416C  0EEF               	movlw	-17
  8625  01416E  50E3               	movf	plusw1,w,c
  8626  014170  1032               	iorwf	btemp^0,w,c
  8627  014172  B4D8               	btfsc	status,2,c
  8628  014174  D041               	goto	l10642
  8629  014176  0E9F               	movlw	159
  8630  014178  6E3C               	movwf	(btemp+10)^0,c
  8631  01417A  0EFF               	movlw	255
  8632  01417C  6E3D               	movwf	(btemp+11)^0,c
  8633                           
  8634                           ;stkvar	_c @ sp[(-20)+12]
  8635  01417E  0EF8               	movlw	-8
  8636  014180  006F FF8C  F03A    	movff	plusw1,btemp+8
  8637  014186  0EF9               	movlw	-7
  8638  014188  006F FF8C  F03B    	movff	plusw1,btemp+9
  8639  01418E  0E20               	movlw	32
  8640  014190  123A               	iorwf	(btemp+8)^0,f,c
  8641  014192  0E00               	movlw	0
  8642  014194  123B               	iorwf	(btemp+9)^0,f,c
  8643  014196  503C               	movf	(btemp+10)^0,w,c
  8644  014198  263A               	addwf	(btemp+8)^0,f,c
  8645  01419A  503D               	movf	(btemp+11)^0,w,c
  8646  01419C  223B               	addwfc	(btemp+9)^0,f,c
  8647  01419E  503B               	movf	(btemp+9)^0,w,c
  8648  0141A0  E106               	bnz	u11530
  8649  0141A2  0E1A               	movlw	26
  8650  0141A4  5C3A               	subwf	(btemp+8)^0,w,c
  8651  0141A6  B0D8               	btfsc	status,0,c
  8652  0141A8  D002               	goto	u11530
  8653  0141AA  0E01               	movlw	1
  8654  0141AC  D001               	goto	u11540
  8655  0141AE                     u11530:
  8656  0141AE  0E00               	movlw	0
  8657  0141B0                     u11540:
  8658  0141B0  6E3C               	movwf	(btemp+10)^0,c
  8659  0141B2  6A3D               	clrf	(btemp+11)^0,c
  8660                           
  8661                           ;stkvar	_xtoa$4389 @ sp[(-20)+0]
  8662  0141B4  0EEC               	movlw	-20
  8663  0141B6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8664  0141BC  0EED               	movlw	-19
  8665  0141BE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8666                           
  8667                           ;stkvar	_xtoa$4389 @ sp[(-20)+0]
  8668  0141C4  0EEC               	movlw	-20
  8669  0141C6  006F FF8C  F032    	movff	plusw1,btemp
  8670  0141CC  0EED               	movlw	-19
  8671  0141CE  50E3               	movf	plusw1,w,c
  8672  0141D0  1032               	iorwf	btemp^0,w,c
  8673  0141D2  B4D8               	btfsc	status,2,c
  8674  0141D4  D011               	goto	l10642
  8675                           
  8676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  8677                           ;stkvar	_c @ sp[(-20)+12]
  8678  0141D6  0EF8               	movlw	-8
  8679  0141D8  006F FF8F FFE6     	movff	plusw1,postinc1
  8680  0141DE  006F FF8F FFE6     	movff	plusw1,postinc1
  8681  0141E4  EC2B  F0B9         	call	_toupper	;wreg free
  8682                           
  8683                           ;stkvar	_c @ sp[(-20)+12]
  8684  0141E8  0EF8               	movlw	-8
  8685  0141EA  0060  F0CB  FFE3   	movff	btemp,plusw1
  8686  0141F0  0EF9               	movlw	-7
  8687  0141F2  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  8688  0141F8                     l10642:
  8689                           
  8690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  8691                           ;stkvar	_c @ sp[(-20)+12]
  8692                           ;stkvar	_i @ sp[(-20)+14]
  8693  0141F8  0EFA               	movlw	-6
  8694  0141FA  006F FF8C  F03C    	movff	plusw1,btemp+10
  8695  014200  0EFB               	movlw	-5
  8696  014202  006F FF8C  F03D    	movff	plusw1,btemp+11
  8697  014208  0E40               	movlw	low _dbuf
  8698  01420A  243C               	addwf	(btemp+10)^0,w,c
  8699  01420C  6ED9               	movwf	fsr2l,c
  8700  01420E  0E02               	movlw	high _dbuf
  8701  014210  203D               	addwfc	(btemp+11)^0,w,c
  8702  014212  6EDA               	movwf	fsr2h,c
  8703  014214  0EF8               	movlw	-8
  8704  014216  006F FF8F FFDF     	movff	plusw1,indf2
  8705                           
  8706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  8707                           ;stkvar	_p @ sp[(-20)+18]
  8708  01421C  50E1               	movf	fsr1l,w,c
  8709  01421E  0FFE               	addlw	-2
  8710  014220  6ED9               	movwf	fsr2l,c
  8711  014222  50E2               	movf	fsr1h,w,c
  8712  014224  6EDA               	movwf	fsr2h,c
  8713  014226  0EFF               	movlw	255
  8714  014228  22DA               	addwfc	fsr2h,f,c
  8715  01422A  06DE               	decf	postinc2,f,c
  8716  01422C  0E00               	movlw	0
  8717  01422E  5ADD               	subwfb	postdec2,f,c
  8718                           
  8719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  8720                           ;stkvar	_w @ sp[(-20)+16]
  8721  014230  50E1               	movf	fsr1l,w,c
  8722  014232  0FFC               	addlw	-4
  8723  014234  6ED9               	movwf	fsr2l,c
  8724  014236  50E2               	movf	fsr1h,w,c
  8725  014238  6EDA               	movwf	fsr2h,c
  8726  01423A  0EFF               	movlw	255
  8727  01423C  22DA               	addwfc	fsr2h,f,c
  8728  01423E  06DE               	decf	postinc2,f,c
  8729  014240  0E00               	movlw	0
  8730  014242  5ADD               	subwfb	postdec2,f,c
  8731                           
  8732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  8733  014244  0E04               	movlw	4
  8734  014246  6E3D               	movwf	(btemp+11)^0,c
  8735                           
  8736                           ;stkvar	_n @ sp[(-20)+4]
  8737  014248  50E1               	movf	fsr1l,w,c
  8738  01424A  0FF0               	addlw	-16
  8739  01424C  6ED9               	movwf	fsr2l,c
  8740  01424E  50E2               	movf	fsr1h,w,c
  8741  014250  6EDA               	movwf	fsr2h,c
  8742  014252  0EFF               	movlw	255
  8743  014254  22DA               	addwfc	fsr2h,f,c
  8744  014256  283D               	incf	(btemp+11)^0,w,c
  8745  014258  52DE               	movf	postinc2,f,c
  8746  01425A  D00F               	goto	u11560
  8747  01425C                     u11565:
  8748  01425C  52DE               	movf	postinc2,f,c
  8749  01425E  52DE               	movf	postinc2,f,c
  8750  014260  52DE               	movf	postinc2,f,c
  8751  014262  52DE               	movf	postinc2,f,c
  8752  014264  52DE               	movf	postinc2,f,c
  8753  014266  52DE               	movf	postinc2,f,c
  8754  014268  90D8               	bcf	status,0,c
  8755  01426A  32DD               	rrcf	postdec2,f,c
  8756  01426C  32DD               	rrcf	postdec2,f,c
  8757  01426E  32DD               	rrcf	postdec2,f,c
  8758  014270  32DD               	rrcf	postdec2,f,c
  8759  014272  32DD               	rrcf	postdec2,f,c
  8760  014274  32DD               	rrcf	postdec2,f,c
  8761  014276  32DD               	rrcf	postdec2,f,c
  8762  014278  32DE               	rrcf	postinc2,f,c
  8763  01427A                     u11560:
  8764  01427A  2EE8               	decfsz	wreg,f,c
  8765  01427C  D7EF               	goto	u11565
  8766  01427E                     l10650:
  8767                           
  8768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8769                           ;stkvar	_i @ sp[(-20)+14]
  8770  01427E  0EFB               	movlw	-5
  8771  014280  BEE3               	btfsc	plusw1,7,c
  8772  014282  D03A               	goto	u11610
  8773  014284  0EFB               	movlw	-5
  8774  014286  50E3               	movf	plusw1,w,c
  8775  014288  E108               	bnz	u11570
  8776  01428A  0EFA               	movlw	-6
  8777  01428C  006F FF8C  F032    	movff	plusw1,btemp
  8778  014292  0E02               	movlw	2
  8779  014294  5E32               	subwf	btemp^0,f,c
  8780  014296  A0D8               	btfss	status,0,c
  8781  014298  D02F               	goto	u11610
  8782  01429A                     u11570:
  8783                           
  8784                           ;stkvar	_n @ sp[(-20)+4]
  8785  01429A  0EF0               	movlw	-16
  8786  01429C  50E3               	movf	plusw1,w,c
  8787  01429E  E115               	bnz	u11581
  8788  0142A0  0EF1               	movlw	-15
  8789  0142A2  50E3               	movf	plusw1,w,c
  8790  0142A4  E112               	bnz	u11581
  8791  0142A6  0EF2               	movlw	-14
  8792  0142A8  50E3               	movf	plusw1,w,c
  8793  0142AA  E10F               	bnz	u11581
  8794  0142AC  0EF3               	movlw	-13
  8795  0142AE  50E3               	movf	plusw1,w,c
  8796  0142B0  E10C               	bnz	u11581
  8797  0142B2  0EF4               	movlw	-12
  8798  0142B4  50E3               	movf	plusw1,w,c
  8799  0142B6  E109               	bnz	u11581
  8800  0142B8  0EF5               	movlw	-11
  8801  0142BA  50E3               	movf	plusw1,w,c
  8802  0142BC  E106               	bnz	u11581
  8803  0142BE  0EF6               	movlw	-10
  8804  0142C0  50E3               	movf	plusw1,w,c
  8805  0142C2  E103               	bnz	u11581
  8806  0142C4  0EF7               	movlw	-9
  8807  0142C6  50E3               	movf	plusw1,w,c
  8808  0142C8  A4D8               	btfss	status,2,c
  8809  0142CA                     u11581:
  8810  0142CA  D6EB               	goto	l10618
  8811                           
  8812                           ;stkvar	_p @ sp[(-20)+18]
  8813  0142CC  0EFF               	movlw	-1
  8814  0142CE  BEE3               	btfsc	plusw1,7,c
  8815  0142D0  D007               	goto	u11590
  8816  0142D2  0EFF               	movlw	-1
  8817  0142D4  50E3               	movf	plusw1,w,c
  8818  0142D6  E103               	bnz	u11591
  8819  0142D8  0EFE               	movlw	-2
  8820  0142DA  04E3               	decf	plusw1,w,c
  8821  0142DC  B0D8               	btfsc	status,0,c
  8822  0142DE                     u11591:
  8823  0142DE  D6E1               	goto	l10618
  8824  0142E0                     u11590:
  8825                           
  8826                           ;stkvar	_w @ sp[(-20)+16]
  8827  0142E0  0EFD               	movlw	-3
  8828  0142E2  BEE3               	btfsc	plusw1,7,c
  8829  0142E4  D009               	goto	u11610
  8830  0142E6  0EFD               	movlw	-3
  8831  0142E8  50E3               	movf	plusw1,w,c
  8832  0142EA  E104               	bnz	u11600
  8833  0142EC  0EFC               	movlw	-4
  8834  0142EE  04E3               	decf	plusw1,w,c
  8835  0142F0  A0D8               	btfss	status,0,c
  8836  0142F2  D002               	goto	u11610
  8837  0142F4                     u11600:
  8838  0142F4  B21F               	btfsc	_flags^0,1,c
  8839  0142F6  D6D5               	goto	l10618
  8840  0142F8                     u11610:
  8841                           
  8842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  8843  0142F8  A81F               	btfss	_flags^0,4,c
  8844  0142FA  D036               	goto	l10666
  8845                           
  8846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  8847                           ;stkvar	_i @ sp[(-20)+14]
  8848  0142FC  50E1               	movf	fsr1l,w,c
  8849  0142FE  0FFA               	addlw	-6
  8850  014300  6ED9               	movwf	fsr2l,c
  8851  014302  50E2               	movf	fsr1h,w,c
  8852  014304  6EDA               	movwf	fsr2h,c
  8853  014306  0EFF               	movlw	255
  8854  014308  22DA               	addwfc	fsr2h,f,c
  8855  01430A  06DE               	decf	postinc2,f,c
  8856  01430C  0E00               	movlw	0
  8857  01430E  5ADD               	subwfb	postdec2,f,c
  8858                           
  8859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  8860                           ;stkvar	_x @ sp[(-20)+-11]
  8861                           ;stkvar	_i @ sp[(-20)+14]
  8862  014310  0EFA               	movlw	-6
  8863  014312  006F FF8C  F03C    	movff	plusw1,btemp+10
  8864  014318  0EFB               	movlw	-5
  8865  01431A  006F FF8C  F03D    	movff	plusw1,btemp+11
  8866  014320  0E40               	movlw	low _dbuf
  8867  014322  243C               	addwf	(btemp+10)^0,w,c
  8868  014324  6ED9               	movwf	fsr2l,c
  8869  014326  0E02               	movlw	high _dbuf
  8870  014328  203D               	addwfc	(btemp+11)^0,w,c
  8871  01432A  6EDA               	movwf	fsr2h,c
  8872  01432C  0EE1               	movlw	-31
  8873  01432E  006F FF8F FFDF     	movff	plusw1,indf2
  8874                           
  8875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  8876                           ;stkvar	_i @ sp[(-20)+14]
  8877  014334  50E1               	movf	fsr1l,w,c
  8878  014336  0FFA               	addlw	-6
  8879  014338  6ED9               	movwf	fsr2l,c
  8880  01433A  50E2               	movf	fsr1h,w,c
  8881  01433C  6EDA               	movwf	fsr2h,c
  8882  01433E  0EFF               	movlw	255
  8883  014340  22DA               	addwfc	fsr2h,f,c
  8884  014342  06DE               	decf	postinc2,f,c
  8885  014344  0E00               	movlw	0
  8886  014346  5ADD               	subwfb	postdec2,f,c
  8887                           
  8888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  8889                           ;stkvar	_i @ sp[(-20)+14]
  8890  014348  0EFA               	movlw	-6
  8891  01434A  006F FF8C  F03C    	movff	plusw1,btemp+10
  8892  014350  0EFB               	movlw	-5
  8893  014352  006F FF8C  F03D    	movff	plusw1,btemp+11
  8894  014358  0E40               	movlw	low _dbuf
  8895  01435A  243C               	addwf	(btemp+10)^0,w,c
  8896  01435C  6ED9               	movwf	fsr2l,c
  8897  01435E  0E02               	movlw	high _dbuf
  8898  014360  203D               	addwfc	(btemp+11)^0,w,c
  8899  014362  6EDA               	movwf	fsr2h,c
  8900  014364  0E30               	movlw	48
  8901  014366  6EDF               	movwf	indf2,c
  8902  014368                     l10666:
  8903                           
  8904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  8905                           ;stkvar	_w @ sp[(-20)+16]
  8906  014368  0EFC               	movlw	-4
  8907  01436A  006F FF8F FFE6     	movff	plusw1,postinc1
  8908  014370  006F FF8F FFE6     	movff	plusw1,postinc1
  8909                           
  8910                           ;stkvar	_i @ sp[(-22)+14]
  8911  014376  0E40               	movlw	low _dbuf
  8912  014378  6E3C               	movwf	(btemp+10)^0,c
  8913  01437A  0E02               	movlw	high _dbuf
  8914  01437C  6E3D               	movwf	(btemp+11)^0,c
  8915  01437E  0EF8               	movlw	-8
  8916  014380  50E3               	movf	plusw1,w,c
  8917  014382  263C               	addwf	(btemp+10)^0,f,c
  8918  014384  0EF9               	movlw	-7
  8919  014386  50E3               	movf	plusw1,w,c
  8920  014388  223D               	addwfc	(btemp+11)^0,f,c
  8921  01438A  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  8922  014390  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  8923                           
  8924                           ;stkvar	_fp @ sp[(-24)+-2]
  8925  014396  0EE6               	movlw	-26
  8926  014398  006F FF8F FFE6     	movff	plusw1,postinc1
  8927  01439E  006F FF8F FFE6     	movff	plusw1,postinc1
  8928  0143A4  EC0D  F0B3         	call	_pad	;wreg free
  8929                           
  8930                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  8931  0143A8  0EE1               	movlw	225
  8932  0143AA  26E1               	addwf	fsr1l,f,c
  8933  0143AC  0EFF               	movlw	255
  8934  0143AE  22E2               	addwfc	fsr1h,f,c
  8935  0143B0  0012               	return		;funcret
  8936  0143B2                     __end_of_xtoa:
  8937                           	opt callstack 0
  8938                           
  8939 ;; *************** function _toupper *****************
  8940 ;; Defined at:
  8941 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  8942 ;; Parameters:    Size  Location     Type
  8943 ;;  c               2  [STACK] int 
  8944 ;; Auto vars:     Size  Location     Type
  8945 ;;		None
  8946 ;; Return value:  Size  Location     Type
  8947 ;;                  2  [STACK] int 
  8948 ;; Registers used:
  8949 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  8950 ;; Tracked objects:
  8951 ;;		On entry : 0/2
  8952 ;;		On exit  : 0/0
  8953 ;;		Unchanged: 0/0
  8954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8959 ;;Total ram usage:        0 bytes
  8960 ;; Hardware stack levels used:    1
  8961 ;; Hardware stack levels required when called:    7
  8962 ;; This function calls:
  8963 ;;		_islower
  8964 ;; This function is called by:
  8965 ;;		_xtoa
  8966 ;; This function uses a reentrant model
  8967 ;;
  8968                           
  8969                           	psect	text38
  8970  017256                     __ptext38:
  8971                           	opt callstack 0
  8972  017256                     _toupper:
  8973                           	opt callstack 0
  8974                           
  8975                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8976  017256  52E6               	movf	postinc1,f,c
  8977  017258  52E6               	movf	postinc1,f,c
  8978                           
  8979                           ;stkvar	_c @ sp[(-2)+-2]
  8980                           
  8981                           ;incstack = 0
  8982  01725A  0EFC               	movlw	-4
  8983  01725C  50E3               	movf	plusw1,w,c
  8984  01725E  0F9F               	addlw	159
  8985  017260  6E3C               	movwf	(btemp+10)^0,c
  8986  017262  0EFD               	movlw	-3
  8987  017264  006F FF8C  F03D    	movff	plusw1,btemp+11
  8988  01726A  0EFF               	movlw	255
  8989  01726C  223D               	addwfc	(btemp+11)^0,f,c
  8990  01726E  503D               	movf	(btemp+11)^0,w,c
  8991  017270  E106               	bnz	u9560
  8992  017272  0E1A               	movlw	26
  8993  017274  5C3C               	subwf	(btemp+10)^0,w,c
  8994  017276  B0D8               	btfsc	status,0,c
  8995  017278  D002               	goto	u9560
  8996  01727A  0E01               	movlw	1
  8997  01727C  D001               	goto	u9570
  8998  01727E                     u9560:
  8999  01727E  0E00               	movlw	0
  9000  017280                     u9570:
  9001  017280  6E3C               	movwf	(btemp+10)^0,c
  9002  017282  6A3D               	clrf	(btemp+11)^0,c
  9003                           
  9004                           ;stkvar	_toupper$5049 @ sp[(-2)+0]
  9005  017284  0EFE               	movlw	-2
  9006  017286  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9007  01728C  0EFF               	movlw	-1
  9008  01728E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9009                           
  9010                           ;stkvar	_toupper$5049 @ sp[(-2)+0]
  9011  017294  0EFE               	movlw	-2
  9012  017296  006F FF8C  F032    	movff	plusw1,btemp
  9013  01729C  0EFF               	movlw	-1
  9014  01729E  50E3               	movf	plusw1,w,c
  9015  0172A0  1032               	iorwf	btemp^0,w,c
  9016  0172A2  B4D8               	btfsc	status,2,c
  9017  0172A4  D00D               	goto	l9568
  9018                           
  9019                           ;stkvar	_c @ sp[(-2)+-2]
  9020  0172A6  0EFC               	movlw	-4
  9021  0172A8  006F FF8C  F032    	movff	plusw1,btemp
  9022  0172AE  0EFD               	movlw	-3
  9023  0172B0  006F FF8C  F033    	movff	plusw1,btemp+1
  9024  0172B6  0E5F               	movlw	95
  9025  0172B8  1632               	andwf	btemp^0,f,c
  9026  0172BA  0E00               	movlw	0
  9027  0172BC  1633               	andwf	(btemp+1)^0,f,c
  9028  0172BE  D008               	goto	l2895
  9029  0172C0                     l9568:
  9030                           
  9031                           ;stkvar	_c @ sp[(-2)+-2]
  9032  0172C0  0EFC               	movlw	-4
  9033  0172C2  006F FF8C  F032    	movff	plusw1,btemp
  9034  0172C8  0EFD               	movlw	-3
  9035  0172CA  006F FF8C  F033    	movff	plusw1,btemp+1
  9036  0172D0                     l2895:
  9037                           
  9038                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9039  0172D0  52E5               	movf	postdec1,f,c
  9040  0172D2  52E5               	movf	postdec1,f,c
  9041  0172D4  52E5               	movf	postdec1,f,c
  9042  0172D6  52E5               	movf	postdec1,f,c
  9043  0172D8  0012               	return		;funcret
  9044  0172DA                     __end_of_toupper:
  9045                           	opt callstack 0
  9046                           
  9047 ;; *************** function _islower *****************
  9048 ;; Defined at:
  9049 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  9050 ;; Parameters:    Size  Location     Type
  9051 ;;  c               2  [STACK] int 
  9052 ;; Auto vars:     Size  Location     Type
  9053 ;;		None
  9054 ;; Return value:  Size  Location     Type
  9055 ;;                  2  [STACK] int 
  9056 ;; Registers used:
  9057 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  9058 ;; Tracked objects:
  9059 ;;		On entry : 0/0
  9060 ;;		On exit  : 0/0
  9061 ;;		Unchanged: 0/0
  9062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9067 ;;Total ram usage:        0 bytes
  9068 ;; Hardware stack levels used:    1
  9069 ;; Hardware stack levels required when called:    6
  9070 ;; This function calls:
  9071 ;;		Nothing
  9072 ;; This function is called by:
  9073 ;;		_toupper
  9074 ;; This function uses a reentrant model
  9075 ;;
  9076                           
  9077                           	psect	text39
  9078  017D8A                     __ptext39:
  9079                           	opt callstack 0
  9080  017D8A                     _islower:
  9081                           	opt callstack 16
  9082                           
  9083                           ;stkvar	_c @ sp[(0)+-2]
  9084                           
  9085                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9086                           ;incstack = 0
  9087  017D8A  0EFE               	movlw	-2
  9088  017D8C  50E3               	movf	plusw1,w,c
  9089  017D8E  0F9F               	addlw	159
  9090  017D90  6E3C               	movwf	(btemp+10)^0,c
  9091  017D92  0EFF               	movlw	-1
  9092  017D94  006F FF8C  F03D    	movff	plusw1,btemp+11
  9093  017D9A  0EFF               	movlw	255
  9094  017D9C  223D               	addwfc	(btemp+11)^0,f,c
  9095  017D9E  503D               	movf	(btemp+11)^0,w,c
  9096  017DA0  E106               	bnz	u9250
  9097  017DA2  0E1A               	movlw	26
  9098  017DA4  5C3C               	subwf	(btemp+10)^0,w,c
  9099  017DA6  B0D8               	btfsc	status,0,c
  9100  017DA8  D002               	goto	u9250
  9101  017DAA  0E01               	movlw	1
  9102  017DAC  D001               	goto	u9260
  9103  017DAE                     u9250:
  9104  017DAE  0E00               	movlw	0
  9105  017DB0                     u9260:
  9106  017DB0  6E32               	movwf	btemp^0,c
  9107  017DB2  6A33               	clrf	(btemp+1)^0,c
  9108                           
  9109                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9110  017DB4  52E5               	movf	postdec1,f,c
  9111  017DB6  52E5               	movf	postdec1,f,c
  9112  017DB8  0012               	return		;funcret
  9113  017DBA                     __end_of_islower:
  9114                           	opt callstack 0
  9115                           
  9116 ;; *************** function _isalpha *****************
  9117 ;; Defined at:
  9118 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  9119 ;; Parameters:    Size  Location     Type
  9120 ;;  c               2  [STACK] int 
  9121 ;; Auto vars:     Size  Location     Type
  9122 ;;		None
  9123 ;; Return value:  Size  Location     Type
  9124 ;;                  2  [STACK] int 
  9125 ;; Registers used:
  9126 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  9127 ;; Tracked objects:
  9128 ;;		On entry : 0/0
  9129 ;;		On exit  : 0/0
  9130 ;;		Unchanged: 0/0
  9131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9136 ;;Total ram usage:        0 bytes
  9137 ;; Hardware stack levels used:    1
  9138 ;; Hardware stack levels required when called:    6
  9139 ;; This function calls:
  9140 ;;		Nothing
  9141 ;; This function is called by:
  9142 ;;		_xtoa
  9143 ;; This function uses a reentrant model
  9144 ;;
  9145                           
  9146                           	psect	text40
  9147  017B3C                     __ptext40:
  9148                           	opt callstack 0
  9149  017B3C                     _isalpha:
  9150                           	opt callstack 17
  9151                           
  9152                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9153                           ;incstack = 0
  9154  017B3C  0E9F               	movlw	159
  9155  017B3E  6E3C               	movwf	(btemp+10)^0,c
  9156  017B40  0EFF               	movlw	255
  9157  017B42  6E3D               	movwf	(btemp+11)^0,c
  9158                           
  9159                           ;stkvar	_c @ sp[(0)+-2]
  9160  017B44  0EFE               	movlw	-2
  9161  017B46  006F FF8C  F03A    	movff	plusw1,btemp+8
  9162  017B4C  0EFF               	movlw	-1
  9163  017B4E  006F FF8C  F03B    	movff	plusw1,btemp+9
  9164  017B54  0E20               	movlw	32
  9165  017B56  123A               	iorwf	(btemp+8)^0,f,c
  9166  017B58  0E00               	movlw	0
  9167  017B5A  123B               	iorwf	(btemp+9)^0,f,c
  9168  017B5C  503C               	movf	(btemp+10)^0,w,c
  9169  017B5E  263A               	addwf	(btemp+8)^0,f,c
  9170  017B60  503D               	movf	(btemp+11)^0,w,c
  9171  017B62  223B               	addwfc	(btemp+9)^0,f,c
  9172  017B64  503B               	movf	(btemp+9)^0,w,c
  9173  017B66  E106               	bnz	u9540
  9174  017B68  0E1A               	movlw	26
  9175  017B6A  5C3A               	subwf	(btemp+8)^0,w,c
  9176  017B6C  B0D8               	btfsc	status,0,c
  9177  017B6E  D002               	goto	u9540
  9178  017B70  0E01               	movlw	1
  9179  017B72  D001               	goto	u9550
  9180  017B74                     u9540:
  9181  017B74  0E00               	movlw	0
  9182  017B76                     u9550:
  9183  017B76  6E32               	movwf	btemp^0,c
  9184  017B78  6A33               	clrf	(btemp+1)^0,c
  9185                           
  9186                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9187  017B7A  52E5               	movf	postdec1,f,c
  9188  017B7C  52E5               	movf	postdec1,f,c
  9189  017B7E  0012               	return		;funcret
  9190  017B80                     __end_of_isalpha:
  9191                           	opt callstack 0
  9192                           
  9193 ;; *************** function _strncmp *****************
  9194 ;; Defined at:
  9195 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  9196 ;; Parameters:    Size  Location     Type
  9197 ;;  _l              2  [STACK] PTR const unsigned char 
  9198 ;;		 -> ct(3), 
  9199 ;;  _r              2  [STACK] PTR const unsigned char 
  9200 ;;		 -> STR_44(3), 
  9201 ;;  n               2  [STACK] unsigned int 
  9202 ;; Auto vars:     Size  Location     Type
  9203 ;;  r               2  [STACK] PTR const unsigned char 
  9204 ;;		 -> STR_44(3), 
  9205 ;;  l               2  [STACK] PTR const unsigned char 
  9206 ;;		 -> ct(3), 
  9207 ;; Return value:  Size  Location     Type
  9208 ;;                  2  [STACK] int 
  9209 ;; Registers used:
  9210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
  9211 ;; Tracked objects:
  9212 ;;		On entry : 0/5
  9213 ;;		On exit  : 0/0
  9214 ;;		Unchanged: 0/0
  9215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9220 ;;Total ram usage:        0 bytes
  9221 ;; Hardware stack levels used:    1
  9222 ;; Hardware stack levels required when called:    6
  9223 ;; This function calls:
  9224 ;;		Nothing
  9225 ;; This function is called by:
  9226 ;;		_vfpfcnvrt
  9227 ;; This function uses a reentrant model
  9228 ;;
  9229                           
  9230                           	psect	text41
  9231  015828                     __ptext41:
  9232                           	opt callstack 0
  9233  015828                     _strncmp:
  9234                           	opt callstack 0
  9235                           
  9236                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9237  015828  52E6               	movf	postinc1,f,c
  9238  01582A  52E6               	movf	postinc1,f,c
  9239  01582C  52E6               	movf	postinc1,f,c
  9240  01582E  52E6               	movf	postinc1,f,c
  9241                           
  9242                           ;stkvar	__l @ sp[(-4)+-2]
  9243                           
  9244                           ;incstack = 0
  9245  015830  0EFA               	movlw	-6
  9246  015832  006F FF8C  F03C    	movff	plusw1,btemp+10
  9247  015838  0EFB               	movlw	-5
  9248  01583A  006F FF8C  F03D    	movff	plusw1,btemp+11
  9249                           
  9250                           ;stkvar	_l @ sp[(-4)+2]
  9251  015840  0EFF               	movlw	-1
  9252  015842  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9253  015848  0EFE               	movlw	-2
  9254  01584A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9255                           
  9256                           ;stkvar	__r @ sp[(-4)+-4]
  9257  015850  0EF8               	movlw	-8
  9258  015852  006F FF8C  F03C    	movff	plusw1,btemp+10
  9259  015858  0EF9               	movlw	-7
  9260  01585A  006F FF8C  F03D    	movff	plusw1,btemp+11
  9261                           
  9262                           ;stkvar	_r @ sp[(-4)+0]
  9263  015860  0EFD               	movlw	-3
  9264  015862  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9265  015868  0EFC               	movlw	-4
  9266  01586A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9267                           
  9268                           ;stkvar	_n @ sp[(-4)+-6]
  9269  015870  0EF6               	movlw	-10
  9270  015872  006F FF8C  F032    	movff	plusw1,btemp
  9271  015878  0E01               	movlw	1
  9272  01587A  5E32               	subwf	btemp^0,f,c
  9273  01587C  0EF6               	movlw	-10
  9274  01587E  0060  F0CB  FFE3   	movff	btemp,plusw1
  9275  015884  0EF7               	movlw	-9
  9276  015886  006F FF8C  F032    	movff	plusw1,btemp
  9277  01588C  0E00               	movlw	0
  9278  01588E  5A32               	subwfb	btemp^0,f,c
  9279  015890  0EF7               	movlw	-9
  9280  015892  0060  F0CB  FFE3   	movff	btemp,plusw1
  9281  015898  0EF6               	movlw	-10
  9282  01589A  28E3               	incf	plusw1,w,c
  9283  01589C  E13F               	bnz	l10726
  9284  01589E  0EF7               	movlw	-9
  9285  0158A0  28E3               	incf	plusw1,w,c
  9286  0158A2  A4D8               	btfss	status,2,c
  9287  0158A4  D03B               	goto	l10726
  9288  0158A6  0E00               	movlw	0
  9289  0158A8  6E32               	movwf	btemp^0,c
  9290  0158AA  0E00               	movlw	0
  9291  0158AC  6E33               	movwf	(btemp+1)^0,c
  9292  0158AE  D09B               	goto	l2867
  9293  0158B0                     l10724:
  9294                           
  9295                           ;stkvar	_l @ sp[(-4)+2]
  9296  0158B0  0EFE               	movlw	-2
  9297  0158B2  50E3               	movf	plusw1,w,c
  9298  0158B4  0F01               	addlw	1
  9299  0158B6  6E32               	movwf	btemp^0,c
  9300  0158B8  0EFE               	movlw	-2
  9301  0158BA  0060  F0CB  FFE3   	movff	btemp,plusw1
  9302  0158C0  6A32               	clrf	btemp^0,c
  9303  0158C2  0EFF               	movlw	-1
  9304  0158C4  50E3               	movf	plusw1,w,c
  9305  0158C6  2032               	addwfc	btemp^0,w,c
  9306  0158C8  6E32               	movwf	btemp^0,c
  9307  0158CA  0EFF               	movlw	-1
  9308  0158CC  0060  F0CB  FFE3   	movff	btemp,plusw1
  9309                           
  9310                           ;stkvar	_r @ sp[(-4)+0]
  9311  0158D2  0EFC               	movlw	-4
  9312  0158D4  50E3               	movf	plusw1,w,c
  9313  0158D6  0F01               	addlw	1
  9314  0158D8  6E32               	movwf	btemp^0,c
  9315  0158DA  0EFC               	movlw	-4
  9316  0158DC  0060  F0CB  FFE3   	movff	btemp,plusw1
  9317  0158E2  6A32               	clrf	btemp^0,c
  9318  0158E4  0EFD               	movlw	-3
  9319  0158E6  50E3               	movf	plusw1,w,c
  9320  0158E8  2032               	addwfc	btemp^0,w,c
  9321  0158EA  6E32               	movwf	btemp^0,c
  9322  0158EC  0EFD               	movlw	-3
  9323  0158EE  0060  F0CB  FFE3   	movff	btemp,plusw1
  9324                           
  9325                           ;stkvar	_n @ sp[(-4)+-6]
  9326  0158F4  0EF6               	movlw	-10
  9327  0158F6  006F FF8C  F032    	movff	plusw1,btemp
  9328  0158FC  0E01               	movlw	1
  9329  0158FE  5E32               	subwf	btemp^0,f,c
  9330  015900  0EF6               	movlw	-10
  9331  015902  0060  F0CB  FFE3   	movff	btemp,plusw1
  9332  015908  0EF7               	movlw	-9
  9333  01590A  006F FF8C  F032    	movff	plusw1,btemp
  9334  015910  0E00               	movlw	0
  9335  015912  5A32               	subwfb	btemp^0,f,c
  9336  015914  0EF7               	movlw	-9
  9337  015916  0060  F0CB  FFE3   	movff	btemp,plusw1
  9338  01591C                     l10726:
  9339                           
  9340                           ;stkvar	_l @ sp[(-4)+2]
  9341  01591C  0EFE               	movlw	-2
  9342  01591E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9343  015924  0EFF               	movlw	-1
  9344  015926  006F FF8F FFDA     	movff	plusw1,fsr2h
  9345  01592C  50DF               	movf	indf2,w,c
  9346  01592E  B4D8               	btfsc	status,2,c
  9347  015930  D03B               	goto	u11740
  9348                           
  9349                           ;stkvar	_r @ sp[(-4)+0]
  9350  015932  50E1               	movf	fsr1l,w,c
  9351  015934  0FFC               	addlw	-4
  9352  015936  6ED9               	movwf	fsr2l,c
  9353  015938  50E2               	movf	fsr1h,w,c
  9354  01593A  6EDA               	movwf	fsr2h,c
  9355  01593C  0EFF               	movlw	255
  9356  01593E  22DA               	addwfc	fsr2h,f,c
  9357  015940  006F FF7B FFF6     	movff	postinc2,tblptrl
  9358  015946  006F FF77 FFF7     	movff	postdec2,tblptrh
  9359  01594C                     	if	0	;tblptru may be non-zero
  9360  01594C                     	endif
  9361  01594C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9362  01594C  0E00               	movlw	low (__mediumconst shr (0+16))
  9363  01594E  6EF8               	movwf	tblptru,c
  9364  015950                     	endif
  9365  015950  0008               	tblrd		*
  9366  015952  50F5               	movf	tablat,w,c
  9367  015954  0900               	iorlw	0
  9368  015956  B4D8               	btfsc	status,2,c
  9369  015958  D027               	goto	u11740
  9370                           
  9371                           ;stkvar	_n @ sp[(-4)+-6]
  9372  01595A  0EF6               	movlw	-10
  9373  01595C  006F FF8C  F032    	movff	plusw1,btemp
  9374  015962  0EF7               	movlw	-9
  9375  015964  50E3               	movf	plusw1,w,c
  9376  015966  1032               	iorwf	btemp^0,w,c
  9377  015968  B4D8               	btfsc	status,2,c
  9378  01596A  D01E               	goto	u11740
  9379                           
  9380                           ;stkvar	_l @ sp[(-4)+2]
  9381  01596C  0EFE               	movlw	-2
  9382  01596E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9383  015974  0EFF               	movlw	-1
  9384  015976  006F FF8F FFDA     	movff	plusw1,fsr2h
  9385  01597C  50DF               	movf	indf2,w,c
  9386  01597E  6E3D               	movwf	(btemp+11)^0,c
  9387                           
  9388                           ;stkvar	_r @ sp[(-4)+0]
  9389  015980  50E1               	movf	fsr1l,w,c
  9390  015982  0FFC               	addlw	-4
  9391  015984  6ED9               	movwf	fsr2l,c
  9392  015986  50E2               	movf	fsr1h,w,c
  9393  015988  6EDA               	movwf	fsr2h,c
  9394  01598A  0EFF               	movlw	255
  9395  01598C  22DA               	addwfc	fsr2h,f,c
  9396  01598E  006F FF7B FFF6     	movff	postinc2,tblptrl
  9397  015994  006F FF77 FFF7     	movff	postdec2,tblptrh
  9398  01599A                     	if	0	;tblptru may be non-zero
  9399  01599A                     	endif
  9400  01599A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9401  01599A  0E00               	movlw	low (__mediumconst shr (0+16))
  9402  01599C  6EF8               	movwf	tblptru,c
  9403  01599E                     	endif
  9404  01599E  0008               	tblrd		*
  9405  0159A0  50F5               	movf	tablat,w,c
  9406  0159A2  183D               	xorwf	(btemp+11)^0,w,c
  9407  0159A4  B4D8               	btfsc	status,2,c
  9408  0159A6  D784               	goto	l10724
  9409  0159A8                     u11740:
  9410                           
  9411                           ;stkvar	_l @ sp[(-4)+2]
  9412  0159A8  0EFE               	movlw	-2
  9413  0159AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9414  0159B0  0EFF               	movlw	-1
  9415  0159B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9416  0159B8  50DF               	movf	indf2,w,c
  9417  0159BA  6E32               	movwf	btemp^0,c
  9418  0159BC  6A33               	clrf	(btemp+1)^0,c
  9419                           
  9420                           ;stkvar	_r @ sp[(-4)+0]
  9421  0159BE  50E1               	movf	fsr1l,w,c
  9422  0159C0  0FFC               	addlw	-4
  9423  0159C2  6ED9               	movwf	fsr2l,c
  9424  0159C4  50E2               	movf	fsr1h,w,c
  9425  0159C6  6EDA               	movwf	fsr2h,c
  9426  0159C8  0EFF               	movlw	255
  9427  0159CA  22DA               	addwfc	fsr2h,f,c
  9428  0159CC  006F FF7B FFF6     	movff	postinc2,tblptrl
  9429  0159D2  006F FF77 FFF7     	movff	postdec2,tblptrh
  9430  0159D8                     	if	0	;tblptru may be non-zero
  9431  0159D8                     	endif
  9432  0159D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9433  0159D8  0E00               	movlw	low (__mediumconst shr (0+16))
  9434  0159DA  6EF8               	movwf	tblptru,c
  9435  0159DC                     	endif
  9436  0159DC  0008               	tblrd		*
  9437  0159DE  50F5               	movf	tablat,w,c
  9438  0159E0  5E32               	subwf	btemp^0,f,c
  9439  0159E2  0E00               	movlw	0
  9440  0159E4  5A33               	subwfb	(btemp+1)^0,f,c
  9441  0159E6                     l2867:
  9442                           
  9443                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  9444  0159E6  0EF6               	movlw	246
  9445  0159E8  26E1               	addwf	fsr1l,f,c
  9446  0159EA  0EFF               	movlw	255
  9447  0159EC  22E2               	addwfc	fsr1h,f,c
  9448  0159EE  0012               	return		;funcret
  9449  0159F0                     __end_of_strncmp:
  9450                           	opt callstack 0
  9451                           
  9452 ;; *************** function _stoa *****************
  9453 ;; Defined at:
  9454 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9455 ;; Parameters:    Size  Location     Type
  9456 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9457 ;;		 -> f(6), NULL(0), 
  9458 ;;  s               2  [STACK] PTR unsigned char 
  9459 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
  9460 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  9461 ;;		 -> STR_3(5), V(187), 
  9462 ;; Auto vars:     Size  Location     Type
  9463 ;;  nuls            7  [STACK] unsigned char [7]
  9464 ;;  l               2  [STACK] int 
  9465 ;;  p               2  [STACK] int 
  9466 ;;  cp              2  [STACK] PTR unsigned char 
  9467 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_16(9), 
  9468 ;;		 -> STR_15(12), D.lcd(216), D(218), T(144), 
  9469 ;;		 -> STR_7(5), STR_3(5), V(187), 
  9470 ;;  w               2  [STACK] int 
  9471 ;;  i               2  [STACK] int 
  9472 ;; Return value:  Size  Location     Type
  9473 ;;                  2  [STACK] int 
  9474 ;; Registers used:
  9475 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9476 ;; Tracked objects:
  9477 ;;		On entry : 0/5
  9478 ;;		On exit  : 0/0
  9479 ;;		Unchanged: 0/0
  9480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9485 ;;Total ram usage:        0 bytes
  9486 ;; Hardware stack levels used:    1
  9487 ;; Hardware stack levels required when called:    9
  9488 ;; This function calls:
  9489 ;;		_fputc
  9490 ;;		_strlen
  9491 ;; This function is called by:
  9492 ;;		_vfpfcnvrt
  9493 ;; This function uses a reentrant model
  9494 ;;
  9495                           
  9496                           	psect	text42
  9497  014A0A                     __ptext42:
  9498                           	opt callstack 0
  9499  014A0A                     _stoa:
  9500                           	opt callstack 0
  9501                           
  9502                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9503  014A0A  0E11               	movlw	17
  9504  014A0C  26E1               	addwf	fsr1l,f,c
  9505  014A0E  0E00               	movlw	0
  9506  014A10  22E2               	addwfc	fsr1h,f,c
  9507                           
  9508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9509                           
  9510                           ;incstack = 0
  9511  014A12  EE20  F0EF         	lfsr	2,stoa@F1166
  9512                           
  9513                           ;stkvar	_nuls @ sp[(-17)+0]
  9514  014A16  0E07               	movlw	7
  9515  014A18  6E32               	movwf	btemp^0,c
  9516  014A1A  0EEF               	movlw	-17
  9517  014A1C                     us1135999:
  9518  014A1C  006F FF7B FFE3     	movff	postinc2,plusw1
  9519  014A22  28E8               	incf	wreg,w,c
  9520  014A24  2E32               	decfsz	btemp^0,f,c
  9521  014A26  D7FA               	bra	us1135999
  9522                           
  9523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  9524                           ;stkvar	_s @ sp[(-17)+-4]
  9525  014A28  0EEB               	movlw	-21
  9526  014A2A  006F FF8C  F03C    	movff	plusw1,btemp+10
  9527  014A30  0EEC               	movlw	-20
  9528  014A32  006F FF8C  F03D    	movff	plusw1,btemp+11
  9529                           
  9530                           ;stkvar	_cp @ sp[(-17)+11]
  9531  014A38  0EFB               	movlw	-5
  9532  014A3A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9533  014A40  0EFA               	movlw	-6
  9534  014A42  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9535                           
  9536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  9537                           ;stkvar	_cp @ sp[(-17)+11]
  9538  014A48  0EFA               	movlw	-6
  9539  014A4A  006F FF8C  F032    	movff	plusw1,btemp
  9540  014A50  0EFB               	movlw	-5
  9541  014A52  50E3               	movf	plusw1,w,c
  9542  014A54  1032               	iorwf	btemp^0,w,c
  9543  014A56  A4D8               	btfss	status,2,c
  9544  014A58  D00E               	goto	l10554
  9545                           
  9546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  9547                           ;stkvar	_nuls @ sp[(-17)+0]
  9548  014A5A  0EEF               	movlw	239
  9549  014A5C  24E1               	addwf	fsr1l,w,c
  9550  014A5E  6E3C               	movwf	(btemp+10)^0,c
  9551  014A60  0EFF               	movlw	255
  9552  014A62  20E2               	addwfc	fsr1h,w,c
  9553  014A64  6E3D               	movwf	(btemp+11)^0,c
  9554                           
  9555                           ;stkvar	_cp @ sp[(-17)+11]
  9556  014A66  0EFB               	movlw	-5
  9557  014A68  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9558  014A6E  0EFA               	movlw	-6
  9559  014A70  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9560  014A76                     l10554:
  9561                           
  9562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  9563                           ;stkvar	_cp @ sp[(-17)+11]
  9564  014A76  0EFA               	movlw	-6
  9565  014A78  006F FF8F FFE6     	movff	plusw1,postinc1
  9566  014A7E  006F FF8F FFE6     	movff	plusw1,postinc1
  9567  014A84  ECB8  F0B7         	call	_strlen	;wreg free
  9568                           
  9569                           ;stkvar	_l @ sp[(-17)+7]
  9570  014A88  0EF6               	movlw	-10
  9571  014A8A  0060  F0CB  FFE3   	movff	btemp,plusw1
  9572  014A90  0EF7               	movlw	-9
  9573  014A92  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  9574                           
  9575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  9576                           ;stkvar	_p @ sp[(-17)+9]
  9577  014A98  0EF8               	movlw	-8
  9578  014A9A  0060  F077  FFE3   	movff	_prec,plusw1
  9579  014AA0  0EF9               	movlw	-7
  9580  014AA2  0060  F07B  FFE3   	movff	_prec+1,plusw1
  9581                           
  9582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  9583                           ;stkvar	_p @ sp[(-17)+9]
  9584  014AA8  0EF9               	movlw	-7
  9585  014AAA  BEE3               	btfsc	plusw1,7,c
  9586  014AAC  D023               	goto	l1941
  9587                           
  9588                           ;stkvar	_l @ sp[(-17)+7]
  9589                           ;stkvar	_p @ sp[(-17)+9]
  9590  014AAE  50E1               	movf	fsr1l,w,c
  9591  014AB0  0FF8               	addlw	-8
  9592  014AB2  6ED9               	movwf	fsr2l,c
  9593  014AB4  50E2               	movf	fsr1h,w,c
  9594  014AB6  6EDA               	movwf	fsr2h,c
  9595  014AB8  0EFF               	movlw	255
  9596  014ABA  22DA               	addwfc	fsr2h,f,c
  9597  014ABC  0EF6               	movlw	-10
  9598  014ABE  50E3               	movf	plusw1,w,c
  9599  014AC0  5CDE               	subwf	postinc2,w,c
  9600  014AC2  50DE               	movf	postinc2,w,c
  9601  014AC4  0A80               	xorlw	128
  9602  014AC6  6E32               	movwf	btemp^0,c
  9603  014AC8  0EF7               	movlw	-9
  9604  014ACA  50E3               	movf	plusw1,w,c
  9605  014ACC  0A80               	xorlw	128
  9606  014ACE  5832               	subwfb	btemp^0,w,c
  9607  014AD0  B0D8               	btfsc	status,0,c
  9608  014AD2  D010               	goto	l1941
  9609                           
  9610                           ;stkvar	_p @ sp[(-17)+9]
  9611                           ;stkvar	_l @ sp[(-17)+7]
  9612  014AD4  0EF8               	movlw	-8
  9613  014AD6  006F FF8C  F032    	movff	plusw1,btemp
  9614  014ADC  0EF6               	movlw	-10
  9615  014ADE  0060  F0CB  FFE3   	movff	btemp,plusw1
  9616  014AE4  0EF9               	movlw	-7
  9617  014AE6  006F FF8C  F032    	movff	plusw1,btemp
  9618  014AEC  0EF7               	movlw	-9
  9619  014AEE  0060  F0CB  FFE3   	movff	btemp,plusw1
  9620  014AF4                     l1941:
  9621                           
  9622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  9623                           ;stkvar	_l @ sp[(-17)+7]
  9624                           ;stkvar	_p @ sp[(-17)+9]
  9625  014AF4  0EF6               	movlw	-10
  9626  014AF6  006F FF8C  F032    	movff	plusw1,btemp
  9627  014AFC  0EF8               	movlw	-8
  9628  014AFE  0060  F0CB  FFE3   	movff	btemp,plusw1
  9629  014B04  0EF7               	movlw	-9
  9630  014B06  006F FF8C  F032    	movff	plusw1,btemp
  9631  014B0C  0EF9               	movlw	-7
  9632  014B0E  0060  F0CB  FFE3   	movff	btemp,plusw1
  9633                           
  9634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  9635                           ;stkvar	_w @ sp[(-17)+13]
  9636  014B14  0EFC               	movlw	-4
  9637  014B16  0060  F06F  FFE3   	movff	_width,plusw1
  9638  014B1C  0EFD               	movlw	-3
  9639  014B1E  0060  F073  FFE3   	movff	_width+1,plusw1
  9640                           
  9641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  9642  014B24  A01F               	btfss	_flags^0,0,c
  9643  014B26  D01F               	goto	l10574
  9644  014B28  D031               	goto	u11400
  9645  014B2A                     l10570:
  9646                           
  9647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  9648                           ;stkvar	_fp @ sp[(-17)+-2]
  9649  014B2A  0EED               	movlw	-19
  9650  014B2C  006F FF8F FFE6     	movff	plusw1,postinc1
  9651  014B32  006F FF8F FFE6     	movff	plusw1,postinc1
  9652  014B38  0E20               	movlw	32
  9653  014B3A  6EE6               	movwf	postinc1,c
  9654  014B3C  0E00               	movlw	0
  9655  014B3E  6EE6               	movwf	postinc1,c
  9656  014B40  ECEF  F0B1         	call	_fputc	;wreg free
  9657                           
  9658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  9659                           ;stkvar	_l @ sp[(-17)+7]
  9660  014B44  0EF6               	movlw	-10
  9661  014B46  50E3               	movf	plusw1,w,c
  9662  014B48  0F01               	addlw	1
  9663  014B4A  6E32               	movwf	btemp^0,c
  9664  014B4C  0EF6               	movlw	-10
  9665  014B4E  0060  F0CB  FFE3   	movff	btemp,plusw1
  9666  014B54  6A32               	clrf	btemp^0,c
  9667  014B56  0EF7               	movlw	-9
  9668  014B58  50E3               	movf	plusw1,w,c
  9669  014B5A  2032               	addwfc	btemp^0,w,c
  9670  014B5C  6E32               	movwf	btemp^0,c
  9671  014B5E  0EF7               	movlw	-9
  9672  014B60  0060  F0CB  FFE3   	movff	btemp,plusw1
  9673  014B66                     l10574:
  9674                           
  9675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  9676                           ;stkvar	_w @ sp[(-17)+13]
  9677                           ;stkvar	_l @ sp[(-17)+7]
  9678  014B66  50E1               	movf	fsr1l,w,c
  9679  014B68  0FF6               	addlw	-10
  9680  014B6A  6ED9               	movwf	fsr2l,c
  9681  014B6C  50E2               	movf	fsr1h,w,c
  9682  014B6E  6EDA               	movwf	fsr2h,c
  9683  014B70  0EFF               	movlw	255
  9684  014B72  22DA               	addwfc	fsr2h,f,c
  9685  014B74  0EFC               	movlw	-4
  9686  014B76  50E3               	movf	plusw1,w,c
  9687  014B78  5CDE               	subwf	postinc2,w,c
  9688  014B7A  50DE               	movf	postinc2,w,c
  9689  014B7C  0A80               	xorlw	128
  9690  014B7E  6E32               	movwf	btemp^0,c
  9691  014B80  0EFD               	movlw	-3
  9692  014B82  50E3               	movf	plusw1,w,c
  9693  014B84  0A80               	xorlw	128
  9694  014B86  5832               	subwfb	btemp^0,w,c
  9695  014B88  A0D8               	btfss	status,0,c
  9696  014B8A  D7CF               	goto	l10570
  9697  014B8C                     u11400:
  9698                           
  9699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  9700                           ;stkvar	_i @ sp[(-17)+15]
  9701  014B8C  0EFE               	movlw	-2
  9702  014B8E  6AE3               	clrf	plusw1,c
  9703  014B90  0EFF               	movlw	-1
  9704  014B92  6AE3               	clrf	plusw1,c
  9705                           
  9706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9707  014B94  D045               	goto	l10584
  9708  014B96                     l10578:
  9709                           
  9710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  9711                           ;stkvar	_fp @ sp[(-17)+-2]
  9712  014B96  0EED               	movlw	-19
  9713  014B98  006F FF8F FFE6     	movff	plusw1,postinc1
  9714  014B9E  006F FF8F FFE6     	movff	plusw1,postinc1
  9715                           
  9716                           ;stkvar	_cp @ sp[(-19)+11]
  9717  014BA4  0EF8               	movlw	-8
  9718  014BA6  006F FF8F FFF6     	movff	plusw1,tblptrl
  9719  014BAC  0EF9               	movlw	-7
  9720  014BAE  006F FF8F FFF7     	movff	plusw1,tblptrh
  9721  014BB4  0E00               	movlw	low (__mediumconst shr (0+16))
  9722  014BB6  6EF8               	movwf	tblptru,c
  9723  014BB8  0E1F               	movlw	(high __ramtop+-1)
  9724  014BBA  64F7               	cpfsgt	tblptrh,c
  9725  014BBC  D003               	bra	u11417
  9726  014BBE  0008               	tblrd		*
  9727  014BC0  50F5               	movf	tablat,w,c
  9728  014BC2  D007               	bra	u11410
  9729  014BC4                     u11417:
  9730  014BC4  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9731  014BCA  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9732  014BD0  50EF               	movf	indf0,w,c
  9733  014BD2                     u11410:
  9734  014BD2  6EE6               	movwf	postinc1,c
  9735  014BD4  0E00               	movlw	0
  9736  014BD6  6EE6               	movwf	postinc1,c
  9737  014BD8  ECEF  F0B1         	call	_fputc	;wreg free
  9738                           
  9739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  9740                           ;stkvar	_cp @ sp[(-17)+11]
  9741  014BDC  0EFA               	movlw	-6
  9742  014BDE  50E3               	movf	plusw1,w,c
  9743  014BE0  0F01               	addlw	1
  9744  014BE2  6E32               	movwf	btemp^0,c
  9745  014BE4  0EFA               	movlw	-6
  9746  014BE6  0060  F0CB  FFE3   	movff	btemp,plusw1
  9747  014BEC  6A32               	clrf	btemp^0,c
  9748  014BEE  0EFB               	movlw	-5
  9749  014BF0  50E3               	movf	plusw1,w,c
  9750  014BF2  2032               	addwfc	btemp^0,w,c
  9751  014BF4  6E32               	movwf	btemp^0,c
  9752  014BF6  0EFB               	movlw	-5
  9753  014BF8  0060  F0CB  FFE3   	movff	btemp,plusw1
  9754                           
  9755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  9756                           ;stkvar	_i @ sp[(-17)+15]
  9757  014BFE  0EFE               	movlw	-2
  9758  014C00  50E3               	movf	plusw1,w,c
  9759  014C02  0F01               	addlw	1
  9760  014C04  6E32               	movwf	btemp^0,c
  9761  014C06  0EFE               	movlw	-2
  9762  014C08  0060  F0CB  FFE3   	movff	btemp,plusw1
  9763  014C0E  6A32               	clrf	btemp^0,c
  9764  014C10  0EFF               	movlw	-1
  9765  014C12  50E3               	movf	plusw1,w,c
  9766  014C14  2032               	addwfc	btemp^0,w,c
  9767  014C16  6E32               	movwf	btemp^0,c
  9768  014C18  0EFF               	movlw	-1
  9769  014C1A  0060  F0CB  FFE3   	movff	btemp,plusw1
  9770  014C20                     l10584:
  9771                           
  9772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9773                           ;stkvar	_p @ sp[(-17)+9]
  9774                           ;stkvar	_i @ sp[(-17)+15]
  9775  014C20  50E1               	movf	fsr1l,w,c
  9776  014C22  0FFE               	addlw	-2
  9777  014C24  6ED9               	movwf	fsr2l,c
  9778  014C26  50E2               	movf	fsr1h,w,c
  9779  014C28  6EDA               	movwf	fsr2h,c
  9780  014C2A  0EFF               	movlw	255
  9781  014C2C  22DA               	addwfc	fsr2h,f,c
  9782  014C2E  0EF8               	movlw	-8
  9783  014C30  50E3               	movf	plusw1,w,c
  9784  014C32  5CDE               	subwf	postinc2,w,c
  9785  014C34  50DE               	movf	postinc2,w,c
  9786  014C36  0A80               	xorlw	128
  9787  014C38  6E32               	movwf	btemp^0,c
  9788  014C3A  0EF9               	movlw	-7
  9789  014C3C  50E3               	movf	plusw1,w,c
  9790  014C3E  0A80               	xorlw	128
  9791  014C40  5832               	subwfb	btemp^0,w,c
  9792  014C42  A0D8               	btfss	status,0,c
  9793  014C44  D7A8               	goto	l10578
  9794                           
  9795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  9796  014C46  B01F               	btfsc	_flags^0,0,c
  9797  014C48  D01F               	goto	l10592
  9798  014C4A  D031               	goto	u11440
  9799  014C4C                     l10588:
  9800                           
  9801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  9802                           ;stkvar	_fp @ sp[(-17)+-2]
  9803  014C4C  0EED               	movlw	-19
  9804  014C4E  006F FF8F FFE6     	movff	plusw1,postinc1
  9805  014C54  006F FF8F FFE6     	movff	plusw1,postinc1
  9806  014C5A  0E20               	movlw	32
  9807  014C5C  6EE6               	movwf	postinc1,c
  9808  014C5E  0E00               	movlw	0
  9809  014C60  6EE6               	movwf	postinc1,c
  9810  014C62  ECEF  F0B1         	call	_fputc	;wreg free
  9811                           
  9812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  9813                           ;stkvar	_l @ sp[(-17)+7]
  9814  014C66  0EF6               	movlw	-10
  9815  014C68  50E3               	movf	plusw1,w,c
  9816  014C6A  0F01               	addlw	1
  9817  014C6C  6E32               	movwf	btemp^0,c
  9818  014C6E  0EF6               	movlw	-10
  9819  014C70  0060  F0CB  FFE3   	movff	btemp,plusw1
  9820  014C76  6A32               	clrf	btemp^0,c
  9821  014C78  0EF7               	movlw	-9
  9822  014C7A  50E3               	movf	plusw1,w,c
  9823  014C7C  2032               	addwfc	btemp^0,w,c
  9824  014C7E  6E32               	movwf	btemp^0,c
  9825  014C80  0EF7               	movlw	-9
  9826  014C82  0060  F0CB  FFE3   	movff	btemp,plusw1
  9827  014C88                     l10592:
  9828                           
  9829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  9830                           ;stkvar	_w @ sp[(-17)+13]
  9831                           ;stkvar	_l @ sp[(-17)+7]
  9832  014C88  50E1               	movf	fsr1l,w,c
  9833  014C8A  0FF6               	addlw	-10
  9834  014C8C  6ED9               	movwf	fsr2l,c
  9835  014C8E  50E2               	movf	fsr1h,w,c
  9836  014C90  6EDA               	movwf	fsr2h,c
  9837  014C92  0EFF               	movlw	255
  9838  014C94  22DA               	addwfc	fsr2h,f,c
  9839  014C96  0EFC               	movlw	-4
  9840  014C98  50E3               	movf	plusw1,w,c
  9841  014C9A  5CDE               	subwf	postinc2,w,c
  9842  014C9C  50DE               	movf	postinc2,w,c
  9843  014C9E  0A80               	xorlw	128
  9844  014CA0  6E32               	movwf	btemp^0,c
  9845  014CA2  0EFD               	movlw	-3
  9846  014CA4  50E3               	movf	plusw1,w,c
  9847  014CA6  0A80               	xorlw	128
  9848  014CA8  5832               	subwfb	btemp^0,w,c
  9849  014CAA  A0D8               	btfss	status,0,c
  9850  014CAC  D7CF               	goto	l10588
  9851  014CAE                     u11440:
  9852                           
  9853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
  9854                           ;stkvar	_l @ sp[(-17)+7]
  9855  014CAE  0EF6               	movlw	-10
  9856  014CB0  006F FF8C  F032    	movff	plusw1,btemp
  9857  014CB6  0EF7               	movlw	-9
  9858  014CB8  006F FF8C  F033    	movff	plusw1,btemp+1
  9859                           
  9860                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  9861  014CBE  0EEB               	movlw	235
  9862  014CC0  26E1               	addwf	fsr1l,f,c
  9863  014CC2  0EFF               	movlw	255
  9864  014CC4  22E2               	addwfc	fsr1h,f,c
  9865  014CC6  0012               	return		;funcret
  9866  014CC8                     __end_of_stoa:
  9867                           	opt callstack 0
  9868                           
  9869 ;; *************** function _efgtoa *****************
  9870 ;; Defined at:
  9871 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9872 ;; Parameters:    Size  Location     Type
  9873 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9874 ;;		 -> f(6), NULL(0), 
  9875 ;;  f               4  [STACK] PTR struct _IO_FILE
  9876 ;;  c               1  [STACK] unsigned char 
  9877 ;; Auto vars:     Size  Location     Type
  9878 ;;  u               4  [STACK] unsigned char 
  9879 ;;  g               4  [STACK] unsigned char 
  9880 ;;  l               4  [STACK] unsigned char 
  9881 ;;  h               4  [STACK] unsigned char 
  9882 ;;  ou              4  [STACK] unsigned char 
  9883 ;;  n               2  [STACK] int 
  9884 ;;  e               2  [STACK] int 
  9885 ;;  i               2  [STACK] int 
  9886 ;;  w               2  [STACK] int 
  9887 ;;  p               2  [STACK] int 
  9888 ;;  sign            2  [STACK] int 
  9889 ;;  d               2  [STACK] int 
  9890 ;;  ne              2  [STACK] int 
  9891 ;;  m               2  [STACK] int 
  9892 ;;  pp              2  [STACK] int 
  9893 ;;  t               2  [STACK] int 
  9894 ;;  mode            1  [STACK] unsigned char 
  9895 ;;  nmode           1  [STACK] unsigned char 
  9896 ;; Return value:  Size  Location     Type
  9897 ;;                  2  [STACK] int 
  9898 ;; Registers used:
  9899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9900 ;; Tracked objects:
  9901 ;;		On entry : 0/5
  9902 ;;		On exit  : 0/0
  9903 ;;		Unchanged: 0/0
  9904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9909 ;;Total ram usage:        0 bytes
  9910 ;; Hardware stack levels used:    1
  9911 ;; Hardware stack levels required when called:   11
  9912 ;; This function calls:
  9913 ;;		___awdiv
  9914 ;;		___awmod
  9915 ;;		___fladd
  9916 ;;		___fldiv
  9917 ;;		___fleq
  9918 ;;		___flge
  9919 ;;		___flmul
  9920 ;;		___flneg
  9921 ;;		___flsub
  9922 ;;		___fltol
  9923 ;;		___fpclassifyf
  9924 ;;		_floorf
  9925 ;;		_isupper
  9926 ;;		_pad
  9927 ;;		_strcpy
  9928 ;;		_tolower
  9929 ;; This function is called by:
  9930 ;;		_vfpfcnvrt
  9931 ;; This function uses a reentrant model
  9932 ;;
  9933                           
  9934                           	psect	text43
  9935  010000                     __ptext43:
  9936                           	opt callstack 0
  9937  010000                     _efgtoa:
  9938                           	opt callstack 0
  9939                           
  9940                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9941  010000  0E38               	movlw	56
  9942  010002  26E1               	addwf	fsr1l,f,c
  9943  010004  0E00               	movlw	0
  9944  010006  22E2               	addwfc	fsr1h,f,c
  9945                           
  9946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  9947                           ;stkvar	_sign @ sp[(-56)+42]
  9948                           
  9949                           ;incstack = 0
  9950  010008  0EF2               	movlw	-14
  9951  01000A  6AE3               	clrf	plusw1,c
  9952  01000C  0EF3               	movlw	-13
  9953  01000E  6AE3               	clrf	plusw1,c
  9954                           
  9955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
  9956                           ;stkvar	_f @ sp[(-56)+-6]
  9957  010010  0EC2               	movlw	-62
  9958  010012  006F FF8C  F03A    	movff	plusw1,btemp+8
  9959  010018  0EC3               	movlw	-61
  9960  01001A  006F FF8C  F03B    	movff	plusw1,btemp+9
  9961  010020  0EC4               	movlw	-60
  9962  010022  006F FF8C  F03C    	movff	plusw1,btemp+10
  9963  010028  0EC5               	movlw	-59
  9964  01002A  006F FF8C  F03D    	movff	plusw1,btemp+11
  9965                           
  9966                           ;stkvar	_g @ sp[(-56)+16]
  9967  010030  0ED8               	movlw	-40
  9968  010032  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  9969  010038  0ED9               	movlw	-39
  9970  01003A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  9971  010040  0EDA               	movlw	-38
  9972  010042  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9973  010048  0EDB               	movlw	-37
  9974  01004A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9975                           
  9976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  9977                           ;stkvar	_g @ sp[(-56)+16]
  9978  010050  0EDB               	movlw	-37
  9979  010052  AEE3               	btfss	plusw1,7,c
  9980  010054  D02B               	goto	l10252
  9981                           
  9982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  9983  010056  0E01               	movlw	1
  9984  010058  6E3C               	movwf	(btemp+10)^0,c
  9985  01005A  0E00               	movlw	0
  9986  01005C  6E3D               	movwf	(btemp+11)^0,c
  9987                           
  9988                           ;stkvar	_sign @ sp[(-56)+42]
  9989  01005E  0EF2               	movlw	-14
  9990  010060  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9991  010066  0EF3               	movlw	-13
  9992  010068  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9993                           
  9994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  9995                           ;stkvar	_g @ sp[(-56)+16]
  9996  01006E  0ED8               	movlw	-40
  9997  010070  006F FF8F FFE6     	movff	plusw1,postinc1
  9998  010076  006F FF8F FFE6     	movff	plusw1,postinc1
  9999  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 10000  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 10001  010088  ECCB  F0BC         	call	___flneg	;wreg free
 10002                           
 10003                           ;stkvar	_g @ sp[(-56)+16]
 10004  01008C  0ED8               	movlw	-40
 10005  01008E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10006  010094  0ED9               	movlw	-39
 10007  010096  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10008  01009C  0EDA               	movlw	-38
 10009  01009E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10010  0100A4  0EDB               	movlw	-37
 10011  0100A6  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10012  0100AC                     l10252:
 10013                           
 10014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 10015                           ;stkvar	_n @ sp[(-56)+32]
 10016  0100AC  0EE8               	movlw	-24
 10017  0100AE  6AE3               	clrf	plusw1,c
 10018  0100B0  0EE9               	movlw	-23
 10019  0100B2  6AE3               	clrf	plusw1,c
 10020                           
 10021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 10022                           ;stkvar	_w @ sp[(-56)+38]
 10023  0100B4  0EEE               	movlw	-18
 10024  0100B6  0060  F06F  FFE3   	movff	_width,plusw1
 10025  0100BC  0EEF               	movlw	-17
 10026  0100BE  0060  F073  FFE3   	movff	_width+1,plusw1
 10027                           
 10028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 10029                           ;stkvar	_sign @ sp[(-56)+42]
 10030  0100C4  0EF2               	movlw	-14
 10031  0100C6  006F FF8C  F032    	movff	plusw1,btemp
 10032  0100CC  0EF3               	movlw	-13
 10033  0100CE  50E3               	movf	plusw1,w,c
 10034  0100D0  1032               	iorwf	btemp^0,w,c
 10035  0100D2  A4D8               	btfss	status,2,c
 10036  0100D4  D002               	goto	u10850
 10037  0100D6  A41F               	btfss	_flags^0,2,c
 10038  0100D8  D036               	goto	l10272
 10039  0100DA                     u10850:
 10040                           
 10041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 10042                           ;stkvar	_sign @ sp[(-56)+42]
 10043  0100DA  0EF2               	movlw	-14
 10044  0100DC  006F FF8C  F032    	movff	plusw1,btemp
 10045  0100E2  0EF3               	movlw	-13
 10046  0100E4  50E3               	movf	plusw1,w,c
 10047  0100E6  1032               	iorwf	btemp^0,w,c
 10048  0100E8  A4D8               	btfss	status,2,c
 10049  0100EA  D002               	goto	l10264
 10050  0100EC  0E2B               	movlw	43
 10051  0100EE  D001               	goto	L7
 10052  0100F0                     l10264:
 10053  0100F0  0E2D               	movlw	45
 10054  0100F2                     L7:
 10055  0100F2  6E3C               	movwf	(btemp+10)^0,c
 10056  0100F4  0E00               	movlw	0
 10057  0100F6  6E3D               	movwf	(btemp+11)^0,c
 10058                           
 10059                           ;stkvar	_efgtoa$4357 @ sp[(-56)+10]
 10060  0100F8  0ED2               	movlw	-46
 10061  0100FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10062  010100  0ED3               	movlw	-45
 10063  010102  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10064                           
 10065                           ;stkvar	_efgtoa$4357 @ sp[(-56)+10]
 10066  010108  0ED2               	movlw	-46
 10067  01010A  006F FF8C  F240    	movff	plusw1,_dbuf
 10068                           
 10069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 10070                           ;stkvar	_n @ sp[(-56)+32]
 10071  010110  0EE8               	movlw	-24
 10072  010112  50E3               	movf	plusw1,w,c
 10073  010114  0F01               	addlw	1
 10074  010116  6E32               	movwf	btemp^0,c
 10075  010118  0EE8               	movlw	-24
 10076  01011A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10077  010120  6A32               	clrf	btemp^0,c
 10078  010122  0EE9               	movlw	-23
 10079  010124  50E3               	movf	plusw1,w,c
 10080  010126  2032               	addwfc	btemp^0,w,c
 10081  010128  6E32               	movwf	btemp^0,c
 10082  01012A  0EE9               	movlw	-23
 10083  01012C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10084                           
 10085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 10086                           ;stkvar	_w @ sp[(-56)+38]
 10087  010132  50E1               	movf	fsr1l,w,c
 10088  010134  0FEE               	addlw	-18
 10089  010136  6ED9               	movwf	fsr2l,c
 10090  010138  50E2               	movf	fsr1h,w,c
 10091  01013A  6EDA               	movwf	fsr2h,c
 10092  01013C  0EFF               	movlw	255
 10093  01013E  22DA               	addwfc	fsr2h,f,c
 10094  010140  06DE               	decf	postinc2,f,c
 10095  010142  0E00               	movlw	0
 10096  010144  5ADD               	subwfb	postdec2,f,c
 10097  010146                     l10272:
 10098                           
 10099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10100                           ;stkvar	_g @ sp[(-56)+16]
 10101  010146  0ED8               	movlw	-40
 10102  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 10103  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 10104  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 10105  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 10106  010160  ECD8  F0AD         	call	___fpclassifyf	;wreg free
 10107  010164  0432               	decf	btemp^0,w,c
 10108  010166  1033               	iorwf	(btemp+1)^0,w,c
 10109  010168  A4D8               	btfss	status,2,c
 10110  01016A  D076               	goto	l10290
 10111  01016C  0EBF               	movlw	191
 10112  01016E  6E3C               	movwf	(btemp+10)^0,c
 10113  010170  0EFF               	movlw	255
 10114  010172  6E3D               	movwf	(btemp+11)^0,c
 10115                           
 10116                           ;stkvar	_c @ sp[(-56)+-7]
 10117  010174  0EC1               	movlw	-63
 10118  010176  50E3               	movf	plusw1,w,c
 10119  010178  6E3A               	movwf	(btemp+8)^0,c
 10120  01017A  6A3B               	clrf	(btemp+9)^0,c
 10121  01017C  503C               	movf	(btemp+10)^0,w,c
 10122  01017E  263A               	addwf	(btemp+8)^0,f,c
 10123  010180  503D               	movf	(btemp+11)^0,w,c
 10124  010182  223B               	addwfc	(btemp+9)^0,f,c
 10125  010184  503B               	movf	(btemp+9)^0,w,c
 10126  010186  E106               	bnz	u10880
 10127  010188  0E1A               	movlw	26
 10128  01018A  5C3A               	subwf	(btemp+8)^0,w,c
 10129  01018C  B0D8               	btfsc	status,0,c
 10130  01018E  D002               	goto	u10880
 10131  010190  0E01               	movlw	1
 10132  010192  D001               	goto	u10890
 10133  010194                     u10880:
 10134  010194  0E00               	movlw	0
 10135  010196                     u10890:
 10136  010196  6E3C               	movwf	(btemp+10)^0,c
 10137  010198  6A3D               	clrf	(btemp+11)^0,c
 10138                           
 10139                           ;stkvar	_efgtoa$4358 @ sp[(-56)+8]
 10140  01019A  0ED0               	movlw	-48
 10141  01019C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10142  0101A2  0ED1               	movlw	-47
 10143  0101A4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10144                           
 10145                           ;stkvar	_efgtoa$4358 @ sp[(-56)+8]
 10146  0101AA  0ED0               	movlw	-48
 10147  0101AC  006F FF8C  F032    	movff	plusw1,btemp
 10148  0101B2  0ED1               	movlw	-47
 10149  0101B4  50E3               	movf	plusw1,w,c
 10150  0101B6  1032               	iorwf	btemp^0,w,c
 10151  0101B8  B4D8               	btfsc	status,2,c
 10152  0101BA  D017               	goto	l10282
 10153                           
 10154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 10155  0101BC  0EE5               	movlw	low STR_34
 10156  0101BE  6EE6               	movwf	postinc1,c
 10157  0101C0  0EFF               	movlw	high STR_34
 10158  0101C2  6EE6               	movwf	postinc1,c
 10159                           
 10160                           ;stkvar	_n @ sp[(-58)+32]
 10161  0101C4  0E40               	movlw	low _dbuf
 10162  0101C6  6E3C               	movwf	(btemp+10)^0,c
 10163  0101C8  0E02               	movlw	high _dbuf
 10164  0101CA  6E3D               	movwf	(btemp+11)^0,c
 10165  0101CC  0EE6               	movlw	-26
 10166  0101CE  50E3               	movf	plusw1,w,c
 10167  0101D0  263C               	addwf	(btemp+10)^0,f,c
 10168  0101D2  0EE7               	movlw	-25
 10169  0101D4  50E3               	movf	plusw1,w,c
 10170  0101D6  223D               	addwfc	(btemp+11)^0,f,c
 10171  0101D8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10172  0101DE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10173  0101E4  EC92  F0B5         	call	_strcpy	;wreg free
 10174                           
 10175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 10176  0101E8  D016               	goto	l10284
 10177  0101EA                     l10282:
 10178                           
 10179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 10180  0101EA  0EED               	movlw	low STR_35
 10181  0101EC  6EE6               	movwf	postinc1,c
 10182  0101EE  0EFF               	movlw	high STR_35
 10183  0101F0  6EE6               	movwf	postinc1,c
 10184                           
 10185                           ;stkvar	_n @ sp[(-58)+32]
 10186  0101F2  0E40               	movlw	low _dbuf
 10187  0101F4  6E3C               	movwf	(btemp+10)^0,c
 10188  0101F6  0E02               	movlw	high _dbuf
 10189  0101F8  6E3D               	movwf	(btemp+11)^0,c
 10190  0101FA  0EE6               	movlw	-26
 10191  0101FC  50E3               	movf	plusw1,w,c
 10192  0101FE  263C               	addwf	(btemp+10)^0,f,c
 10193  010200  0EE7               	movlw	-25
 10194  010202  50E3               	movf	plusw1,w,c
 10195  010204  223D               	addwfc	(btemp+11)^0,f,c
 10196  010206  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10197  01020C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10198  010212  EC92  F0B5         	call	_strcpy	;wreg free
 10199  010216                     l10284:
 10200                           
 10201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 10202                           ;stkvar	_w @ sp[(-56)+38]
 10203  010216  50E1               	movf	fsr1l,w,c
 10204  010218  0FEE               	addlw	-18
 10205  01021A  6ED9               	movwf	fsr2l,c
 10206  01021C  50E2               	movf	fsr1h,w,c
 10207  01021E  6EDA               	movwf	fsr2h,c
 10208  010220  0EFF               	movlw	255
 10209  010222  22DA               	addwfc	fsr2h,f,c
 10210  010224  0EFD               	movlw	253
 10211  010226  26DE               	addwf	postinc2,f,c
 10212  010228  0EFF               	movlw	255
 10213  01022A  22DD               	addwfc	postdec2,f,c
 10214  01022C                     l10286:
 10215                           
 10216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 10217                           ;stkvar	_w @ sp[(-56)+38]
 10218  01022C  0EEE               	movlw	-18
 10219  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 10220  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 10221  01023A  0E40               	movlw	low _dbuf
 10222  01023C  6EE6               	movwf	postinc1,c
 10223  01023E  0E02               	movlw	high _dbuf
 10224  010240  6EE6               	movwf	postinc1,c
 10225                           
 10226                           ;stkvar	_fp @ sp[(-60)+-2]
 10227  010242  0EC2               	movlw	-62
 10228  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 10229  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 10230  010250  EC0D  F0B3         	call	_pad	;wreg free
 10231  010254  EF1D  F089         	goto	l1859
 10232  010258                     l10290:
 10233                           
 10234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10235                           ;stkvar	_g @ sp[(-56)+16]
 10236  010258  0ED8               	movlw	-40
 10237  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 10238  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 10239  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 10240  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 10241  010272  ECD8  F0AD         	call	___fpclassifyf	;wreg free
 10242  010276  5032               	movf	btemp^0,w,c
 10243  010278  1033               	iorwf	(btemp+1)^0,w,c
 10244  01027A  A4D8               	btfss	status,2,c
 10245  01027C  D056               	goto	l10308
 10246  01027E  0EBF               	movlw	191
 10247  010280  6E3C               	movwf	(btemp+10)^0,c
 10248  010282  0EFF               	movlw	255
 10249  010284  6E3D               	movwf	(btemp+11)^0,c
 10250                           
 10251                           ;stkvar	_c @ sp[(-56)+-7]
 10252  010286  0EC1               	movlw	-63
 10253  010288  50E3               	movf	plusw1,w,c
 10254  01028A  6E3A               	movwf	(btemp+8)^0,c
 10255  01028C  6A3B               	clrf	(btemp+9)^0,c
 10256  01028E  503C               	movf	(btemp+10)^0,w,c
 10257  010290  263A               	addwf	(btemp+8)^0,f,c
 10258  010292  503D               	movf	(btemp+11)^0,w,c
 10259  010294  223B               	addwfc	(btemp+9)^0,f,c
 10260  010296  503B               	movf	(btemp+9)^0,w,c
 10261  010298  E106               	bnz	u10920
 10262  01029A  0E1A               	movlw	26
 10263  01029C  5C3A               	subwf	(btemp+8)^0,w,c
 10264  01029E  B0D8               	btfsc	status,0,c
 10265  0102A0  D002               	goto	u10920
 10266  0102A2  0E01               	movlw	1
 10267  0102A4  D001               	goto	u10930
 10268  0102A6                     u10920:
 10269  0102A6  0E00               	movlw	0
 10270  0102A8                     u10930:
 10271  0102A8  6E3C               	movwf	(btemp+10)^0,c
 10272  0102AA  6A3D               	clrf	(btemp+11)^0,c
 10273                           
 10274                           ;stkvar	_efgtoa$4362 @ sp[(-56)+6]
 10275  0102AC  0ECE               	movlw	-50
 10276  0102AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10277  0102B4  0ECF               	movlw	-49
 10278  0102B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10279                           
 10280                           ;stkvar	_efgtoa$4362 @ sp[(-56)+6]
 10281  0102BC  0ECE               	movlw	-50
 10282  0102BE  006F FF8C  F032    	movff	plusw1,btemp
 10283  0102C4  0ECF               	movlw	-49
 10284  0102C6  50E3               	movf	plusw1,w,c
 10285  0102C8  1032               	iorwf	btemp^0,w,c
 10286  0102CA  B4D8               	btfsc	status,2,c
 10287  0102CC  D017               	goto	l10300
 10288                           
 10289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 10290  0102CE  0EE9               	movlw	low STR_38
 10291  0102D0  6EE6               	movwf	postinc1,c
 10292  0102D2  0EFF               	movlw	high STR_38
 10293  0102D4  6EE6               	movwf	postinc1,c
 10294                           
 10295                           ;stkvar	_n @ sp[(-58)+32]
 10296  0102D6  0E40               	movlw	low _dbuf
 10297  0102D8  6E3C               	movwf	(btemp+10)^0,c
 10298  0102DA  0E02               	movlw	high _dbuf
 10299  0102DC  6E3D               	movwf	(btemp+11)^0,c
 10300  0102DE  0EE6               	movlw	-26
 10301  0102E0  50E3               	movf	plusw1,w,c
 10302  0102E2  263C               	addwf	(btemp+10)^0,f,c
 10303  0102E4  0EE7               	movlw	-25
 10304  0102E6  50E3               	movf	plusw1,w,c
 10305  0102E8  223D               	addwfc	(btemp+11)^0,f,c
 10306  0102EA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10307  0102F0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10308  0102F6  EC92  F0B5         	call	_strcpy	;wreg free
 10309                           
 10310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 10311  0102FA  D78D               	goto	l10284
 10312  0102FC                     l10300:
 10313                           
 10314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 10315  0102FC  0EF1               	movlw	low STR_39
 10316  0102FE  6EE6               	movwf	postinc1,c
 10317  010300  0EFF               	movlw	high STR_39
 10318  010302  6EE6               	movwf	postinc1,c
 10319                           
 10320                           ;stkvar	_n @ sp[(-58)+32]
 10321  010304  0E40               	movlw	low _dbuf
 10322  010306  6E3C               	movwf	(btemp+10)^0,c
 10323  010308  0E02               	movlw	high _dbuf
 10324  01030A  6E3D               	movwf	(btemp+11)^0,c
 10325  01030C  0EE6               	movlw	-26
 10326  01030E  50E3               	movf	plusw1,w,c
 10327  010310  263C               	addwf	(btemp+10)^0,f,c
 10328  010312  0EE7               	movlw	-25
 10329  010314  50E3               	movf	plusw1,w,c
 10330  010316  223D               	addwfc	(btemp+11)^0,f,c
 10331  010318  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10332  01031E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10333  010324  EC92  F0B5         	call	_strcpy	;wreg free
 10334  010328  D776               	goto	l10284
 10335  01032A                     l10308:
 10336                           
 10337                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 10338  01032A  0E00               	movlw	0
 10339  01032C  6E3A               	movwf	(btemp+8)^0,c
 10340  01032E  0E00               	movlw	0
 10341  010330  6E3B               	movwf	(btemp+9)^0,c
 10342  010332  0E80               	movlw	128
 10343  010334  6E3C               	movwf	(btemp+10)^0,c
 10344  010336  0E3F               	movlw	63
 10345  010338  6E3D               	movwf	(btemp+11)^0,c
 10346                           
 10347                           ;stkvar	_u @ sp[(-56)+12]
 10348  01033A  0ED4               	movlw	-44
 10349  01033C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10350  010342  0ED5               	movlw	-43
 10351  010344  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10352  01034A  0ED6               	movlw	-42
 10353  01034C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10354  010352  0ED7               	movlw	-41
 10355  010354  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10356                           
 10357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 10358                           ;stkvar	_e @ sp[(-56)+34]
 10359  01035A  0EEA               	movlw	-22
 10360  01035C  6AE3               	clrf	plusw1,c
 10361  01035E  0EEB               	movlw	-21
 10362  010360  6AE3               	clrf	plusw1,c
 10363                           
 10364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 10365  010362  0E00               	movlw	0
 10366  010364  6EE6               	movwf	postinc1,c
 10367  010366  0E00               	movlw	0
 10368  010368  6EE6               	movwf	postinc1,c
 10369  01036A  0E00               	movlw	0
 10370  01036C  6EE6               	movwf	postinc1,c
 10371  01036E  0E00               	movlw	0
 10372  010370  6EE6               	movwf	postinc1,c
 10373                           
 10374                           ;stkvar	_g @ sp[(-60)+16]
 10375  010372  0ED4               	movlw	-44
 10376  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 10377  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 10378  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 10379  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 10380  01038C  ECFC  F0B5         	call	___fleq	;wreg free
 10381  010390  A032               	btfss	btemp& (0+255),0,c
 10382  010392  D039               	goto	l10320
 10383  010394  D0BC               	goto	u10970
 10384  010396                     l10316:
 10385                           
 10386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 10387  010396  0E00               	movlw	0
 10388  010398  6EE6               	movwf	postinc1,c
 10389  01039A  0E00               	movlw	0
 10390  01039C  6EE6               	movwf	postinc1,c
 10391  01039E  0E20               	movlw	32
 10392  0103A0  6EE6               	movwf	postinc1,c
 10393  0103A2  0E41               	movlw	65
 10394  0103A4  6EE6               	movwf	postinc1,c
 10395                           
 10396                           ;stkvar	_u @ sp[(-60)+12]
 10397  0103A6  0ED0               	movlw	-48
 10398  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10399  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10400  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 10401  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 10402  0103C0  ECC1  F08E         	call	___flmul	;wreg free
 10403                           
 10404                           ;stkvar	_u @ sp[(-56)+12]
 10405  0103C4  0ED4               	movlw	-44
 10406  0103C6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10407  0103CC  0ED5               	movlw	-43
 10408  0103CE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10409  0103D4  0ED6               	movlw	-42
 10410  0103D6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10411  0103DC  0ED7               	movlw	-41
 10412  0103DE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10413                           
 10414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 10415                           ;stkvar	_e @ sp[(-56)+34]
 10416  0103E4  0EEA               	movlw	-22
 10417  0103E6  50E3               	movf	plusw1,w,c
 10418  0103E8  0F01               	addlw	1
 10419  0103EA  6E32               	movwf	btemp^0,c
 10420  0103EC  0EEA               	movlw	-22
 10421  0103EE  0060  F0CB  FFE3   	movff	btemp,plusw1
 10422  0103F4  6A32               	clrf	btemp^0,c
 10423  0103F6  0EEB               	movlw	-21
 10424  0103F8  50E3               	movf	plusw1,w,c
 10425  0103FA  2032               	addwfc	btemp^0,w,c
 10426  0103FC  6E32               	movwf	btemp^0,c
 10427  0103FE  0EEB               	movlw	-21
 10428  010400  0060  F0CB  FFE3   	movff	btemp,plusw1
 10429  010406                     l10320:
 10430                           
 10431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 10432  010406  0E00               	movlw	0
 10433  010408  6EE6               	movwf	postinc1,c
 10434  01040A  0E00               	movlw	0
 10435  01040C  6EE6               	movwf	postinc1,c
 10436  01040E  0E20               	movlw	32
 10437  010410  6EE6               	movwf	postinc1,c
 10438  010412  0E41               	movlw	65
 10439  010414  6EE6               	movwf	postinc1,c
 10440                           
 10441                           ;stkvar	_u @ sp[(-60)+12]
 10442  010416  0ED0               	movlw	-48
 10443  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 10444  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 10445  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 10446  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 10447  010430  ECC1  F08E         	call	___flmul	;wreg free
 10448  010434  0060  F0CB  FFE6   	movff	btemp,postinc1
 10449  01043A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 10450  010440  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 10451  010446  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 10452                           
 10453                           ;stkvar	_g @ sp[(-60)+16]
 10454  01044C  0ED4               	movlw	-44
 10455  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 10456  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 10457  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 10458  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 10459  010466  EC5C  F0AF         	call	___flge	;wreg free
 10460  01046A  A032               	btfss	btemp& (0+255),0,c
 10461  01046C  D032               	goto	l10326
 10462  01046E  D793               	goto	l10316
 10463  010470                     l10322:
 10464                           
 10465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 10466  010470  0E00               	movlw	0
 10467  010472  6EE6               	movwf	postinc1,c
 10468  010474  0E00               	movlw	0
 10469  010476  6EE6               	movwf	postinc1,c
 10470  010478  0E20               	movlw	32
 10471  01047A  6EE6               	movwf	postinc1,c
 10472  01047C  0E41               	movlw	65
 10473  01047E  6EE6               	movwf	postinc1,c
 10474                           
 10475                           ;stkvar	_u @ sp[(-60)+12]
 10476  010480  0ED0               	movlw	-48
 10477  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 10478  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 10479  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 10480  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 10481  01049A  ECB4  F096         	call	___fldiv	;wreg free
 10482                           
 10483                           ;stkvar	_u @ sp[(-56)+12]
 10484  01049E  0ED4               	movlw	-44
 10485  0104A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 10486  0104A6  0ED5               	movlw	-43
 10487  0104A8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10488  0104AE  0ED6               	movlw	-42
 10489  0104B0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10490  0104B6  0ED7               	movlw	-41
 10491  0104B8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10492                           
 10493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 10494                           ;stkvar	_e @ sp[(-56)+34]
 10495  0104BE  50E1               	movf	fsr1l,w,c
 10496  0104C0  0FEA               	addlw	-22
 10497  0104C2  6ED9               	movwf	fsr2l,c
 10498  0104C4  50E2               	movf	fsr1h,w,c
 10499  0104C6  6EDA               	movwf	fsr2h,c
 10500  0104C8  0EFF               	movlw	255
 10501  0104CA  22DA               	addwfc	fsr2h,f,c
 10502  0104CC  06DE               	decf	postinc2,f,c
 10503  0104CE  0E00               	movlw	0
 10504  0104D0  5ADD               	subwfb	postdec2,f,c
 10505  0104D2                     l10326:
 10506                           
 10507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 10508                           ;stkvar	_u @ sp[(-56)+12]
 10509  0104D2  0ED4               	movlw	-44
 10510  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10511  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10512  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10513  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10514                           
 10515                           ;stkvar	_g @ sp[(-60)+16]
 10516  0104EC  0ED4               	movlw	-44
 10517  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 10518  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 10519  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 10520  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 10521  010506  EC5C  F0AF         	call	___flge	;wreg free
 10522  01050A  A032               	btfss	btemp& (0+255),0,c
 10523  01050C  D7B1               	goto	l10322
 10524  01050E                     u10970:
 10525                           
 10526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 10527                           ;stkvar	_c @ sp[(-56)+-7]
 10528  01050E  0EC1               	movlw	-63
 10529  010510  50E3               	movf	plusw1,w,c
 10530  010512  6EE6               	movwf	postinc1,c
 10531  010514  0E00               	movlw	0
 10532  010516  6EE6               	movwf	postinc1,c
 10533  010518  EC6D  F0B9         	call	_tolower	;wreg free
 10534                           
 10535                           ;stkvar	_mode @ sp[(-56)+54]
 10536  01051C  0EFE               	movlw	-2
 10537  01051E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10538                           
 10539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 10540                           ;stkvar	_mode @ sp[(-56)+54]
 10541                           ;stkvar	_nmode @ sp[(-56)+55]
 10542  010524  0EFE               	movlw	-2
 10543  010526  006F FF8C  F032    	movff	plusw1,btemp
 10544  01052C  0EFF               	movlw	-1
 10545  01052E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10546                           
 10547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 10548                           ;stkvar	_mode @ sp[(-56)+54]
 10549  010534  0EFE               	movlw	-2
 10550  010536  006F FF8C  F032    	movff	plusw1,btemp
 10551  01053C  0E67               	movlw	103
 10552  01053E  1832               	xorwf	btemp^0,w,c
 10553  010540  A4D8               	btfss	status,2,c
 10554  010542  D025               	goto	l10344
 10555                           
 10556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 10557  010544  501D               	movf	_prec^0,w,c
 10558  010546  101E               	iorwf	(_prec+1)^0,w,c
 10559  010548  A4D8               	btfss	status,2,c
 10560  01054A  D004               	goto	l10338
 10561                           
 10562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 10563  01054C  0E00               	movlw	0
 10564  01054E  6E1E               	movwf	(_prec+1)^0,c
 10565  010550  0E01               	movlw	1
 10566  010552  6E1D               	movwf	_prec^0,c
 10567  010554                     l10338:
 10568                           
 10569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 10570  010554  BE1E               	btfsc	(_prec+1)^0,7,c
 10571  010556  D005               	goto	u11000
 10572  010558  501E               	movf	(_prec+1)^0,w,c
 10573  01055A  E110               	bnz	l10342
 10574  01055C  041D               	decf	_prec^0,w,c
 10575  01055E  B0D8               	btfsc	status,0,c
 10576  010560  D00D               	goto	l10342
 10577  010562                     u11000:
 10578  010562  0E06               	movlw	6
 10579  010564  6E3C               	movwf	(btemp+10)^0,c
 10580  010566  0E00               	movlw	0
 10581  010568  6E3D               	movwf	(btemp+11)^0,c
 10582                           
 10583                           ;stkvar	_p @ sp[(-56)+40]
 10584  01056A  0EF0               	movlw	-16
 10585  01056C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10586  010572  0EF1               	movlw	-15
 10587  010574  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10588  01057A  D00C               	goto	l10350
 10589  01057C                     l10342:
 10590                           
 10591                           ;stkvar	_p @ sp[(-56)+40]
 10592  01057C  0EF0               	movlw	-16
 10593  01057E  0060  F077  FFE3   	movff	_prec,plusw1
 10594  010584  0EF1               	movlw	-15
 10595  010586  0060  F07B  FFE3   	movff	_prec+1,plusw1
 10596  01058C  D003               	goto	l10350
 10597  01058E                     l10344:
 10598                           
 10599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 10600  01058E  AE1E               	btfss	(_prec+1)^0,7,c
 10601  010590  D7F5               	goto	l10342
 10602  010592  D7E7               	goto	u11000
 10603  010594                     l10350:
 10604                           
 10605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 10606                           ;stkvar	_mode @ sp[(-56)+54]
 10607  010594  0EFE               	movlw	-2
 10608  010596  006F FF8C  F032    	movff	plusw1,btemp
 10609  01059C  0E67               	movlw	103
 10610  01059E  1832               	xorwf	btemp^0,w,c
 10611  0105A0  A4D8               	btfss	status,2,c
 10612  0105A2  D02F               	goto	l10360
 10613                           
 10614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 10615                           ;stkvar	_e @ sp[(-56)+34]
 10616  0105A4  0EEB               	movlw	-21
 10617  0105A6  AEE3               	btfss	plusw1,7,c
 10618  0105A8  D00E               	goto	u11030
 10619  0105AA  0EEA               	movlw	-22
 10620  0105AC  006F FF8C  F032    	movff	plusw1,btemp
 10621  0105B2  0EFC               	movlw	252
 10622  0105B4  5E32               	subwf	btemp^0,f,c
 10623  0105B6  0EEB               	movlw	-21
 10624  0105B8  006F FF8C  F032    	movff	plusw1,btemp
 10625  0105BE  0EFF               	movlw	255
 10626  0105C0  5A32               	subwfb	btemp^0,f,c
 10627  0105C2  A0D8               	btfss	status,0,c
 10628  0105C4  D018               	goto	l10358
 10629  0105C6                     u11030:
 10630                           
 10631                           ;stkvar	_e @ sp[(-56)+34]
 10632                           ;stkvar	_p @ sp[(-56)+40]
 10633  0105C6  0EF0               	movlw	-16
 10634  0105C8  50E3               	movf	plusw1,w,c
 10635  0105CA  0FFF               	addlw	255
 10636  0105CC  6E3C               	movwf	(btemp+10)^0,c
 10637  0105CE  0EF1               	movlw	-15
 10638  0105D0  006F FF8C  F03D    	movff	plusw1,btemp+11
 10639  0105D6  0EFF               	movlw	255
 10640  0105D8  223D               	addwfc	(btemp+11)^0,f,c
 10641  0105DA  0EEA               	movlw	-22
 10642  0105DC  50E3               	movf	plusw1,w,c
 10643  0105DE  5C3C               	subwf	(btemp+10)^0,w,c
 10644  0105E0  503D               	movf	(btemp+11)^0,w,c
 10645  0105E2  0A80               	xorlw	128
 10646  0105E4  6E32               	movwf	btemp^0,c
 10647  0105E6  0EEB               	movlw	-21
 10648  0105E8  50E3               	movf	plusw1,w,c
 10649  0105EA  0A80               	xorlw	128
 10650  0105EC  5832               	subwfb	btemp^0,w,c
 10651  0105EE  A0D8               	btfss	status,0,c
 10652  0105F0  D002               	goto	l10358
 10653                           
 10654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 10655  0105F2  0E66               	movlw	102
 10656  0105F4  D001               	goto	L8
 10657  0105F6                     l10358:
 10658                           
 10659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 10660  0105F6  0E65               	movlw	101
 10661  0105F8                     L8:
 10662  0105F8  6E3D               	movwf	(btemp+11)^0,c
 10663                           
 10664                           ;stkvar	_nmode @ sp[(-56)+55]
 10665  0105FA  0EFF               	movlw	-1
 10666  0105FC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10667  010602                     l10360:
 10668                           
 10669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 10670                           ;stkvar	_p @ sp[(-56)+40]
 10671                           ;stkvar	_m @ sp[(-56)+48]
 10672  010602  0EF0               	movlw	-16
 10673  010604  006F FF8C  F032    	movff	plusw1,btemp
 10674  01060A  0EF8               	movlw	-8
 10675  01060C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10676  010612  0EF1               	movlw	-15
 10677  010614  006F FF8C  F032    	movff	plusw1,btemp
 10678  01061A  0EF9               	movlw	-7
 10679  01061C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10680                           
 10681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 10682                           ;stkvar	_mode @ sp[(-56)+54]
 10683  010622  0EFE               	movlw	-2
 10684  010624  006F FF8C  F032    	movff	plusw1,btemp
 10685  01062A  0E67               	movlw	103
 10686  01062C  1832               	xorwf	btemp^0,w,c
 10687  01062E  A4D8               	btfss	status,2,c
 10688  010630  D00B               	goto	u11070
 10689                           
 10690                           ;stkvar	_nmode @ sp[(-56)+55]
 10691  010632  0EFF               	movlw	-1
 10692  010634  006F FF8C  F032    	movff	plusw1,btemp
 10693  01063A  0E66               	movlw	102
 10694  01063C  1832               	xorwf	btemp^0,w,c
 10695  01063E  A4D8               	btfss	status,2,c
 10696  010640  D014               	goto	l1888
 10697                           
 10698                           ;stkvar	_e @ sp[(-56)+34]
 10699  010642  0EEB               	movlw	-21
 10700  010644  AEE3               	btfss	plusw1,7,c
 10701  010646  D011               	goto	l1888
 10702  010648                     u11070:
 10703                           
 10704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 10705                           ;stkvar	_m @ sp[(-56)+48]
 10706  010648  0EF8               	movlw	-8
 10707  01064A  50E3               	movf	plusw1,w,c
 10708  01064C  0F01               	addlw	1
 10709  01064E  6E32               	movwf	btemp^0,c
 10710  010650  0EF8               	movlw	-8
 10711  010652  0060  F0CB  FFE3   	movff	btemp,plusw1
 10712  010658  6A32               	clrf	btemp^0,c
 10713  01065A  0EF9               	movlw	-7
 10714  01065C  50E3               	movf	plusw1,w,c
 10715  01065E  2032               	addwfc	btemp^0,w,c
 10716  010660  6E32               	movwf	btemp^0,c
 10717  010662  0EF9               	movlw	-7
 10718  010664  0060  F0CB  FFE3   	movff	btemp,plusw1
 10719  01066A                     l1888:
 10720                           
 10721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 10722                           ;stkvar	_nmode @ sp[(-56)+55]
 10723  01066A  0EFF               	movlw	-1
 10724  01066C  006F FF8C  F032    	movff	plusw1,btemp
 10725  010672  0E66               	movlw	102
 10726  010674  1832               	xorwf	btemp^0,w,c
 10727  010676  A4D8               	btfss	status,2,c
 10728  010678  D03B               	goto	l10380
 10729                           
 10730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 10731                           ;stkvar	_e @ sp[(-56)+34]
 10732  01067A  0EEB               	movlw	-21
 10733  01067C  AEE3               	btfss	plusw1,7,c
 10734  01067E  D01C               	goto	l10376
 10735                           
 10736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 10737  010680  0E00               	movlw	0
 10738  010682  6E3A               	movwf	(btemp+8)^0,c
 10739  010684  0E00               	movlw	0
 10740  010686  6E3B               	movwf	(btemp+9)^0,c
 10741  010688  0E80               	movlw	128
 10742  01068A  6E3C               	movwf	(btemp+10)^0,c
 10743  01068C  0E3F               	movlw	63
 10744  01068E  6E3D               	movwf	(btemp+11)^0,c
 10745                           
 10746                           ;stkvar	_u @ sp[(-56)+12]
 10747  010690  0ED4               	movlw	-44
 10748  010692  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10749  010698  0ED5               	movlw	-43
 10750  01069A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10751  0106A0  0ED6               	movlw	-42
 10752  0106A2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10753  0106A8  0ED7               	movlw	-41
 10754  0106AA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10755                           
 10756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 10757                           ;stkvar	_e @ sp[(-56)+34]
 10758  0106B0  0EEA               	movlw	-22
 10759  0106B2  6AE3               	clrf	plusw1,c
 10760  0106B4  0EEB               	movlw	-21
 10761  0106B6  6AE3               	clrf	plusw1,c
 10762  0106B8                     l10376:
 10763                           
 10764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 10765                           ;stkvar	_mode @ sp[(-56)+54]
 10766  0106B8  0EFE               	movlw	-2
 10767  0106BA  006F FF8C  F032    	movff	plusw1,btemp
 10768  0106C0  0E67               	movlw	103
 10769  0106C2  1832               	xorwf	btemp^0,w,c
 10770  0106C4  B4D8               	btfsc	status,2,c
 10771  0106C6  D014               	goto	l10380
 10772                           
 10773                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 10774                           ;stkvar	_e @ sp[(-56)+34]
 10775                           ;stkvar	_m @ sp[(-56)+48]
 10776  0106C8  0EF8               	movlw	-8
 10777  0106CA  50E3               	movf	plusw1,w,c
 10778  0106CC  6E32               	movwf	btemp^0,c
 10779  0106CE  0EEA               	movlw	-22
 10780  0106D0  50E3               	movf	plusw1,w,c
 10781  0106D2  2632               	addwf	btemp^0,f,c
 10782  0106D4  0EF8               	movlw	-8
 10783  0106D6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10784  0106DC  0EF9               	movlw	-7
 10785  0106DE  50E3               	movf	plusw1,w,c
 10786  0106E0  6E32               	movwf	btemp^0,c
 10787  0106E2  0EEB               	movlw	-21
 10788  0106E4  50E3               	movf	plusw1,w,c
 10789  0106E6  2232               	addwfc	btemp^0,f,c
 10790  0106E8  0EF9               	movlw	-7
 10791  0106EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 10792  0106F0                     l10380:
 10793                           
 10794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 10795                           ;stkvar	_i @ sp[(-56)+36]
 10796  0106F0  0EEC               	movlw	-20
 10797  0106F2  6AE3               	clrf	plusw1,c
 10798  0106F4  0EED               	movlw	-19
 10799  0106F6  6AE3               	clrf	plusw1,c
 10800                           
 10801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 10802                           ;stkvar	_g @ sp[(-56)+16]
 10803  0106F8  0ED8               	movlw	-40
 10804  0106FA  006F FF8C  F03A    	movff	plusw1,btemp+8
 10805  010700  0ED9               	movlw	-39
 10806  010702  006F FF8C  F03B    	movff	plusw1,btemp+9
 10807  010708  0EDA               	movlw	-38
 10808  01070A  006F FF8C  F03C    	movff	plusw1,btemp+10
 10809  010710  0EDB               	movlw	-37
 10810  010712  006F FF8C  F03D    	movff	plusw1,btemp+11
 10811                           
 10812                           ;stkvar	_h @ sp[(-56)+24]
 10813  010718  0EE0               	movlw	-32
 10814  01071A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10815  010720  0EE1               	movlw	-31
 10816  010722  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10817  010728  0EE2               	movlw	-30
 10818  01072A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10819  010730  0EE3               	movlw	-29
 10820  010732  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10821                           
 10822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 10823                           ;stkvar	_u @ sp[(-56)+12]
 10824  010738  0ED4               	movlw	-44
 10825  01073A  006F FF8C  F03A    	movff	plusw1,btemp+8
 10826  010740  0ED5               	movlw	-43
 10827  010742  006F FF8C  F03B    	movff	plusw1,btemp+9
 10828  010748  0ED6               	movlw	-42
 10829  01074A  006F FF8C  F03C    	movff	plusw1,btemp+10
 10830  010750  0ED7               	movlw	-41
 10831  010752  006F FF8C  F03D    	movff	plusw1,btemp+11
 10832                           
 10833                           ;stkvar	_ou @ sp[(-56)+28]
 10834  010758  0EE4               	movlw	-28
 10835  01075A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10836  010760  0EE5               	movlw	-27
 10837  010762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10838  010768  0EE6               	movlw	-26
 10839  01076A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10840  010770  0EE7               	movlw	-25
 10841  010772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10842                           
 10843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 10844  010778  D0D6               	goto	l10396
 10845  01077A                     l10386:
 10846                           
 10847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 10848                           ;stkvar	_u @ sp[(-56)+12]
 10849  01077A  0ED4               	movlw	-44
 10850  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 10851  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 10852  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 10853  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 10854                           
 10855                           ;stkvar	_h @ sp[(-60)+24]
 10856  010794  0EDC               	movlw	-36
 10857  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 10858  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 10859  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 10860  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10861  0107AE  ECB4  F096         	call	___fldiv	;wreg free
 10862  0107B2  0060  F0CB  FFE6   	movff	btemp,postinc1
 10863  0107B8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 10864  0107BE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 10865  0107C4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 10866  0107CA  ECD9  F0A1         	call	_floorf	;wreg free
 10867                           
 10868                           ;stkvar	_l @ sp[(-56)+20]
 10869  0107CE  0EDC               	movlw	-36
 10870  0107D0  0060  F0CB  FFE3   	movff	btemp,plusw1
 10871  0107D6  0EDD               	movlw	-35
 10872  0107D8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10873  0107DE  0EDE               	movlw	-34
 10874  0107E0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10875  0107E6  0EDF               	movlw	-33
 10876  0107E8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10877                           
 10878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 10879                           ;stkvar	_l @ sp[(-56)+20]
 10880  0107EE  0EDC               	movlw	-36
 10881  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 10882  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 10883  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 10884  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 10885  010808  ECA3  F0AE         	call	___fltol	;wreg free
 10886  01080C  0060  F0C8  F03C   	movff	btemp,btemp+10
 10887  010812  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 10888                           
 10889                           ;stkvar	_d @ sp[(-56)+44]
 10890  010818  0EF4               	movlw	-12
 10891  01081A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10892  010820  0EF5               	movlw	-11
 10893  010822  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10894                           
 10895                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 10896                           ;stkvar	_u @ sp[(-56)+12]
 10897  010828  0ED4               	movlw	-44
 10898  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 10899  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 10900  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 10901  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 10902                           
 10903                           ;stkvar	_l @ sp[(-60)+20]
 10904  010842  0ED8               	movlw	-40
 10905  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 10906  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 10907  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 10908  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 10909  01085C  ECC1  F08E         	call	___flmul	;wreg free
 10910  010860  0060  F0CB  FFE6   	movff	btemp,postinc1
 10911  010866  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 10912  01086C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 10913  010872  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 10914                           
 10915                           ;stkvar	_h @ sp[(-60)+24]
 10916  010878  0EDC               	movlw	-36
 10917  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 10918  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 10919  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 10920  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 10921  010892  ECEF  F0BC         	call	___flsub	;wreg free
 10922                           
 10923                           ;stkvar	_h @ sp[(-56)+24]
 10924  010896  0EE0               	movlw	-32
 10925  010898  0060  F0CB  FFE3   	movff	btemp,plusw1
 10926  01089E  0EE1               	movlw	-31
 10927  0108A0  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10928  0108A6  0EE2               	movlw	-30
 10929  0108A8  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10930  0108AE  0EE3               	movlw	-29
 10931  0108B0  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10932                           
 10933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 10934  0108B6  0E00               	movlw	0
 10935  0108B8  6EE6               	movwf	postinc1,c
 10936  0108BA  0E00               	movlw	0
 10937  0108BC  6EE6               	movwf	postinc1,c
 10938  0108BE  0E20               	movlw	32
 10939  0108C0  6EE6               	movwf	postinc1,c
 10940  0108C2  0E41               	movlw	65
 10941  0108C4  6EE6               	movwf	postinc1,c
 10942                           
 10943                           ;stkvar	_u @ sp[(-60)+12]
 10944  0108C6  0ED0               	movlw	-48
 10945  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 10946  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 10947  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10948  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10949  0108E0  ECB4  F096         	call	___fldiv	;wreg free
 10950                           
 10951                           ;stkvar	_u @ sp[(-56)+12]
 10952  0108E4  0ED4               	movlw	-44
 10953  0108E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10954  0108EC  0ED5               	movlw	-43
 10955  0108EE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10956  0108F4  0ED6               	movlw	-42
 10957  0108F6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10958  0108FC  0ED7               	movlw	-41
 10959  0108FE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10960                           
 10961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 10962                           ;stkvar	_i @ sp[(-56)+36]
 10963  010904  0EEC               	movlw	-20
 10964  010906  50E3               	movf	plusw1,w,c
 10965  010908  0F01               	addlw	1
 10966  01090A  6E32               	movwf	btemp^0,c
 10967  01090C  0EEC               	movlw	-20
 10968  01090E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10969  010914  6A32               	clrf	btemp^0,c
 10970  010916  0EED               	movlw	-19
 10971  010918  50E3               	movf	plusw1,w,c
 10972  01091A  2032               	addwfc	btemp^0,w,c
 10973  01091C  6E32               	movwf	btemp^0,c
 10974  01091E  0EED               	movlw	-19
 10975  010920  0060  F0CB  FFE3   	movff	btemp,plusw1
 10976  010926                     l10396:
 10977                           
 10978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 10979                           ;stkvar	_m @ sp[(-56)+48]
 10980                           ;stkvar	_i @ sp[(-56)+36]
 10981  010926  50E1               	movf	fsr1l,w,c
 10982  010928  0FEC               	addlw	-20
 10983  01092A  6ED9               	movwf	fsr2l,c
 10984  01092C  50E2               	movf	fsr1h,w,c
 10985  01092E  6EDA               	movwf	fsr2h,c
 10986  010930  0EFF               	movlw	255
 10987  010932  22DA               	addwfc	fsr2h,f,c
 10988  010934  0EF8               	movlw	-8
 10989  010936  50E3               	movf	plusw1,w,c
 10990  010938  5CDE               	subwf	postinc2,w,c
 10991  01093A  50DE               	movf	postinc2,w,c
 10992  01093C  0A80               	xorlw	128
 10993  01093E  6E32               	movwf	btemp^0,c
 10994  010940  0EF9               	movlw	-7
 10995  010942  50E3               	movf	plusw1,w,c
 10996  010944  0A80               	xorlw	128
 10997  010946  5832               	subwfb	btemp^0,w,c
 10998  010948  A0D8               	btfss	status,0,c
 10999  01094A  D717               	goto	l10386
 11000                           
 11001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 11002  01094C  0E00               	movlw	0
 11003  01094E  6EE6               	movwf	postinc1,c
 11004  010950  0E00               	movlw	0
 11005  010952  6EE6               	movwf	postinc1,c
 11006  010954  0EA0               	movlw	160
 11007  010956  6EE6               	movwf	postinc1,c
 11008  010958  0E40               	movlw	64
 11009  01095A  6EE6               	movwf	postinc1,c
 11010                           
 11011                           ;stkvar	_u @ sp[(-60)+12]
 11012  01095C  0ED0               	movlw	-48
 11013  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 11014  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 11015  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 11016  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 11017  010976  ECC1  F08E         	call	___flmul	;wreg free
 11018                           
 11019                           ;stkvar	_l @ sp[(-56)+20]
 11020  01097A  0EDC               	movlw	-36
 11021  01097C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11022  010982  0EDD               	movlw	-35
 11023  010984  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11024  01098A  0EDE               	movlw	-34
 11025  01098C  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11026  010992  0EDF               	movlw	-33
 11027  010994  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11028                           
 11029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 11030                           ;stkvar	_l @ sp[(-56)+20]
 11031  01099A  0EDC               	movlw	-36
 11032  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 11033  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11034  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11035  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11036                           
 11037                           ;stkvar	_h @ sp[(-60)+24]
 11038  0109B4  0EDC               	movlw	-36
 11039  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 11040  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 11041  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 11042  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11043  0109CE  EC5C  F0AF         	call	___flge	;wreg free
 11044  0109D2  A032               	btfss	btemp& (0+255),0,c
 11045  0109D4  D021               	goto	u11140
 11046                           
 11047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 11048                           ;stkvar	_l @ sp[(-56)+20]
 11049                           
 11050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 11051                           
 11052                           ;stkvar	_l @ sp[(-56)+20]
 11053                           
 11054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 11055  0109D6  0EDC               	movlw	-36
 11056  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 11057  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 11058  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 11059  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 11060                           
 11061                           ;stkvar	_h @ sp[(-60)+24]
 11062  0109F0  0EDC               	movlw	-36
 11063  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 11064  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 11065  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 11066  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 11067  010A0A  ECFC  F0B5         	call	___fleq	;wreg free
 11068  010A0E  A032               	btfss	btemp& (0+255),0,c
 11069  010A10  D01B               	goto	l10410
 11070                           
 11071                           ;stkvar	_d @ sp[(-56)+44]
 11072  010A12  0EF4               	movlw	-12
 11073  010A14  B0E3               	btfsc	plusw1,0,c
 11074  010A16  D018               	goto	l10410
 11075  010A18                     u11140:
 11076                           
 11077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 11078  010A18  0E00               	movlw	0
 11079  010A1A  6E3A               	movwf	(btemp+8)^0,c
 11080  010A1C  0E00               	movlw	0
 11081  010A1E  6E3B               	movwf	(btemp+9)^0,c
 11082  010A20  0E00               	movlw	0
 11083  010A22  6E3C               	movwf	(btemp+10)^0,c
 11084  010A24  0E00               	movlw	0
 11085  010A26  6E3D               	movwf	(btemp+11)^0,c
 11086                           
 11087                           ;stkvar	_l @ sp[(-56)+20]
 11088  010A28  0EDC               	movlw	-36
 11089  010A2A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11090  010A30  0EDD               	movlw	-35
 11091  010A32  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11092  010A38  0EDE               	movlw	-34
 11093  010A3A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11094  010A40  0EDF               	movlw	-33
 11095  010A42  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11096  010A48                     l10410:
 11097                           
 11098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 11099                           ;stkvar	_l @ sp[(-56)+20]
 11100  010A48  0EDC               	movlw	-36
 11101  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 11102  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 11103  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 11104  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11105                           
 11106                           ;stkvar	_g @ sp[(-60)+16]
 11107  010A62  0ED4               	movlw	-44
 11108  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 11109  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 11110  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 11111  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 11112  010A7C  ECD6  F092         	call	___fladd	;wreg free
 11113                           
 11114                           ;stkvar	_h @ sp[(-56)+24]
 11115  010A80  0EE0               	movlw	-32
 11116  010A82  0060  F0CB  FFE3   	movff	btemp,plusw1
 11117  010A88  0EE1               	movlw	-31
 11118  010A8A  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11119  010A90  0EE2               	movlw	-30
 11120  010A92  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11121  010A98  0EE3               	movlw	-29
 11122  010A9A  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11123                           
 11124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 11125                           ;stkvar	_ou @ sp[(-56)+28]
 11126  010AA0  0EE4               	movlw	-28
 11127  010AA2  006F FF8C  F03A    	movff	plusw1,btemp+8
 11128  010AA8  0EE5               	movlw	-27
 11129  010AAA  006F FF8C  F03B    	movff	plusw1,btemp+9
 11130  010AB0  0EE6               	movlw	-26
 11131  010AB2  006F FF8C  F03C    	movff	plusw1,btemp+10
 11132  010AB8  0EE7               	movlw	-25
 11133  010ABA  006F FF8C  F03D    	movff	plusw1,btemp+11
 11134                           
 11135                           ;stkvar	_u @ sp[(-56)+12]
 11136  010AC0  0ED4               	movlw	-44
 11137  010AC2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11138  010AC8  0ED5               	movlw	-43
 11139  010ACA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11140  010AD0  0ED6               	movlw	-42
 11141  010AD2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11142  010AD8  0ED7               	movlw	-41
 11143  010ADA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11144                           
 11145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 11146                           ;stkvar	_nmode @ sp[(-56)+55]
 11147  010AE0  0EFF               	movlw	-1
 11148  010AE2  006F FF8C  F032    	movff	plusw1,btemp
 11149  010AE8  0E65               	movlw	101
 11150  010AEA  1832               	xorwf	btemp^0,w,c
 11151  010AEC  B4D8               	btfsc	status,2,c
 11152  010AEE  D011               	goto	l10418
 11153                           
 11154                           ;stkvar	_e @ sp[(-56)+34]
 11155                           ;stkvar	_ne @ sp[(-56)+46]
 11156  010AF0  0EEA               	movlw	-22
 11157  010AF2  006F FF8C  F032    	movff	plusw1,btemp
 11158  010AF8  0EF6               	movlw	-10
 11159  010AFA  0060  F0CB  FFE3   	movff	btemp,plusw1
 11160  010B00  0EEB               	movlw	-21
 11161  010B02  006F FF8C  F032    	movff	plusw1,btemp
 11162  010B08  0EF7               	movlw	-9
 11163  010B0A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11164  010B10  D004               	goto	l1903
 11165  010B12                     l10418:
 11166                           
 11167                           ;stkvar	_ne @ sp[(-56)+46]
 11168  010B12  0EF6               	movlw	-10
 11169  010B14  6AE3               	clrf	plusw1,c
 11170  010B16  0EF7               	movlw	-9
 11171  010B18  6AE3               	clrf	plusw1,c
 11172  010B1A                     l1903:
 11173                           
 11174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 11175                           ;stkvar	_pp @ sp[(-56)+50]
 11176  010B1A  0EFA               	movlw	-6
 11177  010B1C  6AE3               	clrf	plusw1,c
 11178  010B1E  0EFB               	movlw	-5
 11179  010B20  6AE3               	clrf	plusw1,c
 11180                           
 11181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 11182                           ;stkvar	_t @ sp[(-56)+52]
 11183  010B22  0EFC               	movlw	-4
 11184  010B24  6AE3               	clrf	plusw1,c
 11185  010B26  0EFD               	movlw	-3
 11186  010B28  6AE3               	clrf	plusw1,c
 11187                           
 11188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 11189                           ;stkvar	_i @ sp[(-56)+36]
 11190  010B2A  0EEC               	movlw	-20
 11191  010B2C  6AE3               	clrf	plusw1,c
 11192  010B2E  0EED               	movlw	-19
 11193  010B30  6AE3               	clrf	plusw1,c
 11194                           
 11195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11196  010B32  D1B7               	goto	l10470
 11197  010B34                     l10420:
 11198                           
 11199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 11200                           ;stkvar	_u @ sp[(-56)+12]
 11201  010B34  0ED4               	movlw	-44
 11202  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 11203  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11204  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 11205  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 11206                           
 11207                           ;stkvar	_h @ sp[(-60)+24]
 11208  010B4E  0EDC               	movlw	-36
 11209  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 11210  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 11211  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11212  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 11213  010B68  ECB4  F096         	call	___fldiv	;wreg free
 11214  010B6C  0060  F0CB  FFE6   	movff	btemp,postinc1
 11215  010B72  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11216  010B78  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11217  010B7E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11218  010B84  ECD9  F0A1         	call	_floorf	;wreg free
 11219                           
 11220                           ;stkvar	_l @ sp[(-56)+20]
 11221  010B88  0EDC               	movlw	-36
 11222  010B8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11223  010B90  0EDD               	movlw	-35
 11224  010B92  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11225  010B98  0EDE               	movlw	-34
 11226  010B9A  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11227  010BA0  0EDF               	movlw	-33
 11228  010BA2  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11229                           
 11230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 11231                           ;stkvar	_l @ sp[(-56)+20]
 11232  010BA8  0EDC               	movlw	-36
 11233  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 11234  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 11235  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 11236  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 11237  010BC2  ECA3  F0AE         	call	___fltol	;wreg free
 11238  010BC6  0060  F0C8  F03C   	movff	btemp,btemp+10
 11239  010BCC  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 11240                           
 11241                           ;stkvar	_d @ sp[(-56)+44]
 11242  010BD2  0EF4               	movlw	-12
 11243  010BD4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11244  010BDA  0EF5               	movlw	-11
 11245  010BDC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11246                           
 11247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 11248  010BE2  B81F               	btfsc	_flags^0,4,c
 11249  010BE4  D026               	goto	l10434
 11250                           
 11251                           ;stkvar	_d @ sp[(-56)+44]
 11252  010BE6  0EF4               	movlw	-12
 11253  010BE8  006F FF8C  F032    	movff	plusw1,btemp
 11254  010BEE  0EF5               	movlw	-11
 11255  010BF0  50E3               	movf	plusw1,w,c
 11256  010BF2  1032               	iorwf	btemp^0,w,c
 11257  010BF4  A4D8               	btfss	status,2,c
 11258  010BF6  D01D               	goto	l10434
 11259                           
 11260                           ;stkvar	_mode @ sp[(-56)+54]
 11261  010BF8  0EFE               	movlw	-2
 11262  010BFA  006F FF8C  F032    	movff	plusw1,btemp
 11263  010C00  0E67               	movlw	103
 11264  010C02  1832               	xorwf	btemp^0,w,c
 11265  010C04  A4D8               	btfss	status,2,c
 11266  010C06  D015               	goto	l10434
 11267                           
 11268                           ;stkvar	_ne @ sp[(-56)+46]
 11269  010C08  0EF7               	movlw	-9
 11270  010C0A  AEE3               	btfss	plusw1,7,c
 11271  010C0C  D012               	goto	l10434
 11272                           
 11273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 11274                           ;stkvar	_t @ sp[(-56)+52]
 11275  010C0E  0EFC               	movlw	-4
 11276  010C10  50E3               	movf	plusw1,w,c
 11277  010C12  0F01               	addlw	1
 11278  010C14  6E32               	movwf	btemp^0,c
 11279  010C16  0EFC               	movlw	-4
 11280  010C18  0060  F0CB  FFE3   	movff	btemp,plusw1
 11281  010C1E  6A32               	clrf	btemp^0,c
 11282  010C20  0EFD               	movlw	-3
 11283  010C22  50E3               	movf	plusw1,w,c
 11284  010C24  2032               	addwfc	btemp^0,w,c
 11285  010C26  6E32               	movwf	btemp^0,c
 11286  010C28  0EFD               	movlw	-3
 11287  010C2A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11288                           
 11289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 11290  010C30  D0AF               	goto	l10462
 11291  010C32                     l10434:
 11292                           
 11293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 11294                           ;stkvar	_pp @ sp[(-56)+50]
 11295  010C32  0EFA               	movlw	-6
 11296  010C34  006F FF8C  F032    	movff	plusw1,btemp
 11297  010C3A  0EFB               	movlw	-5
 11298  010C3C  50E3               	movf	plusw1,w,c
 11299  010C3E  1032               	iorwf	btemp^0,w,c
 11300  010C40  A4D8               	btfss	status,2,c
 11301  010C42  D070               	goto	l10454
 11302                           
 11303                           ;stkvar	_ne @ sp[(-56)+46]
 11304  010C44  0EF7               	movlw	-9
 11305  010C46  AEE3               	btfss	plusw1,7,c
 11306  010C48  D06D               	goto	l10454
 11307                           
 11308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 11309                           ;stkvar	_n @ sp[(-56)+32]
 11310  010C4A  0EE8               	movlw	-24
 11311  010C4C  006F FF8C  F03C    	movff	plusw1,btemp+10
 11312  010C52  0EE9               	movlw	-23
 11313  010C54  006F FF8C  F03D    	movff	plusw1,btemp+11
 11314  010C5A  0E40               	movlw	low _dbuf
 11315  010C5C  243C               	addwf	(btemp+10)^0,w,c
 11316  010C5E  6ED9               	movwf	fsr2l,c
 11317  010C60  0E02               	movlw	high _dbuf
 11318  010C62  203D               	addwfc	(btemp+11)^0,w,c
 11319  010C64  6EDA               	movwf	fsr2h,c
 11320  010C66  0E2E               	movlw	46
 11321  010C68  6EDF               	movwf	indf2,c
 11322                           
 11323                           ;stkvar	_n @ sp[(-56)+32]
 11324  010C6A  0EE8               	movlw	-24
 11325  010C6C  50E3               	movf	plusw1,w,c
 11326  010C6E  0F01               	addlw	1
 11327  010C70  6E32               	movwf	btemp^0,c
 11328  010C72  0EE8               	movlw	-24
 11329  010C74  0060  F0CB  FFE3   	movff	btemp,plusw1
 11330  010C7A  6A32               	clrf	btemp^0,c
 11331  010C7C  0EE9               	movlw	-23
 11332  010C7E  50E3               	movf	plusw1,w,c
 11333  010C80  2032               	addwfc	btemp^0,w,c
 11334  010C82  6E32               	movwf	btemp^0,c
 11335  010C84  0EE9               	movlw	-23
 11336  010C86  0060  F0CB  FFE3   	movff	btemp,plusw1
 11337                           
 11338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 11339                           ;stkvar	_w @ sp[(-56)+38]
 11340  010C8C  50E1               	movf	fsr1l,w,c
 11341  010C8E  0FEE               	addlw	-18
 11342  010C90  6ED9               	movwf	fsr2l,c
 11343  010C92  50E2               	movf	fsr1h,w,c
 11344  010C94  6EDA               	movwf	fsr2h,c
 11345  010C96  0EFF               	movlw	255
 11346  010C98  22DA               	addwfc	fsr2h,f,c
 11347  010C9A  06DE               	decf	postinc2,f,c
 11348  010C9C  0E00               	movlw	0
 11349  010C9E  5ADD               	subwfb	postdec2,f,c
 11350                           
 11351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 11352  010CA0  0E01               	movlw	1
 11353  010CA2  6E3C               	movwf	(btemp+10)^0,c
 11354  010CA4  0E00               	movlw	0
 11355  010CA6  6E3D               	movwf	(btemp+11)^0,c
 11356                           
 11357                           ;stkvar	_pp @ sp[(-56)+50]
 11358  010CA8  0EFA               	movlw	-6
 11359  010CAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11360  010CB0  0EFB               	movlw	-5
 11361  010CB2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11362  010CB8  D035               	goto	l10454
 11363  010CBA                     l10446:
 11364                           
 11365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 11366                           ;stkvar	_n @ sp[(-56)+32]
 11367  010CBA  0EE8               	movlw	-24
 11368  010CBC  006F FF8C  F03C    	movff	plusw1,btemp+10
 11369  010CC2  0EE9               	movlw	-23
 11370  010CC4  006F FF8C  F03D    	movff	plusw1,btemp+11
 11371  010CCA  0E40               	movlw	low _dbuf
 11372  010CCC  243C               	addwf	(btemp+10)^0,w,c
 11373  010CCE  6ED9               	movwf	fsr2l,c
 11374  010CD0  0E02               	movlw	high _dbuf
 11375  010CD2  203D               	addwfc	(btemp+11)^0,w,c
 11376  010CD4  6EDA               	movwf	fsr2h,c
 11377  010CD6  0E30               	movlw	48
 11378  010CD8  6EDF               	movwf	indf2,c
 11379                           
 11380                           ;stkvar	_n @ sp[(-56)+32]
 11381  010CDA  0EE8               	movlw	-24
 11382  010CDC  50E3               	movf	plusw1,w,c
 11383  010CDE  0F01               	addlw	1
 11384  010CE0  6E32               	movwf	btemp^0,c
 11385  010CE2  0EE8               	movlw	-24
 11386  010CE4  0060  F0CB  FFE3   	movff	btemp,plusw1
 11387  010CEA  6A32               	clrf	btemp^0,c
 11388  010CEC  0EE9               	movlw	-23
 11389  010CEE  50E3               	movf	plusw1,w,c
 11390  010CF0  2032               	addwfc	btemp^0,w,c
 11391  010CF2  6E32               	movwf	btemp^0,c
 11392  010CF4  0EE9               	movlw	-23
 11393  010CF6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11394                           
 11395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 11396                           ;stkvar	_w @ sp[(-56)+38]
 11397  010CFC  50E1               	movf	fsr1l,w,c
 11398  010CFE  0FEE               	addlw	-18
 11399  010D00  6ED9               	movwf	fsr2l,c
 11400  010D02  50E2               	movf	fsr1h,w,c
 11401  010D04  6EDA               	movwf	fsr2h,c
 11402  010D06  0EFF               	movlw	255
 11403  010D08  22DA               	addwfc	fsr2h,f,c
 11404  010D0A  06DE               	decf	postinc2,f,c
 11405  010D0C  0E00               	movlw	0
 11406  010D0E  5ADD               	subwfb	postdec2,f,c
 11407                           
 11408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 11409                           ;stkvar	_t @ sp[(-56)+52]
 11410  010D10  50E1               	movf	fsr1l,w,c
 11411  010D12  0FFC               	addlw	-4
 11412  010D14  6ED9               	movwf	fsr2l,c
 11413  010D16  50E2               	movf	fsr1h,w,c
 11414  010D18  6EDA               	movwf	fsr2h,c
 11415  010D1A  0EFF               	movlw	255
 11416  010D1C  22DA               	addwfc	fsr2h,f,c
 11417  010D1E  06DE               	decf	postinc2,f,c
 11418  010D20  0E00               	movlw	0
 11419  010D22  5ADD               	subwfb	postdec2,f,c
 11420  010D24                     l10454:
 11421                           
 11422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 11423                           ;stkvar	_t @ sp[(-56)+52]
 11424  010D24  0EFC               	movlw	-4
 11425  010D26  006F FF8C  F032    	movff	plusw1,btemp
 11426  010D2C  0EFD               	movlw	-3
 11427  010D2E  50E3               	movf	plusw1,w,c
 11428  010D30  1032               	iorwf	btemp^0,w,c
 11429  010D32  A4D8               	btfss	status,2,c
 11430  010D34  D7C2               	goto	l10446
 11431                           
 11432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 11433                           ;stkvar	_n @ sp[(-56)+32]
 11434  010D36  0EE8               	movlw	-24
 11435  010D38  006F FF8C  F03C    	movff	plusw1,btemp+10
 11436  010D3E  0EE9               	movlw	-23
 11437  010D40  006F FF8C  F03D    	movff	plusw1,btemp+11
 11438  010D46  0E40               	movlw	low _dbuf
 11439  010D48  243C               	addwf	(btemp+10)^0,w,c
 11440  010D4A  6ED9               	movwf	fsr2l,c
 11441  010D4C  0E02               	movlw	high _dbuf
 11442  010D4E  203D               	addwfc	(btemp+11)^0,w,c
 11443  010D50  6EDA               	movwf	fsr2h,c
 11444                           
 11445                           ;stkvar	_d @ sp[(-56)+44]
 11446  010D52  0EF4               	movlw	-12
 11447  010D54  50E3               	movf	plusw1,w,c
 11448  010D56  0F30               	addlw	48
 11449  010D58  6EDF               	movwf	indf2,c
 11450                           
 11451                           ;stkvar	_n @ sp[(-56)+32]
 11452  010D5A  0EE8               	movlw	-24
 11453  010D5C  50E3               	movf	plusw1,w,c
 11454  010D5E  0F01               	addlw	1
 11455  010D60  6E32               	movwf	btemp^0,c
 11456  010D62  0EE8               	movlw	-24
 11457  010D64  0060  F0CB  FFE3   	movff	btemp,plusw1
 11458  010D6A  6A32               	clrf	btemp^0,c
 11459  010D6C  0EE9               	movlw	-23
 11460  010D6E  50E3               	movf	plusw1,w,c
 11461  010D70  2032               	addwfc	btemp^0,w,c
 11462  010D72  6E32               	movwf	btemp^0,c
 11463  010D74  0EE9               	movlw	-23
 11464  010D76  0060  F0CB  FFE3   	movff	btemp,plusw1
 11465                           
 11466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 11467                           ;stkvar	_w @ sp[(-56)+38]
 11468  010D7C  50E1               	movf	fsr1l,w,c
 11469  010D7E  0FEE               	addlw	-18
 11470  010D80  6ED9               	movwf	fsr2l,c
 11471  010D82  50E2               	movf	fsr1h,w,c
 11472  010D84  6EDA               	movwf	fsr2h,c
 11473  010D86  0EFF               	movlw	255
 11474  010D88  22DA               	addwfc	fsr2h,f,c
 11475  010D8A  06DE               	decf	postinc2,f,c
 11476  010D8C  0E00               	movlw	0
 11477  010D8E  5ADD               	subwfb	postdec2,f,c
 11478  010D90                     l10462:
 11479                           
 11480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 11481                           ;stkvar	_u @ sp[(-56)+12]
 11482  010D90  0ED4               	movlw	-44
 11483  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 11484  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 11485  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11486  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 11487                           
 11488                           ;stkvar	_l @ sp[(-60)+20]
 11489  010DAA  0ED8               	movlw	-40
 11490  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 11491  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 11492  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 11493  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 11494  010DC4  ECC1  F08E         	call	___flmul	;wreg free
 11495  010DC8  0060  F0CB  FFE6   	movff	btemp,postinc1
 11496  010DCE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11497  010DD4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11498  010DDA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11499                           
 11500                           ;stkvar	_h @ sp[(-60)+24]
 11501  010DE0  0EDC               	movlw	-36
 11502  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 11503  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 11504  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 11505  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 11506  010DFA  ECEF  F0BC         	call	___flsub	;wreg free
 11507                           
 11508                           ;stkvar	_h @ sp[(-56)+24]
 11509  010DFE  0EE0               	movlw	-32
 11510  010E00  0060  F0CB  FFE3   	movff	btemp,plusw1
 11511  010E06  0EE1               	movlw	-31
 11512  010E08  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11513  010E0E  0EE2               	movlw	-30
 11514  010E10  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11515  010E16  0EE3               	movlw	-29
 11516  010E18  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11517                           
 11518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 11519  010E1E  0E00               	movlw	0
 11520  010E20  6EE6               	movwf	postinc1,c
 11521  010E22  0E00               	movlw	0
 11522  010E24  6EE6               	movwf	postinc1,c
 11523  010E26  0E20               	movlw	32
 11524  010E28  6EE6               	movwf	postinc1,c
 11525  010E2A  0E41               	movlw	65
 11526  010E2C  6EE6               	movwf	postinc1,c
 11527                           
 11528                           ;stkvar	_u @ sp[(-60)+12]
 11529  010E2E  0ED0               	movlw	-48
 11530  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 11531  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 11532  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11533  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 11534  010E48  ECB4  F096         	call	___fldiv	;wreg free
 11535                           
 11536                           ;stkvar	_u @ sp[(-56)+12]
 11537  010E4C  0ED4               	movlw	-44
 11538  010E4E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11539  010E54  0ED5               	movlw	-43
 11540  010E56  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11541  010E5C  0ED6               	movlw	-42
 11542  010E5E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11543  010E64  0ED7               	movlw	-41
 11544  010E66  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11545                           
 11546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 11547                           ;stkvar	_ne @ sp[(-56)+46]
 11548  010E6C  50E1               	movf	fsr1l,w,c
 11549  010E6E  0FF6               	addlw	-10
 11550  010E70  6ED9               	movwf	fsr2l,c
 11551  010E72  50E2               	movf	fsr1h,w,c
 11552  010E74  6EDA               	movwf	fsr2h,c
 11553  010E76  0EFF               	movlw	255
 11554  010E78  22DA               	addwfc	fsr2h,f,c
 11555  010E7A  06DE               	decf	postinc2,f,c
 11556  010E7C  0E00               	movlw	0
 11557  010E7E  5ADD               	subwfb	postdec2,f,c
 11558                           
 11559                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 11560                           ;stkvar	_i @ sp[(-56)+36]
 11561  010E80  0EEC               	movlw	-20
 11562  010E82  50E3               	movf	plusw1,w,c
 11563  010E84  0F01               	addlw	1
 11564  010E86  6E32               	movwf	btemp^0,c
 11565  010E88  0EEC               	movlw	-20
 11566  010E8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11567  010E90  6A32               	clrf	btemp^0,c
 11568  010E92  0EED               	movlw	-19
 11569  010E94  50E3               	movf	plusw1,w,c
 11570  010E96  2032               	addwfc	btemp^0,w,c
 11571  010E98  6E32               	movwf	btemp^0,c
 11572  010E9A  0EED               	movlw	-19
 11573  010E9C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11574  010EA2                     l10470:
 11575                           
 11576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11577                           ;stkvar	_m @ sp[(-56)+48]
 11578                           ;stkvar	_i @ sp[(-56)+36]
 11579  010EA2  50E1               	movf	fsr1l,w,c
 11580  010EA4  0FEC               	addlw	-20
 11581  010EA6  6ED9               	movwf	fsr2l,c
 11582  010EA8  50E2               	movf	fsr1h,w,c
 11583  010EAA  6EDA               	movwf	fsr2h,c
 11584  010EAC  0EFF               	movlw	255
 11585  010EAE  22DA               	addwfc	fsr2h,f,c
 11586  010EB0  0EF8               	movlw	-8
 11587  010EB2  50E3               	movf	plusw1,w,c
 11588  010EB4  5CDE               	subwf	postinc2,w,c
 11589  010EB6  50DE               	movf	postinc2,w,c
 11590  010EB8  0A80               	xorlw	128
 11591  010EBA  6E32               	movwf	btemp^0,c
 11592  010EBC  0EF9               	movlw	-7
 11593  010EBE  50E3               	movf	plusw1,w,c
 11594  010EC0  0A80               	xorlw	128
 11595  010EC2  5832               	subwfb	btemp^0,w,c
 11596  010EC4  B0D8               	btfsc	status,0,c
 11597  010EC6  D00E               	goto	u11240
 11598                           
 11599                           ;stkvar	_n @ sp[(-56)+32]
 11600  010EC8  0EE9               	movlw	-23
 11601  010ECA  BEE3               	btfsc	plusw1,7,c
 11602  010ECC  D633               	goto	l10420
 11603  010ECE  0EE9               	movlw	-23
 11604  010ED0  50E3               	movf	plusw1,w,c
 11605  010ED2  E108               	bnz	u11240
 11606  010ED4  0EE8               	movlw	-24
 11607  010ED6  006F FF8C  F032    	movff	plusw1,btemp
 11608  010EDC  0E4B               	movlw	75
 11609  010EDE  5E32               	subwf	btemp^0,f,c
 11610  010EE0  A0D8               	btfss	status,0,c
 11611  010EE2  D628               	goto	l10420
 11612  010EE4                     u11240:
 11613                           
 11614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 11615                           ;stkvar	_pp @ sp[(-56)+50]
 11616  010EE4  0EFA               	movlw	-6
 11617  010EE6  006F FF8C  F032    	movff	plusw1,btemp
 11618  010EEC  0EFB               	movlw	-5
 11619  010EEE  50E3               	movf	plusw1,w,c
 11620  010EF0  1032               	iorwf	btemp^0,w,c
 11621  010EF2  B4D8               	btfsc	status,2,c
 11622  010EF4  A81F               	btfss	_flags^0,4,c
 11623  010EF6  D021               	goto	l10482
 11624                           
 11625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 11626                           ;stkvar	_n @ sp[(-56)+32]
 11627  010EF8  0EE8               	movlw	-24
 11628  010EFA  006F FF8C  F03C    	movff	plusw1,btemp+10
 11629  010F00  0EE9               	movlw	-23
 11630  010F02  006F FF8C  F03D    	movff	plusw1,btemp+11
 11631  010F08  0E40               	movlw	low _dbuf
 11632  010F0A  243C               	addwf	(btemp+10)^0,w,c
 11633  010F0C  6ED9               	movwf	fsr2l,c
 11634  010F0E  0E02               	movlw	high _dbuf
 11635  010F10  203D               	addwfc	(btemp+11)^0,w,c
 11636  010F12  6EDA               	movwf	fsr2h,c
 11637  010F14  0E2E               	movlw	46
 11638  010F16  6EDF               	movwf	indf2,c
 11639                           
 11640                           ;stkvar	_n @ sp[(-56)+32]
 11641  010F18  0EE8               	movlw	-24
 11642  010F1A  50E3               	movf	plusw1,w,c
 11643  010F1C  0F01               	addlw	1
 11644  010F1E  6E32               	movwf	btemp^0,c
 11645  010F20  0EE8               	movlw	-24
 11646  010F22  0060  F0CB  FFE3   	movff	btemp,plusw1
 11647  010F28  6A32               	clrf	btemp^0,c
 11648  010F2A  0EE9               	movlw	-23
 11649  010F2C  50E3               	movf	plusw1,w,c
 11650  010F2E  2032               	addwfc	btemp^0,w,c
 11651  010F30  6E32               	movwf	btemp^0,c
 11652  010F32  0EE9               	movlw	-23
 11653  010F34  0060  F0CB  FFE3   	movff	btemp,plusw1
 11654  010F3A                     l10482:
 11655                           
 11656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 11657                           ;stkvar	_n @ sp[(-56)+32]
 11658  010F3A  0EE8               	movlw	-24
 11659  010F3C  006F FF8C  F03C    	movff	plusw1,btemp+10
 11660  010F42  0EE9               	movlw	-23
 11661  010F44  006F FF8C  F03D    	movff	plusw1,btemp+11
 11662  010F4A  0E40               	movlw	low _dbuf
 11663  010F4C  243C               	addwf	(btemp+10)^0,w,c
 11664  010F4E  6ED9               	movwf	fsr2l,c
 11665  010F50  0E02               	movlw	high _dbuf
 11666  010F52  203D               	addwfc	(btemp+11)^0,w,c
 11667  010F54  6EDA               	movwf	fsr2h,c
 11668  010F56  0E00               	movlw	0
 11669  010F58  6EDF               	movwf	indf2,c
 11670                           
 11671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 11672                           ;stkvar	_nmode @ sp[(-56)+55]
 11673  010F5A  0EFF               	movlw	-1
 11674  010F5C  006F FF8C  F032    	movff	plusw1,btemp
 11675  010F62  0E65               	movlw	101
 11676  010F64  1832               	xorwf	btemp^0,w,c
 11677  010F66  A4D8               	btfss	status,2,c
 11678  010F68  EF16  F081         	goto	l10286
 11679                           
 11680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 11681  010F6C  0E4F               	movlw	79
 11682  010F6E  6E3C               	movwf	(btemp+10)^0,c
 11683  010F70  0E00               	movlw	0
 11684  010F72  6E3D               	movwf	(btemp+11)^0,c
 11685                           
 11686                           ;stkvar	_i @ sp[(-56)+36]
 11687  010F74  0EEC               	movlw	-20
 11688  010F76  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11689  010F7C  0EED               	movlw	-19
 11690  010F7E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11691                           
 11692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 11693                           ;stkvar	_i @ sp[(-56)+36]
 11694  010F84  0EEC               	movlw	-20
 11695  010F86  006F FF8C  F03C    	movff	plusw1,btemp+10
 11696  010F8C  0EED               	movlw	-19
 11697  010F8E  006F FF8C  F03D    	movff	plusw1,btemp+11
 11698  010F94  0E40               	movlw	low _dbuf
 11699  010F96  243C               	addwf	(btemp+10)^0,w,c
 11700  010F98  6ED9               	movwf	fsr2l,c
 11701  010F9A  0E02               	movlw	high _dbuf
 11702  010F9C  203D               	addwfc	(btemp+11)^0,w,c
 11703  010F9E  6EDA               	movwf	fsr2h,c
 11704  010FA0  0E00               	movlw	0
 11705  010FA2  6EDF               	movwf	indf2,c
 11706                           
 11707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 11708                           ;stkvar	_sign @ sp[(-56)+42]
 11709  010FA4  0EF2               	movlw	-14
 11710  010FA6  6AE3               	clrf	plusw1,c
 11711  010FA8  0EF3               	movlw	-13
 11712  010FAA  6AE3               	clrf	plusw1,c
 11713                           
 11714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 11715                           ;stkvar	_e @ sp[(-56)+34]
 11716  010FAC  0EEB               	movlw	-21
 11717  010FAE  AEE3               	btfss	plusw1,7,c
 11718  010FB0  D012               	goto	l10496
 11719                           
 11720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 11721  010FB2  0E01               	movlw	1
 11722  010FB4  6E3C               	movwf	(btemp+10)^0,c
 11723  010FB6  0E00               	movlw	0
 11724  010FB8  6E3D               	movwf	(btemp+11)^0,c
 11725                           
 11726                           ;stkvar	_sign @ sp[(-56)+42]
 11727  010FBA  0EF2               	movlw	-14
 11728  010FBC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11729  010FC2  0EF3               	movlw	-13
 11730  010FC4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11731                           
 11732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 11733                           ;stkvar	_e @ sp[(-56)+34]
 11734                           ;stkvar	_e @ sp[(-56)+34]
 11735  010FCA  0EEA               	movlw	-22
 11736  010FCC  6CE3               	negf	plusw1,c
 11737  010FCE  0EEB               	movlw	-21
 11738  010FD0  1EE3               	comf	plusw1,f,c
 11739  010FD2  B0D8               	btfsc	status,0,c
 11740  010FD4  2AE3               	incf	plusw1,f,c
 11741  010FD6                     l10496:
 11742                           
 11743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 11744  010FD6  0E02               	movlw	2
 11745  010FD8  6E3C               	movwf	(btemp+10)^0,c
 11746  010FDA  0E00               	movlw	0
 11747  010FDC  6E3D               	movwf	(btemp+11)^0,c
 11748                           
 11749                           ;stkvar	_p @ sp[(-56)+40]
 11750  010FDE  0EF0               	movlw	-16
 11751  010FE0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11752  010FE6  0EF1               	movlw	-15
 11753  010FE8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11754                           
 11755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11756  010FEE  D051               	goto	l10508
 11757  010FF0                     l10498:
 11758                           
 11759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 11760                           ;stkvar	_i @ sp[(-56)+36]
 11761  010FF0  50E1               	movf	fsr1l,w,c
 11762  010FF2  0FEC               	addlw	-20
 11763  010FF4  6ED9               	movwf	fsr2l,c
 11764  010FF6  50E2               	movf	fsr1h,w,c
 11765  010FF8  6EDA               	movwf	fsr2h,c
 11766  010FFA  0EFF               	movlw	255
 11767  010FFC  22DA               	addwfc	fsr2h,f,c
 11768  010FFE  06DE               	decf	postinc2,f,c
 11769  011000  0E00               	movlw	0
 11770  011002  5ADD               	subwfb	postdec2,f,c
 11771                           
 11772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 11773                           ;stkvar	_i @ sp[(-56)+36]
 11774  011004  0EEC               	movlw	-20
 11775  011006  006F FF8C  F03C    	movff	plusw1,btemp+10
 11776  01100C  0EED               	movlw	-19
 11777  01100E  006F FF8C  F03D    	movff	plusw1,btemp+11
 11778  011014  0E40               	movlw	low _dbuf
 11779  011016  243C               	addwf	(btemp+10)^0,w,c
 11780  011018  6ED9               	movwf	fsr2l,c
 11781  01101A  0E02               	movlw	high _dbuf
 11782  01101C  203D               	addwfc	(btemp+11)^0,w,c
 11783  01101E  6EDA               	movwf	fsr2h,c
 11784  011020  0E0A               	movlw	10
 11785  011022  6EE6               	movwf	postinc1,c
 11786  011024  0E00               	movlw	0
 11787  011026  6EE6               	movwf	postinc1,c
 11788                           
 11789                           ;stkvar	_e @ sp[(-58)+34]
 11790  011028  0EE8               	movlw	-24
 11791  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 11792  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 11793  011036  EC81  F0B2         	call	___awmod	;wreg free
 11794  01103A  5032               	movf	btemp^0,w,c
 11795  01103C  0F30               	addlw	48
 11796  01103E  6EDF               	movwf	indf2,c
 11797                           
 11798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 11799  011040  0E0A               	movlw	10
 11800  011042  6EE6               	movwf	postinc1,c
 11801  011044  0E00               	movlw	0
 11802  011046  6EE6               	movwf	postinc1,c
 11803                           
 11804                           ;stkvar	_e @ sp[(-58)+34]
 11805  011048  0EE8               	movlw	-24
 11806  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 11807  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 11808  011056  EC0D  F0B0         	call	___awdiv	;wreg free
 11809                           
 11810                           ;stkvar	_e @ sp[(-56)+34]
 11811  01105A  0EEA               	movlw	-22
 11812  01105C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11813  011062  0EEB               	movlw	-21
 11814  011064  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11815                           
 11816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 11817                           ;stkvar	_p @ sp[(-56)+40]
 11818  01106A  50E1               	movf	fsr1l,w,c
 11819  01106C  0FF0               	addlw	-16
 11820  01106E  6ED9               	movwf	fsr2l,c
 11821  011070  50E2               	movf	fsr1h,w,c
 11822  011072  6EDA               	movwf	fsr2h,c
 11823  011074  0EFF               	movlw	255
 11824  011076  22DA               	addwfc	fsr2h,f,c
 11825  011078  06DE               	decf	postinc2,f,c
 11826  01107A  0E00               	movlw	0
 11827  01107C  5ADD               	subwfb	postdec2,f,c
 11828                           
 11829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 11830                           ;stkvar	_w @ sp[(-56)+38]
 11831  01107E  50E1               	movf	fsr1l,w,c
 11832  011080  0FEE               	addlw	-18
 11833  011082  6ED9               	movwf	fsr2l,c
 11834  011084  50E2               	movf	fsr1h,w,c
 11835  011086  6EDA               	movwf	fsr2h,c
 11836  011088  0EFF               	movlw	255
 11837  01108A  22DA               	addwfc	fsr2h,f,c
 11838  01108C  06DE               	decf	postinc2,f,c
 11839  01108E  0E00               	movlw	0
 11840  011090  5ADD               	subwfb	postdec2,f,c
 11841  011092                     l10508:
 11842                           
 11843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11844                           ;stkvar	_e @ sp[(-56)+34]
 11845  011092  0EEA               	movlw	-22
 11846  011094  006F FF8C  F032    	movff	plusw1,btemp
 11847  01109A  0EEB               	movlw	-21
 11848  01109C  50E3               	movf	plusw1,w,c
 11849  01109E  1032               	iorwf	btemp^0,w,c
 11850  0110A0  A4D8               	btfss	status,2,c
 11851  0110A2  D7A6               	goto	l10498
 11852                           
 11853                           ;stkvar	_p @ sp[(-56)+40]
 11854  0110A4  0EF1               	movlw	-15
 11855  0110A6  BEE3               	btfsc	plusw1,7,c
 11856  0110A8  D007               	goto	u11300
 11857  0110AA  0EF1               	movlw	-15
 11858  0110AC  50E3               	movf	plusw1,w,c
 11859  0110AE  E1A0               	bnz	l10498
 11860  0110B0  0EF0               	movlw	-16
 11861  0110B2  04E3               	decf	plusw1,w,c
 11862  0110B4  B0D8               	btfsc	status,0,c
 11863  0110B6  D79C               	goto	l10498
 11864  0110B8                     u11300:
 11865                           
 11866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 11867                           ;stkvar	_i @ sp[(-56)+36]
 11868  0110B8  50E1               	movf	fsr1l,w,c
 11869  0110BA  0FEC               	addlw	-20
 11870  0110BC  6ED9               	movwf	fsr2l,c
 11871  0110BE  50E2               	movf	fsr1h,w,c
 11872  0110C0  6EDA               	movwf	fsr2h,c
 11873  0110C2  0EFF               	movlw	255
 11874  0110C4  22DA               	addwfc	fsr2h,f,c
 11875  0110C6  06DE               	decf	postinc2,f,c
 11876  0110C8  0E00               	movlw	0
 11877  0110CA  5ADD               	subwfb	postdec2,f,c
 11878                           
 11879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 11880                           ;stkvar	_sign @ sp[(-56)+42]
 11881  0110CC  0EF2               	movlw	-14
 11882  0110CE  006F FF8C  F032    	movff	plusw1,btemp
 11883  0110D4  0EF3               	movlw	-13
 11884  0110D6  50E3               	movf	plusw1,w,c
 11885  0110D8  1032               	iorwf	btemp^0,w,c
 11886  0110DA  A4D8               	btfss	status,2,c
 11887  0110DC  D002               	goto	l10518
 11888  0110DE  0E2B               	movlw	43
 11889  0110E0  D001               	goto	L9
 11890  0110E2                     l10518:
 11891  0110E2  0E2D               	movlw	45
 11892  0110E4                     L9:
 11893  0110E4  6E3C               	movwf	(btemp+10)^0,c
 11894  0110E6  0E00               	movlw	0
 11895  0110E8  6E3D               	movwf	(btemp+11)^0,c
 11896                           
 11897                           ;stkvar	_efgtoa$4366 @ sp[(-56)+4]
 11898  0110EA  0ECC               	movlw	-52
 11899  0110EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11900  0110F2  0ECD               	movlw	-51
 11901  0110F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11902                           
 11903                           ;stkvar	_efgtoa$4366 @ sp[(-56)+4]
 11904                           ;stkvar	_i @ sp[(-56)+36]
 11905  0110FA  0EEC               	movlw	-20
 11906  0110FC  006F FF8C  F03C    	movff	plusw1,btemp+10
 11907  011102  0EED               	movlw	-19
 11908  011104  006F FF8C  F03D    	movff	plusw1,btemp+11
 11909  01110A  0E40               	movlw	low _dbuf
 11910  01110C  243C               	addwf	(btemp+10)^0,w,c
 11911  01110E  6ED9               	movwf	fsr2l,c
 11912  011110  0E02               	movlw	high _dbuf
 11913  011112  203D               	addwfc	(btemp+11)^0,w,c
 11914  011114  6EDA               	movwf	fsr2h,c
 11915  011116  0ECC               	movlw	-52
 11916  011118  006F FF8F FFDF     	movff	plusw1,indf2
 11917                           
 11918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 11919                           ;stkvar	_w @ sp[(-56)+38]
 11920  01111E  50E1               	movf	fsr1l,w,c
 11921  011120  0FEE               	addlw	-18
 11922  011122  6ED9               	movwf	fsr2l,c
 11923  011124  50E2               	movf	fsr1h,w,c
 11924  011126  6EDA               	movwf	fsr2h,c
 11925  011128  0EFF               	movlw	255
 11926  01112A  22DA               	addwfc	fsr2h,f,c
 11927  01112C  06DE               	decf	postinc2,f,c
 11928  01112E  0E00               	movlw	0
 11929  011130  5ADD               	subwfb	postdec2,f,c
 11930                           
 11931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 11932                           ;stkvar	_i @ sp[(-56)+36]
 11933  011132  50E1               	movf	fsr1l,w,c
 11934  011134  0FEC               	addlw	-20
 11935  011136  6ED9               	movwf	fsr2l,c
 11936  011138  50E2               	movf	fsr1h,w,c
 11937  01113A  6EDA               	movwf	fsr2h,c
 11938  01113C  0EFF               	movlw	255
 11939  01113E  22DA               	addwfc	fsr2h,f,c
 11940  011140  06DE               	decf	postinc2,f,c
 11941  011142  0E00               	movlw	0
 11942  011144  5ADD               	subwfb	postdec2,f,c
 11943  011146  0EBF               	movlw	191
 11944  011148  6E3C               	movwf	(btemp+10)^0,c
 11945  01114A  0EFF               	movlw	255
 11946  01114C  6E3D               	movwf	(btemp+11)^0,c
 11947                           
 11948                           ;stkvar	_c @ sp[(-56)+-7]
 11949  01114E  0EC1               	movlw	-63
 11950  011150  50E3               	movf	plusw1,w,c
 11951  011152  6E3A               	movwf	(btemp+8)^0,c
 11952  011154  6A3B               	clrf	(btemp+9)^0,c
 11953  011156  503C               	movf	(btemp+10)^0,w,c
 11954  011158  263A               	addwf	(btemp+8)^0,f,c
 11955  01115A  503D               	movf	(btemp+11)^0,w,c
 11956  01115C  223B               	addwfc	(btemp+9)^0,f,c
 11957  01115E  503B               	movf	(btemp+9)^0,w,c
 11958  011160  E106               	bnz	u11320
 11959  011162  0E1A               	movlw	26
 11960  011164  5C3A               	subwf	(btemp+8)^0,w,c
 11961  011166  B0D8               	btfsc	status,0,c
 11962  011168  D002               	goto	u11320
 11963  01116A  0E01               	movlw	1
 11964  01116C  D001               	goto	u11330
 11965  01116E                     u11320:
 11966  01116E  0E00               	movlw	0
 11967  011170                     u11330:
 11968  011170  6E3C               	movwf	(btemp+10)^0,c
 11969  011172  6A3D               	clrf	(btemp+11)^0,c
 11970                           
 11971                           ;stkvar	_efgtoa$4368 @ sp[(-56)+0]
 11972  011174  0EC8               	movlw	-56
 11973  011176  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11974  01117C  0EC9               	movlw	-55
 11975  01117E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11976                           
 11977                           ;stkvar	_efgtoa$4368 @ sp[(-56)+0]
 11978  011184  0EC8               	movlw	-56
 11979  011186  006F FF8C  F032    	movff	plusw1,btemp
 11980  01118C  0EC9               	movlw	-55
 11981  01118E  50E3               	movf	plusw1,w,c
 11982  011190  1032               	iorwf	btemp^0,w,c
 11983  011192  A4D8               	btfss	status,2,c
 11984  011194  D002               	goto	l10534
 11985  011196  0E65               	movlw	101
 11986  011198  D001               	goto	L10
 11987  01119A                     l10534:
 11988  01119A  0E45               	movlw	69
 11989  01119C                     L10:
 11990  01119C  6E3C               	movwf	(btemp+10)^0,c
 11991  01119E  0E00               	movlw	0
 11992  0111A0  6E3D               	movwf	(btemp+11)^0,c
 11993                           
 11994                           ;stkvar	_efgtoa$4367 @ sp[(-56)+2]
 11995  0111A2  0ECA               	movlw	-54
 11996  0111A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11997  0111AA  0ECB               	movlw	-53
 11998  0111AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11999                           
 12000                           ;stkvar	_efgtoa$4367 @ sp[(-56)+2]
 12001                           ;stkvar	_i @ sp[(-56)+36]
 12002  0111B2  0EEC               	movlw	-20
 12003  0111B4  006F FF8C  F03C    	movff	plusw1,btemp+10
 12004  0111BA  0EED               	movlw	-19
 12005  0111BC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12006  0111C2  0E40               	movlw	low _dbuf
 12007  0111C4  243C               	addwf	(btemp+10)^0,w,c
 12008  0111C6  6ED9               	movwf	fsr2l,c
 12009  0111C8  0E02               	movlw	high _dbuf
 12010  0111CA  203D               	addwfc	(btemp+11)^0,w,c
 12011  0111CC  6EDA               	movwf	fsr2h,c
 12012  0111CE  0ECA               	movlw	-54
 12013  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 12014                           
 12015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 12016                           ;stkvar	_w @ sp[(-56)+38]
 12017  0111D6  50E1               	movf	fsr1l,w,c
 12018  0111D8  0FEE               	addlw	-18
 12019  0111DA  6ED9               	movwf	fsr2l,c
 12020  0111DC  50E2               	movf	fsr1h,w,c
 12021  0111DE  6EDA               	movwf	fsr2h,c
 12022  0111E0  0EFF               	movlw	255
 12023  0111E2  22DA               	addwfc	fsr2h,f,c
 12024  0111E4  06DE               	decf	postinc2,f,c
 12025  0111E6  0E00               	movlw	0
 12026  0111E8  5ADD               	subwfb	postdec2,f,c
 12027                           
 12028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 12029                           ;stkvar	_i @ sp[(-56)+36]
 12030  0111EA  0EEC               	movlw	-20
 12031  0111EC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12032  0111F2  0EED               	movlw	-19
 12033  0111F4  006F FF8C  F03D    	movff	plusw1,btemp+11
 12034  0111FA  0E40               	movlw	low _dbuf
 12035  0111FC  243C               	addwf	(btemp+10)^0,w,c
 12036  0111FE  6E3A               	movwf	(btemp+8)^0,c
 12037  011200  0E02               	movlw	high _dbuf
 12038  011202  203D               	addwfc	(btemp+11)^0,w,c
 12039  011204  6E3B               	movwf	(btemp+9)^0,c
 12040  011206  0060  F0EB  FFE6   	movff	btemp+8,postinc1
 12041  01120C  0060  F0EF  FFE6   	movff	btemp+9,postinc1
 12042                           
 12043                           ;stkvar	_n @ sp[(-58)+32]
 12044  011212  0E40               	movlw	low _dbuf
 12045  011214  6E3C               	movwf	(btemp+10)^0,c
 12046  011216  0E02               	movlw	high _dbuf
 12047  011218  6E3D               	movwf	(btemp+11)^0,c
 12048  01121A  0EE6               	movlw	-26
 12049  01121C  50E3               	movf	plusw1,w,c
 12050  01121E  263C               	addwf	(btemp+10)^0,f,c
 12051  011220  0EE7               	movlw	-25
 12052  011222  50E3               	movf	plusw1,w,c
 12053  011224  223D               	addwfc	(btemp+11)^0,f,c
 12054  011226  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 12055  01122C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 12056  011232  EC92  F0B5         	call	_strcpy	;wreg free
 12057  011236  EF16  F081         	goto	l10286
 12058  01123A                     l1859:
 12059                           
 12060                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 12061  01123A  0EC1               	movlw	193
 12062  01123C  26E1               	addwf	fsr1l,f,c
 12063  01123E  0EFF               	movlw	255
 12064  011240  22E2               	addwfc	fsr1h,f,c
 12065  011242  0012               	return		;funcret
 12066  011244                     __end_of_efgtoa:
 12067                           	opt callstack 0
 12068                           
 12069 ;; *************** function _tolower *****************
 12070 ;; Defined at:
 12071 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 12072 ;; Parameters:    Size  Location     Type
 12073 ;;  c               2  [STACK] int 
 12074 ;; Auto vars:     Size  Location     Type
 12075 ;;		None
 12076 ;; Return value:  Size  Location     Type
 12077 ;;                  2  [STACK] int 
 12078 ;; Registers used:
 12079 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12080 ;; Tracked objects:
 12081 ;;		On entry : 0/5
 12082 ;;		On exit  : 0/0
 12083 ;;		Unchanged: 0/0
 12084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12089 ;;Total ram usage:        0 bytes
 12090 ;; Hardware stack levels used:    1
 12091 ;; Hardware stack levels required when called:    7
 12092 ;; This function calls:
 12093 ;;		_isupper
 12094 ;; This function is called by:
 12095 ;;		_efgtoa
 12096 ;;		_vfpfcnvrt
 12097 ;; This function uses a reentrant model
 12098 ;;
 12099                           
 12100                           	psect	text44
 12101  0172DA                     __ptext44:
 12102                           	opt callstack 0
 12103  0172DA                     _tolower:
 12104                           	opt callstack 0
 12105                           
 12106                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12107  0172DA  52E6               	movf	postinc1,f,c
 12108  0172DC  52E6               	movf	postinc1,f,c
 12109                           
 12110                           ;stkvar	_c @ sp[(-2)+-2]
 12111                           
 12112                           ;incstack = 0
 12113  0172DE  0EFC               	movlw	-4
 12114  0172E0  50E3               	movf	plusw1,w,c
 12115  0172E2  0FBF               	addlw	191
 12116  0172E4  6E3C               	movwf	(btemp+10)^0,c
 12117  0172E6  0EFD               	movlw	-3
 12118  0172E8  006F FF8C  F03D    	movff	plusw1,btemp+11
 12119  0172EE  0EFF               	movlw	255
 12120  0172F0  223D               	addwfc	(btemp+11)^0,f,c
 12121  0172F2  503D               	movf	(btemp+11)^0,w,c
 12122  0172F4  E106               	bnz	u9410
 12123  0172F6  0E1A               	movlw	26
 12124  0172F8  5C3C               	subwf	(btemp+10)^0,w,c
 12125  0172FA  B0D8               	btfsc	status,0,c
 12126  0172FC  D002               	goto	u9410
 12127  0172FE  0E01               	movlw	1
 12128  017300  D001               	goto	u9420
 12129  017302                     u9410:
 12130  017302  0E00               	movlw	0
 12131  017304                     u9420:
 12132  017304  6E3C               	movwf	(btemp+10)^0,c
 12133  017306  6A3D               	clrf	(btemp+11)^0,c
 12134                           
 12135                           ;stkvar	_tolower$5034 @ sp[(-2)+0]
 12136  017308  0EFE               	movlw	-2
 12137  01730A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12138  017310  0EFF               	movlw	-1
 12139  017312  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12140                           
 12141                           ;stkvar	_tolower$5034 @ sp[(-2)+0]
 12142  017318  0EFE               	movlw	-2
 12143  01731A  006F FF8C  F032    	movff	plusw1,btemp
 12144  017320  0EFF               	movlw	-1
 12145  017322  50E3               	movf	plusw1,w,c
 12146  017324  1032               	iorwf	btemp^0,w,c
 12147  017326  B4D8               	btfsc	status,2,c
 12148  017328  D00D               	goto	l9512
 12149                           
 12150                           ;stkvar	_c @ sp[(-2)+-2]
 12151  01732A  0EFC               	movlw	-4
 12152  01732C  006F FF8C  F032    	movff	plusw1,btemp
 12153  017332  0EFD               	movlw	-3
 12154  017334  006F FF8C  F033    	movff	plusw1,btemp+1
 12155  01733A  0E20               	movlw	32
 12156  01733C  1232               	iorwf	btemp^0,f,c
 12157  01733E  0E00               	movlw	0
 12158  017340  1233               	iorwf	(btemp+1)^0,f,c
 12159  017342  D008               	goto	l2882
 12160  017344                     l9512:
 12161                           
 12162                           ;stkvar	_c @ sp[(-2)+-2]
 12163  017344  0EFC               	movlw	-4
 12164  017346  006F FF8C  F032    	movff	plusw1,btemp
 12165  01734C  0EFD               	movlw	-3
 12166  01734E  006F FF8C  F033    	movff	plusw1,btemp+1
 12167  017354                     l2882:
 12168                           
 12169                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12170  017354  52E5               	movf	postdec1,f,c
 12171  017356  52E5               	movf	postdec1,f,c
 12172  017358  52E5               	movf	postdec1,f,c
 12173  01735A  52E5               	movf	postdec1,f,c
 12174  01735C  0012               	return		;funcret
 12175  01735E                     __end_of_tolower:
 12176                           	opt callstack 0
 12177                           
 12178 ;; *************** function _isupper *****************
 12179 ;; Defined at:
 12180 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 12181 ;; Parameters:    Size  Location     Type
 12182 ;;  c               2  [STACK] int 
 12183 ;; Auto vars:     Size  Location     Type
 12184 ;;		None
 12185 ;; Return value:  Size  Location     Type
 12186 ;;                  2  [STACK] int 
 12187 ;; Registers used:
 12188 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 12189 ;; Tracked objects:
 12190 ;;		On entry : 0/0
 12191 ;;		On exit  : 0/0
 12192 ;;		Unchanged: 0/0
 12193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12198 ;;Total ram usage:        0 bytes
 12199 ;; Hardware stack levels used:    1
 12200 ;; Hardware stack levels required when called:    6
 12201 ;; This function calls:
 12202 ;;		Nothing
 12203 ;; This function is called by:
 12204 ;;		_efgtoa
 12205 ;;		_xtoa
 12206 ;;		_vfpfcnvrt
 12207 ;;		_tolower
 12208 ;; This function uses a reentrant model
 12209 ;;
 12210                           
 12211                           	psect	text45
 12212  017DBA                     __ptext45:
 12213                           	opt callstack 0
 12214  017DBA                     _isupper:
 12215                           	opt callstack 17
 12216                           
 12217                           ;stkvar	_c @ sp[(0)+-2]
 12218                           
 12219                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12220                           ;incstack = 0
 12221  017DBA  0EFE               	movlw	-2
 12222  017DBC  50E3               	movf	plusw1,w,c
 12223  017DBE  0FBF               	addlw	191
 12224  017DC0  6E3C               	movwf	(btemp+10)^0,c
 12225  017DC2  0EFF               	movlw	-1
 12226  017DC4  006F FF8C  F03D    	movff	plusw1,btemp+11
 12227  017DCA  0EFF               	movlw	255
 12228  017DCC  223D               	addwfc	(btemp+11)^0,f,c
 12229  017DCE  503D               	movf	(btemp+11)^0,w,c
 12230  017DD0  E106               	bnz	u8810
 12231  017DD2  0E1A               	movlw	26
 12232  017DD4  5C3C               	subwf	(btemp+10)^0,w,c
 12233  017DD6  B0D8               	btfsc	status,0,c
 12234  017DD8  D002               	goto	u8810
 12235  017DDA  0E01               	movlw	1
 12236  017DDC  D001               	goto	u8820
 12237  017DDE                     u8810:
 12238  017DDE  0E00               	movlw	0
 12239  017DE0                     u8820:
 12240  017DE0  6E32               	movwf	btemp^0,c
 12241  017DE2  6A33               	clrf	(btemp+1)^0,c
 12242                           
 12243                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12244  017DE4  52E5               	movf	postdec1,f,c
 12245  017DE6  52E5               	movf	postdec1,f,c
 12246  017DE8  0012               	return		;funcret
 12247  017DEA                     __end_of_isupper:
 12248                           	opt callstack 0
 12249                           
 12250 ;; *************** function _strcpy *****************
 12251 ;; Defined at:
 12252 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 12253 ;; Parameters:    Size  Location     Type
 12254 ;;  dest            2  [STACK] PTR unsigned char 
 12255 ;;		 -> dbuf(80), 
 12256 ;;  src             2  [STACK] PTR const unsigned char 
 12257 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 12258 ;;		 -> dbuf(80), 
 12259 ;; Auto vars:     Size  Location     Type
 12260 ;;  d               2  [STACK] PTR unsigned char 
 12261 ;;		 -> dbuf(80), 
 12262 ;;  s               2  [STACK] PTR const unsigned char 
 12263 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 12264 ;;		 -> dbuf(80), 
 12265 ;; Return value:  Size  Location     Type
 12266 ;;                  2  [STACK] PTR unsigned char 
 12267 ;; Registers used:
 12268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 12269 ;; Tracked objects:
 12270 ;;		On entry : 0/5
 12271 ;;		On exit  : 0/0
 12272 ;;		Unchanged: 0/0
 12273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12278 ;;Total ram usage:        0 bytes
 12279 ;; Hardware stack levels used:    1
 12280 ;; Hardware stack levels required when called:    6
 12281 ;; This function calls:
 12282 ;;		Nothing
 12283 ;; This function is called by:
 12284 ;;		_efgtoa
 12285 ;; This function uses a reentrant model
 12286 ;;
 12287                           
 12288                           	psect	text46
 12289  016B24                     __ptext46:
 12290                           	opt callstack 0
 12291  016B24                     _strcpy:
 12292                           	opt callstack 0
 12293                           
 12294                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12295  016B24  52E6               	movf	postinc1,f,c
 12296  016B26  52E6               	movf	postinc1,f,c
 12297  016B28  52E6               	movf	postinc1,f,c
 12298  016B2A  52E6               	movf	postinc1,f,c
 12299                           
 12300                           ;stkvar	_src @ sp[(-4)+-4]
 12301                           
 12302                           ;incstack = 0
 12303  016B2C  0EF8               	movlw	-8
 12304  016B2E  006F FF8C  F03C    	movff	plusw1,btemp+10
 12305  016B34  0EF9               	movlw	-7
 12306  016B36  006F FF8C  F03D    	movff	plusw1,btemp+11
 12307                           
 12308                           ;stkvar	_s @ sp[(-4)+2]
 12309  016B3C  0EFF               	movlw	-1
 12310  016B3E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12311  016B44  0EFE               	movlw	-2
 12312  016B46  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12313                           
 12314                           ;stkvar	_dest @ sp[(-4)+-2]
 12315  016B4C  0EFA               	movlw	-6
 12316  016B4E  006F FF8C  F03C    	movff	plusw1,btemp+10
 12317  016B54  0EFB               	movlw	-5
 12318  016B56  006F FF8C  F03D    	movff	plusw1,btemp+11
 12319                           
 12320                           ;stkvar	_d @ sp[(-4)+0]
 12321  016B5C  0EFD               	movlw	-3
 12322  016B5E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12323  016B64  0EFC               	movlw	-4
 12324  016B66  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12325  016B6C                     l9500:
 12326                           
 12327                           ;stkvar	_s @ sp[(-4)+2]
 12328  016B6C  50E1               	movf	fsr1l,w,c
 12329  016B6E  0FFE               	addlw	-2
 12330  016B70  6ED9               	movwf	fsr2l,c
 12331  016B72  50E2               	movf	fsr1h,w,c
 12332  016B74  6EDA               	movwf	fsr2h,c
 12333  016B76  0EFF               	movlw	255
 12334  016B78  22DA               	addwfc	fsr2h,f,c
 12335  016B7A  006F FF7C  F03C    	movff	indf2,btemp+10
 12336  016B80  0E01               	movlw	1
 12337  016B82  26DE               	addwf	postinc2,f,c
 12338  016B84  006F FF7C  F03D    	movff	indf2,btemp+11
 12339  016B8A  0E00               	movlw	0
 12340  016B8C  22DD               	addwfc	postdec2,f,c
 12341  016B8E  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
 12342  016B94  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
 12343  016B9A  0E00               	movlw	low (__mediumconst shr (0+16))
 12344  016B9C  6EF8               	movwf	tblptru,c
 12345                           
 12346                           ;stkvar	_d @ sp[(-4)+0]
 12347  016B9E  50E1               	movf	fsr1l,w,c
 12348  016BA0  0FFC               	addlw	-4
 12349  016BA2  6ED9               	movwf	fsr2l,c
 12350  016BA4  50E2               	movf	fsr1h,w,c
 12351  016BA6  6EDA               	movwf	fsr2h,c
 12352  016BA8  0EFF               	movlw	255
 12353  016BAA  22DA               	addwfc	fsr2h,f,c
 12354  016BAC  006F FF7C  F03C    	movff	indf2,btemp+10
 12355  016BB2  0E01               	movlw	1
 12356  016BB4  26DE               	addwf	postinc2,f,c
 12357  016BB6  006F FF7C  F03D    	movff	indf2,btemp+11
 12358  016BBC  0E00               	movlw	0
 12359  016BBE  22DD               	addwfc	postdec2,f,c
 12360  016BC0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
 12361  016BC6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
 12362  016BCC  0E1F               	movlw	(high __ramtop+-1)
 12363  016BCE  64F7               	cpfsgt	tblptrh,c
 12364  016BD0  D003               	bra	u9397
 12365  016BD2  0008               	tblrd		*
 12366  016BD4  50F5               	movf	tablat,w,c
 12367  016BD6  D007               	bra	u9390
 12368  016BD8                     u9397:
 12369  016BD8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12370  016BDE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12371  016BE4  50EF               	movf	indf0,w,c
 12372  016BE6                     u9390:
 12373  016BE6  6EDF               	movwf	indf2,c
 12374  016BE8  50DF               	movf	indf2,w,c
 12375  016BEA  A4D8               	btfss	status,2,c
 12376  016BEC  D7BF               	goto	l9500
 12377                           
 12378                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 12379  016BEE  0EF8               	movlw	248
 12380  016BF0  26E1               	addwf	fsr1l,f,c
 12381  016BF2  0EFF               	movlw	255
 12382  016BF4  22E2               	addwfc	fsr1h,f,c
 12383  016BF6  0012               	return		;funcret
 12384  016BF8                     __end_of_strcpy:
 12385                           	opt callstack 0
 12386                           
 12387 ;; *************** function _floorf *****************
 12388 ;; Defined at:
 12389 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 12390 ;; Parameters:    Size  Location     Type
 12391 ;;  x               4  [STACK] float 
 12392 ;; Auto vars:     Size  Location     Type
 12393 ;;  u               4  [STACK] struct .
 12394 ;;  m               4  [STACK] unsigned long 
 12395 ;;  e               2  [STACK] int 
 12396 ;; Return value:  Size  Location     Type
 12397 ;;                  4  [STACK] float 
 12398 ;; Registers used:
 12399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12400 ;; Tracked objects:
 12401 ;;		On entry : 0/5
 12402 ;;		On exit  : 0/0
 12403 ;;		Unchanged: 0/0
 12404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12409 ;;Total ram usage:        0 bytes
 12410 ;; Hardware stack levels used:    1
 12411 ;; Hardware stack levels required when called:    6
 12412 ;; This function calls:
 12413 ;;		Nothing
 12414 ;; This function is called by:
 12415 ;;		_efgtoa
 12416 ;; This function uses a reentrant model
 12417 ;;
 12418                           
 12419                           	psect	text47
 12420  0143B2                     __ptext47:
 12421                           	opt callstack 0
 12422  0143B2                     _floorf:
 12423                           	opt callstack 0
 12424                           
 12425                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12426  0143B2  0E0A               	movlw	10
 12427  0143B4  26E1               	addwf	fsr1l,f,c
 12428  0143B6  0E00               	movlw	0
 12429  0143B8  22E2               	addwfc	fsr1h,f,c
 12430                           
 12431                           ;incstack = 0
 12432  0143BA  0060  F2B4  F03A   	movff	floorf@F524,btemp+8
 12433  0143C0  0060  F2B8  F03B   	movff	floorf@F524+1,btemp+9
 12434  0143C6  0060  F2BC  F03C   	movff	floorf@F524+2,btemp+10
 12435  0143CC  0060  F2C0  F03D   	movff	floorf@F524+3,btemp+11
 12436                           
 12437                           ;stkvar	_u @ sp[(-10)+0]
 12438  0143D2  0EF6               	movlw	-10
 12439  0143D4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12440  0143DA  0EF7               	movlw	-9
 12441  0143DC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12442  0143E2  0EF8               	movlw	-8
 12443  0143E4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12444  0143EA  0EF9               	movlw	-7
 12445  0143EC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12446                           
 12447                           ;stkvar	_x @ sp[(-10)+-4]
 12448  0143F2  0EF2               	movlw	-14
 12449  0143F4  006F FF8C  F03A    	movff	plusw1,btemp+8
 12450  0143FA  0EF3               	movlw	-13
 12451  0143FC  006F FF8C  F03B    	movff	plusw1,btemp+9
 12452  014402  0EF4               	movlw	-12
 12453  014404  006F FF8C  F03C    	movff	plusw1,btemp+10
 12454  01440A  0EF5               	movlw	-11
 12455  01440C  006F FF8C  F03D    	movff	plusw1,btemp+11
 12456                           
 12457                           ;stkvar	_u @ sp[(-10)+0]
 12458  014412  0EF6               	movlw	-10
 12459  014414  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12460  01441A  0EF7               	movlw	-9
 12461  01441C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12462  014422  0EF8               	movlw	-8
 12463  014424  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12464  01442A  0EF9               	movlw	-7
 12465  01442C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12466  014432  0E81               	movlw	129
 12467  014434  6E3C               	movwf	(btemp+10)^0,c
 12468  014436  0EFF               	movlw	255
 12469  014438  6E3D               	movwf	(btemp+11)^0,c
 12470                           
 12471                           ;stkvar	_u @ sp[(-10)+0]
 12472  01443A  0EF6               	movlw	-10
 12473  01443C  006F FF8C  F036    	movff	plusw1,btemp+4
 12474  014442  0EF7               	movlw	-9
 12475  014444  006F FF8C  F037    	movff	plusw1,btemp+5
 12476  01444A  0EF8               	movlw	-8
 12477  01444C  006F FF8C  F038    	movff	plusw1,btemp+6
 12478  014452  0EF9               	movlw	-7
 12479  014454  006F FF8C  F039    	movff	plusw1,btemp+7
 12480  01445A  0E18               	movlw	24
 12481  01445C  D005               	goto	u9440
 12482  01445E                     u9445:
 12483  01445E  90D8               	bcf	status,0,c
 12484  014460  3239               	rrcf	(btemp+7)^0,f,c
 12485  014462  3238               	rrcf	(btemp+6)^0,f,c
 12486  014464  3237               	rrcf	(btemp+5)^0,f,c
 12487  014466  3236               	rrcf	(btemp+4)^0,f,c
 12488  014468                     u9440:
 12489  014468  2EE8               	decfsz	wreg,f,c
 12490  01446A  D7F9               	goto	u9445
 12491  01446C  0060  F0D8  F03A   	movff	btemp+4,btemp+8
 12492  014472  0060  F0DC  F03B   	movff	btemp+5,btemp+9
 12493  014478  0EFF               	movlw	255
 12494  01447A  163A               	andwf	(btemp+8)^0,f,c
 12495  01447C  0E00               	movlw	0
 12496  01447E  163B               	andwf	(btemp+9)^0,f,c
 12497  014480  503C               	movf	(btemp+10)^0,w,c
 12498  014482  263A               	addwf	(btemp+8)^0,f,c
 12499  014484  503D               	movf	(btemp+11)^0,w,c
 12500  014486  223B               	addwfc	(btemp+9)^0,f,c
 12501                           
 12502                           ;stkvar	_e @ sp[(-10)+8]
 12503  014488  0EFE               	movlw	-2
 12504  01448A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12505  014490  0EFF               	movlw	-1
 12506  014492  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12507                           
 12508                           ;stkvar	_e @ sp[(-10)+8]
 12509  014498  0EFF               	movlw	-1
 12510  01449A  BEE3               	btfsc	plusw1,7,c
 12511  01449C  D019               	goto	l9526
 12512  01449E  0EFF               	movlw	-1
 12513  0144A0  50E3               	movf	plusw1,w,c
 12514  0144A2  E108               	bnz	u9450
 12515  0144A4  0EFE               	movlw	-2
 12516  0144A6  006F FF8C  F032    	movff	plusw1,btemp
 12517  0144AC  0E17               	movlw	23
 12518  0144AE  5E32               	subwf	btemp^0,f,c
 12519  0144B0  A0D8               	btfss	status,0,c
 12520  0144B2  D00E               	goto	l9526
 12521  0144B4                     u9450:
 12522                           
 12523                           ;stkvar	_x @ sp[(-10)+-4]
 12524  0144B4  0EF2               	movlw	-14
 12525  0144B6  006F FF8C  F032    	movff	plusw1,btemp
 12526  0144BC  0EF3               	movlw	-13
 12527  0144BE  006F FF8C  F033    	movff	plusw1,btemp+1
 12528  0144C4  0EF4               	movlw	-12
 12529  0144C6  006F FF8C  F034    	movff	plusw1,btemp+2
 12530  0144CC  0EF5               	movlw	-11
 12531  0144CE  D11F               	goto	L11
 12532  0144D0                     l9526:
 12533                           
 12534                           ;stkvar	_e @ sp[(-10)+8]
 12535  0144D0  0EFF               	movlw	-1
 12536  0144D2  BEE3               	btfsc	plusw1,7,c
 12537  0144D4  D0B4               	goto	l9542
 12538                           
 12539                           ;stkvar	_e @ sp[(-10)+8]
 12540  0144D6  0EFE               	movlw	-2
 12541  0144D8  006F FF8C  F03D    	movff	plusw1,btemp+11
 12542  0144DE  0EFF               	movlw	255
 12543  0144E0  6E36               	movwf	(btemp+4)^0,c
 12544  0144E2  0EFF               	movlw	255
 12545  0144E4  6E37               	movwf	(btemp+5)^0,c
 12546  0144E6  0E7F               	movlw	127
 12547  0144E8  6E38               	movwf	(btemp+6)^0,c
 12548  0144EA  0E00               	movlw	0
 12549  0144EC  6E39               	movwf	(btemp+7)^0,c
 12550  0144EE                     u9475:
 12551  0144EE  663D               	tstfsz	(btemp+11)^0,c
 12552  0144F0  D001               	goto	u9476
 12553  0144F2  D007               	goto	u9477
 12554  0144F4                     u9476:
 12555  0144F4  3439               	rlcf	(btemp+7)^0,w,c
 12556  0144F6  3239               	rrcf	(btemp+7)^0,f,c
 12557  0144F8  3238               	rrcf	(btemp+6)^0,f,c
 12558  0144FA  3237               	rrcf	(btemp+5)^0,f,c
 12559  0144FC  3236               	rrcf	(btemp+4)^0,f,c
 12560  0144FE  2E3D               	decfsz	(btemp+11)^0,f,c
 12561  014500  D7F6               	goto	u9475
 12562  014502                     u9477:
 12563                           
 12564                           ;stkvar	_m @ sp[(-10)+4]
 12565  014502  0EFA               	movlw	-6
 12566  014504  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 12567  01450A  0EFB               	movlw	-5
 12568  01450C  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 12569  014512  0EFC               	movlw	-4
 12570  014514  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 12571  01451A  0EFD               	movlw	-3
 12572  01451C  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 12573                           
 12574                           ;stkvar	_m @ sp[(-10)+4]
 12575                           ;stkvar	_u @ sp[(-10)+0]
 12576  014522  0EF6               	movlw	-10
 12577  014524  006F FF8C  F03A    	movff	plusw1,btemp+8
 12578  01452A  0EF7               	movlw	-9
 12579  01452C  006F FF8C  F03B    	movff	plusw1,btemp+9
 12580  014532  0EF8               	movlw	-8
 12581  014534  006F FF8C  F03C    	movff	plusw1,btemp+10
 12582  01453A  0EF9               	movlw	-7
 12583  01453C  006F FF8C  F03D    	movff	plusw1,btemp+11
 12584  014542  0EFA               	movlw	-6
 12585  014544  50E3               	movf	plusw1,w,c
 12586  014546  163A               	andwf	(btemp+8)^0,f,c
 12587  014548  0EFB               	movlw	-5
 12588  01454A  50E3               	movf	plusw1,w,c
 12589  01454C  163B               	andwf	(btemp+9)^0,f,c
 12590  01454E  0EFC               	movlw	-4
 12591  014550  50E3               	movf	plusw1,w,c
 12592  014552  163C               	andwf	(btemp+10)^0,f,c
 12593  014554  0EFD               	movlw	-3
 12594  014556  50E3               	movf	plusw1,w,c
 12595  014558  163D               	andwf	(btemp+11)^0,f,c
 12596  01455A  503A               	movf	(btemp+8)^0,w,c
 12597  01455C  103B               	iorwf	(btemp+9)^0,w,c
 12598  01455E  103C               	iorwf	(btemp+10)^0,w,c
 12599  014560  103D               	iorwf	(btemp+11)^0,w,c
 12600  014562  B4D8               	btfsc	status,2,c
 12601  014564  D7A7               	goto	u9450
 12602                           
 12603                           ;stkvar	_u @ sp[(-10)+0]
 12604  014566  0EF6               	movlw	-10
 12605  014568  006F FF8C  F03A    	movff	plusw1,btemp+8
 12606  01456E  0EF7               	movlw	-9
 12607  014570  006F FF8C  F03B    	movff	plusw1,btemp+9
 12608  014576  0EF8               	movlw	-8
 12609  014578  006F FF8C  F03C    	movff	plusw1,btemp+10
 12610  01457E  0EF9               	movlw	-7
 12611  014580  006F FF8C  F03D    	movff	plusw1,btemp+11
 12612  014586  0E20               	movlw	32
 12613  014588  D005               	goto	u9490
 12614  01458A                     u9495:
 12615  01458A  90D8               	bcf	status,0,c
 12616  01458C  323D               	rrcf	(btemp+11)^0,f,c
 12617  01458E  323C               	rrcf	(btemp+10)^0,f,c
 12618  014590  323B               	rrcf	(btemp+9)^0,f,c
 12619  014592  323A               	rrcf	(btemp+8)^0,f,c
 12620  014594                     u9490:
 12621  014594  2EE8               	decfsz	wreg,f,c
 12622  014596  D7F9               	goto	u9495
 12623  014598  503A               	movf	(btemp+8)^0,w,c
 12624  01459A  B4D8               	btfsc	status,2,c
 12625  01459C  D028               	goto	l9540
 12626                           
 12627                           ;stkvar	_m @ sp[(-10)+4]
 12628                           ;stkvar	_u @ sp[(-10)+0]
 12629  01459E  0EF6               	movlw	-10
 12630  0145A0  50E3               	movf	plusw1,w,c
 12631  0145A2  6E32               	movwf	btemp^0,c
 12632  0145A4  0EFA               	movlw	-6
 12633  0145A6  50E3               	movf	plusw1,w,c
 12634  0145A8  2632               	addwf	btemp^0,f,c
 12635  0145AA  0EF6               	movlw	-10
 12636  0145AC  0060  F0CB  FFE3   	movff	btemp,plusw1
 12637  0145B2  0EF7               	movlw	-9
 12638  0145B4  50E3               	movf	plusw1,w,c
 12639  0145B6  6E32               	movwf	btemp^0,c
 12640  0145B8  0EFB               	movlw	-5
 12641  0145BA  50E3               	movf	plusw1,w,c
 12642  0145BC  2232               	addwfc	btemp^0,f,c
 12643  0145BE  0EF7               	movlw	-9
 12644  0145C0  0060  F0CB  FFE3   	movff	btemp,plusw1
 12645  0145C6  0EF8               	movlw	-8
 12646  0145C8  50E3               	movf	plusw1,w,c
 12647  0145CA  6E32               	movwf	btemp^0,c
 12648  0145CC  0EFC               	movlw	-4
 12649  0145CE  50E3               	movf	plusw1,w,c
 12650  0145D0  2232               	addwfc	btemp^0,f,c
 12651  0145D2  0EF8               	movlw	-8
 12652  0145D4  0060  F0CB  FFE3   	movff	btemp,plusw1
 12653  0145DA  0EF9               	movlw	-7
 12654  0145DC  50E3               	movf	plusw1,w,c
 12655  0145DE  6E32               	movwf	btemp^0,c
 12656  0145E0  0EFD               	movlw	-3
 12657  0145E2  50E3               	movf	plusw1,w,c
 12658  0145E4  2232               	addwfc	btemp^0,f,c
 12659  0145E6  0EF9               	movlw	-7
 12660  0145E8  0060  F0CB  FFE3   	movff	btemp,plusw1
 12661  0145EE                     l9540:
 12662                           
 12663                           ;stkvar	_m @ sp[(-10)+4]
 12664  0145EE  0EFA               	movlw	-6
 12665  0145F0  006F FF8C  F03A    	movff	plusw1,btemp+8
 12666  0145F6  0EFB               	movlw	-5
 12667  0145F8  006F FF8C  F03B    	movff	plusw1,btemp+9
 12668  0145FE  0EFC               	movlw	-4
 12669  014600  006F FF8C  F03C    	movff	plusw1,btemp+10
 12670  014606  0EFD               	movlw	-3
 12671  014608  006F FF8C  F03D    	movff	plusw1,btemp+11
 12672  01460E  1C3A               	comf	(btemp+8)^0,w,c
 12673  014610  6E36               	movwf	(btemp+4)^0,c
 12674  014612  1C3B               	comf	(btemp+9)^0,w,c
 12675  014614  6E37               	movwf	(btemp+5)^0,c
 12676  014616  1C3C               	comf	(btemp+10)^0,w,c
 12677  014618  6E38               	movwf	(btemp+6)^0,c
 12678  01461A  1C3D               	comf	(btemp+11)^0,w,c
 12679  01461C  6E39               	movwf	(btemp+7)^0,c
 12680                           
 12681                           ;stkvar	_u @ sp[(-10)+0]
 12682  01461E  50E1               	movf	fsr1l,w,c
 12683  014620  0FF6               	addlw	-10
 12684  014622  6ED9               	movwf	fsr2l,c
 12685  014624  50E2               	movf	fsr1h,w,c
 12686  014626  6EDA               	movwf	fsr2h,c
 12687  014628  0EFF               	movlw	255
 12688  01462A  22DA               	addwfc	fsr2h,f,c
 12689  01462C  5036               	movf	(btemp+4)^0,w,c
 12690  01462E  16DE               	andwf	postinc2,f,c
 12691  014630  5037               	movf	(btemp+5)^0,w,c
 12692  014632  16DE               	andwf	postinc2,f,c
 12693  014634  5038               	movf	(btemp+6)^0,w,c
 12694  014636  16DE               	andwf	postinc2,f,c
 12695  014638  5039               	movf	(btemp+7)^0,w,c
 12696  01463A  16DE               	andwf	postinc2,f,c
 12697  01463C  D05B               	goto	l9550
 12698  01463E                     l9542:
 12699                           
 12700                           ;stkvar	_u @ sp[(-10)+0]
 12701  01463E  0EF6               	movlw	-10
 12702  014640  006F FF8C  F03A    	movff	plusw1,btemp+8
 12703  014646  0EF7               	movlw	-9
 12704  014648  006F FF8C  F03B    	movff	plusw1,btemp+9
 12705  01464E  0EF8               	movlw	-8
 12706  014650  006F FF8C  F03C    	movff	plusw1,btemp+10
 12707  014656  0EF9               	movlw	-7
 12708  014658  006F FF8C  F03D    	movff	plusw1,btemp+11
 12709  01465E  0E20               	movlw	32
 12710  014660  D005               	goto	u9510
 12711  014662                     u9515:
 12712  014662  90D8               	bcf	status,0,c
 12713  014664  323D               	rrcf	(btemp+11)^0,f,c
 12714  014666  323C               	rrcf	(btemp+10)^0,f,c
 12715  014668  323B               	rrcf	(btemp+9)^0,f,c
 12716  01466A  323A               	rrcf	(btemp+8)^0,f,c
 12717  01466C                     u9510:
 12718  01466C  2EE8               	decfsz	wreg,f,c
 12719  01466E  D7F9               	goto	u9515
 12720  014670  663A               	tstfsz	(btemp+8)^0,c
 12721  014672  D009               	goto	l9546
 12722                           
 12723                           ;stkvar	_u @ sp[(-10)+0]
 12724  014674  0EF6               	movlw	-10
 12725  014676  6AE3               	clrf	plusw1,c
 12726  014678  0EF7               	movlw	-9
 12727  01467A  6AE3               	clrf	plusw1,c
 12728  01467C  0EF8               	movlw	-8
 12729  01467E  6AE3               	clrf	plusw1,c
 12730  014680  0EF9               	movlw	-7
 12731  014682  6AE3               	clrf	plusw1,c
 12732  014684  D037               	goto	l9550
 12733  014686                     l9546:
 12734                           
 12735                           ;stkvar	_u @ sp[(-10)+0]
 12736  014686  0EF6               	movlw	-10
 12737  014688  006F FF8C  F03A    	movff	plusw1,btemp+8
 12738  01468E  0EF7               	movlw	-9
 12739  014690  006F FF8C  F03B    	movff	plusw1,btemp+9
 12740  014696  0EF8               	movlw	-8
 12741  014698  006F FF8C  F03C    	movff	plusw1,btemp+10
 12742  01469E  0EF9               	movlw	-7
 12743  0146A0  006F FF8C  F03D    	movff	plusw1,btemp+11
 12744  0146A6  90D8               	bcf	status,0,c
 12745  0146A8  343A               	rlcf	(btemp+8)^0,w,c
 12746  0146AA  6E36               	movwf	(btemp+4)^0,c
 12747  0146AC  343B               	rlcf	(btemp+9)^0,w,c
 12748  0146AE  6E37               	movwf	(btemp+5)^0,c
 12749  0146B0  343C               	rlcf	(btemp+10)^0,w,c
 12750  0146B2  6E38               	movwf	(btemp+6)^0,c
 12751  0146B4  343D               	rlcf	(btemp+11)^0,w,c
 12752  0146B6  6E39               	movwf	(btemp+7)^0,c
 12753  0146B8  5036               	movf	(btemp+4)^0,w,c
 12754  0146BA  1037               	iorwf	(btemp+5)^0,w,c
 12755  0146BC  1038               	iorwf	(btemp+6)^0,w,c
 12756  0146BE  1039               	iorwf	(btemp+7)^0,w,c
 12757  0146C0  B4D8               	btfsc	status,2,c
 12758  0146C2  D018               	goto	l9550
 12759  0146C4  0E00               	movlw	0
 12760  0146C6  6E3A               	movwf	(btemp+8)^0,c
 12761  0146C8  0E00               	movlw	0
 12762  0146CA  6E3B               	movwf	(btemp+9)^0,c
 12763  0146CC  0E80               	movlw	128
 12764  0146CE  6E3C               	movwf	(btemp+10)^0,c
 12765  0146D0  0EBF               	movlw	191
 12766  0146D2  6E3D               	movwf	(btemp+11)^0,c
 12767                           
 12768                           ;stkvar	_u @ sp[(-10)+0]
 12769  0146D4  0EF6               	movlw	-10
 12770  0146D6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12771  0146DC  0EF7               	movlw	-9
 12772  0146DE  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12773  0146E4  0EF8               	movlw	-8
 12774  0146E6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12775  0146EC  0EF9               	movlw	-7
 12776  0146EE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12777  0146F4                     l9550:
 12778                           
 12779                           ;stkvar	_u @ sp[(-10)+0]
 12780  0146F4  0EF6               	movlw	-10
 12781  0146F6  006F FF8C  F032    	movff	plusw1,btemp
 12782  0146FC  0EF7               	movlw	-9
 12783  0146FE  006F FF8C  F033    	movff	plusw1,btemp+1
 12784  014704  0EF8               	movlw	-8
 12785  014706  006F FF8C  F034    	movff	plusw1,btemp+2
 12786  01470C  0EF9               	movlw	-7
 12787  01470E                     L11:
 12788  01470E  006F FF8C  F035    	movff	plusw1,btemp+3
 12789                           
 12790                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 12791  014714  0EF2               	movlw	242
 12792  014716  26E1               	addwf	fsr1l,f,c
 12793  014718  0EFF               	movlw	255
 12794  01471A  22E2               	addwfc	fsr1h,f,c
 12795  01471C  0012               	return		;funcret
 12796  01471E                     __end_of_floorf:
 12797                           	opt callstack 0
 12798                           
 12799 ;; *************** function ___fpclassifyf *****************
 12800 ;; Defined at:
 12801 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 12802 ;; Parameters:    Size  Location     Type
 12803 ;;  x               4  [STACK] float 
 12804 ;; Auto vars:     Size  Location     Type
 12805 ;;  u               4  [STACK] struct .
 12806 ;;  e               2  [STACK] int 
 12807 ;; Return value:  Size  Location     Type
 12808 ;;                  2  [STACK] int 
 12809 ;; Registers used:
 12810 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 12811 ;; Tracked objects:
 12812 ;;		On entry : 0/5
 12813 ;;		On exit  : 0/0
 12814 ;;		Unchanged: 0/0
 12815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12820 ;;Total ram usage:        0 bytes
 12821 ;; Hardware stack levels used:    1
 12822 ;; Hardware stack levels required when called:    6
 12823 ;; This function calls:
 12824 ;;		Nothing
 12825 ;; This function is called by:
 12826 ;;		_efgtoa
 12827 ;; This function uses a reentrant model
 12828 ;;
 12829                           
 12830                           	psect	text48
 12831  015BB0                     __ptext48:
 12832                           	opt callstack 0
 12833  015BB0                     ___fpclassifyf:
 12834                           	opt callstack 0
 12835                           
 12836                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12837  015BB0  0E06               	movlw	6
 12838  015BB2  26E1               	addwf	fsr1l,f,c
 12839  015BB4  0E00               	movlw	0
 12840  015BB6  22E2               	addwfc	fsr1h,f,c
 12841                           
 12842                           ;incstack = 0
 12843  015BB8  0060  F2C4  F03A   	movff	___fpclassifyf@F463,btemp+8
 12844  015BBE  0060  F2C8  F03B   	movff	___fpclassifyf@F463+1,btemp+9
 12845  015BC4  0060  F2CC  F03C   	movff	___fpclassifyf@F463+2,btemp+10
 12846  015BCA  0060  F2D0  F03D   	movff	___fpclassifyf@F463+3,btemp+11
 12847                           
 12848                           ;stkvar	_u @ sp[(-6)+0]
 12849  015BD0  0EFA               	movlw	-6
 12850  015BD2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12851  015BD8  0EFB               	movlw	-5
 12852  015BDA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12853  015BE0  0EFC               	movlw	-4
 12854  015BE2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12855  015BE8  0EFD               	movlw	-3
 12856  015BEA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12857                           
 12858                           ;stkvar	_x @ sp[(-6)+-4]
 12859  015BF0  0EF6               	movlw	-10
 12860  015BF2  006F FF8C  F03A    	movff	plusw1,btemp+8
 12861  015BF8  0EF7               	movlw	-9
 12862  015BFA  006F FF8C  F03B    	movff	plusw1,btemp+9
 12863  015C00  0EF8               	movlw	-8
 12864  015C02  006F FF8C  F03C    	movff	plusw1,btemp+10
 12865  015C08  0EF9               	movlw	-7
 12866  015C0A  006F FF8C  F03D    	movff	plusw1,btemp+11
 12867                           
 12868                           ;stkvar	_u @ sp[(-6)+0]
 12869  015C10  0EFA               	movlw	-6
 12870  015C12  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12871  015C18  0EFB               	movlw	-5
 12872  015C1A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12873  015C20  0EFC               	movlw	-4
 12874  015C22  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12875  015C28  0EFD               	movlw	-3
 12876  015C2A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12877                           
 12878                           ;stkvar	_u @ sp[(-6)+0]
 12879  015C30  0EFA               	movlw	-6
 12880  015C32  006F FF8C  F03A    	movff	plusw1,btemp+8
 12881  015C38  0EFB               	movlw	-5
 12882  015C3A  006F FF8C  F03B    	movff	plusw1,btemp+9
 12883  015C40  0EFC               	movlw	-4
 12884  015C42  006F FF8C  F03C    	movff	plusw1,btemp+10
 12885  015C48  0EFD               	movlw	-3
 12886  015C4A  006F FF8C  F03D    	movff	plusw1,btemp+11
 12887  015C50  0E18               	movlw	24
 12888  015C52  D005               	goto	u9320
 12889  015C54                     u9325:
 12890  015C54  90D8               	bcf	status,0,c
 12891  015C56  323D               	rrcf	(btemp+11)^0,f,c
 12892  015C58  323C               	rrcf	(btemp+10)^0,f,c
 12893  015C5A  323B               	rrcf	(btemp+9)^0,f,c
 12894  015C5C  323A               	rrcf	(btemp+8)^0,f,c
 12895  015C5E                     u9320:
 12896  015C5E  2EE8               	decfsz	wreg,f,c
 12897  015C60  D7F9               	goto	u9325
 12898  015C62  0060  F0E8  F038   	movff	btemp+8,btemp+6
 12899  015C68  0060  F0EC  F039   	movff	btemp+9,btemp+7
 12900  015C6E  0EFF               	movlw	255
 12901  015C70  1638               	andwf	(btemp+6)^0,f,c
 12902  015C72  0E00               	movlw	0
 12903  015C74  1639               	andwf	(btemp+7)^0,f,c
 12904                           
 12905                           ;stkvar	_e @ sp[(-6)+4]
 12906  015C76  0EFE               	movlw	-2
 12907  015C78  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 12908  015C7E  0EFF               	movlw	-1
 12909  015C80  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 12910                           
 12911                           ;stkvar	_e @ sp[(-6)+4]
 12912  015C86  0EFE               	movlw	-2
 12913  015C88  006F FF8C  F032    	movff	plusw1,btemp
 12914  015C8E  0EFF               	movlw	-1
 12915  015C90  50E3               	movf	plusw1,w,c
 12916  015C92  1032               	iorwf	btemp^0,w,c
 12917  015C94  A4D8               	btfss	status,2,c
 12918  015C96  D023               	goto	l9488
 12919                           
 12920                           ;stkvar	_u @ sp[(-6)+0]
 12921  015C98  0EFA               	movlw	-6
 12922  015C9A  006F FF8C  F03A    	movff	plusw1,btemp+8
 12923  015CA0  0EFB               	movlw	-5
 12924  015CA2  006F FF8C  F03B    	movff	plusw1,btemp+9
 12925  015CA8  0EFC               	movlw	-4
 12926  015CAA  006F FF8C  F03C    	movff	plusw1,btemp+10
 12927  015CB0  0EFD               	movlw	-3
 12928  015CB2  006F FF8C  F03D    	movff	plusw1,btemp+11
 12929  015CB8  90D8               	bcf	status,0,c
 12930  015CBA  343A               	rlcf	(btemp+8)^0,w,c
 12931  015CBC  6E36               	movwf	(btemp+4)^0,c
 12932  015CBE  343B               	rlcf	(btemp+9)^0,w,c
 12933  015CC0  6E37               	movwf	(btemp+5)^0,c
 12934  015CC2  343C               	rlcf	(btemp+10)^0,w,c
 12935  015CC4  6E38               	movwf	(btemp+6)^0,c
 12936  015CC6  343D               	rlcf	(btemp+11)^0,w,c
 12937  015CC8  6E39               	movwf	(btemp+7)^0,c
 12938  015CCA  5036               	movf	(btemp+4)^0,w,c
 12939  015CCC  1037               	iorwf	(btemp+5)^0,w,c
 12940  015CCE  1038               	iorwf	(btemp+6)^0,w,c
 12941  015CD0  1039               	iorwf	(btemp+7)^0,w,c
 12942  015CD2  A4D8               	btfss	status,2,c
 12943  015CD4  D002               	goto	l9484
 12944  015CD6  0E02               	movlw	2
 12945  015CD8  D02E               	goto	L12
 12946  015CDA                     l9484:
 12947  015CDA  0E03               	movlw	3
 12948  015CDC  D02C               	goto	L12
 12949  015CDE                     l9488:
 12950                           
 12951                           ;stkvar	_e @ sp[(-6)+4]
 12952  015CDE  0EFE               	movlw	-2
 12953  015CE0  28E3               	incf	plusw1,w,c
 12954  015CE2  E128               	bnz	l9494
 12955  015CE4  0EFF               	movlw	-1
 12956  015CE6  50E3               	movf	plusw1,w,c
 12957  015CE8  A4D8               	btfss	status,2,c
 12958  015CEA  D024               	goto	l9494
 12959                           
 12960                           ;stkvar	_u @ sp[(-6)+0]
 12961  015CEC  0EFA               	movlw	-6
 12962  015CEE  006F FF8C  F03A    	movff	plusw1,btemp+8
 12963  015CF4  0EFB               	movlw	-5
 12964  015CF6  006F FF8C  F03B    	movff	plusw1,btemp+9
 12965  015CFC  0EFC               	movlw	-4
 12966  015CFE  006F FF8C  F03C    	movff	plusw1,btemp+10
 12967  015D04  0EFD               	movlw	-3
 12968  015D06  006F FF8C  F03D    	movff	plusw1,btemp+11
 12969  015D0C  0E09               	movlw	9
 12970  015D0E                     u9365:
 12971  015D0E  90D8               	bcf	status,0,c
 12972  015D10  363A               	rlcf	(btemp+8)^0,f,c
 12973  015D12  363B               	rlcf	(btemp+9)^0,f,c
 12974  015D14  363C               	rlcf	(btemp+10)^0,f,c
 12975  015D16  363D               	rlcf	(btemp+11)^0,f,c
 12976  015D18  2EE8               	decfsz	wreg,f,c
 12977  015D1A  D7F9               	goto	u9365
 12978  015D1C  503A               	movf	(btemp+8)^0,w,c
 12979  015D1E  103B               	iorwf	(btemp+9)^0,w,c
 12980  015D20  103C               	iorwf	(btemp+10)^0,w,c
 12981  015D22  103D               	iorwf	(btemp+11)^0,w,c
 12982  015D24  A4D8               	btfss	status,2,c
 12983  015D26  D002               	goto	u9370
 12984  015D28  0E01               	movlw	1
 12985  015D2A  D001               	goto	u9380
 12986  015D2C                     u9370:
 12987  015D2C  0E00               	movlw	0
 12988  015D2E                     u9380:
 12989  015D2E  6E32               	movwf	btemp^0,c
 12990  015D30  6A33               	clrf	(btemp+1)^0,c
 12991  015D32  D004               	goto	l2718
 12992  015D34                     l9494:
 12993  015D34  0E04               	movlw	4
 12994  015D36                     L12:
 12995  015D36  6E32               	movwf	btemp^0,c
 12996  015D38  0E00               	movlw	0
 12997  015D3A  6E33               	movwf	(btemp+1)^0,c
 12998  015D3C                     l2718:
 12999                           
 13000                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 13001  015D3C  0EF6               	movlw	246
 13002  015D3E  26E1               	addwf	fsr1l,f,c
 13003  015D40  0EFF               	movlw	255
 13004  015D42  22E2               	addwfc	fsr1h,f,c
 13005  015D44  0012               	return		;funcret
 13006  015D46                     __end_of___fpclassifyf:
 13007                           	opt callstack 0
 13008                           
 13009 ;; *************** function ___fltol *****************
 13010 ;; Defined at:
 13011 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 13012 ;; Parameters:    Size  Location     Type
 13013 ;;  f1              4  [STACK] int 
 13014 ;; Auto vars:     Size  Location     Type
 13015 ;;  exp1            1  [STACK] unsigned char 
 13016 ;;  sign1           1  [STACK] unsigned char 
 13017 ;; Return value:  Size  Location     Type
 13018 ;;                  4  [STACK] long 
 13019 ;; Registers used:
 13020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 13021 ;; Tracked objects:
 13022 ;;		On entry : 0/5
 13023 ;;		On exit  : 0/0
 13024 ;;		Unchanged: 0/0
 13025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13030 ;;Total ram usage:        0 bytes
 13031 ;; Hardware stack levels used:    1
 13032 ;; Hardware stack levels required when called:    6
 13033 ;; This function calls:
 13034 ;;		Nothing
 13035 ;; This function is called by:
 13036 ;;		_efgtoa
 13037 ;; This function uses a reentrant model
 13038 ;;
 13039                           
 13040                           	psect	text49
 13041  015D46                     __ptext49:
 13042                           	opt callstack 0
 13043  015D46                     ___fltol:
 13044                           	opt callstack 0
 13045                           
 13046                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13047  015D46  52E6               	movf	postinc1,f,c
 13048  015D48  52E6               	movf	postinc1,f,c
 13049                           
 13050                           ;stkvar	_f1 @ sp[(-2)+-4]
 13051                           
 13052                           ;incstack = 0
 13053  015D4A  0EFA               	movlw	-6
 13054  015D4C  006F FF8C  F03A    	movff	plusw1,btemp+8
 13055  015D52  0EFB               	movlw	-5
 13056  015D54  006F FF8C  F03B    	movff	plusw1,btemp+9
 13057  015D5A  0EFC               	movlw	-4
 13058  015D5C  006F FF8C  F03C    	movff	plusw1,btemp+10
 13059  015D62  0EFD               	movlw	-3
 13060  015D64  006F FF8C  F03D    	movff	plusw1,btemp+11
 13061  015D6A  0E18               	movlw	24
 13062  015D6C  D005               	goto	u10530
 13063  015D6E                     u10535:
 13064  015D6E  90D8               	bcf	status,0,c
 13065  015D70  323D               	rrcf	(btemp+11)^0,f,c
 13066  015D72  323C               	rrcf	(btemp+10)^0,f,c
 13067  015D74  323B               	rrcf	(btemp+9)^0,f,c
 13068  015D76  323A               	rrcf	(btemp+8)^0,f,c
 13069  015D78                     u10530:
 13070  015D78  2EE8               	decfsz	wreg,f,c
 13071  015D7A  D7F9               	goto	u10535
 13072                           
 13073                           ;stkvar	_exp1 @ sp[(-2)+0]
 13074  015D7C  0EFE               	movlw	-2
 13075  015D7E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13076  015D84  0EFE               	movlw	-2
 13077  015D86  50E3               	movf	plusw1,w,c
 13078  015D88  A4D8               	btfss	status,2,c
 13079  015D8A  D006               	goto	l10114
 13080  015D8C                     u10540:
 13081  015D8C  0E00               	movlw	0
 13082  015D8E  6E32               	movwf	btemp^0,c
 13083  015D90  6A33               	clrf	(btemp+1)^0,c
 13084  015D92  6A34               	clrf	(btemp+2)^0,c
 13085  015D94  6A35               	clrf	(btemp+3)^0,c
 13086  015D96  D08B               	goto	l2334
 13087  015D98                     l10114:
 13088                           
 13089                           ;stkvar	_f1 @ sp[(-2)+-4]
 13090  015D98  0EFA               	movlw	-6
 13091  015D9A  006F FF8C  F03A    	movff	plusw1,btemp+8
 13092  015DA0  0EFB               	movlw	-5
 13093  015DA2  006F FF8C  F03B    	movff	plusw1,btemp+9
 13094  015DA8  0EFC               	movlw	-4
 13095  015DAA  006F FF8C  F03C    	movff	plusw1,btemp+10
 13096  015DB0  0EFD               	movlw	-3
 13097  015DB2  006F FF8C  F03D    	movff	plusw1,btemp+11
 13098  015DB8  0E20               	movlw	32
 13099  015DBA  D005               	goto	u10550
 13100  015DBC                     u10555:
 13101  015DBC  90D8               	bcf	status,0,c
 13102  015DBE  323D               	rrcf	(btemp+11)^0,f,c
 13103  015DC0  323C               	rrcf	(btemp+10)^0,f,c
 13104  015DC2  323B               	rrcf	(btemp+9)^0,f,c
 13105  015DC4  323A               	rrcf	(btemp+8)^0,f,c
 13106  015DC6                     u10550:
 13107  015DC6  2EE8               	decfsz	wreg,f,c
 13108  015DC8  D7F9               	goto	u10555
 13109                           
 13110                           ;stkvar	_sign1 @ sp[(-2)+1]
 13111  015DCA  0EFF               	movlw	-1
 13112  015DCC  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13113                           
 13114                           ;stkvar	_f1 @ sp[(-2)+-4]
 13115  015DD2  0EFC               	movlw	-4
 13116  015DD4  8EE3               	bsf	plusw1,7,c
 13117                           
 13118                           ;stkvar	_f1 @ sp[(-2)+-4]
 13119  015DD6  50E1               	movf	fsr1l,w,c
 13120  015DD8  0FFA               	addlw	-6
 13121  015DDA  6ED9               	movwf	fsr2l,c
 13122  015DDC  50E2               	movf	fsr1h,w,c
 13123  015DDE  6EDA               	movwf	fsr2h,c
 13124  015DE0  0EFF               	movlw	255
 13125  015DE2  22DA               	addwfc	fsr2h,f,c
 13126  015DE4  0EFF               	movlw	255
 13127  015DE6  16DE               	andwf	postinc2,f,c
 13128  015DE8  0EFF               	movlw	255
 13129  015DEA  16DE               	andwf	postinc2,f,c
 13130  015DEC  0EFF               	movlw	255
 13131  015DEE  16DE               	andwf	postinc2,f,c
 13132  015DF0  0E00               	movlw	0
 13133  015DF2  16DE               	andwf	postinc2,f,c
 13134                           
 13135                           ;stkvar	_exp1 @ sp[(-2)+0]
 13136  015DF4  0EFE               	movlw	-2
 13137  015DF6  006F FF8C  F032    	movff	plusw1,btemp
 13138  015DFC  0E96               	movlw	150
 13139  015DFE  5E32               	subwf	btemp^0,f,c
 13140  015E00  0EFE               	movlw	-2
 13141  015E02  0060  F0CB  FFE3   	movff	btemp,plusw1
 13142                           
 13143                           ;stkvar	_exp1 @ sp[(-2)+0]
 13144  015E08  0EFE               	movlw	-2
 13145  015E0A  AEE3               	btfss	plusw1,7,c
 13146  015E0C  D014               	goto	l10132
 13147                           
 13148                           ;stkvar	_exp1 @ sp[(-2)+0]
 13149  015E0E  0EFE               	movlw	-2
 13150  015E10  50E3               	movf	plusw1,w,c
 13151  015E12  0A80               	xorlw	128
 13152  015E14  0F97               	addlw	151
 13153  015E16  A0D8               	btfss	status,0,c
 13154  015E18  D7B9               	goto	u10540
 13155  015E1A                     l10130:
 13156                           
 13157                           ;stkvar	_f1 @ sp[(-2)+-4]
 13158  015E1A  90D8               	bcf	status,0,c
 13159  015E1C  0EFD               	movlw	-3
 13160  015E1E  32E3               	rrcf	plusw1,f,c
 13161  015E20  0EFC               	movlw	-4
 13162  015E22  32E3               	rrcf	plusw1,f,c
 13163  015E24  0EFB               	movlw	-5
 13164  015E26  32E3               	rrcf	plusw1,f,c
 13165  015E28  0EFA               	movlw	-6
 13166  015E2A  32E3               	rrcf	plusw1,f,c
 13167                           
 13168                           ;stkvar	_exp1 @ sp[(-2)+0]
 13169  015E2C  0EFE               	movlw	-2
 13170  015E2E  2AE3               	incf	plusw1,f,c
 13171  015E30  B4D8               	btfsc	status,2,c
 13172  015E32  D018               	goto	u10600
 13173  015E34  D7F2               	goto	l10130
 13174  015E36                     l10132:
 13175                           
 13176                           ;stkvar	_exp1 @ sp[(-2)+0]
 13177  015E36  0EFE               	movlw	-2
 13178  015E38  006F FF8C  F032    	movff	plusw1,btemp
 13179  015E3E  0E1F               	movlw	31
 13180  015E40  6432               	cpfsgt	btemp^0,c
 13181  015E42  D00C               	goto	l10140
 13182  015E44  D7A3               	goto	u10540
 13183  015E46                     l10138:
 13184                           
 13185                           ;stkvar	_f1 @ sp[(-2)+-4]
 13186  015E46  90D8               	bcf	status,0,c
 13187  015E48  0EFA               	movlw	-6
 13188  015E4A  36E3               	rlcf	plusw1,f,c
 13189  015E4C  0EFB               	movlw	-5
 13190  015E4E  36E3               	rlcf	plusw1,f,c
 13191  015E50  0EFC               	movlw	-4
 13192  015E52  36E3               	rlcf	plusw1,f,c
 13193  015E54  0EFD               	movlw	-3
 13194  015E56  36E3               	rlcf	plusw1,f,c
 13195                           
 13196                           ;stkvar	_exp1 @ sp[(-2)+0]
 13197  015E58  0EFE               	movlw	-2
 13198  015E5A  06E3               	decf	plusw1,f,c
 13199  015E5C                     l10140:
 13200                           
 13201                           ;stkvar	_exp1 @ sp[(-2)+0]
 13202  015E5C  0EFE               	movlw	-2
 13203  015E5E  50E3               	movf	plusw1,w,c
 13204  015E60  A4D8               	btfss	status,2,c
 13205  015E62  D7F1               	goto	l10138
 13206  015E64                     u10600:
 13207                           
 13208                           ;stkvar	_sign1 @ sp[(-2)+1]
 13209  015E64  0EFF               	movlw	-1
 13210  015E66  50E3               	movf	plusw1,w,c
 13211  015E68  B4D8               	btfsc	status,2,c
 13212  015E6A  D011               	goto	u10620
 13213                           
 13214                           ;stkvar	_f1 @ sp[(-2)+-4]
 13215                           ;stkvar	_f1 @ sp[(-2)+-4]
 13216  015E6C  0EFA               	movlw	-6
 13217  015E6E  6CE3               	negf	plusw1,c
 13218  015E70  0EFB               	movlw	-5
 13219  015E72  1EE3               	comf	plusw1,f,c
 13220  015E74  0EFC               	movlw	-4
 13221  015E76  1EE3               	comf	plusw1,f,c
 13222  015E78  0EFD               	movlw	-3
 13223  015E7A  1EE3               	comf	plusw1,f,c
 13224  015E7C  E308               	bnc	u10620
 13225  015E7E  0EFB               	movlw	-5
 13226  015E80  2AE3               	incf	plusw1,f,c
 13227  015E82  E305               	bnc	u10620
 13228  015E84  0EFC               	movlw	-4
 13229  015E86  2AE3               	incf	plusw1,f,c
 13230  015E88  E302               	bnc	u10620
 13231  015E8A  0EFD               	movlw	-3
 13232  015E8C  2AE3               	incf	plusw1,f,c
 13233  015E8E                     u10620:
 13234                           
 13235                           ;stkvar	_f1 @ sp[(-2)+-4]
 13236  015E8E  0EFA               	movlw	-6
 13237  015E90  006F FF8C  F032    	movff	plusw1,btemp
 13238  015E96  0EFB               	movlw	-5
 13239  015E98  006F FF8C  F033    	movff	plusw1,btemp+1
 13240  015E9E  0EFC               	movlw	-4
 13241  015EA0  006F FF8C  F034    	movff	plusw1,btemp+2
 13242  015EA6  0EFD               	movlw	-3
 13243  015EA8  006F FF8C  F035    	movff	plusw1,btemp+3
 13244  015EAE                     l2334:
 13245                           
 13246                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13247  015EAE  0EFA               	movlw	250
 13248  015EB0  26E1               	addwf	fsr1l,f,c
 13249  015EB2  0EFF               	movlw	255
 13250  015EB4  22E2               	addwfc	fsr1h,f,c
 13251  015EB6  0012               	return		;funcret
 13252  015EB8                     __end_of___fltol:
 13253                           	opt callstack 0
 13254                           
 13255 ;; *************** function ___flsub *****************
 13256 ;; Defined at:
 13257 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 13258 ;; Parameters:    Size  Location     Type
 13259 ;;  b               4  [STACK] long 
 13260 ;;  a               4  [STACK] long 
 13261 ;; Auto vars:     Size  Location     Type
 13262 ;;		None
 13263 ;; Return value:  Size  Location     Type
 13264 ;;                  4  [STACK] long 
 13265 ;; Registers used:
 13266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13267 ;; Tracked objects:
 13268 ;;		On entry : 0/39
 13269 ;;		On exit  : 0/0
 13270 ;;		Unchanged: 0/0
 13271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13276 ;;Total ram usage:        0 bytes
 13277 ;; Hardware stack levels used:    1
 13278 ;; Hardware stack levels required when called:    7
 13279 ;; This function calls:
 13280 ;;		___fladd
 13281 ;; This function is called by:
 13282 ;;		_conv_raw_result
 13283 ;;		_lp_filter
 13284 ;;		_efgtoa
 13285 ;; This function uses a reentrant model
 13286 ;;
 13287                           
 13288                           	psect	text50
 13289  0179DE                     __ptext50:
 13290                           	opt callstack 0
 13291  0179DE                     ___flsub:
 13292                           	opt callstack 16
 13293                           
 13294                           ;stkvar	_a @ sp[(0)+-8]
 13295                           
 13296                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13297                           ;incstack = 0
 13298  0179DE  0EFB               	movlw	-5
 13299  0179E0  7EE3               	btg	plusw1,7,c
 13300                           
 13301                           ;stkvar	_a @ sp[(0)+-8]
 13302  0179E2  0EF8               	movlw	-8
 13303  0179E4  006F FF8F FFE6     	movff	plusw1,postinc1
 13304  0179EA  006F FF8F FFE6     	movff	plusw1,postinc1
 13305  0179F0  006F FF8F FFE6     	movff	plusw1,postinc1
 13306  0179F6  006F FF8F FFE6     	movff	plusw1,postinc1
 13307                           
 13308                           ;stkvar	_b @ sp[(-4)+-4]
 13309  0179FC  0EF8               	movlw	-8
 13310  0179FE  006F FF8F FFE6     	movff	plusw1,postinc1
 13311  017A04  006F FF8F FFE6     	movff	plusw1,postinc1
 13312  017A0A  006F FF8F FFE6     	movff	plusw1,postinc1
 13313  017A10  006F FF8F FFE6     	movff	plusw1,postinc1
 13314  017A16  ECD6  F092         	call	___fladd	;wreg free
 13315                           
 13316                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 13317  017A1A  0EF8               	movlw	248
 13318  017A1C  26E1               	addwf	fsr1l,f,c
 13319  017A1E  0EFF               	movlw	255
 13320  017A20  22E2               	addwfc	fsr1h,f,c
 13321  017A22  0012               	return		;funcret
 13322  017A24                     __end_of___flsub:
 13323                           	opt callstack 0
 13324                           
 13325 ;; *************** function ___fladd *****************
 13326 ;; Defined at:
 13327 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 13328 ;; Parameters:    Size  Location     Type
 13329 ;;  b               4  [STACK] long 
 13330 ;;  a               4  [STACK] long 
 13331 ;; Auto vars:     Size  Location     Type
 13332 ;;  grs             1  [STACK] unsigned char 
 13333 ;;  bexp            1  [STACK] unsigned char 
 13334 ;;  aexp            1  [STACK] unsigned char 
 13335 ;;  signs           1  [STACK] unsigned char 
 13336 ;; Return value:  Size  Location     Type
 13337 ;;                  4  [STACK] unsigned char 
 13338 ;; Registers used:
 13339 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13340 ;; Tracked objects:
 13341 ;;		On entry : 0/39
 13342 ;;		On exit  : 0/0
 13343 ;;		Unchanged: 0/0
 13344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13349 ;;Total ram usage:        0 bytes
 13350 ;; Hardware stack levels used:    1
 13351 ;; Hardware stack levels required when called:    6
 13352 ;; This function calls:
 13353 ;;		Nothing
 13354 ;; This function is called by:
 13355 ;;		_lp_filter
 13356 ;;		_efgtoa
 13357 ;;		___flsub
 13358 ;; This function uses a reentrant model
 13359 ;;
 13360                           
 13361                           	psect	text51
 13362  0125AC                     __ptext51:
 13363                           	opt callstack 0
 13364  0125AC                     ___fladd:
 13365                           	opt callstack 0
 13366                           
 13367                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13368  0125AC  52E6               	movf	postinc1,f,c
 13369  0125AE  52E6               	movf	postinc1,f,c
 13370  0125B0  52E6               	movf	postinc1,f,c
 13371  0125B2  52E6               	movf	postinc1,f,c
 13372                           
 13373                           ;stkvar	_b @ sp[(-4)+-4]
 13374                           
 13375                           ;incstack = 0
 13376  0125B4  0EFB               	movlw	251
 13377  0125B6  24E1               	addwf	fsr1l,w,c
 13378  0125B8  6ED9               	movwf	fsr2l,c
 13379  0125BA  0EFF               	movlw	255
 13380  0125BC  20E2               	addwfc	fsr1h,w,c
 13381  0125BE  6EDA               	movwf	fsr2h,c
 13382  0125C0  50DF               	movf	indf2,w,c
 13383  0125C2  6E3D               	movwf	(btemp+11)^0,c
 13384  0125C4  0E80               	movlw	128
 13385  0125C6  163D               	andwf	(btemp+11)^0,f,c
 13386                           
 13387                           ;stkvar	_signs @ sp[(-4)+3]
 13388  0125C8  0EFF               	movlw	-1
 13389  0125CA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13390                           
 13391                           ;stkvar	_b @ sp[(-4)+-4]
 13392  0125D0  0EFB               	movlw	251
 13393  0125D2  24E1               	addwf	fsr1l,w,c
 13394  0125D4  6ED9               	movwf	fsr2l,c
 13395  0125D6  0EFF               	movlw	255
 13396  0125D8  20E2               	addwfc	fsr1h,w,c
 13397  0125DA  6EDA               	movwf	fsr2h,c
 13398  0125DC  50DF               	movf	indf2,w,c
 13399  0125DE  6E3D               	movwf	(btemp+11)^0,c
 13400  0125E0  90D8               	bcf	status,0,c
 13401  0125E2  343D               	rlcf	(btemp+11)^0,w,c
 13402  0125E4  6E3C               	movwf	(btemp+10)^0,c
 13403                           
 13404                           ;stkvar	_bexp @ sp[(-4)+1]
 13405  0125E6  0EFD               	movlw	-3
 13406  0125E8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13407                           
 13408                           ;stkvar	_b @ sp[(-4)+-4]
 13409  0125EE  0EFA               	movlw	250
 13410  0125F0  24E1               	addwf	fsr1l,w,c
 13411  0125F2  6ED9               	movwf	fsr2l,c
 13412  0125F4  0EFF               	movlw	255
 13413  0125F6  20E2               	addwfc	fsr1h,w,c
 13414  0125F8  6EDA               	movwf	fsr2h,c
 13415  0125FA  AEDF               	btfss	indf2,7,c
 13416  0125FC  D002               	goto	l9228
 13417                           
 13418                           ;stkvar	_bexp @ sp[(-4)+1]
 13419  0125FE  0EFD               	movlw	-3
 13420  012600  80E3               	bsf	plusw1,0,c
 13421  012602                     l9228:
 13422                           
 13423                           ;stkvar	_bexp @ sp[(-4)+1]
 13424  012602  0EFD               	movlw	-3
 13425  012604  50E3               	movf	plusw1,w,c
 13426  012606  B4D8               	btfsc	status,2,c
 13427  012608  D027               	goto	l9238
 13428                           
 13429                           ;stkvar	_bexp @ sp[(-4)+1]
 13430  01260A  0EFD               	movlw	-3
 13431  01260C  28E3               	incf	plusw1,w,c
 13432  01260E  A4D8               	btfss	status,2,c
 13433  012610  D018               	goto	l9234
 13434  012612  0E00               	movlw	0
 13435  012614  6E3A               	movwf	(btemp+8)^0,c
 13436  012616  0E00               	movlw	0
 13437  012618  6E3B               	movwf	(btemp+9)^0,c
 13438  01261A  0E00               	movlw	0
 13439  01261C  6E3C               	movwf	(btemp+10)^0,c
 13440  01261E  0E00               	movlw	0
 13441  012620  6E3D               	movwf	(btemp+11)^0,c
 13442                           
 13443                           ;stkvar	_b @ sp[(-4)+-4]
 13444  012622  0EF8               	movlw	-8
 13445  012624  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13446  01262A  0EF9               	movlw	-7
 13447  01262C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13448  012632  0EFA               	movlw	-6
 13449  012634  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13450  01263A  0EFB               	movlw	-5
 13451  01263C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13452  012642                     l9234:
 13453                           
 13454                           ;stkvar	_b @ sp[(-4)+-4]
 13455  012642  0EFA               	movlw	-6
 13456  012644  8EE3               	bsf	plusw1,7,c
 13457                           
 13458                           ;stkvar	_b @ sp[(-4)+-4]
 13459  012646  0EFB               	movlw	251
 13460  012648  24E1               	addwf	fsr1l,w,c
 13461  01264A  6ED9               	movwf	fsr2l,c
 13462  01264C  0EFF               	movlw	255
 13463  01264E  20E2               	addwfc	fsr1h,w,c
 13464  012650  6EDA               	movwf	fsr2h,c
 13465  012652  0E00               	movlw	0
 13466  012654  6EDF               	movwf	indf2,c
 13467  012656  D018               	goto	l9240
 13468  012658                     l9238:
 13469  012658  0E00               	movlw	0
 13470  01265A  6E3A               	movwf	(btemp+8)^0,c
 13471  01265C  0E00               	movlw	0
 13472  01265E  6E3B               	movwf	(btemp+9)^0,c
 13473  012660  0E00               	movlw	0
 13474  012662  6E3C               	movwf	(btemp+10)^0,c
 13475  012664  0E00               	movlw	0
 13476  012666  6E3D               	movwf	(btemp+11)^0,c
 13477                           
 13478                           ;stkvar	_b @ sp[(-4)+-4]
 13479  012668  0EF8               	movlw	-8
 13480  01266A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13481  012670  0EF9               	movlw	-7
 13482  012672  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13483  012678  0EFA               	movlw	-6
 13484  01267A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13485  012680  0EFB               	movlw	-5
 13486  012682  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13487  012688                     l9240:
 13488                           
 13489                           ;stkvar	_a @ sp[(-4)+-8]
 13490  012688  0EF7               	movlw	247
 13491  01268A  24E1               	addwf	fsr1l,w,c
 13492  01268C  6ED9               	movwf	fsr2l,c
 13493  01268E  0EFF               	movlw	255
 13494  012690  20E2               	addwfc	fsr1h,w,c
 13495  012692  6EDA               	movwf	fsr2h,c
 13496  012694  50DF               	movf	indf2,w,c
 13497  012696  6E3D               	movwf	(btemp+11)^0,c
 13498  012698  0E80               	movlw	128
 13499  01269A  163D               	andwf	(btemp+11)^0,f,c
 13500                           
 13501                           ;stkvar	_aexp @ sp[(-4)+2]
 13502  01269C  0EFE               	movlw	-2
 13503  01269E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13504                           
 13505                           ;stkvar	_signs @ sp[(-4)+3]
 13506                           ;stkvar	_aexp @ sp[(-4)+2]
 13507  0126A4  50E1               	movf	fsr1l,w,c
 13508  0126A6  0FFE               	addlw	-2
 13509  0126A8  6ED9               	movwf	fsr2l,c
 13510  0126AA  50E2               	movf	fsr1h,w,c
 13511  0126AC  6EDA               	movwf	fsr2h,c
 13512  0126AE  0EFF               	movlw	255
 13513  0126B0  22DA               	addwfc	fsr2h,f,c
 13514  0126B2  0EFF               	movlw	-1
 13515  0126B4  50E3               	movf	plusw1,w,c
 13516  0126B6  18DE               	xorwf	postinc2,w,c
 13517  0126B8  B4D8               	btfsc	status,2,c
 13518  0126BA  D002               	goto	l9246
 13519                           
 13520                           ;stkvar	_signs @ sp[(-4)+3]
 13521  0126BC  0EFF               	movlw	-1
 13522  0126BE  8CE3               	bsf	plusw1,6,c
 13523  0126C0                     l9246:
 13524                           
 13525                           ;stkvar	_a @ sp[(-4)+-8]
 13526  0126C0  0EF7               	movlw	247
 13527  0126C2  24E1               	addwf	fsr1l,w,c
 13528  0126C4  6ED9               	movwf	fsr2l,c
 13529  0126C6  0EFF               	movlw	255
 13530  0126C8  20E2               	addwfc	fsr1h,w,c
 13531  0126CA  6EDA               	movwf	fsr2h,c
 13532  0126CC  50DF               	movf	indf2,w,c
 13533  0126CE  6E3D               	movwf	(btemp+11)^0,c
 13534  0126D0  90D8               	bcf	status,0,c
 13535  0126D2  343D               	rlcf	(btemp+11)^0,w,c
 13536  0126D4  6E3C               	movwf	(btemp+10)^0,c
 13537                           
 13538                           ;stkvar	_aexp @ sp[(-4)+2]
 13539  0126D6  0EFE               	movlw	-2
 13540  0126D8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13541                           
 13542                           ;stkvar	_a @ sp[(-4)+-8]
 13543  0126DE  0EF6               	movlw	246
 13544  0126E0  24E1               	addwf	fsr1l,w,c
 13545  0126E2  6ED9               	movwf	fsr2l,c
 13546  0126E4  0EFF               	movlw	255
 13547  0126E6  20E2               	addwfc	fsr1h,w,c
 13548  0126E8  6EDA               	movwf	fsr2h,c
 13549  0126EA  AEDF               	btfss	indf2,7,c
 13550  0126EC  D002               	goto	l9252
 13551                           
 13552                           ;stkvar	_aexp @ sp[(-4)+2]
 13553  0126EE  0EFE               	movlw	-2
 13554  0126F0  80E3               	bsf	plusw1,0,c
 13555  0126F2                     l9252:
 13556                           
 13557                           ;stkvar	_aexp @ sp[(-4)+2]
 13558  0126F2  0EFE               	movlw	-2
 13559  0126F4  50E3               	movf	plusw1,w,c
 13560  0126F6  B4D8               	btfsc	status,2,c
 13561  0126F8  D027               	goto	l9262
 13562                           
 13563                           ;stkvar	_aexp @ sp[(-4)+2]
 13564  0126FA  0EFE               	movlw	-2
 13565  0126FC  28E3               	incf	plusw1,w,c
 13566  0126FE  A4D8               	btfss	status,2,c
 13567  012700  D018               	goto	l9258
 13568  012702  0E00               	movlw	0
 13569  012704  6E3A               	movwf	(btemp+8)^0,c
 13570  012706  0E00               	movlw	0
 13571  012708  6E3B               	movwf	(btemp+9)^0,c
 13572  01270A  0E00               	movlw	0
 13573  01270C  6E3C               	movwf	(btemp+10)^0,c
 13574  01270E  0E00               	movlw	0
 13575  012710  6E3D               	movwf	(btemp+11)^0,c
 13576                           
 13577                           ;stkvar	_a @ sp[(-4)+-8]
 13578  012712  0EF4               	movlw	-12
 13579  012714  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13580  01271A  0EF5               	movlw	-11
 13581  01271C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13582  012722  0EF6               	movlw	-10
 13583  012724  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13584  01272A  0EF7               	movlw	-9
 13585  01272C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13586  012732                     l9258:
 13587                           
 13588                           ;stkvar	_a @ sp[(-4)+-8]
 13589  012732  0EF6               	movlw	-10
 13590  012734  8EE3               	bsf	plusw1,7,c
 13591                           
 13592                           ;stkvar	_a @ sp[(-4)+-8]
 13593  012736  0EF7               	movlw	247
 13594  012738  24E1               	addwf	fsr1l,w,c
 13595  01273A  6ED9               	movwf	fsr2l,c
 13596  01273C  0EFF               	movlw	255
 13597  01273E  20E2               	addwfc	fsr1h,w,c
 13598  012740  6EDA               	movwf	fsr2h,c
 13599  012742  0E00               	movlw	0
 13600  012744  6EDF               	movwf	indf2,c
 13601  012746  D018               	goto	l9264
 13602  012748                     l9262:
 13603  012748  0E00               	movlw	0
 13604  01274A  6E3A               	movwf	(btemp+8)^0,c
 13605  01274C  0E00               	movlw	0
 13606  01274E  6E3B               	movwf	(btemp+9)^0,c
 13607  012750  0E00               	movlw	0
 13608  012752  6E3C               	movwf	(btemp+10)^0,c
 13609  012754  0E00               	movlw	0
 13610  012756  6E3D               	movwf	(btemp+11)^0,c
 13611                           
 13612                           ;stkvar	_a @ sp[(-4)+-8]
 13613  012758  0EF4               	movlw	-12
 13614  01275A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13615  012760  0EF5               	movlw	-11
 13616  012762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13617  012768  0EF6               	movlw	-10
 13618  01276A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13619  012770  0EF7               	movlw	-9
 13620  012772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13621  012778                     l9264:
 13622                           
 13623                           ;stkvar	_bexp @ sp[(-4)+1]
 13624                           ;stkvar	_aexp @ sp[(-4)+2]
 13625  012778  50E1               	movf	fsr1l,w,c
 13626  01277A  0FFE               	addlw	-2
 13627  01277C  6ED9               	movwf	fsr2l,c
 13628  01277E  50E2               	movf	fsr1h,w,c
 13629  012780  6EDA               	movwf	fsr2h,c
 13630  012782  0EFF               	movlw	255
 13631  012784  22DA               	addwfc	fsr2h,f,c
 13632  012786  0EFD               	movlw	-3
 13633  012788  50E3               	movf	plusw1,w,c
 13634  01278A  5CDE               	subwf	postinc2,w,c
 13635  01278C  B0D8               	btfsc	status,0,c
 13636  01278E  D0A4               	goto	l9300
 13637                           
 13638                           ;stkvar	_signs @ sp[(-4)+3]
 13639  012790  0EFF               	movlw	-1
 13640  012792  ACE3               	btfss	plusw1,6,c
 13641  012794  D002               	goto	l9270
 13642                           
 13643                           ;stkvar	_signs @ sp[(-4)+3]
 13644  012796  0EFF               	movlw	-1
 13645  012798  7EE3               	btg	plusw1,7,c
 13646  01279A                     l9270:
 13647                           
 13648                           ;stkvar	_bexp @ sp[(-4)+1]
 13649                           ;stkvar	_grs @ sp[(-4)+0]
 13650  01279A  0EFD               	movlw	-3
 13651  01279C  006F FF8C  F032    	movff	plusw1,btemp
 13652  0127A2  0EFC               	movlw	-4
 13653  0127A4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13654                           
 13655                           ;stkvar	_aexp @ sp[(-4)+2]
 13656                           ;stkvar	_bexp @ sp[(-4)+1]
 13657  0127AA  0EFE               	movlw	-2
 13658  0127AC  006F FF8C  F032    	movff	plusw1,btemp
 13659  0127B2  0EFD               	movlw	-3
 13660  0127B4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13661                           
 13662                           ;stkvar	_grs @ sp[(-4)+0]
 13663                           ;stkvar	_aexp @ sp[(-4)+2]
 13664  0127BA  0EFC               	movlw	-4
 13665  0127BC  006F FF8C  F032    	movff	plusw1,btemp
 13666  0127C2  0EFE               	movlw	-2
 13667  0127C4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13668                           
 13669                           ;stkvar	_b @ sp[(-4)+-4]
 13670                           ;stkvar	_grs @ sp[(-4)+0]
 13671  0127CA  0EF8               	movlw	-8
 13672  0127CC  006F FF8C  F032    	movff	plusw1,btemp
 13673  0127D2  0EFC               	movlw	-4
 13674  0127D4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13675                           
 13676                           ;stkvar	_a @ sp[(-4)+-8]
 13677                           ;stkvar	_b @ sp[(-4)+-4]
 13678  0127DA  0EF4               	movlw	-12
 13679  0127DC  006F FF8C  F032    	movff	plusw1,btemp
 13680  0127E2  0EF8               	movlw	-8
 13681  0127E4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13682                           
 13683                           ;stkvar	_grs @ sp[(-4)+0]
 13684                           ;stkvar	_a @ sp[(-4)+-8]
 13685  0127EA  0EFC               	movlw	-4
 13686  0127EC  006F FF8C  F032    	movff	plusw1,btemp
 13687  0127F2  0EF4               	movlw	-12
 13688  0127F4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13689                           
 13690                           ;stkvar	_b @ sp[(-4)+-4]
 13691  0127FA  0EF9               	movlw	249
 13692  0127FC  24E1               	addwf	fsr1l,w,c
 13693  0127FE  6ED9               	movwf	fsr2l,c
 13694  012800  0EFF               	movlw	255
 13695  012802  20E2               	addwfc	fsr1h,w,c
 13696  012804  6EDA               	movwf	fsr2h,c
 13697  012806  50DF               	movf	indf2,w,c
 13698  012808  6E3D               	movwf	(btemp+11)^0,c
 13699                           
 13700                           ;stkvar	_grs @ sp[(-4)+0]
 13701  01280A  0EFC               	movlw	-4
 13702  01280C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13703                           
 13704                           ;stkvar	_a @ sp[(-4)+-8]
 13705  012812  0EF5               	movlw	245
 13706  012814  24E1               	addwf	fsr1l,w,c
 13707  012816  6ED9               	movwf	fsr2l,c
 13708  012818  0EFF               	movlw	255
 13709  01281A  20E2               	addwfc	fsr1h,w,c
 13710  01281C  6EDA               	movwf	fsr2h,c
 13711                           
 13712                           ;stkvar	_b @ sp[(-4)+-4]
 13713  01281E  0EF9               	movlw	249
 13714  012820  24E1               	addwf	fsr1l,w,c
 13715  012822  6EE9               	movwf	fsr0l,c
 13716  012824  0EFF               	movlw	255
 13717  012826  20E2               	addwfc	fsr1h,w,c
 13718  012828  6EEA               	movwf	fsr0h,c
 13719  01282A  006F FF7F FFEF     	movff	indf2,indf0
 13720                           
 13721                           ;stkvar	_grs @ sp[(-4)+0]
 13722                           ;stkvar	_a @ sp[(-4)+-8]
 13723  012830  0EF5               	movlw	245
 13724  012832  24E1               	addwf	fsr1l,w,c
 13725  012834  6ED9               	movwf	fsr2l,c
 13726  012836  0EFF               	movlw	255
 13727  012838  20E2               	addwfc	fsr1h,w,c
 13728  01283A  6EDA               	movwf	fsr2h,c
 13729  01283C  0EFC               	movlw	-4
 13730  01283E  006F FF8F FFDF     	movff	plusw1,indf2
 13731                           
 13732                           ;stkvar	_b @ sp[(-4)+-4]
 13733  012844  0EFA               	movlw	250
 13734  012846  24E1               	addwf	fsr1l,w,c
 13735  012848  6ED9               	movwf	fsr2l,c
 13736  01284A  0EFF               	movlw	255
 13737  01284C  20E2               	addwfc	fsr1h,w,c
 13738  01284E  6EDA               	movwf	fsr2h,c
 13739  012850  50DF               	movf	indf2,w,c
 13740  012852  6E3D               	movwf	(btemp+11)^0,c
 13741                           
 13742                           ;stkvar	_grs @ sp[(-4)+0]
 13743  012854  0EFC               	movlw	-4
 13744  012856  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13745                           
 13746                           ;stkvar	_a @ sp[(-4)+-8]
 13747  01285C  0EF6               	movlw	246
 13748  01285E  24E1               	addwf	fsr1l,w,c
 13749  012860  6ED9               	movwf	fsr2l,c
 13750  012862  0EFF               	movlw	255
 13751  012864  20E2               	addwfc	fsr1h,w,c
 13752  012866  6EDA               	movwf	fsr2h,c
 13753                           
 13754                           ;stkvar	_b @ sp[(-4)+-4]
 13755  012868  0EFA               	movlw	250
 13756  01286A  24E1               	addwf	fsr1l,w,c
 13757  01286C  6EE9               	movwf	fsr0l,c
 13758  01286E  0EFF               	movlw	255
 13759  012870  20E2               	addwfc	fsr1h,w,c
 13760  012872  6EEA               	movwf	fsr0h,c
 13761  012874  006F FF7F FFEF     	movff	indf2,indf0
 13762                           
 13763                           ;stkvar	_grs @ sp[(-4)+0]
 13764                           ;stkvar	_a @ sp[(-4)+-8]
 13765  01287A  0EF6               	movlw	246
 13766  01287C  24E1               	addwf	fsr1l,w,c
 13767  01287E  6ED9               	movwf	fsr2l,c
 13768  012880  0EFF               	movlw	255
 13769  012882  20E2               	addwfc	fsr1h,w,c
 13770  012884  6EDA               	movwf	fsr2h,c
 13771  012886  0EFC               	movlw	-4
 13772  012888  006F FF8F FFDF     	movff	plusw1,indf2
 13773                           
 13774                           ;stkvar	_b @ sp[(-4)+-4]
 13775  01288E  0EFB               	movlw	251
 13776  012890  24E1               	addwf	fsr1l,w,c
 13777  012892  6ED9               	movwf	fsr2l,c
 13778  012894  0EFF               	movlw	255
 13779  012896  20E2               	addwfc	fsr1h,w,c
 13780  012898  6EDA               	movwf	fsr2h,c
 13781  01289A  50DF               	movf	indf2,w,c
 13782  01289C  6E3D               	movwf	(btemp+11)^0,c
 13783                           
 13784                           ;stkvar	_grs @ sp[(-4)+0]
 13785  01289E  0EFC               	movlw	-4
 13786  0128A0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13787                           
 13788                           ;stkvar	_a @ sp[(-4)+-8]
 13789  0128A6  0EF7               	movlw	247
 13790  0128A8  24E1               	addwf	fsr1l,w,c
 13791  0128AA  6ED9               	movwf	fsr2l,c
 13792  0128AC  0EFF               	movlw	255
 13793  0128AE  20E2               	addwfc	fsr1h,w,c
 13794  0128B0  6EDA               	movwf	fsr2h,c
 13795                           
 13796                           ;stkvar	_b @ sp[(-4)+-4]
 13797  0128B2  0EFB               	movlw	251
 13798  0128B4  24E1               	addwf	fsr1l,w,c
 13799  0128B6  6EE9               	movwf	fsr0l,c
 13800  0128B8  0EFF               	movlw	255
 13801  0128BA  20E2               	addwfc	fsr1h,w,c
 13802  0128BC  6EEA               	movwf	fsr0h,c
 13803  0128BE  006F FF7F FFEF     	movff	indf2,indf0
 13804                           
 13805                           ;stkvar	_grs @ sp[(-4)+0]
 13806                           ;stkvar	_a @ sp[(-4)+-8]
 13807  0128C4  0EF7               	movlw	247
 13808  0128C6  24E1               	addwf	fsr1l,w,c
 13809  0128C8  6ED9               	movwf	fsr2l,c
 13810  0128CA  0EFF               	movlw	255
 13811  0128CC  20E2               	addwfc	fsr1h,w,c
 13812  0128CE  6EDA               	movwf	fsr2h,c
 13813  0128D0  0EFC               	movlw	-4
 13814  0128D2  006F FF8F FFDF     	movff	plusw1,indf2
 13815  0128D8                     l9300:
 13816                           
 13817                           ;stkvar	_grs @ sp[(-4)+0]
 13818  0128D8  0EFC               	movlw	-4
 13819  0128DA  6AE3               	clrf	plusw1,c
 13820                           
 13821                           ;stkvar	_aexp @ sp[(-4)+2]
 13822  0128DC  0EFE               	movlw	-2
 13823  0128DE  50E3               	movf	plusw1,w,c
 13824  0128E0  6E3C               	movwf	(btemp+10)^0,c
 13825  0128E2  6A3D               	clrf	(btemp+11)^0,c
 13826                           
 13827                           ;stkvar	_bexp @ sp[(-4)+1]
 13828  0128E4  0EFD               	movlw	-3
 13829  0128E6  50E3               	movf	plusw1,w,c
 13830  0128E8  5E3C               	subwf	(btemp+10)^0,f,c
 13831  0128EA  0E00               	movlw	0
 13832  0128EC  5A3D               	subwfb	(btemp+11)^0,f,c
 13833  0128EE  BE3D               	btfsc	(btemp+11)^0,7,c
 13834  0128F0  D062               	goto	l9324
 13835  0128F2  503D               	movf	(btemp+11)^0,w,c
 13836  0128F4  E104               	bnz	u8920
 13837  0128F6  0E1A               	movlw	26
 13838  0128F8  5C3C               	subwf	(btemp+10)^0,w,c
 13839  0128FA  A0D8               	btfss	status,0,c
 13840  0128FC  D05C               	goto	l9324
 13841  0128FE                     u8920:
 13842                           
 13843                           ;stkvar	_b @ sp[(-4)+-4]
 13844  0128FE  0EF8               	movlw	-8
 13845  012900  50E3               	movf	plusw1,w,c
 13846  012902  E10A               	bnz	u8931
 13847  012904  0EF9               	movlw	-7
 13848  012906  50E3               	movf	plusw1,w,c
 13849  012908  E107               	bnz	u8931
 13850  01290A  0EFA               	movlw	-6
 13851  01290C  50E3               	movf	plusw1,w,c
 13852  01290E  E104               	bnz	u8931
 13853  012910  0EFB               	movlw	-5
 13854  012912  50E3               	movf	plusw1,w,c
 13855  012914  B4D8               	btfsc	status,2,c
 13856  012916  D003               	goto	u8930
 13857  012918                     u8931:
 13858  012918  6A3D               	clrf	(btemp+11)^0,c
 13859  01291A  2A3D               	incf	(btemp+11)^0,f,c
 13860  01291C  D001               	goto	u8948
 13861  01291E                     u8930:
 13862  01291E  6A3D               	clrf	(btemp+11)^0,c
 13863  012920                     u8948:
 13864                           
 13865                           ;stkvar	_grs @ sp[(-4)+0]
 13866  012920  0EFC               	movlw	-4
 13867  012922  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13868                           
 13869                           ;stkvar	_b @ sp[(-4)+-4]
 13870  012928  0EF8               	movlw	-8
 13871  01292A  6AE3               	clrf	plusw1,c
 13872  01292C  0EF9               	movlw	-7
 13873  01292E  6AE3               	clrf	plusw1,c
 13874  012930  0EFA               	movlw	-6
 13875  012932  6AE3               	clrf	plusw1,c
 13876  012934  0EFB               	movlw	-5
 13877  012936  6AE3               	clrf	plusw1,c
 13878                           
 13879                           ;stkvar	_aexp @ sp[(-4)+2]
 13880                           ;stkvar	_bexp @ sp[(-4)+1]
 13881  012938  0EFE               	movlw	-2
 13882  01293A  006F FF8C  F032    	movff	plusw1,btemp
 13883  012940  0EFD               	movlw	-3
 13884  012942  0060  F0CB  FFE3   	movff	btemp,plusw1
 13885  012948  D042               	goto	u8980
 13886  01294A                     l9310:
 13887                           
 13888                           ;stkvar	_grs @ sp[(-4)+0]
 13889  01294A  0EFC               	movlw	-4
 13890  01294C  A0E3               	btfss	plusw1,0,c
 13891  01294E  D00D               	goto	l9314
 13892                           
 13893                           ;stkvar	_grs @ sp[(-4)+0]
 13894  012950  0EFC               	movlw	-4
 13895  012952  006F FF8C  F03D    	movff	plusw1,btemp+11
 13896  012958  90D8               	bcf	status,0,c
 13897  01295A  323D               	rrcf	(btemp+11)^0,f,c
 13898  01295C  0E01               	movlw	1
 13899  01295E  123D               	iorwf	(btemp+11)^0,f,c
 13900                           
 13901                           ;stkvar	_grs @ sp[(-4)+0]
 13902  012960  0EFC               	movlw	-4
 13903  012962  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13904  012968  D009               	goto	l9316
 13905  01296A                     l9314:
 13906                           
 13907                           ;stkvar	_grs @ sp[(-4)+0]
 13908  01296A  50E1               	movf	fsr1l,w,c
 13909  01296C  0FFC               	addlw	-4
 13910  01296E  6ED9               	movwf	fsr2l,c
 13911  012970  50E2               	movf	fsr1h,w,c
 13912  012972  6EDA               	movwf	fsr2h,c
 13913  012974  0EFF               	movlw	255
 13914  012976  22DA               	addwfc	fsr2h,f,c
 13915  012978  90D8               	bcf	status,0,c
 13916  01297A  32DF               	rrcf	indf2,f,c
 13917  01297C                     l9316:
 13918                           
 13919                           ;stkvar	_b @ sp[(-4)+-4]
 13920  01297C  0EF8               	movlw	-8
 13921  01297E  A0E3               	btfss	plusw1,0,c
 13922  012980  D002               	goto	l9320
 13923                           
 13924                           ;stkvar	_grs @ sp[(-4)+0]
 13925  012982  0EFC               	movlw	-4
 13926  012984  8EE3               	bsf	plusw1,7,c
 13927  012986                     l9320:
 13928  012986  0E01               	movlw	1
 13929  012988  6E3D               	movwf	(btemp+11)^0,c
 13930                           
 13931                           ;stkvar	_b @ sp[(-4)+-4]
 13932  01298A  50E1               	movf	fsr1l,w,c
 13933  01298C  0FF8               	addlw	-8
 13934  01298E  6ED9               	movwf	fsr2l,c
 13935  012990  50E2               	movf	fsr1h,w,c
 13936  012992  6EDA               	movwf	fsr2h,c
 13937  012994  0EFF               	movlw	255
 13938  012996  22DA               	addwfc	fsr2h,f,c
 13939  012998  283D               	incf	(btemp+11)^0,w,c
 13940  01299A  52DE               	movf	postinc2,f,c
 13941  01299C  D008               	goto	u8970
 13942  01299E                     u8975:
 13943  01299E  52DE               	movf	postinc2,f,c
 13944  0129A0  90D8               	bcf	status,0,c
 13945  0129A2  BEDC               	btfsc	preinc2,7,c
 13946  0129A4  80D8               	bsf	status,0,c
 13947  0129A6  32DD               	rrcf	postdec2,f,c
 13948  0129A8  32DD               	rrcf	postdec2,f,c
 13949  0129AA  32DD               	rrcf	postdec2,f,c
 13950  0129AC  32DE               	rrcf	postinc2,f,c
 13951  0129AE                     u8970:
 13952  0129AE  2EE8               	decfsz	wreg,f,c
 13953  0129B0  D7F6               	goto	u8975
 13954                           
 13955                           ;stkvar	_bexp @ sp[(-4)+1]
 13956  0129B2  0EFD               	movlw	-3
 13957  0129B4  2AE3               	incf	plusw1,f,c
 13958  0129B6                     l9324:
 13959                           
 13960                           ;stkvar	_aexp @ sp[(-4)+2]
 13961                           ;stkvar	_bexp @ sp[(-4)+1]
 13962  0129B6  50E1               	movf	fsr1l,w,c
 13963  0129B8  0FFD               	addlw	-3
 13964  0129BA  6ED9               	movwf	fsr2l,c
 13965  0129BC  50E2               	movf	fsr1h,w,c
 13966  0129BE  6EDA               	movwf	fsr2h,c
 13967  0129C0  0EFF               	movlw	255
 13968  0129C2  22DA               	addwfc	fsr2h,f,c
 13969  0129C4  0EFE               	movlw	-2
 13970  0129C6  50E3               	movf	plusw1,w,c
 13971  0129C8  5CDE               	subwf	postinc2,w,c
 13972  0129CA  A0D8               	btfss	status,0,c
 13973  0129CC  D7BE               	goto	l9310
 13974  0129CE                     u8980:
 13975                           
 13976                           ;stkvar	_signs @ sp[(-4)+3]
 13977  0129CE  0EFF               	movlw	-1
 13978  0129D0  BCE3               	btfsc	plusw1,6,c
 13979  0129D2  D066               	goto	l9352
 13980                           
 13981                           ;stkvar	_bexp @ sp[(-4)+1]
 13982  0129D4  0EFD               	movlw	-3
 13983  0129D6  50E3               	movf	plusw1,w,c
 13984  0129D8  B4D8               	btfsc	status,2,c
 13985  0129DA  D0F2               	goto	u9080
 13986                           
 13987                           ;stkvar	_a @ sp[(-4)+-8]
 13988                           ;stkvar	_b @ sp[(-4)+-4]
 13989  0129DC  0EF8               	movlw	-8
 13990  0129DE  50E3               	movf	plusw1,w,c
 13991  0129E0  6E32               	movwf	btemp^0,c
 13992  0129E2  0EF4               	movlw	-12
 13993  0129E4  50E3               	movf	plusw1,w,c
 13994  0129E6  2632               	addwf	btemp^0,f,c
 13995  0129E8  0EF8               	movlw	-8
 13996  0129EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 13997  0129F0  0EF9               	movlw	-7
 13998  0129F2  50E3               	movf	plusw1,w,c
 13999  0129F4  6E32               	movwf	btemp^0,c
 14000  0129F6  0EF5               	movlw	-11
 14001  0129F8  50E3               	movf	plusw1,w,c
 14002  0129FA  2232               	addwfc	btemp^0,f,c
 14003  0129FC  0EF9               	movlw	-7
 14004  0129FE  0060  F0CB  FFE3   	movff	btemp,plusw1
 14005  012A04  0EFA               	movlw	-6
 14006  012A06  50E3               	movf	plusw1,w,c
 14007  012A08  6E32               	movwf	btemp^0,c
 14008  012A0A  0EF6               	movlw	-10
 14009  012A0C  50E3               	movf	plusw1,w,c
 14010  012A0E  2232               	addwfc	btemp^0,f,c
 14011  012A10  0EFA               	movlw	-6
 14012  012A12  0060  F0CB  FFE3   	movff	btemp,plusw1
 14013  012A18  0EFB               	movlw	-5
 14014  012A1A  50E3               	movf	plusw1,w,c
 14015  012A1C  6E32               	movwf	btemp^0,c
 14016  012A1E  0EF7               	movlw	-9
 14017  012A20  50E3               	movf	plusw1,w,c
 14018  012A22  2232               	addwfc	btemp^0,f,c
 14019  012A24  0EFB               	movlw	-5
 14020  012A26  0060  F0CB  FFE3   	movff	btemp,plusw1
 14021                           
 14022                           ;stkvar	_b @ sp[(-4)+-4]
 14023  012A2C  0EFB               	movlw	-5
 14024  012A2E  A0E3               	btfss	plusw1,0,c
 14025  012A30  D101               	goto	u9120
 14026                           
 14027                           ;stkvar	_grs @ sp[(-4)+0]
 14028  012A32  0EFC               	movlw	-4
 14029  012A34  A0E3               	btfss	plusw1,0,c
 14030  012A36  D00D               	goto	l9342
 14031                           
 14032                           ;stkvar	_grs @ sp[(-4)+0]
 14033  012A38  0EFC               	movlw	-4
 14034  012A3A  006F FF8C  F03D    	movff	plusw1,btemp+11
 14035  012A40  90D8               	bcf	status,0,c
 14036  012A42  323D               	rrcf	(btemp+11)^0,f,c
 14037  012A44  0E01               	movlw	1
 14038  012A46  123D               	iorwf	(btemp+11)^0,f,c
 14039                           
 14040                           ;stkvar	_grs @ sp[(-4)+0]
 14041  012A48  0EFC               	movlw	-4
 14042  012A4A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14043  012A50  D009               	goto	l9344
 14044  012A52                     l9342:
 14045                           
 14046                           ;stkvar	_grs @ sp[(-4)+0]
 14047  012A52  50E1               	movf	fsr1l,w,c
 14048  012A54  0FFC               	addlw	-4
 14049  012A56  6ED9               	movwf	fsr2l,c
 14050  012A58  50E2               	movf	fsr1h,w,c
 14051  012A5A  6EDA               	movwf	fsr2h,c
 14052  012A5C  0EFF               	movlw	255
 14053  012A5E  22DA               	addwfc	fsr2h,f,c
 14054  012A60  90D8               	bcf	status,0,c
 14055  012A62  32DF               	rrcf	indf2,f,c
 14056  012A64                     l9344:
 14057                           
 14058                           ;stkvar	_b @ sp[(-4)+-4]
 14059  012A64  0EF8               	movlw	-8
 14060  012A66  A0E3               	btfss	plusw1,0,c
 14061  012A68  D002               	goto	l9348
 14062                           
 14063                           ;stkvar	_grs @ sp[(-4)+0]
 14064  012A6A  0EFC               	movlw	-4
 14065  012A6C  8EE3               	bsf	plusw1,7,c
 14066  012A6E                     l9348:
 14067  012A6E  0E01               	movlw	1
 14068  012A70  6E3D               	movwf	(btemp+11)^0,c
 14069                           
 14070                           ;stkvar	_b @ sp[(-4)+-4]
 14071  012A72  50E1               	movf	fsr1l,w,c
 14072  012A74  0FF8               	addlw	-8
 14073  012A76  6ED9               	movwf	fsr2l,c
 14074  012A78  50E2               	movf	fsr1h,w,c
 14075  012A7A  6EDA               	movwf	fsr2h,c
 14076  012A7C  0EFF               	movlw	255
 14077  012A7E  22DA               	addwfc	fsr2h,f,c
 14078  012A80  283D               	incf	(btemp+11)^0,w,c
 14079  012A82  52DE               	movf	postinc2,f,c
 14080  012A84  D008               	goto	u9040
 14081  012A86                     u9045:
 14082  012A86  52DE               	movf	postinc2,f,c
 14083  012A88  90D8               	bcf	status,0,c
 14084  012A8A  BEDC               	btfsc	preinc2,7,c
 14085  012A8C  80D8               	bsf	status,0,c
 14086  012A8E  32DD               	rrcf	postdec2,f,c
 14087  012A90  32DD               	rrcf	postdec2,f,c
 14088  012A92  32DD               	rrcf	postdec2,f,c
 14089  012A94  32DE               	rrcf	postinc2,f,c
 14090  012A96                     u9040:
 14091  012A96  2EE8               	decfsz	wreg,f,c
 14092  012A98  D7F6               	goto	u9045
 14093                           
 14094                           ;stkvar	_bexp @ sp[(-4)+1]
 14095  012A9A  0EFD               	movlw	-3
 14096  012A9C  2AE3               	incf	plusw1,f,c
 14097  012A9E  D0CA               	goto	u9120
 14098  012AA0                     l9352:
 14099                           
 14100                           ;stkvar	_a @ sp[(-4)+-8]
 14101                           ;stkvar	_b @ sp[(-4)+-4]
 14102  012AA0  50E1               	movf	fsr1l,w,c
 14103  012AA2  0FF8               	addlw	-8
 14104  012AA4  6ED9               	movwf	fsr2l,c
 14105  012AA6  50E2               	movf	fsr1h,w,c
 14106  012AA8  6EDA               	movwf	fsr2h,c
 14107  012AAA  0EFF               	movlw	255
 14108  012AAC  22DA               	addwfc	fsr2h,f,c
 14109  012AAE  0EF4               	movlw	-12
 14110  012AB0  50E3               	movf	plusw1,w,c
 14111  012AB2  5CDE               	subwf	postinc2,w,c
 14112  012AB4  0EF5               	movlw	-11
 14113  012AB6  50E3               	movf	plusw1,w,c
 14114  012AB8  58DE               	subwfb	postinc2,w,c
 14115  012ABA  0EF6               	movlw	-10
 14116  012ABC  50E3               	movf	plusw1,w,c
 14117  012ABE  58DE               	subwfb	postinc2,w,c
 14118  012AC0  50DE               	movf	postinc2,w,c
 14119  012AC2  0A80               	xorlw	128
 14120  012AC4  6E32               	movwf	btemp^0,c
 14121  012AC6  0EF7               	movlw	-9
 14122  012AC8  50E3               	movf	plusw1,w,c
 14123  012ACA  0A80               	xorlw	128
 14124  012ACC  5832               	subwfb	btemp^0,w,c
 14125  012ACE  B0D8               	btfsc	status,0,c
 14126  012AD0  D053               	goto	l9364
 14127                           
 14128                           ;stkvar	_b @ sp[(-4)+-4]
 14129                           ;stkvar	_a @ sp[(-4)+-8]
 14130  012AD2  0EF4               	movlw	-12
 14131  012AD4  006F FF8C  F03A    	movff	plusw1,btemp+8
 14132  012ADA  0EF5               	movlw	-11
 14133  012ADC  006F FF8C  F03B    	movff	plusw1,btemp+9
 14134  012AE2  0EF6               	movlw	-10
 14135  012AE4  006F FF8C  F03C    	movff	plusw1,btemp+10
 14136  012AEA  0EF7               	movlw	-9
 14137  012AEC  006F FF8C  F03D    	movff	plusw1,btemp+11
 14138  012AF2  0EF8               	movlw	-8
 14139  012AF4  50E3               	movf	plusw1,w,c
 14140  012AF6  5E3A               	subwf	(btemp+8)^0,f,c
 14141  012AF8  0EF9               	movlw	-7
 14142  012AFA  50E3               	movf	plusw1,w,c
 14143  012AFC  5A3B               	subwfb	(btemp+9)^0,f,c
 14144  012AFE  0EFA               	movlw	-6
 14145  012B00  50E3               	movf	plusw1,w,c
 14146  012B02  5A3C               	subwfb	(btemp+10)^0,f,c
 14147  012B04  0EFB               	movlw	-5
 14148  012B06  50E3               	movf	plusw1,w,c
 14149  012B08  5A3D               	subwfb	(btemp+11)^0,f,c
 14150  012B0A  0EFF               	movlw	255
 14151  012B0C  243A               	addwf	(btemp+8)^0,w,c
 14152  012B0E  6E36               	movwf	(btemp+4)^0,c
 14153  012B10  0EFF               	movlw	255
 14154  012B12  203B               	addwfc	(btemp+9)^0,w,c
 14155  012B14  6E37               	movwf	(btemp+5)^0,c
 14156  012B16  0EFF               	movlw	255
 14157  012B18  203C               	addwfc	(btemp+10)^0,w,c
 14158  012B1A  6E38               	movwf	(btemp+6)^0,c
 14159  012B1C  0EFF               	movlw	255
 14160  012B1E  203D               	addwfc	(btemp+11)^0,w,c
 14161  012B20  6E39               	movwf	(btemp+7)^0,c
 14162                           
 14163                           ;stkvar	_b @ sp[(-4)+-4]
 14164  012B22  0EF8               	movlw	-8
 14165  012B24  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 14166  012B2A  0EF9               	movlw	-7
 14167  012B2C  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 14168  012B32  0EFA               	movlw	-6
 14169  012B34  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 14170  012B3A  0EFB               	movlw	-5
 14171  012B3C  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 14172                           
 14173                           ;stkvar	_signs @ sp[(-4)+3]
 14174  012B42  0EFF               	movlw	-1
 14175  012B44  7EE3               	btg	plusw1,7,c
 14176                           
 14177                           ;stkvar	_grs @ sp[(-4)+0]
 14178  012B46  0EFC               	movlw	-4
 14179  012B48  50E3               	movf	plusw1,w,c
 14180  012B4A  0800               	sublw	0
 14181  012B4C  6E3D               	movwf	(btemp+11)^0,c
 14182                           
 14183                           ;stkvar	_grs @ sp[(-4)+0]
 14184  012B4E  0EFC               	movlw	-4
 14185  012B50  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14186                           
 14187                           ;stkvar	_grs @ sp[(-4)+0]
 14188  012B56  0EFC               	movlw	-4
 14189  012B58  50E3               	movf	plusw1,w,c
 14190  012B5A  A4D8               	btfss	status,2,c
 14191  012B5C  D020               	goto	l9366
 14192                           
 14193                           ;stkvar	_b @ sp[(-4)+-4]
 14194  012B5E  50E1               	movf	fsr1l,w,c
 14195  012B60  0FF8               	addlw	-8
 14196  012B62  6ED9               	movwf	fsr2l,c
 14197  012B64  50E2               	movf	fsr1h,w,c
 14198  012B66  6EDA               	movwf	fsr2h,c
 14199  012B68  0EFF               	movlw	255
 14200  012B6A  22DA               	addwfc	fsr2h,f,c
 14201  012B6C  2ADE               	incf	postinc2,f,c
 14202  012B6E  0E00               	movlw	0
 14203  012B70  22DE               	addwfc	postinc2,f,c
 14204  012B72  22DE               	addwfc	postinc2,f,c
 14205  012B74  22DE               	addwfc	postinc2,f,c
 14206  012B76  D013               	goto	l9366
 14207  012B78                     l9364:
 14208                           
 14209                           ;stkvar	_a @ sp[(-4)+-8]
 14210                           ;stkvar	_b @ sp[(-4)+-4]
 14211  012B78  50E1               	movf	fsr1l,w,c
 14212  012B7A  0FF8               	addlw	-8
 14213  012B7C  6ED9               	movwf	fsr2l,c
 14214  012B7E  50E2               	movf	fsr1h,w,c
 14215  012B80  6EDA               	movwf	fsr2h,c
 14216  012B82  0EFF               	movlw	255
 14217  012B84  22DA               	addwfc	fsr2h,f,c
 14218  012B86  0EF4               	movlw	-12
 14219  012B88  50E3               	movf	plusw1,w,c
 14220  012B8A  5EDE               	subwf	postinc2,f,c
 14221  012B8C  0EF5               	movlw	-11
 14222  012B8E  50E3               	movf	plusw1,w,c
 14223  012B90  5ADE               	subwfb	postinc2,f,c
 14224  012B92  0EF6               	movlw	-10
 14225  012B94  50E3               	movf	plusw1,w,c
 14226  012B96  5ADE               	subwfb	postinc2,f,c
 14227  012B98  0EF7               	movlw	-9
 14228  012B9A  50E3               	movf	plusw1,w,c
 14229  012B9C  5ADE               	subwfb	postinc2,f,c
 14230  012B9E                     l9366:
 14231                           
 14232                           ;stkvar	_b @ sp[(-4)+-4]
 14233  012B9E  0EF8               	movlw	-8
 14234  012BA0  50E3               	movf	plusw1,w,c
 14235  012BA2  E145               	bnz	l9388
 14236  012BA4  0EF9               	movlw	-7
 14237  012BA6  50E3               	movf	plusw1,w,c
 14238  012BA8  E142               	bnz	l9388
 14239  012BAA  0EFA               	movlw	-6
 14240  012BAC  50E3               	movf	plusw1,w,c
 14241  012BAE  E13F               	bnz	l9388
 14242  012BB0  0EFB               	movlw	-5
 14243  012BB2  50E3               	movf	plusw1,w,c
 14244  012BB4  A4D8               	btfss	status,2,c
 14245  012BB6  D03B               	goto	l9388
 14246                           
 14247                           ;stkvar	_grs @ sp[(-4)+0]
 14248  012BB8  0EFC               	movlw	-4
 14249  012BBA  50E3               	movf	plusw1,w,c
 14250  012BBC  A4D8               	btfss	status,2,c
 14251  012BBE  D037               	goto	l9388
 14252  012BC0                     u9080:
 14253  012BC0  0E00               	movlw	0
 14254  012BC2  6E32               	movwf	btemp^0,c
 14255  012BC4  0E00               	movlw	0
 14256  012BC6  6E33               	movwf	(btemp+1)^0,c
 14257  012BC8  0E00               	movlw	0
 14258  012BCA  6E34               	movwf	(btemp+2)^0,c
 14259  012BCC  0E00               	movlw	0
 14260  012BCE  6E35               	movwf	(btemp+3)^0,c
 14261  012BD0  D0C6               	goto	l2574
 14262  012BD2                     l9374:
 14263                           
 14264                           ;stkvar	_b @ sp[(-4)+-4]
 14265  012BD2  90D8               	bcf	status,0,c
 14266  012BD4  0EF8               	movlw	-8
 14267  012BD6  36E3               	rlcf	plusw1,f,c
 14268  012BD8  0EF9               	movlw	-7
 14269  012BDA  36E3               	rlcf	plusw1,f,c
 14270  012BDC  0EFA               	movlw	-6
 14271  012BDE  36E3               	rlcf	plusw1,f,c
 14272  012BE0  0EFB               	movlw	-5
 14273  012BE2  36E3               	rlcf	plusw1,f,c
 14274                           
 14275                           ;stkvar	_grs @ sp[(-4)+0]
 14276  012BE4  0EFC               	movlw	-4
 14277  012BE6  AEE3               	btfss	plusw1,7,c
 14278  012BE8  D002               	goto	l2586
 14279                           
 14280                           ;stkvar	_b @ sp[(-4)+-4]
 14281  012BEA  0EF8               	movlw	-8
 14282  012BEC  80E3               	bsf	plusw1,0,c
 14283  012BEE                     l2586:
 14284                           
 14285                           ;stkvar	_grs @ sp[(-4)+0]
 14286  012BEE  0EFC               	movlw	-4
 14287  012BF0  A0E3               	btfss	plusw1,0,c
 14288  012BF2  D00E               	goto	l9382
 14289                           
 14290                           ;stkvar	_grs @ sp[(-4)+0]
 14291  012BF4  0EFC               	movlw	-4
 14292  012BF6  006F FF8C  F03D    	movff	plusw1,btemp+11
 14293  012BFC  90D8               	bcf	status,0,c
 14294  012BFE  343D               	rlcf	(btemp+11)^0,w,c
 14295  012C00  6E3C               	movwf	(btemp+10)^0,c
 14296  012C02  0E01               	movlw	1
 14297  012C04  123C               	iorwf	(btemp+10)^0,f,c
 14298                           
 14299                           ;stkvar	_grs @ sp[(-4)+0]
 14300  012C06  0EFC               	movlw	-4
 14301  012C08  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14302  012C0E  D009               	goto	l9384
 14303  012C10                     l9382:
 14304                           
 14305                           ;stkvar	_grs @ sp[(-4)+0]
 14306  012C10  50E1               	movf	fsr1l,w,c
 14307  012C12  0FFC               	addlw	-4
 14308  012C14  6ED9               	movwf	fsr2l,c
 14309  012C16  50E2               	movf	fsr1h,w,c
 14310  012C18  6EDA               	movwf	fsr2h,c
 14311  012C1A  0EFF               	movlw	255
 14312  012C1C  22DA               	addwfc	fsr2h,f,c
 14313  012C1E  90D8               	bcf	status,0,c
 14314  012C20  36DF               	rlcf	indf2,f,c
 14315  012C22                     l9384:
 14316                           
 14317                           ;stkvar	_bexp @ sp[(-4)+1]
 14318  012C22  0EFD               	movlw	-3
 14319  012C24  50E3               	movf	plusw1,w,c
 14320  012C26  B4D8               	btfsc	status,2,c
 14321  012C28  D002               	goto	l9388
 14322                           
 14323                           ;stkvar	_bexp @ sp[(-4)+1]
 14324  012C2A  0EFD               	movlw	-3
 14325  012C2C  06E3               	decf	plusw1,f,c
 14326  012C2E                     l9388:
 14327                           
 14328                           ;stkvar	_b @ sp[(-4)+-4]
 14329  012C2E  0EFA               	movlw	-6
 14330  012C30  AEE3               	btfss	plusw1,7,c
 14331  012C32  D7CF               	goto	l9374
 14332  012C34                     u9120:
 14333                           
 14334                           ;stkvar	_aexp @ sp[(-4)+2]
 14335  012C34  0EFE               	movlw	-2
 14336  012C36  6AE3               	clrf	plusw1,c
 14337                           
 14338                           ;stkvar	_grs @ sp[(-4)+0]
 14339  012C38  0EFC               	movlw	-4
 14340  012C3A  AEE3               	btfss	plusw1,7,c
 14341  012C3C  D00F               	goto	l9402
 14342                           
 14343                           ;stkvar	_grs @ sp[(-4)+0]
 14344  012C3E  0EFC               	movlw	-4
 14345  012C40  006F FF8C  F03D    	movff	plusw1,btemp+11
 14346  012C46  0E7F               	movlw	127
 14347  012C48  163D               	andwf	(btemp+11)^0,f,c
 14348  012C4A  B4D8               	btfsc	status,2,c
 14349  012C4C  D004               	goto	l9398
 14350  012C4E                     u9140:
 14351                           
 14352                           ;stkvar	_aexp @ sp[(-4)+2]
 14353  012C4E  0EFE               	movlw	-2
 14354  012C50  6AE3               	clrf	plusw1,c
 14355  012C52  2AE3               	incf	plusw1,f,c
 14356  012C54  D003               	goto	l9402
 14357  012C56                     l9398:
 14358                           
 14359                           ;stkvar	_b @ sp[(-4)+-4]
 14360  012C56  0EF8               	movlw	-8
 14361  012C58  B0E3               	btfsc	plusw1,0,c
 14362  012C5A  D7F9               	goto	u9140
 14363  012C5C                     l9402:
 14364                           
 14365                           ;stkvar	_aexp @ sp[(-4)+2]
 14366  012C5C  0EFE               	movlw	-2
 14367  012C5E  50E3               	movf	plusw1,w,c
 14368  012C60  B4D8               	btfsc	status,2,c
 14369  012C62  D02B               	goto	l9414
 14370                           
 14371                           ;stkvar	_b @ sp[(-4)+-4]
 14372  012C64  50E1               	movf	fsr1l,w,c
 14373  012C66  0FF8               	addlw	-8
 14374  012C68  6ED9               	movwf	fsr2l,c
 14375  012C6A  50E2               	movf	fsr1h,w,c
 14376  012C6C  6EDA               	movwf	fsr2h,c
 14377  012C6E  0EFF               	movlw	255
 14378  012C70  22DA               	addwfc	fsr2h,f,c
 14379  012C72  2ADE               	incf	postinc2,f,c
 14380  012C74  0E00               	movlw	0
 14381  012C76  22DE               	addwfc	postinc2,f,c
 14382  012C78  22DE               	addwfc	postinc2,f,c
 14383  012C7A  22DE               	addwfc	postinc2,f,c
 14384                           
 14385                           ;stkvar	_b @ sp[(-4)+-4]
 14386  012C7C  0EFB               	movlw	-5
 14387  012C7E  A0E3               	btfss	plusw1,0,c
 14388  012C80  D01C               	goto	l9414
 14389  012C82  0E01               	movlw	1
 14390  012C84  6E3D               	movwf	(btemp+11)^0,c
 14391                           
 14392                           ;stkvar	_b @ sp[(-4)+-4]
 14393  012C86  50E1               	movf	fsr1l,w,c
 14394  012C88  0FF8               	addlw	-8
 14395  012C8A  6ED9               	movwf	fsr2l,c
 14396  012C8C  50E2               	movf	fsr1h,w,c
 14397  012C8E  6EDA               	movwf	fsr2h,c
 14398  012C90  0EFF               	movlw	255
 14399  012C92  22DA               	addwfc	fsr2h,f,c
 14400  012C94  283D               	incf	(btemp+11)^0,w,c
 14401  012C96  52DE               	movf	postinc2,f,c
 14402  012C98  D008               	goto	u9180
 14403  012C9A                     u9185:
 14404  012C9A  52DE               	movf	postinc2,f,c
 14405  012C9C  90D8               	bcf	status,0,c
 14406  012C9E  BEDC               	btfsc	preinc2,7,c
 14407  012CA0  80D8               	bsf	status,0,c
 14408  012CA2  32DD               	rrcf	postdec2,f,c
 14409  012CA4  32DD               	rrcf	postdec2,f,c
 14410  012CA6  32DD               	rrcf	postdec2,f,c
 14411  012CA8  32DE               	rrcf	postinc2,f,c
 14412  012CAA                     u9180:
 14413  012CAA  2EE8               	decfsz	wreg,f,c
 14414  012CAC  D7F6               	goto	u9185
 14415                           
 14416                           ;stkvar	_bexp @ sp[(-4)+1]
 14417  012CAE  0EFD               	movlw	-3
 14418  012CB0  28E3               	incf	plusw1,w,c
 14419  012CB2  B4D8               	btfsc	status,2,c
 14420  012CB4  D002               	goto	l9414
 14421                           
 14422                           ;stkvar	_bexp @ sp[(-4)+1]
 14423  012CB6  0EFD               	movlw	-3
 14424  012CB8  2AE3               	incf	plusw1,f,c
 14425  012CBA                     l9414:
 14426                           
 14427                           ;stkvar	_bexp @ sp[(-4)+1]
 14428  012CBA  0EFD               	movlw	-3
 14429  012CBC  28E3               	incf	plusw1,w,c
 14430  012CBE  B4D8               	btfsc	status,2,c
 14431  012CC0  D004               	goto	u9210
 14432                           
 14433                           ;stkvar	_bexp @ sp[(-4)+1]
 14434  012CC2  0EFD               	movlw	-3
 14435  012CC4  50E3               	movf	plusw1,w,c
 14436  012CC6  A4D8               	btfss	status,2,c
 14437  012CC8  D00E               	goto	l9424
 14438  012CCA                     u9210:
 14439                           
 14440                           ;stkvar	_b @ sp[(-4)+-4]
 14441  012CCA  0EF8               	movlw	-8
 14442  012CCC  6AE3               	clrf	plusw1,c
 14443  012CCE  0EF9               	movlw	-7
 14444  012CD0  6AE3               	clrf	plusw1,c
 14445  012CD2  0EFA               	movlw	-6
 14446  012CD4  6AE3               	clrf	plusw1,c
 14447  012CD6  0EFB               	movlw	-5
 14448  012CD8  6AE3               	clrf	plusw1,c
 14449                           
 14450                           ;stkvar	_bexp @ sp[(-4)+1]
 14451  012CDA  0EFD               	movlw	-3
 14452  012CDC  50E3               	movf	plusw1,w,c
 14453  012CDE  A4D8               	btfss	status,2,c
 14454  012CE0  D002               	goto	l9424
 14455                           
 14456                           ;stkvar	_signs @ sp[(-4)+3]
 14457  012CE2  0EFF               	movlw	-1
 14458  012CE4  6AE3               	clrf	plusw1,c
 14459  012CE6                     l9424:
 14460                           
 14461                           ;stkvar	_bexp @ sp[(-4)+1]
 14462  012CE6  0EFD               	movlw	-3
 14463  012CE8  A0E3               	btfss	plusw1,0,c
 14464  012CEA  D009               	goto	l9428
 14465                           
 14466                           ;stkvar	_b @ sp[(-4)+-4]
 14467  012CEC  0EFA               	movlw	250
 14468  012CEE  24E1               	addwf	fsr1l,w,c
 14469  012CF0  6ED9               	movwf	fsr2l,c
 14470  012CF2  0EFF               	movlw	255
 14471  012CF4  20E2               	addwfc	fsr1h,w,c
 14472  012CF6  6EDA               	movwf	fsr2h,c
 14473  012CF8  0E00               	movlw	0
 14474  012CFA  8EDB               	bsf	plusw2,7,c
 14475  012CFC  D008               	goto	l9430
 14476  012CFE                     l9428:
 14477                           
 14478                           ;stkvar	_b @ sp[(-4)+-4]
 14479  012CFE  0EFA               	movlw	250
 14480  012D00  24E1               	addwf	fsr1l,w,c
 14481  012D02  6ED9               	movwf	fsr2l,c
 14482  012D04  0EFF               	movlw	255
 14483  012D06  20E2               	addwfc	fsr1h,w,c
 14484  012D08  6EDA               	movwf	fsr2h,c
 14485  012D0A  0E7F               	movlw	127
 14486  012D0C  16DF               	andwf	indf2,f,c
 14487  012D0E                     l9430:
 14488                           
 14489                           ;stkvar	_b @ sp[(-4)+-4]
 14490  012D0E  0EFB               	movlw	251
 14491  012D10  24E1               	addwf	fsr1l,w,c
 14492  012D12  6ED9               	movwf	fsr2l,c
 14493  012D14  0EFF               	movlw	255
 14494  012D16  20E2               	addwfc	fsr1h,w,c
 14495  012D18  6EDA               	movwf	fsr2h,c
 14496                           
 14497                           ;stkvar	_bexp @ sp[(-4)+1]
 14498  012D1A  0EFD               	movlw	-3
 14499  012D1C  006F FF8C  F03D    	movff	plusw1,btemp+11
 14500  012D22  90D8               	bcf	status,0,c
 14501  012D24  303D               	rrcf	(btemp+11)^0,w,c
 14502  012D26  6EDF               	movwf	indf2,c
 14503                           
 14504                           ;stkvar	_signs @ sp[(-4)+3]
 14505  012D28  0EFF               	movlw	-1
 14506  012D2A  AEE3               	btfss	plusw1,7,c
 14507  012D2C  D008               	goto	l9436
 14508                           
 14509                           ;stkvar	_b @ sp[(-4)+-4]
 14510  012D2E  0EFB               	movlw	251
 14511  012D30  24E1               	addwf	fsr1l,w,c
 14512  012D32  6ED9               	movwf	fsr2l,c
 14513  012D34  0EFF               	movlw	255
 14514  012D36  20E2               	addwfc	fsr1h,w,c
 14515  012D38  6EDA               	movwf	fsr2h,c
 14516  012D3A  0E00               	movlw	0
 14517  012D3C  8EDB               	bsf	plusw2,7,c
 14518  012D3E                     l9436:
 14519                           
 14520                           ;stkvar	_b @ sp[(-4)+-4]
 14521  012D3E  0EF8               	movlw	-8
 14522  012D40  006F FF8C  F032    	movff	plusw1,btemp
 14523  012D46  0EF9               	movlw	-7
 14524  012D48  006F FF8C  F033    	movff	plusw1,btemp+1
 14525  012D4E  0EFA               	movlw	-6
 14526  012D50  006F FF8C  F034    	movff	plusw1,btemp+2
 14527  012D56  0EFB               	movlw	-5
 14528  012D58  006F FF8C  F035    	movff	plusw1,btemp+3
 14529  012D5E                     l2574:
 14530                           
 14531                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 14532  012D5E  0EF4               	movlw	244
 14533  012D60  26E1               	addwf	fsr1l,f,c
 14534  012D62  0EFF               	movlw	255
 14535  012D64  22E2               	addwfc	fsr1h,f,c
 14536  012D66  0012               	return		;funcret
 14537  012D68                     __end_of___fladd:
 14538                           	opt callstack 0
 14539                           
 14540 ;; *************** function ___flneg *****************
 14541 ;; Defined at:
 14542 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 14543 ;; Parameters:    Size  Location     Type
 14544 ;;  f1              4  [STACK] unsigned char 
 14545 ;; Auto vars:     Size  Location     Type
 14546 ;;		None
 14547 ;; Return value:  Size  Location     Type
 14548 ;;                  4  [STACK] unsigned char 
 14549 ;; Registers used:
 14550 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 14551 ;; Tracked objects:
 14552 ;;		On entry : 0/5
 14553 ;;		On exit  : 0/0
 14554 ;;		Unchanged: 0/0
 14555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14560 ;;Total ram usage:        0 bytes
 14561 ;; Hardware stack levels used:    1
 14562 ;; Hardware stack levels required when called:    6
 14563 ;; This function calls:
 14564 ;;		Nothing
 14565 ;; This function is called by:
 14566 ;;		_efgtoa
 14567 ;; This function uses a reentrant model
 14568 ;;
 14569                           
 14570                           	psect	text52
 14571  017996                     __ptext52:
 14572                           	opt callstack 0
 14573  017996                     ___flneg:
 14574                           	opt callstack 17
 14575                           
 14576                           ;stkvar	_f1 @ sp[(0)+-4]
 14577                           
 14578                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14579                           ;incstack = 0
 14580  017996  0EFC               	movlw	-4
 14581  017998  50E3               	movf	plusw1,w,c
 14582  01799A  E10A               	bnz	u10520
 14583  01799C  0EFD               	movlw	-3
 14584  01799E  50E3               	movf	plusw1,w,c
 14585  0179A0  E107               	bnz	u10520
 14586  0179A2  0EFE               	movlw	-2
 14587  0179A4  50E3               	movf	plusw1,w,c
 14588  0179A6  E104               	bnz	u10520
 14589  0179A8  0EFF               	movlw	-1
 14590  0179AA  50E3               	movf	plusw1,w,c
 14591  0179AC  B4D8               	btfsc	status,2,c
 14592  0179AE  D002               	goto	l10104
 14593  0179B0                     u10520:
 14594                           
 14595                           ;stkvar	_f1 @ sp[(0)+-4]
 14596  0179B0  0EFF               	movlw	-1
 14597  0179B2  7EE3               	btg	plusw1,7,c
 14598  0179B4                     l10104:
 14599                           
 14600                           ;stkvar	_f1 @ sp[(0)+-4]
 14601  0179B4  0EFC               	movlw	-4
 14602  0179B6  006F FF8C  F032    	movff	plusw1,btemp
 14603  0179BC  0EFD               	movlw	-3
 14604  0179BE  006F FF8C  F033    	movff	plusw1,btemp+1
 14605  0179C4  0EFE               	movlw	-2
 14606  0179C6  006F FF8C  F034    	movff	plusw1,btemp+2
 14607  0179CC  0EFF               	movlw	-1
 14608  0179CE  006F FF8C  F035    	movff	plusw1,btemp+3
 14609                           
 14610                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14611  0179D4  52E5               	movf	postdec1,f,c
 14612  0179D6  52E5               	movf	postdec1,f,c
 14613  0179D8  52E5               	movf	postdec1,f,c
 14614  0179DA  52E5               	movf	postdec1,f,c
 14615  0179DC  0012               	return		;funcret
 14616  0179DE                     __end_of___flneg:
 14617                           	opt callstack 0
 14618                           
 14619 ;; *************** function ___flmul *****************
 14620 ;; Defined at:
 14621 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 14622 ;; Parameters:    Size  Location     Type
 14623 ;;  b               4  [STACK] unsigned char 
 14624 ;;  a               4  [STACK] unsigned char 
 14625 ;; Auto vars:     Size  Location     Type
 14626 ;;  prod            4  [STACK] struct .
 14627 ;;  grs             4  [STACK] unsigned long 
 14628 ;;  temp            2  [STACK] struct .
 14629 ;;  bexp            1  [STACK] unsigned char 
 14630 ;;  aexp            1  [STACK] unsigned char 
 14631 ;;  sign            1  [STACK] unsigned char 
 14632 ;; Return value:  Size  Location     Type
 14633 ;;                  4  [STACK] unsigned char 
 14634 ;; Registers used:
 14635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 14636 ;; Tracked objects:
 14637 ;;		On entry : 0/39
 14638 ;;		On exit  : 0/0
 14639 ;;		Unchanged: 0/0
 14640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14645 ;;Total ram usage:        0 bytes
 14646 ;; Hardware stack levels used:    1
 14647 ;; Hardware stack levels required when called:    6
 14648 ;; This function calls:
 14649 ;;		Nothing
 14650 ;; This function is called by:
 14651 ;;		_conv_raw_result
 14652 ;;		_lp_filter
 14653 ;;		_efgtoa
 14654 ;; This function uses a reentrant model
 14655 ;;
 14656                           
 14657                           	psect	text53
 14658  011D82                     __ptext53:
 14659                           	opt callstack 0
 14660  011D82                     ___flmul:
 14661                           	opt callstack 0
 14662                           
 14663                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14664  011D82  0E0D               	movlw	13
 14665  011D84  26E1               	addwf	fsr1l,f,c
 14666  011D86  0E00               	movlw	0
 14667  011D88  22E2               	addwfc	fsr1h,f,c
 14668                           
 14669                           ;stkvar	_b @ sp[(-13)+-4]
 14670                           
 14671                           ;incstack = 0
 14672  011D8A  0EF2               	movlw	242
 14673  011D8C  24E1               	addwf	fsr1l,w,c
 14674  011D8E  6ED9               	movwf	fsr2l,c
 14675  011D90  0EFF               	movlw	255
 14676  011D92  20E2               	addwfc	fsr1h,w,c
 14677  011D94  6EDA               	movwf	fsr2h,c
 14678  011D96  50DF               	movf	indf2,w,c
 14679  011D98  6E3D               	movwf	(btemp+11)^0,c
 14680  011D9A  0E80               	movlw	128
 14681  011D9C  163D               	andwf	(btemp+11)^0,f,c
 14682                           
 14683                           ;stkvar	_sign @ sp[(-13)+12]
 14684  011D9E  0EFF               	movlw	-1
 14685  011DA0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14686                           
 14687                           ;stkvar	_b @ sp[(-13)+-4]
 14688  011DA6  0EF2               	movlw	242
 14689  011DA8  24E1               	addwf	fsr1l,w,c
 14690  011DAA  6ED9               	movwf	fsr2l,c
 14691  011DAC  0EFF               	movlw	255
 14692  011DAE  20E2               	addwfc	fsr1h,w,c
 14693  011DB0  6EDA               	movwf	fsr2h,c
 14694  011DB2  50DF               	movf	indf2,w,c
 14695  011DB4  6E3D               	movwf	(btemp+11)^0,c
 14696  011DB6  90D8               	bcf	status,0,c
 14697  011DB8  343D               	rlcf	(btemp+11)^0,w,c
 14698  011DBA  6E3C               	movwf	(btemp+10)^0,c
 14699                           
 14700                           ;stkvar	_bexp @ sp[(-13)+10]
 14701  011DBC  0EFD               	movlw	-3
 14702  011DBE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14703                           
 14704                           ;stkvar	_b @ sp[(-13)+-4]
 14705  011DC4  0EF1               	movlw	241
 14706  011DC6  24E1               	addwf	fsr1l,w,c
 14707  011DC8  6ED9               	movwf	fsr2l,c
 14708  011DCA  0EFF               	movlw	255
 14709  011DCC  20E2               	addwfc	fsr1h,w,c
 14710  011DCE  6EDA               	movwf	fsr2h,c
 14711  011DD0  AEDF               	btfss	indf2,7,c
 14712  011DD2  D002               	goto	l9820
 14713                           
 14714                           ;stkvar	_bexp @ sp[(-13)+10]
 14715  011DD4  0EFD               	movlw	-3
 14716  011DD6  80E3               	bsf	plusw1,0,c
 14717  011DD8                     l9820:
 14718                           
 14719                           ;stkvar	_bexp @ sp[(-13)+10]
 14720  011DD8  0EFD               	movlw	-3
 14721  011DDA  50E3               	movf	plusw1,w,c
 14722  011DDC  B4D8               	btfsc	status,2,c
 14723  011DDE  D01F               	goto	l9828
 14724                           
 14725                           ;stkvar	_bexp @ sp[(-13)+10]
 14726  011DE0  0EFD               	movlw	-3
 14727  011DE2  28E3               	incf	plusw1,w,c
 14728  011DE4  A4D8               	btfss	status,2,c
 14729  011DE6  D018               	goto	l9826
 14730  011DE8  0E00               	movlw	0
 14731  011DEA  6E3A               	movwf	(btemp+8)^0,c
 14732  011DEC  0E00               	movlw	0
 14733  011DEE  6E3B               	movwf	(btemp+9)^0,c
 14734  011DF0  0E00               	movlw	0
 14735  011DF2  6E3C               	movwf	(btemp+10)^0,c
 14736  011DF4  0E00               	movlw	0
 14737  011DF6  6E3D               	movwf	(btemp+11)^0,c
 14738                           
 14739                           ;stkvar	_b @ sp[(-13)+-4]
 14740  011DF8  0EEF               	movlw	-17
 14741  011DFA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14742  011E00  0EF0               	movlw	-16
 14743  011E02  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14744  011E08  0EF1               	movlw	-15
 14745  011E0A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14746  011E10  0EF2               	movlw	-14
 14747  011E12  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14748  011E18                     l9826:
 14749                           
 14750                           ;stkvar	_b @ sp[(-13)+-4]
 14751  011E18  0EF1               	movlw	-15
 14752  011E1A  8EE3               	bsf	plusw1,7,c
 14753  011E1C  D018               	goto	l9830
 14754  011E1E                     l9828:
 14755  011E1E  0E00               	movlw	0
 14756  011E20  6E3A               	movwf	(btemp+8)^0,c
 14757  011E22  0E00               	movlw	0
 14758  011E24  6E3B               	movwf	(btemp+9)^0,c
 14759  011E26  0E00               	movlw	0
 14760  011E28  6E3C               	movwf	(btemp+10)^0,c
 14761  011E2A  0E00               	movlw	0
 14762  011E2C  6E3D               	movwf	(btemp+11)^0,c
 14763                           
 14764                           ;stkvar	_b @ sp[(-13)+-4]
 14765  011E2E  0EEF               	movlw	-17
 14766  011E30  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14767  011E36  0EF0               	movlw	-16
 14768  011E38  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14769  011E3E  0EF1               	movlw	-15
 14770  011E40  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14771  011E46  0EF2               	movlw	-14
 14772  011E48  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14773  011E4E                     l9830:
 14774                           
 14775                           ;stkvar	_a @ sp[(-13)+-8]
 14776  011E4E  0EEE               	movlw	238
 14777  011E50  24E1               	addwf	fsr1l,w,c
 14778  011E52  6ED9               	movwf	fsr2l,c
 14779  011E54  0EFF               	movlw	255
 14780  011E56  20E2               	addwfc	fsr1h,w,c
 14781  011E58  6EDA               	movwf	fsr2h,c
 14782  011E5A  50DF               	movf	indf2,w,c
 14783  011E5C  6E3D               	movwf	(btemp+11)^0,c
 14784  011E5E  0E80               	movlw	128
 14785  011E60  163D               	andwf	(btemp+11)^0,f,c
 14786                           
 14787                           ;stkvar	_sign @ sp[(-13)+12]
 14788  011E62  50E1               	movf	fsr1l,w,c
 14789  011E64  0FFF               	addlw	-1
 14790  011E66  6ED9               	movwf	fsr2l,c
 14791  011E68  50E2               	movf	fsr1h,w,c
 14792  011E6A  6EDA               	movwf	fsr2h,c
 14793  011E6C  0EFF               	movlw	255
 14794  011E6E  22DA               	addwfc	fsr2h,f,c
 14795  011E70  503D               	movf	(btemp+11)^0,w,c
 14796  011E72  1ADF               	xorwf	indf2,f,c
 14797                           
 14798                           ;stkvar	_a @ sp[(-13)+-8]
 14799  011E74  0EEE               	movlw	238
 14800  011E76  24E1               	addwf	fsr1l,w,c
 14801  011E78  6ED9               	movwf	fsr2l,c
 14802  011E7A  0EFF               	movlw	255
 14803  011E7C  20E2               	addwfc	fsr1h,w,c
 14804  011E7E  6EDA               	movwf	fsr2h,c
 14805  011E80  50DF               	movf	indf2,w,c
 14806  011E82  6E3D               	movwf	(btemp+11)^0,c
 14807  011E84  90D8               	bcf	status,0,c
 14808  011E86  343D               	rlcf	(btemp+11)^0,w,c
 14809  011E88  6E3C               	movwf	(btemp+10)^0,c
 14810                           
 14811                           ;stkvar	_aexp @ sp[(-13)+11]
 14812  011E8A  0EFE               	movlw	-2
 14813  011E8C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14814                           
 14815                           ;stkvar	_a @ sp[(-13)+-8]
 14816  011E92  0EED               	movlw	237
 14817  011E94  24E1               	addwf	fsr1l,w,c
 14818  011E96  6ED9               	movwf	fsr2l,c
 14819  011E98  0EFF               	movlw	255
 14820  011E9A  20E2               	addwfc	fsr1h,w,c
 14821  011E9C  6EDA               	movwf	fsr2h,c
 14822  011E9E  AEDF               	btfss	indf2,7,c
 14823  011EA0  D002               	goto	l9838
 14824                           
 14825                           ;stkvar	_aexp @ sp[(-13)+11]
 14826  011EA2  0EFE               	movlw	-2
 14827  011EA4  80E3               	bsf	plusw1,0,c
 14828  011EA6                     l9838:
 14829                           
 14830                           ;stkvar	_aexp @ sp[(-13)+11]
 14831  011EA6  0EFE               	movlw	-2
 14832  011EA8  50E3               	movf	plusw1,w,c
 14833  011EAA  B4D8               	btfsc	status,2,c
 14834  011EAC  D01F               	goto	l9846
 14835                           
 14836                           ;stkvar	_aexp @ sp[(-13)+11]
 14837  011EAE  0EFE               	movlw	-2
 14838  011EB0  28E3               	incf	plusw1,w,c
 14839  011EB2  A4D8               	btfss	status,2,c
 14840  011EB4  D018               	goto	l9844
 14841  011EB6  0E00               	movlw	0
 14842  011EB8  6E3A               	movwf	(btemp+8)^0,c
 14843  011EBA  0E00               	movlw	0
 14844  011EBC  6E3B               	movwf	(btemp+9)^0,c
 14845  011EBE  0E00               	movlw	0
 14846  011EC0  6E3C               	movwf	(btemp+10)^0,c
 14847  011EC2  0E00               	movlw	0
 14848  011EC4  6E3D               	movwf	(btemp+11)^0,c
 14849                           
 14850                           ;stkvar	_a @ sp[(-13)+-8]
 14851  011EC6  0EEB               	movlw	-21
 14852  011EC8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14853  011ECE  0EEC               	movlw	-20
 14854  011ED0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14855  011ED6  0EED               	movlw	-19
 14856  011ED8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14857  011EDE  0EEE               	movlw	-18
 14858  011EE0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14859  011EE6                     l9844:
 14860                           
 14861                           ;stkvar	_a @ sp[(-13)+-8]
 14862  011EE6  0EED               	movlw	-19
 14863  011EE8  8EE3               	bsf	plusw1,7,c
 14864  011EEA  D018               	goto	l9848
 14865  011EEC                     l9846:
 14866  011EEC  0E00               	movlw	0
 14867  011EEE  6E3A               	movwf	(btemp+8)^0,c
 14868  011EF0  0E00               	movlw	0
 14869  011EF2  6E3B               	movwf	(btemp+9)^0,c
 14870  011EF4  0E00               	movlw	0
 14871  011EF6  6E3C               	movwf	(btemp+10)^0,c
 14872  011EF8  0E00               	movlw	0
 14873  011EFA  6E3D               	movwf	(btemp+11)^0,c
 14874                           
 14875                           ;stkvar	_a @ sp[(-13)+-8]
 14876  011EFC  0EEB               	movlw	-21
 14877  011EFE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14878  011F04  0EEC               	movlw	-20
 14879  011F06  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14880  011F0C  0EED               	movlw	-19
 14881  011F0E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14882  011F14  0EEE               	movlw	-18
 14883  011F16  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14884  011F1C                     l9848:
 14885                           
 14886                           ;stkvar	_aexp @ sp[(-13)+11]
 14887  011F1C  0EFE               	movlw	-2
 14888  011F1E  50E3               	movf	plusw1,w,c
 14889  011F20  B4D8               	btfsc	status,2,c
 14890  011F22  D004               	goto	u10150
 14891                           
 14892                           ;stkvar	_bexp @ sp[(-13)+10]
 14893  011F24  0EFD               	movlw	-3
 14894  011F26  50E3               	movf	plusw1,w,c
 14895  011F28  A4D8               	btfss	status,2,c
 14896  011F2A  D009               	goto	l9856
 14897  011F2C                     u10150:
 14898  011F2C  0E00               	movlw	0
 14899  011F2E  6E32               	movwf	btemp^0,c
 14900  011F30  0E00               	movlw	0
 14901  011F32  6E33               	movwf	(btemp+1)^0,c
 14902  011F34  0E00               	movlw	0
 14903  011F36  6E34               	movwf	(btemp+2)^0,c
 14904  011F38  0E00               	movlw	0
 14905  011F3A  6E35               	movwf	(btemp+3)^0,c
 14906  011F3C  D332               	goto	l2655
 14907  011F3E                     l9856:
 14908                           
 14909                           ;stkvar	_b @ sp[(-13)+-4]
 14910  011F3E  0EEF               	movlw	-17
 14911  011F40  006F FF8C  F03D    	movff	plusw1,btemp+11
 14912                           
 14913                           ;stkvar	_a @ sp[(-13)+-8]
 14914  011F46  0EED               	movlw	237
 14915  011F48  24E1               	addwf	fsr1l,w,c
 14916  011F4A  6ED9               	movwf	fsr2l,c
 14917  011F4C  0EFF               	movlw	255
 14918  011F4E  20E2               	addwfc	fsr1h,w,c
 14919  011F50  6EDA               	movwf	fsr2h,c
 14920  011F52  50DF               	movf	indf2,w,c
 14921  011F54  023D               	mulwf	(btemp+11)^0,c
 14922                           
 14923                           ;stkvar	_temp @ sp[(-13)+8]
 14924  011F56  0EFB               	movlw	-5
 14925  011F58  006F FFCF FFE3     	movff	prodl,plusw1
 14926  011F5E  0EFC               	movlw	-4
 14927  011F60  006F FFD3 FFE3     	movff	prodh,plusw1
 14928                           
 14929                           ;stkvar	_temp @ sp[(-13)+8]
 14930  011F66  0EFB               	movlw	-5
 14931  011F68  006F FF8C  F03D    	movff	plusw1,btemp+11
 14932  011F6E  0060  F0F4  F036   	movff	btemp+11,btemp+4
 14933  011F74  6A37               	clrf	(btemp+5)^0,c
 14934  011F76  6A38               	clrf	(btemp+6)^0,c
 14935  011F78  6A39               	clrf	(btemp+7)^0,c
 14936                           
 14937                           ;stkvar	_grs @ sp[(-13)+4]
 14938  011F7A  0EF7               	movlw	-9
 14939  011F7C  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 14940  011F82  0EF8               	movlw	-8
 14941  011F84  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 14942  011F8A  0EF9               	movlw	-7
 14943  011F8C  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 14944  011F92  0EFA               	movlw	-6
 14945  011F94  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 14946                           
 14947                           ;stkvar	_temp @ sp[(-13)+8]
 14948  011F9A  0EFC               	movlw	252
 14949  011F9C  24E1               	addwf	fsr1l,w,c
 14950  011F9E  6ED9               	movwf	fsr2l,c
 14951  011FA0  0EFF               	movlw	255
 14952  011FA2  20E2               	addwfc	fsr1h,w,c
 14953  011FA4  6EDA               	movwf	fsr2h,c
 14954  011FA6  50DF               	movf	indf2,w,c
 14955  011FA8  6E3D               	movwf	(btemp+11)^0,c
 14956  011FAA  0060  F0F4  F036   	movff	btemp+11,btemp+4
 14957  011FB0  6A37               	clrf	(btemp+5)^0,c
 14958  011FB2  6A38               	clrf	(btemp+6)^0,c
 14959  011FB4  6A39               	clrf	(btemp+7)^0,c
 14960                           
 14961                           ;stkvar	_prod @ sp[(-13)+0]
 14962  011FB6  0EF3               	movlw	-13
 14963  011FB8  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 14964  011FBE  0EF4               	movlw	-12
 14965  011FC0  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 14966  011FC6  0EF5               	movlw	-11
 14967  011FC8  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 14968  011FCE  0EF6               	movlw	-10
 14969  011FD0  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 14970                           
 14971                           ;stkvar	_b @ sp[(-13)+-4]
 14972  011FD6  0EF0               	movlw	240
 14973  011FD8  24E1               	addwf	fsr1l,w,c
 14974  011FDA  6ED9               	movwf	fsr2l,c
 14975  011FDC  0EFF               	movlw	255
 14976  011FDE  20E2               	addwfc	fsr1h,w,c
 14977  011FE0  6EDA               	movwf	fsr2h,c
 14978  011FE2  50DF               	movf	indf2,w,c
 14979  011FE4  6E3D               	movwf	(btemp+11)^0,c
 14980                           
 14981                           ;stkvar	_a @ sp[(-13)+-8]
 14982  011FE6  0EEC               	movlw	236
 14983  011FE8  24E1               	addwf	fsr1l,w,c
 14984  011FEA  6ED9               	movwf	fsr2l,c
 14985  011FEC  0EFF               	movlw	255
 14986  011FEE  20E2               	addwfc	fsr1h,w,c
 14987  011FF0  6EDA               	movwf	fsr2h,c
 14988  011FF2  50DF               	movf	indf2,w,c
 14989  011FF4  023D               	mulwf	(btemp+11)^0,c
 14990                           
 14991                           ;stkvar	_temp @ sp[(-13)+8]
 14992  011FF6  0EFB               	movlw	-5
 14993  011FF8  006F FFCF FFE3     	movff	prodl,plusw1
 14994  011FFE  0EFC               	movlw	-4
 14995  012000  006F FFD3 FFE3     	movff	prodh,plusw1
 14996                           
 14997                           ;stkvar	_grs @ sp[(-13)+4]
 14998  012006  50E1               	movf	fsr1l,w,c
 14999  012008  0FF7               	addlw	-9
 15000  01200A  6ED9               	movwf	fsr2l,c
 15001  01200C  50E2               	movf	fsr1h,w,c
 15002  01200E  6EDA               	movwf	fsr2h,c
 15003  012010  0EFF               	movlw	255
 15004  012012  22DA               	addwfc	fsr2h,f,c
 15005                           
 15006                           ;stkvar	_temp @ sp[(-13)+8]
 15007  012014  0EFB               	movlw	-5
 15008  012016  50E3               	movf	plusw1,w,c
 15009  012018  26DE               	addwf	postinc2,f,c
 15010  01201A  0E00               	movlw	0
 15011  01201C  22DE               	addwfc	postinc2,f,c
 15012  01201E  22DE               	addwfc	postinc2,f,c
 15013  012020  22DE               	addwfc	postinc2,f,c
 15014                           
 15015                           ;stkvar	_prod @ sp[(-13)+0]
 15016  012022  50E1               	movf	fsr1l,w,c
 15017  012024  0FF3               	addlw	-13
 15018  012026  6ED9               	movwf	fsr2l,c
 15019  012028  50E2               	movf	fsr1h,w,c
 15020  01202A  6EDA               	movwf	fsr2h,c
 15021  01202C  0EFF               	movlw	255
 15022  01202E  22DA               	addwfc	fsr2h,f,c
 15023                           
 15024                           ;stkvar	_temp @ sp[(-13)+8]
 15025  012030  0EFC               	movlw	252
 15026  012032  24E1               	addwf	fsr1l,w,c
 15027  012034  6EE9               	movwf	fsr0l,c
 15028  012036  0EFF               	movlw	255
 15029  012038  20E2               	addwfc	fsr1h,w,c
 15030  01203A  6EEA               	movwf	fsr0h,c
 15031  01203C  50EF               	movf	indf0,w,c
 15032  01203E  26DE               	addwf	postinc2,f,c
 15033  012040  0E00               	movlw	0
 15034  012042  22DE               	addwfc	postinc2,f,c
 15035  012044  22DE               	addwfc	postinc2,f,c
 15036  012046  22DE               	addwfc	postinc2,f,c
 15037                           
 15038                           ;stkvar	_b @ sp[(-13)+-4]
 15039  012048  0EF1               	movlw	241
 15040  01204A  24E1               	addwf	fsr1l,w,c
 15041  01204C  6ED9               	movwf	fsr2l,c
 15042  01204E  0EFF               	movlw	255
 15043  012050  20E2               	addwfc	fsr1h,w,c
 15044  012052  6EDA               	movwf	fsr2h,c
 15045  012054  50DF               	movf	indf2,w,c
 15046  012056  6E3D               	movwf	(btemp+11)^0,c
 15047                           
 15048                           ;stkvar	_a @ sp[(-13)+-8]
 15049  012058  0EEB               	movlw	-21
 15050  01205A  50E3               	movf	plusw1,w,c
 15051  01205C  023D               	mulwf	(btemp+11)^0,c
 15052                           
 15053                           ;stkvar	_temp @ sp[(-13)+8]
 15054  01205E  0EFB               	movlw	-5
 15055  012060  006F FFCF FFE3     	movff	prodl,plusw1
 15056  012066  0EFC               	movlw	-4
 15057  012068  006F FFD3 FFE3     	movff	prodh,plusw1
 15058                           
 15059                           ;stkvar	_grs @ sp[(-13)+4]
 15060  01206E  50E1               	movf	fsr1l,w,c
 15061  012070  0FF7               	addlw	-9
 15062  012072  6ED9               	movwf	fsr2l,c
 15063  012074  50E2               	movf	fsr1h,w,c
 15064  012076  6EDA               	movwf	fsr2h,c
 15065  012078  0EFF               	movlw	255
 15066  01207A  22DA               	addwfc	fsr2h,f,c
 15067                           
 15068                           ;stkvar	_temp @ sp[(-13)+8]
 15069  01207C  0EFB               	movlw	-5
 15070  01207E  50E3               	movf	plusw1,w,c
 15071  012080  26DE               	addwf	postinc2,f,c
 15072  012082  0E00               	movlw	0
 15073  012084  22DE               	addwfc	postinc2,f,c
 15074  012086  22DE               	addwfc	postinc2,f,c
 15075  012088  22DE               	addwfc	postinc2,f,c
 15076                           
 15077                           ;stkvar	_prod @ sp[(-13)+0]
 15078  01208A  50E1               	movf	fsr1l,w,c
 15079  01208C  0FF3               	addlw	-13
 15080  01208E  6ED9               	movwf	fsr2l,c
 15081  012090  50E2               	movf	fsr1h,w,c
 15082  012092  6EDA               	movwf	fsr2h,c
 15083  012094  0EFF               	movlw	255
 15084  012096  22DA               	addwfc	fsr2h,f,c
 15085                           
 15086                           ;stkvar	_temp @ sp[(-13)+8]
 15087  012098  0EFC               	movlw	252
 15088  01209A  24E1               	addwf	fsr1l,w,c
 15089  01209C  6EE9               	movwf	fsr0l,c
 15090  01209E  0EFF               	movlw	255
 15091  0120A0  20E2               	addwfc	fsr1h,w,c
 15092  0120A2  6EEA               	movwf	fsr0h,c
 15093  0120A4  50EF               	movf	indf0,w,c
 15094  0120A6  26DE               	addwf	postinc2,f,c
 15095  0120A8  0E00               	movlw	0
 15096  0120AA  22DE               	addwfc	postinc2,f,c
 15097  0120AC  22DE               	addwfc	postinc2,f,c
 15098  0120AE  22DE               	addwfc	postinc2,f,c
 15099                           
 15100                           ;stkvar	_grs @ sp[(-13)+4]
 15101  0120B0  50E1               	movf	fsr1l,w,c
 15102  0120B2  0FF7               	addlw	-9
 15103  0120B4  6ED9               	movwf	fsr2l,c
 15104  0120B6  50E2               	movf	fsr1h,w,c
 15105  0120B8  6EDA               	movwf	fsr2h,c
 15106  0120BA  0EFF               	movlw	255
 15107  0120BC  22DA               	addwfc	fsr2h,f,c
 15108  0120BE  0E08               	movlw	8
 15109  0120C0                     u10165:
 15110  0120C0  90D8               	bcf	status,0,c
 15111  0120C2  36DE               	rlcf	postinc2,f,c
 15112  0120C4  36DE               	rlcf	postinc2,f,c
 15113  0120C6  36DE               	rlcf	postinc2,f,c
 15114  0120C8  36DD               	rlcf	postdec2,f,c
 15115  0120CA  52DD               	movf	postdec2,f,c
 15116  0120CC  52DD               	movf	postdec2,f,c
 15117  0120CE  2EE8               	decfsz	wreg,f,c
 15118  0120D0  D7F7               	goto	u10165
 15119                           
 15120                           ;stkvar	_b @ sp[(-13)+-4]
 15121  0120D2  0EF0               	movlw	240
 15122  0120D4  24E1               	addwf	fsr1l,w,c
 15123  0120D6  6ED9               	movwf	fsr2l,c
 15124  0120D8  0EFF               	movlw	255
 15125  0120DA  20E2               	addwfc	fsr1h,w,c
 15126  0120DC  6EDA               	movwf	fsr2h,c
 15127  0120DE  50DF               	movf	indf2,w,c
 15128  0120E0  6E3D               	movwf	(btemp+11)^0,c
 15129                           
 15130                           ;stkvar	_a @ sp[(-13)+-8]
 15131  0120E2  0EEB               	movlw	-21
 15132  0120E4  50E3               	movf	plusw1,w,c
 15133  0120E6  023D               	mulwf	(btemp+11)^0,c
 15134                           
 15135                           ;stkvar	_temp @ sp[(-13)+8]
 15136  0120E8  0EFB               	movlw	-5
 15137  0120EA  006F FFCF FFE3     	movff	prodl,plusw1
 15138  0120F0  0EFC               	movlw	-4
 15139  0120F2  006F FFD3 FFE3     	movff	prodh,plusw1
 15140                           
 15141                           ;stkvar	_temp @ sp[(-13)+8]
 15142  0120F8  0EFB               	movlw	-5
 15143  0120FA  006F FF8C  F03C    	movff	plusw1,btemp+10
 15144  012100  0EFC               	movlw	-4
 15145  012102  006F FF8C  F03D    	movff	plusw1,btemp+11
 15146                           
 15147                           ;stkvar	_grs @ sp[(-13)+4]
 15148  012108  50E1               	movf	fsr1l,w,c
 15149  01210A  0FF7               	addlw	-9
 15150  01210C  6ED9               	movwf	fsr2l,c
 15151  01210E  50E2               	movf	fsr1h,w,c
 15152  012110  6EDA               	movwf	fsr2h,c
 15153  012112  0EFF               	movlw	255
 15154  012114  22DA               	addwfc	fsr2h,f,c
 15155  012116  503C               	movf	(btemp+10)^0,w,c
 15156  012118  26DE               	addwf	postinc2,f,c
 15157  01211A  503D               	movf	(btemp+11)^0,w,c
 15158  01211C  22DE               	addwfc	postinc2,f,c
 15159  01211E  0E00               	movlw	0
 15160  012120  22DE               	addwfc	postinc2,f,c
 15161  012122  22DE               	addwfc	postinc2,f,c
 15162                           
 15163                           ;stkvar	_b @ sp[(-13)+-4]
 15164  012124  0EEF               	movlw	-17
 15165  012126  006F FF8C  F03D    	movff	plusw1,btemp+11
 15166                           
 15167                           ;stkvar	_a @ sp[(-13)+-8]
 15168  01212C  0EEC               	movlw	236
 15169  01212E  24E1               	addwf	fsr1l,w,c
 15170  012130  6ED9               	movwf	fsr2l,c
 15171  012132  0EFF               	movlw	255
 15172  012134  20E2               	addwfc	fsr1h,w,c
 15173  012136  6EDA               	movwf	fsr2h,c
 15174  012138  50DF               	movf	indf2,w,c
 15175  01213A  023D               	mulwf	(btemp+11)^0,c
 15176                           
 15177                           ;stkvar	_temp @ sp[(-13)+8]
 15178  01213C  0EFB               	movlw	-5
 15179  01213E  006F FFCF FFE3     	movff	prodl,plusw1
 15180  012144  0EFC               	movlw	-4
 15181  012146  006F FFD3 FFE3     	movff	prodh,plusw1
 15182                           
 15183                           ;stkvar	_temp @ sp[(-13)+8]
 15184  01214C  0EFB               	movlw	-5
 15185  01214E  006F FF8C  F03C    	movff	plusw1,btemp+10
 15186  012154  0EFC               	movlw	-4
 15187  012156  006F FF8C  F03D    	movff	plusw1,btemp+11
 15188                           
 15189                           ;stkvar	_grs @ sp[(-13)+4]
 15190  01215C  50E1               	movf	fsr1l,w,c
 15191  01215E  0FF7               	addlw	-9
 15192  012160  6ED9               	movwf	fsr2l,c
 15193  012162  50E2               	movf	fsr1h,w,c
 15194  012164  6EDA               	movwf	fsr2h,c
 15195  012166  0EFF               	movlw	255
 15196  012168  22DA               	addwfc	fsr2h,f,c
 15197  01216A  503C               	movf	(btemp+10)^0,w,c
 15198  01216C  26DE               	addwf	postinc2,f,c
 15199  01216E  503D               	movf	(btemp+11)^0,w,c
 15200  012170  22DE               	addwfc	postinc2,f,c
 15201  012172  0E00               	movlw	0
 15202  012174  22DE               	addwfc	postinc2,f,c
 15203  012176  22DE               	addwfc	postinc2,f,c
 15204                           
 15205                           ;stkvar	_grs @ sp[(-13)+4]
 15206  012178  50E1               	movf	fsr1l,w,c
 15207  01217A  0FF7               	addlw	-9
 15208  01217C  6ED9               	movwf	fsr2l,c
 15209  01217E  50E2               	movf	fsr1h,w,c
 15210  012180  6EDA               	movwf	fsr2h,c
 15211  012182  0EFF               	movlw	255
 15212  012184  22DA               	addwfc	fsr2h,f,c
 15213  012186  0E08               	movlw	8
 15214  012188                     u10175:
 15215  012188  90D8               	bcf	status,0,c
 15216  01218A  36DE               	rlcf	postinc2,f,c
 15217  01218C  36DE               	rlcf	postinc2,f,c
 15218  01218E  36DE               	rlcf	postinc2,f,c
 15219  012190  36DD               	rlcf	postdec2,f,c
 15220  012192  52DD               	movf	postdec2,f,c
 15221  012194  52DD               	movf	postdec2,f,c
 15222  012196  2EE8               	decfsz	wreg,f,c
 15223  012198  D7F7               	goto	u10175
 15224                           
 15225                           ;stkvar	_b @ sp[(-13)+-4]
 15226  01219A  0EEF               	movlw	-17
 15227  01219C  006F FF8C  F03D    	movff	plusw1,btemp+11
 15228                           
 15229                           ;stkvar	_a @ sp[(-13)+-8]
 15230  0121A2  0EEB               	movlw	-21
 15231  0121A4  50E3               	movf	plusw1,w,c
 15232  0121A6  023D               	mulwf	(btemp+11)^0,c
 15233                           
 15234                           ;stkvar	_temp @ sp[(-13)+8]
 15235  0121A8  0EFB               	movlw	-5
 15236  0121AA  006F FFCF FFE3     	movff	prodl,plusw1
 15237  0121B0  0EFC               	movlw	-4
 15238  0121B2  006F FFD3 FFE3     	movff	prodh,plusw1
 15239                           
 15240                           ;stkvar	_temp @ sp[(-13)+8]
 15241  0121B8  0EFB               	movlw	-5
 15242  0121BA  006F FF8C  F03C    	movff	plusw1,btemp+10
 15243  0121C0  0EFC               	movlw	-4
 15244  0121C2  006F FF8C  F03D    	movff	plusw1,btemp+11
 15245                           
 15246                           ;stkvar	_grs @ sp[(-13)+4]
 15247  0121C8  50E1               	movf	fsr1l,w,c
 15248  0121CA  0FF7               	addlw	-9
 15249  0121CC  6ED9               	movwf	fsr2l,c
 15250  0121CE  50E2               	movf	fsr1h,w,c
 15251  0121D0  6EDA               	movwf	fsr2h,c
 15252  0121D2  0EFF               	movlw	255
 15253  0121D4  22DA               	addwfc	fsr2h,f,c
 15254  0121D6  503C               	movf	(btemp+10)^0,w,c
 15255  0121D8  26DE               	addwf	postinc2,f,c
 15256  0121DA  503D               	movf	(btemp+11)^0,w,c
 15257  0121DC  22DE               	addwfc	postinc2,f,c
 15258  0121DE  0E00               	movlw	0
 15259  0121E0  22DE               	addwfc	postinc2,f,c
 15260  0121E2  22DE               	addwfc	postinc2,f,c
 15261                           
 15262                           ;stkvar	_b @ sp[(-13)+-4]
 15263  0121E4  0EF0               	movlw	240
 15264  0121E6  24E1               	addwf	fsr1l,w,c
 15265  0121E8  6ED9               	movwf	fsr2l,c
 15266  0121EA  0EFF               	movlw	255
 15267  0121EC  20E2               	addwfc	fsr1h,w,c
 15268  0121EE  6EDA               	movwf	fsr2h,c
 15269  0121F0  50DF               	movf	indf2,w,c
 15270  0121F2  6E3D               	movwf	(btemp+11)^0,c
 15271                           
 15272                           ;stkvar	_a @ sp[(-13)+-8]
 15273  0121F4  0EED               	movlw	237
 15274  0121F6  24E1               	addwf	fsr1l,w,c
 15275  0121F8  6ED9               	movwf	fsr2l,c
 15276  0121FA  0EFF               	movlw	255
 15277  0121FC  20E2               	addwfc	fsr1h,w,c
 15278  0121FE  6EDA               	movwf	fsr2h,c
 15279  012200  50DF               	movf	indf2,w,c
 15280  012202  023D               	mulwf	(btemp+11)^0,c
 15281                           
 15282                           ;stkvar	_temp @ sp[(-13)+8]
 15283  012204  0EFB               	movlw	-5
 15284  012206  006F FFCF FFE3     	movff	prodl,plusw1
 15285  01220C  0EFC               	movlw	-4
 15286  01220E  006F FFD3 FFE3     	movff	prodh,plusw1
 15287                           
 15288                           ;stkvar	_temp @ sp[(-13)+8]
 15289  012214  0EFB               	movlw	-5
 15290  012216  006F FF8C  F03C    	movff	plusw1,btemp+10
 15291  01221C  0EFC               	movlw	-4
 15292  01221E  006F FF8C  F03D    	movff	plusw1,btemp+11
 15293                           
 15294                           ;stkvar	_prod @ sp[(-13)+0]
 15295  012224  50E1               	movf	fsr1l,w,c
 15296  012226  0FF3               	addlw	-13
 15297  012228  6ED9               	movwf	fsr2l,c
 15298  01222A  50E2               	movf	fsr1h,w,c
 15299  01222C  6EDA               	movwf	fsr2h,c
 15300  01222E  0EFF               	movlw	255
 15301  012230  22DA               	addwfc	fsr2h,f,c
 15302  012232  503C               	movf	(btemp+10)^0,w,c
 15303  012234  26DE               	addwf	postinc2,f,c
 15304  012236  503D               	movf	(btemp+11)^0,w,c
 15305  012238  22DE               	addwfc	postinc2,f,c
 15306  01223A  0E00               	movlw	0
 15307  01223C  22DE               	addwfc	postinc2,f,c
 15308  01223E  22DE               	addwfc	postinc2,f,c
 15309                           
 15310                           ;stkvar	_b @ sp[(-13)+-4]
 15311  012240  0EF1               	movlw	241
 15312  012242  24E1               	addwf	fsr1l,w,c
 15313  012244  6ED9               	movwf	fsr2l,c
 15314  012246  0EFF               	movlw	255
 15315  012248  20E2               	addwfc	fsr1h,w,c
 15316  01224A  6EDA               	movwf	fsr2h,c
 15317  01224C  50DF               	movf	indf2,w,c
 15318  01224E  6E3D               	movwf	(btemp+11)^0,c
 15319                           
 15320                           ;stkvar	_a @ sp[(-13)+-8]
 15321  012250  0EEC               	movlw	236
 15322  012252  24E1               	addwf	fsr1l,w,c
 15323  012254  6ED9               	movwf	fsr2l,c
 15324  012256  0EFF               	movlw	255
 15325  012258  20E2               	addwfc	fsr1h,w,c
 15326  01225A  6EDA               	movwf	fsr2h,c
 15327  01225C  50DF               	movf	indf2,w,c
 15328  01225E  023D               	mulwf	(btemp+11)^0,c
 15329                           
 15330                           ;stkvar	_temp @ sp[(-13)+8]
 15331  012260  0EFB               	movlw	-5
 15332  012262  006F FFCF FFE3     	movff	prodl,plusw1
 15333  012268  0EFC               	movlw	-4
 15334  01226A  006F FFD3 FFE3     	movff	prodh,plusw1
 15335                           
 15336                           ;stkvar	_temp @ sp[(-13)+8]
 15337  012270  0EFB               	movlw	-5
 15338  012272  006F FF8C  F03C    	movff	plusw1,btemp+10
 15339  012278  0EFC               	movlw	-4
 15340  01227A  006F FF8C  F03D    	movff	plusw1,btemp+11
 15341                           
 15342                           ;stkvar	_prod @ sp[(-13)+0]
 15343  012280  50E1               	movf	fsr1l,w,c
 15344  012282  0FF3               	addlw	-13
 15345  012284  6ED9               	movwf	fsr2l,c
 15346  012286  50E2               	movf	fsr1h,w,c
 15347  012288  6EDA               	movwf	fsr2h,c
 15348  01228A  0EFF               	movlw	255
 15349  01228C  22DA               	addwfc	fsr2h,f,c
 15350  01228E  503C               	movf	(btemp+10)^0,w,c
 15351  012290  26DE               	addwf	postinc2,f,c
 15352  012292  503D               	movf	(btemp+11)^0,w,c
 15353  012294  22DE               	addwfc	postinc2,f,c
 15354  012296  0E00               	movlw	0
 15355  012298  22DE               	addwfc	postinc2,f,c
 15356  01229A  22DE               	addwfc	postinc2,f,c
 15357                           
 15358                           ;stkvar	_b @ sp[(-13)+-4]
 15359  01229C  0EF1               	movlw	241
 15360  01229E  24E1               	addwf	fsr1l,w,c
 15361  0122A0  6ED9               	movwf	fsr2l,c
 15362  0122A2  0EFF               	movlw	255
 15363  0122A4  20E2               	addwfc	fsr1h,w,c
 15364  0122A6  6EDA               	movwf	fsr2h,c
 15365  0122A8  50DF               	movf	indf2,w,c
 15366  0122AA  6E3D               	movwf	(btemp+11)^0,c
 15367                           
 15368                           ;stkvar	_a @ sp[(-13)+-8]
 15369  0122AC  0EED               	movlw	237
 15370  0122AE  24E1               	addwf	fsr1l,w,c
 15371  0122B0  6ED9               	movwf	fsr2l,c
 15372  0122B2  0EFF               	movlw	255
 15373  0122B4  20E2               	addwfc	fsr1h,w,c
 15374  0122B6  6EDA               	movwf	fsr2h,c
 15375  0122B8  50DF               	movf	indf2,w,c
 15376  0122BA  023D               	mulwf	(btemp+11)^0,c
 15377                           
 15378                           ;stkvar	_temp @ sp[(-13)+8]
 15379  0122BC  0EFB               	movlw	-5
 15380  0122BE  006F FFCF FFE3     	movff	prodl,plusw1
 15381  0122C4  0EFC               	movlw	-4
 15382  0122C6  006F FFD3 FFE3     	movff	prodh,plusw1
 15383                           
 15384                           ;stkvar	_temp @ sp[(-13)+8]
 15385  0122CC  0EFB               	movlw	-5
 15386  0122CE  006F FF8C  F03C    	movff	plusw1,btemp+10
 15387  0122D4  0EFC               	movlw	-4
 15388  0122D6  006F FF8C  F03D    	movff	plusw1,btemp+11
 15389  0122DC  503C               	movf	(btemp+10)^0,w,c
 15390  0122DE  6E36               	movwf	(btemp+4)^0,c
 15391  0122E0  503D               	movf	(btemp+11)^0,w,c
 15392  0122E2  6E37               	movwf	(btemp+5)^0,c
 15393  0122E4  6A38               	clrf	(btemp+6)^0,c
 15394  0122E6  6A39               	clrf	(btemp+7)^0,c
 15395  0122E8  0060  F0E0  F039   	movff	btemp+6,btemp+7
 15396  0122EE  0060  F0DC  F038   	movff	btemp+5,btemp+6
 15397  0122F4  0060  F0D8  F037   	movff	btemp+4,btemp+5
 15398  0122FA  6A36               	clrf	(btemp+4)^0,c
 15399                           
 15400                           ;stkvar	_prod @ sp[(-13)+0]
 15401  0122FC  50E1               	movf	fsr1l,w,c
 15402  0122FE  0FF3               	addlw	-13
 15403  012300  6ED9               	movwf	fsr2l,c
 15404  012302  50E2               	movf	fsr1h,w,c
 15405  012304  6EDA               	movwf	fsr2h,c
 15406  012306  0EFF               	movlw	255
 15407  012308  22DA               	addwfc	fsr2h,f,c
 15408  01230A  5036               	movf	(btemp+4)^0,w,c
 15409  01230C  26DE               	addwf	postinc2,f,c
 15410  01230E  5037               	movf	(btemp+5)^0,w,c
 15411  012310  22DE               	addwfc	postinc2,f,c
 15412  012312  5038               	movf	(btemp+6)^0,w,c
 15413  012314  22DE               	addwfc	postinc2,f,c
 15414  012316  5039               	movf	(btemp+7)^0,w,c
 15415  012318  22DE               	addwfc	postinc2,f,c
 15416                           
 15417                           ;stkvar	_prod @ sp[(-13)+0]
 15418  01231A  50E1               	movf	fsr1l,w,c
 15419  01231C  0FF3               	addlw	-13
 15420  01231E  6ED9               	movwf	fsr2l,c
 15421  012320  50E2               	movf	fsr1h,w,c
 15422  012322  6EDA               	movwf	fsr2h,c
 15423  012324  0EFF               	movlw	255
 15424  012326  22DA               	addwfc	fsr2h,f,c
 15425                           
 15426                           ;stkvar	_grs @ sp[(-13)+4]
 15427  012328  0EFA               	movlw	250
 15428  01232A  24E1               	addwf	fsr1l,w,c
 15429  01232C  6EE9               	movwf	fsr0l,c
 15430  01232E  0EFF               	movlw	255
 15431  012330  20E2               	addwfc	fsr1h,w,c
 15432  012332  6EEA               	movwf	fsr0h,c
 15433  012334  50EF               	movf	indf0,w,c
 15434  012336  26DE               	addwf	postinc2,f,c
 15435  012338  0E00               	movlw	0
 15436  01233A  22DE               	addwfc	postinc2,f,c
 15437  01233C  22DE               	addwfc	postinc2,f,c
 15438  01233E  22DE               	addwfc	postinc2,f,c
 15439                           
 15440                           ;stkvar	_grs @ sp[(-13)+4]
 15441  012340  50E1               	movf	fsr1l,w,c
 15442  012342  0FF7               	addlw	-9
 15443  012344  6ED9               	movwf	fsr2l,c
 15444  012346  50E2               	movf	fsr1h,w,c
 15445  012348  6EDA               	movwf	fsr2h,c
 15446  01234A  0EFF               	movlw	255
 15447  01234C  22DA               	addwfc	fsr2h,f,c
 15448  01234E  0E08               	movlw	8
 15449  012350                     u10185:
 15450  012350  90D8               	bcf	status,0,c
 15451  012352  36DE               	rlcf	postinc2,f,c
 15452  012354  36DE               	rlcf	postinc2,f,c
 15453  012356  36DE               	rlcf	postinc2,f,c
 15454  012358  36DD               	rlcf	postdec2,f,c
 15455  01235A  52DD               	movf	postdec2,f,c
 15456  01235C  52DD               	movf	postdec2,f,c
 15457  01235E  2EE8               	decfsz	wreg,f,c
 15458  012360  D7F7               	goto	u10185
 15459  012362  0E82               	movlw	130
 15460  012364  6E3C               	movwf	(btemp+10)^0,c
 15461  012366  0EFF               	movlw	255
 15462  012368  6E3D               	movwf	(btemp+11)^0,c
 15463                           
 15464                           ;stkvar	_bexp @ sp[(-13)+10]
 15465  01236A  0EFD               	movlw	-3
 15466  01236C  50E3               	movf	plusw1,w,c
 15467  01236E  6E3A               	movwf	(btemp+8)^0,c
 15468  012370  6A3B               	clrf	(btemp+9)^0,c
 15469                           
 15470                           ;stkvar	_aexp @ sp[(-13)+11]
 15471  012372  0EFE               	movlw	-2
 15472  012374  50E3               	movf	plusw1,w,c
 15473  012376  263A               	addwf	(btemp+8)^0,f,c
 15474  012378  0E00               	movlw	0
 15475  01237A  223B               	addwfc	(btemp+9)^0,f,c
 15476  01237C  503C               	movf	(btemp+10)^0,w,c
 15477  01237E  263A               	addwf	(btemp+8)^0,f,c
 15478  012380  503D               	movf	(btemp+11)^0,w,c
 15479  012382  223B               	addwfc	(btemp+9)^0,f,c
 15480                           
 15481                           ;stkvar	_temp @ sp[(-13)+8]
 15482  012384  0EFB               	movlw	-5
 15483  012386  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15484  01238C  0EFC               	movlw	-4
 15485  01238E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15486  012394  D021               	goto	l9918
 15487  012396                     l9908:
 15488                           
 15489                           ;stkvar	_prod @ sp[(-13)+0]
 15490  012396  90D8               	bcf	status,0,c
 15491  012398  0EF3               	movlw	-13
 15492  01239A  36E3               	rlcf	plusw1,f,c
 15493  01239C  0EF4               	movlw	-12
 15494  01239E  36E3               	rlcf	plusw1,f,c
 15495  0123A0  0EF5               	movlw	-11
 15496  0123A2  36E3               	rlcf	plusw1,f,c
 15497  0123A4  0EF6               	movlw	-10
 15498  0123A6  36E3               	rlcf	plusw1,f,c
 15499                           
 15500                           ;stkvar	_grs @ sp[(-13)+4]
 15501  0123A8  0EFA               	movlw	-6
 15502  0123AA  AEE3               	btfss	plusw1,7,c
 15503  0123AC  D002               	goto	l9914
 15504                           
 15505                           ;stkvar	_prod @ sp[(-13)+0]
 15506  0123AE  0EF3               	movlw	-13
 15507  0123B0  80E3               	bsf	plusw1,0,c
 15508  0123B2                     l9914:
 15509                           
 15510                           ;stkvar	_grs @ sp[(-13)+4]
 15511  0123B2  90D8               	bcf	status,0,c
 15512  0123B4  0EF7               	movlw	-9
 15513  0123B6  36E3               	rlcf	plusw1,f,c
 15514  0123B8  0EF8               	movlw	-8
 15515  0123BA  36E3               	rlcf	plusw1,f,c
 15516  0123BC  0EF9               	movlw	-7
 15517  0123BE  36E3               	rlcf	plusw1,f,c
 15518  0123C0  0EFA               	movlw	-6
 15519  0123C2  36E3               	rlcf	plusw1,f,c
 15520                           
 15521                           ;stkvar	_temp @ sp[(-13)+8]
 15522  0123C4  50E1               	movf	fsr1l,w,c
 15523  0123C6  0FFB               	addlw	-5
 15524  0123C8  6ED9               	movwf	fsr2l,c
 15525  0123CA  50E2               	movf	fsr1h,w,c
 15526  0123CC  6EDA               	movwf	fsr2h,c
 15527  0123CE  0EFF               	movlw	255
 15528  0123D0  22DA               	addwfc	fsr2h,f,c
 15529  0123D2  06DE               	decf	postinc2,f,c
 15530  0123D4  0E00               	movlw	0
 15531  0123D6  5ADD               	subwfb	postdec2,f,c
 15532  0123D8                     l9918:
 15533                           
 15534                           ;stkvar	_prod @ sp[(-13)+0]
 15535  0123D8  0EF5               	movlw	-11
 15536  0123DA  AEE3               	btfss	plusw1,7,c
 15537  0123DC  D7DC               	goto	l9908
 15538                           
 15539                           ;stkvar	_aexp @ sp[(-13)+11]
 15540  0123DE  0EFE               	movlw	-2
 15541  0123E0  6AE3               	clrf	plusw1,c
 15542                           
 15543                           ;stkvar	_grs @ sp[(-13)+4]
 15544  0123E2  0EFA               	movlw	-6
 15545  0123E4  AEE3               	btfss	plusw1,7,c
 15546  0123E6  D020               	goto	l9932
 15547                           
 15548                           ;stkvar	_grs @ sp[(-13)+4]
 15549  0123E8  50E1               	movf	fsr1l,w,c
 15550  0123EA  0FF7               	addlw	-9
 15551  0123EC  6ED9               	movwf	fsr2l,c
 15552  0123EE  50E2               	movf	fsr1h,w,c
 15553  0123F0  6EDA               	movwf	fsr2h,c
 15554  0123F2  0EFF               	movlw	255
 15555  0123F4  22DA               	addwfc	fsr2h,f,c
 15556  0123F6  0EFF               	movlw	255
 15557  0123F8  14DE               	andwf	postinc2,w,c
 15558  0123FA  6E3A               	movwf	(btemp+8)^0,c
 15559  0123FC  0EFF               	movlw	255
 15560  0123FE  14DE               	andwf	postinc2,w,c
 15561  012400  6E3B               	movwf	(btemp+9)^0,c
 15562  012402  0EFF               	movlw	255
 15563  012404  14DE               	andwf	postinc2,w,c
 15564  012406  6E3C               	movwf	(btemp+10)^0,c
 15565  012408  0E7F               	movlw	127
 15566  01240A  14DE               	andwf	postinc2,w,c
 15567  01240C  6E3D               	movwf	(btemp+11)^0,c
 15568  01240E  503A               	movf	(btemp+8)^0,w,c
 15569  012410  103B               	iorwf	(btemp+9)^0,w,c
 15570  012412  103C               	iorwf	(btemp+10)^0,w,c
 15571  012414  103D               	iorwf	(btemp+11)^0,w,c
 15572  012416  B4D8               	btfsc	status,2,c
 15573  012418  D004               	goto	l9928
 15574  01241A                     u10220:
 15575                           
 15576                           ;stkvar	_aexp @ sp[(-13)+11]
 15577  01241A  0EFE               	movlw	-2
 15578  01241C  6AE3               	clrf	plusw1,c
 15579  01241E  2AE3               	incf	plusw1,f,c
 15580  012420  D003               	goto	l9932
 15581  012422                     l9928:
 15582                           
 15583                           ;stkvar	_prod @ sp[(-13)+0]
 15584  012422  0EF3               	movlw	-13
 15585  012424  B0E3               	btfsc	plusw1,0,c
 15586  012426  D7F9               	goto	u10220
 15587  012428                     l9932:
 15588                           
 15589                           ;stkvar	_aexp @ sp[(-13)+11]
 15590  012428  0EFE               	movlw	-2
 15591  01242A  50E3               	movf	plusw1,w,c
 15592  01242C  B4D8               	btfsc	status,2,c
 15593  01242E  D036               	goto	l9942
 15594                           
 15595                           ;stkvar	_prod @ sp[(-13)+0]
 15596  012430  50E1               	movf	fsr1l,w,c
 15597  012432  0FF3               	addlw	-13
 15598  012434  6ED9               	movwf	fsr2l,c
 15599  012436  50E2               	movf	fsr1h,w,c
 15600  012438  6EDA               	movwf	fsr2h,c
 15601  01243A  0EFF               	movlw	255
 15602  01243C  22DA               	addwfc	fsr2h,f,c
 15603  01243E  2ADE               	incf	postinc2,f,c
 15604  012440  0E00               	movlw	0
 15605  012442  22DE               	addwfc	postinc2,f,c
 15606  012444  22DE               	addwfc	postinc2,f,c
 15607  012446  22DE               	addwfc	postinc2,f,c
 15608                           
 15609                           ;stkvar	_prod @ sp[(-13)+0]
 15610  012448  0EF6               	movlw	-10
 15611  01244A  A0E3               	btfss	plusw1,0,c
 15612  01244C  D027               	goto	l9942
 15613  01244E  0E01               	movlw	1
 15614  012450  6E3D               	movwf	(btemp+11)^0,c
 15615                           
 15616                           ;stkvar	_prod @ sp[(-13)+0]
 15617  012452  50E1               	movf	fsr1l,w,c
 15618  012454  0FF3               	addlw	-13
 15619  012456  6ED9               	movwf	fsr2l,c
 15620  012458  50E2               	movf	fsr1h,w,c
 15621  01245A  6EDA               	movwf	fsr2h,c
 15622  01245C  0EFF               	movlw	255
 15623  01245E  22DA               	addwfc	fsr2h,f,c
 15624  012460  283D               	incf	(btemp+11)^0,w,c
 15625  012462  52DE               	movf	postinc2,f,c
 15626  012464  D008               	goto	u10260
 15627  012466                     u10265:
 15628  012466  52DE               	movf	postinc2,f,c
 15629  012468  90D8               	bcf	status,0,c
 15630  01246A  BEDC               	btfsc	preinc2,7,c
 15631  01246C  80D8               	bsf	status,0,c
 15632  01246E  32DD               	rrcf	postdec2,f,c
 15633  012470  32DD               	rrcf	postdec2,f,c
 15634  012472  32DD               	rrcf	postdec2,f,c
 15635  012474  32DE               	rrcf	postinc2,f,c
 15636  012476                     u10260:
 15637  012476  2EE8               	decfsz	wreg,f,c
 15638  012478  D7F6               	goto	u10265
 15639                           
 15640                           ;stkvar	_temp @ sp[(-13)+8]
 15641  01247A  0EFB               	movlw	-5
 15642  01247C  50E3               	movf	plusw1,w,c
 15643  01247E  0F01               	addlw	1
 15644  012480  6E32               	movwf	btemp^0,c
 15645  012482  0EFB               	movlw	-5
 15646  012484  0060  F0CB  FFE3   	movff	btemp,plusw1
 15647  01248A  6A32               	clrf	btemp^0,c
 15648  01248C  0EFC               	movlw	-4
 15649  01248E  50E3               	movf	plusw1,w,c
 15650  012490  2032               	addwfc	btemp^0,w,c
 15651  012492  6E32               	movwf	btemp^0,c
 15652  012494  0EFC               	movlw	-4
 15653  012496  0060  F0CB  FFE3   	movff	btemp,plusw1
 15654  01249C                     l9942:
 15655                           
 15656                           ;stkvar	_temp @ sp[(-13)+8]
 15657  01249C  0EFC               	movlw	-4
 15658  01249E  BEE3               	btfsc	plusw1,7,c
 15659  0124A0  D020               	goto	l9946
 15660  0124A2  0EFC               	movlw	-4
 15661  0124A4  50E3               	movf	plusw1,w,c
 15662  0124A6  E104               	bnz	u10270
 15663  0124A8  0EFB               	movlw	-5
 15664  0124AA  28E3               	incf	plusw1,w,c
 15665  0124AC  A0D8               	btfss	status,0,c
 15666  0124AE  D019               	goto	l9946
 15667  0124B0                     u10270:
 15668  0124B0  0E00               	movlw	0
 15669  0124B2  6E3A               	movwf	(btemp+8)^0,c
 15670  0124B4  0E00               	movlw	0
 15671  0124B6  6E3B               	movwf	(btemp+9)^0,c
 15672  0124B8  0E80               	movlw	128
 15673  0124BA  6E3C               	movwf	(btemp+10)^0,c
 15674  0124BC  0E7F               	movlw	127
 15675  0124BE  6E3D               	movwf	(btemp+11)^0,c
 15676                           
 15677                           ;stkvar	_prod @ sp[(-13)+0]
 15678  0124C0  0EF3               	movlw	-13
 15679  0124C2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15680  0124C8  0EF4               	movlw	-12
 15681  0124CA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15682  0124D0  0EF5               	movlw	-11
 15683  0124D2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15684  0124D8  0EF6               	movlw	-10
 15685  0124DA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15686  0124E0  D044               	goto	l9962
 15687  0124E2                     l9946:
 15688                           
 15689                           ;stkvar	_temp @ sp[(-13)+8]
 15690  0124E2  0EFC               	movlw	-4
 15691  0124E4  BEE3               	btfsc	plusw1,7,c
 15692  0124E6  D007               	goto	u10280
 15693  0124E8  0EFC               	movlw	-4
 15694  0124EA  50E3               	movf	plusw1,w,c
 15695  0124EC  E10F               	bnz	l9952
 15696  0124EE  0EFB               	movlw	-5
 15697  0124F0  04E3               	decf	plusw1,w,c
 15698  0124F2  B0D8               	btfsc	status,0,c
 15699  0124F4  D00B               	goto	l9952
 15700  0124F6                     u10280:
 15701                           
 15702                           ;stkvar	_prod @ sp[(-13)+0]
 15703  0124F6  0EF3               	movlw	-13
 15704  0124F8  6AE3               	clrf	plusw1,c
 15705  0124FA  0EF4               	movlw	-12
 15706  0124FC  6AE3               	clrf	plusw1,c
 15707  0124FE  0EF5               	movlw	-11
 15708  012500  6AE3               	clrf	plusw1,c
 15709  012502  0EF6               	movlw	-10
 15710  012504  6AE3               	clrf	plusw1,c
 15711                           
 15712                           ;stkvar	_sign @ sp[(-13)+12]
 15713  012506  0EFF               	movlw	-1
 15714  012508  6AE3               	clrf	plusw1,c
 15715  01250A  D02F               	goto	l9962
 15716  01250C                     l9952:
 15717                           
 15718                           ;stkvar	_temp @ sp[(-13)+8]
 15719                           ;stkvar	_bexp @ sp[(-13)+10]
 15720  01250C  0EFB               	movlw	-5
 15721  01250E  006F FF8C  F032    	movff	plusw1,btemp
 15722  012514  0EFD               	movlw	-3
 15723  012516  0060  F0CB  FFE3   	movff	btemp,plusw1
 15724                           
 15725                           ;stkvar	_prod @ sp[(-13)+0]
 15726  01251C  50E1               	movf	fsr1l,w,c
 15727  01251E  0FF3               	addlw	-13
 15728  012520  6ED9               	movwf	fsr2l,c
 15729  012522  50E2               	movf	fsr1h,w,c
 15730  012524  6EDA               	movwf	fsr2h,c
 15731  012526  0EFF               	movlw	255
 15732  012528  22DA               	addwfc	fsr2h,f,c
 15733  01252A  0EFF               	movlw	255
 15734  01252C  16DE               	andwf	postinc2,f,c
 15735  01252E  0EFF               	movlw	255
 15736  012530  16DE               	andwf	postinc2,f,c
 15737  012532  0E7F               	movlw	127
 15738  012534  16DE               	andwf	postinc2,f,c
 15739  012536  0E00               	movlw	0
 15740  012538  16DE               	andwf	postinc2,f,c
 15741                           
 15742                           ;stkvar	_bexp @ sp[(-13)+10]
 15743  01253A  0EFD               	movlw	-3
 15744  01253C  A0E3               	btfss	plusw1,0,c
 15745  01253E  D008               	goto	l9960
 15746                           
 15747                           ;stkvar	_prod @ sp[(-13)+0]
 15748  012540  0EF5               	movlw	245
 15749  012542  24E1               	addwf	fsr1l,w,c
 15750  012544  6ED9               	movwf	fsr2l,c
 15751  012546  0EFF               	movlw	255
 15752  012548  20E2               	addwfc	fsr1h,w,c
 15753  01254A  6EDA               	movwf	fsr2h,c
 15754  01254C  0E00               	movlw	0
 15755  01254E  8EDB               	bsf	plusw2,7,c
 15756  012550                     l9960:
 15757                           
 15758                           ;stkvar	_prod @ sp[(-13)+0]
 15759  012550  0EF6               	movlw	246
 15760  012552  24E1               	addwf	fsr1l,w,c
 15761  012554  6ED9               	movwf	fsr2l,c
 15762  012556  0EFF               	movlw	255
 15763  012558  20E2               	addwfc	fsr1h,w,c
 15764  01255A  6EDA               	movwf	fsr2h,c
 15765                           
 15766                           ;stkvar	_bexp @ sp[(-13)+10]
 15767  01255C  0EFD               	movlw	-3
 15768  01255E  006F FF8C  F03D    	movff	plusw1,btemp+11
 15769  012564  90D8               	bcf	status,0,c
 15770  012566  303D               	rrcf	(btemp+11)^0,w,c
 15771  012568  6EDF               	movwf	indf2,c
 15772  01256A                     l9962:
 15773                           
 15774                           ;stkvar	_sign @ sp[(-13)+12]
 15775  01256A  0EFF               	movlw	-1
 15776  01256C  006F FF8C  F03D    	movff	plusw1,btemp+11
 15777                           
 15778                           ;stkvar	_prod @ sp[(-13)+0]
 15779  012572  0EF6               	movlw	246
 15780  012574  24E1               	addwf	fsr1l,w,c
 15781  012576  6ED9               	movwf	fsr2l,c
 15782  012578  0EFF               	movlw	255
 15783  01257A  20E2               	addwfc	fsr1h,w,c
 15784  01257C  6EDA               	movwf	fsr2h,c
 15785  01257E  503D               	movf	(btemp+11)^0,w,c
 15786  012580  12DF               	iorwf	indf2,f,c
 15787                           
 15788                           ;stkvar	_prod @ sp[(-13)+0]
 15789  012582  0EF3               	movlw	-13
 15790  012584  006F FF8C  F032    	movff	plusw1,btemp
 15791  01258A  0EF4               	movlw	-12
 15792  01258C  006F FF8C  F033    	movff	plusw1,btemp+1
 15793  012592  0EF5               	movlw	-11
 15794  012594  006F FF8C  F034    	movff	plusw1,btemp+2
 15795  01259A  0EF6               	movlw	-10
 15796  01259C  006F FF8C  F035    	movff	plusw1,btemp+3
 15797  0125A2                     l2655:
 15798                           
 15799                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 15800  0125A2  0EEB               	movlw	235
 15801  0125A4  26E1               	addwf	fsr1l,f,c
 15802  0125A6  0EFF               	movlw	255
 15803  0125A8  22E2               	addwfc	fsr1h,f,c
 15804  0125AA  0012               	return		;funcret
 15805  0125AC                     __end_of___flmul:
 15806                           	opt callstack 0
 15807                           
 15808 ;; *************** function ___flge *****************
 15809 ;; Defined at:
 15810 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 15811 ;; Parameters:    Size  Location     Type
 15812 ;;  ff1             4  [STACK] unsigned char 
 15813 ;;  ff2             4  [STACK] unsigned char 
 15814 ;; Auto vars:     Size  Location     Type
 15815 ;;		None
 15816 ;; Return value:  Size  Location     Type
 15817 ;;		None               void
 15818 ;; Registers used:
 15819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15820 ;; Tracked objects:
 15821 ;;		On entry : 0/5
 15822 ;;		On exit  : 0/0
 15823 ;;		Unchanged: 0/0
 15824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15829 ;;Total ram usage:        0 bytes
 15830 ;; Hardware stack levels used:    1
 15831 ;; Hardware stack levels required when called:    6
 15832 ;; This function calls:
 15833 ;;		Nothing
 15834 ;; This function is called by:
 15835 ;;		_efgtoa
 15836 ;; This function uses a reentrant model
 15837 ;;
 15838                           
 15839                           	psect	text54
 15840  015EB8                     __ptext54:
 15841                           	opt callstack 0
 15842  015EB8                     ___flge:
 15843                           	opt callstack 17
 15844                           
 15845                           ;stkvar	_ff1 @ sp[(0)+-4]
 15846                           
 15847                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15848                           ;incstack = 0
 15849  015EB8  50E1               	movf	fsr1l,w,c
 15850  015EBA  0FFC               	addlw	-4
 15851  015EBC  6ED9               	movwf	fsr2l,c
 15852  015EBE  50E2               	movf	fsr1h,w,c
 15853  015EC0  6EDA               	movwf	fsr2h,c
 15854  015EC2  0EFF               	movlw	255
 15855  015EC4  22DA               	addwfc	fsr2h,f,c
 15856  015EC6  0E00               	movlw	0
 15857  015EC8  14DE               	andwf	postinc2,w,c
 15858  015ECA  6E3A               	movwf	(btemp+8)^0,c
 15859  015ECC  0E00               	movlw	0
 15860  015ECE  14DE               	andwf	postinc2,w,c
 15861  015ED0  6E3B               	movwf	(btemp+9)^0,c
 15862  015ED2  0E80               	movlw	128
 15863  015ED4  14DE               	andwf	postinc2,w,c
 15864  015ED6  6E3C               	movwf	(btemp+10)^0,c
 15865  015ED8  0E7F               	movlw	127
 15866  015EDA  14DE               	andwf	postinc2,w,c
 15867  015EDC  6E3D               	movwf	(btemp+11)^0,c
 15868  015EDE  503A               	movf	(btemp+8)^0,w,c
 15869  015EE0  103B               	iorwf	(btemp+9)^0,w,c
 15870  015EE2  103C               	iorwf	(btemp+10)^0,w,c
 15871  015EE4  103D               	iorwf	(btemp+11)^0,w,c
 15872  015EE6  A4D8               	btfss	status,2,c
 15873  015EE8  D008               	goto	l10078
 15874                           
 15875                           ;stkvar	_ff1 @ sp[(0)+-4]
 15876  015EEA  0EFC               	movlw	-4
 15877  015EEC  6AE3               	clrf	plusw1,c
 15878  015EEE  0EFD               	movlw	-3
 15879  015EF0  6AE3               	clrf	plusw1,c
 15880  015EF2  0EFE               	movlw	-2
 15881  015EF4  6AE3               	clrf	plusw1,c
 15882  015EF6  0EFF               	movlw	-1
 15883  015EF8  6AE3               	clrf	plusw1,c
 15884  015EFA                     l10078:
 15885                           
 15886                           ;stkvar	_ff2 @ sp[(0)+-8]
 15887  015EFA  50E1               	movf	fsr1l,w,c
 15888  015EFC  0FF8               	addlw	-8
 15889  015EFE  6ED9               	movwf	fsr2l,c
 15890  015F00  50E2               	movf	fsr1h,w,c
 15891  015F02  6EDA               	movwf	fsr2h,c
 15892  015F04  0EFF               	movlw	255
 15893  015F06  22DA               	addwfc	fsr2h,f,c
 15894  015F08  0E00               	movlw	0
 15895  015F0A  14DE               	andwf	postinc2,w,c
 15896  015F0C  6E3A               	movwf	(btemp+8)^0,c
 15897  015F0E  0E00               	movlw	0
 15898  015F10  14DE               	andwf	postinc2,w,c
 15899  015F12  6E3B               	movwf	(btemp+9)^0,c
 15900  015F14  0E80               	movlw	128
 15901  015F16  14DE               	andwf	postinc2,w,c
 15902  015F18  6E3C               	movwf	(btemp+10)^0,c
 15903  015F1A  0E7F               	movlw	127
 15904  015F1C  14DE               	andwf	postinc2,w,c
 15905  015F1E  6E3D               	movwf	(btemp+11)^0,c
 15906  015F20  503A               	movf	(btemp+8)^0,w,c
 15907  015F22  103B               	iorwf	(btemp+9)^0,w,c
 15908  015F24  103C               	iorwf	(btemp+10)^0,w,c
 15909  015F26  103D               	iorwf	(btemp+11)^0,w,c
 15910  015F28  A4D8               	btfss	status,2,c
 15911  015F2A  D008               	goto	l2300
 15912                           
 15913                           ;stkvar	_ff2 @ sp[(0)+-8]
 15914  015F2C  0EF8               	movlw	-8
 15915  015F2E  6AE3               	clrf	plusw1,c
 15916  015F30  0EF9               	movlw	-7
 15917  015F32  6AE3               	clrf	plusw1,c
 15918  015F34  0EFA               	movlw	-6
 15919  015F36  6AE3               	clrf	plusw1,c
 15920  015F38  0EFB               	movlw	-5
 15921  015F3A  6AE3               	clrf	plusw1,c
 15922  015F3C                     l2300:
 15923                           
 15924                           ;stkvar	_ff1 @ sp[(0)+-4]
 15925  015F3C  0EFF               	movlw	-1
 15926  015F3E  AEE3               	btfss	plusw1,7,c
 15927  015F40  D024               	goto	l10084
 15928                           
 15929                           ;stkvar	_ff1 @ sp[(0)+-4]
 15930  015F42  0E00               	movlw	0
 15931  015F44  6E3A               	movwf	(btemp+8)^0,c
 15932  015F46  0E00               	movlw	0
 15933  015F48  6E3B               	movwf	(btemp+9)^0,c
 15934  015F4A  0E00               	movlw	0
 15935  015F4C  6E3C               	movwf	(btemp+10)^0,c
 15936  015F4E  0E80               	movlw	128
 15937  015F50  6E3D               	movwf	(btemp+11)^0,c
 15938  015F52  0EFC               	movlw	-4
 15939  015F54  50E3               	movf	plusw1,w,c
 15940  015F56  5E3A               	subwf	(btemp+8)^0,f,c
 15941  015F58  0EFD               	movlw	-3
 15942  015F5A  50E3               	movf	plusw1,w,c
 15943  015F5C  5A3B               	subwfb	(btemp+9)^0,f,c
 15944  015F5E  0EFE               	movlw	-2
 15945  015F60  50E3               	movf	plusw1,w,c
 15946  015F62  5A3C               	subwfb	(btemp+10)^0,f,c
 15947  015F64  0EFF               	movlw	-1
 15948  015F66  50E3               	movf	plusw1,w,c
 15949  015F68  5A3D               	subwfb	(btemp+11)^0,f,c
 15950                           
 15951                           ;stkvar	_ff1 @ sp[(0)+-4]
 15952  015F6A  0EFC               	movlw	-4
 15953  015F6C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15954  015F72  0EFD               	movlw	-3
 15955  015F74  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15956  015F7A  0EFE               	movlw	-2
 15957  015F7C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15958  015F82  0EFF               	movlw	-1
 15959  015F84  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15960  015F8A                     l10084:
 15961                           
 15962                           ;stkvar	_ff2 @ sp[(0)+-8]
 15963  015F8A  0EFB               	movlw	-5
 15964  015F8C  AEE3               	btfss	plusw1,7,c
 15965  015F8E  D024               	goto	l10088
 15966                           
 15967                           ;stkvar	_ff2 @ sp[(0)+-8]
 15968  015F90  0E00               	movlw	0
 15969  015F92  6E3A               	movwf	(btemp+8)^0,c
 15970  015F94  0E00               	movlw	0
 15971  015F96  6E3B               	movwf	(btemp+9)^0,c
 15972  015F98  0E00               	movlw	0
 15973  015F9A  6E3C               	movwf	(btemp+10)^0,c
 15974  015F9C  0E80               	movlw	128
 15975  015F9E  6E3D               	movwf	(btemp+11)^0,c
 15976  015FA0  0EF8               	movlw	-8
 15977  015FA2  50E3               	movf	plusw1,w,c
 15978  015FA4  5E3A               	subwf	(btemp+8)^0,f,c
 15979  015FA6  0EF9               	movlw	-7
 15980  015FA8  50E3               	movf	plusw1,w,c
 15981  015FAA  5A3B               	subwfb	(btemp+9)^0,f,c
 15982  015FAC  0EFA               	movlw	-6
 15983  015FAE  50E3               	movf	plusw1,w,c
 15984  015FB0  5A3C               	subwfb	(btemp+10)^0,f,c
 15985  015FB2  0EFB               	movlw	-5
 15986  015FB4  50E3               	movf	plusw1,w,c
 15987  015FB6  5A3D               	subwfb	(btemp+11)^0,f,c
 15988                           
 15989                           ;stkvar	_ff2 @ sp[(0)+-8]
 15990  015FB8  0EF8               	movlw	-8
 15991  015FBA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15992  015FC0  0EF9               	movlw	-7
 15993  015FC2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15994  015FC8  0EFA               	movlw	-6
 15995  015FCA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15996  015FD0  0EFB               	movlw	-5
 15997  015FD2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15998  015FD8                     l10088:
 15999                           
 16000                           ;stkvar	_ff1 @ sp[(0)+-4]
 16001  015FD8  0EFF               	movlw	-1
 16002  015FDA  7EE3               	btg	plusw1,7,c
 16003                           
 16004                           ;stkvar	_ff2 @ sp[(0)+-8]
 16005  015FDC  0EFB               	movlw	-5
 16006  015FDE  7EE3               	btg	plusw1,7,c
 16007                           
 16008                           ;stkvar	_ff2 @ sp[(0)+-8]
 16009                           ;stkvar	_ff1 @ sp[(0)+-4]
 16010  015FE0  50E1               	movf	fsr1l,w,c
 16011  015FE2  0FFC               	addlw	-4
 16012  015FE4  6ED9               	movwf	fsr2l,c
 16013  015FE6  50E2               	movf	fsr1h,w,c
 16014  015FE8  6EDA               	movwf	fsr2h,c
 16015  015FEA  0EFF               	movlw	255
 16016  015FEC  22DA               	addwfc	fsr2h,f,c
 16017  015FEE  0EF8               	movlw	-8
 16018  015FF0  50E3               	movf	plusw1,w,c
 16019  015FF2  5CDE               	subwf	postinc2,w,c
 16020  015FF4  0EF9               	movlw	-7
 16021  015FF6  50E3               	movf	plusw1,w,c
 16022  015FF8  58DE               	subwfb	postinc2,w,c
 16023  015FFA  0EFA               	movlw	-6
 16024  015FFC  50E3               	movf	plusw1,w,c
 16025  015FFE  58DE               	subwfb	postinc2,w,c
 16026  016000  0EFB               	movlw	-5
 16027  016002  50E3               	movf	plusw1,w,c
 16028  016004  58DE               	subwfb	postinc2,w,c
 16029  016006  B0D8               	btfsc	status,0,c
 16030  016008  D002               	goto	l10096
 16031  01600A  9032               	bcf	btemp& (0+255),0,c
 16032  01600C  D001               	goto	l2307
 16033  01600E                     l10096:
 16034  01600E  8032               	bsf	btemp& (0+255),0,c
 16035  016010                     l2307:
 16036                           
 16037                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 16038  016010  0EF8               	movlw	248
 16039  016012  26E1               	addwf	fsr1l,f,c
 16040  016014  0EFF               	movlw	255
 16041  016016  22E2               	addwfc	fsr1h,f,c
 16042  016018  0012               	return		;funcret
 16043  01601A                     __end_of___flge:
 16044                           	opt callstack 0
 16045                           
 16046 ;; *************** function ___fleq *****************
 16047 ;; Defined at:
 16048 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 16049 ;; Parameters:    Size  Location     Type
 16050 ;;  ff1             4  [STACK] unsigned char 
 16051 ;;  ff2             4  [STACK] unsigned char 
 16052 ;; Auto vars:     Size  Location     Type
 16053 ;;		None
 16054 ;; Return value:  Size  Location     Type
 16055 ;;		None               void
 16056 ;; Registers used:
 16057 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 16058 ;; Tracked objects:
 16059 ;;		On entry : 0/5
 16060 ;;		On exit  : 0/0
 16061 ;;		Unchanged: 0/0
 16062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16067 ;;Total ram usage:        0 bytes
 16068 ;; Hardware stack levels used:    1
 16069 ;; Hardware stack levels required when called:    6
 16070 ;; This function calls:
 16071 ;;		Nothing
 16072 ;; This function is called by:
 16073 ;;		_efgtoa
 16074 ;; This function uses a reentrant model
 16075 ;;
 16076                           
 16077                           	psect	text55
 16078  016BF8                     __ptext55:
 16079                           	opt callstack 0
 16080  016BF8                     ___fleq:
 16081                           	opt callstack 17
 16082                           
 16083                           ;stkvar	_ff1 @ sp[(0)+-4]
 16084                           
 16085                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16086                           ;incstack = 0
 16087  016BF8  50E1               	movf	fsr1l,w,c
 16088  016BFA  0FFC               	addlw	-4
 16089  016BFC  6ED9               	movwf	fsr2l,c
 16090  016BFE  50E2               	movf	fsr1h,w,c
 16091  016C00  6EDA               	movwf	fsr2h,c
 16092  016C02  0EFF               	movlw	255
 16093  016C04  22DA               	addwfc	fsr2h,f,c
 16094  016C06  0E00               	movlw	0
 16095  016C08  14DE               	andwf	postinc2,w,c
 16096  016C0A  6E3A               	movwf	(btemp+8)^0,c
 16097  016C0C  0E00               	movlw	0
 16098  016C0E  14DE               	andwf	postinc2,w,c
 16099  016C10  6E3B               	movwf	(btemp+9)^0,c
 16100  016C12  0E80               	movlw	128
 16101  016C14  14DE               	andwf	postinc2,w,c
 16102  016C16  6E3C               	movwf	(btemp+10)^0,c
 16103  016C18  0E7F               	movlw	127
 16104  016C1A  14DE               	andwf	postinc2,w,c
 16105  016C1C  6E3D               	movwf	(btemp+11)^0,c
 16106  016C1E  503A               	movf	(btemp+8)^0,w,c
 16107  016C20  103B               	iorwf	(btemp+9)^0,w,c
 16108  016C22  103C               	iorwf	(btemp+10)^0,w,c
 16109  016C24  103D               	iorwf	(btemp+11)^0,w,c
 16110  016C26  A4D8               	btfss	status,2,c
 16111  016C28  D008               	goto	l10062
 16112                           
 16113                           ;stkvar	_ff1 @ sp[(0)+-4]
 16114  016C2A  0EFC               	movlw	-4
 16115  016C2C  6AE3               	clrf	plusw1,c
 16116  016C2E  0EFD               	movlw	-3
 16117  016C30  6AE3               	clrf	plusw1,c
 16118  016C32  0EFE               	movlw	-2
 16119  016C34  6AE3               	clrf	plusw1,c
 16120  016C36  0EFF               	movlw	-1
 16121  016C38  6AE3               	clrf	plusw1,c
 16122  016C3A                     l10062:
 16123                           
 16124                           ;stkvar	_ff2 @ sp[(0)+-8]
 16125  016C3A  50E1               	movf	fsr1l,w,c
 16126  016C3C  0FF8               	addlw	-8
 16127  016C3E  6ED9               	movwf	fsr2l,c
 16128  016C40  50E2               	movf	fsr1h,w,c
 16129  016C42  6EDA               	movwf	fsr2h,c
 16130  016C44  0EFF               	movlw	255
 16131  016C46  22DA               	addwfc	fsr2h,f,c
 16132  016C48  0E00               	movlw	0
 16133  016C4A  14DE               	andwf	postinc2,w,c
 16134  016C4C  6E3A               	movwf	(btemp+8)^0,c
 16135  016C4E  0E00               	movlw	0
 16136  016C50  14DE               	andwf	postinc2,w,c
 16137  016C52  6E3B               	movwf	(btemp+9)^0,c
 16138  016C54  0E80               	movlw	128
 16139  016C56  14DE               	andwf	postinc2,w,c
 16140  016C58  6E3C               	movwf	(btemp+10)^0,c
 16141  016C5A  0E7F               	movlw	127
 16142  016C5C  14DE               	andwf	postinc2,w,c
 16143  016C5E  6E3D               	movwf	(btemp+11)^0,c
 16144  016C60  503A               	movf	(btemp+8)^0,w,c
 16145  016C62  103B               	iorwf	(btemp+9)^0,w,c
 16146  016C64  103C               	iorwf	(btemp+10)^0,w,c
 16147  016C66  103D               	iorwf	(btemp+11)^0,w,c
 16148  016C68  A4D8               	btfss	status,2,c
 16149  016C6A  D008               	goto	l10066
 16150                           
 16151                           ;stkvar	_ff2 @ sp[(0)+-8]
 16152  016C6C  0EF8               	movlw	-8
 16153  016C6E  6AE3               	clrf	plusw1,c
 16154  016C70  0EF9               	movlw	-7
 16155  016C72  6AE3               	clrf	plusw1,c
 16156  016C74  0EFA               	movlw	-6
 16157  016C76  6AE3               	clrf	plusw1,c
 16158  016C78  0EFB               	movlw	-5
 16159  016C7A  6AE3               	clrf	plusw1,c
 16160  016C7C                     l10066:
 16161                           
 16162                           ;stkvar	_ff2 @ sp[(0)+-8]
 16163                           ;stkvar	_ff1 @ sp[(0)+-4]
 16164  016C7C  50E1               	movf	fsr1l,w,c
 16165  016C7E  0FFC               	addlw	-4
 16166  016C80  6ED9               	movwf	fsr2l,c
 16167  016C82  50E2               	movf	fsr1h,w,c
 16168  016C84  6EDA               	movwf	fsr2h,c
 16169  016C86  0EFF               	movlw	255
 16170  016C88  22DA               	addwfc	fsr2h,f,c
 16171  016C8A  0EF8               	movlw	-8
 16172  016C8C  50E3               	movf	plusw1,w,c
 16173  016C8E  18DE               	xorwf	postinc2,w,c
 16174  016C90  E10D               	bnz	u10460
 16175  016C92  0EF9               	movlw	-7
 16176  016C94  50E3               	movf	plusw1,w,c
 16177  016C96  18DE               	xorwf	postinc2,w,c
 16178  016C98  E109               	bnz	u10460
 16179  016C9A  0EFA               	movlw	-6
 16180  016C9C  50E3               	movf	plusw1,w,c
 16181  016C9E  18DE               	xorwf	postinc2,w,c
 16182  016CA0  E105               	bnz	u10460
 16183  016CA2  0EFB               	movlw	-5
 16184  016CA4  50E3               	movf	plusw1,w,c
 16185  016CA6  18DE               	xorwf	postinc2,w,c
 16186  016CA8  B4D8               	btfsc	status,2,c
 16187  016CAA  D002               	goto	l10070
 16188  016CAC                     u10460:
 16189  016CAC  9032               	bcf	btemp& (0+255),0,c
 16190  016CAE  D001               	goto	l2296
 16191  016CB0                     l10070:
 16192  016CB0  8032               	bsf	btemp& (0+255),0,c
 16193  016CB2                     l2296:
 16194                           
 16195                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 16196  016CB2  0EF8               	movlw	248
 16197  016CB4  26E1               	addwf	fsr1l,f,c
 16198  016CB6  0EFF               	movlw	255
 16199  016CB8  22E2               	addwfc	fsr1h,f,c
 16200  016CBA  0012               	return		;funcret
 16201  016CBC                     __end_of___fleq:
 16202                           	opt callstack 0
 16203                           
 16204 ;; *************** function ___fldiv *****************
 16205 ;; Defined at:
 16206 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 16207 ;; Parameters:    Size  Location     Type
 16208 ;;  b               4  [STACK] unsigned char 
 16209 ;;  a               4  [STACK] unsigned char 
 16210 ;; Auto vars:     Size  Location     Type
 16211 ;;  grs             4  [STACK] unsigned long 
 16212 ;;  rem             4  [STACK] unsigned long 
 16213 ;;  new_exp         2  [STACK] short 
 16214 ;;  aexp            1  [STACK] unsigned char 
 16215 ;;  bexp            1  [STACK] unsigned char 
 16216 ;;  sign            1  [STACK] unsigned char 
 16217 ;; Return value:  Size  Location     Type
 16218 ;;                  4  [STACK] unsigned char 
 16219 ;; Registers used:
 16220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 16221 ;; Tracked objects:
 16222 ;;		On entry : 0/39
 16223 ;;		On exit  : 0/0
 16224 ;;		Unchanged: 0/0
 16225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16230 ;;Total ram usage:        0 bytes
 16231 ;; Hardware stack levels used:    1
 16232 ;; Hardware stack levels required when called:    6
 16233 ;; This function calls:
 16234 ;;		Nothing
 16235 ;; This function is called by:
 16236 ;;		_conv_raw_result
 16237 ;;		_efgtoa
 16238 ;; This function uses a reentrant model
 16239 ;;
 16240                           
 16241                           	psect	text56
 16242  012D68                     __ptext56:
 16243                           	opt callstack 0
 16244  012D68                     ___fldiv:
 16245                           	opt callstack 0
 16246                           
 16247                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16248  012D68  0E0D               	movlw	13
 16249  012D6A  26E1               	addwf	fsr1l,f,c
 16250  012D6C  0E00               	movlw	0
 16251  012D6E  22E2               	addwfc	fsr1h,f,c
 16252                           
 16253                           ;stkvar	_b @ sp[(-13)+-4]
 16254                           
 16255                           ;incstack = 0
 16256  012D70  0EF2               	movlw	242
 16257  012D72  24E1               	addwf	fsr1l,w,c
 16258  012D74  6ED9               	movwf	fsr2l,c
 16259  012D76  0EFF               	movlw	255
 16260  012D78  20E2               	addwfc	fsr1h,w,c
 16261  012D7A  6EDA               	movwf	fsr2h,c
 16262  012D7C  50DF               	movf	indf2,w,c
 16263  012D7E  6E3D               	movwf	(btemp+11)^0,c
 16264  012D80  0E80               	movlw	128
 16265  012D82  163D               	andwf	(btemp+11)^0,f,c
 16266                           
 16267                           ;stkvar	_sign @ sp[(-13)+12]
 16268  012D84  0EFF               	movlw	-1
 16269  012D86  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16270                           
 16271                           ;stkvar	_b @ sp[(-13)+-4]
 16272  012D8C  0EF2               	movlw	242
 16273  012D8E  24E1               	addwf	fsr1l,w,c
 16274  012D90  6ED9               	movwf	fsr2l,c
 16275  012D92  0EFF               	movlw	255
 16276  012D94  20E2               	addwfc	fsr1h,w,c
 16277  012D96  6EDA               	movwf	fsr2h,c
 16278  012D98  50DF               	movf	indf2,w,c
 16279  012D9A  6E3D               	movwf	(btemp+11)^0,c
 16280  012D9C  90D8               	bcf	status,0,c
 16281  012D9E  343D               	rlcf	(btemp+11)^0,w,c
 16282  012DA0  6E3C               	movwf	(btemp+10)^0,c
 16283                           
 16284                           ;stkvar	_bexp @ sp[(-13)+11]
 16285  012DA2  0EFE               	movlw	-2
 16286  012DA4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16287                           
 16288                           ;stkvar	_b @ sp[(-13)+-4]
 16289  012DAA  0EF1               	movlw	241
 16290  012DAC  24E1               	addwf	fsr1l,w,c
 16291  012DAE  6ED9               	movwf	fsr2l,c
 16292  012DB0  0EFF               	movlw	255
 16293  012DB2  20E2               	addwfc	fsr1h,w,c
 16294  012DB4  6EDA               	movwf	fsr2h,c
 16295  012DB6  AEDF               	btfss	indf2,7,c
 16296  012DB8  D002               	goto	l9664
 16297                           
 16298                           ;stkvar	_bexp @ sp[(-13)+11]
 16299  012DBA  0EFE               	movlw	-2
 16300  012DBC  80E3               	bsf	plusw1,0,c
 16301  012DBE                     l9664:
 16302                           
 16303                           ;stkvar	_bexp @ sp[(-13)+11]
 16304  012DBE  0EFE               	movlw	-2
 16305  012DC0  50E3               	movf	plusw1,w,c
 16306  012DC2  B4D8               	btfsc	status,2,c
 16307  012DC4  D027               	goto	l9674
 16308                           
 16309                           ;stkvar	_bexp @ sp[(-13)+11]
 16310  012DC6  0EFE               	movlw	-2
 16311  012DC8  28E3               	incf	plusw1,w,c
 16312  012DCA  A4D8               	btfss	status,2,c
 16313  012DCC  D018               	goto	l9670
 16314  012DCE  0E00               	movlw	0
 16315  012DD0  6E3A               	movwf	(btemp+8)^0,c
 16316  012DD2  0E00               	movlw	0
 16317  012DD4  6E3B               	movwf	(btemp+9)^0,c
 16318  012DD6  0E00               	movlw	0
 16319  012DD8  6E3C               	movwf	(btemp+10)^0,c
 16320  012DDA  0E00               	movlw	0
 16321  012DDC  6E3D               	movwf	(btemp+11)^0,c
 16322                           
 16323                           ;stkvar	_b @ sp[(-13)+-4]
 16324  012DDE  0EEF               	movlw	-17
 16325  012DE0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16326  012DE6  0EF0               	movlw	-16
 16327  012DE8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16328  012DEE  0EF1               	movlw	-15
 16329  012DF0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16330  012DF6  0EF2               	movlw	-14
 16331  012DF8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16332  012DFE                     l9670:
 16333                           
 16334                           ;stkvar	_b @ sp[(-13)+-4]
 16335  012DFE  0EF1               	movlw	-15
 16336  012E00  8EE3               	bsf	plusw1,7,c
 16337                           
 16338                           ;stkvar	_b @ sp[(-13)+-4]
 16339  012E02  0EF2               	movlw	242
 16340  012E04  24E1               	addwf	fsr1l,w,c
 16341  012E06  6ED9               	movwf	fsr2l,c
 16342  012E08  0EFF               	movlw	255
 16343  012E0A  20E2               	addwfc	fsr1h,w,c
 16344  012E0C  6EDA               	movwf	fsr2h,c
 16345  012E0E  0E00               	movlw	0
 16346  012E10  6EDF               	movwf	indf2,c
 16347  012E12  D018               	goto	l9676
 16348  012E14                     l9674:
 16349  012E14  0E00               	movlw	0
 16350  012E16  6E3A               	movwf	(btemp+8)^0,c
 16351  012E18  0E00               	movlw	0
 16352  012E1A  6E3B               	movwf	(btemp+9)^0,c
 16353  012E1C  0E00               	movlw	0
 16354  012E1E  6E3C               	movwf	(btemp+10)^0,c
 16355  012E20  0E00               	movlw	0
 16356  012E22  6E3D               	movwf	(btemp+11)^0,c
 16357                           
 16358                           ;stkvar	_b @ sp[(-13)+-4]
 16359  012E24  0EEF               	movlw	-17
 16360  012E26  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16361  012E2C  0EF0               	movlw	-16
 16362  012E2E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16363  012E34  0EF1               	movlw	-15
 16364  012E36  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16365  012E3C  0EF2               	movlw	-14
 16366  012E3E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16367  012E44                     l9676:
 16368                           
 16369                           ;stkvar	_a @ sp[(-13)+-8]
 16370  012E44  0EEE               	movlw	238
 16371  012E46  24E1               	addwf	fsr1l,w,c
 16372  012E48  6ED9               	movwf	fsr2l,c
 16373  012E4A  0EFF               	movlw	255
 16374  012E4C  20E2               	addwfc	fsr1h,w,c
 16375  012E4E  6EDA               	movwf	fsr2h,c
 16376  012E50  50DF               	movf	indf2,w,c
 16377  012E52  6E3D               	movwf	(btemp+11)^0,c
 16378  012E54  0E80               	movlw	128
 16379  012E56  163D               	andwf	(btemp+11)^0,f,c
 16380                           
 16381                           ;stkvar	_sign @ sp[(-13)+12]
 16382  012E58  50E1               	movf	fsr1l,w,c
 16383  012E5A  0FFF               	addlw	-1
 16384  012E5C  6ED9               	movwf	fsr2l,c
 16385  012E5E  50E2               	movf	fsr1h,w,c
 16386  012E60  6EDA               	movwf	fsr2h,c
 16387  012E62  0EFF               	movlw	255
 16388  012E64  22DA               	addwfc	fsr2h,f,c
 16389  012E66  503D               	movf	(btemp+11)^0,w,c
 16390  012E68  1ADF               	xorwf	indf2,f,c
 16391                           
 16392                           ;stkvar	_a @ sp[(-13)+-8]
 16393  012E6A  0EEE               	movlw	238
 16394  012E6C  24E1               	addwf	fsr1l,w,c
 16395  012E6E  6ED9               	movwf	fsr2l,c
 16396  012E70  0EFF               	movlw	255
 16397  012E72  20E2               	addwfc	fsr1h,w,c
 16398  012E74  6EDA               	movwf	fsr2h,c
 16399  012E76  50DF               	movf	indf2,w,c
 16400  012E78  6E3D               	movwf	(btemp+11)^0,c
 16401  012E7A  90D8               	bcf	status,0,c
 16402  012E7C  343D               	rlcf	(btemp+11)^0,w,c
 16403  012E7E  6E3C               	movwf	(btemp+10)^0,c
 16404                           
 16405                           ;stkvar	_aexp @ sp[(-13)+10]
 16406  012E80  0EFD               	movlw	-3
 16407  012E82  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16408                           
 16409                           ;stkvar	_a @ sp[(-13)+-8]
 16410  012E88  0EED               	movlw	237
 16411  012E8A  24E1               	addwf	fsr1l,w,c
 16412  012E8C  6ED9               	movwf	fsr2l,c
 16413  012E8E  0EFF               	movlw	255
 16414  012E90  20E2               	addwfc	fsr1h,w,c
 16415  012E92  6EDA               	movwf	fsr2h,c
 16416  012E94  AEDF               	btfss	indf2,7,c
 16417  012E96  D002               	goto	l9684
 16418                           
 16419                           ;stkvar	_aexp @ sp[(-13)+10]
 16420  012E98  0EFD               	movlw	-3
 16421  012E9A  80E3               	bsf	plusw1,0,c
 16422  012E9C                     l9684:
 16423                           
 16424                           ;stkvar	_aexp @ sp[(-13)+10]
 16425  012E9C  0EFD               	movlw	-3
 16426  012E9E  50E3               	movf	plusw1,w,c
 16427  012EA0  B4D8               	btfsc	status,2,c
 16428  012EA2  D027               	goto	l9694
 16429                           
 16430                           ;stkvar	_aexp @ sp[(-13)+10]
 16431  012EA4  0EFD               	movlw	-3
 16432  012EA6  28E3               	incf	plusw1,w,c
 16433  012EA8  A4D8               	btfss	status,2,c
 16434  012EAA  D018               	goto	l9690
 16435  012EAC  0E00               	movlw	0
 16436  012EAE  6E3A               	movwf	(btemp+8)^0,c
 16437  012EB0  0E00               	movlw	0
 16438  012EB2  6E3B               	movwf	(btemp+9)^0,c
 16439  012EB4  0E00               	movlw	0
 16440  012EB6  6E3C               	movwf	(btemp+10)^0,c
 16441  012EB8  0E00               	movlw	0
 16442  012EBA  6E3D               	movwf	(btemp+11)^0,c
 16443                           
 16444                           ;stkvar	_a @ sp[(-13)+-8]
 16445  012EBC  0EEB               	movlw	-21
 16446  012EBE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16447  012EC4  0EEC               	movlw	-20
 16448  012EC6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16449  012ECC  0EED               	movlw	-19
 16450  012ECE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16451  012ED4  0EEE               	movlw	-18
 16452  012ED6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16453  012EDC                     l9690:
 16454                           
 16455                           ;stkvar	_a @ sp[(-13)+-8]
 16456  012EDC  0EED               	movlw	-19
 16457  012EDE  8EE3               	bsf	plusw1,7,c
 16458                           
 16459                           ;stkvar	_a @ sp[(-13)+-8]
 16460  012EE0  0EEE               	movlw	238
 16461  012EE2  24E1               	addwf	fsr1l,w,c
 16462  012EE4  6ED9               	movwf	fsr2l,c
 16463  012EE6  0EFF               	movlw	255
 16464  012EE8  20E2               	addwfc	fsr1h,w,c
 16465  012EEA  6EDA               	movwf	fsr2h,c
 16466  012EEC  0E00               	movlw	0
 16467  012EEE  6EDF               	movwf	indf2,c
 16468  012EF0  D018               	goto	l9696
 16469  012EF2                     l9694:
 16470  012EF2  0E00               	movlw	0
 16471  012EF4  6E3A               	movwf	(btemp+8)^0,c
 16472  012EF6  0E00               	movlw	0
 16473  012EF8  6E3B               	movwf	(btemp+9)^0,c
 16474  012EFA  0E00               	movlw	0
 16475  012EFC  6E3C               	movwf	(btemp+10)^0,c
 16476  012EFE  0E00               	movlw	0
 16477  012F00  6E3D               	movwf	(btemp+11)^0,c
 16478                           
 16479                           ;stkvar	_a @ sp[(-13)+-8]
 16480  012F02  0EEB               	movlw	-21
 16481  012F04  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16482  012F0A  0EEC               	movlw	-20
 16483  012F0C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16484  012F12  0EED               	movlw	-19
 16485  012F14  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16486  012F1A  0EEE               	movlw	-18
 16487  012F1C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16488  012F22                     l9696:
 16489                           
 16490                           ;stkvar	_a @ sp[(-13)+-8]
 16491  012F22  0EEB               	movlw	-21
 16492  012F24  50E3               	movf	plusw1,w,c
 16493  012F26  E139               	bnz	l9708
 16494  012F28  0EEC               	movlw	-20
 16495  012F2A  50E3               	movf	plusw1,w,c
 16496  012F2C  E136               	bnz	l9708
 16497  012F2E  0EED               	movlw	-19
 16498  012F30  50E3               	movf	plusw1,w,c
 16499  012F32  E133               	bnz	l9708
 16500  012F34  0EEE               	movlw	-18
 16501  012F36  50E3               	movf	plusw1,w,c
 16502  012F38  A4D8               	btfss	status,2,c
 16503  012F3A  D02F               	goto	l9708
 16504                           
 16505                           ;stkvar	_b @ sp[(-13)+-4]
 16506  012F3C  0EEF               	movlw	-17
 16507  012F3E  6AE3               	clrf	plusw1,c
 16508  012F40  0EF0               	movlw	-16
 16509  012F42  6AE3               	clrf	plusw1,c
 16510  012F44  0EF1               	movlw	-15
 16511  012F46  6AE3               	clrf	plusw1,c
 16512  012F48  0EF2               	movlw	-14
 16513  012F4A  6AE3               	clrf	plusw1,c
 16514                           
 16515                           ;stkvar	_b @ sp[(-13)+-4]
 16516  012F4C  0EF1               	movlw	241
 16517  012F4E  24E1               	addwf	fsr1l,w,c
 16518  012F50  6ED9               	movwf	fsr2l,c
 16519  012F52  0EFF               	movlw	255
 16520  012F54  20E2               	addwfc	fsr1h,w,c
 16521  012F56  6EDA               	movwf	fsr2h,c
 16522  012F58  0E80               	movlw	128
 16523  012F5A  12DE               	iorwf	postinc2,f,c
 16524  012F5C  0E7F               	movlw	127
 16525  012F5E  12DD               	iorwf	postdec2,f,c
 16526  012F60                     l9702:
 16527                           
 16528                           ;stkvar	_sign @ sp[(-13)+12]
 16529  012F60  0EFF               	movlw	-1
 16530  012F62  006F FF8C  F03D    	movff	plusw1,btemp+11
 16531                           
 16532                           ;stkvar	_b @ sp[(-13)+-4]
 16533  012F68  0EF2               	movlw	242
 16534  012F6A  24E1               	addwf	fsr1l,w,c
 16535  012F6C  6ED9               	movwf	fsr2l,c
 16536  012F6E  0EFF               	movlw	255
 16537  012F70  20E2               	addwfc	fsr1h,w,c
 16538  012F72  6EDA               	movwf	fsr2h,c
 16539  012F74  503D               	movf	(btemp+11)^0,w,c
 16540  012F76  12DF               	iorwf	indf2,f,c
 16541                           
 16542                           ;stkvar	_b @ sp[(-13)+-4]
 16543  012F78  0EEF               	movlw	-17
 16544  012F7A  006F FF8C  F032    	movff	plusw1,btemp
 16545  012F80  0EF0               	movlw	-16
 16546  012F82  006F FF8C  F033    	movff	plusw1,btemp+1
 16547  012F88  0EF1               	movlw	-15
 16548  012F8A  006F FF8C  F034    	movff	plusw1,btemp+2
 16549  012F90  0EF2               	movlw	-14
 16550  012F92  006F FF8C  F035    	movff	plusw1,btemp+3
 16551  012F98  D19F               	goto	l2619
 16552  012F9A                     l9708:
 16553                           
 16554                           ;stkvar	_bexp @ sp[(-13)+11]
 16555  012F9A  0EFE               	movlw	-2
 16556  012F9C  50E3               	movf	plusw1,w,c
 16557  012F9E  A4D8               	btfss	status,2,c
 16558  012FA0  D009               	goto	l9716
 16559  012FA2  0E00               	movlw	0
 16560  012FA4  6E32               	movwf	btemp^0,c
 16561  012FA6  0E00               	movlw	0
 16562  012FA8  6E33               	movwf	(btemp+1)^0,c
 16563  012FAA  0E00               	movlw	0
 16564  012FAC  6E34               	movwf	(btemp+2)^0,c
 16565  012FAE  0E00               	movlw	0
 16566  012FB0  6E35               	movwf	(btemp+3)^0,c
 16567  012FB2  D192               	goto	l2619
 16568  012FB4                     l9716:
 16569                           
 16570                           ;stkvar	_bexp @ sp[(-13)+11]
 16571  012FB4  0EFE               	movlw	-2
 16572  012FB6  50E3               	movf	plusw1,w,c
 16573  012FB8  6E3C               	movwf	(btemp+10)^0,c
 16574  012FBA  6A3D               	clrf	(btemp+11)^0,c
 16575                           
 16576                           ;stkvar	_aexp @ sp[(-13)+10]
 16577  012FBC  0EFD               	movlw	-3
 16578  012FBE  50E3               	movf	plusw1,w,c
 16579  012FC0  5E3C               	subwf	(btemp+10)^0,f,c
 16580  012FC2  0E00               	movlw	0
 16581  012FC4  5A3D               	subwfb	(btemp+11)^0,f,c
 16582  012FC6  0E7F               	movlw	127
 16583  012FC8  263C               	addwf	(btemp+10)^0,f,c
 16584  012FCA  0E00               	movlw	0
 16585  012FCC  223D               	addwfc	(btemp+11)^0,f,c
 16586                           
 16587                           ;stkvar	_new_exp @ sp[(-13)+8]
 16588  012FCE  0EFB               	movlw	-5
 16589  012FD0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16590  012FD6  0EFC               	movlw	-4
 16591  012FD8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16592                           
 16593                           ;stkvar	_b @ sp[(-13)+-4]
 16594  012FDE  0EEF               	movlw	-17
 16595  012FE0  006F FF8C  F03A    	movff	plusw1,btemp+8
 16596  012FE6  0EF0               	movlw	-16
 16597  012FE8  006F FF8C  F03B    	movff	plusw1,btemp+9
 16598  012FEE  0EF1               	movlw	-15
 16599  012FF0  006F FF8C  F03C    	movff	plusw1,btemp+10
 16600  012FF6  0EF2               	movlw	-14
 16601  012FF8  006F FF8C  F03D    	movff	plusw1,btemp+11
 16602                           
 16603                           ;stkvar	_rem @ sp[(-13)+4]
 16604  012FFE  0EF7               	movlw	-9
 16605  013000  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16606  013006  0EF8               	movlw	-8
 16607  013008  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16608  01300E  0EF9               	movlw	-7
 16609  013010  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16610  013016  0EFA               	movlw	-6
 16611  013018  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16612                           
 16613                           ;stkvar	_b @ sp[(-13)+-4]
 16614  01301E  0EEF               	movlw	-17
 16615  013020  6AE3               	clrf	plusw1,c
 16616  013022  0EF0               	movlw	-16
 16617  013024  6AE3               	clrf	plusw1,c
 16618  013026  0EF1               	movlw	-15
 16619  013028  6AE3               	clrf	plusw1,c
 16620  01302A  0EF2               	movlw	-14
 16621  01302C  6AE3               	clrf	plusw1,c
 16622                           
 16623                           ;stkvar	_grs @ sp[(-13)+0]
 16624  01302E  0EF3               	movlw	-13
 16625  013030  6AE3               	clrf	plusw1,c
 16626  013032  0EF4               	movlw	-12
 16627  013034  6AE3               	clrf	plusw1,c
 16628  013036  0EF5               	movlw	-11
 16629  013038  6AE3               	clrf	plusw1,c
 16630  01303A  0EF6               	movlw	-10
 16631  01303C  6AE3               	clrf	plusw1,c
 16632                           
 16633                           ;stkvar	_aexp @ sp[(-13)+10]
 16634  01303E  0EFD               	movlw	-3
 16635  013040  6AE3               	clrf	plusw1,c
 16636  013042  D050               	goto	l9744
 16637  013044                     l9726:
 16638                           
 16639                           ;stkvar	_aexp @ sp[(-13)+10]
 16640  013044  0EFD               	movlw	-3
 16641  013046  50E3               	movf	plusw1,w,c
 16642  013048  B4D8               	btfsc	status,2,c
 16643  01304A  D020               	goto	l9736
 16644                           
 16645                           ;stkvar	_rem @ sp[(-13)+4]
 16646  01304C  90D8               	bcf	status,0,c
 16647  01304E  0EF7               	movlw	-9
 16648  013050  36E3               	rlcf	plusw1,f,c
 16649  013052  0EF8               	movlw	-8
 16650  013054  36E3               	rlcf	plusw1,f,c
 16651  013056  0EF9               	movlw	-7
 16652  013058  36E3               	rlcf	plusw1,f,c
 16653  01305A  0EFA               	movlw	-6
 16654  01305C  36E3               	rlcf	plusw1,f,c
 16655                           
 16656                           ;stkvar	_b @ sp[(-13)+-4]
 16657  01305E  90D8               	bcf	status,0,c
 16658  013060  0EEF               	movlw	-17
 16659  013062  36E3               	rlcf	plusw1,f,c
 16660  013064  0EF0               	movlw	-16
 16661  013066  36E3               	rlcf	plusw1,f,c
 16662  013068  0EF1               	movlw	-15
 16663  01306A  36E3               	rlcf	plusw1,f,c
 16664  01306C  0EF2               	movlw	-14
 16665  01306E  36E3               	rlcf	plusw1,f,c
 16666                           
 16667                           ;stkvar	_grs @ sp[(-13)+0]
 16668  013070  0EF6               	movlw	-10
 16669  013072  AEE3               	btfss	plusw1,7,c
 16670  013074  D002               	goto	l9734
 16671                           
 16672                           ;stkvar	_b @ sp[(-13)+-4]
 16673  013076  0EEF               	movlw	-17
 16674  013078  80E3               	bsf	plusw1,0,c
 16675  01307A                     l9734:
 16676                           
 16677                           ;stkvar	_grs @ sp[(-13)+0]
 16678  01307A  90D8               	bcf	status,0,c
 16679  01307C  0EF3               	movlw	-13
 16680  01307E  36E3               	rlcf	plusw1,f,c
 16681  013080  0EF4               	movlw	-12
 16682  013082  36E3               	rlcf	plusw1,f,c
 16683  013084  0EF5               	movlw	-11
 16684  013086  36E3               	rlcf	plusw1,f,c
 16685  013088  0EF6               	movlw	-10
 16686  01308A  36E3               	rlcf	plusw1,f,c
 16687  01308C                     l9736:
 16688                           
 16689                           ;stkvar	_a @ sp[(-13)+-8]
 16690                           ;stkvar	_rem @ sp[(-13)+4]
 16691  01308C  50E1               	movf	fsr1l,w,c
 16692  01308E  0FF7               	addlw	-9
 16693  013090  6ED9               	movwf	fsr2l,c
 16694  013092  50E2               	movf	fsr1h,w,c
 16695  013094  6EDA               	movwf	fsr2h,c
 16696  013096  0EFF               	movlw	255
 16697  013098  22DA               	addwfc	fsr2h,f,c
 16698  01309A  0EEB               	movlw	-21
 16699  01309C  50E3               	movf	plusw1,w,c
 16700  01309E  5CDE               	subwf	postinc2,w,c
 16701  0130A0  0EEC               	movlw	-20
 16702  0130A2  50E3               	movf	plusw1,w,c
 16703  0130A4  58DE               	subwfb	postinc2,w,c
 16704  0130A6  0EED               	movlw	-19
 16705  0130A8  50E3               	movf	plusw1,w,c
 16706  0130AA  58DE               	subwfb	postinc2,w,c
 16707  0130AC  0EEE               	movlw	-18
 16708  0130AE  50E3               	movf	plusw1,w,c
 16709  0130B0  58DE               	subwfb	postinc2,w,c
 16710  0130B2  A0D8               	btfss	status,0,c
 16711  0130B4  D015               	goto	l9742
 16712                           
 16713                           ;stkvar	_grs @ sp[(-13)+0]
 16714  0130B6  0EF6               	movlw	-10
 16715  0130B8  8CE3               	bsf	plusw1,6,c
 16716                           
 16717                           ;stkvar	_a @ sp[(-13)+-8]
 16718                           ;stkvar	_rem @ sp[(-13)+4]
 16719  0130BA  50E1               	movf	fsr1l,w,c
 16720  0130BC  0FF7               	addlw	-9
 16721  0130BE  6ED9               	movwf	fsr2l,c
 16722  0130C0  50E2               	movf	fsr1h,w,c
 16723  0130C2  6EDA               	movwf	fsr2h,c
 16724  0130C4  0EFF               	movlw	255
 16725  0130C6  22DA               	addwfc	fsr2h,f,c
 16726  0130C8  0EEB               	movlw	-21
 16727  0130CA  50E3               	movf	plusw1,w,c
 16728  0130CC  5EDE               	subwf	postinc2,f,c
 16729  0130CE  0EEC               	movlw	-20
 16730  0130D0  50E3               	movf	plusw1,w,c
 16731  0130D2  5ADE               	subwfb	postinc2,f,c
 16732  0130D4  0EED               	movlw	-19
 16733  0130D6  50E3               	movf	plusw1,w,c
 16734  0130D8  5ADE               	subwfb	postinc2,f,c
 16735  0130DA  0EEE               	movlw	-18
 16736  0130DC  50E3               	movf	plusw1,w,c
 16737  0130DE  5ADE               	subwfb	postinc2,f,c
 16738  0130E0                     l9742:
 16739                           
 16740                           ;stkvar	_aexp @ sp[(-13)+10]
 16741  0130E0  0EFD               	movlw	-3
 16742  0130E2  2AE3               	incf	plusw1,f,c
 16743  0130E4                     l9744:
 16744                           
 16745                           ;stkvar	_aexp @ sp[(-13)+10]
 16746  0130E4  0EFD               	movlw	-3
 16747  0130E6  006F FF8C  F032    	movff	plusw1,btemp
 16748  0130EC  0E19               	movlw	25
 16749  0130EE  6432               	cpfsgt	btemp^0,c
 16750  0130F0  D7A9               	goto	l9726
 16751                           
 16752                           ;stkvar	_rem @ sp[(-13)+4]
 16753  0130F2  0EF7               	movlw	-9
 16754  0130F4  50E3               	movf	plusw1,w,c
 16755  0130F6  E10A               	bnz	u9960
 16756  0130F8  0EF8               	movlw	-8
 16757  0130FA  50E3               	movf	plusw1,w,c
 16758  0130FC  E107               	bnz	u9960
 16759  0130FE  0EF9               	movlw	-7
 16760  013100  50E3               	movf	plusw1,w,c
 16761  013102  E104               	bnz	u9960
 16762  013104  0EFA               	movlw	-6
 16763  013106  50E3               	movf	plusw1,w,c
 16764  013108  B4D8               	btfsc	status,2,c
 16765  01310A  D024               	goto	l9760
 16766  01310C                     u9960:
 16767                           
 16768                           ;stkvar	_grs @ sp[(-13)+0]
 16769  01310C  0EF3               	movlw	-13
 16770  01310E  80E3               	bsf	plusw1,0,c
 16771  013110  D021               	goto	l9760
 16772  013112                     l9750:
 16773                           
 16774                           ;stkvar	_b @ sp[(-13)+-4]
 16775  013112  90D8               	bcf	status,0,c
 16776  013114  0EEF               	movlw	-17
 16777  013116  36E3               	rlcf	plusw1,f,c
 16778  013118  0EF0               	movlw	-16
 16779  01311A  36E3               	rlcf	plusw1,f,c
 16780  01311C  0EF1               	movlw	-15
 16781  01311E  36E3               	rlcf	plusw1,f,c
 16782  013120  0EF2               	movlw	-14
 16783  013122  36E3               	rlcf	plusw1,f,c
 16784                           
 16785                           ;stkvar	_grs @ sp[(-13)+0]
 16786  013124  0EF6               	movlw	-10
 16787  013126  AEE3               	btfss	plusw1,7,c
 16788  013128  D002               	goto	l9756
 16789                           
 16790                           ;stkvar	_b @ sp[(-13)+-4]
 16791  01312A  0EEF               	movlw	-17
 16792  01312C  80E3               	bsf	plusw1,0,c
 16793  01312E                     l9756:
 16794                           
 16795                           ;stkvar	_grs @ sp[(-13)+0]
 16796  01312E  90D8               	bcf	status,0,c
 16797  013130  0EF3               	movlw	-13
 16798  013132  36E3               	rlcf	plusw1,f,c
 16799  013134  0EF4               	movlw	-12
 16800  013136  36E3               	rlcf	plusw1,f,c
 16801  013138  0EF5               	movlw	-11
 16802  01313A  36E3               	rlcf	plusw1,f,c
 16803  01313C  0EF6               	movlw	-10
 16804  01313E  36E3               	rlcf	plusw1,f,c
 16805                           
 16806                           ;stkvar	_new_exp @ sp[(-13)+8]
 16807  013140  50E1               	movf	fsr1l,w,c
 16808  013142  0FFB               	addlw	-5
 16809  013144  6ED9               	movwf	fsr2l,c
 16810  013146  50E2               	movf	fsr1h,w,c
 16811  013148  6EDA               	movwf	fsr2h,c
 16812  01314A  0EFF               	movlw	255
 16813  01314C  22DA               	addwfc	fsr2h,f,c
 16814  01314E  06DE               	decf	postinc2,f,c
 16815  013150  0E00               	movlw	0
 16816  013152  5ADD               	subwfb	postdec2,f,c
 16817  013154                     l9760:
 16818                           
 16819                           ;stkvar	_b @ sp[(-13)+-4]
 16820  013154  0EF1               	movlw	-15
 16821  013156  AEE3               	btfss	plusw1,7,c
 16822  013158  D7DC               	goto	l9750
 16823                           
 16824                           ;stkvar	_aexp @ sp[(-13)+10]
 16825  01315A  0EFD               	movlw	-3
 16826  01315C  6AE3               	clrf	plusw1,c
 16827                           
 16828                           ;stkvar	_grs @ sp[(-13)+0]
 16829  01315E  0EF6               	movlw	-10
 16830  013160  AEE3               	btfss	plusw1,7,c
 16831  013162  D020               	goto	l9774
 16832                           
 16833                           ;stkvar	_grs @ sp[(-13)+0]
 16834  013164  50E1               	movf	fsr1l,w,c
 16835  013166  0FF3               	addlw	-13
 16836  013168  6ED9               	movwf	fsr2l,c
 16837  01316A  50E2               	movf	fsr1h,w,c
 16838  01316C  6EDA               	movwf	fsr2h,c
 16839  01316E  0EFF               	movlw	255
 16840  013170  22DA               	addwfc	fsr2h,f,c
 16841  013172  0EFF               	movlw	255
 16842  013174  14DE               	andwf	postinc2,w,c
 16843  013176  6E3A               	movwf	(btemp+8)^0,c
 16844  013178  0EFF               	movlw	255
 16845  01317A  14DE               	andwf	postinc2,w,c
 16846  01317C  6E3B               	movwf	(btemp+9)^0,c
 16847  01317E  0EFF               	movlw	255
 16848  013180  14DE               	andwf	postinc2,w,c
 16849  013182  6E3C               	movwf	(btemp+10)^0,c
 16850  013184  0E7F               	movlw	127
 16851  013186  14DE               	andwf	postinc2,w,c
 16852  013188  6E3D               	movwf	(btemp+11)^0,c
 16853  01318A  503A               	movf	(btemp+8)^0,w,c
 16854  01318C  103B               	iorwf	(btemp+9)^0,w,c
 16855  01318E  103C               	iorwf	(btemp+10)^0,w,c
 16856  013190  103D               	iorwf	(btemp+11)^0,w,c
 16857  013192  B4D8               	btfsc	status,2,c
 16858  013194  D004               	goto	l9770
 16859  013196                     u10000:
 16860                           
 16861                           ;stkvar	_aexp @ sp[(-13)+10]
 16862  013196  0EFD               	movlw	-3
 16863  013198  6AE3               	clrf	plusw1,c
 16864  01319A  2AE3               	incf	plusw1,f,c
 16865  01319C  D003               	goto	l9774
 16866  01319E                     l9770:
 16867                           
 16868                           ;stkvar	_b @ sp[(-13)+-4]
 16869  01319E  0EEF               	movlw	-17
 16870  0131A0  B0E3               	btfsc	plusw1,0,c
 16871  0131A2  D7F9               	goto	u10000
 16872  0131A4                     l9774:
 16873                           
 16874                           ;stkvar	_aexp @ sp[(-13)+10]
 16875  0131A4  0EFD               	movlw	-3
 16876  0131A6  50E3               	movf	plusw1,w,c
 16877  0131A8  B4D8               	btfsc	status,2,c
 16878  0131AA  D036               	goto	l9784
 16879                           
 16880                           ;stkvar	_b @ sp[(-13)+-4]
 16881  0131AC  50E1               	movf	fsr1l,w,c
 16882  0131AE  0FEF               	addlw	-17
 16883  0131B0  6ED9               	movwf	fsr2l,c
 16884  0131B2  50E2               	movf	fsr1h,w,c
 16885  0131B4  6EDA               	movwf	fsr2h,c
 16886  0131B6  0EFF               	movlw	255
 16887  0131B8  22DA               	addwfc	fsr2h,f,c
 16888  0131BA  2ADE               	incf	postinc2,f,c
 16889  0131BC  0E00               	movlw	0
 16890  0131BE  22DE               	addwfc	postinc2,f,c
 16891  0131C0  22DE               	addwfc	postinc2,f,c
 16892  0131C2  22DE               	addwfc	postinc2,f,c
 16893                           
 16894                           ;stkvar	_b @ sp[(-13)+-4]
 16895  0131C4  0EF2               	movlw	-14
 16896  0131C6  A0E3               	btfss	plusw1,0,c
 16897  0131C8  D027               	goto	l9784
 16898  0131CA  0E01               	movlw	1
 16899  0131CC  6E3D               	movwf	(btemp+11)^0,c
 16900                           
 16901                           ;stkvar	_b @ sp[(-13)+-4]
 16902  0131CE  50E1               	movf	fsr1l,w,c
 16903  0131D0  0FEF               	addlw	-17
 16904  0131D2  6ED9               	movwf	fsr2l,c
 16905  0131D4  50E2               	movf	fsr1h,w,c
 16906  0131D6  6EDA               	movwf	fsr2h,c
 16907  0131D8  0EFF               	movlw	255
 16908  0131DA  22DA               	addwfc	fsr2h,f,c
 16909  0131DC  283D               	incf	(btemp+11)^0,w,c
 16910  0131DE  52DE               	movf	postinc2,f,c
 16911  0131E0  D008               	goto	u10040
 16912  0131E2                     u10045:
 16913  0131E2  52DE               	movf	postinc2,f,c
 16914  0131E4  90D8               	bcf	status,0,c
 16915  0131E6  BEDC               	btfsc	preinc2,7,c
 16916  0131E8  80D8               	bsf	status,0,c
 16917  0131EA  32DD               	rrcf	postdec2,f,c
 16918  0131EC  32DD               	rrcf	postdec2,f,c
 16919  0131EE  32DD               	rrcf	postdec2,f,c
 16920  0131F0  32DE               	rrcf	postinc2,f,c
 16921  0131F2                     u10040:
 16922  0131F2  2EE8               	decfsz	wreg,f,c
 16923  0131F4  D7F6               	goto	u10045
 16924                           
 16925                           ;stkvar	_new_exp @ sp[(-13)+8]
 16926  0131F6  0EFB               	movlw	-5
 16927  0131F8  50E3               	movf	plusw1,w,c
 16928  0131FA  0F01               	addlw	1
 16929  0131FC  6E32               	movwf	btemp^0,c
 16930  0131FE  0EFB               	movlw	-5
 16931  013200  0060  F0CB  FFE3   	movff	btemp,plusw1
 16932  013206  6A32               	clrf	btemp^0,c
 16933  013208  0EFC               	movlw	-4
 16934  01320A  50E3               	movf	plusw1,w,c
 16935  01320C  2032               	addwfc	btemp^0,w,c
 16936  01320E  6E32               	movwf	btemp^0,c
 16937  013210  0EFC               	movlw	-4
 16938  013212  0060  F0CB  FFE3   	movff	btemp,plusw1
 16939  013218                     l9784:
 16940                           
 16941                           ;stkvar	_new_exp @ sp[(-13)+8]
 16942  013218  0EFC               	movlw	-4
 16943  01321A  BEE3               	btfsc	plusw1,7,c
 16944  01321C  D01B               	goto	l9790
 16945  01321E  0EFC               	movlw	-4
 16946  013220  50E3               	movf	plusw1,w,c
 16947  013222  E104               	bnz	u10050
 16948  013224  0EFB               	movlw	-5
 16949  013226  28E3               	incf	plusw1,w,c
 16950  013228  A0D8               	btfss	status,0,c
 16951  01322A  D014               	goto	l9790
 16952  01322C                     u10050:
 16953  01322C  0EFF               	movlw	255
 16954  01322E  6E3C               	movwf	(btemp+10)^0,c
 16955  013230  0E00               	movlw	0
 16956  013232  6E3D               	movwf	(btemp+11)^0,c
 16957                           
 16958                           ;stkvar	_new_exp @ sp[(-13)+8]
 16959  013234  0EFB               	movlw	-5
 16960  013236  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16961  01323C  0EFC               	movlw	-4
 16962  01323E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16963                           
 16964                           ;stkvar	_b @ sp[(-13)+-4]
 16965  013244  0EEF               	movlw	-17
 16966  013246  6AE3               	clrf	plusw1,c
 16967  013248  0EF0               	movlw	-16
 16968  01324A  6AE3               	clrf	plusw1,c
 16969  01324C  0EF1               	movlw	-15
 16970  01324E  6AE3               	clrf	plusw1,c
 16971  013250  0EF2               	movlw	-14
 16972  013252  6AE3               	clrf	plusw1,c
 16973  013254                     l9790:
 16974                           
 16975                           ;stkvar	_new_exp @ sp[(-13)+8]
 16976  013254  0EFC               	movlw	-4
 16977  013256  BEE3               	btfsc	plusw1,7,c
 16978  013258  D007               	goto	u10060
 16979  01325A  0EFC               	movlw	-4
 16980  01325C  50E3               	movf	plusw1,w,c
 16981  01325E  E112               	bnz	l9796
 16982  013260  0EFB               	movlw	-5
 16983  013262  04E3               	decf	plusw1,w,c
 16984  013264  B0D8               	btfsc	status,0,c
 16985  013266  D00E               	goto	l9796
 16986  013268                     u10060:
 16987                           
 16988                           ;stkvar	_new_exp @ sp[(-13)+8]
 16989  013268  0EFB               	movlw	-5
 16990  01326A  6AE3               	clrf	plusw1,c
 16991  01326C  0EFC               	movlw	-4
 16992  01326E  6AE3               	clrf	plusw1,c
 16993                           
 16994                           ;stkvar	_b @ sp[(-13)+-4]
 16995  013270  0EEF               	movlw	-17
 16996  013272  6AE3               	clrf	plusw1,c
 16997  013274  0EF0               	movlw	-16
 16998  013276  6AE3               	clrf	plusw1,c
 16999  013278  0EF1               	movlw	-15
 17000  01327A  6AE3               	clrf	plusw1,c
 17001  01327C  0EF2               	movlw	-14
 17002  01327E  6AE3               	clrf	plusw1,c
 17003                           
 17004                           ;stkvar	_sign @ sp[(-13)+12]
 17005  013280  0EFF               	movlw	-1
 17006  013282  6AE3               	clrf	plusw1,c
 17007  013284                     l9796:
 17008                           
 17009                           ;stkvar	_new_exp @ sp[(-13)+8]
 17010                           ;stkvar	_bexp @ sp[(-13)+11]
 17011  013284  0EFB               	movlw	-5
 17012  013286  006F FF8C  F032    	movff	plusw1,btemp
 17013  01328C  0EFE               	movlw	-2
 17014  01328E  0060  F0CB  FFE3   	movff	btemp,plusw1
 17015                           
 17016                           ;stkvar	_bexp @ sp[(-13)+11]
 17017  013294  0EFE               	movlw	-2
 17018  013296  A0E3               	btfss	plusw1,0,c
 17019  013298  D009               	goto	l9802
 17020                           
 17021                           ;stkvar	_b @ sp[(-13)+-4]
 17022  01329A  0EF1               	movlw	241
 17023  01329C  24E1               	addwf	fsr1l,w,c
 17024  01329E  6ED9               	movwf	fsr2l,c
 17025  0132A0  0EFF               	movlw	255
 17026  0132A2  20E2               	addwfc	fsr1h,w,c
 17027  0132A4  6EDA               	movwf	fsr2h,c
 17028  0132A6  0E00               	movlw	0
 17029  0132A8  8EDB               	bsf	plusw2,7,c
 17030  0132AA  D008               	goto	l9804
 17031  0132AC                     l9802:
 17032                           
 17033                           ;stkvar	_b @ sp[(-13)+-4]
 17034  0132AC  0EF1               	movlw	241
 17035  0132AE  24E1               	addwf	fsr1l,w,c
 17036  0132B0  6ED9               	movwf	fsr2l,c
 17037  0132B2  0EFF               	movlw	255
 17038  0132B4  20E2               	addwfc	fsr1h,w,c
 17039  0132B6  6EDA               	movwf	fsr2h,c
 17040  0132B8  0E7F               	movlw	127
 17041  0132BA  16DF               	andwf	indf2,f,c
 17042  0132BC                     l9804:
 17043                           
 17044                           ;stkvar	_b @ sp[(-13)+-4]
 17045  0132BC  0EF2               	movlw	242
 17046  0132BE  24E1               	addwf	fsr1l,w,c
 17047  0132C0  6ED9               	movwf	fsr2l,c
 17048  0132C2  0EFF               	movlw	255
 17049  0132C4  20E2               	addwfc	fsr1h,w,c
 17050  0132C6  6EDA               	movwf	fsr2h,c
 17051                           
 17052                           ;stkvar	_bexp @ sp[(-13)+11]
 17053  0132C8  0EFE               	movlw	-2
 17054  0132CA  006F FF8C  F03D    	movff	plusw1,btemp+11
 17055  0132D0  90D8               	bcf	status,0,c
 17056  0132D2  303D               	rrcf	(btemp+11)^0,w,c
 17057  0132D4  6EDF               	movwf	indf2,c
 17058  0132D6  D644               	goto	l9702
 17059  0132D8                     l2619:
 17060                           
 17061                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 17062  0132D8  0EEB               	movlw	235
 17063  0132DA  26E1               	addwf	fsr1l,f,c
 17064  0132DC  0EFF               	movlw	255
 17065  0132DE  22E2               	addwfc	fsr1h,f,c
 17066  0132E0  0012               	return		;funcret
 17067  0132E2                     __end_of___fldiv:
 17068                           	opt callstack 0
 17069                           
 17070 ;; *************** function ___awmod *****************
 17071 ;; Defined at:
 17072 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 17073 ;; Parameters:    Size  Location     Type
 17074 ;;  dividend        2  [STACK] int 
 17075 ;;  divisor         2  [STACK] int 
 17076 ;; Auto vars:     Size  Location     Type
 17077 ;;  sign            1  [STACK] unsigned char 
 17078 ;;  counter         1  [STACK] unsigned char 
 17079 ;; Return value:  Size  Location     Type
 17080 ;;                  2  [STACK] int 
 17081 ;; Registers used:
 17082 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17083 ;; Tracked objects:
 17084 ;;		On entry : 0/5
 17085 ;;		On exit  : 0/0
 17086 ;;		Unchanged: 0/0
 17087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17092 ;;Total ram usage:        0 bytes
 17093 ;; Hardware stack levels used:    1
 17094 ;; Hardware stack levels required when called:    6
 17095 ;; This function calls:
 17096 ;;		Nothing
 17097 ;; This function is called by:
 17098 ;;		_efgtoa
 17099 ;; This function uses a reentrant model
 17100 ;;
 17101                           
 17102                           	psect	text57
 17103  016502                     __ptext57:
 17104                           	opt callstack 0
 17105  016502                     ___awmod:
 17106                           	opt callstack 0
 17107                           
 17108                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17109  016502  52E6               	movf	postinc1,f,c
 17110  016504  52E6               	movf	postinc1,f,c
 17111                           
 17112                           ;stkvar	_sign @ sp[(-2)+0]
 17113                           
 17114                           ;incstack = 0
 17115  016506  0EFE               	movlw	-2
 17116  016508  6AE3               	clrf	plusw1,c
 17117                           
 17118                           ;stkvar	_dividend @ sp[(-2)+-2]
 17119  01650A  0EFD               	movlw	-3
 17120  01650C  AEE3               	btfss	plusw1,7,c
 17121  01650E  D009               	goto	l10028
 17122                           
 17123                           ;stkvar	_dividend @ sp[(-2)+-2]
 17124                           ;stkvar	_dividend @ sp[(-2)+-2]
 17125  016510  0EFC               	movlw	-4
 17126  016512  6CE3               	negf	plusw1,c
 17127  016514  0EFD               	movlw	-3
 17128  016516  1EE3               	comf	plusw1,f,c
 17129  016518  B0D8               	btfsc	status,0,c
 17130  01651A  2AE3               	incf	plusw1,f,c
 17131                           
 17132                           ;stkvar	_sign @ sp[(-2)+0]
 17133  01651C  0EFE               	movlw	-2
 17134  01651E  6AE3               	clrf	plusw1,c
 17135  016520  2AE3               	incf	plusw1,f,c
 17136  016522                     l10028:
 17137                           
 17138                           ;stkvar	_divisor @ sp[(-2)+-4]
 17139  016522  0EFB               	movlw	-5
 17140  016524  AEE3               	btfss	plusw1,7,c
 17141  016526  D006               	goto	l10032
 17142                           
 17143                           ;stkvar	_divisor @ sp[(-2)+-4]
 17144                           ;stkvar	_divisor @ sp[(-2)+-4]
 17145  016528  0EFA               	movlw	-6
 17146  01652A  6CE3               	negf	plusw1,c
 17147  01652C  0EFB               	movlw	-5
 17148  01652E  1EE3               	comf	plusw1,f,c
 17149  016530  B0D8               	btfsc	status,0,c
 17150  016532  2AE3               	incf	plusw1,f,c
 17151  016534                     l10032:
 17152                           
 17153                           ;stkvar	_divisor @ sp[(-2)+-4]
 17154  016534  0EFA               	movlw	-6
 17155  016536  006F FF8C  F032    	movff	plusw1,btemp
 17156  01653C  0EFB               	movlw	-5
 17157  01653E  50E3               	movf	plusw1,w,c
 17158  016540  1032               	iorwf	btemp^0,w,c
 17159  016542  B4D8               	btfsc	status,2,c
 17160  016544  D053               	goto	u10420
 17161                           
 17162                           ;stkvar	_counter @ sp[(-2)+1]
 17163  016546  0EFF               	movlw	-1
 17164  016548  6AE3               	clrf	plusw1,c
 17165  01654A  D012               	goto	L13
 17166  01654C                     l10036:
 17167                           
 17168                           ;stkvar	_divisor @ sp[(-2)+-4]
 17169  01654C  0EFA               	movlw	-6
 17170  01654E  50E3               	movf	plusw1,w,c
 17171  016550  90D8               	bcf	status,0,c
 17172  016552  34E8               	rlcf	wreg,w,c
 17173  016554  6E32               	movwf	btemp^0,c
 17174  016556  0EFA               	movlw	-6
 17175  016558  0060  F0CB  FFE3   	movff	btemp,plusw1
 17176  01655E  0EFB               	movlw	-5
 17177  016560  50E3               	movf	plusw1,w,c
 17178  016562  34E8               	rlcf	wreg,w,c
 17179  016564  6E32               	movwf	btemp^0,c
 17180  016566  0EFB               	movlw	-5
 17181  016568  0060  F0CB  FFE3   	movff	btemp,plusw1
 17182                           
 17183                           ;stkvar	_counter @ sp[(-2)+1]
 17184  01656E  0EFF               	movlw	-1
 17185  016570                     L13:
 17186  016570  2AE3               	incf	plusw1,f,c
 17187                           
 17188                           ;stkvar	_divisor @ sp[(-2)+-4]
 17189  016572  0EFB               	movlw	-5
 17190  016574  AEE3               	btfss	plusw1,7,c
 17191  016576  D7EA               	goto	l10036
 17192  016578                     u10400:
 17193                           
 17194                           ;stkvar	_divisor @ sp[(-2)+-4]
 17195  016578  0EFA               	movlw	-6
 17196  01657A  006F FF8C  F03C    	movff	plusw1,btemp+10
 17197  016580  0EFB               	movlw	-5
 17198  016582  006F FF8C  F03D    	movff	plusw1,btemp+11
 17199                           
 17200                           ;stkvar	_dividend @ sp[(-2)+-2]
 17201  016588  0EFC               	movlw	-4
 17202  01658A  006F FF8C  F03A    	movff	plusw1,btemp+8
 17203  016590  0EFD               	movlw	-3
 17204  016592  006F FF8C  F03B    	movff	plusw1,btemp+9
 17205  016598  503C               	movf	(btemp+10)^0,w,c
 17206  01659A  5C3A               	subwf	(btemp+8)^0,w,c
 17207  01659C  503D               	movf	(btemp+11)^0,w,c
 17208  01659E  583B               	subwfb	(btemp+9)^0,w,c
 17209  0165A0  A0D8               	btfss	status,0,c
 17210  0165A2  D014               	goto	l10046
 17211                           
 17212                           ;stkvar	_divisor @ sp[(-2)+-4]
 17213                           ;stkvar	_dividend @ sp[(-2)+-2]
 17214  0165A4  0EFC               	movlw	-4
 17215  0165A6  50E3               	movf	plusw1,w,c
 17216  0165A8  6E32               	movwf	btemp^0,c
 17217  0165AA  0EFA               	movlw	-6
 17218  0165AC  50E3               	movf	plusw1,w,c
 17219  0165AE  5E32               	subwf	btemp^0,f,c
 17220  0165B0  0EFC               	movlw	-4
 17221  0165B2  0060  F0CB  FFE3   	movff	btemp,plusw1
 17222  0165B8  0EFD               	movlw	-3
 17223  0165BA  50E3               	movf	plusw1,w,c
 17224  0165BC  6E32               	movwf	btemp^0,c
 17225  0165BE  0EFB               	movlw	-5
 17226  0165C0  50E3               	movf	plusw1,w,c
 17227  0165C2  5A32               	subwfb	btemp^0,f,c
 17228  0165C4  0EFD               	movlw	-3
 17229  0165C6  0060  F0CB  FFE3   	movff	btemp,plusw1
 17230  0165CC                     l10046:
 17231                           
 17232                           ;stkvar	_divisor @ sp[(-2)+-4]
 17233  0165CC  90D8               	bcf	status,0,c
 17234  0165CE  0EFB               	movlw	-5
 17235  0165D0  32E3               	rrcf	plusw1,f,c
 17236  0165D2  0EFA               	movlw	-6
 17237  0165D4  32E3               	rrcf	plusw1,f,c
 17238                           
 17239                           ;stkvar	_counter @ sp[(-2)+1]
 17240  0165D6  0EFF               	movlw	-1
 17241  0165D8  50E3               	movf	plusw1,w,c
 17242  0165DA  6E32               	movwf	btemp^0,c
 17243  0165DC  0E01               	movlw	1
 17244  0165DE  5E32               	subwf	btemp^0,f,c
 17245  0165E0  0EFF               	movlw	-1
 17246  0165E2  0060  F0CB  FFE3   	movff	btemp,plusw1
 17247  0165E8  A4D8               	btfss	status,2,c
 17248  0165EA  D7C6               	goto	u10400
 17249  0165EC                     u10420:
 17250                           
 17251                           ;stkvar	_sign @ sp[(-2)+0]
 17252  0165EC  0EFE               	movlw	-2
 17253  0165EE  50E3               	movf	plusw1,w,c
 17254  0165F0  B4D8               	btfsc	status,2,c
 17255  0165F2  D006               	goto	l10054
 17256                           
 17257                           ;stkvar	_dividend @ sp[(-2)+-2]
 17258                           ;stkvar	_dividend @ sp[(-2)+-2]
 17259  0165F4  0EFC               	movlw	-4
 17260  0165F6  6CE3               	negf	plusw1,c
 17261  0165F8  0EFD               	movlw	-3
 17262  0165FA  1EE3               	comf	plusw1,f,c
 17263  0165FC  B0D8               	btfsc	status,0,c
 17264  0165FE  2AE3               	incf	plusw1,f,c
 17265  016600                     l10054:
 17266                           
 17267                           ;stkvar	_dividend @ sp[(-2)+-2]
 17268  016600  0EFC               	movlw	-4
 17269  016602  006F FF8C  F032    	movff	plusw1,btemp
 17270  016608  0EFD               	movlw	-3
 17271  01660A  006F FF8C  F033    	movff	plusw1,btemp+1
 17272                           
 17273                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17274  016610  0EFA               	movlw	250
 17275  016612  26E1               	addwf	fsr1l,f,c
 17276  016614  0EFF               	movlw	255
 17277  016616  22E2               	addwfc	fsr1h,f,c
 17278  016618  0012               	return		;funcret
 17279  01661A                     __end_of___awmod:
 17280                           	opt callstack 0
 17281                           
 17282 ;; *************** function ___awdiv *****************
 17283 ;; Defined at:
 17284 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 17285 ;; Parameters:    Size  Location     Type
 17286 ;;  dividend        2  [STACK] int 
 17287 ;;  divisor         2  [STACK] int 
 17288 ;; Auto vars:     Size  Location     Type
 17289 ;;  quotient        2  [STACK] int 
 17290 ;;  sign            1  [STACK] unsigned char 
 17291 ;;  counter         1  [STACK] unsigned char 
 17292 ;; Return value:  Size  Location     Type
 17293 ;;                  2  [STACK] int 
 17294 ;; Registers used:
 17295 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17296 ;; Tracked objects:
 17297 ;;		On entry : 0/5
 17298 ;;		On exit  : 0/0
 17299 ;;		Unchanged: 0/0
 17300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17305 ;;Total ram usage:        0 bytes
 17306 ;; Hardware stack levels used:    1
 17307 ;; Hardware stack levels required when called:    6
 17308 ;; This function calls:
 17309 ;;		Nothing
 17310 ;; This function is called by:
 17311 ;;		_efgtoa
 17312 ;; This function uses a reentrant model
 17313 ;;
 17314                           
 17315                           	psect	text58
 17316  01601A                     __ptext58:
 17317                           	opt callstack 0
 17318  01601A                     ___awdiv:
 17319                           	opt callstack 0
 17320                           
 17321                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17322  01601A  52E6               	movf	postinc1,f,c
 17323  01601C  52E6               	movf	postinc1,f,c
 17324  01601E  52E6               	movf	postinc1,f,c
 17325  016020  52E6               	movf	postinc1,f,c
 17326                           
 17327                           ;stkvar	_sign @ sp[(-4)+2]
 17328                           
 17329                           ;incstack = 0
 17330  016022  0EFE               	movlw	-2
 17331  016024  6AE3               	clrf	plusw1,c
 17332                           
 17333                           ;stkvar	_divisor @ sp[(-4)+-4]
 17334  016026  0EF9               	movlw	-7
 17335  016028  AEE3               	btfss	plusw1,7,c
 17336  01602A  D009               	goto	l9982
 17337                           
 17338                           ;stkvar	_divisor @ sp[(-4)+-4]
 17339                           ;stkvar	_divisor @ sp[(-4)+-4]
 17340  01602C  0EF8               	movlw	-8
 17341  01602E  6CE3               	negf	plusw1,c
 17342  016030  0EF9               	movlw	-7
 17343  016032  1EE3               	comf	plusw1,f,c
 17344  016034  B0D8               	btfsc	status,0,c
 17345  016036  2AE3               	incf	plusw1,f,c
 17346                           
 17347                           ;stkvar	_sign @ sp[(-4)+2]
 17348  016038  0EFE               	movlw	-2
 17349  01603A  6AE3               	clrf	plusw1,c
 17350  01603C  2AE3               	incf	plusw1,f,c
 17351  01603E                     l9982:
 17352                           
 17353                           ;stkvar	_dividend @ sp[(-4)+-2]
 17354  01603E  0EFB               	movlw	-5
 17355  016040  AEE3               	btfss	plusw1,7,c
 17356  016042  D008               	goto	l9988
 17357                           
 17358                           ;stkvar	_dividend @ sp[(-4)+-2]
 17359                           ;stkvar	_dividend @ sp[(-4)+-2]
 17360  016044  0EFA               	movlw	-6
 17361  016046  6CE3               	negf	plusw1,c
 17362  016048  0EFB               	movlw	-5
 17363  01604A  1EE3               	comf	plusw1,f,c
 17364  01604C  B0D8               	btfsc	status,0,c
 17365  01604E  2AE3               	incf	plusw1,f,c
 17366                           
 17367                           ;stkvar	_sign @ sp[(-4)+2]
 17368  016050  0EFE               	movlw	-2
 17369  016052  70E3               	btg	plusw1,0,c
 17370  016054                     l9988:
 17371                           
 17372                           ;stkvar	_quotient @ sp[(-4)+0]
 17373  016054  0EFC               	movlw	-4
 17374  016056  6AE3               	clrf	plusw1,c
 17375  016058  0EFD               	movlw	-3
 17376  01605A  6AE3               	clrf	plusw1,c
 17377                           
 17378                           ;stkvar	_divisor @ sp[(-4)+-4]
 17379  01605C  0EF8               	movlw	-8
 17380  01605E  006F FF8C  F032    	movff	plusw1,btemp
 17381  016064  0EF9               	movlw	-7
 17382  016066  50E3               	movf	plusw1,w,c
 17383  016068  1032               	iorwf	btemp^0,w,c
 17384  01606A  B4D8               	btfsc	status,2,c
 17385  01606C  D066               	goto	u10350
 17386                           
 17387                           ;stkvar	_counter @ sp[(-4)+3]
 17388  01606E  0EFF               	movlw	-1
 17389  016070  6AE3               	clrf	plusw1,c
 17390  016072  D012               	goto	L14
 17391  016074                     l9994:
 17392                           
 17393                           ;stkvar	_divisor @ sp[(-4)+-4]
 17394  016074  0EF8               	movlw	-8
 17395  016076  50E3               	movf	plusw1,w,c
 17396  016078  90D8               	bcf	status,0,c
 17397  01607A  34E8               	rlcf	wreg,w,c
 17398  01607C  6E32               	movwf	btemp^0,c
 17399  01607E  0EF8               	movlw	-8
 17400  016080  0060  F0CB  FFE3   	movff	btemp,plusw1
 17401  016086  0EF9               	movlw	-7
 17402  016088  50E3               	movf	plusw1,w,c
 17403  01608A  34E8               	rlcf	wreg,w,c
 17404  01608C  6E32               	movwf	btemp^0,c
 17405  01608E  0EF9               	movlw	-7
 17406  016090  0060  F0CB  FFE3   	movff	btemp,plusw1
 17407                           
 17408                           ;stkvar	_counter @ sp[(-4)+3]
 17409  016096  0EFF               	movlw	-1
 17410  016098                     L14:
 17411  016098  2AE3               	incf	plusw1,f,c
 17412                           
 17413                           ;stkvar	_divisor @ sp[(-4)+-4]
 17414  01609A  0EF9               	movlw	-7
 17415  01609C  AEE3               	btfss	plusw1,7,c
 17416  01609E  D7EA               	goto	l9994
 17417  0160A0                     u10330:
 17418                           
 17419                           ;stkvar	_quotient @ sp[(-4)+0]
 17420  0160A0  0EFC               	movlw	-4
 17421  0160A2  50E3               	movf	plusw1,w,c
 17422  0160A4  90D8               	bcf	status,0,c
 17423  0160A6  34E8               	rlcf	wreg,w,c
 17424  0160A8  6E32               	movwf	btemp^0,c
 17425  0160AA  0EFC               	movlw	-4
 17426  0160AC  0060  F0CB  FFE3   	movff	btemp,plusw1
 17427  0160B2  0EFD               	movlw	-3
 17428  0160B4  50E3               	movf	plusw1,w,c
 17429  0160B6  34E8               	rlcf	wreg,w,c
 17430  0160B8  6E32               	movwf	btemp^0,c
 17431  0160BA  0EFD               	movlw	-3
 17432  0160BC  0060  F0CB  FFE3   	movff	btemp,plusw1
 17433                           
 17434                           ;stkvar	_divisor @ sp[(-4)+-4]
 17435  0160C2  0EF8               	movlw	-8
 17436  0160C4  006F FF8C  F03C    	movff	plusw1,btemp+10
 17437  0160CA  0EF9               	movlw	-7
 17438  0160CC  006F FF8C  F03D    	movff	plusw1,btemp+11
 17439                           
 17440                           ;stkvar	_dividend @ sp[(-4)+-2]
 17441  0160D2  0EFA               	movlw	-6
 17442  0160D4  006F FF8C  F03A    	movff	plusw1,btemp+8
 17443  0160DA  0EFB               	movlw	-5
 17444  0160DC  006F FF8C  F03B    	movff	plusw1,btemp+9
 17445  0160E2  503C               	movf	(btemp+10)^0,w,c
 17446  0160E4  5C3A               	subwf	(btemp+8)^0,w,c
 17447  0160E6  503D               	movf	(btemp+11)^0,w,c
 17448  0160E8  583B               	subwfb	(btemp+9)^0,w,c
 17449  0160EA  A0D8               	btfss	status,0,c
 17450  0160EC  D016               	goto	l10008
 17451                           
 17452                           ;stkvar	_divisor @ sp[(-4)+-4]
 17453                           ;stkvar	_dividend @ sp[(-4)+-2]
 17454  0160EE  0EFA               	movlw	-6
 17455  0160F0  50E3               	movf	plusw1,w,c
 17456  0160F2  6E32               	movwf	btemp^0,c
 17457  0160F4  0EF8               	movlw	-8
 17458  0160F6  50E3               	movf	plusw1,w,c
 17459  0160F8  5E32               	subwf	btemp^0,f,c
 17460  0160FA  0EFA               	movlw	-6
 17461  0160FC  0060  F0CB  FFE3   	movff	btemp,plusw1
 17462  016102  0EFB               	movlw	-5
 17463  016104  50E3               	movf	plusw1,w,c
 17464  016106  6E32               	movwf	btemp^0,c
 17465  016108  0EF9               	movlw	-7
 17466  01610A  50E3               	movf	plusw1,w,c
 17467  01610C  5A32               	subwfb	btemp^0,f,c
 17468  01610E  0EFB               	movlw	-5
 17469  016110  0060  F0CB  FFE3   	movff	btemp,plusw1
 17470                           
 17471                           ;stkvar	_quotient @ sp[(-4)+0]
 17472  016116  0EFC               	movlw	-4
 17473  016118  80E3               	bsf	plusw1,0,c
 17474  01611A                     l10008:
 17475                           
 17476                           ;stkvar	_divisor @ sp[(-4)+-4]
 17477  01611A  90D8               	bcf	status,0,c
 17478  01611C  0EF9               	movlw	-7
 17479  01611E  32E3               	rrcf	plusw1,f,c
 17480  016120  0EF8               	movlw	-8
 17481  016122  32E3               	rrcf	plusw1,f,c
 17482                           
 17483                           ;stkvar	_counter @ sp[(-4)+3]
 17484  016124  0EFF               	movlw	-1
 17485  016126  50E3               	movf	plusw1,w,c
 17486  016128  6E32               	movwf	btemp^0,c
 17487  01612A  0E01               	movlw	1
 17488  01612C  5E32               	subwf	btemp^0,f,c
 17489  01612E  0EFF               	movlw	-1
 17490  016130  0060  F0CB  FFE3   	movff	btemp,plusw1
 17491  016136  A4D8               	btfss	status,2,c
 17492  016138  D7B3               	goto	u10330
 17493  01613A                     u10350:
 17494                           
 17495                           ;stkvar	_sign @ sp[(-4)+2]
 17496  01613A  0EFE               	movlw	-2
 17497  01613C  50E3               	movf	plusw1,w,c
 17498  01613E  B4D8               	btfsc	status,2,c
 17499  016140  D006               	goto	l10016
 17500                           
 17501                           ;stkvar	_quotient @ sp[(-4)+0]
 17502                           ;stkvar	_quotient @ sp[(-4)+0]
 17503  016142  0EFC               	movlw	-4
 17504  016144  6CE3               	negf	plusw1,c
 17505  016146  0EFD               	movlw	-3
 17506  016148  1EE3               	comf	plusw1,f,c
 17507  01614A  B0D8               	btfsc	status,0,c
 17508  01614C  2AE3               	incf	plusw1,f,c
 17509  01614E                     l10016:
 17510                           
 17511                           ;stkvar	_quotient @ sp[(-4)+0]
 17512  01614E  0EFC               	movlw	-4
 17513  016150  006F FF8C  F032    	movff	plusw1,btemp
 17514  016156  0EFD               	movlw	-3
 17515  016158  006F FF8C  F033    	movff	plusw1,btemp+1
 17516                           
 17517                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17518  01615E  0EF8               	movlw	248
 17519  016160  26E1               	addwf	fsr1l,f,c
 17520  016162  0EFF               	movlw	255
 17521  016164  22E2               	addwfc	fsr1h,f,c
 17522  016166  0012               	return		;funcret
 17523  016168                     __end_of___awdiv:
 17524                           	opt callstack 0
 17525                           
 17526 ;; *************** function _dtoa *****************
 17527 ;; Defined at:
 17528 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17529 ;; Parameters:    Size  Location     Type
 17530 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17531 ;;		 -> f(6), NULL(0), 
 17532 ;;  d               8  [STACK] long long 
 17533 ;; Auto vars:     Size  Location     Type
 17534 ;;  n               8  [STACK] long long 
 17535 ;;  i               2  [STACK] int 
 17536 ;;  s               2  [STACK] int 
 17537 ;;  w               2  [STACK] int 
 17538 ;;  p               2  [STACK] int 
 17539 ;; Return value:  Size  Location     Type
 17540 ;;                  2  [STACK] int 
 17541 ;; Registers used:
 17542 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 17543 ;; Tracked objects:
 17544 ;;		On entry : 0/5
 17545 ;;		On exit  : 0/0
 17546 ;;		Unchanged: 0/0
 17547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17552 ;;Total ram usage:        0 bytes
 17553 ;; Hardware stack levels used:    1
 17554 ;; Hardware stack levels required when called:   11
 17555 ;; This function calls:
 17556 ;;		___aodiv
 17557 ;;		___aomod
 17558 ;;		_abs
 17559 ;;		_pad
 17560 ;; This function is called by:
 17561 ;;		_vfpfcnvrt
 17562 ;; This function uses a reentrant model
 17563 ;;
 17564                           
 17565                           	psect	text59
 17566  01378E                     __ptext59:
 17567                           	opt callstack 0
 17568  01378E                     _dtoa:
 17569                           	opt callstack 0
 17570                           
 17571                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17572  01378E  0E12               	movlw	18
 17573  013790  26E1               	addwf	fsr1l,f,c
 17574  013792  0E00               	movlw	0
 17575  013794  22E2               	addwfc	fsr1h,f,c
 17576                           
 17577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 17578                           ;stkvar	_d @ sp[(-18)+-10]
 17579                           
 17580                           ;incstack = 0
 17581  013796  0EE4               	movlw	228
 17582  013798  24E1               	addwf	fsr1l,w,c
 17583  01379A  6ED9               	movwf	fsr2l,c
 17584  01379C  0EFF               	movlw	255
 17585  01379E  20E2               	addwfc	fsr1h,w,c
 17586  0137A0  6EDA               	movwf	fsr2h,c
 17587                           
 17588                           ;stkvar	_n @ sp[(-18)+2]
 17589  0137A2  0E08               	movlw	8
 17590  0137A4  6E32               	movwf	btemp^0,c
 17591  0137A6  0EF0               	movlw	-16
 17592  0137A8                     us1066999:
 17593  0137A8  006F FF7B FFE3     	movff	postinc2,plusw1
 17594  0137AE  28E8               	incf	wreg,w,c
 17595  0137B0  2E32               	decfsz	btemp^0,f,c
 17596  0137B2  D7FA               	bra	us1066999
 17597                           
 17598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 17599                           ;stkvar	_n @ sp[(-18)+2]
 17600  0137B4  0EF7               	movlw	-9
 17601  0137B6  AEE3               	btfss	plusw1,7,c
 17602  0137B8  D002               	goto	u10670
 17603  0137BA  0E01               	movlw	1
 17604  0137BC  D001               	goto	u10680
 17605  0137BE                     u10670:
 17606  0137BE  0E00               	movlw	0
 17607  0137C0                     u10680:
 17608  0137C0  6E3C               	movwf	(btemp+10)^0,c
 17609  0137C2  6A3D               	clrf	(btemp+11)^0,c
 17610                           
 17611                           ;stkvar	_s @ sp[(-18)+12]
 17612  0137C4  0EFA               	movlw	-6
 17613  0137C6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17614  0137CC  0EFB               	movlw	-5
 17615  0137CE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17616                           
 17617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 17618                           ;stkvar	_s @ sp[(-18)+12]
 17619  0137D4  0EFA               	movlw	-6
 17620  0137D6  006F FF8C  F032    	movff	plusw1,btemp
 17621  0137DC  0EFB               	movlw	-5
 17622  0137DE  50E3               	movf	plusw1,w,c
 17623  0137E0  1032               	iorwf	btemp^0,w,c
 17624  0137E2  B4D8               	btfsc	status,2,c
 17625  0137E4  D025               	goto	u10700
 17626                           
 17627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 17628                           ;stkvar	_n @ sp[(-18)+2]
 17629                           ;stkvar	_n @ sp[(-18)+2]
 17630  0137E6  0EF0               	movlw	-16
 17631  0137E8  6CE3               	negf	plusw1,c
 17632  0137EA  0EF1               	movlw	-15
 17633  0137EC  1EE3               	comf	plusw1,f,c
 17634  0137EE  0EF2               	movlw	-14
 17635  0137F0  1EE3               	comf	plusw1,f,c
 17636  0137F2  0EF3               	movlw	-13
 17637  0137F4  1EE3               	comf	plusw1,f,c
 17638  0137F6  0EF4               	movlw	-12
 17639  0137F8  1EE3               	comf	plusw1,f,c
 17640  0137FA  0EF5               	movlw	-11
 17641  0137FC  1EE3               	comf	plusw1,f,c
 17642  0137FE  0EF6               	movlw	-10
 17643  013800  1EE3               	comf	plusw1,f,c
 17644  013802  0EF7               	movlw	-9
 17645  013804  1EE3               	comf	plusw1,f,c
 17646  013806  E314               	bnc	u10700
 17647  013808  0EF1               	movlw	-15
 17648  01380A  2AE3               	incf	plusw1,f,c
 17649  01380C  E311               	bnc	u10700
 17650  01380E  0EF2               	movlw	-14
 17651  013810  2AE3               	incf	plusw1,f,c
 17652  013812  E30E               	bnc	u10700
 17653  013814  0EF3               	movlw	-13
 17654  013816  2AE3               	incf	plusw1,f,c
 17655  013818  E30B               	bnc	u10700
 17656  01381A  0EF4               	movlw	-12
 17657  01381C  2AE3               	incf	plusw1,f,c
 17658  01381E  E308               	bnc	u10700
 17659  013820  0EF5               	movlw	-11
 17660  013822  2AE3               	incf	plusw1,f,c
 17661  013824  E305               	bnc	u10700
 17662  013826  0EF6               	movlw	-10
 17663  013828  2AE3               	incf	plusw1,f,c
 17664  01382A  E302               	bnc	u10700
 17665  01382C  0EF7               	movlw	-9
 17666  01382E  2AE3               	incf	plusw1,f,c
 17667  013830                     u10700:
 17668                           
 17669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 17670  013830  AE1E               	btfss	(_prec+1)^0,7,c
 17671                           
 17672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 17673  013832  921F               	bcf	_flags^0,1,c
 17674                           
 17675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 17676  013834  BE1E               	btfsc	(_prec+1)^0,7,c
 17677  013836  D005               	goto	u10720
 17678  013838  501E               	movf	(_prec+1)^0,w,c
 17679  01383A  E110               	bnz	l10192
 17680  01383C  041D               	decf	_prec^0,w,c
 17681  01383E  B0D8               	btfsc	status,0,c
 17682  013840  D00D               	goto	l10192
 17683  013842                     u10720:
 17684  013842  0E01               	movlw	1
 17685  013844  6E3C               	movwf	(btemp+10)^0,c
 17686  013846  0E00               	movlw	0
 17687  013848  6E3D               	movwf	(btemp+11)^0,c
 17688                           
 17689                           ;stkvar	_p @ sp[(-18)+16]
 17690  01384A  0EFE               	movlw	-2
 17691  01384C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17692  013852  0EFF               	movlw	-1
 17693  013854  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17694  01385A  D008               	goto	l1823
 17695  01385C                     l10192:
 17696                           
 17697                           ;stkvar	_p @ sp[(-18)+16]
 17698  01385C  0EFE               	movlw	-2
 17699  01385E  0060  F077  FFE3   	movff	_prec,plusw1
 17700  013864  0EFF               	movlw	-1
 17701  013866  0060  F07B  FFE3   	movff	_prec+1,plusw1
 17702  01386C                     l1823:
 17703                           
 17704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 17705                           ;stkvar	_w @ sp[(-18)+14]
 17706  01386C  0EFC               	movlw	-4
 17707  01386E  0060  F06F  FFE3   	movff	_width,plusw1
 17708  013874  0EFD               	movlw	-3
 17709  013876  0060  F073  FFE3   	movff	_width+1,plusw1
 17710                           
 17711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 17712                           ;stkvar	_s @ sp[(-18)+12]
 17713  01387C  0EFA               	movlw	-6
 17714  01387E  006F FF8C  F032    	movff	plusw1,btemp
 17715  013884  0EFB               	movlw	-5
 17716  013886  50E3               	movf	plusw1,w,c
 17717  013888  1032               	iorwf	btemp^0,w,c
 17718  01388A  A4D8               	btfss	status,2,c
 17719  01388C  D002               	goto	u10740
 17720  01388E  A41F               	btfss	_flags^0,2,c
 17721  013890  D00A               	goto	l10200
 17722  013892                     u10740:
 17723                           
 17724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 17725                           ;stkvar	_w @ sp[(-18)+14]
 17726  013892  50E1               	movf	fsr1l,w,c
 17727  013894  0FFC               	addlw	-4
 17728  013896  6ED9               	movwf	fsr2l,c
 17729  013898  50E2               	movf	fsr1h,w,c
 17730  01389A  6EDA               	movwf	fsr2h,c
 17731  01389C  0EFF               	movlw	255
 17732  01389E  22DA               	addwfc	fsr2h,f,c
 17733  0138A0  06DE               	decf	postinc2,f,c
 17734  0138A2  0E00               	movlw	0
 17735  0138A4  5ADD               	subwfb	postdec2,f,c
 17736  0138A6                     l10200:
 17737                           
 17738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 17739  0138A6  0E4F               	movlw	79
 17740  0138A8  6E3C               	movwf	(btemp+10)^0,c
 17741  0138AA  0E00               	movlw	0
 17742  0138AC  6E3D               	movwf	(btemp+11)^0,c
 17743                           
 17744                           ;stkvar	_i @ sp[(-18)+10]
 17745  0138AE  0EF8               	movlw	-8
 17746  0138B0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17747  0138B6  0EF9               	movlw	-7
 17748  0138B8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17749                           
 17750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 17751  0138BE  0102               	movlb	2	; () banked
 17752  0138C0  6B8F               	clrf	(_dbuf+79)& (0+255),b
 17753                           
 17754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17755  0138C2  D109               	goto	l10214
 17756  0138C4                     l10204:
 17757                           
 17758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 17759                           ;stkvar	_i @ sp[(-18)+10]
 17760  0138C4  50E1               	movf	fsr1l,w,c
 17761  0138C6  0FF8               	addlw	-8
 17762  0138C8  6ED9               	movwf	fsr2l,c
 17763  0138CA  50E2               	movf	fsr1h,w,c
 17764  0138CC  6EDA               	movwf	fsr2h,c
 17765  0138CE  0EFF               	movlw	255
 17766  0138D0  22DA               	addwfc	fsr2h,f,c
 17767  0138D2  06DE               	decf	postinc2,f,c
 17768  0138D4  0E00               	movlw	0
 17769  0138D6  5ADD               	subwfb	postdec2,f,c
 17770                           
 17771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 17772  0138D8  0E0A               	movlw	10
 17773  0138DA  6EE6               	movwf	postinc1,c
 17774  0138DC  0E00               	movlw	0
 17775  0138DE  6EE6               	movwf	postinc1,c
 17776  0138E0  0E00               	movlw	0
 17777  0138E2  6EE6               	movwf	postinc1,c
 17778  0138E4  0E00               	movlw	0
 17779  0138E6  6EE6               	movwf	postinc1,c
 17780  0138E8  0E00               	movlw	0
 17781  0138EA  6EE6               	movwf	postinc1,c
 17782  0138EC  0E00               	movlw	0
 17783  0138EE  6EE6               	movwf	postinc1,c
 17784  0138F0  0E00               	movlw	0
 17785  0138F2  6EE6               	movwf	postinc1,c
 17786  0138F4  0E00               	movlw	0
 17787  0138F6  6EE6               	movwf	postinc1,c
 17788                           
 17789                           ;stkvar	_n @ sp[(-26)+2]
 17790  0138F8  50E1               	movf	fsr1l,w,c
 17791  0138FA  0FE8               	addlw	-24
 17792  0138FC  6ED9               	movwf	fsr2l,c
 17793  0138FE  50E2               	movf	fsr1h,w,c
 17794  013900  6EDA               	movwf	fsr2h,c
 17795  013902  0EFF               	movlw	255
 17796  013904  22DA               	addwfc	fsr2h,f,c
 17797  013906  006F FF7B FFE6     	movff	postinc2,postinc1
 17798  01390C  006F FF7B FFE6     	movff	postinc2,postinc1
 17799  013912  006F FF7B FFE6     	movff	postinc2,postinc1
 17800  013918  006F FF7B FFE6     	movff	postinc2,postinc1
 17801  01391E  006F FF7B FFE6     	movff	postinc2,postinc1
 17802  013924  006F FF7B FFE6     	movff	postinc2,postinc1
 17803  01392A  006F FF7B FFE6     	movff	postinc2,postinc1
 17804  013930  006F FF7B FFE6     	movff	postinc2,postinc1
 17805  013936  ECDE  F0A8         	call	___aomod	;wreg free
 17806  01393A  52E5               	movf	postdec1,f,c
 17807  01393C  006F FF9C  F049    	movff	indf1,btemp+23
 17808  013942  52E5               	movf	postdec1,f,c
 17809  013944  006F FF9C  F048    	movff	indf1,btemp+22
 17810  01394A  52E5               	movf	postdec1,f,c
 17811  01394C  006F FF9C  F047    	movff	indf1,btemp+21
 17812  013952  52E5               	movf	postdec1,f,c
 17813  013954  006F FF9C  F046    	movff	indf1,btemp+20
 17814  01395A  52E5               	movf	postdec1,f,c
 17815  01395C  006F FF9C  F045    	movff	indf1,btemp+19
 17816  013962  52E5               	movf	postdec1,f,c
 17817  013964  006F FF9C  F044    	movff	indf1,btemp+18
 17818  01396A  52E5               	movf	postdec1,f,c
 17819  01396C  006F FF9C  F043    	movff	indf1,btemp+17
 17820  013972  52E5               	movf	postdec1,f,c
 17821  013974  006F FF9C  F042    	movff	indf1,btemp+16
 17822  01397A  0EF8               	movlw	248
 17823  01397C  26E1               	addwf	fsr1l,f,c
 17824  01397E  0EFF               	movlw	255
 17825  013980  22E2               	addwfc	fsr1h,f,c
 17826  013982  0060  F108  F03C   	movff	btemp+16,btemp+10
 17827  013988  0060  F10C  F03D   	movff	btemp+17,btemp+11
 17828  01398E  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 17829  013994  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 17830  01399A  EC12  F0BD         	call	_abs	;wreg free
 17831  01399E  0E30               	movlw	48
 17832  0139A0  2632               	addwf	btemp^0,f,c
 17833                           
 17834                           ;stkvar	_i @ sp[(-18)+10]
 17835  0139A2  0EF8               	movlw	-8
 17836  0139A4  006F FF8C  F03C    	movff	plusw1,btemp+10
 17837  0139AA  0EF9               	movlw	-7
 17838  0139AC  006F FF8C  F03D    	movff	plusw1,btemp+11
 17839  0139B2  0E40               	movlw	low _dbuf
 17840  0139B4  243C               	addwf	(btemp+10)^0,w,c
 17841  0139B6  6ED9               	movwf	fsr2l,c
 17842  0139B8  0E02               	movlw	high _dbuf
 17843  0139BA  203D               	addwfc	(btemp+11)^0,w,c
 17844  0139BC  6EDA               	movwf	fsr2h,c
 17845  0139BE  0060  F0CB  FFDF   	movff	btemp,indf2
 17846                           
 17847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 17848                           ;stkvar	_p @ sp[(-18)+16]
 17849  0139C4  50E1               	movf	fsr1l,w,c
 17850  0139C6  0FFE               	addlw	-2
 17851  0139C8  6ED9               	movwf	fsr2l,c
 17852  0139CA  50E2               	movf	fsr1h,w,c
 17853  0139CC  6EDA               	movwf	fsr2h,c
 17854  0139CE  0EFF               	movlw	255
 17855  0139D0  22DA               	addwfc	fsr2h,f,c
 17856  0139D2  06DE               	decf	postinc2,f,c
 17857  0139D4  0E00               	movlw	0
 17858  0139D6  5ADD               	subwfb	postdec2,f,c
 17859                           
 17860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 17861                           ;stkvar	_w @ sp[(-18)+14]
 17862  0139D8  50E1               	movf	fsr1l,w,c
 17863  0139DA  0FFC               	addlw	-4
 17864  0139DC  6ED9               	movwf	fsr2l,c
 17865  0139DE  50E2               	movf	fsr1h,w,c
 17866  0139E0  6EDA               	movwf	fsr2h,c
 17867  0139E2  0EFF               	movlw	255
 17868  0139E4  22DA               	addwfc	fsr2h,f,c
 17869  0139E6  06DE               	decf	postinc2,f,c
 17870  0139E8  0E00               	movlw	0
 17871  0139EA  5ADD               	subwfb	postdec2,f,c
 17872                           
 17873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 17874  0139EC  0E0A               	movlw	10
 17875  0139EE  6EE6               	movwf	postinc1,c
 17876  0139F0  0E00               	movlw	0
 17877  0139F2  6EE6               	movwf	postinc1,c
 17878  0139F4  0E00               	movlw	0
 17879  0139F6  6EE6               	movwf	postinc1,c
 17880  0139F8  0E00               	movlw	0
 17881  0139FA  6EE6               	movwf	postinc1,c
 17882  0139FC  0E00               	movlw	0
 17883  0139FE  6EE6               	movwf	postinc1,c
 17884  013A00  0E00               	movlw	0
 17885  013A02  6EE6               	movwf	postinc1,c
 17886  013A04  0E00               	movlw	0
 17887  013A06  6EE6               	movwf	postinc1,c
 17888  013A08  0E00               	movlw	0
 17889  013A0A  6EE6               	movwf	postinc1,c
 17890                           
 17891                           ;stkvar	_n @ sp[(-26)+2]
 17892  013A0C  50E1               	movf	fsr1l,w,c
 17893  013A0E  0FE8               	addlw	-24
 17894  013A10  6ED9               	movwf	fsr2l,c
 17895  013A12  50E2               	movf	fsr1h,w,c
 17896  013A14  6EDA               	movwf	fsr2h,c
 17897  013A16  0EFF               	movlw	255
 17898  013A18  22DA               	addwfc	fsr2h,f,c
 17899  013A1A  006F FF7B FFE6     	movff	postinc2,postinc1
 17900  013A20  006F FF7B FFE6     	movff	postinc2,postinc1
 17901  013A26  006F FF7B FFE6     	movff	postinc2,postinc1
 17902  013A2C  006F FF7B FFE6     	movff	postinc2,postinc1
 17903  013A32  006F FF7B FFE6     	movff	postinc2,postinc1
 17904  013A38  006F FF7B FFE6     	movff	postinc2,postinc1
 17905  013A3E  006F FF7B FFE6     	movff	postinc2,postinc1
 17906  013A44  006F FF7B FFE6     	movff	postinc2,postinc1
 17907  013A4A  EC64  F0A6         	call	___aodiv	;wreg free
 17908  013A4E  52E5               	movf	postdec1,f,c
 17909  013A50  006F FF9C  F049    	movff	indf1,btemp+23
 17910  013A56  52E5               	movf	postdec1,f,c
 17911  013A58  006F FF9C  F048    	movff	indf1,btemp+22
 17912  013A5E  52E5               	movf	postdec1,f,c
 17913  013A60  006F FF9C  F047    	movff	indf1,btemp+21
 17914  013A66  52E5               	movf	postdec1,f,c
 17915  013A68  006F FF9C  F046    	movff	indf1,btemp+20
 17916  013A6E  52E5               	movf	postdec1,f,c
 17917  013A70  006F FF9C  F045    	movff	indf1,btemp+19
 17918  013A76  52E5               	movf	postdec1,f,c
 17919  013A78  006F FF9C  F044    	movff	indf1,btemp+18
 17920  013A7E  52E5               	movf	postdec1,f,c
 17921  013A80  006F FF9C  F043    	movff	indf1,btemp+17
 17922  013A86  52E5               	movf	postdec1,f,c
 17923  013A88  006F FF9C  F042    	movff	indf1,btemp+16
 17924  013A8E  0EF8               	movlw	248
 17925  013A90  26E1               	addwf	fsr1l,f,c
 17926  013A92  0EFF               	movlw	255
 17927  013A94  22E2               	addwfc	fsr1h,f,c
 17928                           
 17929                           ;stkvar	_n @ sp[(-18)+2]
 17930  013A96  0EF0               	movlw	-16
 17931  013A98  0060  F10B  FFE3   	movff	btemp+16,plusw1
 17932  013A9E  0EF1               	movlw	-15
 17933  013AA0  0060  F10F  FFE3   	movff	btemp+17,plusw1
 17934  013AA6  0EF2               	movlw	-14
 17935  013AA8  0060  F113  FFE3   	movff	btemp+18,plusw1
 17936  013AAE  0EF3               	movlw	-13
 17937  013AB0  0060  F117  FFE3   	movff	btemp+19,plusw1
 17938  013AB6  0EF4               	movlw	-12
 17939  013AB8  0060  F11B  FFE3   	movff	btemp+20,plusw1
 17940  013ABE  0EF5               	movlw	-11
 17941  013AC0  0060  F11F  FFE3   	movff	btemp+21,plusw1
 17942  013AC6  0EF6               	movlw	-10
 17943  013AC8  0060  F123  FFE3   	movff	btemp+22,plusw1
 17944  013ACE  0EF7               	movlw	-9
 17945  013AD0  0060  F127  FFE3   	movff	btemp+23,plusw1
 17946  013AD6                     l10214:
 17947                           
 17948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17949                           ;stkvar	_i @ sp[(-18)+10]
 17950  013AD6  0EF9               	movlw	-7
 17951  013AD8  BEE3               	btfsc	plusw1,7,c
 17952  013ADA  D036               	goto	u10790
 17953  013ADC  0EF9               	movlw	-7
 17954  013ADE  50E3               	movf	plusw1,w,c
 17955  013AE0  E104               	bnz	u10750
 17956  013AE2  0EF8               	movlw	-8
 17957  013AE4  04E3               	decf	plusw1,w,c
 17958  013AE6  A0D8               	btfss	status,0,c
 17959  013AE8  D02F               	goto	u10790
 17960  013AEA                     u10750:
 17961                           
 17962                           ;stkvar	_n @ sp[(-18)+2]
 17963  013AEA  0EF0               	movlw	-16
 17964  013AEC  50E3               	movf	plusw1,w,c
 17965  013AEE  E115               	bnz	u10761
 17966  013AF0  0EF1               	movlw	-15
 17967  013AF2  50E3               	movf	plusw1,w,c
 17968  013AF4  E112               	bnz	u10761
 17969  013AF6  0EF2               	movlw	-14
 17970  013AF8  50E3               	movf	plusw1,w,c
 17971  013AFA  E10F               	bnz	u10761
 17972  013AFC  0EF3               	movlw	-13
 17973  013AFE  50E3               	movf	plusw1,w,c
 17974  013B00  E10C               	bnz	u10761
 17975  013B02  0EF4               	movlw	-12
 17976  013B04  50E3               	movf	plusw1,w,c
 17977  013B06  E109               	bnz	u10761
 17978  013B08  0EF5               	movlw	-11
 17979  013B0A  50E3               	movf	plusw1,w,c
 17980  013B0C  E106               	bnz	u10761
 17981  013B0E  0EF6               	movlw	-10
 17982  013B10  50E3               	movf	plusw1,w,c
 17983  013B12  E103               	bnz	u10761
 17984  013B14  0EF7               	movlw	-9
 17985  013B16  50E3               	movf	plusw1,w,c
 17986  013B18  A4D8               	btfss	status,2,c
 17987  013B1A                     u10761:
 17988  013B1A  D6D4               	goto	l10204
 17989                           
 17990                           ;stkvar	_p @ sp[(-18)+16]
 17991  013B1C  0EFF               	movlw	-1
 17992  013B1E  BEE3               	btfsc	plusw1,7,c
 17993  013B20  D007               	goto	u10770
 17994  013B22  0EFF               	movlw	-1
 17995  013B24  50E3               	movf	plusw1,w,c
 17996  013B26  E103               	bnz	u10771
 17997  013B28  0EFE               	movlw	-2
 17998  013B2A  04E3               	decf	plusw1,w,c
 17999  013B2C  B0D8               	btfsc	status,0,c
 18000  013B2E                     u10771:
 18001  013B2E  D6CA               	goto	l10204
 18002  013B30                     u10770:
 18003                           
 18004                           ;stkvar	_w @ sp[(-18)+14]
 18005  013B30  0EFD               	movlw	-3
 18006  013B32  BEE3               	btfsc	plusw1,7,c
 18007  013B34  D009               	goto	u10790
 18008  013B36  0EFD               	movlw	-3
 18009  013B38  50E3               	movf	plusw1,w,c
 18010  013B3A  E104               	bnz	u10780
 18011  013B3C  0EFC               	movlw	-4
 18012  013B3E  04E3               	decf	plusw1,w,c
 18013  013B40  A0D8               	btfss	status,0,c
 18014  013B42  D002               	goto	u10790
 18015  013B44                     u10780:
 18016  013B44  B21F               	btfsc	_flags^0,1,c
 18017  013B46  D6BE               	goto	l10204
 18018  013B48                     u10790:
 18019                           
 18020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 18021                           ;stkvar	_s @ sp[(-18)+12]
 18022  013B48  0EFA               	movlw	-6
 18023  013B4A  006F FF8C  F032    	movff	plusw1,btemp
 18024  013B50  0EFB               	movlw	-5
 18025  013B52  50E3               	movf	plusw1,w,c
 18026  013B54  1032               	iorwf	btemp^0,w,c
 18027  013B56  A4D8               	btfss	status,2,c
 18028  013B58  D002               	goto	u10810
 18029  013B5A  A41F               	btfss	_flags^0,2,c
 18030  013B5C  D033               	goto	l10238
 18031  013B5E                     u10810:
 18032                           
 18033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 18034                           ;stkvar	_i @ sp[(-18)+10]
 18035  013B5E  50E1               	movf	fsr1l,w,c
 18036  013B60  0FF8               	addlw	-8
 18037  013B62  6ED9               	movwf	fsr2l,c
 18038  013B64  50E2               	movf	fsr1h,w,c
 18039  013B66  6EDA               	movwf	fsr2h,c
 18040  013B68  0EFF               	movlw	255
 18041  013B6A  22DA               	addwfc	fsr2h,f,c
 18042  013B6C  06DE               	decf	postinc2,f,c
 18043  013B6E  0E00               	movlw	0
 18044  013B70  5ADD               	subwfb	postdec2,f,c
 18045                           
 18046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 18047                           ;stkvar	_s @ sp[(-18)+12]
 18048  013B72  0EFA               	movlw	-6
 18049  013B74  006F FF8C  F032    	movff	plusw1,btemp
 18050  013B7A  0EFB               	movlw	-5
 18051  013B7C  50E3               	movf	plusw1,w,c
 18052  013B7E  1032               	iorwf	btemp^0,w,c
 18053  013B80  A4D8               	btfss	status,2,c
 18054  013B82  D002               	goto	l10234
 18055  013B84  0E2B               	movlw	43
 18056  013B86  D001               	goto	L15
 18057  013B88                     l10234:
 18058  013B88  0E2D               	movlw	45
 18059  013B8A                     L15:
 18060  013B8A  6E3C               	movwf	(btemp+10)^0,c
 18061  013B8C  0E00               	movlw	0
 18062  013B8E  6E3D               	movwf	(btemp+11)^0,c
 18063                           
 18064                           ;stkvar	_dtoa$4334 @ sp[(-18)+0]
 18065  013B90  0EEE               	movlw	-18
 18066  013B92  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18067  013B98  0EEF               	movlw	-17
 18068  013B9A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18069                           
 18070                           ;stkvar	_dtoa$4334 @ sp[(-18)+0]
 18071                           ;stkvar	_i @ sp[(-18)+10]
 18072  013BA0  0EF8               	movlw	-8
 18073  013BA2  006F FF8C  F03C    	movff	plusw1,btemp+10
 18074  013BA8  0EF9               	movlw	-7
 18075  013BAA  006F FF8C  F03D    	movff	plusw1,btemp+11
 18076  013BB0  0E40               	movlw	low _dbuf
 18077  013BB2  243C               	addwf	(btemp+10)^0,w,c
 18078  013BB4  6ED9               	movwf	fsr2l,c
 18079  013BB6  0E02               	movlw	high _dbuf
 18080  013BB8  203D               	addwfc	(btemp+11)^0,w,c
 18081  013BBA  6EDA               	movwf	fsr2h,c
 18082  013BBC  0EEE               	movlw	-18
 18083  013BBE  006F FF8F FFDF     	movff	plusw1,indf2
 18084  013BC4                     l10238:
 18085                           
 18086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 18087                           ;stkvar	_w @ sp[(-18)+14]
 18088  013BC4  0EFC               	movlw	-4
 18089  013BC6  006F FF8F FFE6     	movff	plusw1,postinc1
 18090  013BCC  006F FF8F FFE6     	movff	plusw1,postinc1
 18091                           
 18092                           ;stkvar	_i @ sp[(-20)+10]
 18093  013BD2  0E40               	movlw	low _dbuf
 18094  013BD4  6E3C               	movwf	(btemp+10)^0,c
 18095  013BD6  0E02               	movlw	high _dbuf
 18096  013BD8  6E3D               	movwf	(btemp+11)^0,c
 18097  013BDA  0EF6               	movlw	-10
 18098  013BDC  50E3               	movf	plusw1,w,c
 18099  013BDE  263C               	addwf	(btemp+10)^0,f,c
 18100  013BE0  0EF7               	movlw	-9
 18101  013BE2  50E3               	movf	plusw1,w,c
 18102  013BE4  223D               	addwfc	(btemp+11)^0,f,c
 18103  013BE6  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 18104  013BEC  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 18105                           
 18106                           ;stkvar	_fp @ sp[(-22)+-2]
 18107  013BF2  0EE8               	movlw	-24
 18108  013BF4  006F FF8F FFE6     	movff	plusw1,postinc1
 18109  013BFA  006F FF8F FFE6     	movff	plusw1,postinc1
 18110  013C00  EC0D  F0B3         	call	_pad	;wreg free
 18111                           
 18112                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 18113  013C04  0EE4               	movlw	228
 18114  013C06  26E1               	addwf	fsr1l,f,c
 18115  013C08  0EFF               	movlw	255
 18116  013C0A  22E2               	addwfc	fsr1h,f,c
 18117  013C0C  0012               	return		;funcret
 18118  013C0E                     __end_of_dtoa:
 18119                           	opt callstack 0
 18120                           
 18121 ;; *************** function _abs *****************
 18122 ;; Defined at:
 18123 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 18124 ;; Parameters:    Size  Location     Type
 18125 ;;  a               2  [STACK] int 
 18126 ;; Auto vars:     Size  Location     Type
 18127 ;;		None
 18128 ;; Return value:  Size  Location     Type
 18129 ;;                  2  [STACK] int 
 18130 ;; Registers used:
 18131 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 18132 ;; Tracked objects:
 18133 ;;		On entry : 0/2
 18134 ;;		On exit  : 0/0
 18135 ;;		Unchanged: 0/0
 18136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18141 ;;Total ram usage:        0 bytes
 18142 ;; Hardware stack levels used:    1
 18143 ;; Hardware stack levels required when called:    6
 18144 ;; This function calls:
 18145 ;;		Nothing
 18146 ;; This function is called by:
 18147 ;;		_dtoa
 18148 ;; This function uses a reentrant model
 18149 ;;
 18150                           
 18151                           	psect	text60
 18152  017A24                     __ptext60:
 18153                           	opt callstack 0
 18154  017A24                     _abs:
 18155                           	opt callstack 17
 18156                           
 18157                           ;stkvar	_a @ sp[(0)+-2]
 18158                           
 18159                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18160                           ;incstack = 0
 18161  017A24  0EFF               	movlw	-1
 18162  017A26  BEE3               	btfsc	plusw1,7,c
 18163  017A28  D007               	goto	u9310
 18164  017A2A  0EFF               	movlw	-1
 18165  017A2C  50E3               	movf	plusw1,w,c
 18166  017A2E  E112               	bnz	l9470
 18167  017A30  0EFE               	movlw	-2
 18168  017A32  04E3               	decf	plusw1,w,c
 18169  017A34  B0D8               	btfsc	status,0,c
 18170  017A36  D00E               	goto	l9470
 18171  017A38                     u9310:
 18172                           
 18173                           ;stkvar	_a @ sp[(0)+-2]
 18174  017A38  0EFE               	movlw	-2
 18175  017A3A  006F FF8C  F032    	movff	plusw1,btemp
 18176  017A40  1E32               	comf	btemp^0,f,c
 18177  017A42  0EFF               	movlw	-1
 18178  017A44  006F FF8C  F033    	movff	plusw1,btemp+1
 18179  017A4A  1E33               	comf	(btemp+1)^0,f,c
 18180  017A4C  2A32               	incf	btemp^0,f,c
 18181  017A4E  B4D8               	btfsc	status,2,c
 18182  017A50  2A33               	incf	(btemp+1)^0,f,c
 18183  017A52  D008               	goto	l2726
 18184  017A54                     l9470:
 18185                           
 18186                           ;stkvar	_a @ sp[(0)+-2]
 18187  017A54  0EFE               	movlw	-2
 18188  017A56  006F FF8C  F032    	movff	plusw1,btemp
 18189  017A5C  0EFF               	movlw	-1
 18190  017A5E  006F FF8C  F033    	movff	plusw1,btemp+1
 18191  017A64                     l2726:
 18192                           
 18193                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 18194  017A64  52E5               	movf	postdec1,f,c
 18195  017A66  52E5               	movf	postdec1,f,c
 18196  017A68  0012               	return		;funcret
 18197  017A6A                     __end_of_abs:
 18198                           	opt callstack 0
 18199                           
 18200 ;; *************** function ___aomod *****************
 18201 ;; Defined at:
 18202 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 18203 ;; Parameters:    Size  Location     Type
 18204 ;;  dividend        8  [STACK] long long 
 18205 ;;  divisor         8  [STACK] long long 
 18206 ;; Auto vars:     Size  Location     Type
 18207 ;;  sign            1  [STACK] unsigned char 
 18208 ;;  counter         1  [STACK] unsigned char 
 18209 ;; Return value:  Size  Location     Type
 18210 ;;                  8  [STACK] long long 
 18211 ;; Registers used:
 18212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18213 ;; Tracked objects:
 18214 ;;		On entry : 0/2
 18215 ;;		On exit  : 0/0
 18216 ;;		Unchanged: 0/0
 18217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18222 ;;Total ram usage:        0 bytes
 18223 ;; Hardware stack levels used:    1
 18224 ;; Hardware stack levels required when called:    6
 18225 ;; This function calls:
 18226 ;;		Nothing
 18227 ;; This function is called by:
 18228 ;;		_dtoa
 18229 ;; This function uses a reentrant model
 18230 ;;
 18231                           
 18232                           	psect	text61
 18233  0151BC                     __ptext61:
 18234                           	opt callstack 0
 18235  0151BC                     ___aomod:
 18236                           	opt callstack 0
 18237                           
 18238                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18239  0151BC  52E6               	movf	postinc1,f,c
 18240  0151BE  52E6               	movf	postinc1,f,c
 18241                           
 18242                           ;stkvar	_sign @ sp[(-2)+0]
 18243                           
 18244                           ;incstack = 0
 18245  0151C0  0EFE               	movlw	-2
 18246  0151C2  6AE3               	clrf	plusw1,c
 18247                           
 18248                           ;stkvar	_dividend @ sp[(-2)+-8]
 18249  0151C4  0EFD               	movlw	-3
 18250  0151C6  AEE3               	btfss	plusw1,7,c
 18251  0151C8  D028               	goto	l9628
 18252                           
 18253                           ;stkvar	_dividend @ sp[(-2)+-8]
 18254                           ;stkvar	_dividend @ sp[(-2)+-8]
 18255  0151CA  0EF6               	movlw	-10
 18256  0151CC  6CE3               	negf	plusw1,c
 18257  0151CE  0EF7               	movlw	-9
 18258  0151D0  1EE3               	comf	plusw1,f,c
 18259  0151D2  0EF8               	movlw	-8
 18260  0151D4  1EE3               	comf	plusw1,f,c
 18261  0151D6  0EF9               	movlw	-7
 18262  0151D8  1EE3               	comf	plusw1,f,c
 18263  0151DA  0EFA               	movlw	-6
 18264  0151DC  1EE3               	comf	plusw1,f,c
 18265  0151DE  0EFB               	movlw	-5
 18266  0151E0  1EE3               	comf	plusw1,f,c
 18267  0151E2  0EFC               	movlw	-4
 18268  0151E4  1EE3               	comf	plusw1,f,c
 18269  0151E6  0EFD               	movlw	-3
 18270  0151E8  1EE3               	comf	plusw1,f,c
 18271  0151EA  E314               	bnc	u9740
 18272  0151EC  0EF7               	movlw	-9
 18273  0151EE  2AE3               	incf	plusw1,f,c
 18274  0151F0  E311               	bnc	u9740
 18275  0151F2  0EF8               	movlw	-8
 18276  0151F4  2AE3               	incf	plusw1,f,c
 18277  0151F6  E30E               	bnc	u9740
 18278  0151F8  0EF9               	movlw	-7
 18279  0151FA  2AE3               	incf	plusw1,f,c
 18280  0151FC  E30B               	bnc	u9740
 18281  0151FE  0EFA               	movlw	-6
 18282  015200  2AE3               	incf	plusw1,f,c
 18283  015202  E308               	bnc	u9740
 18284  015204  0EFB               	movlw	-5
 18285  015206  2AE3               	incf	plusw1,f,c
 18286  015208  E305               	bnc	u9740
 18287  01520A  0EFC               	movlw	-4
 18288  01520C  2AE3               	incf	plusw1,f,c
 18289  01520E  E302               	bnc	u9740
 18290  015210  0EFD               	movlw	-3
 18291  015212  2AE3               	incf	plusw1,f,c
 18292  015214                     u9740:
 18293                           
 18294                           ;stkvar	_sign @ sp[(-2)+0]
 18295  015214  0EFE               	movlw	-2
 18296  015216  6AE3               	clrf	plusw1,c
 18297  015218  2AE3               	incf	plusw1,f,c
 18298  01521A                     l9628:
 18299                           
 18300                           ;stkvar	_divisor @ sp[(-2)+-16]
 18301  01521A  0EF5               	movlw	-11
 18302  01521C  AEE3               	btfss	plusw1,7,c
 18303  01521E  D025               	goto	u9760
 18304                           
 18305                           ;stkvar	_divisor @ sp[(-2)+-16]
 18306                           ;stkvar	_divisor @ sp[(-2)+-16]
 18307  015220  0EEE               	movlw	-18
 18308  015222  6CE3               	negf	plusw1,c
 18309  015224  0EEF               	movlw	-17
 18310  015226  1EE3               	comf	plusw1,f,c
 18311  015228  0EF0               	movlw	-16
 18312  01522A  1EE3               	comf	plusw1,f,c
 18313  01522C  0EF1               	movlw	-15
 18314  01522E  1EE3               	comf	plusw1,f,c
 18315  015230  0EF2               	movlw	-14
 18316  015232  1EE3               	comf	plusw1,f,c
 18317  015234  0EF3               	movlw	-13
 18318  015236  1EE3               	comf	plusw1,f,c
 18319  015238  0EF4               	movlw	-12
 18320  01523A  1EE3               	comf	plusw1,f,c
 18321  01523C  0EF5               	movlw	-11
 18322  01523E  1EE3               	comf	plusw1,f,c
 18323  015240  E314               	bnc	u9760
 18324  015242  0EEF               	movlw	-17
 18325  015244  2AE3               	incf	plusw1,f,c
 18326  015246  E311               	bnc	u9760
 18327  015248  0EF0               	movlw	-16
 18328  01524A  2AE3               	incf	plusw1,f,c
 18329  01524C  E30E               	bnc	u9760
 18330  01524E  0EF1               	movlw	-15
 18331  015250  2AE3               	incf	plusw1,f,c
 18332  015252  E30B               	bnc	u9760
 18333  015254  0EF2               	movlw	-14
 18334  015256  2AE3               	incf	plusw1,f,c
 18335  015258  E308               	bnc	u9760
 18336  01525A  0EF3               	movlw	-13
 18337  01525C  2AE3               	incf	plusw1,f,c
 18338  01525E  E305               	bnc	u9760
 18339  015260  0EF4               	movlw	-12
 18340  015262  2AE3               	incf	plusw1,f,c
 18341  015264  E302               	bnc	u9760
 18342  015266  0EF5               	movlw	-11
 18343  015268  2AE3               	incf	plusw1,f,c
 18344  01526A                     u9760:
 18345                           
 18346                           ;stkvar	_divisor @ sp[(-2)+-16]
 18347  01526A  0EEE               	movlw	-18
 18348  01526C  50E3               	movf	plusw1,w,c
 18349  01526E  E116               	bnz	u9770
 18350  015270  0EEF               	movlw	-17
 18351  015272  50E3               	movf	plusw1,w,c
 18352  015274  E113               	bnz	u9770
 18353  015276  0EF0               	movlw	-16
 18354  015278  50E3               	movf	plusw1,w,c
 18355  01527A  E110               	bnz	u9770
 18356  01527C  0EF1               	movlw	-15
 18357  01527E  50E3               	movf	plusw1,w,c
 18358  015280  E10D               	bnz	u9770
 18359  015282  0EF2               	movlw	-14
 18360  015284  50E3               	movf	plusw1,w,c
 18361  015286  E10A               	bnz	u9770
 18362  015288  0EF3               	movlw	-13
 18363  01528A  50E3               	movf	plusw1,w,c
 18364  01528C  E107               	bnz	u9770
 18365  01528E  0EF4               	movlw	-12
 18366  015290  50E3               	movf	plusw1,w,c
 18367  015292  E104               	bnz	u9770
 18368  015294  0EF5               	movlw	-11
 18369  015296  50E3               	movf	plusw1,w,c
 18370  015298  B4D8               	btfsc	status,2,c
 18371  01529A  D075               	goto	u9800
 18372  01529C                     u9770:
 18373                           
 18374                           ;stkvar	_counter @ sp[(-2)+1]
 18375  01529C  0EFF               	movlw	-1
 18376  01529E  6AE3               	clrf	plusw1,c
 18377  0152A0  D012               	goto	L16
 18378  0152A2                     l9636:
 18379                           
 18380                           ;stkvar	_divisor @ sp[(-2)+-16]
 18381  0152A2  90D8               	bcf	status,0,c
 18382  0152A4  0EEE               	movlw	-18
 18383  0152A6  36E3               	rlcf	plusw1,f,c
 18384  0152A8  0EEF               	movlw	-17
 18385  0152AA  36E3               	rlcf	plusw1,f,c
 18386  0152AC  0EF0               	movlw	-16
 18387  0152AE  36E3               	rlcf	plusw1,f,c
 18388  0152B0  0EF1               	movlw	-15
 18389  0152B2  36E3               	rlcf	plusw1,f,c
 18390  0152B4  0EF2               	movlw	-14
 18391  0152B6  36E3               	rlcf	plusw1,f,c
 18392  0152B8  0EF3               	movlw	-13
 18393  0152BA  36E3               	rlcf	plusw1,f,c
 18394  0152BC  0EF4               	movlw	-12
 18395  0152BE  36E3               	rlcf	plusw1,f,c
 18396  0152C0  0EF5               	movlw	-11
 18397  0152C2  36E3               	rlcf	plusw1,f,c
 18398                           
 18399                           ;stkvar	_counter @ sp[(-2)+1]
 18400  0152C4  0EFF               	movlw	-1
 18401  0152C6                     L16:
 18402  0152C6  2AE3               	incf	plusw1,f,c
 18403                           
 18404                           ;stkvar	_divisor @ sp[(-2)+-16]
 18405  0152C8  0EF5               	movlw	-11
 18406  0152CA  AEE3               	btfss	plusw1,7,c
 18407  0152CC  D7EA               	goto	l9636
 18408  0152CE                     u9780:
 18409                           
 18410                           ;stkvar	_divisor @ sp[(-2)+-16]
 18411                           ;stkvar	_dividend @ sp[(-2)+-8]
 18412  0152CE  50E1               	movf	fsr1l,w,c
 18413  0152D0  0FF6               	addlw	-10
 18414  0152D2  6ED9               	movwf	fsr2l,c
 18415  0152D4  50E2               	movf	fsr1h,w,c
 18416  0152D6  6EDA               	movwf	fsr2h,c
 18417  0152D8  0EFF               	movlw	255
 18418  0152DA  22DA               	addwfc	fsr2h,f,c
 18419  0152DC  0EEE               	movlw	-18
 18420  0152DE  50E3               	movf	plusw1,w,c
 18421  0152E0  5CDE               	subwf	postinc2,w,c
 18422  0152E2  0EEF               	movlw	-17
 18423  0152E4  50E3               	movf	plusw1,w,c
 18424  0152E6  58DE               	subwfb	postinc2,w,c
 18425  0152E8  0EF0               	movlw	-16
 18426  0152EA  50E3               	movf	plusw1,w,c
 18427  0152EC  58DE               	subwfb	postinc2,w,c
 18428  0152EE  0EF1               	movlw	-15
 18429  0152F0  50E3               	movf	plusw1,w,c
 18430  0152F2  58DE               	subwfb	postinc2,w,c
 18431  0152F4  0EF2               	movlw	-14
 18432  0152F6  50E3               	movf	plusw1,w,c
 18433  0152F8  58DE               	subwfb	postinc2,w,c
 18434  0152FA  0EF3               	movlw	-13
 18435  0152FC  50E3               	movf	plusw1,w,c
 18436  0152FE  58DE               	subwfb	postinc2,w,c
 18437  015300  0EF4               	movlw	-12
 18438  015302  50E3               	movf	plusw1,w,c
 18439  015304  58DE               	subwfb	postinc2,w,c
 18440  015306  0EF5               	movlw	-11
 18441  015308  50E3               	movf	plusw1,w,c
 18442  01530A  58DE               	subwfb	postinc2,w,c
 18443  01530C  A0D8               	btfss	status,0,c
 18444  01530E  D01F               	goto	l9644
 18445                           
 18446                           ;stkvar	_divisor @ sp[(-2)+-16]
 18447                           ;stkvar	_dividend @ sp[(-2)+-8]
 18448  015310  50E1               	movf	fsr1l,w,c
 18449  015312  0FF6               	addlw	-10
 18450  015314  6ED9               	movwf	fsr2l,c
 18451  015316  50E2               	movf	fsr1h,w,c
 18452  015318  6EDA               	movwf	fsr2h,c
 18453  01531A  0EFF               	movlw	255
 18454  01531C  22DA               	addwfc	fsr2h,f,c
 18455  01531E  0EEE               	movlw	-18
 18456  015320  50E3               	movf	plusw1,w,c
 18457  015322  5EDE               	subwf	postinc2,f,c
 18458  015324  0EEF               	movlw	-17
 18459  015326  50E3               	movf	plusw1,w,c
 18460  015328  5ADE               	subwfb	postinc2,f,c
 18461  01532A  0EF0               	movlw	-16
 18462  01532C  50E3               	movf	plusw1,w,c
 18463  01532E  5ADE               	subwfb	postinc2,f,c
 18464  015330  0EF1               	movlw	-15
 18465  015332  50E3               	movf	plusw1,w,c
 18466  015334  5ADE               	subwfb	postinc2,f,c
 18467  015336  0EF2               	movlw	-14
 18468  015338  50E3               	movf	plusw1,w,c
 18469  01533A  5ADE               	subwfb	postinc2,f,c
 18470  01533C  0EF3               	movlw	-13
 18471  01533E  50E3               	movf	plusw1,w,c
 18472  015340  5ADE               	subwfb	postinc2,f,c
 18473  015342  0EF4               	movlw	-12
 18474  015344  50E3               	movf	plusw1,w,c
 18475  015346  5ADE               	subwfb	postinc2,f,c
 18476  015348  0EF5               	movlw	-11
 18477  01534A  50E3               	movf	plusw1,w,c
 18478  01534C  5ADE               	subwfb	postinc2,f,c
 18479  01534E                     l9644:
 18480                           
 18481                           ;stkvar	_divisor @ sp[(-2)+-16]
 18482  01534E  90D8               	bcf	status,0,c
 18483  015350  0EF5               	movlw	-11
 18484  015352  32E3               	rrcf	plusw1,f,c
 18485  015354  0EF4               	movlw	-12
 18486  015356  32E3               	rrcf	plusw1,f,c
 18487  015358  0EF3               	movlw	-13
 18488  01535A  32E3               	rrcf	plusw1,f,c
 18489  01535C  0EF2               	movlw	-14
 18490  01535E  32E3               	rrcf	plusw1,f,c
 18491  015360  0EF1               	movlw	-15
 18492  015362  32E3               	rrcf	plusw1,f,c
 18493  015364  0EF0               	movlw	-16
 18494  015366  32E3               	rrcf	plusw1,f,c
 18495  015368  0EEF               	movlw	-17
 18496  01536A  32E3               	rrcf	plusw1,f,c
 18497  01536C  0EEE               	movlw	-18
 18498  01536E  32E3               	rrcf	plusw1,f,c
 18499                           
 18500                           ;stkvar	_counter @ sp[(-2)+1]
 18501  015370  0EFF               	movlw	-1
 18502  015372  50E3               	movf	plusw1,w,c
 18503  015374  6E32               	movwf	btemp^0,c
 18504  015376  0E01               	movlw	1
 18505  015378  5E32               	subwf	btemp^0,f,c
 18506  01537A  0EFF               	movlw	-1
 18507  01537C  0060  F0CB  FFE3   	movff	btemp,plusw1
 18508  015382  A4D8               	btfss	status,2,c
 18509  015384  D7A4               	goto	u9780
 18510  015386                     u9800:
 18511                           
 18512                           ;stkvar	_sign @ sp[(-2)+0]
 18513  015386  0EFE               	movlw	-2
 18514  015388  50E3               	movf	plusw1,w,c
 18515  01538A  B4D8               	btfsc	status,2,c
 18516  01538C  D025               	goto	u9820
 18517                           
 18518                           ;stkvar	_dividend @ sp[(-2)+-8]
 18519                           ;stkvar	_dividend @ sp[(-2)+-8]
 18520  01538E  0EF6               	movlw	-10
 18521  015390  6CE3               	negf	plusw1,c
 18522  015392  0EF7               	movlw	-9
 18523  015394  1EE3               	comf	plusw1,f,c
 18524  015396  0EF8               	movlw	-8
 18525  015398  1EE3               	comf	plusw1,f,c
 18526  01539A  0EF9               	movlw	-7
 18527  01539C  1EE3               	comf	plusw1,f,c
 18528  01539E  0EFA               	movlw	-6
 18529  0153A0  1EE3               	comf	plusw1,f,c
 18530  0153A2  0EFB               	movlw	-5
 18531  0153A4  1EE3               	comf	plusw1,f,c
 18532  0153A6  0EFC               	movlw	-4
 18533  0153A8  1EE3               	comf	plusw1,f,c
 18534  0153AA  0EFD               	movlw	-3
 18535  0153AC  1EE3               	comf	plusw1,f,c
 18536  0153AE  E314               	bnc	u9820
 18537  0153B0  0EF7               	movlw	-9
 18538  0153B2  2AE3               	incf	plusw1,f,c
 18539  0153B4  E311               	bnc	u9820
 18540  0153B6  0EF8               	movlw	-8
 18541  0153B8  2AE3               	incf	plusw1,f,c
 18542  0153BA  E30E               	bnc	u9820
 18543  0153BC  0EF9               	movlw	-7
 18544  0153BE  2AE3               	incf	plusw1,f,c
 18545  0153C0  E30B               	bnc	u9820
 18546  0153C2  0EFA               	movlw	-6
 18547  0153C4  2AE3               	incf	plusw1,f,c
 18548  0153C6  E308               	bnc	u9820
 18549  0153C8  0EFB               	movlw	-5
 18550  0153CA  2AE3               	incf	plusw1,f,c
 18551  0153CC  E305               	bnc	u9820
 18552  0153CE  0EFC               	movlw	-4
 18553  0153D0  2AE3               	incf	plusw1,f,c
 18554  0153D2  E302               	bnc	u9820
 18555  0153D4  0EFD               	movlw	-3
 18556  0153D6  2AE3               	incf	plusw1,f,c
 18557  0153D8                     u9820:
 18558                           
 18559                           ;stkvar	_dividend @ sp[(-2)+-8]
 18560  0153D8  0EF6               	movlw	246
 18561  0153DA  24E1               	addwf	fsr1l,w,c
 18562  0153DC  6ED9               	movwf	fsr2l,c
 18563  0153DE  0EFF               	movlw	255
 18564  0153E0  20E2               	addwfc	fsr1h,w,c
 18565  0153E2  6EDA               	movwf	fsr2h,c
 18566                           
 18567                           ;stkvar	?___aomod @ sp[(-2)+-8]
 18568  0153E4  0E08               	movlw	8
 18569  0153E6  6E32               	movwf	btemp^0,c
 18570  0153E8  0EF6               	movlw	-10
 18571  0153EA                     us983999:
 18572  0153EA  006F FF7B FFE3     	movff	postinc2,plusw1
 18573  0153F0  28E8               	incf	wreg,w,c
 18574  0153F2  2E32               	decfsz	btemp^0,f,c
 18575  0153F4  D7FA               	bra	us983999
 18576                           
 18577                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18578  0153F6  52E5               	movf	postdec1,f,c
 18579  0153F8  52E5               	movf	postdec1,f,c
 18580  0153FA  0012               	return		;funcret
 18581  0153FC                     __end_of___aomod:
 18582                           	opt callstack 0
 18583                           
 18584 ;; *************** function ___aodiv *****************
 18585 ;; Defined at:
 18586 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 18587 ;; Parameters:    Size  Location     Type
 18588 ;;  dividend        8  [STACK] long long 
 18589 ;;  divisor         8  [STACK] long long 
 18590 ;; Auto vars:     Size  Location     Type
 18591 ;;  quotient        8  [STACK] long long 
 18592 ;;  sign            1  [STACK] unsigned char 
 18593 ;;  counter         1  [STACK] unsigned char 
 18594 ;; Return value:  Size  Location     Type
 18595 ;;                  8  [STACK] long long 
 18596 ;; Registers used:
 18597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18598 ;; Tracked objects:
 18599 ;;		On entry : 0/2
 18600 ;;		On exit  : 0/0
 18601 ;;		Unchanged: 0/0
 18602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18607 ;;Total ram usage:        0 bytes
 18608 ;; Hardware stack levels used:    1
 18609 ;; Hardware stack levels required when called:    6
 18610 ;; This function calls:
 18611 ;;		Nothing
 18612 ;; This function is called by:
 18613 ;;		_dtoa
 18614 ;; This function uses a reentrant model
 18615 ;;
 18616                           
 18617                           	psect	text62
 18618  014CC8                     __ptext62:
 18619                           	opt callstack 0
 18620  014CC8                     ___aodiv:
 18621                           	opt callstack 0
 18622                           
 18623                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 18624  014CC8  0E0A               	movlw	10
 18625  014CCA  26E1               	addwf	fsr1l,f,c
 18626  014CCC  0E00               	movlw	0
 18627  014CCE  22E2               	addwfc	fsr1h,f,c
 18628                           
 18629                           ;stkvar	_sign @ sp[(-10)+8]
 18630                           
 18631                           ;incstack = 0
 18632  014CD0  0EFE               	movlw	-2
 18633  014CD2  6AE3               	clrf	plusw1,c
 18634                           
 18635                           ;stkvar	_divisor @ sp[(-10)+-16]
 18636  014CD4  0EED               	movlw	-19
 18637  014CD6  AEE3               	btfss	plusw1,7,c
 18638  014CD8  D028               	goto	l9584
 18639                           
 18640                           ;stkvar	_divisor @ sp[(-10)+-16]
 18641                           ;stkvar	_divisor @ sp[(-10)+-16]
 18642  014CDA  0EE6               	movlw	-26
 18643  014CDC  6CE3               	negf	plusw1,c
 18644  014CDE  0EE7               	movlw	-25
 18645  014CE0  1EE3               	comf	plusw1,f,c
 18646  014CE2  0EE8               	movlw	-24
 18647  014CE4  1EE3               	comf	plusw1,f,c
 18648  014CE6  0EE9               	movlw	-23
 18649  014CE8  1EE3               	comf	plusw1,f,c
 18650  014CEA  0EEA               	movlw	-22
 18651  014CEC  1EE3               	comf	plusw1,f,c
 18652  014CEE  0EEB               	movlw	-21
 18653  014CF0  1EE3               	comf	plusw1,f,c
 18654  014CF2  0EEC               	movlw	-20
 18655  014CF4  1EE3               	comf	plusw1,f,c
 18656  014CF6  0EED               	movlw	-19
 18657  014CF8  1EE3               	comf	plusw1,f,c
 18658  014CFA  E314               	bnc	u9620
 18659  014CFC  0EE7               	movlw	-25
 18660  014CFE  2AE3               	incf	plusw1,f,c
 18661  014D00  E311               	bnc	u9620
 18662  014D02  0EE8               	movlw	-24
 18663  014D04  2AE3               	incf	plusw1,f,c
 18664  014D06  E30E               	bnc	u9620
 18665  014D08  0EE9               	movlw	-23
 18666  014D0A  2AE3               	incf	plusw1,f,c
 18667  014D0C  E30B               	bnc	u9620
 18668  014D0E  0EEA               	movlw	-22
 18669  014D10  2AE3               	incf	plusw1,f,c
 18670  014D12  E308               	bnc	u9620
 18671  014D14  0EEB               	movlw	-21
 18672  014D16  2AE3               	incf	plusw1,f,c
 18673  014D18  E305               	bnc	u9620
 18674  014D1A  0EEC               	movlw	-20
 18675  014D1C  2AE3               	incf	plusw1,f,c
 18676  014D1E  E302               	bnc	u9620
 18677  014D20  0EED               	movlw	-19
 18678  014D22  2AE3               	incf	plusw1,f,c
 18679  014D24                     u9620:
 18680                           
 18681                           ;stkvar	_sign @ sp[(-10)+8]
 18682  014D24  0EFE               	movlw	-2
 18683  014D26  6AE3               	clrf	plusw1,c
 18684  014D28  2AE3               	incf	plusw1,f,c
 18685  014D2A                     l9584:
 18686                           
 18687                           ;stkvar	_dividend @ sp[(-10)+-8]
 18688  014D2A  0EF5               	movlw	-11
 18689  014D2C  AEE3               	btfss	plusw1,7,c
 18690  014D2E  D027               	goto	l9590
 18691                           
 18692                           ;stkvar	_dividend @ sp[(-10)+-8]
 18693                           ;stkvar	_dividend @ sp[(-10)+-8]
 18694  014D30  0EEE               	movlw	-18
 18695  014D32  6CE3               	negf	plusw1,c
 18696  014D34  0EEF               	movlw	-17
 18697  014D36  1EE3               	comf	plusw1,f,c
 18698  014D38  0EF0               	movlw	-16
 18699  014D3A  1EE3               	comf	plusw1,f,c
 18700  014D3C  0EF1               	movlw	-15
 18701  014D3E  1EE3               	comf	plusw1,f,c
 18702  014D40  0EF2               	movlw	-14
 18703  014D42  1EE3               	comf	plusw1,f,c
 18704  014D44  0EF3               	movlw	-13
 18705  014D46  1EE3               	comf	plusw1,f,c
 18706  014D48  0EF4               	movlw	-12
 18707  014D4A  1EE3               	comf	plusw1,f,c
 18708  014D4C  0EF5               	movlw	-11
 18709  014D4E  1EE3               	comf	plusw1,f,c
 18710  014D50  E314               	bnc	u9640
 18711  014D52  0EEF               	movlw	-17
 18712  014D54  2AE3               	incf	plusw1,f,c
 18713  014D56  E311               	bnc	u9640
 18714  014D58  0EF0               	movlw	-16
 18715  014D5A  2AE3               	incf	plusw1,f,c
 18716  014D5C  E30E               	bnc	u9640
 18717  014D5E  0EF1               	movlw	-15
 18718  014D60  2AE3               	incf	plusw1,f,c
 18719  014D62  E30B               	bnc	u9640
 18720  014D64  0EF2               	movlw	-14
 18721  014D66  2AE3               	incf	plusw1,f,c
 18722  014D68  E308               	bnc	u9640
 18723  014D6A  0EF3               	movlw	-13
 18724  014D6C  2AE3               	incf	plusw1,f,c
 18725  014D6E  E305               	bnc	u9640
 18726  014D70  0EF4               	movlw	-12
 18727  014D72  2AE3               	incf	plusw1,f,c
 18728  014D74  E302               	bnc	u9640
 18729  014D76  0EF5               	movlw	-11
 18730  014D78  2AE3               	incf	plusw1,f,c
 18731  014D7A                     u9640:
 18732                           
 18733                           ;stkvar	_sign @ sp[(-10)+8]
 18734  014D7A  0EFE               	movlw	-2
 18735  014D7C  70E3               	btg	plusw1,0,c
 18736  014D7E                     l9590:
 18737                           
 18738                           ;stkvar	_quotient @ sp[(-10)+0]
 18739  014D7E  0E07               	movlw	7
 18740  014D80  6E32               	movwf	btemp^0,c
 18741  014D82  0EF6               	movlw	-10
 18742  014D84                     u9651:
 18743  014D84  6AE3               	clrf	plusw1,c
 18744  014D86  2AE8               	incf	wreg,f,c
 18745  014D88  0632               	decf	btemp^0,f,c
 18746  014D8A  E2FC               	bc	u9651
 18747                           
 18748                           ;stkvar	_divisor @ sp[(-10)+-16]
 18749  014D8C  0EE6               	movlw	-26
 18750  014D8E  50E3               	movf	plusw1,w,c
 18751  014D90  E116               	bnz	u9660
 18752  014D92  0EE7               	movlw	-25
 18753  014D94  50E3               	movf	plusw1,w,c
 18754  014D96  E113               	bnz	u9660
 18755  014D98  0EE8               	movlw	-24
 18756  014D9A  50E3               	movf	plusw1,w,c
 18757  014D9C  E110               	bnz	u9660
 18758  014D9E  0EE9               	movlw	-23
 18759  014DA0  50E3               	movf	plusw1,w,c
 18760  014DA2  E10D               	bnz	u9660
 18761  014DA4  0EEA               	movlw	-22
 18762  014DA6  50E3               	movf	plusw1,w,c
 18763  014DA8  E10A               	bnz	u9660
 18764  014DAA  0EEB               	movlw	-21
 18765  014DAC  50E3               	movf	plusw1,w,c
 18766  014DAE  E107               	bnz	u9660
 18767  014DB0  0EEC               	movlw	-20
 18768  014DB2  50E3               	movf	plusw1,w,c
 18769  014DB4  E104               	bnz	u9660
 18770  014DB6  0EED               	movlw	-19
 18771  014DB8  50E3               	movf	plusw1,w,c
 18772  014DBA  B4D8               	btfsc	status,2,c
 18773  014DBC  D088               	goto	u9690
 18774  014DBE                     u9660:
 18775                           
 18776                           ;stkvar	_counter @ sp[(-10)+9]
 18777  014DBE  0EFF               	movlw	-1
 18778  014DC0  6AE3               	clrf	plusw1,c
 18779  014DC2  D012               	goto	L17
 18780  014DC4                     l9596:
 18781                           
 18782                           ;stkvar	_divisor @ sp[(-10)+-16]
 18783  014DC4  90D8               	bcf	status,0,c
 18784  014DC6  0EE6               	movlw	-26
 18785  014DC8  36E3               	rlcf	plusw1,f,c
 18786  014DCA  0EE7               	movlw	-25
 18787  014DCC  36E3               	rlcf	plusw1,f,c
 18788  014DCE  0EE8               	movlw	-24
 18789  014DD0  36E3               	rlcf	plusw1,f,c
 18790  014DD2  0EE9               	movlw	-23
 18791  014DD4  36E3               	rlcf	plusw1,f,c
 18792  014DD6  0EEA               	movlw	-22
 18793  014DD8  36E3               	rlcf	plusw1,f,c
 18794  014DDA  0EEB               	movlw	-21
 18795  014DDC  36E3               	rlcf	plusw1,f,c
 18796  014DDE  0EEC               	movlw	-20
 18797  014DE0  36E3               	rlcf	plusw1,f,c
 18798  014DE2  0EED               	movlw	-19
 18799  014DE4  36E3               	rlcf	plusw1,f,c
 18800                           
 18801                           ;stkvar	_counter @ sp[(-10)+9]
 18802  014DE6  0EFF               	movlw	-1
 18803  014DE8                     L17:
 18804  014DE8  2AE3               	incf	plusw1,f,c
 18805                           
 18806                           ;stkvar	_divisor @ sp[(-10)+-16]
 18807  014DEA  0EED               	movlw	-19
 18808  014DEC  AEE3               	btfss	plusw1,7,c
 18809  014DEE  D7EA               	goto	l9596
 18810  014DF0                     u9670:
 18811                           
 18812                           ;stkvar	_quotient @ sp[(-10)+0]
 18813  014DF0  90D8               	bcf	status,0,c
 18814  014DF2  0EF6               	movlw	-10
 18815  014DF4  36E3               	rlcf	plusw1,f,c
 18816  014DF6  0EF7               	movlw	-9
 18817  014DF8  36E3               	rlcf	plusw1,f,c
 18818  014DFA  0EF8               	movlw	-8
 18819  014DFC  36E3               	rlcf	plusw1,f,c
 18820  014DFE  0EF9               	movlw	-7
 18821  014E00  36E3               	rlcf	plusw1,f,c
 18822  014E02  0EFA               	movlw	-6
 18823  014E04  36E3               	rlcf	plusw1,f,c
 18824  014E06  0EFB               	movlw	-5
 18825  014E08  36E3               	rlcf	plusw1,f,c
 18826  014E0A  0EFC               	movlw	-4
 18827  014E0C  36E3               	rlcf	plusw1,f,c
 18828  014E0E  0EFD               	movlw	-3
 18829  014E10  36E3               	rlcf	plusw1,f,c
 18830                           
 18831                           ;stkvar	_divisor @ sp[(-10)+-16]
 18832                           ;stkvar	_dividend @ sp[(-10)+-8]
 18833  014E12  50E1               	movf	fsr1l,w,c
 18834  014E14  0FEE               	addlw	-18
 18835  014E16  6ED9               	movwf	fsr2l,c
 18836  014E18  50E2               	movf	fsr1h,w,c
 18837  014E1A  6EDA               	movwf	fsr2h,c
 18838  014E1C  0EFF               	movlw	255
 18839  014E1E  22DA               	addwfc	fsr2h,f,c
 18840  014E20  0EE6               	movlw	-26
 18841  014E22  50E3               	movf	plusw1,w,c
 18842  014E24  5CDE               	subwf	postinc2,w,c
 18843  014E26  0EE7               	movlw	-25
 18844  014E28  50E3               	movf	plusw1,w,c
 18845  014E2A  58DE               	subwfb	postinc2,w,c
 18846  014E2C  0EE8               	movlw	-24
 18847  014E2E  50E3               	movf	plusw1,w,c
 18848  014E30  58DE               	subwfb	postinc2,w,c
 18849  014E32  0EE9               	movlw	-23
 18850  014E34  50E3               	movf	plusw1,w,c
 18851  014E36  58DE               	subwfb	postinc2,w,c
 18852  014E38  0EEA               	movlw	-22
 18853  014E3A  50E3               	movf	plusw1,w,c
 18854  014E3C  58DE               	subwfb	postinc2,w,c
 18855  014E3E  0EEB               	movlw	-21
 18856  014E40  50E3               	movf	plusw1,w,c
 18857  014E42  58DE               	subwfb	postinc2,w,c
 18858  014E44  0EEC               	movlw	-20
 18859  014E46  50E3               	movf	plusw1,w,c
 18860  014E48  58DE               	subwfb	postinc2,w,c
 18861  014E4A  0EED               	movlw	-19
 18862  014E4C  50E3               	movf	plusw1,w,c
 18863  014E4E  58DE               	subwfb	postinc2,w,c
 18864  014E50  A0D8               	btfss	status,0,c
 18865  014E52  D021               	goto	l9608
 18866                           
 18867                           ;stkvar	_divisor @ sp[(-10)+-16]
 18868                           ;stkvar	_dividend @ sp[(-10)+-8]
 18869  014E54  50E1               	movf	fsr1l,w,c
 18870  014E56  0FEE               	addlw	-18
 18871  014E58  6ED9               	movwf	fsr2l,c
 18872  014E5A  50E2               	movf	fsr1h,w,c
 18873  014E5C  6EDA               	movwf	fsr2h,c
 18874  014E5E  0EFF               	movlw	255
 18875  014E60  22DA               	addwfc	fsr2h,f,c
 18876  014E62  0EE6               	movlw	-26
 18877  014E64  50E3               	movf	plusw1,w,c
 18878  014E66  5EDE               	subwf	postinc2,f,c
 18879  014E68  0EE7               	movlw	-25
 18880  014E6A  50E3               	movf	plusw1,w,c
 18881  014E6C  5ADE               	subwfb	postinc2,f,c
 18882  014E6E  0EE8               	movlw	-24
 18883  014E70  50E3               	movf	plusw1,w,c
 18884  014E72  5ADE               	subwfb	postinc2,f,c
 18885  014E74  0EE9               	movlw	-23
 18886  014E76  50E3               	movf	plusw1,w,c
 18887  014E78  5ADE               	subwfb	postinc2,f,c
 18888  014E7A  0EEA               	movlw	-22
 18889  014E7C  50E3               	movf	plusw1,w,c
 18890  014E7E  5ADE               	subwfb	postinc2,f,c
 18891  014E80  0EEB               	movlw	-21
 18892  014E82  50E3               	movf	plusw1,w,c
 18893  014E84  5ADE               	subwfb	postinc2,f,c
 18894  014E86  0EEC               	movlw	-20
 18895  014E88  50E3               	movf	plusw1,w,c
 18896  014E8A  5ADE               	subwfb	postinc2,f,c
 18897  014E8C  0EED               	movlw	-19
 18898  014E8E  50E3               	movf	plusw1,w,c
 18899  014E90  5ADE               	subwfb	postinc2,f,c
 18900                           
 18901                           ;stkvar	_quotient @ sp[(-10)+0]
 18902  014E92  0EF6               	movlw	-10
 18903  014E94  80E3               	bsf	plusw1,0,c
 18904  014E96                     l9608:
 18905                           
 18906                           ;stkvar	_divisor @ sp[(-10)+-16]
 18907  014E96  90D8               	bcf	status,0,c
 18908  014E98  0EED               	movlw	-19
 18909  014E9A  32E3               	rrcf	plusw1,f,c
 18910  014E9C  0EEC               	movlw	-20
 18911  014E9E  32E3               	rrcf	plusw1,f,c
 18912  014EA0  0EEB               	movlw	-21
 18913  014EA2  32E3               	rrcf	plusw1,f,c
 18914  014EA4  0EEA               	movlw	-22
 18915  014EA6  32E3               	rrcf	plusw1,f,c
 18916  014EA8  0EE9               	movlw	-23
 18917  014EAA  32E3               	rrcf	plusw1,f,c
 18918  014EAC  0EE8               	movlw	-24
 18919  014EAE  32E3               	rrcf	plusw1,f,c
 18920  014EB0  0EE7               	movlw	-25
 18921  014EB2  32E3               	rrcf	plusw1,f,c
 18922  014EB4  0EE6               	movlw	-26
 18923  014EB6  32E3               	rrcf	plusw1,f,c
 18924                           
 18925                           ;stkvar	_counter @ sp[(-10)+9]
 18926  014EB8  0EFF               	movlw	-1
 18927  014EBA  50E3               	movf	plusw1,w,c
 18928  014EBC  6E32               	movwf	btemp^0,c
 18929  014EBE  0E01               	movlw	1
 18930  014EC0  5E32               	subwf	btemp^0,f,c
 18931  014EC2  0EFF               	movlw	-1
 18932  014EC4  0060  F0CB  FFE3   	movff	btemp,plusw1
 18933  014ECA  A4D8               	btfss	status,2,c
 18934  014ECC  D791               	goto	u9670
 18935  014ECE                     u9690:
 18936                           
 18937                           ;stkvar	_sign @ sp[(-10)+8]
 18938  014ECE  0EFE               	movlw	-2
 18939  014ED0  50E3               	movf	plusw1,w,c
 18940  014ED2  B4D8               	btfsc	status,2,c
 18941  014ED4  D025               	goto	u9710
 18942                           
 18943                           ;stkvar	_quotient @ sp[(-10)+0]
 18944                           ;stkvar	_quotient @ sp[(-10)+0]
 18945  014ED6  0EF6               	movlw	-10
 18946  014ED8  6CE3               	negf	plusw1,c
 18947  014EDA  0EF7               	movlw	-9
 18948  014EDC  1EE3               	comf	plusw1,f,c
 18949  014EDE  0EF8               	movlw	-8
 18950  014EE0  1EE3               	comf	plusw1,f,c
 18951  014EE2  0EF9               	movlw	-7
 18952  014EE4  1EE3               	comf	plusw1,f,c
 18953  014EE6  0EFA               	movlw	-6
 18954  014EE8  1EE3               	comf	plusw1,f,c
 18955  014EEA  0EFB               	movlw	-5
 18956  014EEC  1EE3               	comf	plusw1,f,c
 18957  014EEE  0EFC               	movlw	-4
 18958  014EF0  1EE3               	comf	plusw1,f,c
 18959  014EF2  0EFD               	movlw	-3
 18960  014EF4  1EE3               	comf	plusw1,f,c
 18961  014EF6  E314               	bnc	u9710
 18962  014EF8  0EF7               	movlw	-9
 18963  014EFA  2AE3               	incf	plusw1,f,c
 18964  014EFC  E311               	bnc	u9710
 18965  014EFE  0EF8               	movlw	-8
 18966  014F00  2AE3               	incf	plusw1,f,c
 18967  014F02  E30E               	bnc	u9710
 18968  014F04  0EF9               	movlw	-7
 18969  014F06  2AE3               	incf	plusw1,f,c
 18970  014F08  E30B               	bnc	u9710
 18971  014F0A  0EFA               	movlw	-6
 18972  014F0C  2AE3               	incf	plusw1,f,c
 18973  014F0E  E308               	bnc	u9710
 18974  014F10  0EFB               	movlw	-5
 18975  014F12  2AE3               	incf	plusw1,f,c
 18976  014F14  E305               	bnc	u9710
 18977  014F16  0EFC               	movlw	-4
 18978  014F18  2AE3               	incf	plusw1,f,c
 18979  014F1A  E302               	bnc	u9710
 18980  014F1C  0EFD               	movlw	-3
 18981  014F1E  2AE3               	incf	plusw1,f,c
 18982  014F20                     u9710:
 18983                           
 18984                           ;stkvar	_quotient @ sp[(-10)+0]
 18985  014F20  0EF6               	movlw	246
 18986  014F22  24E1               	addwf	fsr1l,w,c
 18987  014F24  6ED9               	movwf	fsr2l,c
 18988  014F26  0EFF               	movlw	255
 18989  014F28  20E2               	addwfc	fsr1h,w,c
 18990  014F2A  6EDA               	movwf	fsr2h,c
 18991                           
 18992                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 18993  014F2C  0E08               	movlw	8
 18994  014F2E  6E32               	movwf	btemp^0,c
 18995  014F30  0EEE               	movlw	-18
 18996  014F32                     us972999:
 18997  014F32  006F FF7B FFE3     	movff	postinc2,plusw1
 18998  014F38  28E8               	incf	wreg,w,c
 18999  014F3A  2E32               	decfsz	btemp^0,f,c
 19000  014F3C  D7FA               	bra	us972999
 19001                           
 19002                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 19003  014F3E  0EF6               	movlw	246
 19004  014F40  26E1               	addwf	fsr1l,f,c
 19005  014F42  0EFF               	movlw	255
 19006  014F44  22E2               	addwfc	fsr1h,f,c
 19007  014F46  0012               	return		;funcret
 19008  014F48                     __end_of___aodiv:
 19009                           	opt callstack 0
 19010                           
 19011 ;; *************** function _ctoa *****************
 19012 ;; Defined at:
 19013 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19014 ;; Parameters:    Size  Location     Type
 19015 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19016 ;;		 -> f(6), NULL(0), 
 19017 ;;  c               1  [STACK] unsigned char 
 19018 ;; Auto vars:     Size  Location     Type
 19019 ;;  w               2  [STACK] int 
 19020 ;;  l               2    0        int 
 19021 ;; Return value:  Size  Location     Type
 19022 ;;                  2  [STACK] int 
 19023 ;; Registers used:
 19024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19025 ;; Tracked objects:
 19026 ;;		On entry : 0/5
 19027 ;;		On exit  : 0/0
 19028 ;;		Unchanged: 0/0
 19029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19034 ;;Total ram usage:        0 bytes
 19035 ;; Hardware stack levels used:    1
 19036 ;; Hardware stack levels required when called:   11
 19037 ;; This function calls:
 19038 ;;		_pad
 19039 ;; This function is called by:
 19040 ;;		_vfpfcnvrt
 19041 ;; This function uses a reentrant model
 19042 ;;
 19043                           
 19044                           	psect	text63
 19045  0171CE                     __ptext63:
 19046                           	opt callstack 0
 19047  0171CE                     _ctoa:
 19048                           	opt callstack 0
 19049                           
 19050                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19051  0171CE  52E6               	movf	postinc1,f,c
 19052  0171D0  52E6               	movf	postinc1,f,c
 19053                           
 19054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 19055                           
 19056                           ;incstack = 0
 19057  0171D2  501B               	movf	_width^0,w,c
 19058  0171D4  101C               	iorwf	(_width+1)^0,w,c
 19059  0171D6  A4D8               	btfss	status,2,c
 19060  0171D8  D009               	goto	l10166
 19061                           
 19062                           ;stkvar	_w @ sp[(-2)+0]
 19063  0171DA  0EFE               	movlw	-2
 19064  0171DC  0060  F06F  FFE3   	movff	_width,plusw1
 19065  0171E2  0EFF               	movlw	-1
 19066  0171E4  0060  F073  FFE3   	movff	_width+1,plusw1
 19067  0171EA  D016               	goto	l10168
 19068  0171EC                     l10166:
 19069  0171EC  0EFF               	movlw	255
 19070  0171EE  6E3C               	movwf	(btemp+10)^0,c
 19071  0171F0  0EFF               	movlw	255
 19072  0171F2  6E3D               	movwf	(btemp+11)^0,c
 19073  0171F4  0060  F06C  F03A   	movff	_width,btemp+8
 19074  0171FA  0060  F070  F03B   	movff	_width+1,btemp+9
 19075  017200  503C               	movf	(btemp+10)^0,w,c
 19076  017202  263A               	addwf	(btemp+8)^0,f,c
 19077  017204  503D               	movf	(btemp+11)^0,w,c
 19078  017206  223B               	addwfc	(btemp+9)^0,f,c
 19079                           
 19080                           ;stkvar	_w @ sp[(-2)+0]
 19081  017208  0EFE               	movlw	-2
 19082  01720A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19083  017210  0EFF               	movlw	-1
 19084  017212  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19085  017218                     l10168:
 19086                           
 19087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 19088                           ;stkvar	_c @ sp[(-2)+-3]
 19089  017218  0EFB               	movlw	-5
 19090  01721A  006F FF8C  F240    	movff	plusw1,_dbuf
 19091                           
 19092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 19093  017220  0102               	movlb	2	; () banked
 19094  017222  6B41               	clrf	(_dbuf+1)& (0+255),b
 19095                           
 19096                           ; BSR set to: 2
 19097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 19098                           ;stkvar	_w @ sp[(-2)+0]
 19099  017224  0EFE               	movlw	-2
 19100  017226  006F FF8F FFE6     	movff	plusw1,postinc1
 19101  01722C  006F FF8F FFE6     	movff	plusw1,postinc1
 19102  017232  0E40               	movlw	low _dbuf
 19103  017234  6EE6               	movwf	postinc1,c
 19104  017236  0E02               	movlw	high _dbuf
 19105  017238  6EE6               	movwf	postinc1,c
 19106                           
 19107                           ;stkvar	_fp @ sp[(-6)+-2]
 19108  01723A  0EF8               	movlw	-8
 19109  01723C  006F FF8F FFE6     	movff	plusw1,postinc1
 19110  017242  006F FF8F FFE6     	movff	plusw1,postinc1
 19111  017248  EC0D  F0B3         	call	_pad	;wreg free
 19112                           
 19113                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 19114  01724C  0EFB               	movlw	251
 19115  01724E  26E1               	addwf	fsr1l,f,c
 19116  017250  0EFF               	movlw	255
 19117  017252  22E2               	addwfc	fsr1h,f,c
 19118  017254  0012               	return		;funcret
 19119  017256                     __end_of_ctoa:
 19120                           	opt callstack 0
 19121                           
 19122 ;; *************** function _pad *****************
 19123 ;; Defined at:
 19124 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19125 ;; Parameters:    Size  Location     Type
 19126 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19127 ;;		 -> f(6), NULL(0), 
 19128 ;;  buf             2  [STACK] PTR unsigned char 
 19129 ;;		 -> dbuf(80), 
 19130 ;;  p               2  [STACK] int 
 19131 ;; Auto vars:     Size  Location     Type
 19132 ;;  w               2  [STACK] int 
 19133 ;;  i               2  [STACK] int 
 19134 ;; Return value:  Size  Location     Type
 19135 ;;                  2  [STACK] int 
 19136 ;; Registers used:
 19137 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19138 ;; Tracked objects:
 19139 ;;		On entry : 0/2
 19140 ;;		On exit  : 0/0
 19141 ;;		Unchanged: 0/0
 19142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19147 ;;Total ram usage:        0 bytes
 19148 ;; Hardware stack levels used:    1
 19149 ;; Hardware stack levels required when called:   10
 19150 ;; This function calls:
 19151 ;;		_fputc
 19152 ;;		_fputs
 19153 ;;		_strlen
 19154 ;; This function is called by:
 19155 ;;		_ctoa
 19156 ;;		_dtoa
 19157 ;;		_efgtoa
 19158 ;;		_xtoa
 19159 ;; This function uses a reentrant model
 19160 ;;
 19161                           
 19162                           	psect	text64
 19163  01661A                     __ptext64:
 19164                           	opt callstack 0
 19165  01661A                     _pad:
 19166                           	opt callstack 0
 19167                           
 19168                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19169  01661A  52E6               	movf	postinc1,f,c
 19170  01661C  52E6               	movf	postinc1,f,c
 19171  01661E  52E6               	movf	postinc1,f,c
 19172  016620  52E6               	movf	postinc1,f,c
 19173                           
 19174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 19175                           
 19176                           ;incstack = 0
 19177  016622  A01F               	btfss	_flags^0,0,c
 19178  016624  D010               	goto	l9448
 19179                           
 19180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 19181                           ;stkvar	_fp @ sp[(-4)+-2]
 19182  016626  0EFA               	movlw	-6
 19183  016628  006F FF8F FFE6     	movff	plusw1,postinc1
 19184  01662E  006F FF8F FFE6     	movff	plusw1,postinc1
 19185                           
 19186                           ;stkvar	_buf @ sp[(-6)+-4]
 19187  016634  0EF6               	movlw	-10
 19188  016636  006F FF8F FFE6     	movff	plusw1,postinc1
 19189  01663C  006F FF8F FFE6     	movff	plusw1,postinc1
 19190  016642  EC09  F0B8         	call	_fputs	;wreg free
 19191  016646                     l9448:
 19192                           
 19193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 19194                           ;stkvar	_p @ sp[(-4)+-6]
 19195  016646  0EF7               	movlw	-9
 19196  016648  BEE3               	btfsc	plusw1,7,c
 19197  01664A  D011               	goto	l9452
 19198                           
 19199                           ;stkvar	_p @ sp[(-4)+-6]
 19200                           ;stkvar	_w @ sp[(-4)+0]
 19201  01664C  0EF6               	movlw	-10
 19202  01664E  006F FF8C  F032    	movff	plusw1,btemp
 19203  016654  0EFC               	movlw	-4
 19204  016656  0060  F0CB  FFE3   	movff	btemp,plusw1
 19205  01665C  0EF7               	movlw	-9
 19206  01665E  006F FF8C  F032    	movff	plusw1,btemp
 19207  016664  0EFD               	movlw	-3
 19208  016666  0060  F0CB  FFE3   	movff	btemp,plusw1
 19209  01666C  D004               	goto	l1803
 19210  01666E                     l9452:
 19211                           
 19212                           ;stkvar	_w @ sp[(-4)+0]
 19213  01666E  0EFC               	movlw	-4
 19214  016670  6AE3               	clrf	plusw1,c
 19215  016672  0EFD               	movlw	-3
 19216  016674  6AE3               	clrf	plusw1,c
 19217  016676                     l1803:
 19218                           
 19219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 19220                           ;stkvar	_i @ sp[(-4)+2]
 19221  016676  0EFE               	movlw	-2
 19222  016678  6AE3               	clrf	plusw1,c
 19223  01667A  0EFF               	movlw	-1
 19224  01667C  6AE3               	clrf	plusw1,c
 19225                           
 19226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19227  01667E  D01E               	goto	l9458
 19228  016680                     l9454:
 19229                           
 19230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 19231                           ;stkvar	_fp @ sp[(-4)+-2]
 19232  016680  0EFA               	movlw	-6
 19233  016682  006F FF8F FFE6     	movff	plusw1,postinc1
 19234  016688  006F FF8F FFE6     	movff	plusw1,postinc1
 19235  01668E  0E20               	movlw	32
 19236  016690  6EE6               	movwf	postinc1,c
 19237  016692  0E00               	movlw	0
 19238  016694  6EE6               	movwf	postinc1,c
 19239  016696  ECEF  F0B1         	call	_fputc	;wreg free
 19240                           
 19241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 19242                           ;stkvar	_i @ sp[(-4)+2]
 19243  01669A  0EFE               	movlw	-2
 19244  01669C  50E3               	movf	plusw1,w,c
 19245  01669E  0F01               	addlw	1
 19246  0166A0  6E32               	movwf	btemp^0,c
 19247  0166A2  0EFE               	movlw	-2
 19248  0166A4  0060  F0CB  FFE3   	movff	btemp,plusw1
 19249  0166AA  6A32               	clrf	btemp^0,c
 19250  0166AC  0EFF               	movlw	-1
 19251  0166AE  50E3               	movf	plusw1,w,c
 19252  0166B0  2032               	addwfc	btemp^0,w,c
 19253  0166B2  6E32               	movwf	btemp^0,c
 19254  0166B4  0EFF               	movlw	-1
 19255  0166B6  0060  F0CB  FFE3   	movff	btemp,plusw1
 19256  0166BC                     l9458:
 19257                           
 19258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19259                           ;stkvar	_w @ sp[(-4)+0]
 19260                           ;stkvar	_i @ sp[(-4)+2]
 19261  0166BC  50E1               	movf	fsr1l,w,c
 19262  0166BE  0FFE               	addlw	-2
 19263  0166C0  6ED9               	movwf	fsr2l,c
 19264  0166C2  50E2               	movf	fsr1h,w,c
 19265  0166C4  6EDA               	movwf	fsr2h,c
 19266  0166C6  0EFF               	movlw	255
 19267  0166C8  22DA               	addwfc	fsr2h,f,c
 19268  0166CA  0EFC               	movlw	-4
 19269  0166CC  50E3               	movf	plusw1,w,c
 19270  0166CE  5CDE               	subwf	postinc2,w,c
 19271  0166D0  50DE               	movf	postinc2,w,c
 19272  0166D2  0A80               	xorlw	128
 19273  0166D4  6E32               	movwf	btemp^0,c
 19274  0166D6  0EFD               	movlw	-3
 19275  0166D8  50E3               	movf	plusw1,w,c
 19276  0166DA  0A80               	xorlw	128
 19277  0166DC  5832               	subwfb	btemp^0,w,c
 19278  0166DE  A0D8               	btfss	status,0,c
 19279  0166E0  D7CF               	goto	l9454
 19280                           
 19281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 19282  0166E2  B01F               	btfsc	_flags^0,0,c
 19283  0166E4  D010               	goto	l9462
 19284                           
 19285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 19286                           ;stkvar	_fp @ sp[(-4)+-2]
 19287  0166E6  0EFA               	movlw	-6
 19288  0166E8  006F FF8F FFE6     	movff	plusw1,postinc1
 19289  0166EE  006F FF8F FFE6     	movff	plusw1,postinc1
 19290                           
 19291                           ;stkvar	_buf @ sp[(-6)+-4]
 19292  0166F4  0EF6               	movlw	-10
 19293  0166F6  006F FF8F FFE6     	movff	plusw1,postinc1
 19294  0166FC  006F FF8F FFE6     	movff	plusw1,postinc1
 19295  016702  EC09  F0B8         	call	_fputs	;wreg free
 19296  016706                     l9462:
 19297                           
 19298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 19299                           ;stkvar	_w @ sp[(-4)+0]
 19300                           ;stkvar	_buf @ sp[(-4)+-4]
 19301  016706  0EF8               	movlw	-8
 19302  016708  006F FF8F FFE6     	movff	plusw1,postinc1
 19303  01670E  006F FF8F FFE6     	movff	plusw1,postinc1
 19304  016714  ECB8  F0B7         	call	_strlen	;wreg free
 19305  016718  0EFC               	movlw	-4
 19306  01671A  50E3               	movf	plusw1,w,c
 19307  01671C  2632               	addwf	btemp^0,f,c
 19308  01671E  0EFD               	movlw	-3
 19309  016720  50E3               	movf	plusw1,w,c
 19310  016722  2233               	addwfc	(btemp+1)^0,f,c
 19311                           
 19312                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 19313  016724  0EF6               	movlw	246
 19314  016726  26E1               	addwf	fsr1l,f,c
 19315  016728  0EFF               	movlw	255
 19316  01672A  22E2               	addwfc	fsr1h,f,c
 19317  01672C  0012               	return		;funcret
 19318  01672E                     __end_of_pad:
 19319                           	opt callstack 0
 19320                           
 19321 ;; *************** function _strlen *****************
 19322 ;; Defined at:
 19323 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 19324 ;; Parameters:    Size  Location     Type
 19325 ;;  s               2  [STACK] PTR const unsigned char 
 19326 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19327 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 19328 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 19329 ;; Auto vars:     Size  Location     Type
 19330 ;;  a               2  [STACK] PTR const unsigned char 
 19331 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19332 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 19333 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 19334 ;; Return value:  Size  Location     Type
 19335 ;;                  2  [STACK] unsigned int 
 19336 ;; Registers used:
 19337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 19338 ;; Tracked objects:
 19339 ;;		On entry : 0/0
 19340 ;;		On exit  : 0/0
 19341 ;;		Unchanged: 0/0
 19342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19347 ;;Total ram usage:        0 bytes
 19348 ;; Hardware stack levels used:    1
 19349 ;; Hardware stack levels required when called:    6
 19350 ;; This function calls:
 19351 ;;		Nothing
 19352 ;; This function is called by:
 19353 ;;		_eaDogM_WriteString
 19354 ;;		_pad
 19355 ;;		_stoa
 19356 ;; This function uses a reentrant model
 19357 ;;
 19358                           
 19359                           	psect	text65
 19360  016F70                     __ptext65:
 19361                           	opt callstack 0
 19362  016F70                     _strlen:
 19363                           	opt callstack 0
 19364                           
 19365                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19366  016F70  52E6               	movf	postinc1,f,c
 19367  016F72  52E6               	movf	postinc1,f,c
 19368                           
 19369                           ;stkvar	_s @ sp[(-2)+-2]
 19370                           
 19371                           ;incstack = 0
 19372  016F74  0EFC               	movlw	-4
 19373  016F76  006F FF8C  F03C    	movff	plusw1,btemp+10
 19374  016F7C  0EFD               	movlw	-3
 19375  016F7E  006F FF8C  F03D    	movff	plusw1,btemp+11
 19376                           
 19377                           ;stkvar	_a @ sp[(-2)+0]
 19378  016F84  0EFF               	movlw	-1
 19379  016F86  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19380  016F8C  0EFE               	movlw	-2
 19381  016F8E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19382  016F94  D011               	goto	l9202
 19383  016F96                     l9200:
 19384                           
 19385                           ;stkvar	_s @ sp[(-2)+-2]
 19386  016F96  0EFC               	movlw	-4
 19387  016F98  50E3               	movf	plusw1,w,c
 19388  016F9A  0F01               	addlw	1
 19389  016F9C  6E32               	movwf	btemp^0,c
 19390  016F9E  0EFC               	movlw	-4
 19391  016FA0  0060  F0CB  FFE3   	movff	btemp,plusw1
 19392  016FA6  6A32               	clrf	btemp^0,c
 19393  016FA8  0EFD               	movlw	-3
 19394  016FAA  50E3               	movf	plusw1,w,c
 19395  016FAC  2032               	addwfc	btemp^0,w,c
 19396  016FAE  6E32               	movwf	btemp^0,c
 19397  016FB0  0EFD               	movlw	-3
 19398  016FB2  0060  F0CB  FFE3   	movff	btemp,plusw1
 19399  016FB8                     l9202:
 19400                           
 19401                           ;stkvar	_s @ sp[(-2)+-2]
 19402  016FB8  0EFC               	movlw	-4
 19403  016FBA  006F FF8F FFF6     	movff	plusw1,tblptrl
 19404  016FC0  0EFD               	movlw	-3
 19405  016FC2  006F FF8F FFF7     	movff	plusw1,tblptrh
 19406  016FC8  0E00               	movlw	low (__mediumconst shr (0+16))
 19407  016FCA  6EF8               	movwf	tblptru,c
 19408  016FCC  0E1F               	movlw	(high __ramtop+-1)
 19409  016FCE  64F7               	cpfsgt	tblptrh,c
 19410  016FD0  D003               	bra	u8787
 19411  016FD2  0008               	tblrd		*
 19412  016FD4  50F5               	movf	tablat,w,c
 19413  016FD6  D007               	bra	u8780
 19414  016FD8                     u8787:
 19415  016FD8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19416  016FDE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19417  016FE4  50EF               	movf	indf0,w,c
 19418  016FE6                     u8780:
 19419  016FE6  0900               	iorlw	0
 19420  016FE8  A4D8               	btfss	status,2,c
 19421  016FEA  D7D5               	goto	l9200
 19422                           
 19423                           ;stkvar	_a @ sp[(-2)+0]
 19424                           ;stkvar	_s @ sp[(-2)+-2]
 19425  016FEC  0EFC               	movlw	-4
 19426  016FEE  006F FF8C  F032    	movff	plusw1,btemp
 19427  016FF4  0EFD               	movlw	-3
 19428  016FF6  006F FF8C  F033    	movff	plusw1,btemp+1
 19429  016FFC  0EFE               	movlw	-2
 19430  016FFE  50E3               	movf	plusw1,w,c
 19431  017000  5E32               	subwf	btemp^0,f,c
 19432  017002  0EFF               	movlw	-1
 19433  017004  50E3               	movf	plusw1,w,c
 19434  017006  5A33               	subwfb	(btemp+1)^0,f,c
 19435                           
 19436                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 19437  017008  52E5               	movf	postdec1,f,c
 19438  01700A  52E5               	movf	postdec1,f,c
 19439  01700C  52E5               	movf	postdec1,f,c
 19440  01700E  52E5               	movf	postdec1,f,c
 19441  017010  0012               	return		;funcret
 19442  017012                     __end_of_strlen:
 19443                           	opt callstack 0
 19444                           
 19445 ;; *************** function _fputs *****************
 19446 ;; Defined at:
 19447 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 19448 ;; Parameters:    Size  Location     Type
 19449 ;;  s               2  [STACK] PTR const unsigned char 
 19450 ;;		 -> dbuf(80), 
 19451 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19452 ;;		 -> f(6), NULL(0), 
 19453 ;; Auto vars:     Size  Location     Type
 19454 ;;  i               2  [STACK] int 
 19455 ;;  c               1  [STACK] unsigned char 
 19456 ;; Return value:  Size  Location     Type
 19457 ;;                  2  [STACK] int 
 19458 ;; Registers used:
 19459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19460 ;; Tracked objects:
 19461 ;;		On entry : 0/2
 19462 ;;		On exit  : 0/0
 19463 ;;		Unchanged: 0/0
 19464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19469 ;;Total ram usage:        0 bytes
 19470 ;; Hardware stack levels used:    1
 19471 ;; Hardware stack levels required when called:    9
 19472 ;; This function calls:
 19473 ;;		_fputc
 19474 ;; This function is called by:
 19475 ;;		_pad
 19476 ;; This function uses a reentrant model
 19477 ;;
 19478                           
 19479                           	psect	text66
 19480  017012                     __ptext66:
 19481                           	opt callstack 0
 19482  017012                     _fputs:
 19483                           	opt callstack 0
 19484                           
 19485                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19486  017012  52E6               	movf	postinc1,f,c
 19487  017014  52E6               	movf	postinc1,f,c
 19488  017016  52E6               	movf	postinc1,f,c
 19489                           
 19490                           ;stkvar	_i @ sp[(-3)+0]
 19491                           
 19492                           ;incstack = 0
 19493  017018  0EFD               	movlw	-3
 19494  01701A  6AE3               	clrf	plusw1,c
 19495  01701C  0EFE               	movlw	-2
 19496  01701E  6AE3               	clrf	plusw1,c
 19497  017020  D01F               	goto	l9214
 19498  017022                     l9210:
 19499                           
 19500                           ;stkvar	_fp @ sp[(-3)+-4]
 19501  017022  0EF9               	movlw	-7
 19502  017024  006F FF8F FFE6     	movff	plusw1,postinc1
 19503  01702A  006F FF8F FFE6     	movff	plusw1,postinc1
 19504                           
 19505                           ;stkvar	_c @ sp[(-5)+2]
 19506  017030  0EFD               	movlw	-3
 19507  017032  50E3               	movf	plusw1,w,c
 19508  017034  6EE6               	movwf	postinc1,c
 19509  017036  0E00               	movlw	0
 19510  017038  6EE6               	movwf	postinc1,c
 19511  01703A  ECEF  F0B1         	call	_fputc	;wreg free
 19512                           
 19513                           ;stkvar	_i @ sp[(-3)+0]
 19514  01703E  0EFD               	movlw	-3
 19515  017040  50E3               	movf	plusw1,w,c
 19516  017042  0F01               	addlw	1
 19517  017044  6E32               	movwf	btemp^0,c
 19518  017046  0EFD               	movlw	-3
 19519  017048  0060  F0CB  FFE3   	movff	btemp,plusw1
 19520  01704E  6A32               	clrf	btemp^0,c
 19521  017050  0EFE               	movlw	-2
 19522  017052  50E3               	movf	plusw1,w,c
 19523  017054  2032               	addwfc	btemp^0,w,c
 19524  017056  6E32               	movwf	btemp^0,c
 19525  017058  0EFE               	movlw	-2
 19526  01705A  0060  F0CB  FFE3   	movff	btemp,plusw1
 19527  017060                     l9214:
 19528                           
 19529                           ;stkvar	_i @ sp[(-3)+0]
 19530  017060  0EFD               	movlw	-3
 19531  017062  006F FF8C  F03C    	movff	plusw1,btemp+10
 19532  017068  0EFE               	movlw	-2
 19533  01706A  006F FF8C  F03D    	movff	plusw1,btemp+11
 19534                           
 19535                           ;stkvar	_s @ sp[(-3)+-2]
 19536  017070  0EFB               	movlw	-5
 19537  017072  006F FF8C  F03A    	movff	plusw1,btemp+8
 19538  017078  0EFC               	movlw	-4
 19539  01707A  006F FF8C  F03B    	movff	plusw1,btemp+9
 19540  017080  503C               	movf	(btemp+10)^0,w,c
 19541  017082  243A               	addwf	(btemp+8)^0,w,c
 19542  017084  6ED9               	movwf	fsr2l,c
 19543  017086  503D               	movf	(btemp+11)^0,w,c
 19544  017088  203B               	addwfc	(btemp+9)^0,w,c
 19545  01708A  6EDA               	movwf	fsr2h,c
 19546  01708C  50DF               	movf	indf2,w,c
 19547  01708E  6E3D               	movwf	(btemp+11)^0,c
 19548                           
 19549                           ;stkvar	_c @ sp[(-3)+2]
 19550  017090  0EFF               	movlw	-1
 19551  017092  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19552  017098  0EFF               	movlw	-1
 19553  01709A  50E3               	movf	plusw1,w,c
 19554  01709C  A4D8               	btfss	status,2,c
 19555  01709E  D7C1               	goto	l9210
 19556                           
 19557                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19558  0170A0  0EF9               	movlw	249
 19559  0170A2  26E1               	addwf	fsr1l,f,c
 19560  0170A4  0EFF               	movlw	255
 19561  0170A6  22E2               	addwfc	fsr1h,f,c
 19562  0170A8  0012               	return		;funcret
 19563  0170AA                     __end_of_fputs:
 19564                           	opt callstack 0
 19565                           
 19566 ;; *************** function _fputc *****************
 19567 ;; Defined at:
 19568 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 19569 ;; Parameters:    Size  Location     Type
 19570 ;;  c               2  [STACK] int 
 19571 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19572 ;;		 -> f(6), NULL(0), 
 19573 ;; Auto vars:     Size  Location     Type
 19574 ;;		None
 19575 ;; Return value:  Size  Location     Type
 19576 ;;                  2  [STACK] int 
 19577 ;; Registers used:
 19578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19579 ;; Tracked objects:
 19580 ;;		On entry : 0/5
 19581 ;;		On exit  : 0/0
 19582 ;;		Unchanged: 0/0
 19583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19588 ;;Total ram usage:        0 bytes
 19589 ;; Hardware stack levels used:    1
 19590 ;; Hardware stack levels required when called:    8
 19591 ;; This function calls:
 19592 ;;		_putch
 19593 ;; This function is called by:
 19594 ;;		_pad
 19595 ;;		_stoa
 19596 ;;		_vfpfcnvrt
 19597 ;;		_fputs
 19598 ;; This function uses a reentrant model
 19599 ;;
 19600                           
 19601                           	psect	text67
 19602  0163DE                     __ptext67:
 19603                           	opt callstack 0
 19604  0163DE                     _fputc:
 19605                           	opt callstack 13
 19606                           
 19607                           ;stkvar	_fp @ sp[(0)+-4]
 19608                           
 19609                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19610                           ;incstack = 0
 19611  0163DE  0EFC               	movlw	-4
 19612  0163E0  006F FF8C  F032    	movff	plusw1,btemp
 19613  0163E6  0EFD               	movlw	-3
 19614  0163E8  50E3               	movf	plusw1,w,c
 19615  0163EA  1032               	iorwf	btemp^0,w,c
 19616  0163EC  B4D8               	btfsc	status,2,c
 19617  0163EE  D009               	goto	u8750
 19618                           
 19619                           ;stkvar	_fp @ sp[(0)+-4]
 19620  0163F0  0EFC               	movlw	-4
 19621  0163F2  006F FF8C  F032    	movff	plusw1,btemp
 19622  0163F8  0EFD               	movlw	-3
 19623  0163FA  50E3               	movf	plusw1,w,c
 19624  0163FC  1032               	iorwf	btemp^0,w,c
 19625  0163FE  A4D8               	btfss	status,2,c
 19626  016400  D006               	goto	l9188
 19627  016402                     u8750:
 19628                           
 19629                           ;stkvar	_c @ sp[(0)+-2]
 19630  016402  0EFE               	movlw	-2
 19631  016404  50E3               	movf	plusw1,w,c
 19632  016406  6EE6               	movwf	postinc1,c
 19633  016408  ECCA  F0C1         	call	_putch	;wreg free
 19634  01640C  D075               	goto	l2821
 19635  01640E                     l9188:
 19636                           
 19637                           ;stkvar	_fp @ sp[(0)+-4]
 19638  01640E  0EFC               	movlw	-4
 19639  016410  006F FF8C  F03C    	movff	plusw1,btemp+10
 19640  016416  0EFD               	movlw	-3
 19641  016418  006F FF8C  F03D    	movff	plusw1,btemp+11
 19642  01641E  0E04               	movlw	4
 19643  016420  243C               	addwf	(btemp+10)^0,w,c
 19644  016422  6ED9               	movwf	fsr2l,c
 19645  016424  0E00               	movlw	0
 19646  016426  203D               	addwfc	(btemp+11)^0,w,c
 19647  016428  6EDA               	movwf	fsr2h,c
 19648  01642A  50DE               	movf	postinc2,w,c
 19649  01642C  10DE               	iorwf	postinc2,w,c
 19650  01642E  B4D8               	btfsc	status,2,c
 19651  016430  D026               	goto	u8770
 19652                           
 19653                           ;stkvar	_fp @ sp[(0)+-4]
 19654  016432  0EFC               	movlw	-4
 19655  016434  006F FF8C  F03C    	movff	plusw1,btemp+10
 19656  01643A  0EFD               	movlw	-3
 19657  01643C  006F FF8C  F03D    	movff	plusw1,btemp+11
 19658  016442  0E04               	movlw	4
 19659  016444  243C               	addwf	(btemp+10)^0,w,c
 19660  016446  6ED9               	movwf	fsr2l,c
 19661  016448  0E00               	movlw	0
 19662  01644A  203D               	addwfc	(btemp+11)^0,w,c
 19663  01644C  6EDA               	movwf	fsr2h,c
 19664                           
 19665                           ;stkvar	_fp @ sp[(0)+-4]
 19666  01644E  0EFC               	movlw	-4
 19667  016450  006F FF8C  F03C    	movff	plusw1,btemp+10
 19668  016456  0EFD               	movlw	-3
 19669  016458  006F FF8C  F03D    	movff	plusw1,btemp+11
 19670  01645E  0E02               	movlw	2
 19671  016460  243C               	addwf	(btemp+10)^0,w,c
 19672  016462  6EE9               	movwf	fsr0l,c
 19673  016464  0E00               	movlw	0
 19674  016466  203D               	addwfc	(btemp+11)^0,w,c
 19675  016468  6EEA               	movwf	fsr0h,c
 19676  01646A  50DE               	movf	postinc2,w,c
 19677  01646C  5CEE               	subwf	postinc0,w,c
 19678  01646E  50EE               	movf	postinc0,w,c
 19679  016470  0A80               	xorlw	128
 19680  016472  6E32               	movwf	btemp^0,c
 19681  016474  50DE               	movf	postinc2,w,c
 19682  016476  0A80               	xorlw	128
 19683  016478  5832               	subwfb	btemp^0,w,c
 19684  01647A  B0D8               	btfsc	status,0,c
 19685  01647C  D03D               	goto	l2821
 19686  01647E                     u8770:
 19687                           
 19688                           ;stkvar	_c @ sp[(0)+-2]
 19689                           ;stkvar	_fp @ sp[(0)+-4]
 19690  01647E  0EFC               	movlw	-4
 19691  016480  006F FF8C  F03C    	movff	plusw1,btemp+10
 19692  016486  0EFD               	movlw	-3
 19693  016488  006F FF8C  F03D    	movff	plusw1,btemp+11
 19694  01648E  0E02               	movlw	2
 19695  016490  243C               	addwf	(btemp+10)^0,w,c
 19696  016492  6ED9               	movwf	fsr2l,c
 19697  016494  0E00               	movlw	0
 19698  016496  203D               	addwfc	(btemp+11)^0,w,c
 19699  016498  6EDA               	movwf	fsr2h,c
 19700  01649A  006F FF78  F03C    	movff	postinc2,btemp+10
 19701  0164A0  006F FF74  F03D    	movff	postdec2,btemp+11
 19702                           
 19703                           ;stkvar	_fp @ sp[(0)+-4]
 19704  0164A6  0EFC               	movlw	-4
 19705  0164A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 19706  0164AE  0EFD               	movlw	-3
 19707  0164B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 19708  0164B6  006F FF78  F03A    	movff	postinc2,btemp+8
 19709  0164BC  006F FF74  F03B    	movff	postdec2,btemp+9
 19710  0164C2  503C               	movf	(btemp+10)^0,w,c
 19711  0164C4  243A               	addwf	(btemp+8)^0,w,c
 19712  0164C6  6ED9               	movwf	fsr2l,c
 19713  0164C8  503D               	movf	(btemp+11)^0,w,c
 19714  0164CA  203B               	addwfc	(btemp+9)^0,w,c
 19715  0164CC  6EDA               	movwf	fsr2h,c
 19716  0164CE  0EFE               	movlw	-2
 19717  0164D0  006F FF8F FFDF     	movff	plusw1,indf2
 19718                           
 19719                           ;stkvar	_fp @ sp[(0)+-4]
 19720  0164D6  0EFC               	movlw	-4
 19721  0164D8  006F FF8C  F03C    	movff	plusw1,btemp+10
 19722  0164DE  0EFD               	movlw	-3
 19723  0164E0  006F FF8C  F03D    	movff	plusw1,btemp+11
 19724  0164E6  0E02               	movlw	2
 19725  0164E8  243C               	addwf	(btemp+10)^0,w,c
 19726  0164EA  6ED9               	movwf	fsr2l,c
 19727  0164EC  0E00               	movlw	0
 19728  0164EE  203D               	addwfc	(btemp+11)^0,w,c
 19729  0164F0  6EDA               	movwf	fsr2h,c
 19730  0164F2  2ADE               	incf	postinc2,f,c
 19731  0164F4  0E00               	movlw	0
 19732  0164F6  22DD               	addwfc	postdec2,f,c
 19733  0164F8                     l2821:
 19734                           
 19735                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19736  0164F8  52E5               	movf	postdec1,f,c
 19737  0164FA  52E5               	movf	postdec1,f,c
 19738  0164FC  52E5               	movf	postdec1,f,c
 19739  0164FE  52E5               	movf	postdec1,f,c
 19740  016500  0012               	return		;funcret
 19741  016502                     __end_of_fputc:
 19742                           	opt callstack 0
 19743                           
 19744 ;; *************** function _putch *****************
 19745 ;; Defined at:
 19746 ;;		line 155 in file "eadog.c"
 19747 ;; Parameters:    Size  Location     Type
 19748 ;;  c               1  [STACK] unsigned char 
 19749 ;; Auto vars:     Size  Location     Type
 19750 ;;		None
 19751 ;; Return value:  Size  Location     Type
 19752 ;;                  1  [STACK] void 
 19753 ;; Registers used:
 19754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19755 ;; Tracked objects:
 19756 ;;		On entry : 0/5
 19757 ;;		On exit  : 0/0
 19758 ;;		Unchanged: 0/0
 19759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19764 ;;Total ram usage:        0 bytes
 19765 ;; Hardware stack levels used:    1
 19766 ;; Hardware stack levels required when called:    7
 19767 ;; This function calls:
 19768 ;;		_ringBufS_put_dma
 19769 ;; This function is called by:
 19770 ;;		_fputc
 19771 ;; This function uses a reentrant model
 19772 ;;
 19773                           
 19774                           	psect	text68
 19775  018394                     __ptext68:
 19776                           	opt callstack 0
 19777  018394                     _putch:
 19778                           	opt callstack 13
 19779                           
 19780                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 19781                           ;stkvar	_c @ sp[(0)+-1]
 19782                           
 19783                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19784                           ;incstack = 0
 19785  018394  0EFF               	movlw	-1
 19786  018396  50E3               	movf	plusw1,w,c
 19787  018398  6EE6               	movwf	postinc1,c
 19788  01839A  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
 19789  0183A0  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
 19790  0183A6  ECBC  F0B6         	call	_ringBufS_put_dma	;wreg free
 19791                           
 19792                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 19793  0183AA  52E5               	movf	postdec1,f,c
 19794  0183AC  0012               	return		;funcret
 19795  0183AE                     __end_of_putch:
 19796                           	opt callstack 0
 19797                           
 19798 ;; *************** function _ringBufS_put_dma *****************
 19799 ;; Defined at:
 19800 ;;		line 67 in file "ringbufs.c"
 19801 ;; Parameters:    Size  Location     Type
 19802 ;;  _this           2  [STACK] PTR struct ringBufS_t
 19803 ;;		 -> ring_buf1(67), 
 19804 ;;  c               1  [STACK] const unsigned char 
 19805 ;; Auto vars:     Size  Location     Type
 19806 ;;		None
 19807 ;; Return value:  Size  Location     Type
 19808 ;;                  1  [STACK] void 
 19809 ;; Registers used:
 19810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19811 ;; Tracked objects:
 19812 ;;		On entry : 0/5
 19813 ;;		On exit  : 0/0
 19814 ;;		Unchanged: 0/0
 19815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19820 ;;Total ram usage:        0 bytes
 19821 ;; Hardware stack levels used:    1
 19822 ;; Hardware stack levels required when called:    6
 19823 ;; This function calls:
 19824 ;;		Nothing
 19825 ;; This function is called by:
 19826 ;;		_putch
 19827 ;; This function uses a reentrant model
 19828 ;;
 19829                           
 19830                           	psect	text69
 19831  016D78                     __ptext69:
 19832                           	opt callstack 0
 19833  016D78                     _ringBufS_put_dma:
 19834                           	opt callstack 13
 19835                           
 19836                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 19837                           ;stkvar	__this @ sp[(0)+-2]
 19838                           
 19839                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19840                           ;incstack = 0
 19841  016D78  0EFE               	movlw	-2
 19842  016D7A  006F FF8C  F03C    	movff	plusw1,btemp+10
 19843  016D80  0EFF               	movlw	-1
 19844  016D82  006F FF8C  F03D    	movff	plusw1,btemp+11
 19845  016D88  0E42               	movlw	66
 19846  016D8A  243C               	addwf	(btemp+10)^0,w,c
 19847  016D8C  6ED9               	movwf	fsr2l,c
 19848  016D8E  0E00               	movlw	0
 19849  016D90  203D               	addwfc	(btemp+11)^0,w,c
 19850  016D92  6EDA               	movwf	fsr2h,c
 19851  016D94  0E40               	movlw	64
 19852  016D96  60DF               	cpfslt	indf2,c
 19853  016D98  D040               	goto	l1466
 19854                           
 19855                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 19856                           ;stkvar	_c @ sp[(0)+-3]
 19857                           ;stkvar	__this @ sp[(0)+-2]
 19858  016D9A  0EFE               	movlw	-2
 19859  016D9C  006F FF8C  F03C    	movff	plusw1,btemp+10
 19860  016DA2  0EFF               	movlw	-1
 19861  016DA4  006F FF8C  F03D    	movff	plusw1,btemp+11
 19862  016DAA  0E40               	movlw	64
 19863  016DAC  243C               	addwf	(btemp+10)^0,w,c
 19864  016DAE  6ED9               	movwf	fsr2l,c
 19865  016DB0  0E00               	movlw	0
 19866  016DB2  203D               	addwfc	(btemp+11)^0,w,c
 19867  016DB4  6EDA               	movwf	fsr2h,c
 19868  016DB6  50DF               	movf	indf2,w,c
 19869  016DB8  6E3D               	movwf	(btemp+11)^0,c
 19870                           
 19871                           ;stkvar	__this @ sp[(0)+-2]
 19872  016DBA  0EFE               	movlw	-2
 19873  016DBC  006F FF8C  F03A    	movff	plusw1,btemp+8
 19874  016DC2  0EFF               	movlw	-1
 19875  016DC4  006F FF8C  F03B    	movff	plusw1,btemp+9
 19876  016DCA  503D               	movf	(btemp+11)^0,w,c
 19877  016DCC  243A               	addwf	(btemp+8)^0,w,c
 19878  016DCE  6ED9               	movwf	fsr2l,c
 19879  016DD0  0E00               	movlw	0
 19880  016DD2  203B               	addwfc	(btemp+9)^0,w,c
 19881  016DD4  6EDA               	movwf	fsr2h,c
 19882  016DD6  0EFD               	movlw	-3
 19883  016DD8  006F FF8F FFDF     	movff	plusw1,indf2
 19884                           
 19885                           ;ringbufs.c: 71:   ++_this->head;
 19886                           ;stkvar	__this @ sp[(0)+-2]
 19887  016DDE  0EFE               	movlw	-2
 19888  016DE0  006F FF8C  F03C    	movff	plusw1,btemp+10
 19889  016DE6  0EFF               	movlw	-1
 19890  016DE8  006F FF8C  F03D    	movff	plusw1,btemp+11
 19891  016DEE  0E40               	movlw	64
 19892  016DF0  243C               	addwf	(btemp+10)^0,w,c
 19893  016DF2  6ED9               	movwf	fsr2l,c
 19894  016DF4  0E00               	movlw	0
 19895  016DF6  203D               	addwfc	(btemp+11)^0,w,c
 19896  016DF8  6EDA               	movwf	fsr2h,c
 19897  016DFA  2ADF               	incf	indf2,f,c
 19898                           
 19899                           ;ringbufs.c: 72:   ++_this->count;
 19900                           ;stkvar	__this @ sp[(0)+-2]
 19901  016DFC  0EFE               	movlw	-2
 19902  016DFE  006F FF8C  F03C    	movff	plusw1,btemp+10
 19903  016E04  0EFF               	movlw	-1
 19904  016E06  006F FF8C  F03D    	movff	plusw1,btemp+11
 19905  016E0C  0E42               	movlw	66
 19906  016E0E  243C               	addwf	(btemp+10)^0,w,c
 19907  016E10  6ED9               	movwf	fsr2l,c
 19908  016E12  0E00               	movlw	0
 19909  016E14  203D               	addwfc	(btemp+11)^0,w,c
 19910  016E16  6EDA               	movwf	fsr2h,c
 19911  016E18  2ADF               	incf	indf2,f,c
 19912  016E1A                     l1466:
 19913                           
 19914                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 19915  016E1A  52E5               	movf	postdec1,f,c
 19916  016E1C  52E5               	movf	postdec1,f,c
 19917  016E1E  52E5               	movf	postdec1,f,c
 19918  016E20  0012               	return		;funcret
 19919  016E22                     __end_of_ringBufS_put_dma:
 19920                           	opt callstack 0
 19921                           
 19922 ;; *************** function _atoi *****************
 19923 ;; Defined at:
 19924 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 19925 ;; Parameters:    Size  Location     Type
 19926 ;;  s               2  [STACK] PTR const unsigned char 
 19927 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
 19928 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
 19929 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
 19930 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
 19931 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(19), 
 19932 ;;		 -> STR_10(19), STR_9(19), STR_8(17), STR_6(15), 
 19933 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 19934 ;; Auto vars:     Size  Location     Type
 19935 ;;  n               2  [STACK] int 
 19936 ;;  neg             2  [STACK] int 
 19937 ;; Return value:  Size  Location     Type
 19938 ;;                  2  [STACK] int 
 19939 ;; Registers used:
 19940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 19941 ;; Tracked objects:
 19942 ;;		On entry : 0/5
 19943 ;;		On exit  : 0/0
 19944 ;;		Unchanged: 0/0
 19945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19950 ;;Total ram usage:        0 bytes
 19951 ;; Hardware stack levels used:    1
 19952 ;; Hardware stack levels required when called:    7
 19953 ;; This function calls:
 19954 ;;		_isdigit
 19955 ;;		_isspace
 19956 ;; This function is called by:
 19957 ;;		_vfpfcnvrt
 19958 ;; This function uses a reentrant model
 19959 ;;
 19960                           
 19961                           	psect	text70
 19962  014F48                     __ptext70:
 19963                           	opt callstack 0
 19964  014F48                     _atoi:
 19965                           	opt callstack 0
 19966                           
 19967                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19968  014F48  0E09               	movlw	9
 19969  014F4A  26E1               	addwf	fsr1l,f,c
 19970  014F4C  0E00               	movlw	0
 19971  014F4E  22E2               	addwfc	fsr1h,f,c
 19972                           
 19973                           ;stkvar	_n @ sp[(-9)+5]
 19974                           
 19975                           ;incstack = 0
 19976  014F50  0EFC               	movlw	-4
 19977  014F52  6AE3               	clrf	plusw1,c
 19978  014F54  0EFD               	movlw	-3
 19979  014F56  6AE3               	clrf	plusw1,c
 19980                           
 19981                           ;stkvar	_neg @ sp[(-9)+7]
 19982  014F58  0EFE               	movlw	-2
 19983  014F5A  6AE3               	clrf	plusw1,c
 19984  014F5C  0EFF               	movlw	-1
 19985  014F5E  6AE3               	clrf	plusw1,c
 19986  014F60  D011               	goto	l10674
 19987  014F62                     l10672:
 19988                           
 19989                           ;stkvar	_s @ sp[(-9)+-2]
 19990  014F62  0EF5               	movlw	-11
 19991  014F64  50E3               	movf	plusw1,w,c
 19992  014F66  0F01               	addlw	1
 19993  014F68  6E32               	movwf	btemp^0,c
 19994  014F6A  0EF5               	movlw	-11
 19995  014F6C  0060  F0CB  FFE3   	movff	btemp,plusw1
 19996  014F72  6A32               	clrf	btemp^0,c
 19997  014F74  0EF6               	movlw	-10
 19998  014F76  50E3               	movf	plusw1,w,c
 19999  014F78  2032               	addwfc	btemp^0,w,c
 20000  014F7A  6E32               	movwf	btemp^0,c
 20001  014F7C  0EF6               	movlw	-10
 20002  014F7E  0060  F0CB  FFE3   	movff	btemp,plusw1
 20003  014F84                     l10674:
 20004                           
 20005                           ;stkvar	_atoi$4886 @ sp[(-9)+4]
 20006  014F84  0EFB               	movlw	-5
 20007  014F86  6AE3               	clrf	plusw1,c
 20008  014F88  2AE3               	incf	plusw1,f,c
 20009                           
 20010                           ;stkvar	_s @ sp[(-9)+-2]
 20011  014F8A  50E1               	movf	fsr1l,w,c
 20012  014F8C  0FF5               	addlw	-11
 20013  014F8E  6ED9               	movwf	fsr2l,c
 20014  014F90  50E2               	movf	fsr1h,w,c
 20015  014F92  6EDA               	movwf	fsr2h,c
 20016  014F94  0EFF               	movlw	255
 20017  014F96  22DA               	addwfc	fsr2h,f,c
 20018  014F98  006F FF7B FFF6     	movff	postinc2,tblptrl
 20019  014F9E  006F FF77 FFF7     	movff	postdec2,tblptrh
 20020  014FA4                     	if	0	;tblptru may be non-zero
 20021  014FA4                     	endif
 20022  014FA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20023  014FA4  0E00               	movlw	low (__mediumconst shr (0+16))
 20024  014FA6  6EF8               	movwf	tblptru,c
 20025  014FA8                     	endif
 20026  014FA8  0008               	tblrd		*
 20027  014FAA  50F5               	movf	tablat,w,c
 20028  014FAC  0A20               	xorlw	32
 20029  014FAE  B4D8               	btfsc	status,2,c
 20030  014FB0  D023               	goto	l10682
 20031  014FB2  0EF7               	movlw	247
 20032  014FB4  6E3C               	movwf	(btemp+10)^0,c
 20033  014FB6  0EFF               	movlw	255
 20034  014FB8  6E3D               	movwf	(btemp+11)^0,c
 20035                           
 20036                           ;stkvar	_s @ sp[(-9)+-2]
 20037  014FBA  50E1               	movf	fsr1l,w,c
 20038  014FBC  0FF5               	addlw	-11
 20039  014FBE  6ED9               	movwf	fsr2l,c
 20040  014FC0  50E2               	movf	fsr1h,w,c
 20041  014FC2  6EDA               	movwf	fsr2h,c
 20042  014FC4  0EFF               	movlw	255
 20043  014FC6  22DA               	addwfc	fsr2h,f,c
 20044  014FC8  006F FF7B FFF6     	movff	postinc2,tblptrl
 20045  014FCE  006F FF77 FFF7     	movff	postdec2,tblptrh
 20046  014FD4                     	if	0	;tblptru may be non-zero
 20047  014FD4                     	endif
 20048  014FD4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20049  014FD4  0E00               	movlw	low (__mediumconst shr (0+16))
 20050  014FD6  6EF8               	movwf	tblptru,c
 20051  014FD8                     	endif
 20052  014FD8  0008               	tblrd		*
 20053  014FDA  50F5               	movf	tablat,w,c
 20054  014FDC  6E3A               	movwf	(btemp+8)^0,c
 20055  014FDE  6A3B               	clrf	(btemp+9)^0,c
 20056  014FE0  503C               	movf	(btemp+10)^0,w,c
 20057  014FE2  263A               	addwf	(btemp+8)^0,f,c
 20058  014FE4  503D               	movf	(btemp+11)^0,w,c
 20059  014FE6  223B               	addwfc	(btemp+9)^0,f,c
 20060  014FE8  503B               	movf	(btemp+9)^0,w,c
 20061  014FEA  E104               	bnz	u11640
 20062  014FEC  0E05               	movlw	5
 20063  014FEE  5C3A               	subwf	(btemp+8)^0,w,c
 20064  014FF0  A0D8               	btfss	status,0,c
 20065  014FF2  D002               	goto	l10682
 20066  014FF4                     u11640:
 20067                           
 20068                           ;stkvar	_atoi$4886 @ sp[(-9)+4]
 20069  014FF4  0EFB               	movlw	-5
 20070  014FF6  6AE3               	clrf	plusw1,c
 20071  014FF8                     l10682:
 20072                           
 20073                           ;stkvar	_atoi$4886 @ sp[(-9)+4]
 20074  014FF8  0EFB               	movlw	-5
 20075  014FFA  50E3               	movf	plusw1,w,c
 20076  014FFC  6E3C               	movwf	(btemp+10)^0,c
 20077  014FFE  6A3D               	clrf	(btemp+11)^0,c
 20078                           
 20079                           ;stkvar	_atoi$4885 @ sp[(-9)+2]
 20080  015000  0EF9               	movlw	-7
 20081  015002  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20082  015008  0EFA               	movlw	-6
 20083  01500A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20084                           
 20085                           ;stkvar	_atoi$4885 @ sp[(-9)+2]
 20086  015010  0EF9               	movlw	-7
 20087  015012  006F FF8C  F032    	movff	plusw1,btemp
 20088  015018  0EFA               	movlw	-6
 20089  01501A  50E3               	movf	plusw1,w,c
 20090  01501C  1032               	iorwf	btemp^0,w,c
 20091  01501E  B4D8               	btfsc	status,2,c
 20092  015020  D01F               	goto	l10692
 20093  015022  D79F               	goto	l10672
 20094  015024                     l10688:
 20095  015024  0E01               	movlw	1
 20096  015026  6E3C               	movwf	(btemp+10)^0,c
 20097  015028  0E00               	movlw	0
 20098  01502A  6E3D               	movwf	(btemp+11)^0,c
 20099                           
 20100                           ;stkvar	_neg @ sp[(-9)+7]
 20101  01502C  0EFE               	movlw	-2
 20102  01502E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20103  015034  0EFF               	movlw	-1
 20104  015036  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20105  01503C                     l10690:
 20106                           
 20107                           ;stkvar	_s @ sp[(-9)+-2]
 20108  01503C  0EF5               	movlw	-11
 20109  01503E  50E3               	movf	plusw1,w,c
 20110  015040  0F01               	addlw	1
 20111  015042  6E32               	movwf	btemp^0,c
 20112  015044  0EF5               	movlw	-11
 20113  015046  0060  F0CB  FFE3   	movff	btemp,plusw1
 20114  01504C  6A32               	clrf	btemp^0,c
 20115  01504E  0EF6               	movlw	-10
 20116  015050  50E3               	movf	plusw1,w,c
 20117  015052  2032               	addwfc	btemp^0,w,c
 20118  015054  6E32               	movwf	btemp^0,c
 20119  015056  0EF6               	movlw	-10
 20120  015058  0060  F0CB  FFE3   	movff	btemp,plusw1
 20121  01505E  D053               	goto	l10698
 20122  015060                     l10692:
 20123                           
 20124                           ;stkvar	_s @ sp[(-9)+-2]
 20125  015060  50E1               	movf	fsr1l,w,c
 20126  015062  0FF5               	addlw	-11
 20127  015064  6ED9               	movwf	fsr2l,c
 20128  015066  50E2               	movf	fsr1h,w,c
 20129  015068  6EDA               	movwf	fsr2h,c
 20130  01506A  0EFF               	movlw	255
 20131  01506C  22DA               	addwfc	fsr2h,f,c
 20132  01506E  006F FF7B FFF6     	movff	postinc2,tblptrl
 20133  015074  006F FF77 FFF7     	movff	postdec2,tblptrh
 20134  01507A                     	if	0	;tblptru may be non-zero
 20135  01507A                     	endif
 20136  01507A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20137  01507A  0E00               	movlw	low (__mediumconst shr (0+16))
 20138  01507C  6EF8               	movwf	tblptru,c
 20139  01507E                     	endif
 20140  01507E  0008               	tblrd		*
 20141  015080  50F5               	movf	tablat,w,c
 20142  015082  6E3C               	movwf	(btemp+10)^0,c
 20143  015084  6A3D               	clrf	(btemp+11)^0,c
 20144                           
 20145                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20146                           ; Switch size 1, requested type "simple"
 20147                           ; Number of cases is 1, Range of values is 0 to 0
 20148                           ; switch strategies available:
 20149                           ; Name         Instructions Cycles
 20150                           ; simple_byte            4     3 (average)
 20151                           ;	Chosen strategy is simple_byte
 20152  015086  503D               	movf	(btemp+11)^0,w,c
 20153  015088  0A00               	xorlw	0	; case 0
 20154  01508A  A4D8               	btfss	status,2,c
 20155  01508C  D03C               	goto	l10698
 20156                           
 20157                           ; Switch size 1, requested type "simple"
 20158                           ; Number of cases is 2, Range of values is 43 to 45
 20159                           ; switch strategies available:
 20160                           ; Name         Instructions Cycles
 20161                           ; simple_byte            7     4 (average)
 20162                           ;	Chosen strategy is simple_byte
 20163  01508E  503C               	movf	(btemp+10)^0,w,c
 20164  015090  0A2B               	xorlw	43	; case 43
 20165  015092  B4D8               	btfsc	status,2,c
 20166  015094  D7D3               	goto	l10690
 20167  015096  0A06               	xorlw	6	; case 45
 20168  015098  B4D8               	btfsc	status,2,c
 20169  01509A  D7C4               	goto	l10688
 20170  01509C  D034               	goto	l10698
 20171  01509E                     l10694:
 20172                           
 20173                           ;stkvar	_n @ sp[(-9)+5]
 20174  01509E  0EFC               	movlw	-4
 20175  0150A0  006F FF8C  F03C    	movff	plusw1,btemp+10
 20176  0150A6  0EFD               	movlw	-3
 20177  0150A8  006F FF8C  F03D    	movff	plusw1,btemp+11
 20178  0150AE  0E0A               	movlw	10
 20179  0150B0  023C               	mulwf	(btemp+10)^0,c
 20180  0150B2  006F FFCC  F03A    	movff	prodl,btemp+8
 20181  0150B8  006F FFD0  F03B    	movff	prodh,btemp+9
 20182  0150BE  023D               	mulwf	(btemp+11)^0,c
 20183  0150C0  50F3               	movf	prodl,w,c
 20184  0150C2  263B               	addwf	(btemp+9)^0,f,c
 20185                           
 20186                           ;stkvar	_s @ sp[(-9)+-2]
 20187  0150C4  50E1               	movf	fsr1l,w,c
 20188  0150C6  0FF5               	addlw	-11
 20189  0150C8  6ED9               	movwf	fsr2l,c
 20190  0150CA  50E2               	movf	fsr1h,w,c
 20191  0150CC  6EDA               	movwf	fsr2h,c
 20192  0150CE  0EFF               	movlw	255
 20193  0150D0  22DA               	addwfc	fsr2h,f,c
 20194  0150D2  006F FF7B FFF6     	movff	postinc2,tblptrl
 20195  0150D8  006F FF77 FFF7     	movff	postdec2,tblptrh
 20196  0150DE                     	if	0	;tblptru may be non-zero
 20197  0150DE                     	endif
 20198  0150DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20199  0150DE  0E00               	movlw	low (__mediumconst shr (0+16))
 20200  0150E0  6EF8               	movwf	tblptru,c
 20201  0150E2                     	endif
 20202  0150E2  0008               	tblrd		*
 20203  0150E4  50F5               	movf	tablat,w,c
 20204  0150E6  5E3A               	subwf	(btemp+8)^0,f,c
 20205  0150E8  0E00               	movlw	0
 20206  0150EA  5A3B               	subwfb	(btemp+9)^0,f,c
 20207  0150EC  0E30               	movlw	48
 20208  0150EE  263A               	addwf	(btemp+8)^0,f,c
 20209  0150F0  0E00               	movlw	0
 20210  0150F2  223B               	addwfc	(btemp+9)^0,f,c
 20211                           
 20212                           ;stkvar	_n @ sp[(-9)+5]
 20213  0150F4  0EFC               	movlw	-4
 20214  0150F6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20215  0150FC  0EFD               	movlw	-3
 20216  0150FE  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20217  015104  D79B               	goto	l10690
 20218  015106                     l10698:
 20219  015106  0ED0               	movlw	208
 20220  015108  6E3C               	movwf	(btemp+10)^0,c
 20221  01510A  0EFF               	movlw	255
 20222  01510C  6E3D               	movwf	(btemp+11)^0,c
 20223                           
 20224                           ;stkvar	_s @ sp[(-9)+-2]
 20225  01510E  50E1               	movf	fsr1l,w,c
 20226  015110  0FF5               	addlw	-11
 20227  015112  6ED9               	movwf	fsr2l,c
 20228  015114  50E2               	movf	fsr1h,w,c
 20229  015116  6EDA               	movwf	fsr2h,c
 20230  015118  0EFF               	movlw	255
 20231  01511A  22DA               	addwfc	fsr2h,f,c
 20232  01511C  006F FF7B FFF6     	movff	postinc2,tblptrl
 20233  015122  006F FF77 FFF7     	movff	postdec2,tblptrh
 20234  015128                     	if	0	;tblptru may be non-zero
 20235  015128                     	endif
 20236  015128                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20237  015128  0E00               	movlw	low (__mediumconst shr (0+16))
 20238  01512A  6EF8               	movwf	tblptru,c
 20239  01512C                     	endif
 20240  01512C  0008               	tblrd		*
 20241  01512E  50F5               	movf	tablat,w,c
 20242  015130  6E3A               	movwf	(btemp+8)^0,c
 20243  015132  6A3B               	clrf	(btemp+9)^0,c
 20244  015134  503C               	movf	(btemp+10)^0,w,c
 20245  015136  263A               	addwf	(btemp+8)^0,f,c
 20246  015138  503D               	movf	(btemp+11)^0,w,c
 20247  01513A  223B               	addwfc	(btemp+9)^0,f,c
 20248  01513C  503B               	movf	(btemp+9)^0,w,c
 20249  01513E  E106               	bnz	u11660
 20250  015140  0E0A               	movlw	10
 20251  015142  5C3A               	subwf	(btemp+8)^0,w,c
 20252  015144  B0D8               	btfsc	status,0,c
 20253  015146  D002               	goto	u11660
 20254  015148  0E01               	movlw	1
 20255  01514A  D001               	goto	u11670
 20256  01514C                     u11660:
 20257  01514C  0E00               	movlw	0
 20258  01514E                     u11670:
 20259  01514E  6E3C               	movwf	(btemp+10)^0,c
 20260  015150  6A3D               	clrf	(btemp+11)^0,c
 20261                           
 20262                           ;stkvar	_atoi$4887 @ sp[(-9)+0]
 20263  015152  0EF7               	movlw	-9
 20264  015154  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20265  01515A  0EF8               	movlw	-8
 20266  01515C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20267                           
 20268                           ;stkvar	_atoi$4887 @ sp[(-9)+0]
 20269  015162  0EF7               	movlw	-9
 20270  015164  006F FF8C  F032    	movff	plusw1,btemp
 20271  01516A  0EF8               	movlw	-8
 20272  01516C  50E3               	movf	plusw1,w,c
 20273  01516E  1032               	iorwf	btemp^0,w,c
 20274  015170  A4D8               	btfss	status,2,c
 20275  015172  D795               	goto	l10694
 20276                           
 20277                           ;stkvar	_neg @ sp[(-9)+7]
 20278  015174  0EFE               	movlw	-2
 20279  015176  006F FF8C  F032    	movff	plusw1,btemp
 20280  01517C  0EFF               	movlw	-1
 20281  01517E  50E3               	movf	plusw1,w,c
 20282  015180  1032               	iorwf	btemp^0,w,c
 20283  015182  A4D8               	btfss	status,2,c
 20284  015184  D00E               	goto	l10708
 20285                           
 20286                           ;stkvar	_n @ sp[(-9)+5]
 20287  015186  0EFC               	movlw	-4
 20288  015188  006F FF8C  F032    	movff	plusw1,btemp
 20289  01518E  1E32               	comf	btemp^0,f,c
 20290  015190  0EFD               	movlw	-3
 20291  015192  006F FF8C  F033    	movff	plusw1,btemp+1
 20292  015198  1E33               	comf	(btemp+1)^0,f,c
 20293  01519A  2A32               	incf	btemp^0,f,c
 20294  01519C  B4D8               	btfsc	status,2,c
 20295  01519E  2A33               	incf	(btemp+1)^0,f,c
 20296  0151A0  D008               	goto	l2757
 20297  0151A2                     l10708:
 20298                           
 20299                           ;stkvar	_n @ sp[(-9)+5]
 20300  0151A2  0EFC               	movlw	-4
 20301  0151A4  006F FF8C  F032    	movff	plusw1,btemp
 20302  0151AA  0EFD               	movlw	-3
 20303  0151AC  006F FF8C  F033    	movff	plusw1,btemp+1
 20304  0151B2                     l2757:
 20305                           
 20306                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 20307  0151B2  0EF5               	movlw	245
 20308  0151B4  26E1               	addwf	fsr1l,f,c
 20309  0151B6  0EFF               	movlw	255
 20310  0151B8  22E2               	addwfc	fsr1h,f,c
 20311  0151BA  0012               	return		;funcret
 20312  0151BC                     __end_of_atoi:
 20313                           	opt callstack 0
 20314                           
 20315 ;; *************** function _isspace *****************
 20316 ;; Defined at:
 20317 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 20318 ;; Parameters:    Size  Location     Type
 20319 ;;  c               2  [STACK] int 
 20320 ;; Auto vars:     Size  Location     Type
 20321 ;;		None
 20322 ;; Return value:  Size  Location     Type
 20323 ;;                  2  [STACK] int 
 20324 ;; Registers used:
 20325 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20326 ;; Tracked objects:
 20327 ;;		On entry : 0/0
 20328 ;;		On exit  : 0/0
 20329 ;;		Unchanged: 0/0
 20330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20335 ;;Total ram usage:        0 bytes
 20336 ;; Hardware stack levels used:    1
 20337 ;; Hardware stack levels required when called:    6
 20338 ;; This function calls:
 20339 ;;		Nothing
 20340 ;; This function is called by:
 20341 ;;		_atoi
 20342 ;; This function uses a reentrant model
 20343 ;;
 20344                           
 20345                           	psect	text71
 20346  017944                     __ptext71:
 20347                           	opt callstack 0
 20348  017944                     _isspace:
 20349                           	opt callstack 0
 20350                           
 20351                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20352  017944  52E6               	movf	postinc1,f,c
 20353                           
 20354                           ;stkvar	_isspace$4925 @ sp[(-1)+0]
 20355                           
 20356                           ;incstack = 0
 20357  017946  0EFF               	movlw	-1
 20358  017948  6AE3               	clrf	plusw1,c
 20359  01794A  2AE3               	incf	plusw1,f,c
 20360                           
 20361                           ;stkvar	_c @ sp[(-1)+-2]
 20362  01794C  0EFD               	movlw	-3
 20363  01794E  006F FF8C  F032    	movff	plusw1,btemp
 20364  017954  0E20               	movlw	32
 20365  017956  1832               	xorwf	btemp^0,w,c
 20366  017958  E104               	bnz	u10630
 20367  01795A  0EFE               	movlw	-2
 20368  01795C  50E3               	movf	plusw1,w,c
 20369  01795E  B4D8               	btfsc	status,2,c
 20370  017960  D012               	goto	l10158
 20371  017962                     u10630:
 20372                           
 20373                           ;stkvar	_c @ sp[(-1)+-2]
 20374  017962  0EFD               	movlw	-3
 20375  017964  50E3               	movf	plusw1,w,c
 20376  017966  0FF7               	addlw	247
 20377  017968  6E3C               	movwf	(btemp+10)^0,c
 20378  01796A  0EFE               	movlw	-2
 20379  01796C  006F FF8C  F03D    	movff	plusw1,btemp+11
 20380  017972  0EFF               	movlw	255
 20381  017974  223D               	addwfc	(btemp+11)^0,f,c
 20382  017976  503D               	movf	(btemp+11)^0,w,c
 20383  017978  E104               	bnz	u10640
 20384  01797A  0E05               	movlw	5
 20385  01797C  5C3C               	subwf	(btemp+10)^0,w,c
 20386  01797E  A0D8               	btfss	status,0,c
 20387  017980  D002               	goto	l10158
 20388  017982                     u10640:
 20389                           
 20390                           ;stkvar	_isspace$4925 @ sp[(-1)+0]
 20391  017982  0EFF               	movlw	-1
 20392  017984  6AE3               	clrf	plusw1,c
 20393  017986                     l10158:
 20394                           
 20395                           ;stkvar	_isspace$4925 @ sp[(-1)+0]
 20396  017986  0EFF               	movlw	-1
 20397  017988  50E3               	movf	plusw1,w,c
 20398  01798A  6E32               	movwf	btemp^0,c
 20399  01798C  6A33               	clrf	(btemp+1)^0,c
 20400                           
 20401                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20402  01798E  52E5               	movf	postdec1,f,c
 20403  017990  52E5               	movf	postdec1,f,c
 20404  017992  52E5               	movf	postdec1,f,c
 20405  017994  0012               	return		;funcret
 20406  017996                     __end_of_isspace:
 20407                           	opt callstack 0
 20408                           
 20409 ;; *************** function _isdigit *****************
 20410 ;; Defined at:
 20411 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 20412 ;; Parameters:    Size  Location     Type
 20413 ;;  c               2  [STACK] int 
 20414 ;; Auto vars:     Size  Location     Type
 20415 ;;		None
 20416 ;; Return value:  Size  Location     Type
 20417 ;;                  2  [STACK] int 
 20418 ;; Registers used:
 20419 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20420 ;; Tracked objects:
 20421 ;;		On entry : 0/0
 20422 ;;		On exit  : 0/0
 20423 ;;		Unchanged: 0/0
 20424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20429 ;;Total ram usage:        0 bytes
 20430 ;; Hardware stack levels used:    1
 20431 ;; Hardware stack levels required when called:    6
 20432 ;; This function calls:
 20433 ;;		Nothing
 20434 ;; This function is called by:
 20435 ;;		_vfpfcnvrt
 20436 ;;		_atoi
 20437 ;; This function uses a reentrant model
 20438 ;;
 20439                           
 20440                           	psect	text72
 20441  017DEA                     __ptext72:
 20442                           	opt callstack 0
 20443  017DEA                     _isdigit:
 20444                           	opt callstack 18
 20445                           
 20446                           ;stkvar	_c @ sp[(0)+-2]
 20447                           
 20448                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20449                           ;incstack = 0
 20450  017DEA  0EFE               	movlw	-2
 20451  017DEC  50E3               	movf	plusw1,w,c
 20452  017DEE  0FD0               	addlw	208
 20453  017DF0  6E3C               	movwf	(btemp+10)^0,c
 20454  017DF2  0EFF               	movlw	-1
 20455  017DF4  006F FF8C  F03D    	movff	plusw1,btemp+11
 20456  017DFA  0EFF               	movlw	255
 20457  017DFC  223D               	addwfc	(btemp+11)^0,f,c
 20458  017DFE  503D               	movf	(btemp+11)^0,w,c
 20459  017E00  E106               	bnz	u9590
 20460  017E02  0E0A               	movlw	10
 20461  017E04  5C3C               	subwf	(btemp+10)^0,w,c
 20462  017E06  B0D8               	btfsc	status,0,c
 20463  017E08  D002               	goto	u9590
 20464  017E0A  0E01               	movlw	1
 20465  017E0C  D001               	goto	u9600
 20466  017E0E                     u9590:
 20467  017E0E  0E00               	movlw	0
 20468  017E10                     u9600:
 20469  017E10  6E32               	movwf	btemp^0,c
 20470  017E12  6A33               	clrf	(btemp+1)^0,c
 20471                           
 20472                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20473  017E14  52E5               	movf	postdec1,f,c
 20474  017E16  52E5               	movf	postdec1,f,c
 20475  017E18  0012               	return		;funcret
 20476  017E1A                     __end_of_isdigit:
 20477                           	opt callstack 0
 20478                           
 20479 ;; *************** function _set_vterm *****************
 20480 ;; Defined at:
 20481 ;;		line 107 in file "mconfig.c"
 20482 ;; Parameters:    Size  Location     Type
 20483 ;;  vterm           1  [STACK] const unsigned char 
 20484 ;; Auto vars:     Size  Location     Type
 20485 ;;		None
 20486 ;; Return value:  Size  Location     Type
 20487 ;;                  1  [STACK] unsigned char 
 20488 ;; Registers used:
 20489 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 20490 ;; Tracked objects:
 20491 ;;		On entry : 0/1
 20492 ;;		On exit  : 3F/5
 20493 ;;		Unchanged: 0/0
 20494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20499 ;;Total ram usage:        0 bytes
 20500 ;; Hardware stack levels used:    1
 20501 ;; Hardware stack levels required when called:    6
 20502 ;; This function calls:
 20503 ;;		Nothing
 20504 ;; This function is called by:
 20505 ;;		_main
 20506 ;;		_check_help
 20507 ;; This function uses a reentrant model
 20508 ;;
 20509                           
 20510                           	psect	text73
 20511  018378                     __ptext73:
 20512                           	opt callstack 0
 20513  018378                     _set_vterm:
 20514                           	opt callstack 24
 20515                           
 20516                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 20517                           ;stkvar	_vterm @ sp[(0)+-1]
 20518                           
 20519                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20520                           ;incstack = 0
 20521  018378  0EFF               	movlw	-1
 20522  01837A  006F FF8C  F03D    	movff	plusw1,btemp+11
 20523  018380  0E03               	movlw	3
 20524  018382  163D               	andwf	(btemp+11)^0,f,c
 20525  018384  0105               	movlb	5	; () banked
 20526  018386  51D8               	movf	(_D+216)& (0+255),w,b
 20527  018388  183D               	xorwf	(btemp+11)^0,w,c
 20528  01838A  0BFE               	andlw	-2
 20529  01838C  183D               	xorwf	(btemp+11)^0,w,c
 20530  01838E  6FD8               	movwf	(_D+216)& (0+255),b
 20531                           
 20532                           ; BSR set to: 5
 20533                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20534  018390  52E5               	movf	postdec1,f,c
 20535  018392  0012               	return		;funcret
 20536  018394                     __end_of_set_vterm:
 20537                           	opt callstack 0
 20538                           
 20539 ;; *************** function _set_temp_display_help *****************
 20540 ;; Defined at:
 20541 ;;		line 211 in file "mconfig.c"
 20542 ;; Parameters:    Size  Location     Type
 20543 ;;  new_response    1  [STACK] const enum E16501
 20544 ;; Auto vars:     Size  Location     Type
 20545 ;;		None
 20546 ;; Return value:  Size  Location     Type
 20547 ;;                  1  [STACK] enum E16501
 20548 ;; Registers used:
 20549 ;;		wreg, fsr1l, fsr1h
 20550 ;; Tracked objects:
 20551 ;;		On entry : 0/5
 20552 ;;		On exit  : 3F/1
 20553 ;;		Unchanged: 0/0
 20554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20559 ;;Total ram usage:        0 bytes
 20560 ;; Hardware stack levels used:    1
 20561 ;; Hardware stack levels required when called:    6
 20562 ;; This function calls:
 20563 ;;		Nothing
 20564 ;; This function is called by:
 20565 ;;		_check_help
 20566 ;; This function uses a reentrant model
 20567 ;;
 20568                           
 20569                           	psect	text74
 20570  018472                     __ptext74:
 20571                           	opt callstack 0
 20572  018472                     _set_temp_display_help:
 20573                           	opt callstack 23
 20574                           
 20575                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 20576                           
 20577                           ; BSR set to: 5
 20578                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20579                           ;incstack = 0
 20580  018472  0101               	movlb	1	; () banked
 20581  018474  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 20582                           
 20583                           ; BSR set to: 1
 20584                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 20585                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20586  018476  0EFF               	movlw	-1
 20587  018478  006F FF8C  F1A4    	movff	plusw1,_V+164	;volatile
 20588                           
 20589                           ; BSR set to: 1
 20590                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 20591  01847E  52E5               	movf	postdec1,f,c
 20592  018480  0012               	return		;funcret
 20593  018482                     __end_of_set_temp_display_help:
 20594                           	opt callstack 0
 20595                           
 20596 ;; *************** function _set_display_info *****************
 20597 ;; Defined at:
 20598 ;;		line 200 in file "mconfig.c"
 20599 ;; Parameters:    Size  Location     Type
 20600 ;;  new_response    1  [STACK] const enum E16501
 20601 ;; Auto vars:     Size  Location     Type
 20602 ;;		None
 20603 ;; Return value:  Size  Location     Type
 20604 ;;                  1  [STACK] enum E16986
 20605 ;; Registers used:
 20606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20607 ;; Tracked objects:
 20608 ;;		On entry : 0/39
 20609 ;;		On exit  : 0/0
 20610 ;;		Unchanged: 0/0
 20611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20616 ;;Total ram usage:        0 bytes
 20617 ;; Hardware stack levels used:    1
 20618 ;; Hardware stack levels required when called:    7
 20619 ;; This function calls:
 20620 ;;		_TimerDone
 20621 ;; This function is called by:
 20622 ;;		_main
 20623 ;;		_check_help
 20624 ;; This function uses a reentrant model
 20625 ;;
 20626                           
 20627                           	psect	text75
 20628  018302                     __ptext75:
 20629                           	opt callstack 0
 20630  018302                     _set_display_info:
 20631                           	opt callstack 23
 20632                           
 20633                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 20634                           
 20635                           ; BSR set to: 1
 20636                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20637                           ;incstack = 0
 20638  018302  0E07               	movlw	7
 20639  018304  6EE6               	movwf	postinc1,c
 20640  018306  ECFB  F0C0         	call	_TimerDone	;wreg free
 20641  01830A  5032               	movf	btemp^0,w,c
 20642  01830C  B4D8               	btfsc	status,2,c
 20643  01830E  D006               	goto	l1603
 20644                           
 20645                           ;mconfig.c: 205:   old_info = V.response.info;
 20646  018310  0101               	movlb	1	; () banked
 20647  018312  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 20648                           
 20649                           ; BSR set to: 1
 20650                           ;mconfig.c: 206:   V.response.info = new_response_info;
 20651                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20652  018314  0EFF               	movlw	-1
 20653  018316  006F FF8C  F1A3    	movff	plusw1,_V+163	;volatile
 20654  01831C                     l1603:
 20655                           
 20656                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 20657  01831C  52E5               	movf	postdec1,f,c
 20658  01831E  0012               	return		;funcret
 20659  018320                     __end_of_set_display_info:
 20660                           	opt callstack 0
 20661                           
 20662 ;; *************** function _mode_lamp_dim *****************
 20663 ;; Defined at:
 20664 ;;		line 13 in file "mconfig.c"
 20665 ;; Parameters:    Size  Location     Type
 20666 ;;  level           2  [STACK] const unsigned short 
 20667 ;; Auto vars:     Size  Location     Type
 20668 ;;		None
 20669 ;; Return value:  Size  Location     Type
 20670 ;;                  1  [STACK] void 
 20671 ;; Registers used:
 20672 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20673 ;; Tracked objects:
 20674 ;;		On entry : 0/1
 20675 ;;		On exit  : 0/0
 20676 ;;		Unchanged: 0/0
 20677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20682 ;;Total ram usage:        0 bytes
 20683 ;; Hardware stack levels used:    1
 20684 ;; Hardware stack levels required when called:    7
 20685 ;; This function calls:
 20686 ;;		_PWM8_LoadDutyValue
 20687 ;; This function is called by:
 20688 ;;		_main
 20689 ;;		_check_help
 20690 ;; This function uses a reentrant model
 20691 ;;
 20692                           
 20693                           	psect	text76
 20694  0183CA                     __ptext76:
 20695                           	opt callstack 0
 20696  0183CA                     _mode_lamp_dim:
 20697                           	opt callstack 23
 20698                           
 20699                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 20700                           ;stkvar	_level @ sp[(0)+-2]
 20701                           
 20702                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20703                           ;incstack = 0
 20704  0183CA  0EFE               	movlw	-2
 20705  0183CC  006F FF8F FFE6     	movff	plusw1,postinc1
 20706  0183D2  006F FF8F FFE6     	movff	plusw1,postinc1
 20707  0183D8  ECC0  F0BD         	call	_PWM8_LoadDutyValue	;wreg free
 20708                           
 20709                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 20710  0183DC  52E5               	movf	postdec1,f,c
 20711  0183DE  52E5               	movf	postdec1,f,c
 20712  0183E0  0012               	return		;funcret
 20713  0183E2                     __end_of_mode_lamp_dim:
 20714                           	opt callstack 0
 20715                           
 20716 ;; *************** function _mode_lamp_bright *****************
 20717 ;; Defined at:
 20718 ;;		line 18 in file "mconfig.c"
 20719 ;; Parameters:    Size  Location     Type
 20720 ;;		None
 20721 ;; Auto vars:     Size  Location     Type
 20722 ;;		None
 20723 ;; Return value:  Size  Location     Type
 20724 ;;                  1  [STACK] void 
 20725 ;; Registers used:
 20726 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20727 ;; Tracked objects:
 20728 ;;		On entry : 0/1
 20729 ;;		On exit  : 0/0
 20730 ;;		Unchanged: 0/0
 20731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20736 ;;Total ram usage:        0 bytes
 20737 ;; Hardware stack levels used:    1
 20738 ;; Hardware stack levels required when called:    7
 20739 ;; This function calls:
 20740 ;;		_PWM8_LoadDutyValue
 20741 ;; This function is called by:
 20742 ;;		_check_help
 20743 ;; This function uses a reentrant model
 20744 ;;
 20745                           
 20746                           	psect	text77
 20747  018490                     __ptext77:
 20748                           	opt callstack 0
 20749  018490                     _mode_lamp_bright:
 20750                           	opt callstack 22
 20751                           
 20752                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 20753                           
 20754                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20755                           ;incstack = 0
 20756  018490  0E2C               	movlw	44
 20757  018492  6EE6               	movwf	postinc1,c
 20758  018494  0E01               	movlw	1
 20759  018496  6EE6               	movwf	postinc1,c
 20760  018498  ECC0  F0BD         	call	_PWM8_LoadDutyValue	;wreg free
 20761                           
 20762                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 20763  01849C  0012               	return		;funcret
 20764  01849E                     __end_of_mode_lamp_bright:
 20765                           	opt callstack 0
 20766                           
 20767 ;; *************** function _PWM8_LoadDutyValue *****************
 20768 ;; Defined at:
 20769 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 20770 ;; Parameters:    Size  Location     Type
 20771 ;;  dutyValue       2  [STACK] unsigned short 
 20772 ;; Auto vars:     Size  Location     Type
 20773 ;;		None
 20774 ;; Return value:  Size  Location     Type
 20775 ;;                  1  [STACK] void 
 20776 ;; Registers used:
 20777 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20778 ;; Tracked objects:
 20779 ;;		On entry : 0/1
 20780 ;;		On exit  : 0/0
 20781 ;;		Unchanged: 0/0
 20782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20787 ;;Total ram usage:        0 bytes
 20788 ;; Hardware stack levels used:    1
 20789 ;; Hardware stack levels required when called:    6
 20790 ;; This function calls:
 20791 ;;		Nothing
 20792 ;; This function is called by:
 20793 ;;		_mode_lamp_dim
 20794 ;;		_mode_lamp_bright
 20795 ;; This function uses a reentrant model
 20796 ;;
 20797                           
 20798                           	psect	text78
 20799  017B80                     __ptext78:
 20800                           	opt callstack 0
 20801  017B80                     _PWM8_LoadDutyValue:
 20802                           	opt callstack 23
 20803                           
 20804                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 20805                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20806                           
 20807                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20808                           ;incstack = 0
 20809  017B80  0EFE               	movlw	-2
 20810  017B82  006F FF8C  F03C    	movff	plusw1,btemp+10
 20811  017B88  0EFF               	movlw	-1
 20812  017B8A  006F FF8C  F03D    	movff	plusw1,btemp+11
 20813  017B90  90D8               	bcf	status,0,c
 20814  017B92  323D               	rrcf	(btemp+11)^0,f,c
 20815  017B94  323C               	rrcf	(btemp+10)^0,f,c
 20816  017B96  90D8               	bcf	status,0,c
 20817  017B98  323D               	rrcf	(btemp+11)^0,f,c
 20818  017B9A  323C               	rrcf	(btemp+10)^0,f,c
 20819  017B9C  503C               	movf	(btemp+10)^0,w,c
 20820  017B9E  6E61               	movwf	97,c	;volatile
 20821                           
 20822                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 20823                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20824  017BA0  0EFE               	movlw	-2
 20825  017BA2  006F FF8C  F03D    	movff	plusw1,btemp+11
 20826  017BA8  0E03               	movlw	3
 20827  017BAA  163D               	andwf	(btemp+11)^0,f,c
 20828  017BAC  0E06               	movlw	6
 20829  017BAE  6E32               	movwf	btemp^0,c
 20830  017BB0                     u12125:
 20831  017BB0  90D8               	bcf	status,0,c
 20832  017BB2  363D               	rlcf	(btemp+11)^0,f,c
 20833  017BB4  2E32               	decfsz	btemp^0,f,c
 20834  017BB6  D7FC               	goto	u12125
 20835  017BB8  503D               	movf	(btemp+11)^0,w,c
 20836  017BBA  6E60               	movwf	96,c	;volatile
 20837                           
 20838                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 20839  017BBC  52E5               	movf	postdec1,f,c
 20840  017BBE  52E5               	movf	postdec1,f,c
 20841  017BC0  0012               	return		;funcret
 20842  017BC2                     __end_of_PWM8_LoadDutyValue:
 20843                           	opt callstack 0
 20844                           
 20845 ;; *************** function _help_button *****************
 20846 ;; Defined at:
 20847 ;;		line 26 in file "mconfig.c"
 20848 ;; Parameters:    Size  Location     Type
 20849 ;;		None
 20850 ;; Auto vars:     Size  Location     Type
 20851 ;;		None
 20852 ;; Return value:  Size  Location     Type
 20853 ;;                  1  [STACK] _Bool 
 20854 ;; Registers used:
 20855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20856 ;; Tracked objects:
 20857 ;;		On entry : 0/1
 20858 ;;		On exit  : 0/0
 20859 ;;		Unchanged: 0/0
 20860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20865 ;;Total ram usage:        0 bytes
 20866 ;; Hardware stack levels used:    1
 20867 ;; Hardware stack levels required when called:    7
 20868 ;; This function calls:
 20869 ;;		_StartTimer
 20870 ;;		_TimerDone
 20871 ;; This function is called by:
 20872 ;;		_check_help
 20873 ;; This function uses a reentrant model
 20874 ;;
 20875                           
 20876                           	psect	text79
 20877  017C7E                     __ptext79:
 20878                           	opt callstack 0
 20879  017C7E                     _help_button:
 20880                           	opt callstack 22
 20881                           
 20882                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 20883                           
 20884                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20885                           ;incstack = 0
 20886  017C7E  B0CB               	btfsc	203,0,c	;volatile
 20887  017C80  D00C               	goto	l1546
 20888                           
 20889                           ;mconfig.c: 29:   V.help = 1;
 20890  017C82  0101               	movlb	1	; () banked
 20891  017C84  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 20892                           
 20893                           ; BSR set to: 1
 20894                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 20895  017C86  0E08               	movlw	8
 20896  017C88  6EE6               	movwf	postinc1,c
 20897  017C8A  ECFB  F0C0         	call	_TimerDone	;wreg free
 20898  017C8E  5032               	movf	btemp^0,w,c
 20899  017C90  B4D8               	btfsc	status,2,c
 20900  017C92  D003               	goto	l1546
 20901                           
 20902                           ;mconfig.c: 31:    return 1;
 20903  017C94  0E01               	movlw	1
 20904  017C96  6E32               	movwf	btemp^0,c
 20905  017C98  0012               	return	
 20906  017C9A                     l1546:
 20907                           
 20908                           ;mconfig.c: 34:  if (!V.help)
 20909  017C9A  0101               	movlb	1	; () banked
 20910  017C9C  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 20911  017C9E  D008               	goto	l11580
 20912                           
 20913                           ; BSR set to: 1
 20914                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 20915  017CA0  0E2C               	movlw	44
 20916  017CA2  6EE6               	movwf	postinc1,c
 20917  017CA4  0E01               	movlw	1
 20918  017CA6  6EE6               	movwf	postinc1,c
 20919  017CA8  0E08               	movlw	8
 20920  017CAA  6EE6               	movwf	postinc1,c
 20921  017CAC  EC21  F0BE         	call	_StartTimer	;wreg free
 20922  017CB0                     l11580:
 20923                           
 20924                           ;mconfig.c: 37:  return 0;
 20925  017CB0  0E00               	movlw	0
 20926  017CB2  6E32               	movwf	btemp^0,c
 20927                           
 20928                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 20929  017CB4  0012               	return		;funcret
 20930  017CB6                     __end_of_help_button:
 20931                           	opt callstack 0
 20932                           
 20933 ;; *************** function _TimerDone *****************
 20934 ;; Defined at:
 20935 ;;		line 20 in file "timers.c"
 20936 ;; Parameters:    Size  Location     Type
 20937 ;;  timer           1  [STACK] const unsigned char 
 20938 ;; Auto vars:     Size  Location     Type
 20939 ;;		None
 20940 ;; Return value:  Size  Location     Type
 20941 ;;                  1  [STACK] _Bool 
 20942 ;; Registers used:
 20943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20944 ;; Tracked objects:
 20945 ;;		On entry : 0/39
 20946 ;;		On exit  : 0/0
 20947 ;;		Unchanged: 0/0
 20948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20953 ;;Total ram usage:        0 bytes
 20954 ;; Hardware stack levels used:    1
 20955 ;; Hardware stack levels required when called:    6
 20956 ;; This function calls:
 20957 ;;		Nothing
 20958 ;; This function is called by:
 20959 ;;		_main
 20960 ;;		_WaitMs
 20961 ;;		_help_button
 20962 ;;		_check_help
 20963 ;;		_set_display_info
 20964 ;; This function uses a reentrant model
 20965 ;;
 20966                           
 20967                           	psect	text80
 20968  0181F6                     __ptext80:
 20969                           	opt callstack 0
 20970  0181F6                     _TimerDone:
 20971                           	opt callstack 23
 20972                           
 20973                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20974                           ;incstack = 0
 20975  0181F6  0004               	clrwdt		;# 
 20976                           
 20977                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 20978                           ;stkvar	_timer @ sp[(0)+-1]
 20979  0181F8  0EFF               	movlw	-1
 20980  0181FA  50E3               	movf	plusw1,w,c
 20981  0181FC  0D02               	mullw	2
 20982  0181FE  50F3               	movf	243,w,c
 20983  018200  0F89               	addlw	low _tickCount
 20984  018202  6ED9               	movwf	fsr2l,c
 20985  018204  6ADA               	clrf	fsr2h,c
 20986  018206  50DE               	movf	postinc2,w,c
 20987  018208  10DE               	iorwf	postinc2,w,c
 20988  01820A  A4D8               	btfss	status,2,c
 20989  01820C  D002               	goto	l10994
 20990                           
 20991                           ;timers.c: 24:   return 1;
 20992  01820E  0E01               	movlw	1
 20993  018210  D001               	goto	L18
 20994  018212                     l10994:
 20995                           
 20996                           ;timers.c: 26:  return 0;
 20997  018212  0E00               	movlw	0
 20998  018214                     L18:
 20999  018214  6E32               	movwf	btemp^0,c
 21000                           
 21001                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21002  018216  52E5               	movf	postdec1,f,c
 21003  018218  0012               	return		;funcret
 21004  01821A                     __end_of_TimerDone:
 21005                           	opt callstack 0
 21006                           
 21007 ;; *************** function _StartTimer *****************
 21008 ;; Defined at:
 21009 ;;		line 12 in file "timers.c"
 21010 ;; Parameters:    Size  Location     Type
 21011 ;;  timer           1  [STACK] const unsigned char 
 21012 ;;  count           2  [STACK] const unsigned short 
 21013 ;; Auto vars:     Size  Location     Type
 21014 ;;		None
 21015 ;; Return value:  Size  Location     Type
 21016 ;;                  1  [STACK] void 
 21017 ;; Registers used:
 21018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21019 ;; Tracked objects:
 21020 ;;		On entry : 0/5
 21021 ;;		On exit  : 0/0
 21022 ;;		Unchanged: 0/0
 21023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21028 ;;Total ram usage:        0 bytes
 21029 ;; Hardware stack levels used:    1
 21030 ;; Hardware stack levels required when called:    6
 21031 ;; This function calls:
 21032 ;;		Nothing
 21033 ;; This function is called by:
 21034 ;;		_main
 21035 ;;		_WaitMs
 21036 ;;		_help_button
 21037 ;;		_check_help
 21038 ;; This function uses a reentrant model
 21039 ;;
 21040                           
 21041                           	psect	text81
 21042  017C42                     __ptext81:
 21043                           	opt callstack 0
 21044  017C42                     _StartTimer:
 21045                           	opt callstack 21
 21046                           
 21047                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 21048                           ;stkvar	_count @ sp[(0)+-3]
 21049                           
 21050                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21051                           ;incstack = 0
 21052  017C42  0EFD               	movlw	-3
 21053  017C44  006F FF8C  F03C    	movff	plusw1,btemp+10
 21054  017C4A  0EFE               	movlw	-2
 21055  017C4C  006F FF8C  F03D    	movff	plusw1,btemp+11
 21056  017C52  90D8               	bcf	status,0,c
 21057  017C54  343C               	rlcf	(btemp+10)^0,w,c
 21058  017C56  6E3A               	movwf	(btemp+8)^0,c
 21059  017C58  343D               	rlcf	(btemp+11)^0,w,c
 21060  017C5A  6E3B               	movwf	(btemp+9)^0,c
 21061                           
 21062                           ;stkvar	_timer @ sp[(0)+-1]
 21063  017C5C  0EFF               	movlw	-1
 21064  017C5E  50E3               	movf	plusw1,w,c
 21065  017C60  0D02               	mullw	2
 21066  017C62  50F3               	movf	243,w,c
 21067  017C64  0F89               	addlw	low _tickCount
 21068  017C66  6ED9               	movwf	fsr2l,c
 21069  017C68  6ADA               	clrf	fsr2h,c
 21070  017C6A  0060  F0EB  FFDE   	movff	btemp+8,postinc2
 21071  017C70  0060  F0EF  FFDD   	movff	btemp+9,postdec2
 21072                           
 21073                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 21074  017C76  52E5               	movf	postdec1,f,c
 21075  017C78  52E5               	movf	postdec1,f,c
 21076  017C7A  52E5               	movf	postdec1,f,c
 21077  017C7C  0012               	return		;funcret
 21078  017C7E                     __end_of_StartTimer:
 21079                           	opt callstack 0
 21080                           
 21081 ;; *************** function _display_info *****************
 21082 ;; Defined at:
 21083 ;;		line 190 in file "mconfig.c"
 21084 ;; Parameters:    Size  Location     Type
 21085 ;;		None
 21086 ;; Auto vars:     Size  Location     Type
 21087 ;;		None
 21088 ;; Return value:  Size  Location     Type
 21089 ;;                  1  [STACK] enum E16501
 21090 ;; Registers used:
 21091 ;;		btemp
 21092 ;; Tracked objects:
 21093 ;;		On entry : 0/1
 21094 ;;		On exit  : 0/0
 21095 ;;		Unchanged: 0/0
 21096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21101 ;;Total ram usage:        0 bytes
 21102 ;; Hardware stack levels used:    1
 21103 ;; Hardware stack levels required when called:    6
 21104 ;; This function calls:
 21105 ;;		Nothing
 21106 ;; This function is called by:
 21107 ;;		_check_help
 21108 ;; This function uses a reentrant model
 21109 ;;
 21110                           
 21111                           	psect	text82
 21112  0184F2                     __ptext82:
 21113                           	opt callstack 0
 21114  0184F2                     _display_info:
 21115                           	opt callstack 23
 21116                           
 21117                           ;mconfig.c: 192:  return V.response.info;
 21118                           
 21119                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21120                           ;incstack = 0
 21121  0184F2  0060  F68C  F032   	movff	_V+163,btemp	;volatile
 21122                           
 21123                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21124  0184F8  0012               	return		;funcret
 21125  0184FA                     __end_of_display_info:
 21126                           	opt callstack 0
 21127                           
 21128 ;; *************** function _display_help *****************
 21129 ;; Defined at:
 21130 ;;		line 195 in file "mconfig.c"
 21131 ;; Parameters:    Size  Location     Type
 21132 ;;		None
 21133 ;; Auto vars:     Size  Location     Type
 21134 ;;		None
 21135 ;; Return value:  Size  Location     Type
 21136 ;;                  1  [STACK] enum E16501
 21137 ;; Registers used:
 21138 ;;		btemp
 21139 ;; Tracked objects:
 21140 ;;		On entry : 3F/1
 21141 ;;		On exit  : 0/0
 21142 ;;		Unchanged: 0/0
 21143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21148 ;;Total ram usage:        0 bytes
 21149 ;; Hardware stack levels used:    1
 21150 ;; Hardware stack levels required when called:    6
 21151 ;; This function calls:
 21152 ;;		Nothing
 21153 ;; This function is called by:
 21154 ;;		_check_help
 21155 ;; This function uses a reentrant model
 21156 ;;
 21157                           
 21158                           	psect	text83
 21159  0184FA                     __ptext83:
 21160                           	opt callstack 0
 21161  0184FA                     _display_help:
 21162                           	opt callstack 23
 21163                           
 21164                           ;mconfig.c: 197:  return V.response.help_temp;
 21165                           
 21166                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21167                           ;incstack = 0
 21168  0184FA  0060  F690  F032   	movff	_V+164,btemp	;volatile
 21169                           
 21170                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21171  018500  0012               	return		;funcret
 21172  018502                     __end_of_display_help:
 21173                           	opt callstack 0
 21174                           
 21175 ;; *************** function _check_adc_scan *****************
 21176 ;; Defined at:
 21177 ;;		line 56 in file "daq.c"
 21178 ;; Parameters:    Size  Location     Type
 21179 ;;		None
 21180 ;; Auto vars:     Size  Location     Type
 21181 ;;		None
 21182 ;; Return value:  Size  Location     Type
 21183 ;;                  1  [STACK] _Bool 
 21184 ;; Registers used:
 21185 ;;		btemp
 21186 ;; Tracked objects:
 21187 ;;		On entry : 0/39
 21188 ;;		On exit  : 0/0
 21189 ;;		Unchanged: 0/0
 21190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21195 ;;Total ram usage:        0 bytes
 21196 ;; Hardware stack levels used:    1
 21197 ;; Hardware stack levels required when called:    6
 21198 ;; This function calls:
 21199 ;;		Nothing
 21200 ;; This function is called by:
 21201 ;;		_main
 21202 ;; This function uses a reentrant model
 21203 ;;
 21204                           
 21205                           	psect	text84
 21206  018502                     __ptext84:
 21207                           	opt callstack 0
 21208  018502                     _check_adc_scan:
 21209                           	opt callstack 24
 21210                           
 21211                           ;daq.c: 58:  return R.done;
 21212                           
 21213                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21214                           ;incstack = 0
 21215  018502  0060  F3B8  F032   	movff	_R+39,btemp	;volatile
 21216                           
 21217                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21218  018508  0012               	return		;funcret
 21219  01850A                     __end_of_check_adc_scan:
 21220                           	opt callstack 0
 21221                           
 21222 ;; *************** function _SYSTEM_Initialize *****************
 21223 ;; Defined at:
 21224 ;;		line 50 in file "mcc_generated_files/mcc.c"
 21225 ;; Parameters:    Size  Location     Type
 21226 ;;		None
 21227 ;; Auto vars:     Size  Location     Type
 21228 ;;		None
 21229 ;; Return value:  Size  Location     Type
 21230 ;;                  1  [STACK] void 
 21231 ;; Registers used:
 21232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 21233 ;; Tracked objects:
 21234 ;;		On entry : 0/0
 21235 ;;		On exit  : 3F/3C
 21236 ;;		Unchanged: 0/0
 21237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21242 ;;Total ram usage:        0 bytes
 21243 ;; Hardware stack levels used:    1
 21244 ;; Hardware stack levels required when called:    8
 21245 ;; This function calls:
 21246 ;;		_ADCC_Initialize
 21247 ;;		_CLKREF_Initialize
 21248 ;;		_DMA1_Initialize
 21249 ;;		_DMA2_Initialize
 21250 ;;		_EXT_INT_Initialize
 21251 ;;		_FVR_Initialize
 21252 ;;		_INTERRUPT_Initialize
 21253 ;;		_OSCILLATOR_Initialize
 21254 ;;		_PIN_MANAGER_Initialize
 21255 ;;		_PMD_Initialize
 21256 ;;		_PWM8_Initialize
 21257 ;;		_SPI1_Initialize
 21258 ;;		_TMR2_Initialize
 21259 ;;		_TMR5_Initialize
 21260 ;;		_TMR6_Initialize
 21261 ;;		_UART1_Initialize
 21262 ;;		_UART2_Initialize
 21263 ;; This function is called by:
 21264 ;;		_main
 21265 ;; This function uses a reentrant model
 21266 ;;
 21267                           
 21268                           	psect	text85
 21269  017A6A                     __ptext85:
 21270                           	opt callstack 0
 21271  017A6A                     _SYSTEM_Initialize:
 21272                           	opt callstack 22
 21273                           
 21274                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 21275                           
 21276                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21277                           ;incstack = 0
 21278  017A6A  ECCA  F0BA         	call	_INTERRUPT_Initialize	;wreg free
 21279                           
 21280                           ; BSR set to: 57
 21281                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 21282  017A6E  EC1E  F0C2         	call	_PMD_Initialize	;wreg free
 21283                           
 21284                           ; BSR set to: 57
 21285                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 21286  017A72  EC9E  F0B8         	call	_PIN_MANAGER_Initialize	;wreg free
 21287                           
 21288                           ; BSR set to: 58
 21289                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 21290  017A76  EC13  F0C2         	call	_OSCILLATOR_Initialize	;wreg free
 21291                           
 21292                           ; BSR set to: 57
 21293                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 21294  017A7A  EC85  F0C2         	call	_FVR_Initialize	;wreg free
 21295                           
 21296                           ; BSR set to: 62
 21297                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 21298  017A7E  EC60  F0BA         	call	_ADCC_Initialize	;wreg free
 21299                           
 21300                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 21301  017A82  ECF1  F0C1         	call	_TMR2_Initialize	;wreg free
 21302                           
 21303                           ; BSR set to: 57
 21304                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 21305  017A86  EC08  F0C2         	call	_PWM8_Initialize	;wreg free
 21306                           
 21307                           ; BSR set to: 63
 21308                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 21309  017A8A  ECAB  F0BE         	call	_EXT_INT_Initialize	;wreg free
 21310                           
 21311                           ; BSR set to: 57
 21312                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 21313  017A8E  EC68  F0BF         	call	_TMR6_Initialize	;wreg free
 21314                           
 21315                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 21316  017A92  EC58  F0BD         	call	_TMR5_Initialize	;wreg free
 21317                           
 21318                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 21319  017A96  EC2F  F0BB         	call	_UART1_Initialize	;wreg free
 21320                           
 21321                           ; BSR set to: 57
 21322                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 21323  017A9A  ECC3  F0BB         	call	_UART2_Initialize	;wreg free
 21324                           
 21325                           ; BSR set to: 57
 21326                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 21327  017A9E  ECFD  F0C1         	call	_SPI1_Initialize	;wreg free
 21328                           
 21329                           ; BSR set to: 61
 21330                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 21331  017AA2  EC1F  F0BC         	call	_DMA2_Initialize	;wreg free
 21332                           
 21333                           ; BSR set to: 59
 21334                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 21335  017AA6  EC2B  F0BA         	call	_DMA1_Initialize	;wreg free
 21336                           
 21337                           ; BSR set to: 59
 21338                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 21339  017AAA  EC5F  F0C2         	call	_CLKREF_Initialize	;wreg free
 21340                           
 21341                           ; BSR set to: 60
 21342                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 21343  017AAE  0012               	return		;funcret
 21344  017AB0                     __end_of_SYSTEM_Initialize:
 21345                           	opt callstack 0
 21346                           
 21347 ;; *************** function _UART2_Initialize *****************
 21348 ;; Defined at:
 21349 ;;		line 78 in file "mcc_generated_files/uart2.c"
 21350 ;; Parameters:    Size  Location     Type
 21351 ;;		None
 21352 ;; Auto vars:     Size  Location     Type
 21353 ;;		None
 21354 ;; Return value:  Size  Location     Type
 21355 ;;                  1  [STACK] void 
 21356 ;; Registers used:
 21357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21358 ;; Tracked objects:
 21359 ;;		On entry : 3F/39
 21360 ;;		On exit  : 3F/39
 21361 ;;		Unchanged: 0/0
 21362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21367 ;;Total ram usage:        0 bytes
 21368 ;; Hardware stack levels used:    1
 21369 ;; Hardware stack levels required when called:    7
 21370 ;; This function calls:
 21371 ;;		_UART2_SetRxInterruptHandler
 21372 ;;		_UART2_SetTxInterruptHandler
 21373 ;; This function is called by:
 21374 ;;		_SYSTEM_Initialize
 21375 ;; This function uses a reentrant model
 21376 ;;
 21377                           
 21378                           	psect	text86
 21379  017786                     __ptext86:
 21380                           	opt callstack 0
 21381  017786                     _UART2_Initialize:
 21382                           	opt callstack 22
 21383                           
 21384                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 21385                           
 21386                           ; BSR set to: 60
 21387                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21388                           ;incstack = 0
 21389  017786  0139               	movlb	57	; () banked
 21390  017788  9596               	bcf	150,2,b	;volatile
 21391                           
 21392                           ; BSR set to: 57
 21393                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 21394  01778A  0E3E               	movlw	low _UART2_Receive_ISR
 21395  01778C  6EE6               	movwf	postinc1,c
 21396  01778E  0E83               	movlw	high _UART2_Receive_ISR
 21397  017790  6EE6               	movwf	postinc1,c
 21398  017792  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 21399  017794  6EE6               	movwf	postinc1,c
 21400  017796  ECE3  F0BF         	call	_UART2_SetRxInterruptHandler	;wreg free
 21401                           
 21402                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 21403  01779A  0139               	movlb	57	; () banked
 21404  01779C  9796               	bcf	150,3,b	;volatile
 21405                           
 21406                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 21407  01779E  0EA4               	movlw	low _UART2_Transmit_ISR
 21408  0177A0  6EE6               	movwf	postinc1,c
 21409  0177A2  0E7E               	movlw	high _UART2_Transmit_ISR
 21410  0177A4  6EE6               	movwf	postinc1,c
 21411  0177A6  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 21412  0177A8  6EE6               	movwf	postinc1,c
 21413  0177AA  ECCF  F0BF         	call	_UART2_SetTxInterruptHandler	;wreg free
 21414                           
 21415                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 21416  0177AE  013D               	movlb	61	; () banked
 21417  0177B0  6BD4               	clrf	212,b	;volatile
 21418                           
 21419                           ; BSR set to: 61
 21420                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 21421  0177B2  6BD6               	clrf	214,b	;volatile
 21422                           
 21423                           ; BSR set to: 61
 21424                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 21425  0177B4  6BD8               	clrf	216,b	;volatile
 21426                           
 21427                           ; BSR set to: 61
 21428                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 21429  0177B6  0EB0               	movlw	176
 21430  0177B8  6FDA               	movwf	218,b	;volatile
 21431                           
 21432                           ; BSR set to: 61
 21433                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 21434  0177BA  0E80               	movlw	128
 21435  0177BC  6FDB               	movwf	219,b	;volatile
 21436                           
 21437                           ; BSR set to: 61
 21438                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 21439  0177BE  6BDC               	clrf	220,b	;volatile
 21440                           
 21441                           ; BSR set to: 61
 21442                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 21443  0177C0  0E82               	movlw	130
 21444  0177C2  6FDD               	movwf	221,b	;volatile
 21445                           
 21446                           ; BSR set to: 61
 21447                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 21448  0177C4  0E06               	movlw	6
 21449  0177C6  6FDE               	movwf	222,b	;volatile
 21450                           
 21451                           ; BSR set to: 61
 21452                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 21453  0177C8  6BDF               	clrf	223,b	;volatile
 21454                           
 21455                           ; BSR set to: 61
 21456                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 21457  0177CA  6BE0               	clrf	224,b	;volatile
 21458                           
 21459                           ; BSR set to: 61
 21460                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 21461  0177CC  6BE1               	clrf	225,b	;volatile
 21462                           
 21463                           ; BSR set to: 61
 21464                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 21465  0177CE  6BE2               	clrf	226,b	;volatile
 21466                           
 21467                           ; BSR set to: 61
 21468                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 21469  0177D0  6A2B               	clrf	_uart2TxHead^0,c	;volatile
 21470                           
 21471                           ; BSR set to: 61
 21472                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 21473  0177D2  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 21474                           
 21475                           ; BSR set to: 61
 21476                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 21477  0177D4  0E40               	movlw	64
 21478  0177D6  6E29               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 21479                           
 21480                           ; BSR set to: 61
 21481                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 21482  0177D8  6A28               	clrf	_uart2RxHead^0,c	;volatile
 21483                           
 21484                           ; BSR set to: 61
 21485                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 21486  0177DA  6A27               	clrf	_uart2RxTail^0,c	;volatile
 21487                           
 21488                           ; BSR set to: 61
 21489                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 21490  0177DC  6A26               	clrf	_uart2RxCount^0,c	;volatile
 21491                           
 21492                           ; BSR set to: 61
 21493                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 21494  0177DE  0139               	movlb	57	; () banked
 21495  0177E0  8596               	bsf	150,2,b	;volatile
 21496                           
 21497                           ; BSR set to: 57
 21498                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21499  0177E2  0012               	return		;funcret
 21500  0177E4                     __end_of_UART2_Initialize:
 21501                           	opt callstack 0
 21502                           
 21503 ;; *************** function _UART2_SetTxInterruptHandler *****************
 21504 ;; Defined at:
 21505 ;;		line 252 in file "mcc_generated_files/uart2.c"
 21506 ;; Parameters:    Size  Location     Type
 21507 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21508 ;;		 -> UART2_Transmit_ISR(1), 
 21509 ;; Auto vars:     Size  Location     Type
 21510 ;;		None
 21511 ;; Return value:  Size  Location     Type
 21512 ;;                  1  [STACK] void 
 21513 ;; Registers used:
 21514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21515 ;; Tracked objects:
 21516 ;;		On entry : 3F/39
 21517 ;;		On exit  : 0/0
 21518 ;;		Unchanged: 0/0
 21519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21524 ;;Total ram usage:        0 bytes
 21525 ;; Hardware stack levels used:    1
 21526 ;; Hardware stack levels required when called:    6
 21527 ;; This function calls:
 21528 ;;		Nothing
 21529 ;; This function is called by:
 21530 ;;		_UART2_Initialize
 21531 ;; This function uses a reentrant model
 21532 ;;
 21533                           
 21534                           	psect	text87
 21535  017F9E                     __ptext87:
 21536                           	opt callstack 0
 21537  017F9E                     _UART2_SetTxInterruptHandler:
 21538                           	opt callstack 22
 21539                           
 21540                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 21541                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21542                           
 21543                           ; BSR set to: 57
 21544                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21545                           ;incstack = 0
 21546  017F9E  50E1               	movf	fsr1l,w,c
 21547  017FA0  0FFD               	addlw	-3
 21548  017FA2  6ED9               	movwf	fsr2l,c
 21549  017FA4  50E2               	movf	fsr1h,w,c
 21550  017FA6  6EDA               	movwf	fsr2h,c
 21551  017FA8  0EFF               	movlw	255
 21552  017FAA  22DA               	addwfc	fsr2h,f,c
 21553  017FAC  006F FF78  F00D    	movff	postinc2,_UART2_TxInterruptHandler
 21554  017FB2  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler+1
 21555  017FB8  006F FF74  F00F    	movff	postdec2,_UART2_TxInterruptHandler+2
 21556                           
 21557                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21558  017FBE  52E5               	movf	postdec1,f,c
 21559  017FC0  52E5               	movf	postdec1,f,c
 21560  017FC2  52E5               	movf	postdec1,f,c
 21561  017FC4  0012               	return		;funcret
 21562  017FC6                     __end_of_UART2_SetTxInterruptHandler:
 21563                           	opt callstack 0
 21564                           
 21565 ;; *************** function _UART2_SetRxInterruptHandler *****************
 21566 ;; Defined at:
 21567 ;;		line 248 in file "mcc_generated_files/uart2.c"
 21568 ;; Parameters:    Size  Location     Type
 21569 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21570 ;;		 -> UART2_Receive_ISR(1), 
 21571 ;; Auto vars:     Size  Location     Type
 21572 ;;		None
 21573 ;; Return value:  Size  Location     Type
 21574 ;;                  1  [STACK] void 
 21575 ;; Registers used:
 21576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21577 ;; Tracked objects:
 21578 ;;		On entry : 3F/39
 21579 ;;		On exit  : 0/0
 21580 ;;		Unchanged: 0/0
 21581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21586 ;;Total ram usage:        0 bytes
 21587 ;; Hardware stack levels used:    1
 21588 ;; Hardware stack levels required when called:    6
 21589 ;; This function calls:
 21590 ;;		Nothing
 21591 ;; This function is called by:
 21592 ;;		_UART2_Initialize
 21593 ;; This function uses a reentrant model
 21594 ;;
 21595                           
 21596                           	psect	text88
 21597  017FC6                     __ptext88:
 21598                           	opt callstack 0
 21599  017FC6                     _UART2_SetRxInterruptHandler:
 21600                           	opt callstack 22
 21601                           
 21602                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 21603                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21604                           
 21605                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21606                           ;incstack = 0
 21607  017FC6  50E1               	movf	fsr1l,w,c
 21608  017FC8  0FFD               	addlw	-3
 21609  017FCA  6ED9               	movwf	fsr2l,c
 21610  017FCC  50E2               	movf	fsr1h,w,c
 21611  017FCE  6EDA               	movwf	fsr2h,c
 21612  017FD0  0EFF               	movlw	255
 21613  017FD2  22DA               	addwfc	fsr2h,f,c
 21614  017FD4  006F FF78  F010    	movff	postinc2,_UART2_RxInterruptHandler
 21615  017FDA  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler+1
 21616  017FE0  006F FF74  F012    	movff	postdec2,_UART2_RxInterruptHandler+2
 21617                           
 21618                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21619  017FE6  52E5               	movf	postdec1,f,c
 21620  017FE8  52E5               	movf	postdec1,f,c
 21621  017FEA  52E5               	movf	postdec1,f,c
 21622  017FEC  0012               	return		;funcret
 21623  017FEE                     __end_of_UART2_SetRxInterruptHandler:
 21624                           	opt callstack 0
 21625                           
 21626 ;; *************** function _UART1_Initialize *****************
 21627 ;; Defined at:
 21628 ;;		line 79 in file "mcc_generated_files/uart1.c"
 21629 ;; Parameters:    Size  Location     Type
 21630 ;;		None
 21631 ;; Auto vars:     Size  Location     Type
 21632 ;;		None
 21633 ;; Return value:  Size  Location     Type
 21634 ;;                  1  [STACK] void 
 21635 ;; Registers used:
 21636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21637 ;; Tracked objects:
 21638 ;;		On entry : 0/39
 21639 ;;		On exit  : 3F/39
 21640 ;;		Unchanged: 0/0
 21641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21646 ;;Total ram usage:        0 bytes
 21647 ;; Hardware stack levels used:    1
 21648 ;; Hardware stack levels required when called:    7
 21649 ;; This function calls:
 21650 ;;		_UART1_SetRxInterruptHandler
 21651 ;;		_UART1_SetTxInterruptHandler
 21652 ;; This function is called by:
 21653 ;;		_SYSTEM_Initialize
 21654 ;; This function uses a reentrant model
 21655 ;;
 21656                           
 21657                           	psect	text89
 21658  01765E                     __ptext89:
 21659                           	opt callstack 0
 21660  01765E                     _UART1_Initialize:
 21661                           	opt callstack 22
 21662                           
 21663                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 21664                           
 21665                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21666                           ;incstack = 0
 21667  01765E  0139               	movlb	57	; () banked
 21668  017660  9793               	bcf	147,3,b	;volatile
 21669                           
 21670                           ; BSR set to: 57
 21671                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 21672  017662  0E20               	movlw	low _UART1_Receive_ISR
 21673  017664  6EE6               	movwf	postinc1,c
 21674  017666  0E83               	movlw	high _UART1_Receive_ISR
 21675  017668  6EE6               	movwf	postinc1,c
 21676  01766A  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 21677  01766C  6EE6               	movwf	postinc1,c
 21678  01766E  EC0B  F0C0         	call	_UART1_SetRxInterruptHandler	;wreg free
 21679                           
 21680                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 21681  017672  0139               	movlb	57	; () banked
 21682  017674  9993               	bcf	147,4,b	;volatile
 21683                           
 21684                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 21685  017676  0E78               	movlw	low _UART1_Transmit_ISR
 21686  017678  6EE6               	movwf	postinc1,c
 21687  01767A  0E7E               	movlw	high _UART1_Transmit_ISR
 21688  01767C  6EE6               	movwf	postinc1,c
 21689  01767E  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 21690  017680  6EE6               	movwf	postinc1,c
 21691  017682  ECF7  F0BF         	call	_UART1_SetTxInterruptHandler	;wreg free
 21692                           
 21693                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 21694  017686  013D               	movlb	61	; () banked
 21695  017688  6BEC               	clrf	236,b	;volatile
 21696                           
 21697                           ; BSR set to: 61
 21698                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 21699  01768A  6BED               	clrf	237,b	;volatile
 21700                           
 21701                           ; BSR set to: 61
 21702                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 21703  01768C  6BEE               	clrf	238,b	;volatile
 21704                           
 21705                           ; BSR set to: 61
 21706                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 21707  01768E  6BEF               	clrf	239,b	;volatile
 21708                           
 21709                           ; BSR set to: 61
 21710                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 21711  017690  6BF0               	clrf	240,b	;volatile
 21712                           
 21713                           ; BSR set to: 61
 21714                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 21715  017692  6BF1               	clrf	241,b	;volatile
 21716                           
 21717                           ; BSR set to: 61
 21718                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 21719  017694  0EB0               	movlw	176
 21720  017696  6FF2               	movwf	242,b	;volatile
 21721                           
 21722                           ; BSR set to: 61
 21723                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 21724  017698  0E80               	movlw	128
 21725  01769A  6FF3               	movwf	243,b	;volatile
 21726                           
 21727                           ; BSR set to: 61
 21728                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 21729  01769C  6BF4               	clrf	244,b	;volatile
 21730                           
 21731                           ; BSR set to: 61
 21732                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 21733  01769E  0E82               	movlw	130
 21734  0176A0  6FF5               	movwf	245,b	;volatile
 21735                           
 21736                           ; BSR set to: 61
 21737                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 21738  0176A2  0E06               	movlw	6
 21739  0176A4  6FF6               	movwf	246,b	;volatile
 21740                           
 21741                           ; BSR set to: 61
 21742                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 21743  0176A6  6BF7               	clrf	247,b	;volatile
 21744                           
 21745                           ; BSR set to: 61
 21746                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 21747  0176A8  6BF8               	clrf	248,b	;volatile
 21748                           
 21749                           ; BSR set to: 61
 21750                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 21751  0176AA  6BF9               	clrf	249,b	;volatile
 21752                           
 21753                           ; BSR set to: 61
 21754                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 21755  0176AC  6BFA               	clrf	250,b	;volatile
 21756                           
 21757                           ; BSR set to: 61
 21758                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 21759  0176AE  6A31               	clrf	_uart1TxHead^0,c	;volatile
 21760                           
 21761                           ; BSR set to: 61
 21762                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 21763  0176B0  6A30               	clrf	_uart1TxTail^0,c	;volatile
 21764                           
 21765                           ; BSR set to: 61
 21766                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 21767  0176B2  0E40               	movlw	64
 21768  0176B4  6E2F               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 21769                           
 21770                           ; BSR set to: 61
 21771                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 21772  0176B6  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 21773                           
 21774                           ; BSR set to: 61
 21775                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 21776  0176B8  6A2D               	clrf	_uart1RxTail^0,c	;volatile
 21777                           
 21778                           ; BSR set to: 61
 21779                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 21780  0176BA  6A2C               	clrf	_uart1RxCount^0,c	;volatile
 21781                           
 21782                           ; BSR set to: 61
 21783                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 21784  0176BC  0139               	movlb	57	; () banked
 21785  0176BE  8793               	bsf	147,3,b	;volatile
 21786                           
 21787                           ; BSR set to: 57
 21788                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21789  0176C0  0012               	return		;funcret
 21790  0176C2                     __end_of_UART1_Initialize:
 21791                           	opt callstack 0
 21792                           
 21793 ;; *************** function _UART1_SetTxInterruptHandler *****************
 21794 ;; Defined at:
 21795 ;;		line 246 in file "mcc_generated_files/uart1.c"
 21796 ;; Parameters:    Size  Location     Type
 21797 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21798 ;;		 -> UART1_Transmit_ISR(1), 
 21799 ;; Auto vars:     Size  Location     Type
 21800 ;;		None
 21801 ;; Return value:  Size  Location     Type
 21802 ;;                  1  [STACK] void 
 21803 ;; Registers used:
 21804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21805 ;; Tracked objects:
 21806 ;;		On entry : 3F/39
 21807 ;;		On exit  : 0/0
 21808 ;;		Unchanged: 0/0
 21809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21814 ;;Total ram usage:        0 bytes
 21815 ;; Hardware stack levels used:    1
 21816 ;; Hardware stack levels required when called:    6
 21817 ;; This function calls:
 21818 ;;		Nothing
 21819 ;; This function is called by:
 21820 ;;		_UART1_Initialize
 21821 ;; This function uses a reentrant model
 21822 ;;
 21823                           
 21824                           	psect	text90
 21825  017FEE                     __ptext90:
 21826                           	opt callstack 0
 21827  017FEE                     _UART1_SetTxInterruptHandler:
 21828                           	opt callstack 22
 21829                           
 21830                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 21831                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21832                           
 21833                           ; BSR set to: 57
 21834                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21835                           ;incstack = 0
 21836  017FEE  50E1               	movf	fsr1l,w,c
 21837  017FF0  0FFD               	addlw	-3
 21838  017FF2  6ED9               	movwf	fsr2l,c
 21839  017FF4  50E2               	movf	fsr1h,w,c
 21840  017FF6  6EDA               	movwf	fsr2h,c
 21841  017FF8  0EFF               	movlw	255
 21842  017FFA  22DA               	addwfc	fsr2h,f,c
 21843  017FFC  006F FF78  F007    	movff	postinc2,_UART1_TxInterruptHandler
 21844  018002  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler+1
 21845  018008  006F FF74  F009    	movff	postdec2,_UART1_TxInterruptHandler+2
 21846                           
 21847                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21848  01800E  52E5               	movf	postdec1,f,c
 21849  018010  52E5               	movf	postdec1,f,c
 21850  018012  52E5               	movf	postdec1,f,c
 21851  018014  0012               	return		;funcret
 21852  018016                     __end_of_UART1_SetTxInterruptHandler:
 21853                           	opt callstack 0
 21854                           
 21855 ;; *************** function _UART1_SetRxInterruptHandler *****************
 21856 ;; Defined at:
 21857 ;;		line 241 in file "mcc_generated_files/uart1.c"
 21858 ;; Parameters:    Size  Location     Type
 21859 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21860 ;;		 -> UART1_Receive_ISR(1), 
 21861 ;; Auto vars:     Size  Location     Type
 21862 ;;		None
 21863 ;; Return value:  Size  Location     Type
 21864 ;;                  1  [STACK] void 
 21865 ;; Registers used:
 21866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21867 ;; Tracked objects:
 21868 ;;		On entry : 3F/39
 21869 ;;		On exit  : 0/0
 21870 ;;		Unchanged: 0/0
 21871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21876 ;;Total ram usage:        0 bytes
 21877 ;; Hardware stack levels used:    1
 21878 ;; Hardware stack levels required when called:    6
 21879 ;; This function calls:
 21880 ;;		Nothing
 21881 ;; This function is called by:
 21882 ;;		_UART1_Initialize
 21883 ;; This function uses a reentrant model
 21884 ;;
 21885                           
 21886                           	psect	text91
 21887  018016                     __ptext91:
 21888                           	opt callstack 0
 21889  018016                     _UART1_SetRxInterruptHandler:
 21890                           	opt callstack 22
 21891                           
 21892                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 21893                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21894                           
 21895                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21896                           ;incstack = 0
 21897  018016  50E1               	movf	fsr1l,w,c
 21898  018018  0FFD               	addlw	-3
 21899  01801A  6ED9               	movwf	fsr2l,c
 21900  01801C  50E2               	movf	fsr1h,w,c
 21901  01801E  6EDA               	movwf	fsr2h,c
 21902  018020  0EFF               	movlw	255
 21903  018022  22DA               	addwfc	fsr2h,f,c
 21904  018024  006F FF78  F00A    	movff	postinc2,_UART1_RxInterruptHandler
 21905  01802A  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler+1
 21906  018030  006F FF74  F00C    	movff	postdec2,_UART1_RxInterruptHandler+2
 21907                           
 21908                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21909  018036  52E5               	movf	postdec1,f,c
 21910  018038  52E5               	movf	postdec1,f,c
 21911  01803A  52E5               	movf	postdec1,f,c
 21912  01803C  0012               	return		;funcret
 21913  01803E                     __end_of_UART1_SetRxInterruptHandler:
 21914                           	opt callstack 0
 21915                           
 21916 ;; *************** function _TMR6_Initialize *****************
 21917 ;; Defined at:
 21918 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 21919 ;; Parameters:    Size  Location     Type
 21920 ;;		None
 21921 ;; Auto vars:     Size  Location     Type
 21922 ;;		None
 21923 ;; Return value:  Size  Location     Type
 21924 ;;                  1  [STACK] void 
 21925 ;; Registers used:
 21926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21927 ;; Tracked objects:
 21928 ;;		On entry : 3F/39
 21929 ;;		On exit  : 0/0
 21930 ;;		Unchanged: 0/0
 21931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21936 ;;Total ram usage:        0 bytes
 21937 ;; Hardware stack levels used:    1
 21938 ;; Hardware stack levels required when called:    7
 21939 ;; This function calls:
 21940 ;;		_TMR6_SetInterruptHandler
 21941 ;; This function is called by:
 21942 ;;		_SYSTEM_Initialize
 21943 ;; This function uses a reentrant model
 21944 ;;
 21945                           
 21946                           	psect	text92
 21947  017ED0                     __ptext92:
 21948                           	opt callstack 0
 21949  017ED0                     _TMR6_Initialize:
 21950                           	opt callstack 22
 21951                           
 21952                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 21953                           
 21954                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21955                           ;incstack = 0
 21956  017ED0  0E01               	movlw	1
 21957  017ED2  6E96               	movwf	150,c	;volatile
 21958                           
 21959                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 21960  017ED4  6A95               	clrf	149,c	;volatile
 21961                           
 21962                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 21963  017ED6  6A97               	clrf	151,c	;volatile
 21964                           
 21965                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 21966  017ED8  0E7C               	movlw	124
 21967  017EDA  6E93               	movwf	147,c	;volatile
 21968                           
 21969                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 21970  017EDC  6A92               	clrf	146,c	;volatile
 21971                           
 21972                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 21973  017EDE  0139               	movlb	57	; () banked
 21974  017EE0  91A9               	bcf	169,0,b	;volatile
 21975                           
 21976                           ; BSR set to: 57
 21977                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 21978  017EE2  8199               	bsf	153,0,b	;volatile
 21979                           
 21980                           ; BSR set to: 57
 21981                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 21982  017EE4  0EF6               	movlw	low _TMR6_DefaultInterruptHandler
 21983  017EE6  6EE6               	movwf	postinc1,c
 21984  017EE8  0E7A               	movlw	high _TMR6_DefaultInterruptHandler
 21985  017EEA  6EE6               	movwf	postinc1,c
 21986  017EEC  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 21987  017EEE  6EE6               	movwf	postinc1,c
 21988  017EF0  EC1F  F0C0         	call	_TMR6_SetInterruptHandler	;wreg free
 21989                           
 21990                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 21991  017EF4  0EE0               	movlw	224
 21992  017EF6  6E94               	movwf	148,c	;volatile
 21993                           
 21994                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21995  017EF8  0012               	return		;funcret
 21996  017EFA                     __end_of_TMR6_Initialize:
 21997                           	opt callstack 0
 21998                           
 21999 ;; *************** function _TMR6_SetInterruptHandler *****************
 22000 ;; Defined at:
 22001 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 22002 ;; Parameters:    Size  Location     Type
 22003 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22004 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 22005 ;; Auto vars:     Size  Location     Type
 22006 ;;		None
 22007 ;; Return value:  Size  Location     Type
 22008 ;;                  1  [STACK] void 
 22009 ;; Registers used:
 22010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22011 ;; Tracked objects:
 22012 ;;		On entry : 3F/39
 22013 ;;		On exit  : 0/0
 22014 ;;		Unchanged: 0/0
 22015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22020 ;;Total ram usage:        0 bytes
 22021 ;; Hardware stack levels used:    1
 22022 ;; Hardware stack levels required when called:    6
 22023 ;; This function calls:
 22024 ;;		Nothing
 22025 ;; This function is called by:
 22026 ;;		_TMR6_Initialize
 22027 ;; This function uses a reentrant model
 22028 ;;
 22029                           
 22030                           	psect	text93
 22031  01803E                     __ptext93:
 22032                           	opt callstack 0
 22033  01803E                     _TMR6_SetInterruptHandler:
 22034                           	opt callstack 22
 22035                           
 22036                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 22037                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22038                           
 22039                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22040                           ;incstack = 0
 22041  01803E  50E1               	movf	fsr1l,w,c
 22042  018040  0FFD               	addlw	-3
 22043  018042  6ED9               	movwf	fsr2l,c
 22044  018044  50E2               	movf	fsr1h,w,c
 22045  018046  6EDA               	movwf	fsr2h,c
 22046  018048  0EFF               	movlw	255
 22047  01804A  22DA               	addwfc	fsr2h,f,c
 22048  01804C  006F FF78  F0C4    	movff	postinc2,_TMR6_InterruptHandler
 22049  018052  006F FF78  F0C5    	movff	postinc2,_TMR6_InterruptHandler+1
 22050  018058  006F FF74  F0C6    	movff	postdec2,_TMR6_InterruptHandler+2
 22051                           
 22052                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22053  01805E  52E5               	movf	postdec1,f,c
 22054  018060  52E5               	movf	postdec1,f,c
 22055  018062  52E5               	movf	postdec1,f,c
 22056  018064  0012               	return		;funcret
 22057  018066                     __end_of_TMR6_SetInterruptHandler:
 22058                           	opt callstack 0
 22059                           
 22060 ;; *************** function _TMR5_Initialize *****************
 22061 ;; Defined at:
 22062 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 22063 ;; Parameters:    Size  Location     Type
 22064 ;;		None
 22065 ;; Auto vars:     Size  Location     Type
 22066 ;;		None
 22067 ;; Return value:  Size  Location     Type
 22068 ;;                  1  [STACK] void 
 22069 ;; Registers used:
 22070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 22071 ;; Tracked objects:
 22072 ;;		On entry : 0/39
 22073 ;;		On exit  : 0/0
 22074 ;;		Unchanged: 0/0
 22075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22080 ;;Total ram usage:        0 bytes
 22081 ;; Hardware stack levels used:    1
 22082 ;; Hardware stack levels required when called:    7
 22083 ;; This function calls:
 22084 ;;		_TMR5_SetInterruptHandler
 22085 ;; This function is called by:
 22086 ;;		_SYSTEM_Initialize
 22087 ;; This function uses a reentrant model
 22088 ;;
 22089                           
 22090                           	psect	text94
 22091  017AB0                     __ptext94:
 22092                           	opt callstack 0
 22093  017AB0                     _TMR5_Initialize:
 22094                           	opt callstack 22
 22095                           
 22096                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 22097                           
 22098                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22099                           ;incstack = 0
 22100  017AB0  6A9B               	clrf	155,c	;volatile
 22101                           
 22102                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 22103  017AB2  6A9C               	clrf	156,c	;volatile
 22104                           
 22105                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 22106  017AB4  0E01               	movlw	1
 22107  017AB6  6E9D               	movwf	157,c	;volatile
 22108                           
 22109                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 22110  017AB8  0E63               	movlw	99
 22111  017ABA  6E99               	movwf	153,c	;volatile
 22112                           
 22113                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 22114  017ABC  0EC0               	movlw	192
 22115  017ABE  6E98               	movwf	152,c	;volatile
 22116                           
 22117                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 22118  017AC0  5098               	movf	152,w,c	;volatile
 22119  017AC2  006F FE64  F032    	movff	16281,btemp	;volatile
 22120  017AC8  6A33               	clrf	(btemp+1)^0,c
 22121  017ACA  0060  F0C8  F033   	movff	btemp,btemp+1
 22122  017AD0  6A32               	clrf	btemp^0,c
 22123  017AD2  1032               	iorwf	btemp^0,w,c
 22124  017AD4  6E23               	movwf	_timer5ReloadVal^0,c	;volatile
 22125  017AD6  5033               	movf	(btemp+1)^0,w,c
 22126  017AD8  6E24               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 22127                           
 22128                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 22129  017ADA  0139               	movlb	57	; () banked
 22130  017ADC  9DA8               	bcf	168,6,b	;volatile
 22131                           
 22132                           ; BSR set to: 57
 22133                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 22134  017ADE  8D98               	bsf	152,6,b	;volatile
 22135                           
 22136                           ; BSR set to: 57
 22137                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 22138  017AE0  0E2E               	movlw	low _TMR5_DefaultInterruptHandler
 22139  017AE2  6EE6               	movwf	postinc1,c
 22140  017AE4  0E81               	movlw	high _TMR5_DefaultInterruptHandler
 22141  017AE6  6EE6               	movwf	postinc1,c
 22142  017AE8  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 22143  017AEA  6EE6               	movwf	postinc1,c
 22144  017AEC  EC33  F0C0         	call	_TMR5_SetInterruptHandler	;wreg free
 22145                           
 22146                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 22147  017AF0  0E31               	movlw	49
 22148  017AF2  6E9A               	movwf	154,c	;volatile
 22149                           
 22150                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22151  017AF4  0012               	return		;funcret
 22152  017AF6                     __end_of_TMR5_Initialize:
 22153                           	opt callstack 0
 22154                           
 22155 ;; *************** function _TMR5_SetInterruptHandler *****************
 22156 ;; Defined at:
 22157 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 22158 ;; Parameters:    Size  Location     Type
 22159 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22160 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 22161 ;; Auto vars:     Size  Location     Type
 22162 ;;		None
 22163 ;; Return value:  Size  Location     Type
 22164 ;;                  1  [STACK] void 
 22165 ;; Registers used:
 22166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22167 ;; Tracked objects:
 22168 ;;		On entry : 3F/39
 22169 ;;		On exit  : 0/0
 22170 ;;		Unchanged: 0/0
 22171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22176 ;;Total ram usage:        0 bytes
 22177 ;; Hardware stack levels used:    1
 22178 ;; Hardware stack levels required when called:    6
 22179 ;; This function calls:
 22180 ;;		Nothing
 22181 ;; This function is called by:
 22182 ;;		_TMR5_Initialize
 22183 ;; This function uses a reentrant model
 22184 ;;
 22185                           
 22186                           	psect	text95
 22187  018066                     __ptext95:
 22188                           	opt callstack 0
 22189  018066                     _TMR5_SetInterruptHandler:
 22190                           	opt callstack 22
 22191                           
 22192                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 22193                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22194                           
 22195                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22196                           ;incstack = 0
 22197  018066  50E1               	movf	fsr1l,w,c
 22198  018068  0FFD               	addlw	-3
 22199  01806A  6ED9               	movwf	fsr2l,c
 22200  01806C  50E2               	movf	fsr1h,w,c
 22201  01806E  6EDA               	movwf	fsr2h,c
 22202  018070  0EFF               	movlw	255
 22203  018072  22DA               	addwfc	fsr2h,f,c
 22204  018074  006F FF78  F0C1    	movff	postinc2,_TMR5_InterruptHandler
 22205  01807A  006F FF78  F0C2    	movff	postinc2,_TMR5_InterruptHandler+1
 22206  018080  006F FF74  F0C3    	movff	postdec2,_TMR5_InterruptHandler+2
 22207                           
 22208                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22209  018086  52E5               	movf	postdec1,f,c
 22210  018088  52E5               	movf	postdec1,f,c
 22211  01808A  52E5               	movf	postdec1,f,c
 22212  01808C  0012               	return		;funcret
 22213  01808E                     __end_of_TMR5_SetInterruptHandler:
 22214                           	opt callstack 0
 22215                           
 22216 ;; *************** function _TMR2_Initialize *****************
 22217 ;; Defined at:
 22218 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 22219 ;; Parameters:    Size  Location     Type
 22220 ;;		None
 22221 ;; Auto vars:     Size  Location     Type
 22222 ;;		None
 22223 ;; Return value:  Size  Location     Type
 22224 ;;                  1  [STACK] void 
 22225 ;; Registers used:
 22226 ;;		wreg, status,2
 22227 ;; Tracked objects:
 22228 ;;		On entry : 0/3E
 22229 ;;		On exit  : 3F/39
 22230 ;;		Unchanged: 0/0
 22231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22236 ;;Total ram usage:        0 bytes
 22237 ;; Hardware stack levels used:    1
 22238 ;; Hardware stack levels required when called:    6
 22239 ;; This function calls:
 22240 ;;		Nothing
 22241 ;; This function is called by:
 22242 ;;		_SYSTEM_Initialize
 22243 ;; This function uses a reentrant model
 22244 ;;
 22245                           
 22246                           	psect	text96
 22247  0183E2                     __ptext96:
 22248                           	opt callstack 0
 22249  0183E2                     _TMR2_Initialize:
 22250                           	opt callstack 23
 22251                           
 22252                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 22253                           
 22254                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22255                           ;incstack = 0
 22256  0183E2  0E01               	movlw	1
 22257  0183E4  6EAE               	movwf	174,c	;volatile
 22258                           
 22259                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 22260  0183E6  6AAD               	clrf	173,c	;volatile
 22261                           
 22262                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 22263  0183E8  6AAF               	clrf	175,c	;volatile
 22264                           
 22265                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 22266  0183EA  0E63               	movlw	99
 22267  0183EC  6EAB               	movwf	171,c	;volatile
 22268                           
 22269                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 22270  0183EE  6AAA               	clrf	170,c	;volatile
 22271                           
 22272                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 22273  0183F0  0139               	movlb	57	; () banked
 22274  0183F2  95A4               	bcf	164,2,b	;volatile
 22275                           
 22276                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 22277  0183F4  0EC0               	movlw	192
 22278  0183F6  6EAC               	movwf	172,c	;volatile
 22279                           
 22280                           ; BSR set to: 57
 22281                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22282  0183F8  0012               	return		;funcret
 22283  0183FA                     __end_of_TMR2_Initialize:
 22284                           	opt callstack 0
 22285                           
 22286 ;; *************** function _SPI1_Initialize *****************
 22287 ;; Defined at:
 22288 ;;		line 64 in file "mcc_generated_files/spi1.c"
 22289 ;; Parameters:    Size  Location     Type
 22290 ;;		None
 22291 ;; Auto vars:     Size  Location     Type
 22292 ;;		None
 22293 ;; Return value:  Size  Location     Type
 22294 ;;                  1  [STACK] void 
 22295 ;; Registers used:
 22296 ;;		wreg, status,2
 22297 ;; Tracked objects:
 22298 ;;		On entry : 3F/39
 22299 ;;		On exit  : 3F/3D
 22300 ;;		Unchanged: 0/0
 22301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22306 ;;Total ram usage:        0 bytes
 22307 ;; Hardware stack levels used:    1
 22308 ;; Hardware stack levels required when called:    6
 22309 ;; This function calls:
 22310 ;;		Nothing
 22311 ;; This function is called by:
 22312 ;;		_SYSTEM_Initialize
 22313 ;; This function uses a reentrant model
 22314 ;;
 22315                           
 22316                           	psect	text97
 22317  0183FA                     __ptext97:
 22318                           	opt callstack 0
 22319  0183FA                     _SPI1_Initialize:
 22320                           	opt callstack 23
 22321                           
 22322                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 22323                           
 22324                           ; BSR set to: 57
 22325                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22326                           ;incstack = 0
 22327  0183FA  0E40               	movlw	64
 22328  0183FC  013D               	movlb	61	; () banked
 22329  0183FE  6F15               	movwf	21,b	;volatile
 22330                           
 22331                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 22332  018400  0E03               	movlw	3
 22333  018402  6F16               	movwf	22,b	;volatile
 22334                           
 22335                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 22336  018404  0E4F               	movlw	79
 22337  018406  6F19               	movwf	25,b	;volatile
 22338                           
 22339                           ; BSR set to: 61
 22340                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 22341  018408  6B1C               	clrf	28,b	;volatile
 22342                           
 22343                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 22344  01840A  0E83               	movlw	131
 22345  01840C  6F14               	movwf	20,b	;volatile
 22346                           
 22347                           ; BSR set to: 61
 22348                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22349  01840E  0012               	return		;funcret
 22350  018410                     __end_of_SPI1_Initialize:
 22351                           	opt callstack 0
 22352                           
 22353 ;; *************** function _PWM8_Initialize *****************
 22354 ;; Defined at:
 22355 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 22356 ;; Parameters:    Size  Location     Type
 22357 ;;		None
 22358 ;; Auto vars:     Size  Location     Type
 22359 ;;		None
 22360 ;; Return value:  Size  Location     Type
 22361 ;;                  1  [STACK] void 
 22362 ;; Registers used:
 22363 ;;		wreg, status,2
 22364 ;; Tracked objects:
 22365 ;;		On entry : 3F/39
 22366 ;;		On exit  : 3F/3F
 22367 ;;		Unchanged: 0/0
 22368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22373 ;;Total ram usage:        0 bytes
 22374 ;; Hardware stack levels used:    1
 22375 ;; Hardware stack levels required when called:    6
 22376 ;; This function calls:
 22377 ;;		Nothing
 22378 ;; This function is called by:
 22379 ;;		_SYSTEM_Initialize
 22380 ;; This function uses a reentrant model
 22381 ;;
 22382                           
 22383                           	psect	text98
 22384  018410                     __ptext98:
 22385                           	opt callstack 0
 22386  018410                     _PWM8_Initialize:
 22387                           	opt callstack 23
 22388                           
 22389                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 22390                           
 22391                           ; BSR set to: 61
 22392                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22393                           ;incstack = 0
 22394  018410  0E80               	movlw	128
 22395  018412  6E62               	movwf	98,c	;volatile
 22396                           
 22397                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 22398  018414  6A61               	clrf	97,c	;volatile
 22399                           
 22400                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 22401  018416  0E40               	movlw	64
 22402  018418  6E60               	movwf	96,c	;volatile
 22403                           
 22404                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 22405  01841A  013F               	movlb	63	; () banked
 22406  01841C  515F               	movf	95,w,b	;volatile
 22407  01841E  0B3F               	andlw	-193
 22408  018420  0940               	iorlw	64
 22409  018422  6F5F               	movwf	95,b	;volatile
 22410                           
 22411                           ; BSR set to: 63
 22412                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22413  018424  0012               	return		;funcret
 22414  018426                     __end_of_PWM8_Initialize:
 22415                           	opt callstack 0
 22416                           
 22417 ;; *************** function _PMD_Initialize *****************
 22418 ;; Defined at:
 22419 ;;		line 89 in file "mcc_generated_files/mcc.c"
 22420 ;; Parameters:    Size  Location     Type
 22421 ;;		None
 22422 ;; Auto vars:     Size  Location     Type
 22423 ;;		None
 22424 ;; Return value:  Size  Location     Type
 22425 ;;                  1  [STACK] void 
 22426 ;; Registers used:
 22427 ;;		None
 22428 ;; Tracked objects:
 22429 ;;		On entry : 3F/39
 22430 ;;		On exit  : 3F/39
 22431 ;;		Unchanged: 0/0
 22432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22437 ;;Total ram usage:        0 bytes
 22438 ;; Hardware stack levels used:    1
 22439 ;; Hardware stack levels required when called:    6
 22440 ;; This function calls:
 22441 ;;		Nothing
 22442 ;; This function is called by:
 22443 ;;		_SYSTEM_Initialize
 22444 ;; This function uses a reentrant model
 22445 ;;
 22446                           
 22447                           	psect	text99
 22448  01843C                     __ptext99:
 22449                           	opt callstack 0
 22450  01843C                     _PMD_Initialize:
 22451                           	opt callstack 23
 22452                           
 22453                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 22454                           
 22455                           ; BSR set to: 63
 22456                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22457                           ;incstack = 0
 22458  01843C  0139               	movlb	57	; () banked
 22459  01843E  6BC0               	clrf	192,b	;volatile
 22460                           
 22461                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 22462  018440  6BC1               	clrf	193,b	;volatile
 22463                           
 22464                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 22465  018442  6BC2               	clrf	194,b	;volatile
 22466                           
 22467                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 22468  018444  6BC3               	clrf	195,b	;volatile
 22469                           
 22470                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 22471  018446  6BC4               	clrf	196,b	;volatile
 22472                           
 22473                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 22474  018448  6BC5               	clrf	197,b	;volatile
 22475                           
 22476                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 22477  01844A  6BC6               	clrf	198,b	;volatile
 22478                           
 22479                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 22480  01844C  6BC7               	clrf	199,b	;volatile
 22481                           
 22482                           ; BSR set to: 57
 22483                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22484  01844E  0012               	return		;funcret
 22485  018450                     __end_of_PMD_Initialize:
 22486                           	opt callstack 0
 22487                           
 22488 ;; *************** function _PIN_MANAGER_Initialize *****************
 22489 ;; Defined at:
 22490 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 22491 ;; Parameters:    Size  Location     Type
 22492 ;;		None
 22493 ;; Auto vars:     Size  Location     Type
 22494 ;;		None
 22495 ;; Return value:  Size  Location     Type
 22496 ;;                  1  [STACK] void 
 22497 ;; Registers used:
 22498 ;;		wreg, status,2
 22499 ;; Tracked objects:
 22500 ;;		On entry : 3F/39
 22501 ;;		On exit  : 3F/3A
 22502 ;;		Unchanged: 0/0
 22503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22508 ;;Total ram usage:        0 bytes
 22509 ;; Hardware stack levels used:    1
 22510 ;; Hardware stack levels required when called:    6
 22511 ;; This function calls:
 22512 ;;		Nothing
 22513 ;; This function is called by:
 22514 ;;		_SYSTEM_Initialize
 22515 ;; This function uses a reentrant model
 22516 ;;
 22517                           
 22518                           	psect	text100
 22519  01713C                     __ptext100:
 22520                           	opt callstack 0
 22521  01713C                     _PIN_MANAGER_Initialize:
 22522                           	opt callstack 23
 22523                           
 22524                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 22525                           
 22526                           ; BSR set to: 57
 22527                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22528                           ;incstack = 0
 22529  01713C  0E07               	movlw	7
 22530  01713E  6EBE               	movwf	190,c	;volatile
 22531                           
 22532                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 22533  017140  0E80               	movlw	128
 22534  017142  6EBD               	movwf	189,c	;volatile
 22535                           
 22536                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 22537  017144  6ABA               	clrf	186,c	;volatile
 22538                           
 22539                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 22540  017146  6ABF               	clrf	191,c	;volatile
 22541                           
 22542                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 22543  017148  6ABB               	clrf	187,c	;volatile
 22544                           
 22545                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 22546  01714A  0E07               	movlw	7
 22547  01714C  6EBC               	movwf	188,c	;volatile
 22548                           
 22549                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 22550  01714E  6AC6               	clrf	198,c	;volatile
 22551                           
 22552                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 22553  017150  0E0F               	movlw	15
 22554  017152  6EC7               	movwf	199,c	;volatile
 22555                           
 22556                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 22557  017154  68C2               	setf	194,c	;volatile
 22558                           
 22559                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 22560  017156  0EBF               	movlw	191
 22561  017158  6EC3               	movwf	195,c	;volatile
 22562                           
 22563                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 22564  01715A  0E90               	movlw	144
 22565  01715C  6EC4               	movwf	196,c	;volatile
 22566                           
 22567                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 22568  01715E  0E0C               	movlw	12
 22569  017160  6EC5               	movwf	197,c	;volatile
 22570                           
 22571                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 22572  017162  013A               	movlb	58	; () banked
 22573  017164  6B70               	clrf	112,b	;volatile
 22574                           
 22575                           ; BSR set to: 58
 22576                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 22577  017166  6B60               	clrf	96,b	;volatile
 22578                           
 22579                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 22580  017168  0E3C               	movlw	60
 22581  01716A  6F50               	movwf	80,b	;volatile
 22582                           
 22583                           ; BSR set to: 58
 22584                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 22585  01716C  6B80               	clrf	128,b	;volatile
 22586                           
 22587                           ; BSR set to: 58
 22588                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 22589  01716E  6B90               	clrf	144,b	;volatile
 22590                           
 22591                           ; BSR set to: 58
 22592                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 22593  017170  6940               	setf	64,b	;volatile
 22594                           
 22595                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 22596  017172  0E0C               	movlw	12
 22597  017174  6F71               	movwf	113,b	;volatile
 22598                           
 22599                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 22600  017176  0E0F               	movlw	15
 22601  017178  6F91               	movwf	145,b	;volatile
 22602                           
 22603                           ; BSR set to: 58
 22604                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 22605  01717A  6B81               	clrf	129,b	;volatile
 22606                           
 22607                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 22608  01717C  0E83               	movlw	131
 22609  01717E  6F51               	movwf	81,b	;volatile
 22610                           
 22611                           ; BSR set to: 58
 22612                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 22613  017180  6B41               	clrf	65,b	;volatile
 22614                           
 22615                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 22616  017182  0E97               	movlw	151
 22617  017184  6F61               	movwf	97,b	;volatile
 22618                           
 22619                           ; BSR set to: 58
 22620                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 22621  017186  6B82               	clrf	130,b	;volatile
 22622                           
 22623                           ; BSR set to: 58
 22624                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 22625  017188  6B92               	clrf	146,b	;volatile
 22626                           
 22627                           ; BSR set to: 58
 22628                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 22629  01718A  6B42               	clrf	66,b	;volatile
 22630                           
 22631                           ; BSR set to: 58
 22632                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 22633  01718C  6B52               	clrf	82,b	;volatile
 22634                           
 22635                           ; BSR set to: 58
 22636                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 22637  01718E  6B62               	clrf	98,b	;volatile
 22638                           
 22639                           ; BSR set to: 58
 22640                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 22641  017190  6B72               	clrf	114,b	;volatile
 22642                           
 22643                           ; BSR set to: 58
 22644                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 22645  017192  6943               	setf	67,b	;volatile
 22646                           
 22647                           ; BSR set to: 58
 22648                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 22649  017194  6953               	setf	83,b	;volatile
 22650                           
 22651                           ; BSR set to: 58
 22652                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 22653  017196  6963               	setf	99,b	;volatile
 22654                           
 22655                           ; BSR set to: 58
 22656                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 22657  017198  6973               	setf	115,b	;volatile
 22658                           
 22659                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 22660  01719A  0E07               	movlw	7
 22661  01719C  6F83               	movwf	131,b	;volatile
 22662                           
 22663                           ; BSR set to: 58
 22664                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 22665  01719E  6993               	setf	147,b	;volatile
 22666                           
 22667                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 22668  0171A0  0E0F               	movlw	15
 22669  0171A2  6FE8               	movwf	232,b	;volatile
 22670                           
 22671                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 22672  0171A4  0E13               	movlw	19
 22673  0171A6  6FDE               	movwf	222,b	;volatile
 22674                           
 22675                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 22676  0171A8  0E16               	movlw	22
 22677  0171AA  6F0E               	movwf	14,b	;volatile
 22678                           
 22679                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 22680  0171AC  0E1E               	movlw	30
 22681  0171AE  6F13               	movwf	19,b	;volatile
 22682                           
 22683                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 22684  0171B0  0E08               	movlw	8
 22685  0171B2  6FC0               	movwf	192,b	;volatile
 22686                           
 22687                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 22688  0171B4  0E10               	movlw	16
 22689  0171B6  6F19               	movwf	25,b	;volatile
 22690                           
 22691                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 22692  0171B8  0E09               	movlw	9
 22693  0171BA  6FC1               	movwf	193,b	;volatile
 22694                           
 22695                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 22696  0171BC  0E1F               	movlw	31
 22697  0171BE  6F15               	movwf	21,b	;volatile
 22698                           
 22699                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 22700  0171C0  0E13               	movlw	19
 22701  0171C2  6F16               	movwf	22,b	;volatile
 22702                           
 22703                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 22704  0171C4  0E17               	movlw	23
 22705  0171C6  6FE5               	movwf	229,b	;volatile
 22706                           
 22707                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 22708  0171C8  0E14               	movlw	20
 22709  0171CA  6FDF               	movwf	223,b	;volatile
 22710                           
 22711                           ; BSR set to: 58
 22712                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 22713  0171CC  0012               	return		;funcret
 22714  0171CE                     __end_of_PIN_MANAGER_Initialize:
 22715                           	opt callstack 0
 22716                           
 22717 ;; *************** function _OSCILLATOR_Initialize *****************
 22718 ;; Defined at:
 22719 ;;		line 71 in file "mcc_generated_files/mcc.c"
 22720 ;; Parameters:    Size  Location     Type
 22721 ;;		None
 22722 ;; Auto vars:     Size  Location     Type
 22723 ;;		None
 22724 ;; Return value:  Size  Location     Type
 22725 ;;                  1  [STACK] void 
 22726 ;; Registers used:
 22727 ;;		wreg, status,2
 22728 ;; Tracked objects:
 22729 ;;		On entry : 3F/3A
 22730 ;;		On exit  : 3F/39
 22731 ;;		Unchanged: 0/0
 22732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22737 ;;Total ram usage:        0 bytes
 22738 ;; Hardware stack levels used:    1
 22739 ;; Hardware stack levels required when called:    6
 22740 ;; This function calls:
 22741 ;;		Nothing
 22742 ;; This function is called by:
 22743 ;;		_SYSTEM_Initialize
 22744 ;; This function uses a reentrant model
 22745 ;;
 22746                           
 22747                           	psect	text101
 22748  018426                     __ptext101:
 22749                           	opt callstack 0
 22750  018426                     _OSCILLATOR_Initialize:
 22751                           	opt callstack 23
 22752                           
 22753                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 22754                           
 22755                           ; BSR set to: 58
 22756                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22757                           ;incstack = 0
 22758  018426  0E20               	movlw	32
 22759  018428  0139               	movlb	57	; () banked
 22760  01842A  6FD9               	movwf	217,b	;volatile
 22761                           
 22762                           ; BSR set to: 57
 22763                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 22764  01842C  6BDB               	clrf	219,b	;volatile
 22765                           
 22766                           ; BSR set to: 57
 22767                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 22768  01842E  6BDD               	clrf	221,b	;volatile
 22769                           
 22770                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 22771  018430  0E02               	movlw	2
 22772  018432  6FDF               	movwf	223,b	;volatile
 22773                           
 22774                           ; BSR set to: 57
 22775                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 22776  018434  6BDE               	clrf	222,b	;volatile
 22777  018436                     l171:
 22778                           
 22779                           ; BSR set to: 57
 22780                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 22781  018436  B1DC               	btfsc	220,0,b	;volatile
 22782  018438  0012               	return	
 22783  01843A  D7FD               	goto	l171
 22784  01843C                     __end_of_OSCILLATOR_Initialize:
 22785                           	opt callstack 0
 22786                           
 22787 ;; *************** function _INTERRUPT_Initialize *****************
 22788 ;; Defined at:
 22789 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 22790 ;; Parameters:    Size  Location     Type
 22791 ;;		None
 22792 ;; Auto vars:     Size  Location     Type
 22793 ;;  state           1  [STACK] _Bool 
 22794 ;; Return value:  Size  Location     Type
 22795 ;;                  1  [STACK] void 
 22796 ;; Registers used:
 22797 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 22798 ;; Tracked objects:
 22799 ;;		On entry : 0/0
 22800 ;;		On exit  : 3F/39
 22801 ;;		Unchanged: 0/0
 22802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22807 ;;Total ram usage:        0 bytes
 22808 ;; Hardware stack levels used:    1
 22809 ;; Hardware stack levels required when called:    6
 22810 ;; This function calls:
 22811 ;;		Nothing
 22812 ;; This function is called by:
 22813 ;;		_SYSTEM_Initialize
 22814 ;; This function uses a reentrant model
 22815 ;;
 22816                           
 22817                           	psect	text102
 22818  017594                     __ptext102:
 22819                           	opt callstack 0
 22820  017594                     _INTERRUPT_Initialize:
 22821                           	opt callstack 0
 22822                           
 22823                           ; BSR set to: 57
 22824                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22825  017594  52E6               	movf	postinc1,f,c
 22826                           
 22827                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 22828                           
 22829                           ;incstack = 0
 22830  017596  8AD2               	bsf	210,5,c	;volatile
 22831                           
 22832                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 22833  017598  AED2               	btfss	16338,7,c	;volatile
 22834  01759A  D003               	goto	u12240
 22835  01759C  6A3D               	clrf	(btemp+11)^0,c
 22836  01759E  2A3D               	incf	(btemp+11)^0,f,c
 22837  0175A0  D001               	goto	u12258
 22838  0175A2                     u12240:
 22839  0175A2  6A3D               	clrf	(btemp+11)^0,c
 22840  0175A4                     u12258:
 22841                           
 22842                           ;stkvar	_state @ sp[(-1)+0]
 22843  0175A4  0EFF               	movlw	-1
 22844  0175A6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 22845                           
 22846                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 22847  0175AC  9ED2               	bcf	16338,7,c	;volatile
 22848                           
 22849                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 22850  0175AE  0E55               	movlw	85
 22851  0175B0  6ED4               	movwf	212,c	;volatile
 22852                           
 22853                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 22854  0175B2  0EAA               	movlw	170
 22855  0175B4  6ED4               	movwf	212,c	;volatile
 22856                           
 22857                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 22858  0175B6  90D4               	bcf	212,0,c	;volatile
 22859                           
 22860                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 22861  0175B8  0138               	movlb	56	; () banked
 22862  0175BA  6B9F               	clrf	159,b	;volatile
 22863                           
 22864                           ; BSR set to: 56
 22865                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 22866  0175BC  6B9E               	clrf	158,b	;volatile
 22867                           
 22868                           ; BSR set to: 56
 22869                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 22870  0175BE  0E08               	movlw	8
 22871  0175C0  6F9D               	movwf	157,b	;volatile
 22872                           
 22873                           ; BSR set to: 56
 22874                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 22875  0175C2  0E55               	movlw	85
 22876  0175C4  6ED4               	movwf	212,c	;volatile
 22877                           
 22878                           ; BSR set to: 56
 22879                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 22880  0175C6  0EAA               	movlw	170
 22881  0175C8  6ED4               	movwf	212,c	;volatile
 22882                           
 22883                           ; BSR set to: 56
 22884                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 22885  0175CA  80D4               	bsf	212,0,c	;volatile
 22886                           
 22887                           ; BSR set to: 56
 22888                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 22889                           ;stkvar	_state @ sp[(-1)+0]
 22890  0175CC  0EFF               	movlw	-1
 22891  0175CE  B0E3               	btfsc	plusw1,0,c
 22892  0175D0  D002               	bra	u12265
 22893  0175D2  9ED2               	bcf	16338,7,c	;volatile
 22894  0175D4  D001               	bra	u12266
 22895  0175D6                     u12265:
 22896  0175D6  8ED2               	bsf	16338,7,c	;volatile
 22897  0175D8                     u12266:
 22898                           
 22899                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 22900  0175D8  0139               	movlb	57	; () banked
 22901  0175DA  8782               	bsf	130,3,b	;volatile
 22902                           
 22903                           ; BSR set to: 57
 22904                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 22905  0175DC  8382               	bsf	130,1,b	;volatile
 22906                           
 22907                           ; BSR set to: 57
 22908                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 22909  0175DE  8182               	bsf	130,0,b	;volatile
 22910                           
 22911                           ; BSR set to: 57
 22912                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 22913  0175E0  8582               	bsf	130,2,b	;volatile
 22914                           
 22915                           ; BSR set to: 57
 22916                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 22917  0175E2  8786               	bsf	134,3,b	;volatile
 22918                           
 22919                           ; BSR set to: 57
 22920                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 22921  0175E4  8586               	bsf	134,2,b	;volatile
 22922                           
 22923                           ; BSR set to: 57
 22924                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 22925  0175E6  8983               	bsf	131,4,b	;volatile
 22926                           
 22927                           ; BSR set to: 57
 22928                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 22929  0175E8  8783               	bsf	131,3,b	;volatile
 22930                           
 22931                           ; BSR set to: 57
 22932                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 22933  0175EA  8181               	bsf	129,0,b	;volatile
 22934                           
 22935                           ; BSR set to: 57
 22936                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 22937  0175EC  9185               	bcf	133,0,b	;volatile
 22938                           
 22939                           ; BSR set to: 57
 22940                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 22941  0175EE  8189               	bsf	137,0,b	;volatile
 22942                           
 22943                           ; BSR set to: 57
 22944                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 22945  0175F0  9D88               	bcf	136,6,b	;volatile
 22946                           
 22947                           ; BSR set to: 57
 22948                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 22949  0175F2  8581               	bsf	129,2,b	;volatile
 22950                           
 22951                           ; BSR set to: 57
 22952                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 22953  0175F4  8781               	bsf	129,3,b	;volatile
 22954                           
 22955                           ; BSR set to: 57
 22956                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 22957  0175F6  52E5               	movf	postdec1,f,c
 22958  0175F8  0012               	return		;funcret
 22959  0175FA                     __end_of_INTERRUPT_Initialize:
 22960                           	opt callstack 0
 22961                           
 22962 ;; *************** function _FVR_Initialize *****************
 22963 ;; Defined at:
 22964 ;;		line 58 in file "mcc_generated_files/fvr.c"
 22965 ;; Parameters:    Size  Location     Type
 22966 ;;		None
 22967 ;; Auto vars:     Size  Location     Type
 22968 ;;		None
 22969 ;; Return value:  Size  Location     Type
 22970 ;;                  1  [STACK] void 
 22971 ;; Registers used:
 22972 ;;		wreg, status,2
 22973 ;; Tracked objects:
 22974 ;;		On entry : 3F/39
 22975 ;;		On exit  : 3F/3E
 22976 ;;		Unchanged: 0/0
 22977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22982 ;;Total ram usage:        0 bytes
 22983 ;; Hardware stack levels used:    1
 22984 ;; Hardware stack levels required when called:    6
 22985 ;; This function calls:
 22986 ;;		Nothing
 22987 ;; This function is called by:
 22988 ;;		_SYSTEM_Initialize
 22989 ;; This function uses a reentrant model
 22990 ;;
 22991                           
 22992                           	psect	text103
 22993  01850A                     __ptext103:
 22994                           	opt callstack 0
 22995  01850A                     _FVR_Initialize:
 22996                           	opt callstack 23
 22997                           
 22998                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 22999                           
 23000                           ; BSR set to: 57
 23001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23002                           ;incstack = 0
 23003  01850A  0EAF               	movlw	175
 23004  01850C  013E               	movlb	62	; () banked
 23005  01850E  6FC1               	movwf	193,b	;volatile
 23006                           
 23007                           ; BSR set to: 62
 23008                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23009  018510  0012               	return		;funcret
 23010  018512                     __end_of_FVR_Initialize:
 23011                           	opt callstack 0
 23012                           
 23013 ;; *************** function _EXT_INT_Initialize *****************
 23014 ;; Defined at:
 23015 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 23016 ;; Parameters:    Size  Location     Type
 23017 ;;		None
 23018 ;; Auto vars:     Size  Location     Type
 23019 ;;		None
 23020 ;; Return value:  Size  Location     Type
 23021 ;;                  1  [STACK] void 
 23022 ;; Registers used:
 23023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23024 ;; Tracked objects:
 23025 ;;		On entry : 3F/3F
 23026 ;;		On exit  : 3F/39
 23027 ;;		Unchanged: 0/0
 23028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23033 ;;Total ram usage:        0 bytes
 23034 ;; Hardware stack levels used:    1
 23035 ;; Hardware stack levels required when called:    7
 23036 ;; This function calls:
 23037 ;;		_INT0_SetInterruptHandler
 23038 ;;		_INT1_SetInterruptHandler
 23039 ;; This function is called by:
 23040 ;;		_SYSTEM_Initialize
 23041 ;; This function uses a reentrant model
 23042 ;;
 23043                           
 23044                           	psect	text104
 23045  017D56                     __ptext104:
 23046                           	opt callstack 0
 23047  017D56                     _EXT_INT_Initialize:
 23048                           	opt callstack 22
 23049                           
 23050                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 23051                           
 23052                           ; BSR set to: 62
 23053                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23054                           ;incstack = 0
 23055  017D56  0139               	movlb	57	; () banked
 23056  017D58  91A1               	bcf	161,0,b	;volatile
 23057                           
 23058                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 23059  017D5A  90D2               	bcf	210,0,c	;volatile
 23060                           
 23061                           ; BSR set to: 57
 23062                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 23063  017D5C  0E2C               	movlw	low _INT0_DefaultInterruptHandler
 23064  017D5E  6EE6               	movwf	postinc1,c
 23065  017D60  0E85               	movlw	high _INT0_DefaultInterruptHandler
 23066  017D62  6EE6               	movwf	postinc1,c
 23067  017D64  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 23068  017D66  6EE6               	movwf	postinc1,c
 23069  017D68  EC5B  F0C0         	call	_INT0_SetInterruptHandler	;wreg free
 23070                           
 23071                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 23072  017D6C  0139               	movlb	57	; () banked
 23073  017D6E  8191               	bsf	145,0,b	;volatile
 23074                           
 23075                           ; BSR set to: 57
 23076                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 23077  017D70  91A5               	bcf	165,0,b	;volatile
 23078                           
 23079                           ; BSR set to: 57
 23080                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 23081  017D72  92D2               	bcf	210,1,c	;volatile
 23082                           
 23083                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 23084  017D74  0E2A               	movlw	low _INT1_DefaultInterruptHandler
 23085  017D76  6EE6               	movwf	postinc1,c
 23086  017D78  0E85               	movlw	high _INT1_DefaultInterruptHandler
 23087  017D7A  6EE6               	movwf	postinc1,c
 23088  017D7C  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 23089  017D7E  6EE6               	movwf	postinc1,c
 23090  017D80  EC47  F0C0         	call	_INT1_SetInterruptHandler	;wreg free
 23091                           
 23092                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 23093  017D84  0139               	movlb	57	; () banked
 23094  017D86  8195               	bsf	149,0,b	;volatile
 23095                           
 23096                           ; BSR set to: 57
 23097                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 23098  017D88  0012               	return		;funcret
 23099  017D8A                     __end_of_EXT_INT_Initialize:
 23100                           	opt callstack 0
 23101                           
 23102 ;; *************** function _INT1_SetInterruptHandler *****************
 23103 ;; Defined at:
 23104 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 23105 ;; Parameters:    Size  Location     Type
 23106 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23107 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 23108 ;; Auto vars:     Size  Location     Type
 23109 ;;		None
 23110 ;; Return value:  Size  Location     Type
 23111 ;;                  1  [STACK] void 
 23112 ;; Registers used:
 23113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23114 ;; Tracked objects:
 23115 ;;		On entry : 3F/39
 23116 ;;		On exit  : 0/0
 23117 ;;		Unchanged: 0/0
 23118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23123 ;;Total ram usage:        0 bytes
 23124 ;; Hardware stack levels used:    1
 23125 ;; Hardware stack levels required when called:    6
 23126 ;; This function calls:
 23127 ;;		Nothing
 23128 ;; This function is called by:
 23129 ;;		_EXT_INT_Initialize
 23130 ;;		_start_switch_handler
 23131 ;; This function uses a reentrant model
 23132 ;;
 23133                           
 23134                           	psect	text105
 23135  01808E                     __ptext105:
 23136                           	opt callstack 0
 23137  01808E                     _INT1_SetInterruptHandler:
 23138                           	opt callstack 23
 23139                           
 23140                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 23141                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23142                           
 23143                           ; BSR set to: 57
 23144                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23145                           ;incstack = 0
 23146  01808E  50E1               	movf	fsr1l,w,c
 23147  018090  0FFD               	addlw	-3
 23148  018092  6ED9               	movwf	fsr2l,c
 23149  018094  50E2               	movf	fsr1h,w,c
 23150  018096  6EDA               	movwf	fsr2h,c
 23151  018098  0EFF               	movlw	255
 23152  01809A  22DA               	addwfc	fsr2h,f,c
 23153  01809C  006F FF78  F013    	movff	postinc2,_INT1_InterruptHandler
 23154  0180A2  006F FF78  F014    	movff	postinc2,_INT1_InterruptHandler+1
 23155  0180A8  006F FF74  F015    	movff	postdec2,_INT1_InterruptHandler+2
 23156                           
 23157                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23158  0180AE  52E5               	movf	postdec1,f,c
 23159  0180B0  52E5               	movf	postdec1,f,c
 23160  0180B2  52E5               	movf	postdec1,f,c
 23161  0180B4  0012               	return		;funcret
 23162  0180B6                     __end_of_INT1_SetInterruptHandler:
 23163                           	opt callstack 0
 23164                           
 23165 ;; *************** function _INT0_SetInterruptHandler *****************
 23166 ;; Defined at:
 23167 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 23168 ;; Parameters:    Size  Location     Type
 23169 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23170 ;;		 -> INT0_DefaultInterruptHandler(1), 
 23171 ;; Auto vars:     Size  Location     Type
 23172 ;;		None
 23173 ;; Return value:  Size  Location     Type
 23174 ;;                  1  [STACK] void 
 23175 ;; Registers used:
 23176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23177 ;; Tracked objects:
 23178 ;;		On entry : 3F/39
 23179 ;;		On exit  : 0/0
 23180 ;;		Unchanged: 0/0
 23181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23186 ;;Total ram usage:        0 bytes
 23187 ;; Hardware stack levels used:    1
 23188 ;; Hardware stack levels required when called:    6
 23189 ;; This function calls:
 23190 ;;		Nothing
 23191 ;; This function is called by:
 23192 ;;		_EXT_INT_Initialize
 23193 ;; This function uses a reentrant model
 23194 ;;
 23195                           
 23196                           	psect	text106
 23197  0180B6                     __ptext106:
 23198                           	opt callstack 0
 23199  0180B6                     _INT0_SetInterruptHandler:
 23200                           	opt callstack 22
 23201                           
 23202                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 23203                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23204                           
 23205                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23206                           ;incstack = 0
 23207  0180B6  50E1               	movf	fsr1l,w,c
 23208  0180B8  0FFD               	addlw	-3
 23209  0180BA  6ED9               	movwf	fsr2l,c
 23210  0180BC  50E2               	movf	fsr1h,w,c
 23211  0180BE  6EDA               	movwf	fsr2h,c
 23212  0180C0  0EFF               	movlw	255
 23213  0180C2  22DA               	addwfc	fsr2h,f,c
 23214  0180C4  006F FF78  F016    	movff	postinc2,_INT0_InterruptHandler
 23215  0180CA  006F FF78  F017    	movff	postinc2,_INT0_InterruptHandler+1
 23216  0180D0  006F FF74  F018    	movff	postdec2,_INT0_InterruptHandler+2
 23217                           
 23218                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23219  0180D6  52E5               	movf	postdec1,f,c
 23220  0180D8  52E5               	movf	postdec1,f,c
 23221  0180DA  52E5               	movf	postdec1,f,c
 23222  0180DC  0012               	return		;funcret
 23223  0180DE                     __end_of_INT0_SetInterruptHandler:
 23224                           	opt callstack 0
 23225                           
 23226 ;; *************** function _DMA2_Initialize *****************
 23227 ;; Defined at:
 23228 ;;		line 61 in file "mcc_generated_files/dma2.c"
 23229 ;; Parameters:    Size  Location     Type
 23230 ;;		None
 23231 ;; Auto vars:     Size  Location     Type
 23232 ;;		None
 23233 ;; Return value:  Size  Location     Type
 23234 ;;                  1  [STACK] void 
 23235 ;; Registers used:
 23236 ;;		wreg, status,2
 23237 ;; Tracked objects:
 23238 ;;		On entry : 3F/3D
 23239 ;;		On exit  : 3F/3B
 23240 ;;		Unchanged: 0/0
 23241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23246 ;;Total ram usage:        0 bytes
 23247 ;; Hardware stack levels used:    1
 23248 ;; Hardware stack levels required when called:    6
 23249 ;; This function calls:
 23250 ;;		Nothing
 23251 ;; This function is called by:
 23252 ;;		_SYSTEM_Initialize
 23253 ;; This function uses a reentrant model
 23254 ;;
 23255                           
 23256                           	psect	text107
 23257  01783E                     __ptext107:
 23258                           	opt callstack 0
 23259  01783E                     _DMA2_Initialize:
 23260                           	opt callstack 23
 23261                           
 23262                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 23263                           
 23264                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23265                           ;incstack = 0
 23266  01783E  0E00               	movlw	0
 23267  017840  013B               	movlb	59	; () banked
 23268  017842  6FD9               	movwf	217,b	;volatile
 23269  017844  0E10               	movlw	16
 23270  017846  6FDA               	movwf	218,b	;volatile
 23271  017848  0E00               	movlw	0
 23272  01784A  6FDB               	movwf	219,b	;volatile
 23273                           
 23274                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 23275  01784C  0E3F               	movlw	63
 23276  01784E  6FD1               	movwf	209,b	;volatile
 23277  017850  0EBB               	movlw	187
 23278  017852  6FD0               	movwf	208,b	;volatile
 23279                           
 23280                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 23281  017854  0E03               	movlw	3
 23282  017856  6FDD               	movwf	221,b	;volatile
 23283                           
 23284                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 23285  017858  0E00               	movlw	0
 23286  01785A  6FD8               	movwf	216,b	;volatile
 23287  01785C  0E01               	movlw	1
 23288  01785E  6FD7               	movwf	215,b	;volatile
 23289                           
 23290                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 23291  017860  0E00               	movlw	0
 23292  017862  6FCF               	movwf	207,b	;volatile
 23293  017864  0E01               	movlw	1
 23294  017866  6FCE               	movwf	206,b	;volatile
 23295                           
 23296                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 23297  017868  0E46               	movlw	70
 23298  01786A  6FDF               	movwf	223,b	;volatile
 23299                           
 23300                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 23301  01786C  0E3D               	movlw	61
 23302  01786E  6FDE               	movwf	222,b	;volatile
 23303                           
 23304                           ; BSR set to: 59
 23305                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 23306  017870  0139               	movlb	57	; () banked
 23307  017872  97A5               	bcf	165,3,b	;volatile
 23308                           
 23309                           ; BSR set to: 57
 23310                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 23311  017874  95A5               	bcf	165,2,b	;volatile
 23312                           
 23313                           ; BSR set to: 57
 23314                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 23315  017876  9BA5               	bcf	165,5,b	;volatile
 23316                           
 23317                           ; BSR set to: 57
 23318                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 23319  017878  99A5               	bcf	165,4,b	;volatile
 23320                           
 23321                           ; BSR set to: 57
 23322                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 23323  01787A  9795               	bcf	149,3,b	;volatile
 23324                           
 23325                           ; BSR set to: 57
 23326                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 23327  01787C  9595               	bcf	149,2,b	;volatile
 23328                           
 23329                           ; BSR set to: 57
 23330                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 23331  01787E  9B95               	bcf	149,5,b	;volatile
 23332                           
 23333                           ; BSR set to: 57
 23334                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 23335  017880  9995               	bcf	149,4,b	;volatile
 23336  017882  9ED2               	bcf	16338,7,c	;# 
 23337  017884  0139               	banksel	14831	;# 
 23338  017886  0E55               	movlw	85	;# 
 23339  017888  6FEF               	movwf	14831,b	;# 
 23340  01788A  0EAA               	movlw	170	;# 
 23341  01788C  6FEF               	movwf	14831,b	;# 
 23342  01788E  81EF               	bsf	14831,0,b	;# 
 23343  017890  8ED2               	bsf	16338,7,c	;# 
 23344                           
 23345                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 23346  017892  013B               	movlb	59	; () banked
 23347  017894  6BDC               	clrf	220,b	;volatile
 23348                           
 23349                           ; BSR set to: 59
 23350                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23351  017896  0012               	return		;funcret
 23352  017898                     __end_of_DMA2_Initialize:
 23353                           	opt callstack 0
 23354                           
 23355 ;; *************** function _DMA1_Initialize *****************
 23356 ;; Defined at:
 23357 ;;		line 86 in file "mcc_generated_files/dma1.c"
 23358 ;; Parameters:    Size  Location     Type
 23359 ;;		None
 23360 ;; Auto vars:     Size  Location     Type
 23361 ;;		None
 23362 ;; Return value:  Size  Location     Type
 23363 ;;                  1  [STACK] void 
 23364 ;; Registers used:
 23365 ;;		wreg, status,2
 23366 ;; Tracked objects:
 23367 ;;		On entry : 3F/3B
 23368 ;;		On exit  : 3F/3B
 23369 ;;		Unchanged: 0/0
 23370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23375 ;;Total ram usage:        0 bytes
 23376 ;; Hardware stack levels used:    1
 23377 ;; Hardware stack levels required when called:    6
 23378 ;; This function calls:
 23379 ;;		Nothing
 23380 ;; This function is called by:
 23381 ;;		_SYSTEM_Initialize
 23382 ;; This function uses a reentrant model
 23383 ;;
 23384                           
 23385                           	psect	text108
 23386  017456                     __ptext108:
 23387                           	opt callstack 0
 23388  017456                     _DMA1_Initialize:
 23389                           	opt callstack 23
 23390                           
 23391                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 23392                           
 23393                           ; BSR set to: 59
 23394                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23395                           ;incstack = 0
 23396  017456  0E00               	movlw	0
 23397  017458  013B               	movlb	59	; () banked
 23398  01745A  6FF9               	movwf	249,b	;volatile
 23399  01745C  0E10               	movlw	16
 23400  01745E  6FFA               	movwf	250,b	;volatile
 23401  017460  0E00               	movlw	0
 23402  017462  6FFB               	movwf	251,b	;volatile
 23403                           
 23404                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 23405  017464  0E3D               	movlw	61
 23406  017466  6FF1               	movwf	241,b	;volatile
 23407  017468  0E11               	movlw	17
 23408  01746A  6FF0               	movwf	240,b	;volatile
 23409                           
 23410                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 23411  01746C  0E03               	movlw	3
 23412  01746E  6FFD               	movwf	253,b	;volatile
 23413                           
 23414                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 23415  017470  0E00               	movlw	0
 23416  017472  6FF8               	movwf	248,b	;volatile
 23417  017474  0E01               	movlw	1
 23418  017476  6FF7               	movwf	247,b	;volatile
 23419                           
 23420                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 23421  017478  0E00               	movlw	0
 23422  01747A  6FEF               	movwf	239,b	;volatile
 23423  01747C  0E01               	movlw	1
 23424  01747E  6FEE               	movwf	238,b	;volatile
 23425                           
 23426                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 23427  017480  0E15               	movlw	21
 23428  017482  6FFF               	movwf	255,b	;volatile
 23429                           
 23430                           ; BSR set to: 59
 23431                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 23432  017484  6BFE               	clrf	254,b	;volatile
 23433                           
 23434                           ; BSR set to: 59
 23435                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 23436  017486  0139               	movlb	57	; () banked
 23437  017488  93A2               	bcf	162,1,b	;volatile
 23438                           
 23439                           ; BSR set to: 57
 23440                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 23441  01748A  91A2               	bcf	162,0,b	;volatile
 23442                           
 23443                           ; BSR set to: 57
 23444                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 23445  01748C  97A2               	bcf	162,3,b	;volatile
 23446                           
 23447                           ; BSR set to: 57
 23448                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 23449  01748E  95A2               	bcf	162,2,b	;volatile
 23450                           
 23451                           ; BSR set to: 57
 23452                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 23453  017490  8392               	bsf	146,1,b	;volatile
 23454                           
 23455                           ; BSR set to: 57
 23456                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 23457  017492  8192               	bsf	146,0,b	;volatile
 23458                           
 23459                           ; BSR set to: 57
 23460                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 23461  017494  8792               	bsf	146,3,b	;volatile
 23462                           
 23463                           ; BSR set to: 57
 23464                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 23465  017496  8592               	bsf	146,2,b	;volatile
 23466                           
 23467                           ; BSR set to: 57
 23468                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 23469  017498  6BF1               	clrf	241,b	;volatile
 23470                           
 23471                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 23472  01749A  0E01               	movlw	1
 23473  01749C  6FF2               	movwf	242,b	;volatile
 23474                           
 23475                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 23476  01749E  0E04               	movlw	4
 23477  0174A0  6FF3               	movwf	243,b	;volatile
 23478                           
 23479                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 23480  0174A2  0E02               	movlw	2
 23481  0174A4  6FF4               	movwf	244,b	;volatile
 23482                           
 23483                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 23484  0174A6  0E03               	movlw	3
 23485  0174A8  6FF7               	movwf	247,b	;volatile
 23486  0174AA  9ED2               	bcf	16338,7,c	;# 
 23487  0174AC  0139               	banksel	14831	;# 
 23488  0174AE  0E55               	movlw	85	;# 
 23489  0174B0  6FEF               	movwf	14831,b	;# 
 23490  0174B2  0EAA               	movlw	170	;# 
 23491  0174B4  6FEF               	movwf	14831,b	;# 
 23492  0174B6  81EF               	bsf	14831,0,b	;# 
 23493  0174B8  8ED2               	bsf	16338,7,c	;# 
 23494                           
 23495                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 23496  0174BA  013B               	movlb	59	; () banked
 23497  0174BC  6BFC               	clrf	252,b	;volatile
 23498                           
 23499                           ; BSR set to: 59
 23500                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23501  0174BE  0012               	return		;funcret
 23502  0174C0                     __end_of_DMA1_Initialize:
 23503                           	opt callstack 0
 23504                           
 23505 ;; *************** function _CLKREF_Initialize *****************
 23506 ;; Defined at:
 23507 ;;		line 58 in file "mcc_generated_files/clkref.c"
 23508 ;; Parameters:    Size  Location     Type
 23509 ;;		None
 23510 ;; Auto vars:     Size  Location     Type
 23511 ;;		None
 23512 ;; Return value:  Size  Location     Type
 23513 ;;                  1  [STACK] void 
 23514 ;; Registers used:
 23515 ;;		wreg, status,2
 23516 ;; Tracked objects:
 23517 ;;		On entry : 3F/3B
 23518 ;;		On exit  : 3F/3C
 23519 ;;		Unchanged: 0/0
 23520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23525 ;;Total ram usage:        0 bytes
 23526 ;; Hardware stack levels used:    1
 23527 ;; Hardware stack levels required when called:    6
 23528 ;; This function calls:
 23529 ;;		Nothing
 23530 ;; This function is called by:
 23531 ;;		_SYSTEM_Initialize
 23532 ;; This function uses a reentrant model
 23533 ;;
 23534                           
 23535                           	psect	text109
 23536  0184BE                     __ptext109:
 23537                           	opt callstack 0
 23538  0184BE                     _CLKREF_Initialize:
 23539                           	opt callstack 23
 23540                           
 23541                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 23542                           
 23543                           ; BSR set to: 59
 23544                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23545                           ;incstack = 0
 23546  0184BE  013C               	movlb	60	; () banked
 23547  0184C0  6BE6               	clrf	230,b	;volatile
 23548                           
 23549                           ; BSR set to: 60
 23550                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 23551  0184C2  0E94               	movlw	148
 23552  0184C4  6FE5               	movwf	229,b	;volatile
 23553                           
 23554                           ; BSR set to: 60
 23555                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23556  0184C6  0012               	return		;funcret
 23557  0184C8                     __end_of_CLKREF_Initialize:
 23558                           	opt callstack 0
 23559                           
 23560 ;; *************** function _ADCC_Initialize *****************
 23561 ;; Defined at:
 23562 ;;		line 65 in file "mcc_generated_files/adcc.c"
 23563 ;; Parameters:    Size  Location     Type
 23564 ;;		None
 23565 ;; Auto vars:     Size  Location     Type
 23566 ;;		None
 23567 ;; Return value:  Size  Location     Type
 23568 ;;                  1  [STACK] void 
 23569 ;; Registers used:
 23570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23571 ;; Tracked objects:
 23572 ;;		On entry : 3F/3E
 23573 ;;		On exit  : 0/0
 23574 ;;		Unchanged: 0/0
 23575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23580 ;;Total ram usage:        0 bytes
 23581 ;; Hardware stack levels used:    1
 23582 ;; Hardware stack levels required when called:    7
 23583 ;; This function calls:
 23584 ;;		_ADCC_SetADIInterruptHandler
 23585 ;;		_ADCC_SetADTIInterruptHandler
 23586 ;; This function is called by:
 23587 ;;		_SYSTEM_Initialize
 23588 ;; This function uses a reentrant model
 23589 ;;
 23590                           
 23591                           	psect	text110
 23592  0174C0                     __ptext110:
 23593                           	opt callstack 0
 23594  0174C0                     _ADCC_Initialize:
 23595                           	opt callstack 22
 23596                           
 23597                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 23598                           
 23599                           ; BSR set to: 60
 23600                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23601                           ;incstack = 0
 23602  0174C0  013E               	movlb	62	; () banked
 23603  0174C2  6BDE               	clrf	222,b	;volatile
 23604                           
 23605                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 23606  0174C4  6BDF               	clrf	223,b	;volatile
 23607                           
 23608                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 23609  0174C6  6BE0               	clrf	224,b	;volatile
 23610                           
 23611                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 23612  0174C8  6BE1               	clrf	225,b	;volatile
 23613                           
 23614                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 23615  0174CA  6BE4               	clrf	228,b	;volatile
 23616                           
 23617                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 23618  0174CC  6BE5               	clrf	229,b	;volatile
 23619                           
 23620                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 23621  0174CE  6BEA               	clrf	234,b	;volatile
 23622                           
 23623                           ; BSR set to: 62
 23624                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 23625  0174D0  0E40               	movlw	64
 23626  0174D2  6FEC               	movwf	236,b	;volatile
 23627                           
 23628                           ; BSR set to: 62
 23629                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 23630  0174D4  6BF1               	clrf	241,b	;volatile
 23631                           
 23632                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 23633  0174D6  0E20               	movlw	32
 23634  0174D8  6FF3               	movwf	243,b	;volatile
 23635                           
 23636                           ; BSR set to: 62
 23637                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 23638  0174DA  6BF4               	clrf	244,b	;volatile
 23639                           
 23640                           ; BSR set to: 62
 23641                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 23642  0174DC  6BF5               	clrf	245,b	;volatile
 23643                           
 23644                           ; BSR set to: 62
 23645                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 23646  0174DE  6BF6               	clrf	246,b	;volatile
 23647                           
 23648                           ; BSR set to: 62
 23649                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 23650  0174E0  6BF7               	clrf	247,b	;volatile
 23651                           
 23652                           ; BSR set to: 62
 23653                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 23654  0174E2  6BF9               	clrf	249,b	;volatile
 23655                           
 23656                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 23657  0174E4  0E5B               	movlw	91
 23658  0174E6  6FFA               	movwf	250,b	;volatile
 23659                           
 23660                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 23661  0174E8  0E27               	movlw	39
 23662  0174EA  6FFB               	movwf	251,b	;volatile
 23663                           
 23664                           ; BSR set to: 62
 23665                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 23666  0174EC  6BFC               	clrf	252,b	;volatile
 23667                           
 23668                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 23669  0174EE  0E02               	movlw	2
 23670  0174F0  6FFD               	movwf	253,b	;volatile
 23671                           
 23672                           ; BSR set to: 62
 23673                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 23674  0174F2  6BFE               	clrf	254,b	;volatile
 23675                           
 23676                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 23677  0174F4  0E07               	movlw	7
 23678  0174F6  6FFF               	movwf	255,b	;volatile
 23679                           
 23680                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 23681  0174F8  0E84               	movlw	132
 23682  0174FA  6FF8               	movwf	248,b	;volatile
 23683                           
 23684                           ; BSR set to: 62
 23685                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 23686  0174FC  0139               	movlb	57	; () banked
 23687  0174FE  95A1               	bcf	161,2,b	;volatile
 23688                           
 23689                           ; BSR set to: 57
 23690                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 23691  017500  8591               	bsf	145,2,b	;volatile
 23692                           
 23693                           ; BSR set to: 57
 23694                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 23695  017502  0E2E               	movlw	low _ADCC_DefaultInterruptHandler
 23696  017504  6EE6               	movwf	postinc1,c
 23697  017506  0E85               	movlw	high _ADCC_DefaultInterruptHandler
 23698  017508  6EE6               	movwf	postinc1,c
 23699  01750A  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 23700  01750C  6EE6               	movwf	postinc1,c
 23701  01750E  EC83  F0C0         	call	_ADCC_SetADIInterruptHandler	;wreg free
 23702                           
 23703                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 23704  017512  0139               	movlb	57	; () banked
 23705  017514  97A1               	bcf	161,3,b	;volatile
 23706                           
 23707                           ; BSR set to: 57
 23708                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 23709  017516  8791               	bsf	145,3,b	;volatile
 23710                           
 23711                           ; BSR set to: 57
 23712                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 23713  017518  0E2E               	movlw	low _ADCC_DefaultInterruptHandler
 23714  01751A  6EE6               	movwf	postinc1,c
 23715  01751C  0E85               	movlw	high _ADCC_DefaultInterruptHandler
 23716  01751E  6EE6               	movwf	postinc1,c
 23717  017520  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 23718  017522  6EE6               	movwf	postinc1,c
 23719  017524  EC6F  F0C0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 23720                           
 23721                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23722  017528  0012               	return		;funcret
 23723  01752A                     __end_of_ADCC_Initialize:
 23724                           	opt callstack 0
 23725                           
 23726 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 23727 ;; Defined at:
 23728 ;;		line 336 in file "mcc_generated_files/adcc.c"
 23729 ;; Parameters:    Size  Location     Type
 23730 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23731 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 23732 ;; Auto vars:     Size  Location     Type
 23733 ;;		None
 23734 ;; Return value:  Size  Location     Type
 23735 ;;                  1  [STACK] void 
 23736 ;; Registers used:
 23737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23738 ;; Tracked objects:
 23739 ;;		On entry : 0/0
 23740 ;;		On exit  : 0/0
 23741 ;;		Unchanged: 0/0
 23742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23747 ;;Total ram usage:        0 bytes
 23748 ;; Hardware stack levels used:    1
 23749 ;; Hardware stack levels required when called:    6
 23750 ;; This function calls:
 23751 ;;		Nothing
 23752 ;; This function is called by:
 23753 ;;		_ADCC_Initialize
 23754 ;;		_start_adc_scan
 23755 ;; This function uses a reentrant model
 23756 ;;
 23757                           
 23758                           	psect	text111
 23759  0180DE                     __ptext111:
 23760                           	opt callstack 0
 23761  0180DE                     _ADCC_SetADTIInterruptHandler:
 23762                           	opt callstack 23
 23763                           
 23764                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 23765                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23766                           
 23767                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23768                           ;incstack = 0
 23769  0180DE  50E1               	movf	fsr1l,w,c
 23770  0180E0  0FFD               	addlw	-3
 23771  0180E2  6ED9               	movwf	fsr2l,c
 23772  0180E4  50E2               	movf	fsr1h,w,c
 23773  0180E6  6EDA               	movwf	fsr2h,c
 23774  0180E8  0EFF               	movlw	255
 23775  0180EA  22DA               	addwfc	fsr2h,f,c
 23776  0180EC  006F FF78  F001    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 23777  0180F2  006F FF78  F002    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 23778  0180F8  006F FF74  F003    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 23779                           
 23780                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 23781  0180FE  52E5               	movf	postdec1,f,c
 23782  018100  52E5               	movf	postdec1,f,c
 23783  018102  52E5               	movf	postdec1,f,c
 23784  018104  0012               	return		;funcret
 23785  018106                     __end_of_ADCC_SetADTIInterruptHandler:
 23786                           	opt callstack 0
 23787                           
 23788 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 23789 ;; Defined at:
 23790 ;;		line 323 in file "mcc_generated_files/adcc.c"
 23791 ;; Parameters:    Size  Location     Type
 23792 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23793 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 23794 ;; Auto vars:     Size  Location     Type
 23795 ;;		None
 23796 ;; Return value:  Size  Location     Type
 23797 ;;                  1  [STACK] void 
 23798 ;; Registers used:
 23799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23800 ;; Tracked objects:
 23801 ;;		On entry : 6/0
 23802 ;;		On exit  : 0/0
 23803 ;;		Unchanged: 0/0
 23804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23809 ;;Total ram usage:        0 bytes
 23810 ;; Hardware stack levels used:    1
 23811 ;; Hardware stack levels required when called:    6
 23812 ;; This function calls:
 23813 ;;		Nothing
 23814 ;; This function is called by:
 23815 ;;		_ADCC_Initialize
 23816 ;;		_start_adc_scan
 23817 ;; This function uses a reentrant model
 23818 ;;
 23819                           
 23820                           	psect	text112
 23821  018106                     __ptext112:
 23822                           	opt callstack 0
 23823  018106                     _ADCC_SetADIInterruptHandler:
 23824                           	opt callstack 23
 23825                           
 23826                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 23827                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23828                           
 23829                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23830                           ;incstack = 0
 23831  018106  50E1               	movf	fsr1l,w,c
 23832  018108  0FFD               	addlw	-3
 23833  01810A  6ED9               	movwf	fsr2l,c
 23834  01810C  50E2               	movf	fsr1h,w,c
 23835  01810E  6EDA               	movwf	fsr2h,c
 23836  018110  0EFF               	movlw	255
 23837  018112  22DA               	addwfc	fsr2h,f,c
 23838  018114  006F FF78  F004    	movff	postinc2,_ADCC_ADI_InterruptHandler
 23839  01811A  006F FF78  F005    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 23840  018120  006F FF74  F006    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 23841                           
 23842                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23843  018126  52E5               	movf	postdec1,f,c
 23844  018128  52E5               	movf	postdec1,f,c
 23845  01812A  52E5               	movf	postdec1,f,c
 23846  01812C  0012               	return		;funcret
 23847  01812E                     __end_of_ADCC_SetADIInterruptHandler:
 23848                           	opt callstack 0
 23849                           
 23850 ;; *************** function _INT1_ISR *****************
 23851 ;; Defined at:
 23852 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 23853 ;; Parameters:    Size  Location     Type
 23854 ;;		None
 23855 ;; Auto vars:     Size  Location     Type
 23856 ;;		None
 23857 ;; Return value:  Size  Location     Type
 23858 ;;                  1    wreg      void 
 23859 ;; Registers used:
 23860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 23861 ;; Tracked objects:
 23862 ;;		On entry : 0/0
 23863 ;;		On exit  : 0/0
 23864 ;;		Unchanged: 0/0
 23865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23868 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23869 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23870 ;;Total ram usage:        4 bytes
 23871 ;; Hardware stack levels used:    1
 23872 ;; Hardware stack levels required when called:    5
 23873 ;; This function calls:
 23874 ;;		_INT1_CallBack
 23875 ;; This function is called by:
 23876 ;;		Interrupt level 1
 23877 ;; This function uses a non-reentrant model
 23878 ;;
 23879                           
 23880                           	psect	text113
 23881  017C04                     __ptext113:
 23882                           	opt callstack 0
 23883  017C04                     _INT1_ISR:
 23884                           	opt callstack 12
 23885                           
 23886                           ;incstack = 0
 23887  017C04  006F FF60  F0F6    	movff	status,??_INT1_ISR
 23888  017C0A  0060  F0C8  F0F7   	movff	btemp,??_INT1_ISR+1
 23889  017C10  0060  F0F0  F0F8   	movff	btemp+10,??_INT1_ISR+2
 23890  017C16  0060  F0F4  F0F9   	movff	btemp+11,??_INT1_ISR+3
 23891  017C1C  EE16  F000         	lfsr	1,___intlo_sp
 23892                           
 23893                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 23894  017C20  0139               	movlb	57	; () banked
 23895  017C22  91A5               	bcf	165,0,b	;volatile
 23896                           
 23897                           ; BSR set to: 57
 23898                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 23899  017C24  EC31  F0C1         	call	_INT1_CallBack	;wreg free
 23900  017C28  0060  F3E4  F03D   	movff	??_INT1_ISR+3,btemp+11
 23901  017C2E  0060  F3E0  F03C   	movff	??_INT1_ISR+2,btemp+10
 23902  017C34  0060  F3DC  F032   	movff	??_INT1_ISR+1,btemp
 23903  017C3A  0060  F3DB  FFD8   	movff	??_INT1_ISR,status
 23904  017C40  0011               	retfie		f
 23905  017C42                     __end_of_INT1_ISR:
 23906                           	opt callstack 0
 23907                           
 23908 ;; *************** function _INT1_CallBack *****************
 23909 ;; Defined at:
 23910 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 23911 ;; Parameters:    Size  Location     Type
 23912 ;;		None
 23913 ;; Auto vars:     Size  Location     Type
 23914 ;;		None
 23915 ;; Return value:  Size  Location     Type
 23916 ;;                  1  [STACK] void 
 23917 ;; Registers used:
 23918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 23919 ;; Tracked objects:
 23920 ;;		On entry : 3F/39
 23921 ;;		On exit  : 0/0
 23922 ;;		Unchanged: 0/0
 23923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23928 ;;Total ram usage:        0 bytes
 23929 ;; Hardware stack levels used:    1
 23930 ;; Hardware stack levels required when called:    4
 23931 ;; This function calls:
 23932 ;;		Absolute function
 23933 ;;		_INT1_DefaultInterruptHandler
 23934 ;;		_switch_handler
 23935 ;; This function is called by:
 23936 ;;		_INT1_ISR
 23937 ;; This function uses a reentrant model
 23938 ;;
 23939                           
 23940                           	psect	text114
 23941  018262                     __ptext114:
 23942                           	opt callstack 0
 23943  018262                     _INT1_CallBack:
 23944                           	opt callstack 12
 23945                           
 23946                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 23947                           
 23948                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23949                           ;incstack = 0
 23950  018262  5013               	movf	_INT1_InterruptHandler^0,w,c
 23951  018264  1014               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 23952  018266  1015               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 23953  018268  B4D8               	btfsc	status,2,c
 23954  01826A  0012               	return	
 23955                           
 23956                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 23957  01826C  D801               	call	u829_28
 23958  01826E  0012               	return	
 23959  018270                     u829_28:
 23960  018270  0005               	push	
 23961  018272  6EFA               	movwf	pclath,c
 23962  018274  5013               	movf	_INT1_InterruptHandler^0,w,c
 23963  018276  6EFD               	movwf	tosl,c
 23964  018278  5014               	movf	(_INT1_InterruptHandler+1)^0,w,c
 23965  01827A  6EFE               	movwf	tosh,c
 23966  01827C  5015               	movf	(_INT1_InterruptHandler+2)^0,w,c
 23967  01827E  6EFF               	movwf	tosu,c
 23968  018280  50FA               	movf	pclath,w,c
 23969  018282  0012               	return		;indir
 23970  018284                     __end_of_INT1_CallBack:
 23971                           	opt callstack 0
 23972                           
 23973 ;; *************** function _INT1_DefaultInterruptHandler *****************
 23974 ;; Defined at:
 23975 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 23976 ;; Parameters:    Size  Location     Type
 23977 ;;		None
 23978 ;; Auto vars:     Size  Location     Type
 23979 ;;		None
 23980 ;; Return value:  Size  Location     Type
 23981 ;;                  1  [STACK] void 
 23982 ;; Registers used:
 23983 ;;		None
 23984 ;; Tracked objects:
 23985 ;;		On entry : 0/39
 23986 ;;		On exit  : 0/0
 23987 ;;		Unchanged: 0/0
 23988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23993 ;;Total ram usage:        0 bytes
 23994 ;; Hardware stack levels used:    1
 23995 ;; Hardware stack levels required when called:    3
 23996 ;; This function calls:
 23997 ;;		Nothing
 23998 ;; This function is called by:
 23999 ;;		_EXT_INT_Initialize
 24000 ;;		_INT1_CallBack
 24001 ;; This function uses a reentrant model
 24002 ;;
 24003                           
 24004                           	psect	text115
 24005  01852A                     __ptext115:
 24006                           	opt callstack 0
 24007  01852A                     _INT1_DefaultInterruptHandler:
 24008                           	opt callstack 12
 24009                           
 24010                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24011                           
 24012                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24013                           ;incstack = 0
 24014  01852A  0012               	return		;funcret
 24015  01852C                     __end_of_INT1_DefaultInterruptHandler:
 24016                           	opt callstack 0
 24017                           
 24018 ;; *************** function _switch_handler *****************
 24019 ;; Defined at:
 24020 ;;		line 58 in file "dio.c"
 24021 ;; Parameters:    Size  Location     Type
 24022 ;;		None
 24023 ;; Auto vars:     Size  Location     Type
 24024 ;;  i               1  [STACK] unsigned char 
 24025 ;;  sw_value        1  [STACK] unsigned char 
 24026 ;; Return value:  Size  Location     Type
 24027 ;;                  1  [STACK] void 
 24028 ;; Registers used:
 24029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 24030 ;; Tracked objects:
 24031 ;;		On entry : 0/39
 24032 ;;		On exit  : 0/0
 24033 ;;		Unchanged: 0/0
 24034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24039 ;;Total ram usage:        0 bytes
 24040 ;; Hardware stack levels used:    1
 24041 ;; Hardware stack levels required when called:    3
 24042 ;; This function calls:
 24043 ;;		Nothing
 24044 ;; This function is called by:
 24045 ;;		_start_switch_handler
 24046 ;;		_INT1_CallBack
 24047 ;; This function uses a reentrant model
 24048 ;;
 24049                           
 24050                           	psect	text116
 24051  016168                     __ptext116:
 24052                           	opt callstack 0
 24053  016168                     _switch_handler:
 24054                           	opt callstack 0
 24055                           
 24056                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24057  016168  52E6               	movf	postinc1,f,c
 24058  01616A  52E6               	movf	postinc1,f,c
 24059                           
 24060                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 24061                           ;stkvar	_i @ sp[(-2)+0]
 24062                           
 24063                           ;incstack = 0
 24064  01616C  0EFE               	movlw	-2
 24065  01616E  6AE3               	clrf	plusw1,c
 24066  016170  9EBD               	bcf	189,7,c	;volatile
 24067  016172  82BE               	bsf	190,1,c	;volatile
 24068                           
 24069                           ;dio.c: 72:  __nop();
 24070  016174  F000               	nop	
 24071                           
 24072                           ;dio.c: 73:  __nop();
 24073  016176  F000               	nop	
 24074                           
 24075                           ;dio.c: 74:  __nop();
 24076  016178  F000               	nop	
 24077  01617A  D019               	goto	l8636
 24078  01617C                     l8624:
 24079                           
 24080                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 24081  01617C  A6CF               	btfss	207,3,c	;volatile
 24082  01617E  D011               	goto	u821_20
 24083  016180  D00D               	goto	u821_21
 24084  016182                     u818_28:
 24085                           
 24086                           ;stkvar	_sw_value @ sp[(-2)+1]
 24087  016182  0EFF               	movlw	-1
 24088  016184  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 24089                           
 24090                           ;dio.c: 80:    break;
 24091  01618A  D027               	goto	l8638
 24092  01618C                     l8626:
 24093                           
 24094                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 24095  01618C  A4CF               	btfss	207,2,c	;volatile
 24096  01618E  D009               	goto	u821_20
 24097  016190  D005               	goto	u821_21
 24098  016192                     l8628:
 24099                           
 24100                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 24101  016192  A2CF               	btfss	207,1,c	;volatile
 24102  016194  D006               	goto	u821_20
 24103  016196  D002               	goto	u821_21
 24104  016198                     l8630:
 24105                           
 24106                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 24107  016198  A0CF               	btfss	207,0,c	;volatile
 24108  01619A  D003               	goto	u821_20
 24109  01619C                     u821_21:
 24110  01619C  6A3D               	clrf	(btemp+11)^0,c
 24111  01619E  2A3D               	incf	(btemp+11)^0,f,c
 24112  0161A0  D7F0               	goto	u818_28
 24113  0161A2                     u821_20:
 24114  0161A2  6A3D               	clrf	(btemp+11)^0,c
 24115  0161A4  D7EE               	goto	u818_28
 24116  0161A6                     l8632:
 24117                           
 24118                           ;dio.c: 91:    sw_value = 1;
 24119                           ;stkvar	_sw_value @ sp[(-2)+1]
 24120  0161A6  0EFF               	movlw	-1
 24121  0161A8  6AE3               	clrf	plusw1,c
 24122  0161AA  2AE3               	incf	plusw1,f,c
 24123                           
 24124                           ;dio.c: 92:    break;
 24125  0161AC  D016               	goto	l8638
 24126  0161AE                     l8636:
 24127                           
 24128                           ;stkvar	_i @ sp[(-2)+0]
 24129  0161AE  0EFE               	movlw	-2
 24130  0161B0  50E3               	movf	plusw1,w,c
 24131  0161B2  6E3C               	movwf	(btemp+10)^0,c
 24132  0161B4  6A3D               	clrf	(btemp+11)^0,c
 24133                           
 24134                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24135                           ; Switch size 1, requested type "simple"
 24136                           ; Number of cases is 1, Range of values is 0 to 0
 24137                           ; switch strategies available:
 24138                           ; Name         Instructions Cycles
 24139                           ; simple_byte            4     3 (average)
 24140                           ;	Chosen strategy is simple_byte
 24141  0161B6  503D               	movf	(btemp+11)^0,w,c
 24142  0161B8  0A00               	xorlw	0	; case 0
 24143  0161BA  A4D8               	btfss	status,2,c
 24144  0161BC  D7F4               	goto	l8632
 24145                           
 24146                           ; Switch size 1, requested type "simple"
 24147                           ; Number of cases is 4, Range of values is 0 to 3
 24148                           ; switch strategies available:
 24149                           ; Name         Instructions Cycles
 24150                           ; simple_byte           13     7 (average)
 24151                           ;	Chosen strategy is simple_byte
 24152  0161BE  503C               	movf	(btemp+10)^0,w,c
 24153  0161C0  0A00               	xorlw	0	; case 0
 24154  0161C2  B4D8               	btfsc	status,2,c
 24155  0161C4  D7E9               	goto	l8630
 24156  0161C6  0A01               	xorlw	1	; case 1
 24157  0161C8  B4D8               	btfsc	status,2,c
 24158  0161CA  D7E3               	goto	l8628
 24159  0161CC  0A03               	xorlw	3	; case 2
 24160  0161CE  B4D8               	btfsc	status,2,c
 24161  0161D0  D7DD               	goto	l8626
 24162  0161D2  0A01               	xorlw	1	; case 3
 24163  0161D4  B4D8               	btfsc	status,2,c
 24164  0161D6  D7D2               	goto	l8624
 24165  0161D8  D7E6               	goto	l8632
 24166  0161DA                     l8638:
 24167                           
 24168                           ;dio.c: 96:   if (sw_value) {
 24169                           ;stkvar	_sw_value @ sp[(-2)+1]
 24170  0161DA  0EFF               	movlw	-1
 24171  0161DC  50E3               	movf	plusw1,w,c
 24172  0161DE  B4D8               	btfsc	status,2,c
 24173  0161E0  D014               	goto	l8644
 24174                           
 24175                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 24176                           ;stkvar	_i @ sp[(-2)+0]
 24177  0161E2  0EFE               	movlw	-2
 24178  0161E4  50E3               	movf	plusw1,w,c
 24179  0161E6  0D05               	mullw	5
 24180  0161E8  50F3               	movf	243,w,c
 24181  0161EA  0F60               	addlw	low _S
 24182  0161EC  6ED9               	movwf	fsr2l,c
 24183  0161EE  6ADA               	clrf	fsr2h,c
 24184  0161F0  04DE               	decf	postinc2,w,c
 24185  0161F2  A4D8               	btfss	status,2,c
 24186  0161F4  D041               	goto	l8652
 24187                           
 24188                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 24189                           ;stkvar	_i @ sp[(-2)+0]
 24190  0161F6  0EFE               	movlw	-2
 24191  0161F8  50E3               	movf	plusw1,w,c
 24192  0161FA  0D05               	mullw	5
 24193  0161FC  50F3               	movf	243,w,c
 24194  0161FE  0F60               	addlw	low _S
 24195  016200  6ED9               	movwf	fsr2l,c
 24196  016202  6ADA               	clrf	fsr2h,c
 24197  016204  0E00               	movlw	0
 24198  016206  6EDF               	movwf	indf2,c
 24199  016208  D037               	goto	l8652
 24200  01620A                     l8644:
 24201                           
 24202                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 24203                           ;stkvar	_i @ sp[(-2)+0]
 24204  01620A  0EFE               	movlw	-2
 24205  01620C  50E3               	movf	plusw1,w,c
 24206  01620E  0D05               	mullw	5
 24207  016210  50F3               	movf	243,w,c
 24208  016212  0F60               	addlw	low _S
 24209  016214  6ED9               	movwf	fsr2l,c
 24210  016216  6ADA               	clrf	fsr2h,c
 24211  016218  50DF               	movf	indf2,w,c
 24212  01621A  A4D8               	btfss	status,2,c
 24213  01621C  D02D               	goto	l8652
 24214                           
 24215                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 24216                           ;stkvar	_i @ sp[(-2)+0]
 24217  01621E  0EFE               	movlw	-2
 24218  016220  50E3               	movf	plusw1,w,c
 24219  016222  0D05               	mullw	5
 24220  016224  50F3               	movf	243,w,c
 24221  016226  0F60               	addlw	low _S
 24222  016228  6ED9               	movwf	fsr2l,c
 24223  01622A  6ADA               	clrf	fsr2h,c
 24224  01622C  0E01               	movlw	1
 24225  01622E  6EDF               	movwf	indf2,c
 24226                           
 24227                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 24228  016230  EE20  F1B7         	lfsr	2,_V+183	;volatile
 24229                           
 24230                           ;stkvar	_i @ sp[(-2)+0]
 24231  016234  0EFE               	movlw	-2
 24232  016236  50E3               	movf	plusw1,w,c
 24233  016238  0D05               	mullw	5
 24234  01623A  50F3               	movf	243,w,c
 24235  01623C  0F61               	addlw	low (_S+1)
 24236  01623E  6EE9               	movwf	fsr0l,c
 24237  016240  6AEA               	clrf	fsr0h,c
 24238  016242  006F FF7B FFEE     	movff	postinc2,postinc0
 24239  016248  006F FF7B FFEE     	movff	postinc2,postinc0
 24240  01624E  006F FF7B FFEE     	movff	postinc2,postinc0
 24241  016254  006F FF7B FFEE     	movff	postinc2,postinc0
 24242                           
 24243                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 24244                           ;stkvar	_i @ sp[(-2)+0]
 24245  01625A  0EFE               	movlw	-2
 24246  01625C  006F FF8C  F03D    	movff	plusw1,btemp+11
 24247  016262  0E01               	movlw	1
 24248  016264  6E3C               	movwf	(btemp+10)^0,c
 24249  016266  2A3D               	incf	(btemp+11)^0,f,c
 24250  016268  D002               	goto	u825_24
 24251  01626A                     u825_25:
 24252  01626A  90D8               	bcf	status,0,c
 24253  01626C  363C               	rlcf	(btemp+10)^0,f,c
 24254  01626E                     u825_24:
 24255  01626E  2E3D               	decfsz	(btemp+11)^0,f,c
 24256  016270  D7FC               	goto	u825_25
 24257  016272  503C               	movf	(btemp+10)^0,w,c
 24258  016274  0100               	movlb	0	; () banked
 24259  016276  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 24260  016278                     l8652:
 24261                           
 24262                           ;dio.c: 107:  } while (++i < 4);
 24263                           ;stkvar	_i @ sp[(-2)+0]
 24264  016278  0EFE               	movlw	-2
 24265  01627A  2AE3               	incf	plusw1,f,c
 24266  01627C  0EFE               	movlw	-2
 24267  01627E  006F FF8C  F032    	movff	plusw1,btemp
 24268  016284  0E03               	movlw	3
 24269  016286  6432               	cpfsgt	btemp^0,c
 24270  016288  D792               	goto	l8636
 24271                           
 24272                           ;dio.c: 110:  do { LATEbits.LATE1 = 0; } while(0);
 24273  01628A  92BE               	bcf	190,1,c	;volatile
 24274  01628C  A4BE               	btfss	190,2,c	;volatile
 24275  01628E  D002               	goto	u827_20
 24276  016290  0E01               	movlw	1
 24277  016292  D001               	goto	u827_26
 24278  016294                     u827_20:
 24279  016294  0E00               	movlw	0
 24280  016296                     u827_26:
 24281  016296  0AFF               	xorlw	255
 24282  016298  6E3D               	movwf	(btemp+11)^0,c
 24283  01629A  463D               	rlncf	(btemp+11)^0,f,c
 24284  01629C  463D               	rlncf	(btemp+11)^0,f,c
 24285  01629E  50BE               	movf	190,w,c	;volatile
 24286  0162A0  183D               	xorwf	(btemp+11)^0,w,c
 24287  0162A2  0BFB               	andlw	-5
 24288  0162A4  183D               	xorwf	(btemp+11)^0,w,c
 24289  0162A6  6EBE               	movwf	190,c	;volatile
 24290  0162A8  8EBD               	bsf	189,7,c	;volatile
 24291                           
 24292                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24293  0162AA  52E5               	movf	postdec1,f,c
 24294  0162AC  52E5               	movf	postdec1,f,c
 24295  0162AE  0012               	return		;funcret
 24296  0162B0                     __end_of_switch_handler:
 24297                           	opt callstack 0
 24298                           
 24299 ;; *************** function _TMR5_ISR *****************
 24300 ;; Defined at:
 24301 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 24302 ;; Parameters:    Size  Location     Type
 24303 ;;		None
 24304 ;; Auto vars:     Size  Location     Type
 24305 ;;		None
 24306 ;; Return value:  Size  Location     Type
 24307 ;;                  1    wreg      void 
 24308 ;; Registers used:
 24309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 24310 ;; Tracked objects:
 24311 ;;		On entry : 0/0
 24312 ;;		On exit  : 0/0
 24313 ;;		Unchanged: 0/0
 24314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24317 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24318 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24319 ;;Total ram usage:        4 bytes
 24320 ;; Hardware stack levels used:    1
 24321 ;; Hardware stack levels required when called:    5
 24322 ;; This function calls:
 24323 ;;		_TMR5_CallBack
 24324 ;;		_TMR5_WriteTimer
 24325 ;; This function is called by:
 24326 ;;		Interrupt level 1
 24327 ;; This function uses a non-reentrant model
 24328 ;;
 24329                           
 24330                           	psect	text117
 24331  017898                     __ptext117:
 24332                           	opt callstack 0
 24333  017898                     _TMR5_ISR:
 24334                           	opt callstack 12
 24335                           
 24336                           ;incstack = 0
 24337  017898  006F FF60  F1C5    	movff	status,??_TMR5_ISR+2
 24338  01789E  0060  F0F4  F1C6   	movff	btemp+11,??_TMR5_ISR+3
 24339  0178A4  EE16  F000         	lfsr	1,___intlo_sp
 24340                           
 24341                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 24342  0178A8  0139               	movlb	57	; () banked
 24343  0178AA  9DA8               	bcf	168,6,b	;volatile
 24344                           
 24345                           ; BSR set to: 57
 24346                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 24347  0178AC  0060  F08F  FFE6   	movff	_timer5ReloadVal,postinc1
 24348  0178B2  0060  F093  FFE6   	movff	_timer5ReloadVal+1,postinc1
 24349  0178B8  ECE1  F0BD         	call	_TMR5_WriteTimer	;wreg free
 24350                           
 24351                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 24352  0178BC  0101               	movlb	1	; () banked
 24353  0178BE  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 24354  0178C0  6FC3               	movwf	??_TMR5_ISR& (0+255),b
 24355  0178C2  6BC4               	clrf	(??_TMR5_ISR+1)& (0+255),b
 24356  0178C4  0E05               	movlw	5
 24357  0178C6  27C3               	addwf	??_TMR5_ISR& (0+255),f,b
 24358  0178C8  0E00               	movlw	0
 24359  0178CA  23C4               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 24360  0178CC  4A21               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 24361  0178CE  2A22               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 24362  0178D0  51C3               	movf	??_TMR5_ISR& (0+255),w,b
 24363  0178D2  5C21               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 24364  0178D4  51C4               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 24365  0178D6  5822               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 24366  0178D8  A0D8               	btfss	status,0,c
 24367  0178DA  D004               	goto	i1l1045
 24368                           
 24369                           ; BSR set to: 1
 24370                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 24371  0178DC  EC0D  F0C1         	call	_TMR5_CallBack	;wreg free
 24372                           
 24373                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 24374  0178E0  6A21               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 24375  0178E2  6A22               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 24376  0178E4                     i1l1045:
 24377  0178E4  0060  F718  F03D   	movff	??_TMR5_ISR+3,btemp+11
 24378  0178EA  0060  F717  FFD8   	movff	??_TMR5_ISR+2,status
 24379  0178F0  0011               	retfie		f
 24380  0178F2                     __end_of_TMR5_ISR:
 24381                           	opt callstack 0
 24382                           
 24383 ;; *************** function _TMR5_WriteTimer *****************
 24384 ;; Defined at:
 24385 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 24386 ;; Parameters:    Size  Location     Type
 24387 ;;  timerVal        2  [STACK] unsigned short 
 24388 ;; Auto vars:     Size  Location     Type
 24389 ;;		None
 24390 ;; Return value:  Size  Location     Type
 24391 ;;                  1  [STACK] void 
 24392 ;; Registers used:
 24393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 24394 ;; Tracked objects:
 24395 ;;		On entry : 3F/39
 24396 ;;		On exit  : 0/0
 24397 ;;		Unchanged: 0/0
 24398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24403 ;;Total ram usage:        0 bytes
 24404 ;; Hardware stack levels used:    1
 24405 ;; Hardware stack levels required when called:    3
 24406 ;; This function calls:
 24407 ;;		Nothing
 24408 ;; This function is called by:
 24409 ;;		_TMR5_ISR
 24410 ;; This function uses a reentrant model
 24411 ;;
 24412                           
 24413                           	psect	text118
 24414  017BC2                     __ptext118:
 24415                           	opt callstack 0
 24416  017BC2                     _TMR5_WriteTimer:
 24417                           	opt callstack 13
 24418                           
 24419                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 24420                           
 24421                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24422                           ;incstack = 0
 24423  017BC2  A49A               	btfss	154,2,c	;volatile
 24424  017BC4  D00F               	goto	l8758
 24425                           
 24426                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 24427  017BC6  909A               	bcf	154,0,c	;volatile
 24428                           
 24429                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 24430                           ;stkvar	_timerVal @ sp[(0)+-2]
 24431  017BC8  0EFF               	movlw	255
 24432  017BCA  24E1               	addwf	fsr1l,w,c
 24433  017BCC  6ED9               	movwf	fsr2l,c
 24434  017BCE  0EFF               	movlw	255
 24435  017BD0  20E2               	addwfc	fsr1h,w,c
 24436  017BD2  6EDA               	movwf	fsr2h,c
 24437  017BD4  50DF               	movf	indf2,w,c
 24438  017BD6  6E99               	movwf	153,c	;volatile
 24439                           
 24440                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 24441                           ;stkvar	_timerVal @ sp[(0)+-2]
 24442  017BD8  0EFE               	movlw	-2
 24443  017BDA  006F FF8F FF98     	movff	plusw1,16280	;volatile
 24444                           
 24445                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 24446  017BE0  809A               	bsf	154,0,c	;volatile
 24447                           
 24448                           ;mcc_generated_files/tmr5.c: 142:  } else {
 24449  017BE2  D00C               	goto	l1028
 24450  017BE4                     l8758:
 24451                           
 24452                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 24453                           ;stkvar	_timerVal @ sp[(0)+-2]
 24454  017BE4  0EFF               	movlw	255
 24455  017BE6  24E1               	addwf	fsr1l,w,c
 24456  017BE8  6ED9               	movwf	fsr2l,c
 24457  017BEA  0EFF               	movlw	255
 24458  017BEC  20E2               	addwfc	fsr1h,w,c
 24459  017BEE  6EDA               	movwf	fsr2h,c
 24460  017BF0  50DF               	movf	indf2,w,c
 24461  017BF2  6E99               	movwf	153,c	;volatile
 24462                           
 24463                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 24464                           ;stkvar	_timerVal @ sp[(0)+-2]
 24465  017BF4  0EFE               	movlw	-2
 24466  017BF6  006F FF8F FF98     	movff	plusw1,16280	;volatile
 24467  017BFC                     l1028:
 24468                           
 24469                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 24470  017BFC  52E5               	movf	postdec1,f,c
 24471  017BFE  52E5               	movf	postdec1,f,c
 24472  017C00  0012               	return		;funcret
 24473  017C02                     __end_of_TMR5_WriteTimer:
 24474                           	opt callstack 0
 24475                           
 24476 ;; *************** function _TMR5_CallBack *****************
 24477 ;; Defined at:
 24478 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 24479 ;; Parameters:    Size  Location     Type
 24480 ;;		None
 24481 ;; Auto vars:     Size  Location     Type
 24482 ;;		None
 24483 ;; Return value:  Size  Location     Type
 24484 ;;                  1  [STACK] void 
 24485 ;; Registers used:
 24486 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 24487 ;; Tracked objects:
 24488 ;;		On entry : 3F/1
 24489 ;;		On exit  : 0/0
 24490 ;;		Unchanged: 0/0
 24491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24496 ;;Total ram usage:        0 bytes
 24497 ;; Hardware stack levels used:    1
 24498 ;; Hardware stack levels required when called:    4
 24499 ;; This function calls:
 24500 ;;		Absolute function
 24501 ;;		_TMR5_DefaultInterruptHandler
 24502 ;; This function is called by:
 24503 ;;		_TMR5_ISR
 24504 ;; This function uses a reentrant model
 24505 ;;
 24506                           
 24507                           	psect	text119
 24508  01821A                     __ptext119:
 24509                           	opt callstack 0
 24510  01821A                     _TMR5_CallBack:
 24511                           	opt callstack 12
 24512                           
 24513                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 24514                           
 24515                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24516                           ;incstack = 0
 24517  01821A  0100               	movlb	0	; () banked
 24518  01821C  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24519  01821E  11C2               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24520  018220  11C3               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24521  018222  B4D8               	btfsc	status,2,c
 24522  018224  0012               	return	
 24523                           
 24524                           ; BSR set to: 0
 24525                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 24526  018226  D801               	call	u840_28
 24527  018228  0012               	return	
 24528  01822A                     u840_28:
 24529  01822A  0005               	push	
 24530  01822C  6EFA               	movwf	pclath,c
 24531  01822E  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24532  018230  6EFD               	movwf	tosl,c
 24533  018232  51C2               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24534  018234  6EFE               	movwf	tosh,c
 24535  018236  51C3               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24536  018238  6EFF               	movwf	tosu,c
 24537  01823A  50FA               	movf	pclath,w,c
 24538  01823C  0012               	return		;indir
 24539  01823E                     __end_of_TMR5_CallBack:
 24540                           	opt callstack 0
 24541                           
 24542 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 24543 ;; Defined at:
 24544 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 24545 ;; Parameters:    Size  Location     Type
 24546 ;;		None
 24547 ;; Auto vars:     Size  Location     Type
 24548 ;;		None
 24549 ;; Return value:  Size  Location     Type
 24550 ;;                  1  [STACK] void 
 24551 ;; Registers used:
 24552 ;;		wreg, status,2, status,0, btemp+11
 24553 ;; Tracked objects:
 24554 ;;		On entry : 3F/0
 24555 ;;		On exit  : 3F/1
 24556 ;;		Unchanged: 0/0
 24557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24562 ;;Total ram usage:        0 bytes
 24563 ;; Hardware stack levels used:    1
 24564 ;; Hardware stack levels required when called:    3
 24565 ;; This function calls:
 24566 ;;		Nothing
 24567 ;; This function is called by:
 24568 ;;		_TMR5_Initialize
 24569 ;;		_TMR5_CallBack
 24570 ;; This function uses a reentrant model
 24571 ;;
 24572                           
 24573                           	psect	text120
 24574  01812E                     __ptext120:
 24575                           	opt callstack 0
 24576  01812E                     _TMR5_DefaultInterruptHandler:
 24577                           	opt callstack 12
 24578                           
 24579                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 24580                           
 24581                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24582                           ;incstack = 0
 24583  01812E  A0BE               	btfss	190,0,c	;volatile
 24584  018130  D002               	goto	u796_20
 24585  018132  0E01               	movlw	1
 24586  018134  D001               	goto	u796_26
 24587  018136                     u796_20:
 24588  018136  0E00               	movlw	0
 24589  018138                     u796_26:
 24590  018138  0AFF               	xorlw	255
 24591  01813A  6E3D               	movwf	(btemp+11)^0,c
 24592  01813C  50BE               	movf	190,w,c	;volatile
 24593  01813E  183D               	xorwf	(btemp+11)^0,w,c
 24594  018140  0BFE               	andlw	-2
 24595  018142  183D               	xorwf	(btemp+11)^0,w,c
 24596  018144  6EBE               	movwf	190,c	;volatile
 24597                           
 24598                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 24599  018146  0E01               	movlw	1
 24600  018148  0101               	movlb	1	; () banked
 24601  01814A  27B7               	addwf	(_V+183)& (0+255),f,b	;volatile
 24602  01814C  0E00               	movlw	0
 24603  01814E  23B8               	addwfc	(_V+184)& (0+255),f,b	;volatile
 24604  018150  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 24605  018152  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 24606                           
 24607                           ; BSR set to: 1
 24608                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24609  018154  0012               	return		;funcret
 24610  018156                     __end_of_TMR5_DefaultInterruptHandler:
 24611                           	opt callstack 0
 24612                           
 24613 ;; *************** function _INT0_ISR *****************
 24614 ;; Defined at:
 24615 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 24616 ;; Parameters:    Size  Location     Type
 24617 ;;		None
 24618 ;; Auto vars:     Size  Location     Type
 24619 ;;		None
 24620 ;; Return value:  Size  Location     Type
 24621 ;;                  1    wreg      void 
 24622 ;; Registers used:
 24623 ;;		wreg, status,2, status,0, pclath, tosl
 24624 ;; Tracked objects:
 24625 ;;		On entry : 0/0
 24626 ;;		On exit  : 0/0
 24627 ;;		Unchanged: 0/0
 24628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24633 ;;Total ram usage:        0 bytes
 24634 ;; Hardware stack levels used:    1
 24635 ;; Hardware stack levels required when called:    2
 24636 ;; This function calls:
 24637 ;;		_INT0_CallBack
 24638 ;; This function is called by:
 24639 ;;		Interrupt level 2
 24640 ;; This function uses a non-reentrant model
 24641 ;;
 24642                           
 24643                           	psect	text121
 24644  0184A0                     __ptext121:
 24645                           	opt callstack 0
 24646  0184A0                     _INT0_ISR:
 24647                           	opt callstack 12
 24648                           
 24649                           ; BSR set to: 1
 24650                           ;incstack = 0
 24651  0184A0  EE14  F000         	lfsr	1,___inthi_sp
 24652                           
 24653                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 24654  0184A4  0139               	movlb	57	; () banked
 24655  0184A6  91A1               	bcf	161,0,b	;volatile
 24656                           
 24657                           ; BSR set to: 57
 24658                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 24659  0184A8  EC42  F0C1         	call	_INT0_CallBack	;wreg free
 24660  0184AC  0011               	retfie		f
 24661  0184AE                     __end_of_INT0_ISR:
 24662                           	opt callstack 0
 24663                           
 24664 ;; *************** function _INT0_CallBack *****************
 24665 ;; Defined at:
 24666 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 24667 ;; Parameters:    Size  Location     Type
 24668 ;;		None
 24669 ;; Auto vars:     Size  Location     Type
 24670 ;;		None
 24671 ;; Return value:  Size  Location     Type
 24672 ;;                  1  [STACK] void 
 24673 ;; Registers used:
 24674 ;;		wreg, status,2, status,0, pclath, tosl
 24675 ;; Tracked objects:
 24676 ;;		On entry : 3F/39
 24677 ;;		On exit  : 0/0
 24678 ;;		Unchanged: 0/0
 24679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24684 ;;Total ram usage:        0 bytes
 24685 ;; Hardware stack levels used:    1
 24686 ;; Hardware stack levels required when called:    1
 24687 ;; This function calls:
 24688 ;;		Absolute function
 24689 ;;		_INT0_DefaultInterruptHandler
 24690 ;; This function is called by:
 24691 ;;		_INT0_ISR
 24692 ;; This function uses a reentrant model
 24693 ;;
 24694                           
 24695                           	psect	text122
 24696  018284                     __ptext122:
 24697                           	opt callstack 0
 24698  018284                     _INT0_CallBack:
 24699                           	opt callstack 12
 24700                           
 24701                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 24702                           
 24703                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24704                           ;incstack = 0
 24705  018284  5016               	movf	_INT0_InterruptHandler^0,w,c
 24706  018286  1017               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 24707  018288  1018               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 24708  01828A  B4D8               	btfsc	status,2,c
 24709  01828C  0012               	return	
 24710                           
 24711                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 24712  01828E  D801               	call	u391_48
 24713  018290  0012               	return	
 24714  018292                     u391_48:
 24715  018292  0005               	push	
 24716  018294  6EFA               	movwf	pclath,c
 24717  018296  5016               	movf	_INT0_InterruptHandler^0,w,c
 24718  018298  6EFD               	movwf	tosl,c
 24719  01829A  5017               	movf	(_INT0_InterruptHandler+1)^0,w,c
 24720  01829C  6EFE               	movwf	tosh,c
 24721  01829E  5018               	movf	(_INT0_InterruptHandler+2)^0,w,c
 24722  0182A0  6EFF               	movwf	tosu,c
 24723  0182A2  50FA               	movf	pclath,w,c
 24724  0182A4  0012               	return		;indir
 24725  0182A6                     __end_of_INT0_CallBack:
 24726                           	opt callstack 0
 24727                           
 24728 ;; *************** function _INT0_DefaultInterruptHandler *****************
 24729 ;; Defined at:
 24730 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 24731 ;; Parameters:    Size  Location     Type
 24732 ;;		None
 24733 ;; Auto vars:     Size  Location     Type
 24734 ;;		None
 24735 ;; Return value:  Size  Location     Type
 24736 ;;                  1  [STACK] void 
 24737 ;; Registers used:
 24738 ;;		None
 24739 ;; Tracked objects:
 24740 ;;		On entry : 0/39
 24741 ;;		On exit  : 0/0
 24742 ;;		Unchanged: 0/0
 24743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24748 ;;Total ram usage:        0 bytes
 24749 ;; Hardware stack levels used:    1
 24750 ;; This function calls:
 24751 ;;		Nothing
 24752 ;; This function is called by:
 24753 ;;		_EXT_INT_Initialize
 24754 ;;		_INT0_CallBack
 24755 ;; This function uses a reentrant model
 24756 ;;
 24757                           
 24758                           	psect	text123
 24759  01852C                     __ptext123:
 24760                           	opt callstack 0
 24761  01852C                     _INT0_DefaultInterruptHandler:
 24762                           	opt callstack 12
 24763                           
 24764                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24765                           
 24766                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24767                           ;incstack = 0
 24768  01852C  0012               	return		;funcret
 24769  01852E                     __end_of_INT0_DefaultInterruptHandler:
 24770                           	opt callstack 0
 24771                           
 24772 ;; *************** function _Default_ISR *****************
 24773 ;; Defined at:
 24774 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 24775 ;; Parameters:    Size  Location     Type
 24776 ;;		None
 24777 ;; Auto vars:     Size  Location     Type
 24778 ;;		None
 24779 ;; Return value:  Size  Location     Type
 24780 ;;                  1    wreg      void 
 24781 ;; Registers used:
 24782 ;;		None
 24783 ;; Tracked objects:
 24784 ;;		On entry : 0/0
 24785 ;;		On exit  : 0/0
 24786 ;;		Unchanged: 0/0
 24787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24792 ;;Total ram usage:        0 bytes
 24793 ;; Hardware stack levels used:    1
 24794 ;; This function calls:
 24795 ;;		Nothing
 24796 ;; This function is called by:
 24797 ;;		Interrupt level 2
 24798 ;; This function uses a non-reentrant model
 24799 ;;
 24800                           
 24801                           	psect	text124
 24802  018524                     __ptext124:
 24803                           	opt callstack 0
 24804  018524                     _Default_ISR:
 24805                           	opt callstack 14
 24806                           
 24807                           ;incstack = 0
 24808  018524  EE14  F000         	lfsr	1,___inthi_sp
 24809  018528  0011               	retfie		f
 24810  01852A                     __end_of_Default_ISR:
 24811                           	opt callstack 0
 24812                           
 24813 ;; *************** function _ADCC_ISR *****************
 24814 ;; Defined at:
 24815 ;;		line 314 in file "mcc_generated_files/adcc.c"
 24816 ;; Parameters:    Size  Location     Type
 24817 ;;		None
 24818 ;; Auto vars:     Size  Location     Type
 24819 ;;		None
 24820 ;; Return value:  Size  Location     Type
 24821 ;;                  1    wreg      void 
 24822 ;; Registers used:
 24823 ;;		wreg, status,2, status,0, pclath, tosl
 24824 ;; Tracked objects:
 24825 ;;		On entry : 0/0
 24826 ;;		On exit  : 0/0
 24827 ;;		Unchanged: 0/0
 24828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24833 ;;Total ram usage:        0 bytes
 24834 ;; Hardware stack levels used:    1
 24835 ;; Hardware stack levels required when called:    1
 24836 ;; This function calls:
 24837 ;;		Absolute function
 24838 ;;		_ADCC_DefaultInterruptHandler
 24839 ;;		_adc_int_handler
 24840 ;; This function is called by:
 24841 ;;		Interrupt level 2
 24842 ;; This function uses a non-reentrant model
 24843 ;;
 24844                           
 24845                           	psect	text125
 24846  017EFC                     __ptext125:
 24847                           	opt callstack 0
 24848  017EFC                     _ADCC_ISR:
 24849                           	opt callstack 13
 24850                           
 24851                           ;incstack = 0
 24852  017EFC  EE14  F000         	lfsr	1,___inthi_sp
 24853                           
 24854                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 24855  017F00  0139               	movlb	57	; () banked
 24856  017F02  95A1               	bcf	161,2,b	;volatile
 24857                           
 24858                           ; BSR set to: 57
 24859                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 24860  017F04  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 24861  017F06  1005               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 24862  017F08  1006               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 24863  017F0A  B4D8               	btfsc	status,2,c
 24864  017F0C  0011               	retfie		f
 24865                           
 24866                           ; BSR set to: 57
 24867                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 24868  017F0E  D801               	call	i2u419_48
 24869  017F10  0011               	retfie		f
 24870  017F12                     i2u419_48:
 24871  017F12  0005               	push	
 24872  017F14  6EFA               	movwf	pclath,c
 24873  017F16  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 24874  017F18  6EFD               	movwf	tosl,c
 24875  017F1A  5005               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 24876  017F1C  6EFE               	movwf	tosh,c
 24877  017F1E  5006               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 24878  017F20  6EFF               	movwf	tosu,c
 24879  017F22  50FA               	movf	pclath,w,c
 24880  017F24  0012               	return		;indir
 24881  017F26                     __end_of_ADCC_ISR:
 24882                           	opt callstack 0
 24883                           
 24884 ;; *************** function _adc_int_t_handler *****************
 24885 ;; Defined at:
 24886 ;;		line 128 in file "daq.c"
 24887 ;; Parameters:    Size  Location     Type
 24888 ;;		None
 24889 ;; Auto vars:     Size  Location     Type
 24890 ;;		None
 24891 ;; Return value:  Size  Location     Type
 24892 ;;                  1  [STACK] void 
 24893 ;; Registers used:
 24894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 24895 ;; Tracked objects:
 24896 ;;		On entry : 3F/39
 24897 ;;		On exit  : 1/0
 24898 ;;		Unchanged: 0/0
 24899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24904 ;;Total ram usage:        0 bytes
 24905 ;; Hardware stack levels used:    1
 24906 ;; Hardware stack levels required when called:    1
 24907 ;; This function calls:
 24908 ;;		_ADCC_DischargeSampleCapacitor
 24909 ;;		_ADCC_StartConversion
 24910 ;; This function is called by:
 24911 ;;		_start_adc_scan
 24912 ;;		_ADCC_ThresholdISR
 24913 ;; This function uses a reentrant model
 24914 ;;
 24915                           
 24916                           	psect	text126
 24917  01735E                     __ptext126:
 24918                           	opt callstack 0
 24919  01735E                     _adc_int_t_handler:
 24920                           	opt callstack 12
 24921                           
 24922                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 24923                           
 24924                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24925                           ;incstack = 0
 24926  01735E  013E               	movlb	62	; () banked
 24927  017360  51E6               	movf	230,w,b	;volatile
 24928  017362  006F FB9C  F032    	movff	16103,btemp	;volatile
 24929  017368  6A33               	clrf	(btemp+1)^0,c
 24930  01736A  0060  F0C8  F033   	movff	btemp,btemp+1
 24931  017370  6A32               	clrf	btemp^0,c
 24932  017372  2632               	addwf	btemp^0,f,c
 24933  017374  0E00               	movlw	0
 24934  017376  2233               	addwfc	(btemp+1)^0,f,c
 24935  017378  0100               	movlb	0	; () banked
 24936  01737A  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 24937  01737C  0D02               	mullw	2
 24938  01737E  50F3               	movf	243,w,c
 24939  017380  0FC7               	addlw	low _R
 24940  017382  6ED9               	movwf	fsr2l,c
 24941  017384  6ADA               	clrf	fsr2h,c
 24942  017386  0060  F0CB  FFDE   	movff	btemp,postinc2
 24943  01738C  0060  F0CF  FFDD   	movff	btemp+1,postdec2
 24944  017392                     l11896:
 24945                           
 24946                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 24947  017392  0100               	movlb	0	; () banked
 24948  017394  2BEB               	incf	(_R+36)& (0+255),f,b	;volatile
 24949  017396  0E0D               	movlw	13
 24950  017398  65EB               	cpfsgt	(_R+36)& (0+255),b	;volatile
 24951  01739A  D003               	goto	l11902
 24952                           
 24953                           ; BSR set to: 0
 24954                           ;daq.c: 136:    R.done = 1;
 24955  01739C  0E01               	movlw	1
 24956  01739E  6FEE               	movwf	(_R+39)& (0+255),b	;volatile
 24957  0173A0  0012               	return	
 24958  0173A2                     l11902:
 24959                           
 24960                           ; BSR set to: 0
 24961                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 24962  0173A2  0060  F3AC  F03D   	movff	_R+36,btemp+11	;volatile
 24963  0173A8  EE20  F0EC         	lfsr	2,_R+37	;volatile
 24964  0173AC  006F FF78  F03A    	movff	postinc2,btemp+8
 24965  0173B2  006F FF74  F03B    	movff	postdec2,btemp+9
 24966  0173B8  2A3D               	incf	(btemp+11)^0,f,c
 24967  0173BA  D003               	goto	u1260_44
 24968  0173BC                     u1260_45:
 24969  0173BC  90D8               	bcf	status,0,c
 24970  0173BE  323B               	rrcf	(btemp+9)^0,f,c
 24971  0173C0  323A               	rrcf	(btemp+8)^0,f,c
 24972  0173C2                     u1260_44:
 24973  0173C2  2E3D               	decfsz	(btemp+11)^0,f,c
 24974  0173C4  D7FB               	goto	u1260_45
 24975  0173C6  A03A               	btfss	(btemp+8)^0,0,c
 24976  0173C8  D7E4               	goto	l11896
 24977                           
 24978                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 24979  0173CA  EC75  F0C2         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 24980                           
 24981                           ; BSR set to: 62
 24982                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 24983  0173CE  0100               	movlb	0	; () banked
 24984  0173D0  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 24985  0173D2  0B0F               	andlw	15
 24986  0173D4  6EE6               	movwf	postinc1,c
 24987  0173D6  EC28  F0C2         	call	_ADCC_StartConversion	;wreg free
 24988                           
 24989                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24990  0173DA  0012               	return		;funcret
 24991  0173DC                     __end_of_adc_int_t_handler:
 24992                           	opt callstack 0
 24993                           
 24994 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 24995 ;; Defined at:
 24996 ;;		line 339 in file "mcc_generated_files/adcc.c"
 24997 ;; Parameters:    Size  Location     Type
 24998 ;;		None
 24999 ;; Auto vars:     Size  Location     Type
 25000 ;;		None
 25001 ;; Return value:  Size  Location     Type
 25002 ;;                  1  [STACK] void 
 25003 ;; Registers used:
 25004 ;;		None
 25005 ;; Tracked objects:
 25006 ;;		On entry : 3F/39
 25007 ;;		On exit  : 0/0
 25008 ;;		Unchanged: 0/0
 25009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25014 ;;Total ram usage:        0 bytes
 25015 ;; Hardware stack levels used:    1
 25016 ;; This function calls:
 25017 ;;		Nothing
 25018 ;; This function is called by:
 25019 ;;		_ADCC_Initialize
 25020 ;;		_ADCC_ISR
 25021 ;;		_ADCC_ThresholdISR
 25022 ;; This function uses a reentrant model
 25023 ;;
 25024                           
 25025                           	psect	text127
 25026  01852E                     __ptext127:
 25027                           	opt callstack 0
 25028  01852E                     _ADCC_DefaultInterruptHandler:
 25029                           	opt callstack 13
 25030                           
 25031                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25032                           
 25033                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25034                           ;incstack = 0
 25035  01852E  0012               	return		;funcret
 25036  018530                     __end_of_ADCC_DefaultInterruptHandler:
 25037                           	opt callstack 0
 25038                           
 25039 ;; *************** function _adc_int_handler *****************
 25040 ;; Defined at:
 25041 ;;		line 118 in file "daq.c"
 25042 ;; Parameters:    Size  Location     Type
 25043 ;;		None
 25044 ;; Auto vars:     Size  Location     Type
 25045 ;;		None
 25046 ;; Return value:  Size  Location     Type
 25047 ;;                  1  [STACK] void 
 25048 ;; Registers used:
 25049 ;;		None
 25050 ;; Tracked objects:
 25051 ;;		On entry : 3F/39
 25052 ;;		On exit  : 0/0
 25053 ;;		Unchanged: 0/0
 25054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25059 ;;Total ram usage:        0 bytes
 25060 ;; Hardware stack levels used:    1
 25061 ;; This function calls:
 25062 ;;		Nothing
 25063 ;; This function is called by:
 25064 ;;		_start_adc_scan
 25065 ;;		_ADCC_ISR
 25066 ;; This function uses a reentrant model
 25067 ;;
 25068                           
 25069                           	psect	text128
 25070  018530                     __ptext128:
 25071                           	opt callstack 0
 25072  018530                     _adc_int_handler:
 25073                           	opt callstack 13
 25074                           
 25075                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25076                           
 25077                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25078                           ;incstack = 0
 25079  018530  0012               	return		;funcret
 25080  018532                     __end_of_adc_int_handler:
 25081                           	opt callstack 0
 25082                           
 25083 ;; *************** function _ADCC_ThresholdISR *****************
 25084 ;; Defined at:
 25085 ;;		line 327 in file "mcc_generated_files/adcc.c"
 25086 ;; Parameters:    Size  Location     Type
 25087 ;;		None
 25088 ;; Auto vars:     Size  Location     Type
 25089 ;;		None
 25090 ;; Return value:  Size  Location     Type
 25091 ;;                  1    wreg      void 
 25092 ;; Registers used:
 25093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 25094 ;; Tracked objects:
 25095 ;;		On entry : 0/0
 25096 ;;		On exit  : 0/0
 25097 ;;		Unchanged: 0/0
 25098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25101 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25102 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25103 ;;Total ram usage:        5 bytes
 25104 ;; Hardware stack levels used:    1
 25105 ;; Hardware stack levels required when called:    2
 25106 ;; This function calls:
 25107 ;;		Absolute function
 25108 ;;		_ADCC_DefaultInterruptHandler
 25109 ;;		_adc_int_t_handler
 25110 ;; This function is called by:
 25111 ;;		Interrupt level 2
 25112 ;; This function uses a non-reentrant model
 25113 ;;
 25114                           
 25115                           	psect	text129
 25116  01752C                     __ptext129:
 25117                           	opt callstack 0
 25118  01752C                     _ADCC_ThresholdISR:
 25119                           	opt callstack 12
 25120                           
 25121                           ;incstack = 0
 25122  01752C  0060  F0C8  F052   	movff	btemp,??_ADCC_ThresholdISR
 25123  017532  0060  F0CC  F053   	movff	btemp+1,??_ADCC_ThresholdISR+1
 25124  017538  0060  F0E8  F054   	movff	btemp+8,??_ADCC_ThresholdISR+2
 25125  01753E  0060  F0EC  F055   	movff	btemp+9,??_ADCC_ThresholdISR+3
 25126  017544  0060  F0F4  F056   	movff	btemp+11,??_ADCC_ThresholdISR+4
 25127  01754A  EE14  F000         	lfsr	1,___inthi_sp
 25128                           
 25129                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 25130  01754E  0139               	movlb	57	; () banked
 25131  017550  97A1               	bcf	161,3,b	;volatile
 25132                           
 25133                           ; BSR set to: 57
 25134                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 25135  017552  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 25136  017554  1002               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 25137  017556  1003               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 25138  017558  B4D8               	btfsc	status,2,c
 25139  01755A  D00C               	goto	i2u1263_49
 25140                           
 25141                           ; BSR set to: 57
 25142                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 25143  01755C  D801               	call	i2u1263_48
 25144  01755E  D00A               	goto	i2u1263_49
 25145  017560                     i2u1263_48:
 25146  017560  0005               	push	
 25147  017562  6EFA               	movwf	pclath,c
 25148  017564  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 25149  017566  6EFD               	movwf	tosl,c
 25150  017568  5002               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 25151  01756A  6EFE               	movwf	tosh,c
 25152  01756C  5003               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 25153  01756E  6EFF               	movwf	tosu,c
 25154  017570  50FA               	movf	pclath,w,c
 25155  017572  0012               	return		;indir
 25156  017574                     i2u1263_49:
 25157  017574  0060  F158  F03D   	movff	??_ADCC_ThresholdISR+4,btemp+11
 25158  01757A  0060  F154  F03B   	movff	??_ADCC_ThresholdISR+3,btemp+9
 25159  017580  0060  F150  F03A   	movff	??_ADCC_ThresholdISR+2,btemp+8
 25160  017586  0060  F14C  F033   	movff	??_ADCC_ThresholdISR+1,btemp+1
 25161  01758C  0060  F148  F032   	movff	??_ADCC_ThresholdISR,btemp
 25162  017592  0011               	retfie		f
 25163  017594                     __end_of_ADCC_ThresholdISR:
 25164                           	opt callstack 0
 25165                           
 25166 ;; *************** function _UART1_tx_vect_isr *****************
 25167 ;; Defined at:
 25168 ;;		line 199 in file "mcc_generated_files/uart1.c"
 25169 ;; Parameters:    Size  Location     Type
 25170 ;;		None
 25171 ;; Auto vars:     Size  Location     Type
 25172 ;;		None
 25173 ;; Return value:  Size  Location     Type
 25174 ;;                  1    wreg      void 
 25175 ;; Registers used:
 25176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25177 ;; Tracked objects:
 25178 ;;		On entry : 0/0
 25179 ;;		On exit  : 0/0
 25180 ;;		Unchanged: 0/0
 25181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25186 ;;Total ram usage:        0 bytes
 25187 ;; Hardware stack levels used:    1
 25188 ;; Hardware stack levels required when called:    1
 25189 ;; This function calls:
 25190 ;;		Absolute function
 25191 ;;		_UART1_Transmit_ISR
 25192 ;; This function is called by:
 25193 ;;		Interrupt level 2
 25194 ;; This function uses a non-reentrant model
 25195 ;;
 25196                           
 25197                           	psect	text130
 25198  018158                     __ptext130:
 25199                           	opt callstack 0
 25200  018158                     _UART1_tx_vect_isr:
 25201                           	opt callstack 13
 25202                           
 25203                           ;incstack = 0
 25204  018158  EE14  F000         	lfsr	1,___inthi_sp
 25205                           
 25206                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 25207  01815C  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 25208  01815E  1008               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 25209  018160  1009               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 25210  018162  B4D8               	btfsc	status,2,c
 25211  018164  0011               	retfie		f
 25212                           
 25213                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 25214  018166  D801               	call	i2u857_48
 25215  018168  0011               	retfie		f
 25216  01816A                     i2u857_48:
 25217  01816A  0005               	push	
 25218  01816C  6EFA               	movwf	pclath,c
 25219  01816E  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 25220  018170  6EFD               	movwf	tosl,c
 25221  018172  5008               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 25222  018174  6EFE               	movwf	tosh,c
 25223  018176  5009               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 25224  018178  6EFF               	movwf	tosu,c
 25225  01817A  50FA               	movf	pclath,w,c
 25226  01817C  0012               	return		;indir
 25227  01817E                     __end_of_UART1_tx_vect_isr:
 25228                           	opt callstack 0
 25229                           
 25230 ;; *************** function _UART1_Transmit_ISR *****************
 25231 ;; Defined at:
 25232 ;;		line 213 in file "mcc_generated_files/uart1.c"
 25233 ;; Parameters:    Size  Location     Type
 25234 ;;		None
 25235 ;; Auto vars:     Size  Location     Type
 25236 ;;		None
 25237 ;; Return value:  Size  Location     Type
 25238 ;;                  1  [STACK] void 
 25239 ;; Registers used:
 25240 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25241 ;; Tracked objects:
 25242 ;;		On entry : 0/0
 25243 ;;		On exit  : 3B/39
 25244 ;;		Unchanged: 0/0
 25245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25250 ;;Total ram usage:        0 bytes
 25251 ;; Hardware stack levels used:    1
 25252 ;; This function calls:
 25253 ;;		Nothing
 25254 ;; This function is called by:
 25255 ;;		_UART1_Initialize
 25256 ;;		_UART1_tx_vect_isr
 25257 ;; This function uses a reentrant model
 25258 ;;
 25259                           
 25260                           	psect	text131
 25261  017E78                     __ptext131:
 25262                           	opt callstack 0
 25263  017E78                     _UART1_Transmit_ISR:
 25264                           	opt callstack 13
 25265                           
 25266                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 25267                           
 25268                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25269                           ;incstack = 0
 25270  017E78  0E40               	movlw	64
 25271  017E7A  602F               	cpfslt	_uart1TxBufferRemaining^0,c
 25272  017E7C  D010               	goto	l581
 25273                           
 25274                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 25275  017E7E  0EAC               	movlw	low _uart1TxBuffer
 25276  017E80  2430               	addwf	_uart1TxTail^0,w,c	;volatile
 25277  017E82  6ED9               	movwf	fsr2l,c
 25278  017E84  6ADA               	clrf	fsr2h,c
 25279  017E86  0E03               	movlw	high _uart1TxBuffer
 25280  017E88  22DA               	addwfc	fsr2h,f,c
 25281  017E8A  50DF               	movf	indf2,w,c
 25282  017E8C  013D               	movlb	61	; () banked
 25283  017E8E  6FEA               	movwf	234,b	;volatile
 25284                           
 25285                           ; BSR set to: 61
 25286  017E90  2A30               	incf	_uart1TxTail^0,f,c	;volatile
 25287                           
 25288                           ; BSR set to: 61
 25289                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 25290  017E92  0E3F               	movlw	63
 25291  017E94  6430               	cpfsgt	_uart1TxTail^0,c
 25292  017E96  D001               	goto	l8710
 25293                           
 25294                           ; BSR set to: 61
 25295                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 25296  017E98  6A30               	clrf	_uart1TxTail^0,c	;volatile
 25297  017E9A                     l8710:
 25298                           
 25299                           ; BSR set to: 61
 25300                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 25301  017E9A  2A2F               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 25302                           
 25303                           ;mcc_generated_files/uart1.c: 222:  } else {
 25304  017E9C  0012               	return	
 25305  017E9E                     l581:
 25306                           
 25307                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 25308  017E9E  0139               	movlb	57	; () banked
 25309  017EA0  9993               	bcf	147,4,b	;volatile
 25310                           
 25311                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25312  017EA2  0012               	return		;funcret
 25313  017EA4                     __end_of_UART1_Transmit_ISR:
 25314                           	opt callstack 0
 25315                           
 25316 ;; *************** function _UART1_rx_vect_isr *****************
 25317 ;; Defined at:
 25318 ;;		line 206 in file "mcc_generated_files/uart1.c"
 25319 ;; Parameters:    Size  Location     Type
 25320 ;;		None
 25321 ;; Auto vars:     Size  Location     Type
 25322 ;;		None
 25323 ;; Return value:  Size  Location     Type
 25324 ;;                  1    wreg      void 
 25325 ;; Registers used:
 25326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25327 ;; Tracked objects:
 25328 ;;		On entry : 0/0
 25329 ;;		On exit  : 0/0
 25330 ;;		Unchanged: 0/0
 25331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25336 ;;Total ram usage:        0 bytes
 25337 ;; Hardware stack levels used:    1
 25338 ;; Hardware stack levels required when called:    1
 25339 ;; This function calls:
 25340 ;;		Absolute function
 25341 ;;		_UART1_Receive_ISR
 25342 ;; This function is called by:
 25343 ;;		Interrupt level 2
 25344 ;; This function uses a non-reentrant model
 25345 ;;
 25346                           
 25347                           	psect	text132
 25348  018180                     __ptext132:
 25349                           	opt callstack 0
 25350  018180                     _UART1_rx_vect_isr:
 25351                           	opt callstack 13
 25352                           
 25353                           ;incstack = 0
 25354  018180  EE14  F000         	lfsr	1,___inthi_sp
 25355                           
 25356                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 25357  018184  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 25358  018186  100B               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 25359  018188  100C               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 25360  01818A  B4D8               	btfsc	status,2,c
 25361  01818C  0011               	retfie		f
 25362                           
 25363                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 25364  01818E  D801               	call	i2u859_48
 25365  018190  0011               	retfie		f
 25366  018192                     i2u859_48:
 25367  018192  0005               	push	
 25368  018194  6EFA               	movwf	pclath,c
 25369  018196  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 25370  018198  6EFD               	movwf	tosl,c
 25371  01819A  500B               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 25372  01819C  6EFE               	movwf	tosh,c
 25373  01819E  500C               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 25374  0181A0  6EFF               	movwf	tosu,c
 25375  0181A2  50FA               	movf	pclath,w,c
 25376  0181A4  0012               	return		;indir
 25377  0181A6                     __end_of_UART1_rx_vect_isr:
 25378                           	opt callstack 0
 25379                           
 25380 ;; *************** function _UART1_Receive_ISR *****************
 25381 ;; Defined at:
 25382 ;;		line 229 in file "mcc_generated_files/uart1.c"
 25383 ;; Parameters:    Size  Location     Type
 25384 ;;		None
 25385 ;; Auto vars:     Size  Location     Type
 25386 ;;		None
 25387 ;; Return value:  Size  Location     Type
 25388 ;;                  1  [STACK] void 
 25389 ;; Registers used:
 25390 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25391 ;; Tracked objects:
 25392 ;;		On entry : 0/0
 25393 ;;		On exit  : 0/0
 25394 ;;		Unchanged: 0/0
 25395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25400 ;;Total ram usage:        0 bytes
 25401 ;; Hardware stack levels used:    1
 25402 ;; This function calls:
 25403 ;;		Nothing
 25404 ;; This function is called by:
 25405 ;;		_UART1_Initialize
 25406 ;;		_UART1_rx_vect_isr
 25407 ;; This function uses a reentrant model
 25408 ;;
 25409                           
 25410                           	psect	text133
 25411  018320                     __ptext133:
 25412                           	opt callstack 0
 25413  018320                     _UART1_Receive_ISR:
 25414                           	opt callstack 13
 25415                           
 25416                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 25417                           
 25418                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25419                           ;incstack = 0
 25420  018320  0E00               	movlw	low _uart1RxBuffer
 25421  018322  242E               	addwf	_uart1RxHead^0,w,c	;volatile
 25422  018324  6ED9               	movwf	fsr2l,c
 25423  018326  6ADA               	clrf	fsr2h,c
 25424  018328  0E06               	movlw	high _uart1RxBuffer
 25425  01832A  22DA               	addwfc	fsr2h,f,c
 25426  01832C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 25427  018332  2A2E               	incf	_uart1RxHead^0,f,c	;volatile
 25428                           
 25429                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 25430  018334  282E               	incf	_uart1RxHead^0,w,c
 25431  018336  B4D8               	btfsc	status,2,c
 25432                           
 25433                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 25434  018338  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 25435                           
 25436                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 25437  01833A  2A2C               	incf	_uart1RxCount^0,f,c	;volatile
 25438                           
 25439                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25440  01833C  0012               	return		;funcret
 25441  01833E                     __end_of_UART1_Receive_ISR:
 25442                           	opt callstack 0
 25443                           
 25444 ;; *************** function _UART2_tx_vect_isr *****************
 25445 ;; Defined at:
 25446 ;;		line 195 in file "mcc_generated_files/uart2.c"
 25447 ;; Parameters:    Size  Location     Type
 25448 ;;		None
 25449 ;; Auto vars:     Size  Location     Type
 25450 ;;		None
 25451 ;; Return value:  Size  Location     Type
 25452 ;;                  1    wreg      void 
 25453 ;; Registers used:
 25454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25455 ;; Tracked objects:
 25456 ;;		On entry : 0/0
 25457 ;;		On exit  : 0/0
 25458 ;;		Unchanged: 0/0
 25459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25464 ;;Total ram usage:        0 bytes
 25465 ;; Hardware stack levels used:    1
 25466 ;; Hardware stack levels required when called:    1
 25467 ;; This function calls:
 25468 ;;		Absolute function
 25469 ;;		_UART2_Transmit_ISR
 25470 ;; This function is called by:
 25471 ;;		Interrupt level 2
 25472 ;; This function uses a non-reentrant model
 25473 ;;
 25474                           
 25475                           	psect	text134
 25476  0181A8                     __ptext134:
 25477                           	opt callstack 0
 25478  0181A8                     _UART2_tx_vect_isr:
 25479                           	opt callstack 13
 25480                           
 25481                           ;incstack = 0
 25482  0181A8  EE14  F000         	lfsr	1,___inthi_sp
 25483                           
 25484                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 25485  0181AC  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 25486  0181AE  100E               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 25487  0181B0  100F               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 25488  0181B2  B4D8               	btfsc	status,2,c
 25489  0181B4  0011               	retfie		f
 25490                           
 25491                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 25492  0181B6  D801               	call	i2u861_48
 25493  0181B8  0011               	retfie		f
 25494  0181BA                     i2u861_48:
 25495  0181BA  0005               	push	
 25496  0181BC  6EFA               	movwf	pclath,c
 25497  0181BE  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 25498  0181C0  6EFD               	movwf	tosl,c
 25499  0181C2  500E               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 25500  0181C4  6EFE               	movwf	tosh,c
 25501  0181C6  500F               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 25502  0181C8  6EFF               	movwf	tosu,c
 25503  0181CA  50FA               	movf	pclath,w,c
 25504  0181CC  0012               	return		;indir
 25505  0181CE                     __end_of_UART2_tx_vect_isr:
 25506                           	opt callstack 0
 25507                           
 25508 ;; *************** function _UART2_Transmit_ISR *****************
 25509 ;; Defined at:
 25510 ;;		line 213 in file "mcc_generated_files/uart2.c"
 25511 ;; Parameters:    Size  Location     Type
 25512 ;;		None
 25513 ;; Auto vars:     Size  Location     Type
 25514 ;;		None
 25515 ;; Return value:  Size  Location     Type
 25516 ;;                  1  [STACK] void 
 25517 ;; Registers used:
 25518 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25519 ;; Tracked objects:
 25520 ;;		On entry : 0/0
 25521 ;;		On exit  : 3B/39
 25522 ;;		Unchanged: 0/0
 25523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25528 ;;Total ram usage:        0 bytes
 25529 ;; Hardware stack levels used:    1
 25530 ;; This function calls:
 25531 ;;		Nothing
 25532 ;; This function is called by:
 25533 ;;		_UART2_Initialize
 25534 ;;		_UART2_tx_vect_isr
 25535 ;; This function uses a reentrant model
 25536 ;;
 25537                           
 25538                           	psect	text135
 25539  017EA4                     __ptext135:
 25540                           	opt callstack 0
 25541  017EA4                     _UART2_Transmit_ISR:
 25542                           	opt callstack 13
 25543                           
 25544                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 25545                           
 25546                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25547                           ;incstack = 0
 25548  017EA4  0E40               	movlw	64
 25549  017EA6  6029               	cpfslt	_uart2TxBufferRemaining^0,c
 25550  017EA8  D010               	goto	l701
 25551                           
 25552                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 25553  017EAA  0E6C               	movlw	low _uart2TxBuffer
 25554  017EAC  242A               	addwf	_uart2TxTail^0,w,c	;volatile
 25555  017EAE  6ED9               	movwf	fsr2l,c
 25556  017EB0  6ADA               	clrf	fsr2h,c
 25557  017EB2  0E03               	movlw	high _uart2TxBuffer
 25558  017EB4  22DA               	addwfc	fsr2h,f,c
 25559  017EB6  50DF               	movf	indf2,w,c
 25560  017EB8  013D               	movlb	61	; () banked
 25561  017EBA  6FD2               	movwf	210,b	;volatile
 25562                           
 25563                           ; BSR set to: 61
 25564  017EBC  2A2A               	incf	_uart2TxTail^0,f,c	;volatile
 25565                           
 25566                           ; BSR set to: 61
 25567                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 25568  017EBE  0E3F               	movlw	63
 25569  017EC0  642A               	cpfsgt	_uart2TxTail^0,c
 25570  017EC2  D001               	goto	l8732
 25571                           
 25572                           ; BSR set to: 61
 25573                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 25574  017EC4  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 25575  017EC6                     l8732:
 25576                           
 25577                           ; BSR set to: 61
 25578                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 25579  017EC6  2A29               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 25580                           
 25581                           ;mcc_generated_files/uart2.c: 224:     }
 25582  017EC8  0012               	return	
 25583  017ECA                     l701:
 25584                           
 25585                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 25586  017ECA  0139               	movlb	57	; () banked
 25587  017ECC  9796               	bcf	150,3,b	;volatile
 25588                           
 25589                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25590  017ECE  0012               	return		;funcret
 25591  017ED0                     __end_of_UART2_Transmit_ISR:
 25592                           	opt callstack 0
 25593                           
 25594 ;; *************** function _UART2_rx_vect_isr *****************
 25595 ;; Defined at:
 25596 ;;		line 203 in file "mcc_generated_files/uart2.c"
 25597 ;; Parameters:    Size  Location     Type
 25598 ;;		None
 25599 ;; Auto vars:     Size  Location     Type
 25600 ;;		None
 25601 ;; Return value:  Size  Location     Type
 25602 ;;                  1    wreg      void 
 25603 ;; Registers used:
 25604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25605 ;; Tracked objects:
 25606 ;;		On entry : 0/0
 25607 ;;		On exit  : 0/0
 25608 ;;		Unchanged: 0/0
 25609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25614 ;;Total ram usage:        0 bytes
 25615 ;; Hardware stack levels used:    1
 25616 ;; Hardware stack levels required when called:    1
 25617 ;; This function calls:
 25618 ;;		Absolute function
 25619 ;;		_UART2_Receive_ISR
 25620 ;; This function is called by:
 25621 ;;		Interrupt level 2
 25622 ;; This function uses a non-reentrant model
 25623 ;;
 25624                           
 25625                           	psect	text136
 25626  0181D0                     __ptext136:
 25627                           	opt callstack 0
 25628  0181D0                     _UART2_rx_vect_isr:
 25629                           	opt callstack 13
 25630                           
 25631                           ;incstack = 0
 25632  0181D0  EE14  F000         	lfsr	1,___inthi_sp
 25633                           
 25634                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 25635  0181D4  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 25636  0181D6  1011               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 25637  0181D8  1012               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 25638  0181DA  B4D8               	btfsc	status,2,c
 25639  0181DC  0011               	retfie		f
 25640                           
 25641                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 25642  0181DE  D801               	call	i2u863_48
 25643  0181E0  0011               	retfie		f
 25644  0181E2                     i2u863_48:
 25645  0181E2  0005               	push	
 25646  0181E4  6EFA               	movwf	pclath,c
 25647  0181E6  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 25648  0181E8  6EFD               	movwf	tosl,c
 25649  0181EA  5011               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 25650  0181EC  6EFE               	movwf	tosh,c
 25651  0181EE  5012               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 25652  0181F0  6EFF               	movwf	tosu,c
 25653  0181F2  50FA               	movf	pclath,w,c
 25654  0181F4  0012               	return		;indir
 25655  0181F6                     __end_of_UART2_rx_vect_isr:
 25656                           	opt callstack 0
 25657                           
 25658 ;; *************** function _UART2_Receive_ISR *****************
 25659 ;; Defined at:
 25660 ;;		line 233 in file "mcc_generated_files/uart2.c"
 25661 ;; Parameters:    Size  Location     Type
 25662 ;;		None
 25663 ;; Auto vars:     Size  Location     Type
 25664 ;;		None
 25665 ;; Return value:  Size  Location     Type
 25666 ;;                  1  [STACK] void 
 25667 ;; Registers used:
 25668 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25669 ;; Tracked objects:
 25670 ;;		On entry : 0/0
 25671 ;;		On exit  : 0/0
 25672 ;;		Unchanged: 0/0
 25673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25678 ;;Total ram usage:        0 bytes
 25679 ;; Hardware stack levels used:    1
 25680 ;; This function calls:
 25681 ;;		Nothing
 25682 ;; This function is called by:
 25683 ;;		_UART2_Initialize
 25684 ;;		_UART2_rx_vect_isr
 25685 ;; This function uses a reentrant model
 25686 ;;
 25687                           
 25688                           	psect	text137
 25689  01833E                     __ptext137:
 25690                           	opt callstack 0
 25691  01833E                     _UART2_Receive_ISR:
 25692                           	opt callstack 13
 25693                           
 25694                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 25695                           
 25696                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25697                           ;incstack = 0
 25698  01833E  0E00               	movlw	low _uart2RxBuffer
 25699  018340  2428               	addwf	_uart2RxHead^0,w,c	;volatile
 25700  018342  6ED9               	movwf	fsr2l,c
 25701  018344  6ADA               	clrf	fsr2h,c
 25702  018346  0E07               	movlw	high _uart2RxBuffer
 25703  018348  22DA               	addwfc	fsr2h,f,c
 25704  01834A  006F F743 FFDF     	movff	15824,indf2	;volatile
 25705  018350  2A28               	incf	_uart2RxHead^0,f,c	;volatile
 25706                           
 25707                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 25708  018352  2828               	incf	_uart2RxHead^0,w,c
 25709  018354  B4D8               	btfsc	status,2,c
 25710                           
 25711                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 25712  018356  6A28               	clrf	_uart2RxHead^0,c	;volatile
 25713                           
 25714                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 25715  018358  2A26               	incf	_uart2RxCount^0,f,c	;volatile
 25716                           
 25717                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25718  01835A  0012               	return		;funcret
 25719  01835C                     __end_of_UART2_Receive_ISR:
 25720                           	opt callstack 0
 25721                           
 25722 ;; *************** function _TMR6_ISR *****************
 25723 ;; Defined at:
 25724 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 25725 ;; Parameters:    Size  Location     Type
 25726 ;;		None
 25727 ;; Auto vars:     Size  Location     Type
 25728 ;;		None
 25729 ;; Return value:  Size  Location     Type
 25730 ;;                  1    wreg      void 
 25731 ;; Registers used:
 25732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 25733 ;; Tracked objects:
 25734 ;;		On entry : 0/0
 25735 ;;		On exit  : 0/0
 25736 ;;		Unchanged: 0/0
 25737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25740 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25741 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25742 ;;Total ram usage:        1 bytes
 25743 ;; Hardware stack levels used:    1
 25744 ;; Hardware stack levels required when called:    2
 25745 ;; This function calls:
 25746 ;;		_TMR6_CallBack
 25747 ;; This function is called by:
 25748 ;;		Interrupt level 2
 25749 ;; This function uses a non-reentrant model
 25750 ;;
 25751                           
 25752                           	psect	text138
 25753  0183B0                     __ptext138:
 25754                           	opt callstack 0
 25755  0183B0                     _TMR6_ISR:
 25756                           	opt callstack 12
 25757                           
 25758                           ;incstack = 0
 25759  0183B0  0060  F0C8  F057   	movff	btemp,??_TMR6_ISR
 25760  0183B6  EE14  F000         	lfsr	1,___inthi_sp
 25761                           
 25762                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 25763  0183BA  0139               	movlb	57	; () banked
 25764  0183BC  91A9               	bcf	169,0,b	;volatile
 25765                           
 25766                           ; BSR set to: 57
 25767                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 25768  0183BE  EC1F  F0C1         	call	_TMR6_CallBack	;wreg free
 25769  0183C2  0060  F15C  F032   	movff	??_TMR6_ISR,btemp
 25770  0183C8  0011               	retfie		f
 25771  0183CA                     __end_of_TMR6_ISR:
 25772                           	opt callstack 0
 25773                           
 25774 ;; *************** function _TMR6_CallBack *****************
 25775 ;; Defined at:
 25776 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 25777 ;; Parameters:    Size  Location     Type
 25778 ;;		None
 25779 ;; Auto vars:     Size  Location     Type
 25780 ;;		None
 25781 ;; Return value:  Size  Location     Type
 25782 ;;                  1  [STACK] void 
 25783 ;; Registers used:
 25784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 25785 ;; Tracked objects:
 25786 ;;		On entry : 3F/39
 25787 ;;		On exit  : 0/0
 25788 ;;		Unchanged: 0/0
 25789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25794 ;;Total ram usage:        0 bytes
 25795 ;; Hardware stack levels used:    1
 25796 ;; Hardware stack levels required when called:    1
 25797 ;; This function calls:
 25798 ;;		Absolute function
 25799 ;;		_TMR6_DefaultInterruptHandler
 25800 ;; This function is called by:
 25801 ;;		_TMR6_ISR
 25802 ;; This function uses a reentrant model
 25803 ;;
 25804                           
 25805                           	psect	text139
 25806  01823E                     __ptext139:
 25807                           	opt callstack 0
 25808  01823E                     _TMR6_CallBack:
 25809                           	opt callstack 12
 25810                           
 25811                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 25812                           
 25813                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25814                           ;incstack = 0
 25815  01823E  0100               	movlb	0	; () banked
 25816  018240  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 25817  018242  11C5               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 25818  018244  11C6               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 25819  018246  B4D8               	btfsc	status,2,c
 25820  018248  0012               	return	
 25821                           
 25822                           ; BSR set to: 0
 25823                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 25824  01824A  D801               	call	u837_48
 25825  01824C  0012               	return	
 25826  01824E                     u837_48:
 25827  01824E  0005               	push	
 25828  018250  6EFA               	movwf	pclath,c
 25829  018252  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 25830  018254  6EFD               	movwf	tosl,c
 25831  018256  51C5               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 25832  018258  6EFE               	movwf	tosh,c
 25833  01825A  51C6               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 25834  01825C  6EFF               	movwf	tosu,c
 25835  01825E  50FA               	movf	pclath,w,c
 25836  018260  0012               	return		;indir
 25837  018262                     __end_of_TMR6_CallBack:
 25838                           	opt callstack 0
 25839                           
 25840 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 25841 ;; Defined at:
 25842 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 25843 ;; Parameters:    Size  Location     Type
 25844 ;;		None
 25845 ;; Auto vars:     Size  Location     Type
 25846 ;;  i               1  [STACK] unsigned char 
 25847 ;; Return value:  Size  Location     Type
 25848 ;;                  1  [STACK] void 
 25849 ;; Registers used:
 25850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 25851 ;; Tracked objects:
 25852 ;;		On entry : 3F/0
 25853 ;;		On exit  : 0/0
 25854 ;;		Unchanged: 0/0
 25855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25860 ;;Total ram usage:        0 bytes
 25861 ;; Hardware stack levels used:    1
 25862 ;; This function calls:
 25863 ;;		Nothing
 25864 ;; This function is called by:
 25865 ;;		_TMR6_Initialize
 25866 ;;		_TMR6_CallBack
 25867 ;; This function uses a reentrant model
 25868 ;;
 25869                           
 25870                           	psect	text140
 25871  017AF6                     __ptext140:
 25872                           	opt callstack 0
 25873  017AF6                     _TMR6_DefaultInterruptHandler:
 25874                           	opt callstack 0
 25875                           
 25876                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25877  017AF6  52E6               	movf	postinc1,f,c
 25878                           
 25879                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 25880                           ;stkvar	_i @ sp[(-1)+0]
 25881                           
 25882                           ;incstack = 0
 25883  017AF8  0EFF               	movlw	-1
 25884  017AFA  6AE3               	clrf	plusw1,c
 25885  017AFC                     l8410:
 25886                           
 25887                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 25888                           ;stkvar	_i @ sp[(-1)+0]
 25889  017AFC  0EFF               	movlw	-1
 25890  017AFE  50E3               	movf	plusw1,w,c
 25891  017B00  0D02               	mullw	2
 25892  017B02  50F3               	movf	243,w,c
 25893  017B04  0F89               	addlw	low _tickCount
 25894  017B06  6ED9               	movwf	fsr2l,c
 25895  017B08  6ADA               	clrf	fsr2h,c
 25896  017B0A  50DE               	movf	postinc2,w,c
 25897  017B0C  10DE               	iorwf	postinc2,w,c
 25898  017B0E  B4D8               	btfsc	status,2,c
 25899  017B10  D00A               	goto	l8414
 25900                           
 25901                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 25902                           ;stkvar	_i @ sp[(-1)+0]
 25903  017B12  0EFF               	movlw	-1
 25904  017B14  50E3               	movf	plusw1,w,c
 25905  017B16  0D02               	mullw	2
 25906  017B18  50F3               	movf	243,w,c
 25907  017B1A  0F89               	addlw	low _tickCount
 25908  017B1C  6ED9               	movwf	fsr2l,c
 25909  017B1E  6ADA               	clrf	fsr2h,c
 25910  017B20  06DE               	decf	postinc2,f,c
 25911  017B22  0E00               	movlw	0
 25912  017B24  5ADD               	subwfb	postdec2,f,c
 25913  017B26                     l8414:
 25914                           
 25915                           ;mcc_generated_files/tmr6.c: 207:  }
 25916                           ;stkvar	_i @ sp[(-1)+0]
 25917  017B26  0EFF               	movlw	-1
 25918  017B28  2AE3               	incf	plusw1,f,c
 25919                           
 25920                           ;stkvar	_i @ sp[(-1)+0]
 25921  017B2A  0EFF               	movlw	-1
 25922  017B2C  006F FF8C  F032    	movff	plusw1,btemp
 25923  017B32  0E0B               	movlw	11
 25924  017B34  6432               	cpfsgt	btemp^0,c
 25925  017B36  D7E2               	goto	l8410
 25926                           
 25927                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25928  017B38  52E5               	movf	postdec1,f,c
 25929  017B3A  0012               	return		;funcret
 25930  017B3C                     __end_of_TMR6_DefaultInterruptHandler:
 25931                           	opt callstack 0
 25932                           
 25933 ;; *************** function _DMA1_DMASCNT_ISR *****************
 25934 ;; Defined at:
 25935 ;;		line 126 in file "mcc_generated_files/dma1.c"
 25936 ;; Parameters:    Size  Location     Type
 25937 ;;		None
 25938 ;; Auto vars:     Size  Location     Type
 25939 ;;		None
 25940 ;; Return value:  Size  Location     Type
 25941 ;;                  1    wreg      void 
 25942 ;; Registers used:
 25943 ;;		None
 25944 ;; Tracked objects:
 25945 ;;		On entry : 0/0
 25946 ;;		On exit  : 3F/0
 25947 ;;		Unchanged: 0/0
 25948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25953 ;;Total ram usage:        0 bytes
 25954 ;; Hardware stack levels used:    1
 25955 ;; This function calls:
 25956 ;;		Nothing
 25957 ;; This function is called by:
 25958 ;;		Interrupt level 2
 25959 ;; This function uses a non-reentrant model
 25960 ;;
 25961                           
 25962                           	psect	text141
 25963  0184B0                     __ptext141:
 25964                           	opt callstack 0
 25965  0184B0                     _DMA1_DMASCNT_ISR:
 25966                           	opt callstack 14
 25967                           
 25968                           ;incstack = 0
 25969  0184B0  EE14  F000         	lfsr	1,___inthi_sp
 25970                           
 25971                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 25972  0184B4  0139               	movlb	57	; () banked
 25973  0184B6  91A2               	bcf	162,0,b	;volatile
 25974                           
 25975                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 25976  0184B8  0100               	movlb	0	; () banked
 25977  0184BA  97A1               	bcf	_spi_link& (0+255),3,b	;volatile
 25978                           
 25979                           ; BSR set to: 0
 25980  0184BC  0011               	retfie		f
 25981  0184BE                     __end_of_DMA1_DMASCNT_ISR:
 25982                           	opt callstack 0
 25983                           
 25984 ;; *************** function _DMA1_DMADCNT_ISR *****************
 25985 ;; Defined at:
 25986 ;;		line 134 in file "mcc_generated_files/dma1.c"
 25987 ;; Parameters:    Size  Location     Type
 25988 ;;		None
 25989 ;; Auto vars:     Size  Location     Type
 25990 ;;		None
 25991 ;; Return value:  Size  Location     Type
 25992 ;;                  1    wreg      void 
 25993 ;; Registers used:
 25994 ;;		None
 25995 ;; Tracked objects:
 25996 ;;		On entry : 0/0
 25997 ;;		On exit  : 3F/39
 25998 ;;		Unchanged: 0/0
 25999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26004 ;;Total ram usage:        0 bytes
 26005 ;; Hardware stack levels used:    1
 26006 ;; This function calls:
 26007 ;;		Nothing
 26008 ;; This function is called by:
 26009 ;;		Interrupt level 2
 26010 ;; This function uses a non-reentrant model
 26011 ;;
 26012                           
 26013                           	psect	text142
 26014  0184C8                     __ptext142:
 26015                           	opt callstack 0
 26016  0184C8                     _DMA1_DMADCNT_ISR:
 26017                           	opt callstack 14
 26018                           
 26019                           ; BSR set to: 0
 26020                           ;incstack = 0
 26021  0184C8  EE14  F000         	lfsr	1,___inthi_sp
 26022                           
 26023                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 26024  0184CC  0139               	movlb	57	; () banked
 26025  0184CE  93A2               	bcf	162,1,b	;volatile
 26026                           
 26027                           ; BSR set to: 57
 26028  0184D0  0011               	retfie		f
 26029  0184D2                     __end_of_DMA1_DMADCNT_ISR:
 26030                           	opt callstack 0
 26031                           
 26032 ;; *************** function _DMA1_DMAA_ISR *****************
 26033 ;; Defined at:
 26034 ;;		line 144 in file "mcc_generated_files/dma1.c"
 26035 ;; Parameters:    Size  Location     Type
 26036 ;;		None
 26037 ;; Auto vars:     Size  Location     Type
 26038 ;;		None
 26039 ;; Return value:  Size  Location     Type
 26040 ;;                  1    wreg      void 
 26041 ;; Registers used:
 26042 ;;		None
 26043 ;; Tracked objects:
 26044 ;;		On entry : 0/0
 26045 ;;		On exit  : 3F/39
 26046 ;;		Unchanged: 0/0
 26047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26052 ;;Total ram usage:        0 bytes
 26053 ;; Hardware stack levels used:    1
 26054 ;; This function calls:
 26055 ;;		Nothing
 26056 ;; This function is called by:
 26057 ;;		Interrupt level 2
 26058 ;; This function uses a non-reentrant model
 26059 ;;
 26060                           
 26061                           	psect	text143
 26062  0184D4                     __ptext143:
 26063                           	opt callstack 0
 26064  0184D4                     _DMA1_DMAA_ISR:
 26065                           	opt callstack 14
 26066                           
 26067                           ; BSR set to: 57
 26068                           ;incstack = 0
 26069  0184D4  EE14  F000         	lfsr	1,___inthi_sp
 26070                           
 26071                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 26072  0184D8  0139               	movlb	57	; () banked
 26073  0184DA  97A2               	bcf	162,3,b	;volatile
 26074                           
 26075                           ; BSR set to: 57
 26076  0184DC  0011               	retfie		f
 26077  0184DE                     __end_of_DMA1_DMAA_ISR:
 26078                           	opt callstack 0
 26079                           
 26080 ;; *************** function _DMA1_DMAOR_ISR *****************
 26081 ;; Defined at:
 26082 ;;		line 155 in file "mcc_generated_files/dma1.c"
 26083 ;; Parameters:    Size  Location     Type
 26084 ;;		None
 26085 ;; Auto vars:     Size  Location     Type
 26086 ;;		None
 26087 ;; Return value:  Size  Location     Type
 26088 ;;                  1    wreg      void 
 26089 ;; Registers used:
 26090 ;;		None
 26091 ;; Tracked objects:
 26092 ;;		On entry : 0/0
 26093 ;;		On exit  : 3F/39
 26094 ;;		Unchanged: 0/0
 26095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26100 ;;Total ram usage:        0 bytes
 26101 ;; Hardware stack levels used:    1
 26102 ;; This function calls:
 26103 ;;		Nothing
 26104 ;; This function is called by:
 26105 ;;		Interrupt level 2
 26106 ;; This function uses a non-reentrant model
 26107 ;;
 26108                           
 26109                           	psect	text144
 26110  0184E0                     __ptext144:
 26111                           	opt callstack 0
 26112  0184E0                     _DMA1_DMAOR_ISR:
 26113                           	opt callstack 14
 26114                           
 26115                           ; BSR set to: 57
 26116                           ;incstack = 0
 26117  0184E0  EE14  F000         	lfsr	1,___inthi_sp
 26118                           
 26119                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 26120  0184E4  0139               	movlb	57	; () banked
 26121  0184E6  95A2               	bcf	162,2,b	;volatile
 26122                           
 26123                           ; BSR set to: 57
 26124  0184E8  0011               	retfie		f
 26125  0184EA                     __end_of_DMA1_DMAOR_ISR:
 26126                           	opt callstack 0
 26127                           
 26128                           ;
 26129                           ; Interrupt Vector Table @ 0x8
 26130                           ;
 26131                           
 26132                           	psect	ivt0x8
 26133  000008                     __pivt0x8:
 26134                           	opt callstack 0
 26135  000008                     ivt0x8_base:
 26136                           	opt callstack 0
 26137                           
 26138                           ; Vector 0 : SWINT
 26139  000008  6149               	dw	_Default_ISR shr (0+2)
 26140                           
 26141                           ; Vector 1 : HLVD
 26142  00000A  6149               	dw	_Default_ISR shr (0+2)
 26143                           
 26144                           ; Vector 2 : OSF
 26145  00000C  6149               	dw	_Default_ISR shr (0+2)
 26146                           
 26147                           ; Vector 3 : CSW
 26148  00000E  6149               	dw	_Default_ISR shr (0+2)
 26149                           
 26150                           ; Vector 4 : NVM
 26151  000010  6149               	dw	_Default_ISR shr (0+2)
 26152                           
 26153                           ; Vector 5 : SCAN
 26154  000012  6149               	dw	_Default_ISR shr (0+2)
 26155                           
 26156                           ; Vector 6 : CRC
 26157  000014  6149               	dw	_Default_ISR shr (0+2)
 26158                           
 26159                           ; Vector 7 : IOC
 26160  000016  6149               	dw	_Default_ISR shr (0+2)
 26161                           
 26162                           ; Vector 8 : INT0
 26163  000018  6128               	dw	_INT0_ISR shr (0+2)
 26164                           
 26165                           ; Vector 9 : ZCD
 26166  00001A  6149               	dw	_Default_ISR shr (0+2)
 26167                           
 26168                           ; Vector 10 : AD
 26169  00001C  5FBF               	dw	_ADCC_ISR shr (0+2)
 26170                           
 26171                           ; Vector 11 : ADT
 26172  00001E  5D4B               	dw	_ADCC_ThresholdISR shr (0+2)
 26173                           
 26174                           ; Vector 12 : CMP1
 26175  000020  6149               	dw	_Default_ISR shr (0+2)
 26176                           
 26177                           ; Vector 13 : SMT1
 26178  000022  6149               	dw	_Default_ISR shr (0+2)
 26179                           
 26180                           ; Vector 14 : SMT1PRA
 26181  000024  6149               	dw	_Default_ISR shr (0+2)
 26182                           
 26183                           ; Vector 15 : SMT1PRW
 26184  000026  6149               	dw	_Default_ISR shr (0+2)
 26185                           
 26186                           ; Vector 16 : DMA1SCNT
 26187  000028  612C               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 26188                           
 26189                           ; Vector 17 : DMA1DCNT
 26190  00002A  6132               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 26191                           
 26192                           ; Vector 18 : DMA1OR
 26193  00002C  6138               	dw	_DMA1_DMAOR_ISR shr (0+2)
 26194                           
 26195                           ; Vector 19 : DMA1A
 26196  00002E  6135               	dw	_DMA1_DMAA_ISR shr (0+2)
 26197                           
 26198                           ; Vector 20 : SPI1RX
 26199  000030  6149               	dw	_Default_ISR shr (0+2)
 26200                           
 26201                           ; Vector 21 : SPI1TX
 26202  000032  6149               	dw	_Default_ISR shr (0+2)
 26203                           
 26204                           ; Vector 22 : SPI1
 26205  000034  6149               	dw	_Default_ISR shr (0+2)
 26206                           
 26207                           ; Vector 23 : I2C1RX
 26208  000036  6149               	dw	_Default_ISR shr (0+2)
 26209                           
 26210                           ; Vector 24 : I2C1TX
 26211  000038  6149               	dw	_Default_ISR shr (0+2)
 26212                           
 26213                           ; Vector 25 : I2C1
 26214  00003A  6149               	dw	_Default_ISR shr (0+2)
 26215                           
 26216                           ; Vector 26 : I2C1E
 26217  00003C  6149               	dw	_Default_ISR shr (0+2)
 26218                           
 26219                           ; Vector 27 : U1RX
 26220  00003E  6060               	dw	_UART1_rx_vect_isr shr (0+2)
 26221                           
 26222                           ; Vector 28 : U1TX
 26223  000040  6056               	dw	_UART1_tx_vect_isr shr (0+2)
 26224                           
 26225                           ; Vector 29 : U1E
 26226  000042  6149               	dw	_Default_ISR shr (0+2)
 26227                           
 26228                           ; Vector 30 : U1
 26229  000044  6149               	dw	_Default_ISR shr (0+2)
 26230                           
 26231                           ; Vector 31 : TMR0
 26232  000046  6149               	dw	_Default_ISR shr (0+2)
 26233                           
 26234                           ; Vector 32 : TMR1
 26235  000048  6149               	dw	_Default_ISR shr (0+2)
 26236                           
 26237                           ; Vector 33 : TMR1G
 26238  00004A  6149               	dw	_Default_ISR shr (0+2)
 26239                           
 26240                           ; Vector 34 : TMR2
 26241  00004C  6149               	dw	_Default_ISR shr (0+2)
 26242                           
 26243                           ; Vector 35 : CCP1
 26244  00004E  6149               	dw	_Default_ISR shr (0+2)
 26245                           
 26246                           ; Vector 36 : Undefined
 26247  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 26248                           
 26249                           ; Vector 37 : NCO1
 26250  000052  6149               	dw	_Default_ISR shr (0+2)
 26251                           
 26252                           ; Vector 38 : CWG1
 26253  000054  6149               	dw	_Default_ISR shr (0+2)
 26254                           
 26255                           ; Vector 39 : CLC1
 26256  000056  6149               	dw	_Default_ISR shr (0+2)
 26257                           
 26258                           ; Vector 40 : INT1
 26259  000058  5F01               	dw	_INT1_ISR shr (0+2)
 26260                           
 26261                           ; Vector 41 : CMP2
 26262  00005A  6149               	dw	_Default_ISR shr (0+2)
 26263                           
 26264                           ; Vector 42 : DMA2SCNT
 26265  00005C  6149               	dw	_Default_ISR shr (0+2)
 26266                           
 26267                           ; Vector 43 : DMA2DCNT
 26268  00005E  6149               	dw	_Default_ISR shr (0+2)
 26269                           
 26270                           ; Vector 44 : DMA2OR
 26271  000060  6149               	dw	_Default_ISR shr (0+2)
 26272                           
 26273                           ; Vector 45 : DMA2A
 26274  000062  6149               	dw	_Default_ISR shr (0+2)
 26275                           
 26276                           ; Vector 46 : I2C2RX
 26277  000064  6149               	dw	_Default_ISR shr (0+2)
 26278                           
 26279                           ; Vector 47 : I2C2TX
 26280  000066  6149               	dw	_Default_ISR shr (0+2)
 26281                           
 26282                           ; Vector 48 : I2C2
 26283  000068  6149               	dw	_Default_ISR shr (0+2)
 26284                           
 26285                           ; Vector 49 : I2C2E
 26286  00006A  6149               	dw	_Default_ISR shr (0+2)
 26287                           
 26288                           ; Vector 50 : U2RX
 26289  00006C  6074               	dw	_UART2_rx_vect_isr shr (0+2)
 26290                           
 26291                           ; Vector 51 : U2TX
 26292  00006E  606A               	dw	_UART2_tx_vect_isr shr (0+2)
 26293                           
 26294                           ; Vector 52 : U2E
 26295  000070  6149               	dw	_Default_ISR shr (0+2)
 26296                           
 26297                           ; Vector 53 : U2
 26298  000072  6149               	dw	_Default_ISR shr (0+2)
 26299                           
 26300                           ; Vector 54 : TMR3
 26301  000074  6149               	dw	_Default_ISR shr (0+2)
 26302                           
 26303                           ; Vector 55 : TMR3G
 26304  000076  6149               	dw	_Default_ISR shr (0+2)
 26305                           
 26306                           ; Vector 56 : TMR4
 26307  000078  6149               	dw	_Default_ISR shr (0+2)
 26308                           
 26309                           ; Vector 57 : CCP2
 26310  00007A  6149               	dw	_Default_ISR shr (0+2)
 26311                           
 26312                           ; Vector 58 : Undefined
 26313  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 26314                           
 26315                           ; Vector 59 : CWG2
 26316  00007E  6149               	dw	_Default_ISR shr (0+2)
 26317                           
 26318                           ; Vector 60 : CLC2
 26319  000080  6149               	dw	_Default_ISR shr (0+2)
 26320                           
 26321                           ; Vector 61 : INT2
 26322  000082  6149               	dw	_Default_ISR shr (0+2)
 26323                           
 26324                           ; Vector 62 : Undefined
 26325  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 26326                           
 26327                           ; Vector 63 : Undefined
 26328  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 26329                           
 26330                           ; Vector 64 : Undefined
 26331  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 26332                           
 26333                           ; Vector 65 : Undefined
 26334  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 26335                           
 26336                           ; Vector 66 : Undefined
 26337  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 26338                           
 26339                           ; Vector 67 : Undefined
 26340  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 26341                           
 26342                           ; Vector 68 : Undefined
 26343  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 26344                           
 26345                           ; Vector 69 : Undefined
 26346  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 26347                           
 26348                           ; Vector 70 : TMR5
 26349  000094  5E26               	dw	_TMR5_ISR shr (0+2)
 26350                           
 26351                           ; Vector 71 : TMR5G
 26352  000096  6149               	dw	_Default_ISR shr (0+2)
 26353                           
 26354                           ; Vector 72 : TMR6
 26355  000098  60EC               	dw	_TMR6_ISR shr (0+2)
 26356                           
 26357                           ; Vector 73 : CCP3
 26358  00009A  6149               	dw	_Default_ISR shr (0+2)
 26359                           
 26360                           ; Vector 74 : CWG3
 26361  00009C  6149               	dw	_Default_ISR shr (0+2)
 26362                           
 26363                           ; Vector 75 : CLC3
 26364  00009E  6149               	dw	_Default_ISR shr (0+2)
 26365                           
 26366                           ; Vector 76 : Undefined
 26367  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 26368                           
 26369                           ; Vector 77 : Undefined
 26370  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 26371                           
 26372                           ; Vector 78 : Undefined
 26373  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 26374                           
 26375                           ; Vector 79 : Undefined
 26376  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 26377                           
 26378                           ; Vector 80 : CCP4
 26379  0000A8  6149               	dw	_Default_ISR shr (0+2)
 26380                           
 26381                           ; Vector 81 : CLC4
 26382  0000AA  6149               	dw	_Default_ISR shr (0+2)
 26383  0000AC                     ivt0x8_undefint:
 26384                           	opt callstack 0
 26385  0000AC  00FF               	reset	
 26386                           
 26387                           	psect	text145
 26388  000000                     __ptext145:
 26389                           	opt callstack 0
 26390                           
 26391                           	psect	rparam
 26392  0000                     
 26393                           	psect	temp
 26394  000032                     btemp:
 26395                           	opt callstack 0
 26396  000032                     	ds	32
 26397  0000                     wtemp0	set	btemp
 26398  0000                     wtemp1	set	btemp+2
 26399  0000                     wtemp2	set	btemp+4
 26400  0000                     wtemp3	set	btemp+6
 26401  0000                     wtemp4	set	btemp+8
 26402  0000                     wtemp5	set	btemp+10
 26403  0000                     wtemp8	set	btemp+1
 26404  0000                     ttemp0	set	btemp
 26405  0000                     ttemp1	set	btemp+3
 26406  0000                     ttemp2	set	btemp+6
 26407  0000                     ttemp3	set	btemp+9
 26408  0000                     ttemp5	set	btemp+1
 26409  0000                     ttemp6	set	btemp+4
 26410  0000                     ttemp7	set	btemp+8
 26411  0000                     ltemp0	set	btemp
 26412  0000                     ltemp1	set	btemp+4
 26413  0000                     ltemp2	set	btemp+8
 26414  0000                     lltemp0	set	btemp
 26415  0000                     lltemp1	set	btemp+8
 26416  0000                     lltemp2	set	btemp+16
 26417  0000                     lltemp3	set	btemp+24
 26418                           tosu	equ	0x3FFF
 26419                           tosh	equ	0x3FFE
 26420                           tosl	equ	0x3FFD
 26421                           stkptr	equ	0x3FFC
 26422                           pclatu	equ	0x3FFB
 26423                           pclath	equ	0x3FFA
 26424                           pcl	equ	0x3FF9
 26425                           tblptru	equ	0x3FF8
 26426                           tblptrh	equ	0x3FF7
 26427                           tblptrl	equ	0x3FF6
 26428                           tablat	equ	0x3FF5
 26429                           prodh	equ	0x3FF4
 26430                           prodl	equ	0x3FF3
 26431                           indf0	equ	0x3FEF
 26432                           postinc0	equ	0x3FEE
 26433                           postdec0	equ	0x3FED
 26434                           preinc0	equ	0x3FEC
 26435                           plusw0	equ	0x3FEB
 26436                           fsr0h	equ	0x3FEA
 26437                           fsr0l	equ	0x3FE9
 26438                           wreg	equ	0x3FE8
 26439                           indf1	equ	0x3FE7
 26440                           postinc1	equ	0x3FE6
 26441                           postdec1	equ	0x3FE5
 26442                           preinc1	equ	0x3FE4
 26443                           plusw1	equ	0x3FE3
 26444                           fsr1h	equ	0x3FE2
 26445                           fsr1l	equ	0x3FE1
 26446                           bsr	equ	0x3FE0
 26447                           indf2	equ	0x3FDF
 26448                           postinc2	equ	0x3FDE
 26449                           postdec2	equ	0x3FDD
 26450                           preinc2	equ	0x3FDC
 26451                           plusw2	equ	0x3FDB
 26452                           fsr2h	equ	0x3FDA
 26453                           fsr2l	equ	0x3FD9
 26454                           status	equ	0x3FD8


Data Sizes:
    Strings     297
    Constant    144
    Data        250
    BSS         1402
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      55
    BANK0           160      4     154
    BANK1           256      4     199
    BANK2           256      0     160
    BANK3           256      0     236
    BANK4           256      0     134
    BANK5           256      0     218
    BANK6           256      0     255
    BANK7           256      0     255
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_33(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_11(CODE[19]), STR_10(CODE[19]), STR_9(CODE[19]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[187]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[187]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4953_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK1[187]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[19]), 
		 -> STR_10(CODE[19]), STR_9(CODE[19]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[19]), 
		 -> STR_10(CODE[19]), STR_9(CODE[19]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[19]), 
		 -> STR_10(CODE[19]), STR_9(CODE[19]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[187]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_16(CODE[9]), 
		 -> STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), 
		 -> STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    S3966tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_16(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_15(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[187]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[187]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  346892
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                   _convert_adc_data
                _eaDogM_WriteCommand
                      _get_vterm_ptr
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      31
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      93
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      31
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1358
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1     124
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1     124
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      31
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   32950
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   16232
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _lp_filter                                           10     4      6    8399
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    7706
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      34
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      31
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     476
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  197067
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   98219
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   31879
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      62
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2     124
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   66374
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   66092
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   32919
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      62
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      62
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   33080
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   31654
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   31525
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   31193
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2780
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     192
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     325
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   17820
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     192
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     489
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     195
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     337
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2976
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    2911
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      65
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    2165
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     266
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8     130
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1652
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     433
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     445
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    3327
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      93
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     433
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     445
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     130
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     603
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      99
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      31
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      31
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      62
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      93
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      62
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      62
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      93
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      31
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      62
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     344
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      62
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      62
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      31
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      31
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      34
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      62
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      62
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              0 BANK0      4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              0 BANK1      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      31
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      31
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      31
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      FF      19       99.6%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      DA      15       85.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      EC      11       92.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A0       9       62.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      C7       7       77.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     682      58        0.0%
DATA                 0      0     682       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Nov 27 17:17:54 2019

                     _SPI1_Exchange8bit 82C6                __end_of_set_display_info 8320  
                                     _C 0300                                       _D 0500  
                                     _P 00BD                                       _R 00C7  
                                     _S 0060                                       _T FE45  
                                     _V 0100        __end_of_TMR5_SetInterruptHandler 808E  
          __end_of_start_switch_handler 82C6                             __CFG_CP$OFF 000000  
               __size_of_ringBufS_flush 0092                  __end_of_FVR_Initialize 8512  
                           __CFG_LVP$ON 000000                                     l171 8436  
                                   l701 7ECA                                     l581 7E9E  
                                   l835 82D4                                     _GIE 01FE97  
                                   _abs 7A24                                     _pad 661A  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize 83E2  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack 8284  
                    _UART1_Transmit_ISR 7E78                           __CFG_BBEN$OFF 000000  
                         _INT1_CallBack 8262                            __CFG_ZCD$OFF 000000  
                                  l1028 7BFC                                    l2012 1D78  
                                  l1330 77EE                                    l1250 3E02  
                                  l1242 3C52                                    l2300 5F3C  
                                  l1252 3E08                                    l1603 831C  
                                  l2307 6010                                    l2334 5EAE  
                                  l1470 7134                                    l1546 7C9A  
                                  l1466 6E1A                                    l1803 6676  
                                  l1563 6838                                    l1555 54B4  
                                  l1651 3788                                    l1485 7CCE  
                                  l1823 386C                                    l1903 0B1A  
                                  l2296 6CB2                                    l2619 32D8  
                                  l2821 64F8                                    l1941 4AF4  
                                  l2726 7A64                                    l2574 2D5E  
                                  l2718 5D3C                    _ADCC_StartConversion 8450  
                                  l2655 25A2                                    l1688 5BA6  
                                  l2586 2BEE                                    l1962 403C  
                                  l1859 123A                                    l2757 51B2  
                                  l2695 581E                                    l1888 066A  
                                  l2882 7354                                    l2867 59E6  
                                  l2895 72D0                                    l9200 6F96  
                                  l8410 7AFC                                    l9210 7022  
                                  l9202 6FB8                                    l9300 28D8  
                                  l8414 7B26                                    l9214 7060  
                                  l9310 294A                                    l9320 2986  
                                  l9240 2688                                    l9402 2C5C  
                                  l9314 296A                                    l9234 2642  
                                  l9316 297C                                    l9324 29B6  
                                  l9252 26F2                                    l9228 2602  
                                  l9500 6B6C                                    l8710 7E9A  
                                  l8630 6198                                    l9430 2D0E  
                                  l9414 2CBA                                    l9342 2A52  
                                  l9270 279A                                    l9262 2748  
                                  l9246 26C0                                    l9238 2658  
                                  l8632 61A6                                    l8624 617C  
                                  l9424 2CE6                                    l9344 2A64  
                                  l9352 2AA0                                    l9264 2778  
                                  l9512 7344                                    l8626 618C  
                                  l9258 2732                                    l8732 7EC6  
                                  l8652 6278                                    l8644 620A  
                                  l8628 6192                                    l8636 61AE  
                                  l9188 640E                                    l9452 666E  
                                  l9436 2D3E                                    l9428 2CFE  
                                  l9364 2B78                                    l9348 2A6E  
                                  l9540 45EE                                    l8638 61DA  
                                  l9462 6706                                    l9454 6680  
                                  l9470 7A54                                    l9702 2F60  
                                  l9382 2C10                                    l9374 2BD2  
                                  l9366 2B9E                                    l9550 46F4  
                                  l9542 463E                                    l9526 44D0  
                                  l9448 6646                                    l9608 4E96  
                                  l9384 2C22                                    l9458 66BC  
                                  l9802 32AC                                    l9546 4686  
                                  l9644 534E                                    l9636 52A2  
                                  l9628 521A                                    l9804 32BC  
                                  l9716 2FB4                                    l9708 2F9A  
                                  l9820 1DD8                                    l9388 2C2E  
                                  l9484 5CDA                                    l8758 7BE4  
                                  l9590 4D7E                                    l9750 3112  
                                  l9742 30E0                                    l9734 307A  
                                  l9726 3044                                    l9670 2DFE  
                                  l9830 1E4E                                    l9398 2C56  
                                  l9494 5D34                                    l9584 4D2A  
                                  l9760 3154                                    l9736 308C  
                                  l9744 30E4                                    l9664 2DBE  
                                  l9488 5CDE                                    l9568 72C0  
                                  l9770 319E                                    l9690 2EDC  
                                  l9674 2E14                                    l9914 23B2  
                                  l9826 1E18                                    l9596 4DC4  
                                  l9756 312E                                    l9684 2E9C  
                                  l9676 2E44                                    l9932 2428  
                                  l9908 2396                                    l9844 1EE6  
                                  l9828 1E1E                                    l9790 3254  
                                  l9774 31A4                                    l9694 2EF2  
                                  l9942 249C                                    l9918 23D8  
                                  l9846 1EEC                                    l9838 1EA6  
                                  STR_1 FF81                                    l9784 3218  
                                  l9696 2F22                                    l9960 2550  
                                  l9952 250C                                    l9928 2422  
                                  l9856 1F3E                                    l9848 1F1C  
                                  STR_2 FFB2                                    STR_3 FFE0  
                                  l9962 256A                                    l9946 24E2  
                                  STR_4 FF70                                    STR_5 FF92  
                                  l9796 3284                                    STR_6 FFB2  
                                  STR_7 FFE0                                    l9982 603E  
                                  STR_8 FF5F                                    STR_9 FF39  
                                  l9994 6074                                    l9988 6054  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    _T6PR 003F93  
                                  _PMD0 0039C0                                    _PMD1 0039C1  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  _PMD6 0039C6                                    _PMD7 0039C7  
                                  u9120 2C34                                    u9040 2A96  
                                  u9210 2CCA                                    u9140 2C4E  
                                  u9045 2A86                                    u9310 7A38  
                                  u9080 2BC0                                    u9320 5C5E  
                                  u9410 7302                                    u9250 7DAE  
                                  u9180 2CAA                                    u9420 7304  
                                  u9260 7DB0                                    u9325 5C54  
                                  u9510 466C                                    u9600 7E10  
                                  u9440 4468                                    u9185 2C9A  
                                  u9370 5D2C                                    u9450 44B4  
                                  u8810 7DDE                                    u9515 4662  
                                  u9620 4D24                                    u9380 5D2E  
                                  u8820 7DE0                                    u9540 7B74  
                                  u9365 5D0E                                    u9445 445E  
                                  u8750 6402                                    u9710 4F20  
                                  u9390 6BE6                                    u9550 7B76  
                                  u9640 4D7A                                    u9800 5386  
                                  u8920 28FE                                    u9560 727E  
                                  u8770 647E                                    u8930 291E  
                                  u9490 4594                                    u9570 7280  
                                  _PLLR 01CEE0                                    u9651 4D84  
                                  u8931 2918                                    u9475 44EE  
                                  u8780 6FE6                                    u9660 4DBE  
                                  u9820 53D8                                    u9740 5214  
                                  u9476 44F4                                    u9477 4502  
                                  u9397 6BD8                                    u9590 7E0E  
                                  u9670 4DF0                                    u9495 458A  
                                  u9760 526A                                    u9690 4ECE  
                                  u9770 529C                                    u8970 29AE  
                                  u8787 6FD8                                    u9780 52CE  
                                  u8980 29CE                                    u8948 2920  
                                  u8975 299E                                    u9960 310C  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR 7F26                           __CFG_FCMEN$ON 000000  
                                  _dbuf 0240                                    _atoi 4F48  
                                  _ctoa 71CE                                    _main 3C0E  
                                  _dtoa 378E                                    _nanf 76C2  
                                  _seed 01BB                                    _prec 001D  
                                  _nout 0019                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 4A0A                                    btemp 0032  
                                  _xtoa 3FF8                  __end_of_check_adc_scan 850A  
                         ___fpclassifyf 5BB0                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 0023               __end_of_SPI1_Exchange8bit 82E4  
                         __CFG_CSWEN$ON 000000                       _UART1_rx_vect_isr 8180  
                          ___param_bank 000000                      ?_UART1_rx_vect_isr 0052  
                      __end_of_INT0_ISR 84AE                        __end_of_INT1_ISR 7C42  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma 6E22  
         __end_of_OSCILLATOR_Initialize 843C                                   l10200 38A6  
                                 l10016 614E                                   l10008 611A  
                                 l10032 6534                                   l10104 79B4  
                                 l10130 5E1A                                   l10114 5D98  
                                 l10204 38C4                                   l10036 654C  
                                 l10028 6522                                   l10140 5E5C  
                                 l10132 5E36                                   l10300 02FC  
                                 l10214 3AD6                                   l10054 6600  
                                 l10046 65CC                                   l10070 6CB0  
                                 l10062 6C3A                                   l11030 6F22  
                                 l10320 0406                                   l11120 56DA  
                                 l11112 566E                                   l10234 3B88  
                                 l10066 6C7C                                   l10138 5E46  
                                 l10410 0A48                                   l10322 0470  
                                 l11122 56E8                                   l10084 5F8A  
                                 l10420 0B34                                   l10316 0396  
                                 l10308 032A                                   l10252 00AC  
                                 l11132 574A                                   l11124 56FE  
                                 l10158 7986                                   l10166 71EC  
                                 l10238 3BC4                                   l10078 5EFA  
                                 l10350 0594                                   l10342 057C  
                                 l10326 04D2                                   l11134 5768  
                                 l11126 571C                                   l12014 3E92  
                                 l12006 3E6E                                   l10168 7218  
                                 l10192 385C                                   l10096 600E  
                                 l10088 5FD8                                   l10360 0602  
                                 l10344 058E                                   l10264 00F0  
                                 l10272 0146                                   l11144 579C  
                                 l11136 577E                                   l12024 3FB2  
                                 l10434 0C32                                   l10418 0B12  
                                 l10338 0554                                   l10282 01EA  
                                 l10290 0258                                   l11074 7CD8  
                                 l11154 57FE                                   l12034 3FE6  
                                 l10508 1092                                   l10380 06F0  
                                 l10284 0216                                   l10612 4066  
                                 l10534 119A                                   l10518 10E2  
                                 l10446 0CBA                                   l10454 0D24  
                                 l10462 0D90                                   l10470 0EA2  
                                 l10358 05F6                                   l10286 022C  
                                 l10606 402C                                   l10376 06B8  
                                 l10482 0F3A                                   l10386 077A  
                                 l10570 4B2A                                   l10554 4A76  
                                 l10642 41F8                                   l10626 4102  
                                 l10618 40A2                                   l10650 427E  
                                 l10708 51A2                                   l10396 0926  
                                 l10724 58B0                                   l10820 1830  
                                 l10574 4B66                                   l10726 591C  
                                 l11622 3314                                   l10672 4F62  
                                 l10496 0FD6                                   l10592 4C88  
                                 l10584 4C20                                   l10832 191C  
                                 l10808 16F2                                   l10760 1376  
                                 l11528 6750                                   l11632 3432  
                                 l11616 32E4                                   l10690 503C  
                                 l10682 4FF8                                   l10674 4F84  
                                 l10498 0FF0                                   l10578 4B96  
                                 l10666 4368                                   l10930 4874  
                                 l11580 7CB0                                   l10692 5060  
                                 l10588 4C4C                                   l10852 1A7C  
                                 l10828 18E8                                   l10780 14E2  
                                 l10756 1326                                   l10924 47B6  
                                 l11644 353E                                   l11636 350C  
                                 PRLOCK 0039EF                                   l11902 73A2  
                                 l10694 509E                                   l10862 1B2A  
                                 l10782 14F8                                   l10758 1360  
                                 l11662 3756                                   l11670 3768  
                                 l10688 5024                                   l10944 498C  
                                 l10936 48DE                                   l11656 36BA  
                                 l11648 35DA                                   l11832 73E2  
                                 l10698 5106                                   l10882 1D00  
                                 l10778 14A8                                   l10876 1CA6  
                                 l10892 1D24                                   l10956 6E4C  
                                 l11860 5484                                   l10886 1D04  
                                 l10798 165C                                   l10958 6E8C  
                                 l11694 5A54                                   l11686 5A28  
                                 l11950 3C6C                                   l11942 3C34  
                                 l11944 3C3C                                   l10994 8212  
                                 l11890 5616                                   l11874 55B2  
                                 l11698 5A6C                                   l11948 3C5A  
                                 l11896 7392                                   l11992 3E0C  
                                 l11994 3E3A                         __end_of___aodiv 4F48  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 2D68                                   _ADCLK 003EFF  
                       __end_of___aomod 53FC                                   _ADPCH 003EF1  
                       __end_of___fldiv 32E2                                   _ADREF 003EFD  
                       __end_of___awdiv 6168                         __end_of___flneg 79DE  
                                 STR_10 FF26                                   STR_11 FF4C  
                                 STR_20 FFCD                                   STR_12 FFFB  
                                 STR_13 FFF8                                   STR_21 FFA3  
                                 STR_22 FFA3                                   STR_23 FFA3  
                                 STR_15 FFC1                                   STR_16 FFD7  
                                 STR_24 FED5                                   STR_33 FEFF  
                                 STR_17 FF00                           __CFG_WDTE$OFF 000000  
                                 STR_18 FF00                                   STR_42 FFF5  
                                 STR_34 FFE5                                   STR_26 FF13  
                                 STR_35 FFED                                   STR_19 FFCD  
                                 STR_27 FEED                                   STR_44 FFF5  
                       __end_of___awmod 661A                                   STR_38 FFE9  
                                 STR_39 FFF1                                   _ADRPT 003EEC  
                       __end_of___flmul 25AC                         __end_of___flsub 7A24  
                       __end_of___fltol 5EB8                                   u10000 3196  
                                 u10040 31F2                                   u11000 0562  
                                 u10050 322C                                   u10060 3268  
                                 u10220 241A                                   u10045 31E2  
                                 u10150 1F2C                                   u11030 05C6  
                                 u10400 6578                                   u10330 60A0  
                                 u10420 65EC                                   u10260 2476  
                                 u11300 10B8                                   u11140 0A18  
                                 u12100 6F02                                   u10165 20C0  
                                 u10350 613A                                   u10270 24B0  
                                 u11070 0648                                   u10175 2188  
                                 u10280 24F6                                   u10520 79B0  
                                 u10600 5E64                                   u11320 116E  
                                 u11240 0EE4                                   u11400 4B8C  
                                 u12200 5792                                   u10265 2466  
                                 u10185 2350                                   u10530 5D78  
                                 u11330 1170                                   u11410 4BD2  
                                 u12050 4A00                                   u10700 3830  
                                 u10460 6CAC                                   u10620 5E8E  
                                 u10540 5D8C                                   u11500 414E  
                                 u12125 7BB0                                   u10630 7962  
                                 u10550 5DC6                                   u11510 4150  
                                 u10535 5D6E                                   u12240 75A2  
                                 u10640 7982                                   u10720 3842  
                                 u11440 4CAE                                   u11600 42F4  
                                 u11417 4BC4                                   u10810 3B5E  
                                 u11610 42F8                                   u11530 41AE  
                                 _U1P1H 003DED                                   u10555 5DBC  
                                 u10740 3892                                   u11540 41B0  
                                 u11460 4012                                   u12404 3526  
                                 _U1P2H 003DEF                                   u12405 3520  
                                 u10750 3AEA                                   u10670 37BE  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 u11640 4FF4                                   u10680 37C0  
                                 u10920 02A6                                   u11560 427A  
                                 u11800 13E6                                   u12424 35F4  
                                 u12344 32FE                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u12265 75D6  
                                 u10761 3B1A                                   u12425 35EE  
                                 u12345 32F8                                   u12266 75D8  
                                 u12258 75A4                                   u10770 3B30  
                                 u10930 02A8                                   u10850 00DA  
                                 u11570 429A                                   u11490 40FA  
                                 u12450 361E                                   _U1P3L 003DF0  
                                 u10771 3B2E                                   u11660 514C  
                                 u10780 3B44                                   u11740 59A8  
                                 u11900 1746                                   u12444 3616  
                                 u12364 332E                                   u12460 5A06  
                                 u11581 42CA                                   u11565 425C  
                                 u12445 3610                                   u12365 3328  
                                 u11670 514E                                   u10790 3B48  
                                 u11590 42E0                                   u11830 1540  
                                 _U2P1L 003DD4                                   u11591 42DE  
                                 u10880 0194                                   u11840 1542  
                                 u12384 3350                                   _U2P2L 003DD6  
                                 u12385 334A                                   u10970 050E  
                                 u10890 0196                                   u11930 19D6  
                                 u11850 1568                                   u12570 5602  
                                 _U2P3L 003DD8                                   u11940 19D8  
                                 u11780 13BE                                   u12580 5604  
                                 u11790 13C0                                   _T5CLK 003F9D  
                                 u11980 1B7E                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 0001                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U1TXB 003DEA                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0057  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR5H 003F99                                   _TMR5L 003F98  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR 8524                 __size_of_clear_adc_scan 0006  
     __size_of_TMR6_SetInterruptHandler 0028                       _UART1_tx_vect_isr 8158  
                         __CFG_WRTB$OFF 000000                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 78F2  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR 83CA  
                          _DMA1CON1bits 003BFD                                   _flags 001F  
                                 _fputc 63DE              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha 7B80                                   _fputs 7012  
                       __end_of_isdigit 7E1A                      __CFG_MCLRE$EXTMCLR 000000  
                    ?_UART1_tx_vect_isr 0052                                   _srand 7D22  
                                 _width 001B                                   _putch 8394  
                       __end_of_islower 7DBA                         __end_of_isspace 7996  
              _INT1_SetInterruptHandler 808E                         __end_of_isupper 7DEA  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0032                                   ltemp1 0036  
                                 ltemp2 003A                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0032                                   ttemp1 0035  
                                 ttemp2 0038                                   ttemp3 003B  
                                 ttemp5 0033                                   ttemp6 0036  
                                 ttemp7 003A                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler 803E             _UART1_SetRxInterruptHandler 8016  
                                 wtemp0 0032                                   wtemp1 0034  
                                 wtemp2 0036                                   wtemp3 0038  
                                 wtemp4 003A                                   wtemp5 003C  
                                 wtemp8 0033                         __end_of_sprintf 6946  
                       __end_of_tolower 735E                         __end_of_strncmp 59F0  
                       __end_of_toupper 72DA                     ??_UART1_tx_vect_isr 0057  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr 81A6  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize 7AB0  
                 __end_of_ringBufS_init 7F9E                         __initialization 6946  
                     _UART2_rx_vect_isr 81D0                            __end_of_atoi 51BC  
                          __end_of_ctoa 7256                            __end_of_main 3FF8  
                          __end_of_dtoa 3C0E                            __end_of_nanf 7724  
                          __end_of_stoa 4CC8                            __end_of_xtoa 43B2  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0052  
               __end_of_TMR2_Initialize 83FA                __size_of_DMA2_Initialize 005A  
              _TMR5_SetInterruptHandler 8066                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E    __size_of_UART1_SetTxInterruptHandler 0028  
                   ??_UART2_rx_vect_isr 0057               __end_of_UART1_tx_vect_isr 817E  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize 7ED0  
                       _PWM8_Initialize 8410                        _UART1_Initialize 765E  
                     _UART2_tx_vect_isr 81A8                      _UART2_Transmit_ISR 7EA4  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 75FA  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue 7B80  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0052                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                _RB6PPS 003A0E                                  i1l1045 78E4  
                  _start_switch_handler 82A6                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright 8490  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
                                u391_48 8292            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u821_20 61A2  
                                u821_21 619C                                  u840_28 822A  
                                u825_24 626E                                  u825_25 626A  
                                u827_20 6294                                  u818_28 6182  
                                u827_26 6296                                  u829_28 8270  
                                u837_48 824E                                  u796_20 8136  
                                u796_26 8138                        __end_of___xxtofl 5828  
 __end_of_ADCC_DischargeSampleCapacitor 84F2  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor 84EA                __end_of_send_lcd_cmd_dma 7944  
                   ??_UART2_tx_vect_isr 0057               __end_of_UART2_rx_vect_isr 81F6  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize 84BE  
                      _UART2_Initialize 7786                                  _WaitMs 7CB6  
                       _conv_raw_result 32E2                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 5EB8  
                                ___fleq 6BF8                       _ADCC_ThresholdISR 752C  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 70AA  
                                _efgtoa 0000                                  _floorf 43B2  
                    ?_ADCC_ThresholdISR 0052                                  _memset 471E  
                  __size_of_help_button 0038                                  clear_0 69B4  
                                clear_1 69C8                                  clear_2 69DA  
                                clear_3 69E6                                  clear_4 69F2  
                                clear_5 69FE                                  clear_6 6A0A  
                                clear_7 6A16                                  clear_8 6A22  
                                _printf 7724                      _eaDogM_WriteString 6ECA  
                                _strcpy 6B24                               ?_ADCC_ISR 0052  
                                _strlen 6F70                      __size_of_TimerDone 0024  
                       _ADCC_Initialize 74C0                          _PMD_Initialize 843C  
             __end_of_UART2_tx_vect_isr 81CE                                  lltemp0 0032  
                                lltemp1 003A                                  lltemp2 0042  
                                lltemp3 004A                     ??_ADCC_ThresholdISR 0052  
                __end_of_start_adc_scan 765E                            __mediumconst FE44  
                                preinc2 003FDC                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay 783E                        __end_of_vfprintf 6ECA  
                            _StartTimer 7C42           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize 7AF6                       _SYSTEM_Initialize 7A6A  
                            __accesstop 0060                 __end_of__initialization 6A34  
                             ?_INT0_ISR 0052                               ?_INT1_ISR 0052  
                  __end_of_display_help 8502                    __end_of_display_info 84FA  
             __end_of_CLKREF_Initialize 84C8                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0026                         _TMR5_WriteTimer 7BC2  
                 _set_temp_display_help 8472               __end_of_ADCC_ThresholdISR 7594  
                __end_of_ringBufS_flush 713C                          __pcstackCOMRAM 0052  
                            ___inthi_sp 1000                              ___intlo_sp 1800  
                          __pidataBANK0 7E1A                            __pidataBANK1 6CBC  
                          __pidataBANK2 8462                               ?_TMR5_ISR 0052  
                             ?_TMR6_ISR 0052                          ivt0x8_undefint 00AC  
                         __end_of_fputc 6502                           __end_of_fputs 70AA  
                         __end_of_srand 7D56                   __end_of_TMR5_CallBack 823E  
                         __end_of_putch 83AE                 __end_of_PWM8_Initialize 8426  
               __end_of_TMR6_Initialize 7EFA                       _adc_int_t_handler 735E  
                __end_of_PMD_Initialize 8450                              ??_ADCC_ISR 0052  
                 __end_of_TMR6_CallBack 8262             __size_of_EXT_INT_Initialize 0034  
            __size_of_UART1_tx_vect_isr 0026                           _DMA1_DMAA_ISR 84D4  
                        _clear_adc_scan 8512                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0010               __end_of_SYSTEM_Initialize 7AB0  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
                            __pbssBANK0 0060                              __pbssBANK1 01BB  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            __pbssBANK6 0600                              __pbssBANK7 0700  
                            _check_help 53FC                 __end_of_conv_raw_result 378E  
                 _INT0_InterruptHandler 0016                              ??_INT0_ISR 0052  
                            ??_INT1_ISR 00F6                       __end_of_TimerDone 821A  
                      _DMA1_DMADCNT_ISR 84C8              __size_of_UART2_rx_vect_isr 0026  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01C0  
                 __end_of_wait_lcd_done 8378                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler 8066                 __end_of_ADCC_Initialize 752A  
                            ??_TMR5_ISR 01C3               __end_of_adc_int_t_handler 73DC  
                            ??_TMR6_ISR 0057                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler 8106  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler 80DE  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR 8320                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan 8518  
                        ?_DMA1_DMAA_ISR 0052                        _DMA1_DMASCNT_ISR 84B0  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001C  
                               _U1ERRIR 003DF9                                 u1260_44 73C2  
                               u1260_45 73BC                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0052              __size_of_UART2_tx_vect_isr 0026  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0B3E  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer 7C02                 __size_of_switch_handler 0148  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 0068                           _mode_lamp_dim 83CA  
                               __Lparam 0000                __end_of_UART1_Initialize 76C2  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 4CC8  
                               ___fladd 25AC                                 ___aomod 51BC  
                               ___fldiv 2D68                                 ___awdiv 601A  
                               ___flneg 7996                                 ___awmod 6502  
                               ___flmul 1D82                                 ___flsub 79DE  
                               ___fltol 5D46               __end_of_UART1_Receive_ISR 833E  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 6B24                                 __pcinit 6946  
              __end_of_mode_lamp_bright 849E                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand 8482  
                               __ramtop 2000             __size_of_UART1_Transmit_ISR 002C  
                               __ptext0 3C0E                                 __ptext1 82A6  
                               __ptext2 75FA                                 __ptext3 8450  
                               __ptext4 84EA                                 __ptext5 7D22  
                               __ptext6 6A3A                                 __ptext7 7F26  
                               __ptext8 7F4E                                 __ptext9 82C6  
                     _UART2_Receive_ISR 833E                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize 8426  
                          __size_of_abs 0046                            __size_of_pad 0114  
                               _isalpha 7B3C                                 _isdigit 7DEA  
                               _mode_sw 0025                                 us972999 4F32  
                               us983999 53EA                       __end_of_lp_filter 5BB0  
                               _islower 7D8A                                 _isspace 7944  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize 77E4                                 _isupper 7DBA  
            __size_of_SYSTEM_Initialize 0046                                 _sprintf 683C  
                               _tolower 72DA                   __size_of_display_help 0008  
                               _utctime 00B5                   __size_of_display_info 0008  
                               _strncmp 5828                                 _toupper 7256  
                  end_of_initialization 6A34               __size_of_convert_adc_data 007A  
   __end_of_UART1_SetTxInterruptHandler 8016             _UART1_SetTxInterruptHandler 7FEE  
   __end_of_UART2_SetRxInterruptHandler 7FEE             _UART2_SetRxInterruptHandler 7FC6  
                             i2u1263_48 7560                               i2u1263_49 7574  
                     __end_of_set_vterm 8394                       __end_of_vfpfcnvrt 1D82  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 003C                       __end_of_start_lcd 8524  
             __end_of_UART2_Receive_ISR 835C                          wdtdelay@dcount 00B9  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0058  
                 _INT1_InterruptHandler 0013                               _PORTBbits 003FCB  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler 803E  
                          _display_help 84FA                   _TMR5_InterruptHandler 00C1  
                          _display_info 84F2    __size_of_UART2_SetTxInterruptHandler 0028  
                     __size_of_ADCC_ISR 002A     __end_of_ADCC_SetADIInterruptHandler 812E  
           _ADCC_SetADIInterruptHandler 8106                              _update_lcd 672E  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                       _DMA1_Initialize 7456                         _SPI1_Initialize 83FA  
                 __end_of_get_vterm_ptr 7E78                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs 7CEC  
          __end_of_INTERRUPT_Initialize 75FA                              _vterm_dump 62B0  
                        __end_of___flge 601A                          __end_of___fleq 6CBC  
  __end_of_INT0_DefaultInterruptHandler 852E   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler 852C              __size_of_UART1_Receive_ISR 001E  
                       _DMA2_Initialize 783E                          __end_of_efgtoa 1244  
                     __size_of_TMR5_ISR 005A                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0228                          __end_of_floorf 471E  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 00AD  
                        __end_of_memset 4A0A                          __end_of_printf 7786  
              __end_of_DMA1_DMADCNT_ISR 84D2             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack 82A6                          __end_of_strcpy 6BF8  
                        __end_of_strlen 7012                     start_initialization 6946  
  __end_of_TMR5_DefaultInterruptHandler 8156   __size_of_TMR5_DefaultInterruptHandler 0028  
          _TMR5_DefaultInterruptHandler 812E         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs 7A6A                   __end_of_INT1_CallBack 8284  
             __size_of_set_display_info 001E                             __end_of_pad 672E  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd 7F76  
                        _switch_handler 6168           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 0600  
                 __end_of___fpclassifyf 5D46                           _uart2RxBuffer 0700  
                         _uart1TxBuffer 03AC                __end_of_DMA1_DMASCNT_ISR 84BE  
                         _uart2TxBuffer 036C                          _DMA1_DMAOR_ISR 84E0  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone 81F6  
                         _ringBufS_init 7F76                             __pdataBANK0 00C7  
                           __pdataBANK1 0100                             __pdataBANK2 0290  
            __size_of_UART2_Receive_ISR 001E              __end_of_EXT_INT_Initialize 7D8A  
                   __end_of_help_button 7CB6         __end_of_eaDogM_WriteStringAtPos 7D22  
               __end_of_DMA1_Initialize 74C0                             __pbssCOMRAM 0001  
      __end_of_INT0_SetInterruptHandler 80DE                           __pcstackBANK0 00F6  
                         __pcstackBANK1 01C3                __size_of_TMR2_Initialize 0018  
                __end_of_switch_handler 62B0                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 8410                _UART1_RxInterruptHandler 000A  
              _UART2_TxInterruptHandler 000D                               __end_of_T FED5  
                      _convert_adc_data 73DC               __size_of_ringBufS_put_dma 00AA  
                          _init_display 6A3A                  __end_of_DMA1_DMAOR_ISR 84EA  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00C4  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize 7898  
                _PIN_MANAGER_Initialize 713C                    __end_of_wait_lcd_set 851E  
                         __pmediumconst FE44                               __ptext100 713C  
                             __ptext101 8426                               __ptext110 74C0  
                             __ptext102 7594                               __ptext111 80DE  
                             __ptext103 850A                               __ptext120 812E  
                             __ptext112 8106                               __ptext104 7D56  
                             __ptext121 84A0                               __ptext113 7C04  
                             __ptext105 808E                               __ptext130 8158  
                             __ptext122 8284                               __ptext114 8262  
                             __ptext106 80B6                               __ptext131 7E78  
                             __ptext123 852C                               __ptext115 852A  
                             __ptext107 783E                               __ptext140 7AF6  
                             __ptext132 8180                               __ptext124 8524  
                             __ptext116 6168                               __ptext108 7456  
                             __ptext141 84B0                               __ptext133 8320  
                             __ptext125 7EFC                               __ptext117 7898  
                             __ptext109 84BE                               __ptext142 84C8  
                             __ptext134 81A8                               __ptext126 735E  
                             __ptext118 7BC2                               __ptext143 84D4  
                             __ptext135 7EA4                               __ptext127 852E  
                             __ptext119 821A                               __ptext144 84E0  
                             __ptext136 81D0                               __ptext128 8530  
                             __ptext145 0000                               __ptext137 833E  
                             __ptext129 752C                               __ptext138 83B0  
                             __ptext139 823E                      __end_of_StartTimer 7C7E  
                     __size_of_wdtdelay 005A                       __size_of_vfprintf 00A8  
                              _ADCC_ISR 7EFC                  __CFG_BBSIZE$BBSIZE_512 000000  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
               __size_of_get_raw_result 001E                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 59F0  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize 7594                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0052  
                              _INT0_ISR 84A0                                _INT1_ISR 7C04  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 0089  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0443                               _ring_buf2 0400  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                i2u419_48 7F12  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                              _PIR5bits 0039A5                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                                i2u861_48 81BA  
                              i2u863_48 81E2                                i2u857_48 816A  
                              i2u859_48 8192                __size_of_TMR5_Initialize 0046  
                             _set_vterm 8378                     __size_of_update_lcd 010E  
                           _help_button 7C7E              __end_of_UART1_Transmit_ISR 7EA4  
                              _TMR5_ISR 7898                                _TMR6_ISR 83B0  
                             _port_data 0290                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                           _TMR5_CallBack 821A  
                            _ADCON0bits 003EF8                      __end_of_check_help 5624  
                             _start_lcd 851E                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack 823E  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                      _set_display_info 8302                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 695A                               copy_data1 697C  
                             copy_data2 699E                _INT0_SetInterruptHandler 80B6  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 002F  
   __end_of_UART2_SetTxInterruptHandler 7FC6             _UART2_SetTxInterruptHandler 7F9E  
                          _uart1RxCount 002C                            _uart2RxCount 0026  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done 835C  
                          _send_lcd_cmd 7F4E                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler 8530                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                 __end_of_DMA1_DMAA_ISR 84DE                      ___fpclassifyf@F463 00B1  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0200  
                              ___xxtofl 5624                       ?_DMA1_DMADCNT_ISR 0052  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand 8490  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0058  
                              __ptext10 7F76                                __ptext11 8482  
                              __ptext20 62B0                                __ptext12 73DC  
                              __ptext21 683C                                __ptext13 59F0  
                              __ptext30 8518                                __ptext22 7E4A  
                              __ptext14 32E2                                __ptext31 851E  
                              __ptext23 7CB6                                __ptext15 76C2  
                              __ptext40 7B3C                                __ptext32 70AA  
                              __ptext24 672E                                __ptext16 82E4  
                              __ptext41 5828                                __ptext33 471E  
                              __ptext25 7CEC                                __ptext17 5624  
                              __ptext50 79DE                                __ptext42 4A0A  
                              __ptext34 7724                                __ptext26 78F2  
                              __ptext18 8512                                __ptext51 25AC  
                              __ptext43 0000                                __ptext35 6E22  
                              __ptext27 835C                                __ptext19 53FC  
                              __ptext60 7A24                                __ptext52 7996  
                              __ptext44 72DA                                __ptext36 1244  
                              __ptext28 77E4                                __ptext61 51BC  
                              __ptext53 1D82                                __ptext45 7DBA  
                              __ptext37 3FF8                                __ptext29 6ECA  
                              __ptext70 4F48                                __ptext62 4CC8  
                              __ptext54 5EB8                                __ptext46 6B24  
                              __ptext38 7256                                __ptext71 7944  
                              __ptext63 71CE                                __ptext55 6BF8  
                              __ptext47 43B2                                __ptext39 7D8A  
                              __ptext80 81F6                                __ptext72 7DEA  
                              __ptext64 661A                                __ptext56 2D68  
                              __ptext48 5BB0                                __ptext81 7C42  
                              __ptext73 8378                                __ptext65 6F70  
                              __ptext57 6502                                __ptext49 5D46  
                              __ptext90 7FEE                                __ptext82 84F2  
                              __ptext74 8472                                __ptext66 7012  
                              __ptext58 601A                                __ptext91 8016  
                              __ptext83 84FA                                __ptext75 8302  
                              __ptext67 63DE                                __ptext59 378E  
                              __ptext92 7ED0                                __ptext84 8502  
                              __ptext76 83CA                                __ptext68 8394  
                              __ptext93 803E                                __ptext85 7A6A  
                              __ptext77 8490                                __ptext69 6D78  
                              __ptext94 7AB0                                __ptext86 7786  
                              __ptext78 7B80                                __ptext95 8066  
                              __ptext87 7F9E                                __ptext79 7C7E  
                              __ptext96 83E2                                __ptext88 7FC6  
                              __ptext97 83FA                                __ptext89 765E  
                              __ptext98 8410                                __ptext99 843C  
                      __size_of_isupper 0030                                us1135999 4A1C  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1066999 37A8                                us1148999 4078  
                      __size_of_strncmp 01C8                        __size_of_toupper 0084  
                      _ringBufS_put_dma 6D78                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 03EA  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0052                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 0004  
                             stoa@F1166 00EF                      ??_DMA1_DMASCNT_ISR 0058  
          __end_of_ADCC_StartConversion 8462                                _spi_link 00A1  
                              _wdtdelay 77E4              __end_of_UART2_Transmit_ISR 7ED0  
                              _vfprintf 6E22                __end_of_convert_adc_data 7456  
            __end_of_PWM8_LoadDutyValue 7BC2    __end_of_INT1_DefaultInterruptHandler 852C  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler 852A  
                         ??_Default_ISR 0052                             _uart1RxHead 002E  
                __size_of_get_vterm_ptr 002E                             _uart1TxHead 0031  
                           _uart2RxHead 0028                             _uart1RxTail 002D  
                        _get_raw_result 82E4                             _uart2TxHead 002B  
                           _uart1TxTail 0030                             _uart2RxTail 0027  
                           _uart2TxTail 002A                            _wait_lcd_set 8518  
                    _EXT_INT_Initialize 7D56    __end_of_TMR6_DefaultInterruptHandler 7B3C  
 __size_of_TMR6_DefaultInterruptHandler 0046            _TMR6_DefaultInterruptHandler 7AF6  
  __end_of_ADCC_DefaultInterruptHandler 8530   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler 852E                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long 7F26  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help 8482  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 6F70  
                 __end_of_mode_lamp_dim 83E2                 __end_of_adc_int_handler 8532  
                __size_of_INT0_CallBack 0022                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0022  
                    __end_of_update_lcd 683C                  _uart2TxBufferRemaining 0029  
                        _FVR_Initialize 850A                  __end_of_get_raw_result 8302  
                      _send_lcd_cmd_dma 78F2                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0021        __end_of_INT1_SetInterruptHandler 80B6  
             __size_of_UART1_Initialize 0064                        ??_DMA1_DMAOR_ISR 0058  
              _UART1_TxInterruptHandler 0007               __end_of_send_lcd_cmd_long 7F4E  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR 852A  
        __end_of_PIN_MANAGER_Initialize 71CE               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 63DE                 _eaDogM_WriteStringAtPos 7CEC  
                         _get_vterm_ptr 7E4A                          _check_adc_scan 8502  
             __size_of_UART2_Initialize 005E  
