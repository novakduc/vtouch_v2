

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Feb 15 00:47:41 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1
    56                           	psect	text30,global,reloc=2,class=CODE,delta=1
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1
    86                           	psect	text60,global,reloc=2,class=CODE,delta=1
    87                           	psect	text61,global,reloc=2,class=CODE,delta=1
    88                           	psect	text62,global,reloc=2,class=CODE,delta=1
    89                           	psect	text63,global,reloc=2,class=CODE,delta=1
    90                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text66,global,reloc=2,class=CODE,delta=1
    93                           	psect	text67,global,reloc=2,class=CODE,delta=1
    94                           	psect	text68,global,reloc=2,class=CODE,delta=1
    95                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text72,global,reloc=2,class=CODE,delta=1
    99                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text76,global,reloc=2,class=CODE,delta=1
   103                           	psect	text77,global,reloc=2,class=CODE,delta=1
   104                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   108                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=2
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   122                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=2
   123                           	psect	text97,global,reloc=2,class=CODE,delta=1
   124                           	psect	text98,global,reloc=2,class=CODE,delta=1
   125                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=2
   126                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=2
   127                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=2
   128                           	psect	text102,global,reloc=2,class=CODE,delta=1
   129                           	psect	text103,global,reloc=2,class=CODE,delta=1
   130                           	psect	text104,global,reloc=2,class=CODE,delta=1
   131                           	psect	text105,global,reloc=2,class=CODE,delta=1
   132                           	psect	text106,global,reloc=2,class=CODE,delta=1
   133                           	psect	text107,global,reloc=2,class=CODE,delta=1
   134                           	psect	text108,global,reloc=2,class=CODE,delta=1
   135                           	psect	text109,global,reloc=2,class=CODE,delta=1
   136                           	psect	text110,global,reloc=2,class=CODE,delta=1
   137                           	psect	text111,global,reloc=2,class=CODE,delta=1,inline
   138                           	psect	text112,global,reloc=2,class=CODE,delta=1,inline
   139                           	psect	text113,global,reloc=2,class=CODE,delta=1
   140                           	psect	text114,global,reloc=2,class=CODE,delta=1
   141                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   142                           	psect	text116,global,reloc=2,class=CODE,delta=1
   143                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=2
   144                           	psect	text118,global,reloc=2,class=CODE,delta=1
   145                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   146                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=1
   148                           	psect	text122,global,reloc=2,class=CODE,delta=1
   149                           	psect	text123,global,reloc=2,class=CODE,delta=1
   150                           	psect	text124,global,reloc=2,class=CODE,delta=1
   151                           	psect	text125,global,reloc=2,class=CODE,delta=1
   152                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   153                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=1
   154                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=1
   155                           	psect	text129,global,reloc=2,class=CODE,delta=1
   156                           	psect	text130,global,reloc=2,class=CODE,delta=1
   157                           	psect	text131,global,reloc=2,class=CODE,delta=1
   158                           	psect	text132,global,reloc=2,class=CODE,delta=1
   159                           	psect	text133,global,reloc=2,class=CODE,delta=1
   160                           	psect	text134,global,reloc=2,class=CODE,delta=1
   161                           	psect	text135,global,reloc=2,class=CODE,delta=1
   162                           	psect	text136,global,reloc=2,class=CODE,delta=1
   163                           	psect	text137,global,reloc=2,class=CODE,delta=1
   164                           	psect	text138,global,reloc=2,class=CODE,delta=1
   165                           	psect	text139,global,reloc=2,class=CODE,delta=1
   166                           	psect	text140,global,reloc=2,class=CODE,delta=1
   167                           	psect	text141,global,reloc=2,class=CODE,delta=1
   168                           	psect	text142,global,reloc=2,class=CODE,delta=1
   169                           	psect	text143,global,reloc=2,class=CODE,delta=1
   170                           	psect	text144,global,reloc=2,class=CODE,delta=1
   171                           	psect	text145,global,reloc=2,class=CODE,delta=1
   172                           	psect	text146,global,reloc=2,class=CODE,delta=1
   173                           	psect	text147,global,reloc=2,class=CODE,delta=1
   174                           	psect	text148,global,reloc=2,class=CODE,delta=1
   175                           	psect	text149,global,reloc=2,class=CODE,delta=1
   176                           	psect	text150,global,reloc=2,class=CODE,delta=1
   177                           	psect	text151,global,reloc=2,class=CODE,delta=1
   178                           	psect	text152,global,reloc=2,class=CODE,delta=1
   179                           	psect	text153,global,reloc=2,class=CODE,delta=1
   180                           	psect	text154,global,reloc=2,class=CODE,delta=1
   181                           	psect	text155,global,reloc=2,class=CODE,delta=1
   182                           	psect	text156,global,reloc=2,class=CODE,delta=1
   183                           	psect	text157,global,reloc=2,class=CODE,delta=1
   184                           	psect	text158,global,reloc=2,class=CODE,delta=1
   185                           	psect	text159,global,reloc=4,class=CODE,delta=1
   186                           	psect	text160,global,reloc=2,class=CODE,delta=1
   187                           	psect	text161,global,reloc=2,class=CODE,delta=1
   188                           	psect	text162,global,reloc=2,class=CODE,delta=1
   189                           	psect	text163,global,reloc=4,class=CODE,delta=1
   190                           	psect	text164,global,reloc=2,class=CODE,delta=1
   191                           	psect	text165,global,reloc=2,class=CODE,delta=1
   192                           	psect	text166,global,reloc=2,class=CODE,delta=1
   193                           	psect	text167,global,reloc=2,class=CODE,delta=1
   194                           	psect	text168,global,reloc=2,class=CODE,delta=1
   195                           	psect	text169,global,reloc=2,class=CODE,delta=1
   196                           	psect	text170,global,reloc=4,class=CODE,delta=1
   197                           	psect	text171,global,reloc=2,class=CODE,delta=1
   198                           	psect	text172,global,reloc=2,class=CODE,delta=1
   199                           	psect	text173,global,reloc=2,class=CODE,delta=1
   200                           	psect	text174,global,reloc=2,class=CODE,delta=1
   201                           	psect	text175,global,reloc=2,class=CODE,delta=1
   202                           	psect	text176,global,reloc=2,class=CODE,delta=1
   203                           	psect	text177,global,reloc=2,class=CODE,delta=1,group=1
   204                           	psect	text178,global,reloc=4,class=CODE,delta=1
   205                           	psect	text179,global,reloc=2,class=CODE,delta=1
   206                           	psect	text180,global,reloc=2,class=CODE,delta=1
   207                           	psect	text181,global,reloc=4,class=CODE,delta=1
   208                           	psect	text182,global,reloc=4,class=CODE,delta=1
   209                           	psect	text183,global,reloc=2,class=CODE,delta=1
   210                           	psect	text184,global,reloc=2,class=CODE,delta=1
   211                           	psect	text185,global,reloc=2,class=CODE,delta=1
   212                           	psect	text186,global,reloc=4,class=CODE,delta=1
   213                           	psect	text187,global,reloc=4,class=CODE,delta=1
   214                           	psect	text188,global,reloc=2,class=CODE,delta=1
   215                           	psect	text189,global,reloc=4,class=CODE,delta=1
   216                           	psect	text190,global,reloc=2,class=CODE,delta=1
   217                           	psect	text191,global,reloc=4,class=CODE,delta=1
   218                           	psect	text192,global,reloc=2,class=CODE,delta=1
   219                           	psect	text193,global,reloc=4,class=CODE,delta=1
   220                           	psect	text194,global,reloc=2,class=CODE,delta=1
   221                           	psect	text195,global,reloc=2,class=CODE,delta=1
   222                           	psect	text196,global,reloc=4,class=CODE,delta=1
   223                           	psect	text197,global,reloc=4,class=CODE,delta=1
   224                           	psect	text198,global,reloc=4,class=CODE,delta=1
   225                           	psect	text199,global,reloc=4,class=CODE,delta=1
   226                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   227                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   228                           	psect	text200,global,reloc=4,class=CODE,delta=1
   229                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   230                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   231  0000                     
   232                           ; Version 2.10
   233                           ; Generated 31/07/2019 GMT
   234                           ; 
   235                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   236                           ; All rights reserved.
   237                           ; 
   238                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   239                           ; 
   240                           ; Redistribution and use in source and binary forms, with or without modification, are
   241                           ; permitted provided that the following conditions are met:
   242                           ; 
   243                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   244                           ;        conditions and the following disclaimer.
   245                           ; 
   246                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   247                           ;        of conditions and the following disclaimer in the documentation and/or other
   248                           ;        materials provided with the distribution.
   249                           ; 
   250                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   251                           ;        software without specific prior written permission.
   252                           ; 
   253                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   254                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   255                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   256                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   257                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   258                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   259                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   260                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   261                           ; 
   262                           ; 
   263                           ; Code-generator required, PIC18F57K42 Definitions
   264                           ; 
   265                           ; SFR Addresses
   266  0000                     
   267 ;;_main$4008	offset	0
   268 ;;_main$4004	offset	2
   269 ;;_esr_temp	offset	4
   270 ;;_i_esr	offset	8
   271 ;;_shape	offset	10
   272 ;;_inp_index	offset	11
   273 ;;_k	offset	12
   274 ;;_j	offset	13
   275 ;;_i	offset	14
   276 ;;_mode	offset	15
   277 ;;_i_ror	offset	16
   278 ;;_mode	offset=-1 (param)
   279 ;;_hist	offset=-3 (param)
   280 ;;_s	offset=-2 (param)
   281 ;;_voltage	offset=-4 (param)
   282 ;;_voltage	offset=-4 (param)
   283 ;;_voltage	offset=-4 (param)
   284 ;;_set	offset=-1 (param)
   285 ;;_x	offset	0
   286 ;;_r_cal_ptr	offset	2
   287 ;;_y	offset	4
   288 ;;_crcVal_save	offset	6
   289 ;;_bAdd	offset=-2 (param)
   290 ;;_data	offset=-1 (param)
   291 ;;_cmd	offset=-1 (param)
   292 ;;_cmd	offset=-1 (param)
   293 ;;_data	offset=-1 (param)
   294 ;;__this	offset=-2 (param)
   295 ;;_soc	offset	0
   296 ;;_slot	offset	2
   297 ;;_cvoltage	offset=-4 (param)
   298 ;;_h	offset=-1 (param)
   299 ;;_h	offset=-1 (param)
   300 ;;_fsm	offset=-1 (param)
   301 ;;_mode	offset=-1 (param)
   302 ;;_mode	offset=-1 (param)
   303 ;;_cmd	offset=-1 (param)
   304 ;;_cp	offset	0
   305 ;;_cb	offset	4
   306 ;;_x	offset	8
   307 ;;_x	offset	0
   308 ;;_r_cal_ptr	offset	2
   309 ;;_y	offset	4
   310 ;;_crcVal	offset	6
   311 ;;_GIEBitValue	offset	0
   312 ;;_bAdd	offset=-2 (param)
   313 ;;_bData	offset=-3 (param)
   314 ;;_result	offset	0
   315 ;;_mask	offset	2
   316 ;;_reverse	offset=-1 (param)
   317 ;;_xorValue	offset=-3 (param)
   318 ;;_mask	offset	0
   319 ;;_reverse	offset	2
   320 ;;_crc	offset=-2 (param)
   321 ;;_data	offset=-1 (param)
   322 ;;_channel	offset=-1 (param)
   323 ;;_c	offset	0
   324 ;;_shape	offset=-1 (param)
   325 ;;_reset	offset=-2 (param)
   326 ;;_i	offset=-1 (param)
   327 ;;_mode	offset=-1 (param)
   328 ;;_cb	offset=-3 (param)
   329 ;;_cp	offset=-5 (param)
   330 ;;_value	offset=-2 (param)
   331 ;;_window	offset=-4 (param)
   332 ;;_standard	offset=-6 (param)
   333 ;;_i	offset	0
   334 ;;_h	offset=-1 (param)
   335 ;;_flipper	offset=-1 (param)
   336 ;;_f	offset	0
   337 ;;_ap	offset	6
   338 ;;_s	offset=-3 (param)
   339 ;;_fmt	offset=-5 (param)
   340 ;;_line	offset=-1 (param)
   341 ;;_vterm	offset=-2 (param)
   342 ;;_numMilliseconds	offset=-2 (param)
   343 ;;_vterm	offset=-1 (param)
   344 ;;_row	offset	0
   345 ;;_r	offset=-1 (param)
   346 ;;_c	offset=-2 (param)
   347 ;;_strPtr	offset=-4 (param)
   348 ;;_strPtr	offset=-1 (param)
   349 ;;_delay	offset=-4 (param)
   350 ;;_strPtr	offset=-1 (param)
   351 ;;_strPtr	offset=-2 (param)
   352 ;;__this	offset=-2 (param)
   353 ;;_clearBuffer	offset=-3 (param)
   354 ;;_s	offset	0
   355 ;;_k	offset	2
   356 ;;_dest	offset=-2 (param)
   357 ;;_c	offset=-4 (param)
   358 ;;_n	offset=-6 (param)
   359 ;;_ap	offset	0
   360 ;;_fmt	offset=-3 (param)
   361 ;;_cfmt	offset	0
   362 ;;_fp	offset=-2 (param)
   363 ;;_fmt	offset=-4 (param)
   364 ;;_ap	offset=-6 (param)
   365 ;;_vfpfcnvrt$6847	offset	0
   366 ;;_vfpfcnvrt$6858	offset	2
   367 ;;_vfpfcnvrt$6846	offset	4
   368 ;;_llu	offset	6
   369 ;;_ll	offset	14
   370 ;;_f	offset	22
   371 ;;_ct	offset	26
   372 ;;_cp	offset	29
   373 ;;_c	offset	31
   374 ;;_fp	offset=-2 (param)
   375 ;;_fmt	offset=-4 (param)
   376 ;;_ap	offset=-6 (param)
   377 ;;_xtoa$6832	offset	0
   378 ;;_xtoa$6831	offset	2
   379 ;;_n	offset	4
   380 ;;_c	offset	12
   381 ;;_i	offset	14
   382 ;;_w	offset	16
   383 ;;_p	offset	18
   384 ;;_fp	offset=-2 (param)
   385 ;;_d	offset=-10 (param)
   386 ;;_x	offset=-11 (param)
   387 ;;_toupper$7638	offset	0
   388 ;;_c	offset=-2 (param)
   389 ;;_c	offset=-2 (param)
   390 ;;_c	offset=-2 (param)
   391 ;;_n	offset	0
   392 ;;_i	offset	8
   393 ;;_w	offset	10
   394 ;;_p	offset	12
   395 ;;_fp	offset=-2 (param)
   396 ;;_d	offset=-10 (param)
   397 ;;_counter	offset	0
   398 ;;_dividend	offset=-8 (param)
   399 ;;_divisor	offset=-16 (param)
   400 ;;_quotient	offset	0
   401 ;;_counter	offset	8
   402 ;;_dividend	offset=-8 (param)
   403 ;;_divisor	offset=-16 (param)
   404 ;;_r	offset	0
   405 ;;_l	offset	2
   406 ;;__l	offset=-2 (param)
   407 ;;__r	offset=-4 (param)
   408 ;;_n	offset=-6 (param)
   409 ;;_nuls	offset	0
   410 ;;_l	offset	7
   411 ;;_p	offset	9
   412 ;;_cp	offset	11
   413 ;;_w	offset	13
   414 ;;_i	offset	15
   415 ;;_fp	offset=-2 (param)
   416 ;;_s	offset=-4 (param)
   417 ;;_efgtoa$6804	offset	0
   418 ;;_efgtoa$6803	offset	2
   419 ;;_efgtoa$6802	offset	4
   420 ;;_efgtoa$6798	offset	6
   421 ;;_efgtoa$6794	offset	8
   422 ;;_efgtoa$6793	offset	10
   423 ;;_u	offset	12
   424 ;;_g	offset	16
   425 ;;_l	offset	20
   426 ;;_h	offset	24
   427 ;;_ou	offset	28
   428 ;;_n	offset	32
   429 ;;_e	offset	34
   430 ;;_i	offset	36
   431 ;;_w	offset	38
   432 ;;_p	offset	40
   433 ;;_sign	offset	42
   434 ;;_d	offset	44
   435 ;;_ne	offset	46
   436 ;;_m	offset	48
   437 ;;_pp	offset	50
   438 ;;_t	offset	52
   439 ;;_mode	offset	54
   440 ;;_nmode	offset	55
   441 ;;_fp	offset=-2 (param)
   442 ;;_f	offset=-6 (param)
   443 ;;_c	offset=-7 (param)
   444 ;;_tolower$7623	offset	0
   445 ;;_c	offset=-2 (param)
   446 ;;_c	offset=-2 (param)
   447 ;;_d	offset	0
   448 ;;_s	offset	2
   449 ;;_dest	offset=-2 (param)
   450 ;;_src	offset=-4 (param)
   451 ;;_u	offset	0
   452 ;;_m	offset	4
   453 ;;_e	offset	8
   454 ;;_x	offset=-4 (param)
   455 ;;_u	offset	0
   456 ;;_e	offset	4
   457 ;;_x	offset=-4 (param)
   458 ;;_exp1	offset	0
   459 ;;_sign1	offset	1
   460 ;;_f1	offset=-4 (param)
   461 ;;_f1	offset=-4 (param)
   462 ;;_ff1	offset=-4 (param)
   463 ;;_ff2	offset=-8 (param)
   464 ;;_sign	offset	0
   465 ;;_counter	offset	1
   466 ;;_dividend	offset=-2 (param)
   467 ;;_divisor	offset=-4 (param)
   468 ;;_quotient	offset	0
   469 ;;_sign	offset	2
   470 ;;_counter	offset	3
   471 ;;_dividend	offset=-2 (param)
   472 ;;_divisor	offset=-4 (param)
   473 ;;_dtoa$6770	offset	0
   474 ;;_n	offset	2
   475 ;;_i	offset	10
   476 ;;_s	offset	12
   477 ;;_w	offset	14
   478 ;;_p	offset	16
   479 ;;_fp	offset=-2 (param)
   480 ;;_d	offset=-10 (param)
   481 ;;_a	offset=-2 (param)
   482 ;;_sign	offset	0
   483 ;;_counter	offset	1
   484 ;;_dividend	offset=-8 (param)
   485 ;;_divisor	offset=-16 (param)
   486 ;;_quotient	offset	0
   487 ;;_sign	offset	8
   488 ;;_counter	offset	9
   489 ;;_dividend	offset=-8 (param)
   490 ;;_divisor	offset=-16 (param)
   491 ;;_w	offset	0
   492 ;;_fp	offset=-2 (param)
   493 ;;_c	offset=-3 (param)
   494 ;;_w	offset	0
   495 ;;_i	offset	2
   496 ;;_fp	offset=-2 (param)
   497 ;;_buf	offset=-4 (param)
   498 ;;_p	offset=-6 (param)
   499 ;;_a	offset	0
   500 ;;_s	offset=-2 (param)
   501 ;;_i	offset	0
   502 ;;_c	offset	2
   503 ;;_s	offset=-2 (param)
   504 ;;_fp	offset=-4 (param)
   505 ;;_c	offset=-2 (param)
   506 ;;_fp	offset=-4 (param)
   507 ;;_c	offset=-1 (param)
   508 ;;__this	offset=-2 (param)
   509 ;;_c	offset=-3 (param)
   510 ;;_atoi$7354	offset	0
   511 ;;_atoi$7352	offset	2
   512 ;;_atoi$7353	offset	4
   513 ;;_n	offset	5
   514 ;;_neg	offset	7
   515 ;;_s	offset=-2 (param)
   516 ;;_isspace$7403	offset	0
   517 ;;_c	offset=-2 (param)
   518 ;;_c	offset=-2 (param)
   519 ;;_vterm	offset=-1 (param)
   520 ;;_new_response_info	offset=-1 (param)
   521 ;;_new_response_info	offset=-1 (param)
   522 ;;_level	offset=-2 (param)
   523 ;;_dutyValue	offset=-2 (param)
   524 ;;_timer	offset=-1 (param)
   525 ;;_timer	offset=-1 (param)
   526 ;;_count	offset=-3 (param)
   527 ;;_h	offset=-1 (param)
   528 ;;_u	offset	0
   529 ;;_x	offset=-4 (param)
   530 ;;_chan	offset=-1 (param)
   531 ;;_to_what	offset=-2 (param)
   532 ;;_u	offset	0
   533 ;;_s	offset=-2 (param)
   534 ;;_index	offset=-1 (param)
   535 ;;_arg	offset	0
   536 ;;_exp	offset	4
   537 ;;_sign	offset=-1 (param)
   538 ;;_val	offset=-5 (param)
   539 ;;_grs	offset	0
   540 ;;_rem	offset	4
   541 ;;_new_exp	offset	8
   542 ;;_aexp	offset	10
   543 ;;_bexp	offset	11
   544 ;;_sign	offset	12
   545 ;;_b	offset=-4 (param)
   546 ;;_a	offset=-8 (param)
   547 ;;_ff1	offset=-4 (param)
   548 ;;_ff2	offset=-8 (param)
   549 ;;_lp_speed	offset	0
   550 ;;_new	offset=-4 (param)
   551 ;;_bn	offset=-5 (param)
   552 ;;_slow	offset=-6 (param)
   553 ;;_b	offset=-4 (param)
   554 ;;_a	offset=-8 (param)
   555 ;;_grs	offset	0
   556 ;;_bexp	offset	1
   557 ;;_aexp	offset	2
   558 ;;_signs	offset	3
   559 ;;_b	offset=-4 (param)
   560 ;;_a	offset=-8 (param)
   561 ;;_prod	offset	0
   562 ;;_grs	offset	4
   563 ;;_temp	offset	8
   564 ;;_bexp	offset	10
   565 ;;_aexp	offset	11
   566 ;;_sign	offset	12
   567 ;;_b	offset=-4 (param)
   568 ;;_a	offset=-8 (param)
   569 ;;_InterruptHandler	offset=-3 (param)
   570 ;;_InterruptHandler	offset=-3 (param)
   571 ;;_InterruptHandler	offset=-3 (param)
   572 ;;_InterruptHandler	offset=-3 (param)
   573 ;;_InterruptHandler	offset=-3 (param)
   574 ;;_InterruptHandler	offset=-3 (param)
   575 ;;_state	offset	0
   576 ;;_InterruptHandler	offset=-3 (param)
   577 ;;_InterruptHandler	offset=-3 (param)
   578 ;;_seed	offset	0
   579 ;;_poly	offset	2
   580 ;;_InterruptHandler	offset=-3 (param)
   581 ;;_InterruptHandler	offset=-3 (param)
   582 ;;_i	offset	0
   583 ;;_sw_value	offset	1
   584 ;;_timerVal	offset=-2 (param)
   585 ;;_light	offset	0
   586 ;;_mode	offset=-1 (param)
   587 ;;_chan	offset=-1 (param)
   588 ;;_to_what	offset=-2 (param)
   589 ;;_u	offset	0
   590 ;;_s	offset=-2 (param)
   591 ;;_index	offset=-1 (param)
   592 ;;_arg	offset	0
   593 ;;_exp	offset	4
   594 ;;_sign	offset=-1 (param)
   595 ;;_val	offset=-5 (param)
   596 ;;_b	offset=-4 (param)
   597 ;;_a	offset=-8 (param)
   598 ;;_grs	offset	0
   599 ;;_bexp	offset	1
   600 ;;_aexp	offset	2
   601 ;;_signs	offset	3
   602 ;;_b	offset=-4 (param)
   603 ;;_a	offset=-8 (param)
   604 ;;_prod	offset	0
   605 ;;_grs	offset	4
   606 ;;_temp	offset	8
   607 ;;_bexp	offset	10
   608 ;;_aexp	offset	11
   609 ;;_sign	offset	12
   610 ;;_b	offset=-4 (param)
   611 ;;_a	offset=-8 (param)
   612 ;;_grs	offset	0
   613 ;;_rem	offset	4
   614 ;;_new_exp	offset	8
   615 ;;_aexp	offset	10
   616 ;;_bexp	offset	11
   617 ;;_sign	offset	12
   618 ;;_b	offset=-4 (param)
   619 ;;_a	offset=-8 (param)
   620 ;;_ff1	offset=-4 (param)
   621 ;;_ff2	offset=-8 (param)
   622 ;;_timerVal	offset=-2 (param)
   623 ;;_adj	offset	0
   624 ;;_log_ptr	offset	4
   625 ;;_f	offset	0
   626 ;;_ap	offset	6
   627 ;;_s	offset=-3 (param)
   628 ;;_fmt	offset=-5 (param)
   629 ;;_cfmt	offset	0
   630 ;;_fp	offset=-2 (param)
   631 ;;_fmt	offset=-4 (param)
   632 ;;_ap	offset=-6 (param)
   633 ;;_vfpfcnvrt$6847	offset	0
   634 ;;_vfpfcnvrt$6858	offset	2
   635 ;;_vfpfcnvrt$6846	offset	4
   636 ;;_llu	offset	6
   637 ;;_ll	offset	14
   638 ;;_f	offset	22
   639 ;;_ct	offset	26
   640 ;;_cp	offset	29
   641 ;;_c	offset	31
   642 ;;_fp	offset=-2 (param)
   643 ;;_fmt	offset=-4 (param)
   644 ;;_ap	offset=-6 (param)
   645 ;;_xtoa$6832	offset	0
   646 ;;_xtoa$6831	offset	2
   647 ;;_n	offset	4
   648 ;;_c	offset	12
   649 ;;_i	offset	14
   650 ;;_w	offset	16
   651 ;;_p	offset	18
   652 ;;_fp	offset=-2 (param)
   653 ;;_d	offset=-10 (param)
   654 ;;_x	offset=-11 (param)
   655 ;;_toupper$7638	offset	0
   656 ;;_c	offset=-2 (param)
   657 ;;_c	offset=-2 (param)
   658 ;;_c	offset=-2 (param)
   659 ;;_n	offset	0
   660 ;;_i	offset	8
   661 ;;_w	offset	10
   662 ;;_p	offset	12
   663 ;;_fp	offset=-2 (param)
   664 ;;_d	offset=-10 (param)
   665 ;;_counter	offset	0
   666 ;;_dividend	offset=-8 (param)
   667 ;;_divisor	offset=-16 (param)
   668 ;;_quotient	offset	0
   669 ;;_counter	offset	8
   670 ;;_dividend	offset=-8 (param)
   671 ;;_divisor	offset=-16 (param)
   672 ;;_r	offset	0
   673 ;;_l	offset	2
   674 ;;__l	offset=-2 (param)
   675 ;;__r	offset=-4 (param)
   676 ;;_n	offset=-6 (param)
   677 ;;_nuls	offset	0
   678 ;;_l	offset	7
   679 ;;_p	offset	9
   680 ;;_cp	offset	11
   681 ;;_w	offset	13
   682 ;;_i	offset	15
   683 ;;_fp	offset=-2 (param)
   684 ;;_s	offset=-4 (param)
   685 ;;_efgtoa$6804	offset	0
   686 ;;_efgtoa$6803	offset	2
   687 ;;_efgtoa$6802	offset	4
   688 ;;_efgtoa$6798	offset	6
   689 ;;_efgtoa$6794	offset	8
   690 ;;_efgtoa$6793	offset	10
   691 ;;_u	offset	12
   692 ;;_g	offset	16
   693 ;;_l	offset	20
   694 ;;_h	offset	24
   695 ;;_ou	offset	28
   696 ;;_n	offset	32
   697 ;;_e	offset	34
   698 ;;_i	offset	36
   699 ;;_w	offset	38
   700 ;;_p	offset	40
   701 ;;_sign	offset	42
   702 ;;_d	offset	44
   703 ;;_ne	offset	46
   704 ;;_m	offset	48
   705 ;;_pp	offset	50
   706 ;;_t	offset	52
   707 ;;_mode	offset	54
   708 ;;_nmode	offset	55
   709 ;;_fp	offset=-2 (param)
   710 ;;_f	offset=-6 (param)
   711 ;;_c	offset=-7 (param)
   712 ;;_tolower$7623	offset	0
   713 ;;_c	offset=-2 (param)
   714 ;;_c	offset=-2 (param)
   715 ;;_d	offset	0
   716 ;;_s	offset	2
   717 ;;_dest	offset=-2 (param)
   718 ;;_src	offset=-4 (param)
   719 ;;_u	offset	0
   720 ;;_m	offset	4
   721 ;;_e	offset	8
   722 ;;_x	offset=-4 (param)
   723 ;;_u	offset	0
   724 ;;_e	offset	4
   725 ;;_x	offset=-4 (param)
   726 ;;_exp1	offset	0
   727 ;;_sign1	offset	1
   728 ;;_f1	offset=-4 (param)
   729 ;;_f1	offset=-4 (param)
   730 ;;_ff1	offset=-4 (param)
   731 ;;_ff2	offset=-8 (param)
   732 ;;_sign	offset	0
   733 ;;_counter	offset	1
   734 ;;_dividend	offset=-2 (param)
   735 ;;_divisor	offset=-4 (param)
   736 ;;_quotient	offset	0
   737 ;;_sign	offset	2
   738 ;;_counter	offset	3
   739 ;;_dividend	offset=-2 (param)
   740 ;;_divisor	offset=-4 (param)
   741 ;;_dtoa$6770	offset	0
   742 ;;_n	offset	2
   743 ;;_i	offset	10
   744 ;;_s	offset	12
   745 ;;_w	offset	14
   746 ;;_p	offset	16
   747 ;;_fp	offset=-2 (param)
   748 ;;_d	offset=-10 (param)
   749 ;;_a	offset=-2 (param)
   750 ;;_sign	offset	0
   751 ;;_counter	offset	1
   752 ;;_dividend	offset=-8 (param)
   753 ;;_divisor	offset=-16 (param)
   754 ;;_quotient	offset	0
   755 ;;_sign	offset	8
   756 ;;_counter	offset	9
   757 ;;_dividend	offset=-8 (param)
   758 ;;_divisor	offset=-16 (param)
   759 ;;_w	offset	0
   760 ;;_fp	offset=-2 (param)
   761 ;;_c	offset=-3 (param)
   762 ;;_w	offset	0
   763 ;;_i	offset	2
   764 ;;_fp	offset=-2 (param)
   765 ;;_buf	offset=-4 (param)
   766 ;;_p	offset=-6 (param)
   767 ;;_a	offset	0
   768 ;;_s	offset=-2 (param)
   769 ;;_i	offset	0
   770 ;;_c	offset	2
   771 ;;_s	offset=-2 (param)
   772 ;;_fp	offset=-4 (param)
   773 ;;_c	offset=-2 (param)
   774 ;;_fp	offset=-4 (param)
   775 ;;_c	offset=-1 (param)
   776 ;;__this	offset=-2 (param)
   777 ;;_c	offset=-3 (param)
   778 ;;_atoi$7354	offset	0
   779 ;;_atoi$7352	offset	2
   780 ;;_atoi$7353	offset	4
   781 ;;_n	offset	5
   782 ;;_neg	offset	7
   783 ;;_s	offset=-2 (param)
   784 ;;_isspace$7403	offset	0
   785 ;;_c	offset=-2 (param)
   786 ;;_c	offset=-2 (param)
   787 ;;_dsize	offset=-2 (param)
   788 ;;_u	offset	0
   789 ;;_x	offset=-4 (param)
   790 ;;_f1p	offset=-2 (param)
   791 ;;_f2	offset=-6 (param)
   792 ;;_timer	offset=-1 (param)
   793 ;;_count	offset=-3 (param)
   794 ;;_channel	offset=-1 (param)
   795 ;;_i	offset	0
   796                           
   797                           	psect	idataBIGRAM
   798  016E6A                     __pidataBIGRAM:
   799                           	opt callstack 0
   800                           
   801                           ;initializer for _port_data
   802  016E6A  FF                 	db	255
   803  016E6B  00                 	db	0
   804  016E6C  FF                 	db	255
   805  016E6D  00                 	db	0
   806  016E6E  FF                 	db	255
   807  016E6F  00                 	db	0
   808  016E70  FF                 	db	255
   809  016E71  00                 	db	0
   810  016E72  FF                 	db	255
   811  016E73  00                 	db	0
   812  016E74  FF                 	db	255
   813  016E75  00                 	db	0
   814  016E76  FF                 	db	255
   815  016E77  00                 	db	0
   816  016E78  FF                 	db	255
   817  016E79  00                 	db	0
   818  016E7A  00                 	db	0
   819  016E7B  00                 	db	0
   820  016E7C  00                 	db	0
   821  016E7D  00                 	db	0
   822  016E7E  00                 	db	0
   823  016E7F  00                 	db	0
   824  016E80  00                 	db	0
   825  016E81  00                 	db	0
   826  016E82  00                 	db	0
   827  016E83  00                 	db	0
   828  016E84  00                 	db	0
   829  016E85  00                 	db	0
   830  016E86  00                 	db	0
   831  016E87  00                 	db	0
   832  016E88  00                 	db	0
   833  016E89  00                 	db	0
   834  016E8A  00                 	db	0
   835  016E8B  00                 	db	0
   836  016E8C  00                 	db	0
   837  016E8D  00                 	db	0
   838  016E8E  00                 	db	0
   839  016E8F  00                 	db	0
   840  016E90  00                 	db	0
   841  016E91  00                 	db	0
   842  016E92  00                 	db	0
   843  016E93  00                 	db	0
   844  016E94  00                 	db	0
   845  016E95  00                 	db	0
   846  016E96  00                 	db	0
   847  016E97  00                 	db	0
   848  016E98  00                 	db	0
   849  016E99  00                 	db	0
   850  016E9A  00                 	db	0
   851  016E9B  00                 	db	0
   852  016E9C  00                 	db	0
   853  016E9D  00                 	db	0
   854  016E9E  00                 	db	0
   855  016E9F  00                 	db	0
   856  016EA0  00                 	db	0
   857  016EA1  00                 	db	0
   858  016EA2  00                 	db	0
   859  016EA3  00                 	db	0
   860  016EA4  00                 	db	0
   861  016EA5  00                 	db	0
   862  016EA6  00                 	db	0
   863  016EA7  00                 	db	0
   864  016EA8  00                 	db	0
   865  016EA9  00                 	db	0
   866  016EAA  00                 	db	0
   867  016EAB  00                 	db	0
   868  016EAC  00                 	db	0
   869  016EAD  00                 	db	0
   870  016EAE  00                 	db	0
   871  016EAF  00                 	db	0
   872  016EB0  00                 	db	0
   873  016EB1  00                 	db	0
   874  016EB2  00                 	db	0
   875  016EB3  00                 	db	0
   876  016EB4  00                 	db	0
   877  016EB5  00                 	db	0
   878  016EB6  00                 	db	0
   879  016EB7  00                 	db	0
   880  016EB8  00                 	db	0
   881  016EB9  00                 	db	0
   882  016EBA  00                 	db	0
   883  016EBB  00                 	db	0
   884  016EBC  00                 	db	0
   885  016EBD  00                 	db	0
   886  016EBE  00                 	db	0
   887  016EBF  00                 	db	0
   888  016EC0  00                 	db	0
   889  016EC1  00                 	db	0
   890  016EC2  00                 	db	0
   891  016EC3  00                 	db	0
   892  016EC4  00                 	db	0
   893  016EC5  00                 	db	0
   894  016EC6  00                 	db	0
   895  016EC7  00                 	db	0
   896  016EC8  00                 	db	0
   897  016EC9  00                 	db	0
   898  016ECA  00                 	db	0
   899  016ECB  00                 	db	0
   900  016ECC  00                 	db	0
   901  016ECD  00                 	db	0
   902  016ECE  00                 	db	0
   903  016ECF  00                 	db	0
   904  016ED0  00                 	db	0
   905  016ED1  00                 	db	0
   906  016ED2  00                 	db	0
   907  016ED3  00                 	db	0
   908  016ED4  00                 	db	0
   909  016ED5  00                 	db	0
   910  016ED6  00                 	db	0
   911  016ED7  00                 	db	0
   912  016ED8  00                 	db	0
   913  016ED9  00                 	db	0
   914  016EDA  00                 	db	0
   915  016EDB  00                 	db	0
   916  016EDC  00                 	db	0
   917  016EDD  00                 	db	0
   918  016EDE  00                 	db	0
   919  016EDF  00                 	db	0
   920  016EE0  00                 	db	0
   921  016EE1  00                 	db	0
   922  016EE2  00                 	db	0
   923  016EE3  00                 	db	0
   924  016EE4  00                 	db	0
   925  016EE5  00                 	db	0
   926  016EE6  00                 	db	0
   927  016EE7  00                 	db	0
   928  016EE8  00                 	db	0
   929  016EE9  00                 	db	0
   930  016EEA  00                 	db	0
   931  016EEB  00                 	db	0
   932  016EEC  00                 	db	0
   933  016EED  00                 	db	0
   934  016EEE  00                 	db	0
   935  016EEF  00                 	db	0
   936  016EF0  00                 	db	0
   937  016EF1  00                 	db	0
   938  016EF2  00                 	db	0
   939  016EF3  00                 	db	0
   940  016EF4  00                 	db	0
   941  016EF5  00                 	db	0
   942  016EF6  00                 	db	0
   943  016EF7  00                 	db	0
   944  016EF8  00                 	db	0
   945  016EF9  00                 	db	0
   946  016EFA  00                 	db	0
   947  016EFB  00                 	db	0
   948  016EFC  00                 	db	0
   949  016EFD  00                 	db	0
   950  016EFE  00                 	db	0
   951  016EFF  00                 	db	0
   952  016F00  00                 	db	0
   953  016F01  00                 	db	0
   954  016F02  00                 	db	0
   955  016F03  00                 	db	0
   956  016F04  00                 	db	0
   957  016F05  00                 	db	0
   958  016F06  00                 	db	0
   959  016F07  00                 	db	0
   960  016F08  00                 	db	0
   961  016F09  00                 	db	0
   962  016F0A  00                 	db	0
   963  016F0B  00                 	db	0
   964  016F0C  00                 	db	0
   965  016F0D  00                 	db	0
   966  016F0E  00                 	db	0
   967  016F0F  00                 	db	0
   968  016F10  00                 	db	0
   969  016F11  00                 	db	0
   970  016F12  00                 	db	0
   971  016F13  00                 	db	0
   972  016F14  00                 	db	0
   973  016F15  00                 	db	0
   974  016F16  00                 	db	0
   975  016F17  00                 	db	0
   976  016F18  00                 	db	0
   977  016F19  00                 	db	0
   978  016F1A  00                 	db	0
   979  016F1B  00                 	db	0
   980  016F1C  00                 	db	0
   981  016F1D  00                 	db	0
   982  016F1E  00                 	db	0
   983  016F1F  00                 	db	0
   984  016F20  00                 	db	0
   985  016F21  00                 	db	0
   986  016F22  00                 	db	0
   987  016F23  00                 	db	0
   988  016F24  00                 	db	0
   989  016F25  00                 	db	0
   990  016F26  00                 	db	0
   991  016F27  00                 	db	0
   992  016F28  00                 	db	0
   993  016F29  00                 	db	0
   994  016F2A  00                 	db	0
   995  016F2B  00                 	db	0
   996  016F2C  00                 	db	0
   997  016F2D  00                 	db	0
   998  016F2E  00                 	db	0
   999  016F2F  00                 	db	0
  1000  016F30  00                 	db	0
  1001  016F31  00                 	db	0
  1002  016F32  00                 	db	0
  1003  016F33  00                 	db	0
  1004  016F34  00                 	db	0
  1005  016F35  00                 	db	0
  1006  016F36  00                 	db	0
  1007  016F37  00                 	db	0
  1008  016F38  00                 	db	0
  1009  016F39  00                 	db	0
  1010  016F3A  00                 	db	0
  1011  016F3B  00                 	db	0
  1012  016F3C  00                 	db	0
  1013  016F3D  00                 	db	0
  1014  016F3E  00                 	db	0
  1015  016F3F  00                 	db	0
  1016  016F40  00                 	db	0
  1017  016F41  00                 	db	0
  1018  016F42  00                 	db	0
  1019  016F43  00                 	db	0
  1020  016F44  00                 	db	0
  1021  016F45  00                 	db	0
  1022  016F46  00                 	db	0
  1023  016F47  00                 	db	0
  1024  016F48  00                 	db	0
  1025  016F49  00                 	db	0
  1026  016F4A  00                 	db	0
  1027  016F4B  00                 	db	0
  1028  016F4C  00                 	db	0
  1029  016F4D  00                 	db	0
  1030  016F4E  00                 	db	0
  1031  016F4F  00                 	db	0
  1032  016F50  00                 	db	0
  1033  016F51  00                 	db	0
  1034  016F52  00                 	db	0
  1035  016F53  00                 	db	0
  1036  016F54  00                 	db	0
  1037  016F55  00                 	db	0
  1038  016F56  00                 	db	0
  1039  016F57  00                 	db	0
  1040  016F58  00                 	db	0
  1041  016F59  00                 	db	0
  1042  016F5A  00                 	db	0
  1043  016F5B  00                 	db	0
  1044  016F5C  00                 	db	0
  1045  016F5D  00                 	db	0
  1046  016F5E  00                 	db	0
  1047  016F5F  00                 	db	0
  1048  016F60  00                 	db	0
  1049  016F61  00                 	db	0
  1050  016F62  00                 	db	0
  1051  016F63  00                 	db	0
  1052  016F64  00                 	db	0
  1053  016F65  00                 	db	0
  1054  016F66  00                 	db	0
  1055  016F67  00                 	db	0
  1056  016F68  00                 	db	0
  1057  016F69  00                 	db	0
  1058  016F6A  00                 	db	0
  1059  016F6B  00                 	db	0
  1060  016F6C  00                 	db	0
  1061  016F6D  00                 	db	0
  1062  016F6E  00                 	db	0
  1063  016F6F  00                 	db	0
  1064  016F70  00                 	db	0
  1065  016F71  00                 	db	0
  1066  016F72  00                 	db	0
  1067  016F73  00                 	db	0
  1068  016F74  00                 	db	0
  1069  016F75  00                 	db	0
  1070  016F76  00                 	db	0
  1071  016F77  00                 	db	0
  1072  016F78  00                 	db	0
  1073  016F79  00                 	db	0
  1074  016F7A  00                 	db	0
  1075  016F7B  00                 	db	0
  1076  016F7C  00                 	db	0
  1077  016F7D  00                 	db	0
  1078  016F7E  00                 	db	0
  1079  016F7F  00                 	db	0
  1080  016F80  00                 	db	0
  1081  016F81  00                 	db	0
  1082  016F82  00                 	db	0
  1083  016F83  00                 	db	0
  1084  016F84  00                 	db	0
  1085  016F85  00                 	db	0
  1086  016F86  00                 	db	0
  1087  016F87  00                 	db	0
  1088  016F88  00                 	db	0
  1089  016F89  00                 	db	0
  1090  016F8A  00                 	db	0
  1091  016F8B  00                 	db	0
  1092  016F8C  00                 	db	0
  1093  016F8D  00                 	db	0
  1094  016F8E  00                 	db	0
  1095  016F8F  00                 	db	0
  1096  016F90  00                 	db	0
  1097  016F91  00                 	db	0
  1098  016F92  00                 	db	0
  1099  016F93  00                 	db	0
  1100  016F94  00                 	db	0
  1101  016F95  00                 	db	0
  1102  016F96  00                 	db	0
  1103  016F97  00                 	db	0
  1104  016F98  00                 	db	0
  1105  016F99  00                 	db	0
  1106  016F9A  00                 	db	0
  1107  016F9B  00                 	db	0
  1108  016F9C  00                 	db	0
  1109  016F9D  00                 	db	0
  1110  016F9E  00                 	db	0
  1111  016F9F  00                 	db	0
  1112  016FA0  00                 	db	0
  1113  016FA1  00                 	db	0
  1114  016FA2  00                 	db	0
  1115  016FA3  00                 	db	0
  1116  016FA4  00                 	db	0
  1117  016FA5  00                 	db	0
  1118  016FA6  00                 	db	0
  1119  016FA7  00                 	db	0
  1120  016FA8  00                 	db	0
  1121  016FA9  00                 	db	0
  1122  016FAA  00                 	db	0
  1123  016FAB  00                 	db	0
  1124  016FAC  00                 	db	0
  1125  016FAD  00                 	db	0
  1126  016FAE  00                 	db	0
  1127  016FAF  00                 	db	0
  1128  016FB0  00                 	db	0
  1129  016FB1  00                 	db	0
  1130  016FB2  00                 	db	0
  1131  016FB3  00                 	db	0
  1132  016FB4  00                 	db	0
  1133  016FB5  00                 	db	0
  1134  016FB6  00                 	db	0
  1135  016FB7  00                 	db	0
  1136  016FB8  00                 	db	0
  1137  016FB9  00                 	db	0
  1138  016FBA  00                 	db	0
  1139  016FBB  00                 	db	0
  1140  016FBC  00                 	db	0
  1141  016FBD  00                 	db	0
  1142  016FBE  00                 	db	0
  1143  016FBF  00                 	db	0
  1144  016FC0  00                 	db	0
  1145  016FC1  00                 	db	0
  1146  016FC2  00                 	db	0
  1147  016FC3  00                 	db	0
  1148  016FC4  00                 	db	0
  1149  016FC5  00                 	db	0
  1150  016FC6  00                 	db	0
  1151  016FC7  00                 	db	0
  1152  016FC8  00                 	db	0
  1153  016FC9  00                 	db	0
  1154  016FCA  00                 	db	0
  1155  016FCB  00                 	db	0
  1156  016FCC  00                 	db	0
  1157  016FCD  00                 	db	0
  1158  016FCE  00                 	db	0
  1159  016FCF  00                 	db	0
  1160  016FD0  00                 	db	0
  1161  016FD1  00                 	db	0
  1162  016FD2  00                 	db	0
  1163  016FD3  00                 	db	0
  1164  016FD4  00                 	db	0
  1165  016FD5  00                 	db	0
  1166  016FD6  00                 	db	0
  1167  016FD7  00                 	db	0
  1168  016FD8  00                 	db	0
  1169  016FD9  00                 	db	0
  1170  016FDA  00                 	db	0
  1171  016FDB  00                 	db	0
  1172  016FDC  00                 	db	0
  1173  016FDD  00                 	db	0
  1174  016FDE  00                 	db	0
  1175  016FDF  00                 	db	0
  1176  016FE0  00                 	db	0
  1177  016FE1  00                 	db	0
  1178  016FE2  00                 	db	0
  1179  016FE3  00                 	db	0
  1180  016FE4  00                 	db	0
  1181  016FE5  00                 	db	0
  1182  016FE6  00                 	db	0
  1183  016FE7  00                 	db	0
  1184  016FE8  00                 	db	0
  1185  016FE9  00                 	db	0
  1186  016FEA  00                 	db	0
  1187  016FEB  00                 	db	0
  1188  016FEC  00                 	db	0
  1189  016FED  00                 	db	0
  1190  016FEE  00                 	db	0
  1191  016FEF  00                 	db	0
  1192  016FF0  00                 	db	0
  1193  016FF1  00                 	db	0
  1194  016FF2  00                 	db	0
  1195  016FF3  00                 	db	0
  1196  016FF4  00                 	db	0
  1197  016FF5  00                 	db	0
  1198  016FF6  00                 	db	0
  1199  016FF7  00                 	db	0
  1200  016FF8  00                 	db	0
  1201  016FF9  00                 	db	0
  1202  016FFA  00                 	db	0
  1203  016FFB  00                 	db	0
  1204  016FFC  00                 	db	0
  1205  016FFD  00                 	db	0
  1206  016FFE  00                 	db	0
  1207  016FFF  00                 	db	0
  1208  017000  00                 	db	0
  1209  017001  00                 	db	0
  1210  017002  00                 	db	0
  1211  017003  00                 	db	0
  1212  017004  00                 	db	0
  1213  017005  00                 	db	0
  1214  017006  00                 	db	0
  1215  017007  00                 	db	0
  1216  017008  00                 	db	0
  1217  017009  00                 	db	0
  1218  01700A  00                 	db	0
  1219  01700B  00                 	db	0
  1220  01700C  00                 	db	0
  1221  01700D  00                 	db	0
  1222  01700E  00                 	db	0
  1223  01700F  00                 	db	0
  1224  017010  00                 	db	0
  1225  017011  00                 	db	0
  1226  017012  00                 	db	0
  1227  017013  00                 	db	0
  1228  017014  00                 	db	0
  1229  017015  00                 	db	0
  1230  017016  00                 	db	0
  1231  017017  00                 	db	0
  1232  017018  00                 	db	0
  1233  017019  00                 	db	0
  1234  01701A  00                 	db	0
  1235  01701B  00                 	db	0
  1236  01701C  00                 	db	0
  1237  01701D  00                 	db	0
  1238  01701E  00                 	db	0
  1239  01701F  00                 	db	0
  1240  017020  00                 	db	0
  1241  017021  00                 	db	0
  1242  017022  00                 	db	0
  1243  017023  00                 	db	0
  1244  017024  00                 	db	0
  1245  017025  00                 	db	0
  1246  017026  00                 	db	0
  1247  017027  00                 	db	0
  1248  017028  00                 	db	0
  1249  017029  00                 	db	0
  1250  01702A  00                 	db	0
  1251  01702B  00                 	db	0
  1252  01702C  00                 	db	0
  1253  01702D  00                 	db	0
  1254  01702E  00                 	db	0
  1255  01702F  00                 	db	0
  1256  017030  00                 	db	0
  1257  017031  00                 	db	0
  1258  017032  00                 	db	0
  1259  017033  00                 	db	0
  1260  017034  00                 	db	0
  1261  017035  00                 	db	0
  1262  017036  00                 	db	0
  1263  017037  00                 	db	0
  1264  017038  00                 	db	0
  1265  017039  00                 	db	0
  1266  01703A  00                 	db	0
  1267  01703B  00                 	db	0
  1268  01703C  00                 	db	0
  1269  01703D  00                 	db	0
  1270  01703E  00                 	db	0
  1271  01703F  00                 	db	0
  1272  017040  00                 	db	0
  1273  017041  00                 	db	0
  1274  017042  00                 	db	0
  1275  017043  00                 	db	0
  1276  017044  00                 	db	0
  1277  017045  00                 	db	0
  1278  017046  00                 	db	0
  1279  017047  00                 	db	0
  1280  017048  00                 	db	0
  1281  017049  00                 	db	0
  1282  01704A  00                 	db	0
  1283  01704B  00                 	db	0
  1284  01704C  00                 	db	0
  1285  01704D  00                 	db	0
  1286  01704E  00                 	db	0
  1287  01704F  00                 	db	0
  1288  017050  00                 	db	0
  1289  017051  00                 	db	0
  1290  017052  00                 	db	0
  1291  017053  00                 	db	0
  1292  017054  00                 	db	0
  1293  017055  00                 	db	0
  1294  017056  00                 	db	0
  1295  017057  00                 	db	0
  1296  017058  00                 	db	0
  1297  017059  00                 	db	0
  1298  01705A  00                 	db	0
  1299  01705B  00                 	db	0
  1300  01705C  00                 	db	0
  1301  01705D  00                 	db	0
  1302  01705E  00                 	db	0
  1303  01705F  00                 	db	0
  1304  017060  00                 	db	0
  1305  017061  00                 	db	0
  1306  017062  00                 	db	0
  1307  017063  00                 	db	0
  1308  017064  00                 	db	0
  1309  017065  00                 	db	0
  1310  017066  00                 	db	0
  1311  017067  00                 	db	0
  1312  017068  00                 	db	0
  1313  017069  00                 	db	0
  1314                           
  1315                           ;initializer for _C
  1316  01706A  0000               	dw	0
  1317  01706C  0000               	dw	0
  1318  01706E  0000               	dw	0
  1319  017070  0000               	dw	0
  1320  017072  0000               	dw	0
  1321  017074  0000               	dw	0
  1322  017076  0000               	dw	0
  1323  017078  0000               	dw	0
  1324  01707A  0000               	dw	0
  1325  01707C  0000               	dw	0
  1326  01707E  0000               	dw	0
  1327  017080  0000               	dw	0
  1328  017082  0000               	dw	0
  1329  017084  0000               	dw	0
  1330  017086  0000               	dw	0
  1331  017088  0000               	dw	0
  1332  01708A  0000               	dw	0
  1333  01708C  0000               	dw	0
  1334  01708E  0000               	dw	0
  1335  017090  0000               	dw	0
  1336  017092  0000               	dw	0
  1337  017094  0000               	dw	0
  1338  017096  0000               	dw	0
  1339  017098  0000               	dw	0
  1340  01709A  0000               	dw	0
  1341  01709C  0000               	dw	0
  1342  01709E  0000               	dw	0
  1343  0170A0  0000               	dw	0
  1344  0170A2  0000               	dw	0
  1345  0170A4  0000               	dw	0
  1346  0170A6  0000               	dw	0
  1347  0170A8  0000               	dw	0
  1348  0170AA  0000               	dw	0
  1349  0170AC  0000               	dw	0
  1350  0170AE  0000               	dw	0
  1351  0170B0  0000               	dw	0
  1352  0170B2  0000               	dw	0
  1353  0170B4  0000               	dw	0
  1354  0170B6  0000               	dw	0
  1355  0170B8  0000               	dw	0
  1356  0170BA  0000               	dw	0
  1357  0170BC  0000               	dw	0
  1358  0170BE  0000               	dw	0
  1359  0170C0  0000               	dw	0
  1360  0170C2  0000               	dw	0
  1361  0170C4  0000               	dw	0
  1362  0170C6  0000               	dw	0
  1363  0170C8  0000               	dw	0
  1364  0170CA  0000               	dw	0
  1365  0170CC  0000               	dw	0
  1366  0170CE  0000               	dw	0
  1367  0170D0  0000               	dw	0
  1368  0170D2  0000               	dw	0
  1369  0170D4  0000               	dw	0
  1370  0170D6  0000               	dw	0
  1371  0170D8  0000               	dw	0
  1372  0170DA  0000               	dw	0
  1373  0170DC  0000               	dw	0
  1374  0170DE  0000               	dw	0
  1375  0170E0  0000               	dw	0
  1376  0170E2  0000               	dw	0
  1377  0170E4  0000               	dw	0
  1378  0170E6  0000               	dw	0
  1379  0170E8  0000               	dw	0
  1380  0170EA  0000               	dw	0
  1381  0170EC  0000               	dw	0
  1382  0170EE  0000               	dw	0
  1383  0170F0  0000               	dw	0
  1384  0170F2  0000               	dw	0
  1385  0170F4  0000               	dw	0
  1386  0170F6  0000               	dw	0
  1387  0170F8  42FA               	dw	17146
  1388  0170FA  0000               	dw	0
  1389  0170FC  0000               	dw	0
  1390  0170FE  0000               	dw	0
  1391  017100  0000               	dw	0
  1392  017102  0000               	dw	0
  1393  017104  0000               	dw	0
  1394  017106  0000               	dw	0
  1395  017108  0000               	dw	0
  1396  01710A  0000               	dw	0
  1397  01710C  0000               	dw	0
  1398  01710E  0000               	dw	0
  1399  017110  0000               	dw	0
  1400  017112  0000               	dw	0
  1401  017114  0000               	dw	0
  1402  017116  0000               	dw	0
  1403  017118  0000               	dw	0
  1404  01711A  0000               	dw	0
  1405  01711C  0000               	dw	0
  1406  01711E  0000               	dw	0
  1407  017120  0000               	dw	0
  1408  017122  00                 	db	0
  1409  017123  01                 	db	1
  1410  017124  0000               	dw	0
  1411  017126  0000               	dw	0
  1412  017128  0000               	dw	0
  1413  01712A  0000               	dw	0
  1414  01712C  0000               	dw	0
  1415  01712E  0000               	dw	0
  1416  017130  0000               	dw	0
  1417  017132  0000               	dw	0
  1418  017134  0000               	dw	0
  1419  017136  0000               	dw	0
  1420  017138  0000               	dw	0
  1421  01713A  00                 	db	0
  1422  01713B  00                 	db	0
  1423  01713C  0000               	dw	0
  1424  01713E  3F80               	dw	16256
  1425  017140  0000               	dw	0
  1426  017142  3F80               	dw	16256
  1427  017144  0000               	dw	0
  1428  017146  0000               	dw	0
  1429  017148  0000               	dw	0
  1430  01714A  0000               	dw	0
  1431  01714C  0000               	dw	0
  1432  01714E  0000               	dw	0
  1433  017150  0000               	dw	0
  1434  017152  0000               	dw	0
  1435  017154  0000               	dw	0
  1436  017156  0000               	dw	0
  1437  017158  00                 	db	0
  1438  017159  00                 	db	0
  1439  01715A  00                 	db	0
  1440  01715B  00                 	db	0
  1441  01715C  00                 	db	0
  1442  01715D  00                 	db	0
  1443  01715E  00                 	db	0
  1444  01715F  00                 	db	0
  1445  017160  00                 	db	0
  1446  017161  00                 	db	0
  1447  017162  00                 	db	0
  1448  017163  00                 	db	0
  1449  017164  00                 	db	0
  1450  017165  00                 	db	0
  1451  017166  00                 	db	0
  1452  017167  00                 	db	0
  1453  017168  00                 	db	0
  1454  017169  00                 	db	0
  1455  01716A  00                 	db	0
  1456  01716B  00                 	db	0
  1457  01716C  00                 	db	0
  1458  01716D  00                 	db	0
  1459  01716E  00                 	db	0
  1460  01716F  00                 	db	0
  1461  017170  00                 	db	0
  1462  017171  00                 	db	0
  1463  017172  00                 	db	0
  1464  017173  00                 	db	0
  1465  017174  00                 	db	0
  1466  017175  00                 	db	0
  1467  017176  00                 	db	0
  1468  017177  00                 	db	0
  1469  017178  00                 	db	0
  1470  017179  00                 	db	0
  1471  01717A  00                 	db	0
  1472  01717B  00                 	db	0
  1473  01717C  00                 	db	0
  1474  01717D  00                 	db	0
  1475  01717E  00                 	db	0
  1476  01717F  00                 	db	0
  1477  017180  00                 	db	0
  1478  017181  00                 	db	0
  1479  017182  00                 	db	0
  1480  017183  00                 	db	0
  1481  017184  00                 	db	0
  1482  017185  00                 	db	0
  1483  017186  00                 	db	0
  1484  017187  00                 	db	0
  1485  017188  00                 	db	0
  1486  017189  00                 	db	0
  1487  01718A  00                 	db	0
  1488  01718B  00                 	db	0
  1489  01718C  00                 	db	0
  1490  01718D  00                 	db	0
  1491  01718E  00                 	db	0
  1492  01718F  00                 	db	0
  1493  017190  00                 	db	0
  1494  017191  00                 	db	0
  1495  017192  00                 	db	0
  1496  017193  00                 	db	0
  1497  017194  0000               	dw	0
  1498  017196  0000               	dw	0
  1499  017198  0000               	dw	0
  1500  01719A  0000               	dw	0
  1501  01719C  0000               	dw	0
  1502  01719E  0000               	dw	0
  1503  0171A0  0000               	dw	0
  1504  0171A2  0000               	dw	0
  1505  0171A4  0000               	dw	0
  1506  0171A6  0000               	dw	0
  1507  0171A8  01                 	db	1
  1508  0171A9  00                 	db	0
  1509  0171AA  0000               	dw	0
  1510  0171AC  0000               	dw	0
  1511  0171AE  0000               	dw	0
  1512  0171B0  0000               	dw	0
  1513  0171B2  0000               	dw	0
  1514  0171B4  0000               	dw	0
  1515  0171B6  0000               	dw	0
  1516  0171B8  0000               	dw	0
  1517                           
  1518                           	psect	idataBANK0
  1519  01D4E2                     __pidataBANK0:
  1520                           	opt callstack 0
  1521                           
  1522                           ;initializer for _H
  1523  01D4E2  00                 	db	0
  1524  01D4E3  00                 	db	0
  1525  01D4E4  01                 	db	1
  1526  01D4E5  00                 	db	0
  1527  01D4E6  01                 	db	1
  1528  01D4E7  00                 	db	0
  1529  01D4E8  01                 	db	1
  1530  01D4E9  00                 	db	0
  1531  01D4EA  00                 	db	0
  1532                           
  1533                           	psect	idataBANK1
  1534  01B15E                     __pidataBANK1:
  1535                           	opt callstack 0
  1536                           
  1537                           ;initializer for stoa@F1166
  1538  01B15E  28                 	db	40
  1539  01B15F  6E                 	db	110
  1540  01B160  75                 	db	117
  1541  01B161  6C                 	db	108
  1542  01B162  6C                 	db	108
  1543  01B163  29                 	db	41
  1544  01B164  00                 	db	0
  1545                           
  1546                           ;initializer for _V
  1547  01B165  00                 	db	0
  1548  01B166  00                 	db	0
  1549  01B167  00                 	db	0
  1550  01B168  00                 	db	0
  1551  01B169  00                 	db	0
  1552  01B16A  00                 	db	0
  1553  01B16B  00                 	db	0
  1554  01B16C  00                 	db	0
  1555  01B16D  00                 	db	0
  1556  01B16E  00                 	db	0
  1557  01B16F  00                 	db	0
  1558  01B170  00                 	db	0
  1559  01B171  00                 	db	0
  1560  01B172  00                 	db	0
  1561  01B173  00                 	db	0
  1562  01B174  00                 	db	0
  1563  01B175  00                 	db	0
  1564  01B176  00                 	db	0
  1565  01B177  00                 	db	0
  1566  01B178  00                 	db	0
  1567  01B179  00                 	db	0
  1568  01B17A  00                 	db	0
  1569  01B17B  00                 	db	0
  1570  01B17C  00                 	db	0
  1571  01B17D  00                 	db	0
  1572  01B17E  00                 	db	0
  1573  01B17F  00                 	db	0
  1574  01B180  00                 	db	0
  1575  01B181  00                 	db	0
  1576  01B182  00                 	db	0
  1577  01B183  00                 	db	0
  1578  01B184  00                 	db	0
  1579  01B185  00                 	db	0
  1580  01B186  00                 	db	0
  1581  01B187  00                 	db	0
  1582  01B188  00                 	db	0
  1583  01B189  00                 	db	0
  1584  01B18A  00                 	db	0
  1585  01B18B  00                 	db	0
  1586  01B18C  00                 	db	0
  1587  01B18D  00                 	db	0
  1588  01B18E  00                 	db	0
  1589  01B18F  00                 	db	0
  1590  01B190  00                 	db	0
  1591  01B191  00                 	db	0
  1592  01B192  00                 	db	0
  1593  01B193  00                 	db	0
  1594  01B194  00                 	db	0
  1595  01B195  00                 	db	0
  1596  01B196  00                 	db	0
  1597  01B197  00                 	db	0
  1598  01B198  00                 	db	0
  1599  01B199  00                 	db	0
  1600  01B19A  00                 	db	0
  1601  01B19B  00                 	db	0
  1602  01B19C  00                 	db	0
  1603  01B19D  00                 	db	0
  1604  01B19E  00                 	db	0
  1605  01B19F  00                 	db	0
  1606  01B1A0  00                 	db	0
  1607  01B1A1  00                 	db	0
  1608  01B1A2  00                 	db	0
  1609  01B1A3  00                 	db	0
  1610  01B1A4  00                 	db	0
  1611  01B1A5  00                 	db	0
  1612  01B1A6  00                 	db	0
  1613  01B1A7  00                 	db	0
  1614  01B1A8  00                 	db	0
  1615  01B1A9  00                 	db	0
  1616  01B1AA  00                 	db	0
  1617  01B1AB  00                 	db	0
  1618  01B1AC  00                 	db	0
  1619  01B1AD  00                 	db	0
  1620  01B1AE  00                 	db	0
  1621  01B1AF  00                 	db	0
  1622  01B1B0  00                 	db	0
  1623  01B1B1  00                 	db	0
  1624  01B1B2  00                 	db	0
  1625  01B1B3  00                 	db	0
  1626  01B1B4  00                 	db	0
  1627  01B1B5  00                 	db	0
  1628  01B1B6  00                 	db	0
  1629  01B1B7  00                 	db	0
  1630  01B1B8  00                 	db	0
  1631  01B1B9  00                 	db	0
  1632  01B1BA  00                 	db	0
  1633  01B1BB  00                 	db	0
  1634  01B1BC  00                 	db	0
  1635  01B1BD  00                 	db	0
  1636  01B1BE  00                 	db	0
  1637  01B1BF  00                 	db	0
  1638  01B1C0  00                 	db	0
  1639  01B1C1  00                 	db	0
  1640  01B1C2  00                 	db	0
  1641  01B1C3  00                 	db	0
  1642  01B1C4  00                 	db	0
  1643  01B1C5  00                 	db	0
  1644  01B1C6  00                 	db	0
  1645  01B1C7  00                 	db	0
  1646  01B1C8  00                 	db	0
  1647  01B1C9  00                 	db	0
  1648  01B1CA  00                 	db	0
  1649  01B1CB  00                 	db	0
  1650  01B1CC  00                 	db	0
  1651  01B1CD  00                 	db	0
  1652  01B1CE  00                 	db	0
  1653  01B1CF  00                 	db	0
  1654  01B1D0  00                 	db	0
  1655  01B1D1  00                 	db	0
  1656  01B1D2  00                 	db	0
  1657  01B1D3  00                 	db	0
  1658  01B1D4  00                 	db	0
  1659  01B1D5  00                 	db	0
  1660  01B1D6  00                 	db	0
  1661  01B1D7  00                 	db	0
  1662  01B1D8  00                 	db	0
  1663  01B1D9  00                 	db	0
  1664  01B1DA  00                 	db	0
  1665  01B1DB  00                 	db	0
  1666  01B1DC  00                 	db	0
  1667  01B1DD  00                 	db	0
  1668  01B1DE  00                 	db	0
  1669  01B1DF  00                 	db	0
  1670  01B1E0  00                 	db	0
  1671  01B1E1  00                 	db	0
  1672  01B1E2  00                 	db	0
  1673  01B1E3  00                 	db	0
  1674  01B1E4  00                 	db	0
  1675  01B1E5  00                 	db	0
  1676  01B1E6  0000               	dw	0
  1677  01B1E8  0000               	dw	0
  1678  01B1EA  0000               	dw	0
  1679  01B1EC  0000               	dw	0
  1680  01B1EE  00                 	db	0
  1681  01B1EF  00                 	db	0
  1682  01B1F0  00                 	db	0
  1683  01B1F1  00                 	db	0
  1684  01B1F2  00                 	db	0
  1685  01B1F3  00                 	db	0
  1686  01B1F4  0000               	dw	0
  1687  01B1F6  0000               	dw	0
  1688  01B1F8  0000               	dw	0
  1689  01B1FA  0000               	dw	0
  1690  01B1FC  0000               	dw	0
  1691  01B1FE  0000               	dw	0
  1692  01B200  00                 	db	0
  1693  01B201  00                 	db	0
  1694  01B202  00                 	db	0
  1695  01B203  00                 	db	0
  1696  01B204  00                 	db	0
  1697  01B205  00                 	db	0
  1698  01B206  00                 	db	0
  1699  01B207  00                 	db	0
  1700  01B208  00                 	db	0
  1701  01B209  00                 	db	0
  1702  01B20A  00                 	db	0
  1703  01B20B  0000               	dw	0
  1704  01B20D  0000               	dw	0
  1705  01B20F  2D                 	db	45
  1706  01B210  00                 	db	0
  1707  01B211  00                 	db	0
  1708  01B212  00                 	db	0
  1709  01B213  00                 	db	0
  1710  01B214  00                 	db	0
  1711  01B215  0000               	dw	0
  1712  01B217  0000               	dw	0
  1713  01B219  0000               	dw	0
  1714  01B21B  0000               	dw	0
  1715  01B21D  0000               	dw	0
  1716  01B21F  0000               	dw	0
  1717  01B221  0000               	dw	0
  1718  01B223  0000               	dw	0
  1719                           
  1720                           	psect	idataBANK2
  1721  01B66C                     __pidataBANK2:
  1722                           	opt callstack 0
  1723                           
  1724                           ;initializer for _R
  1725  01B66C  0000               	dw	0
  1726  01B66E  0000               	dw	0
  1727  01B670  0000               	dw	0
  1728  01B672  0000               	dw	0
  1729  01B674  0000               	dw	0
  1730  01B676  0000               	dw	0
  1731  01B678  0000               	dw	0
  1732  01B67A  0000               	dw	0
  1733  01B67C  0000               	dw	0
  1734  01B67E  0000               	dw	0
  1735  01B680  0000               	dw	0
  1736  01B682  0000               	dw	0
  1737  01B684  0000               	dw	0
  1738  01B686  0000               	dw	0
  1739  01B688  0000               	dw	0
  1740  01B68A  0000               	dw	0
  1741  01B68C  0000               	dw	0
  1742  01B68E  0000               	dw	0
  1743  01B690  0000               	dw	0
  1744  01B692  0F62               	dw	3938
  1745  01B694  0FA4               	dw	4004
  1746  01B696  89A0               	dw	35232
  1747  01B698  3DB0               	dw	15792
  1748  01B69A  DEA4               	dw	56996
  1749  01B69C  3D13               	dw	15635
  1750  01B69E  00                 	db	0
  1751  01B69F  0000               	dw	0
  1752  01B6A1  00                 	db	0
  1753  01B6A2  00                 	db	0
  1754  01B6A3  0000               	dw	0
  1755  01B6A5  0000               	dw	0
  1756  01B6A7  0000               	dw	0
  1757  01B6A9  0000               	dw	0
  1758  01B6AB  0000               	dw	0
  1759  01B6AD  0000               	dw	0
  1760  01B6AF  0000               	dw	0
  1761  01B6B1  0000               	dw	0
  1762  01B6B3  0000               	dw	0
  1763  01B6B5  0000               	dw	0
  1764  01B6B7  0000               	dw	0
  1765  01B6B9  00                 	db	0
  1766  01B6BA  00                 	db	0
  1767  01B6BB  0000               	dw	0
  1768  01B6BD  0000               	dw	0
  1769  01B6BF  0000               	dw	0
  1770  01B6C1  0000               	dw	0
  1771  01B6C3  0000               	dw	0
  1772  01B6C5  0000               	dw	0
  1773  01B6C7  0000               	dw	0
  1774  01B6C9  0000               	dw	0
  1775  01B6CB  0000               	dw	0
  1776  01B6CD  0000               	dw	0
  1777  01B6CF  0000               	dw	0
  1778  01B6D1  0000               	dw	0
  1779  01B6D3  0000               	dw	0
  1780  01B6D5  0000               	dw	0
  1781  01B6D7  0000               	dw	0
  1782  01B6D9  0000               	dw	0
  1783  01B6DB  0000               	dw	0
  1784  01B6DD  0000               	dw	0
  1785  01B6DF  0000               	dw	0
  1786  01B6E1  0000               	dw	0
  1787  01B6E3  0000               	dw	0
  1788  01B6E5  0000               	dw	0
  1789  01B6E7  0000               	dw	0
  1790  01B6E9  0000               	dw	0
  1791  01B6EB  0000               	dw	0
  1792  01B6ED  0000               	dw	0
  1793  01B6EF  0000               	dw	0
  1794  01B6F1  0000               	dw	0
  1795  01B6F3  0000               	dw	0
  1796  01B6F5  0000               	dw	0
  1797  01B6F7  0000               	dw	0
  1798  01B6F9  0000               	dw	0
  1799  01B6FB  0000               	dw	0
  1800  01B6FD  0000               	dw	0
  1801  01B6FF  0000               	dw	0
  1802  01B701  0000               	dw	0
  1803  01B703  0000               	dw	0
  1804  01B705  0000               	dw	0
  1805  01B707  0000               	dw	0
  1806  01B709  0000               	dw	0
  1807  01B70B  0000               	dw	0
  1808  01B70D  0000               	dw	0
  1809  01B70F  0000               	dw	0
  1810  01B711  0000               	dw	0
  1811  01B713  00                 	db	0
  1812  01B714  1957               	dw	6487
  1813  01B716  42                 	db	66
  1814                           
  1815                           	psect	mediumconst
  1816  00F8A2                     __pmediumconst:
  1817                           	opt callstack 0
  1818  00F8A2  00                 	db	0
  1819  00F8A3                     _BVSOC_TABLE:
  1820                           	opt callstack 0
  1821  00F8A3  59D8               	dw	23000
  1822  00F8A5  0000               	dw	0
  1823  00F8A7  0005               	dw	5
  1824  00F8A9  0000               	dw	0
  1825  00F8AB  5B68               	dw	23400
  1826  00F8AD  0000               	dw	0
  1827  00F8AF  000A               	dw	10
  1828  00F8B1  0000               	dw	0
  1829  00F8B3  5C30               	dw	23600
  1830  00F8B5  0000               	dw	0
  1831  00F8B7  0014               	dw	20
  1832  00F8B9  0000               	dw	0
  1833  00F8BB  5E38               	dw	24120
  1834  00F8BD  0000               	dw	0
  1835  00F8BF  0019               	dw	25
  1836  00F8C1  0000               	dw	0
  1837  00F8C3  5E88               	dw	24200
  1838  00F8C5  0000               	dw	0
  1839  00F8C7  001E               	dw	30
  1840  00F8C9  0000               	dw	0
  1841  00F8CB  5F78               	dw	24440
  1842  00F8CD  0000               	dw	0
  1843  00F8CF  0028               	dw	40
  1844  00F8D1  0000               	dw	0
  1845  00F8D3  5FDC               	dw	24540
  1846  00F8D5  0000               	dw	0
  1847  00F8D7  002D               	dw	45
  1848  00F8D9  0000               	dw	0
  1849  00F8DB  6018               	dw	24600
  1850  00F8DD  0000               	dw	0
  1851  00F8DF  0032               	dw	50
  1852  00F8E1  0000               	dw	0
  1853  00F8E3  6046               	dw	24646
  1854  00F8E5  0000               	dw	0
  1855  00F8E7  0035               	dw	53
  1856  00F8E9  0000               	dw	0
  1857  00F8EB  607C               	dw	24700
  1858  00F8ED  0000               	dw	0
  1859  00F8EF  0037               	dw	55
  1860  00F8F1  0000               	dw	0
  1861  00F8F3  60AE               	dw	24750
  1862  00F8F5  0000               	dw	0
  1863  00F8F7  0039               	dw	57
  1864  00F8F9  0000               	dw	0
  1865  00F8FB  60E0               	dw	24800
  1866  00F8FD  0000               	dw	0
  1867  00F8FF  003C               	dw	60
  1868  00F901  0000               	dw	0
  1869  00F903  6112               	dw	24850
  1870  00F905  0000               	dw	0
  1871  00F907  003F               	dw	63
  1872  00F909  0000               	dw	0
  1873  00F90B  615D               	dw	24925
  1874  00F90D  0000               	dw	0
  1875  00F90F  0043               	dw	67
  1876  00F911  0000               	dw	0
  1877  00F913  61A8               	dw	25000
  1878  00F915  0000               	dw	0
  1879  00F917  0046               	dw	70
  1880  00F919  0000               	dw	0
  1881  00F91B  61BC               	dw	25020
  1882  00F91D  0000               	dw	0
  1883  00F91F  0048               	dw	72
  1884  00F921  0000               	dw	0
  1885  00F923  61D0               	dw	25040
  1886  00F925  0000               	dw	0
  1887  00F927  004B               	dw	75
  1888  00F929  0000               	dw	0
  1889  00F92B  61DA               	dw	25050
  1890  00F92D  0000               	dw	0
  1891  00F92F  0050               	dw	80
  1892  00F931  0000               	dw	0
  1893  00F933  61E4               	dw	25060
  1894  00F935  0000               	dw	0
  1895  00F937  0055               	dw	85
  1896  00F939  0000               	dw	0
  1897  00F93B  61F8               	dw	25080
  1898  00F93D  0000               	dw	0
  1899  00F93F  005A               	dw	90
  1900  00F941  0000               	dw	0
  1901  00F943  6208               	dw	25096
  1902  00F945  0000               	dw	0
  1903  00F947  005C               	dw	92
  1904  00F949  0000               	dw	0
  1905  00F94B  6222               	dw	25122
  1906  00F94D  0000               	dw	0
  1907  00F94F  005D               	dw	93
  1908  00F951  0000               	dw	0
  1909  00F953  6234               	dw	25140
  1910  00F955  0000               	dw	0
  1911  00F957  005F               	dw	95
  1912  00F959  0000               	dw	0
  1913  00F95B  6248               	dw	25160
  1914  00F95D  0000               	dw	0
  1915  00F95F  0061               	dw	97
  1916  00F961  0000               	dw	0
  1917  00F963  625C               	dw	25180
  1918  00F965  0000               	dw	0
  1919  00F967  0064               	dw	100
  1920  00F969  0000               	dw	0
  1921  00F96B  6784               	dw	26500
  1922  00F96D  0000               	dw	0
  1923  00F96F  0062               	dw	98
  1924  00F971  0000               	dw	0
  1925  00F973                     __end_of_BVSOC_TABLE:
  1926                           	opt callstack 0
  1927  00F973                     _T:
  1928                           	opt callstack 0
  1929  00F973  63                 	db	99
  1930  00F974  6F                 	db	111
  1931  00F975  6D                 	db	109
  1932  00F976  6D                 	db	109
  1933  00F977  61                 	db	97
  1934  00F978  6E                 	db	110
  1935  00F979  64                 	db	100
  1936  00F97A  73                 	db	115
  1937  00F97B  20                 	db	32
  1938  00F97C  31                 	db	49
  1939  00F97D  00                 	db	0
  1940  00F97E  00                 	db	0
  1941  00F97F  00                 	db	0
  1942  00F980  00                 	db	0
  1943  00F981  00                 	db	0
  1944  00F982  00                 	db	0
  1945  00F983  00                 	db	0
  1946  00F984  00                 	db	0
  1947  00F985  64                 	db	100
  1948  00F986  69                 	db	105
  1949  00F987  73                 	db	115
  1950  00F988  70                 	db	112
  1951  00F989  6C                 	db	108
  1952  00F98A  61                 	db	97
  1953  00F98B  79                 	db	121
  1954  00F98C  73                 	db	115
  1955  00F98D  20                 	db	32
  1956  00F98E  31                 	db	49
  1957  00F98F  00                 	db	0
  1958  00F990  00                 	db	0
  1959  00F991  00                 	db	0
  1960  00F992  00                 	db	0
  1961  00F993  00                 	db	0
  1962  00F994  00                 	db	0
  1963  00F995  00                 	db	0
  1964  00F996  00                 	db	0
  1965  00F997  63                 	db	99
  1966  00F998  6F                 	db	111
  1967  00F999  6D                 	db	109
  1968  00F99A  6D                 	db	109
  1969  00F99B  61                 	db	97
  1970  00F99C  6E                 	db	110
  1971  00F99D  64                 	db	100
  1972  00F99E  73                 	db	115
  1973  00F99F  20                 	db	32
  1974  00F9A0  32                 	db	50
  1975  00F9A1  00                 	db	0
  1976  00F9A2  00                 	db	0
  1977  00F9A3  00                 	db	0
  1978  00F9A4  00                 	db	0
  1979  00F9A5  00                 	db	0
  1980  00F9A6  00                 	db	0
  1981  00F9A7  00                 	db	0
  1982  00F9A8  00                 	db	0
  1983  00F9A9  64                 	db	100
  1984  00F9AA  69                 	db	105
  1985  00F9AB  73                 	db	115
  1986  00F9AC  70                 	db	112
  1987  00F9AD  6C                 	db	108
  1988  00F9AE  61                 	db	97
  1989  00F9AF  79                 	db	121
  1990  00F9B0  73                 	db	115
  1991  00F9B1  20                 	db	32
  1992  00F9B2  32                 	db	50
  1993  00F9B3  00                 	db	0
  1994  00F9B4  00                 	db	0
  1995  00F9B5  00                 	db	0
  1996  00F9B6  00                 	db	0
  1997  00F9B7  00                 	db	0
  1998  00F9B8  00                 	db	0
  1999  00F9B9  00                 	db	0
  2000  00F9BA  00                 	db	0
  2001  00F9BB  63                 	db	99
  2002  00F9BC  6F                 	db	111
  2003  00F9BD  6D                 	db	109
  2004  00F9BE  6D                 	db	109
  2005  00F9BF  61                 	db	97
  2006  00F9C0  6E                 	db	110
  2007  00F9C1  64                 	db	100
  2008  00F9C2  73                 	db	115
  2009  00F9C3  20                 	db	32
  2010  00F9C4  33                 	db	51
  2011  00F9C5  00                 	db	0
  2012  00F9C6  00                 	db	0
  2013  00F9C7  00                 	db	0
  2014  00F9C8  00                 	db	0
  2015  00F9C9  00                 	db	0
  2016  00F9CA  00                 	db	0
  2017  00F9CB  00                 	db	0
  2018  00F9CC  00                 	db	0
  2019  00F9CD  64                 	db	100
  2020  00F9CE  69                 	db	105
  2021  00F9CF  73                 	db	115
  2022  00F9D0  70                 	db	112
  2023  00F9D1  6C                 	db	108
  2024  00F9D2  61                 	db	97
  2025  00F9D3  79                 	db	121
  2026  00F9D4  73                 	db	115
  2027  00F9D5  20                 	db	32
  2028  00F9D6  33                 	db	51
  2029  00F9D7  00                 	db	0
  2030  00F9D8  00                 	db	0
  2031  00F9D9  00                 	db	0
  2032  00F9DA  00                 	db	0
  2033  00F9DB  00                 	db	0
  2034  00F9DC  00                 	db	0
  2035  00F9DD  00                 	db	0
  2036  00F9DE  00                 	db	0
  2037  00F9DF  63                 	db	99
  2038  00F9E0  6F                 	db	111
  2039  00F9E1  6D                 	db	109
  2040  00F9E2  6D                 	db	109
  2041  00F9E3  61                 	db	97
  2042  00F9E4  6E                 	db	110
  2043  00F9E5  64                 	db	100
  2044  00F9E6  73                 	db	115
  2045  00F9E7  20                 	db	32
  2046  00F9E8  34                 	db	52
  2047  00F9E9  00                 	db	0
  2048  00F9EA  00                 	db	0
  2049  00F9EB  00                 	db	0
  2050  00F9EC  00                 	db	0
  2051  00F9ED  00                 	db	0
  2052  00F9EE  00                 	db	0
  2053  00F9EF  00                 	db	0
  2054  00F9F0  00                 	db	0
  2055  00F9F1  64                 	db	100
  2056  00F9F2  69                 	db	105
  2057  00F9F3  73                 	db	115
  2058  00F9F4  70                 	db	112
  2059  00F9F5  6C                 	db	108
  2060  00F9F6  61                 	db	97
  2061  00F9F7  79                 	db	121
  2062  00F9F8  73                 	db	115
  2063  00F9F9  20                 	db	32
  2064  00F9FA  34                 	db	52
  2065  00F9FB  00                 	db	0
  2066  00F9FC  00                 	db	0
  2067  00F9FD  00                 	db	0
  2068  00F9FE  00                 	db	0
  2069  00F9FF  00                 	db	0
  2070  00FA00  00                 	db	0
  2071  00FA01  00                 	db	0
  2072  00FA02  00                 	db	0
  2073  00FA03                     __end_of_T:
  2074                           	opt callstack 0
  2075  00FA03                     _spin:
  2076                           	opt callstack 0
  2077  00FA03  7C                 	db	124
  2078  00FA04  7C                 	db	124
  2079  00FA05  2F                 	db	47
  2080  00FA06  2F                 	db	47
  2081  00FA07  2D                 	db	45
  2082  00FA08  2D                 	db	45
  2083  00FA09  00                 	db	0
  2084  00FA0A  00                 	db	0
  2085  00FA0B  00                 	db	0
  2086  00FA0C  00                 	db	0
  2087  00FA0D  00                 	db	0
  2088  00FA0E  00                 	db	0
  2089  00FA0F  00                 	db	0
  2090  00FA10  00                 	db	0
  2091  00FA11  00                 	db	0
  2092  00FA12  00                 	db	0
  2093  00FA13  00                 	db	0
  2094  00FA14  00                 	db	0
  2095  00FA15  00                 	db	0
  2096  00FA16  00                 	db	0
  2097  00FA17  7C                 	db	124
  2098  00FA18  7C                 	db	124
  2099  00FA19  2F                 	db	47
  2100  00FA1A  2F                 	db	47
  2101  00FA1B  2D                 	db	45
  2102  00FA1C  2D                 	db	45
  2103  00FA1D  5C                 	db	92
  2104  00FA1E  5C                 	db	92
  2105  00FA1F  00                 	db	0
  2106  00FA20  00                 	db	0
  2107  00FA21  00                 	db	0
  2108  00FA22  00                 	db	0
  2109  00FA23  00                 	db	0
  2110  00FA24  00                 	db	0
  2111  00FA25  00                 	db	0
  2112  00FA26  00                 	db	0
  2113  00FA27  00                 	db	0
  2114  00FA28  00                 	db	0
  2115  00FA29  00                 	db	0
  2116  00FA2A  00                 	db	0
  2117  00FA2B  4F                 	db	79
  2118  00FA2C  4F                 	db	79
  2119  00FA2D  4F                 	db	79
  2120  00FA2E  4F                 	db	79
  2121  00FA2F  4F                 	db	79
  2122  00FA30  4F                 	db	79
  2123  00FA31  2D                 	db	45
  2124  00FA32  2D                 	db	45
  2125  00FA33  5F                 	db	95
  2126  00FA34  5F                 	db	95
  2127  00FA35  2D                 	db	45
  2128  00FA36  00                 	db	0
  2129  00FA37  00                 	db	0
  2130  00FA38  00                 	db	0
  2131  00FA39  00                 	db	0
  2132  00FA3A  00                 	db	0
  2133  00FA3B  00                 	db	0
  2134  00FA3C  00                 	db	0
  2135  00FA3D  00                 	db	0
  2136  00FA3E  00                 	db	0
  2137  00FA3F  76                 	db	118
  2138  00FA40  76                 	db	118
  2139  00FA41  3C                 	db	60
  2140  00FA42  3C                 	db	60
  2141  00FA43  5E                 	db	94
  2142  00FA44  5E                 	db	94
  2143  00FA45  3E                 	db	62
  2144  00FA46  3E                 	db	62
  2145  00FA47  00                 	db	0
  2146  00FA48  00                 	db	0
  2147  00FA49  00                 	db	0
  2148  00FA4A  00                 	db	0
  2149  00FA4B  00                 	db	0
  2150  00FA4C  00                 	db	0
  2151  00FA4D  00                 	db	0
  2152  00FA4E  00                 	db	0
  2153  00FA4F  00                 	db	0
  2154  00FA50  00                 	db	0
  2155  00FA51  00                 	db	0
  2156  00FA52  00                 	db	0
  2157  00FA53  2E                 	db	46
  2158  00FA54  2E                 	db	46
  2159  00FA55  2A                 	db	42
  2160  00FA56  2A                 	db	42
  2161  00FA57  78                 	db	120
  2162  00FA58  23                 	db	35
  2163  00FA59  78                 	db	120
  2164  00FA5A  23                 	db	35
  2165  00FA5B  58                 	db	88
  2166  00FA5C  58                 	db	88
  2167  00FA5D  7C                 	db	124
  2168  00FA5E  7C                 	db	124
  2169  00FA5F  2D                 	db	45
  2170  00FA60  2D                 	db	45
  2171  00FA61  00                 	db	0
  2172  00FA62  00                 	db	0
  2173  00FA63  00                 	db	0
  2174  00FA64  00                 	db	0
  2175  00FA65  00                 	db	0
  2176  00FA66  00                 	db	0
  2177  00FA67  2E                 	db	46
  2178  00FA68  2E                 	db	46
  2179  00FA69  6F                 	db	111
  2180  00FA6A  6F                 	db	111
  2181  00FA6B  4F                 	db	79
  2182  00FA6C  4F                 	db	79
  2183  00FA6D  6F                 	db	111
  2184  00FA6E  6F                 	db	111
  2185  00FA6F  00                 	db	0
  2186  00FA70  00                 	db	0
  2187  00FA71  00                 	db	0
  2188  00FA72  00                 	db	0
  2189  00FA73  00                 	db	0
  2190  00FA74  00                 	db	0
  2191  00FA75  00                 	db	0
  2192  00FA76  00                 	db	0
  2193  00FA77  00                 	db	0
  2194  00FA78  00                 	db	0
  2195  00FA79  00                 	db	0
  2196  00FA7A  00                 	db	0
  2197  00FA7B                     __end_of_spin:
  2198                           	opt callstack 0
  2199  00FA7B  0000               	dw	0
  2200  00FA7D  3F80               	dw	16256
  2201  00FA7F  0000               	dw	0
  2202  00FA81  3FC0               	dw	16320
  2203  00FA83                     __end_of_bp:
  2204                           	opt callstack 0
  2205  00FA83  AA00               	dw	43520
  2206  00FA85  3FB8               	dw	16312
  2207  00FA87                     __end_of_ivln2_h:
  2208                           	opt callstack 0
  2209  00FA87  23C6               	dw	9158
  2210  00FA89  B8F6               	dw	47350
  2211  00FA8B                     __end_of_cp_l:
  2212                           	opt callstack 0
  2213  00FA8B  4000               	dw	16384
  2214  00FA8D  3F76               	dw	16246
  2215  00FA8F                     __end_of_cp_h:
  2216                           	opt callstack 0
  2217  0000                     _IVTADL	set	14493
  2218  0000                     _IVTADH	set	14494
  2219  0000                     _IVTADU	set	14495
  2220  0000                     _CRCDATH	set	14689
  2221  0000                     _CRCDATL	set	14688
  2222  0000                     _CRCCON0bits	set	14696
  2223  0000                     _CRCCON1bits	set	14697
  2224  0000                     _CRCXORL	set	14694
  2225  0000                     _CRCXORH	set	14695
  2226  0000                     _SCANTRIG	set	14717
  2227  0000                     _SCANHADRL	set	14713
  2228  0000                     _SCANHADRH	set	14714
  2229  0000                     _SCANHADRU	set	14715
  2230  0000                     _SCANLADRL	set	14710
  2231  0000                     _SCANLADRH	set	14711
  2232  0000                     _SCANLADRU	set	14712
  2233  0000                     _SCANCON0	set	14716
  2234  0000                     _CRCACCH	set	14691
  2235  0000                     _CRCACCL	set	14690
  2236  0000                     _CRCCON1	set	14697
  2237  0000                     _CRCCON0	set	14696
  2238  0000                     _PIR6bits	set	14758
  2239  0000                     _PIR4bits	set	14756
  2240  0000                     _PIE8bits	set	14744
  2241  0000                     _PIR8bits	set	14760
  2242  0000                     _PIR0bits	set	14752
  2243  0000                     _NVMCON2	set	14822
  2244  0000                     _NVMDAT	set	14819
  2245  0000                     _NVMADRL	set	14816
  2246  0000                     _NVMADRH	set	14817
  2247  0000                     _NVMCON1bits	set	14821
  2248  0000                     _SCANPR	set	14839
  2249  0000                     _DMA2PR	set	14836
  2250  0000                     _DMA1PR	set	14835
  2251  0000                     _MAINPR	set	14834
  2252  0000                     _ISRPR	set	14833
  2253  0000                     _PIE2bits	set	14738
  2254  0000                     _PIR2bits	set	14754
  2255  0000                     _PIE9bits	set	14745
  2256  0000                     _PIR9bits	set	14761
  2257  0000                     _PIE6bits	set	14742
  2258  0000                     _PIE3bits	set	14739
  2259  0000                     _PMD7	set	14791
  2260  0000                     _PMD6	set	14790
  2261  0000                     _PMD5	set	14789
  2262  0000                     _PMD4	set	14788
  2263  0000                     _PMD3	set	14787
  2264  0000                     _PMD2	set	14786
  2265  0000                     _PMD1	set	14785
  2266  0000                     _PMD0	set	14784
  2267  0000                     _OSCTUNE	set	14814
  2268  0000                     _OSCFRQ	set	14815
  2269  0000                     _OSCEN	set	14813
  2270  0000                     _OSCCON3	set	14811
  2271  0000                     _OSCCON1	set	14809
  2272  0000                     _IPR8bits	set	14728
  2273  0000                     _IPR9bits	set	14729
  2274  0000                     _IPR5bits	set	14725
  2275  0000                     _IPR1bits	set	14721
  2276  0000                     _IPR3bits	set	14723
  2277  0000                     _IPR6bits	set	14726
  2278  0000                     _IPR2bits	set	14722
  2279  0000                     _PIE5bits	set	14741
  2280  0000                     _PIE1bits	set	14737
  2281  0000                     _PIR5bits	set	14757
  2282  0000                     _PIR1bits	set	14753
  2283  0000                     _PLLR	set	118496
  2284  0000                     _SPI1SDIPPS	set	15071
  2285  0000                     _U1RXPPS	set	15077
  2286  0000                     _RC6PPS	set	14870
  2287  0000                     _RC5PPS	set	14869
  2288  0000                     _INT1PPS	set	15041
  2289  0000                     _RD1PPS	set	14873
  2290  0000                     _INT0PPS	set	15040
  2291  0000                     _RC3PPS	set	14867
  2292  0000                     _RB6PPS	set	14862
  2293  0000                     _SPI1SCKPPS	set	15070
  2294  0000                     _U2RXPPS	set	15080
  2295  0000                     _SLRCONF	set	14995
  2296  0000                     _SLRCONE	set	14979
  2297  0000                     _SLRCOND	set	14963
  2298  0000                     _SLRCONC	set	14947
  2299  0000                     _SLRCONB	set	14931
  2300  0000                     _SLRCONA	set	14915
  2301  0000                     _ODCOND	set	14962
  2302  0000                     _ODCONC	set	14946
  2303  0000                     _ODCONB	set	14930
  2304  0000                     _ODCONA	set	14914
  2305  0000                     _ODCONF	set	14994
  2306  0000                     _ODCONE	set	14978
  2307  0000                     _WPUC	set	14945
  2308  0000                     _WPUA	set	14913
  2309  0000                     _WPUB	set	14929
  2310  0000                     _WPUE	set	14977
  2311  0000                     _WPUF	set	14993
  2312  0000                     _WPUD	set	14961
  2313  0000                     _ANSELA	set	14912
  2314  0000                     _ANSELF	set	14992
  2315  0000                     _ANSELE	set	14976
  2316  0000                     _ANSELB	set	14928
  2317  0000                     _ANSELC	set	14944
  2318  0000                     _ANSELD	set	14960
  2319  0000                     _DMA2SSA	set	15321
  2320  0000                     _DMA1SSA	set	15353
  2321  0000                     _DMA2DSZ	set	15310
  2322  0000                     _DMA2SSZ	set	15319
  2323  0000                     _DMA2DSA	set	15312
  2324  0000                     _DMA1DSZ	set	15342
  2325  0000                     _DMA1SSZ	set	15351
  2326  0000                     _DMA1DSA	set	15344
  2327  0000                     _DMA2CON0bits	set	15324
  2328  0000                     _DMA2CON1bits	set	15325
  2329  0000                     _DMA1CON0bits	set	15356
  2330  0000                     _DMA1CON1bits	set	15357
  2331  0000                     _DMA2CON0	set	15324
  2332  0000                     _DMA2AIRQ	set	15326
  2333  0000                     _DMA2SIRQ	set	15327
  2334  0000                     _DMA2CON1	set	15325
  2335  0000                     _DMA1CON0	set	15356
  2336  0000                     _DMA1AIRQ	set	15358
  2337  0000                     _DMA1SIRQ	set	15359
  2338  0000                     _DMA1CON1	set	15357
  2339  0000                     _CLKRCON	set	15589
  2340  0000                     _CLKRCLK	set	15590
  2341  0000                     _SPI1CON1bits	set	15637
  2342  0000                     _SPI1STATUSbits	set	15639
  2343  0000                     _SPI1INTFbits	set	15642
  2344  0000                     _SPI1CON0bits	set	15636
  2345  0000                     _SPI1RXB	set	15632
  2346  0000                     _SPI1TXB	set	15633
  2347  0000                     _SPI1TCNTL	set	15634
  2348  0000                     _SPI1CON0	set	15636
  2349  0000                     _SPI1CLK	set	15644
  2350  0000                     _SPI1BAUD	set	15641
  2351  0000                     _SPI1CON2	set	15638
  2352  0000                     _SPI1CON1	set	15637
  2353  0000                     _U2RXB	set	15824
  2354  0000                     _U2TXB	set	15826
  2355  0000                     _U2ERRIE	set	15842
  2356  0000                     _U2ERRIR	set	15841
  2357  0000                     _U2UIR	set	15840
  2358  0000                     _U2FIFO	set	15839
  2359  0000                     _U2BRGH	set	15838
  2360  0000                     _U2BRGL	set	15837
  2361  0000                     _U2CON2	set	15836
  2362  0000                     _U2CON1	set	15835
  2363  0000                     _U2CON0	set	15834
  2364  0000                     _U2P3L	set	15832
  2365  0000                     _U2P2L	set	15830
  2366  0000                     _U2P1L	set	15828
  2367  0000                     _U1RXB	set	15848
  2368  0000                     _U1ERRIE	set	15866
  2369  0000                     _U1ERRIR	set	15865
  2370  0000                     _U1UIR	set	15864
  2371  0000                     _U1FIFO	set	15863
  2372  0000                     _U1BRGH	set	15862
  2373  0000                     _U1BRGL	set	15861
  2374  0000                     _U1CON2	set	15860
  2375  0000                     _U1CON1	set	15859
  2376  0000                     _U1CON0	set	15858
  2377  0000                     _U1P3H	set	15857
  2378  0000                     _U1P3L	set	15856
  2379  0000                     _U1P2H	set	15855
  2380  0000                     _U1P2L	set	15854
  2381  0000                     _U1P1H	set	15853
  2382  0000                     _U1P1L	set	15852
  2383  0000                     _FVRCON	set	16065
  2384  0000                     _ADFLTRL	set	16102
  2385  0000                     _ADFLTRH	set	16103
  2386  0000                     _ADCON0bits	set	16120
  2387  0000                     _ADCON0	set	16120
  2388  0000                     _ADCLK	set	16127
  2389  0000                     _ADACT	set	16126
  2390  0000                     _ADREF	set	16125
  2391  0000                     _ADSTAT	set	16124
  2392  0000                     _ADCON3	set	16123
  2393  0000                     _ADCON2	set	16122
  2394  0000                     _ADCON1	set	16121
  2395  0000                     _ADPREH	set	16119
  2396  0000                     _ADPREL	set	16118
  2397  0000                     _ADCAP	set	16117
  2398  0000                     _ADACQH	set	16116
  2399  0000                     _ADACQL	set	16115
  2400  0000                     _ADPCH	set	16113
  2401  0000                     _ADRPT	set	16108
  2402  0000                     _ADACCU	set	16106
  2403  0000                     _ADSTPTH	set	16101
  2404  0000                     _ADSTPTL	set	16100
  2405  0000                     _ADUTHH	set	16097
  2406  0000                     _ADUTHL	set	16096
  2407  0000                     _ADLTHH	set	16095
  2408  0000                     _ADLTHL	set	16094
  2409  0000                     _CCPTMRS1bits	set	16223
  2410  0000                     _PORTDbits	set	16333
  2411  0000                     _PORTFbits	set	16335
  2412  0000                     _LATFbits	set	16319
  2413  0000                     _LATCbits	set	16316
  2414  0000                     _LATDbits	set	16317
  2415  0000                     _PORTBbits	set	16331
  2416  0000                     _T3CONbits	set	16294
  2417  0000                     _T3CON	set	16294
  2418  0000                     _TMR3L	set	16292
  2419  0000                     _TMR3H	set	16293
  2420  0000                     _T3CLK	set	16297
  2421  0000                     _T3GATE	set	16296
  2422  0000                     _T3GCON	set	16295
  2423  0000                     _T2CON	set	16300
  2424  0000                     _T2TMR	set	16298
  2425  0000                     _T2PR	set	16299
  2426  0000                     _T2RST	set	16303
  2427  0000                     _T2HLT	set	16301
  2428  0000                     _T2CLKCON	set	16302
  2429  0000                     _PWM8DCL	set	16224
  2430  0000                     _PWM8DCH	set	16225
  2431  0000                     _PWM8CON	set	16226
  2432  0000                     _LATEbits	set	16318
  2433  0000                     _T5CONbits	set	16282
  2434  0000                     _T5CON	set	16282
  2435  0000                     _TMR5L	set	16280
  2436  0000                     _TMR5H	set	16281
  2437  0000                     _T5CLK	set	16285
  2438  0000                     _T5GATE	set	16284
  2439  0000                     _T5GCON	set	16283
  2440  0000                     _T6CON	set	16276
  2441  0000                     _T6TMR	set	16274
  2442  0000                     _T6PR	set	16275
  2443  0000                     _T6RST	set	16279
  2444  0000                     _T6HLT	set	16277
  2445  0000                     _T6CLKCON	set	16278
  2446  0000                     _TRISD	set	16325
  2447  0000                     _TRISC	set	16324
  2448  0000                     _TRISB	set	16323
  2449  0000                     _TRISA	set	16322
  2450  0000                     _TRISF	set	16327
  2451  0000                     _TRISE	set	16326
  2452  0000                     _LATC	set	16316
  2453  0000                     _LATB	set	16315
  2454  0000                     _LATF	set	16319
  2455  0000                     _LATA	set	16314
  2456  0000                     _LATD	set	16317
  2457  0000                     _LATE	set	16318
  2458  0000                     _IVTLOCKbits	set	16340
  2459  0000                     _IVTLOCK	set	16340
  2460  0000                     _INTCON0bits	set	16338
  2461  0000                     _GIE	set	130711
  2462  00FA8F                     STR_83:
  2463                           
  2464                           ; BSR set to: 57
  2465  00FA8F  20                 	db	32
  2466  00FA90  25                 	db	37
  2467  00FA91  63                 	db	99	;'c'
  2468  00FA92  20                 	db	32
  2469  00FA93  2C                 	db	44
  2470  00FA94  25                 	db	37
  2471  00FA95  6C                 	db	108	;'l'
  2472  00FA96  75                 	db	117	;'u'
  2473  00FA97  2C                 	db	44
  2474  00FA98  25                 	db	37
  2475  00FA99  34                 	db	52	;'4'
  2476  00FA9A  2E                 	db	46
  2477  00FA9B  34                 	db	52	;'4'
  2478  00FA9C  66                 	db	102	;'f'
  2479  00FA9D  2C                 	db	44
  2480  00FA9E  25                 	db	37
  2481  00FA9F  34                 	db	52	;'4'
  2482  00FAA0  2E                 	db	46
  2483  00FAA1  34                 	db	52	;'4'
  2484  00FAA2  66                 	db	102	;'f'
  2485  00FAA3  2C                 	db	44
  2486  00FAA4  25                 	db	37
  2487  00FAA5  34                 	db	52	;'4'
  2488  00FAA6  2E                 	db	46
  2489  00FAA7  34                 	db	52	;'4'
  2490  00FAA8  66                 	db	102	;'f'
  2491  00FAA9  2C                 	db	44
  2492  00FAAA  25                 	db	37
  2493  00FAAB  34                 	db	52	;'4'
  2494  00FAAC  2E                 	db	46
  2495  00FAAD  34                 	db	52	;'4'
  2496  00FAAE  66                 	db	102	;'f'
  2497  00FAAF  2C                 	db	44
  2498  00FAB0  25                 	db	37
  2499  00FAB1  34                 	db	52	;'4'
  2500  00FAB2  2E                 	db	46
  2501  00FAB3  34                 	db	52	;'4'
  2502  00FAB4  66                 	db	102	;'f'
  2503  00FAB5  2C                 	db	44
  2504  00FAB6  25                 	db	37
  2505  00FAB7  34                 	db	52	;'4'
  2506  00FAB8  2E                 	db	46
  2507  00FAB9  33                 	db	51	;'3'
  2508  00FABA  66                 	db	102	;'f'
  2509  00FABB  2C                 	db	44
  2510  00FABC  25                 	db	37
  2511  00FABD  34                 	db	52	;'4'
  2512  00FABE  2E                 	db	46
  2513  00FABF  33                 	db	51	;'3'
  2514  00FAC0  66                 	db	102	;'f'
  2515  00FAC1  2C                 	db	44
  2516  00FAC2  25                 	db	37
  2517  00FAC3  34                 	db	52	;'4'
  2518  00FAC4  2E                 	db	46
  2519  00FAC5  33                 	db	51	;'3'
  2520  00FAC6  66                 	db	102	;'f'
  2521  00FAC7  2C                 	db	44
  2522  00FAC8  25                 	db	37
  2523  00FAC9  34                 	db	52	;'4'
  2524  00FACA  2E                 	db	46
  2525  00FACB  33                 	db	51	;'3'
  2526  00FACC  66                 	db	102	;'f'
  2527  00FACD  2C                 	db	44
  2528  00FACE  25                 	db	37
  2529  00FACF  34                 	db	52	;'4'
  2530  00FAD0  2E                 	db	46
  2531  00FAD1  33                 	db	51	;'3'
  2532  00FAD2  66                 	db	102	;'f'
  2533  00FAD3  2C                 	db	44
  2534  00FAD4  25                 	db	37
  2535  00FAD5  34                 	db	52	;'4'
  2536  00FAD6  2E                 	db	46
  2537  00FAD7  33                 	db	51	;'3'
  2538  00FAD8  66                 	db	102	;'f'
  2539  00FAD9  2C                 	db	44
  2540  00FADA  25                 	db	37
  2541  00FADB  64                 	db	100	;'d'
  2542  00FADC  2C                 	db	44
  2543  00FADD  25                 	db	37
  2544  00FADE  64                 	db	100	;'d'
  2545  00FADF  2C                 	db	44
  2546  00FAE0  25                 	db	37
  2547  00FAE1  32                 	db	50	;'2'
  2548  00FAE2  2E                 	db	46
  2549  00FAE3  36                 	db	54	;'6'
  2550  00FAE4  66                 	db	102	;'f'
  2551  00FAE5  2C                 	db	44
  2552  00FAE6  25                 	db	37
  2553  00FAE7  34                 	db	52	;'4'
  2554  00FAE8  2E                 	db	46
  2555  00FAE9  33                 	db	51	;'3'
  2556  00FAEA  66                 	db	102	;'f'
  2557  00FAEB  2C                 	db	44
  2558  00FAEC  25                 	db	37
  2559  00FAED  64                 	db	100	;'d'
  2560  00FAEE  2C                 	db	44
  2561  00FAEF  25                 	db	37
  2562  00FAF0  64                 	db	100	;'d'
  2563  00FAF1  2C                 	db	44
  2564  00FAF2  25                 	db	37
  2565  00FAF3  6C                 	db	108	;'l'
  2566  00FAF4  75                 	db	117	;'u'
  2567  00FAF5  2C                 	db	44
  2568  00FAF6  25                 	db	37
  2569  00FAF7  6C                 	db	108	;'l'
  2570  00FAF8  75                 	db	117	;'u'
  2571  00FAF9  2C                 	db	44
  2572  00FAFA  25                 	db	37
  2573  00FAFB  34                 	db	52	;'4'
  2574  00FAFC  2E                 	db	46
  2575  00FAFD  33                 	db	51	;'3'
  2576  00FAFE  66                 	db	102	;'f'
  2577  00FAFF  2C                 	db	44
  2578  00FB00  25                 	db	37
  2579  00FB01  34                 	db	52	;'4'
  2580  00FB02  2E                 	db	46
  2581  00FB03  33                 	db	51	;'3'
  2582  00FB04  66                 	db	102	;'f'
  2583  00FB05  2C                 	db	44
  2584  00FB06  25                 	db	37
  2585  00FB07  34                 	db	52	;'4'
  2586  00FB08  2E                 	db	46
  2587  00FB09  33                 	db	51	;'3'
  2588  00FB0A  66                 	db	102	;'f'
  2589  00FB0B  0D                 	db	13
  2590  00FB0C  0A                 	db	10
  2591  00FB0D  00                 	db	0
  2592  00FB0E                     STR_42:
  2593                           
  2594                           ; BSR set to: 57
  2595  00FB0E  53                 	db	83	;'S'
  2596  00FB0F  25                 	db	37
  2597  00FB10  63                 	db	99	;'c'
  2598  00FB11  43                 	db	67	;'C'
  2599  00FB12  20                 	db	32
  2600  00FB13  25                 	db	37
  2601  00FB14  64                 	db	100	;'d'
  2602  00FB15  20                 	db	32
  2603  00FB16  52                 	db	82	;'R'
  2604  00FB17  55                 	db	85	;'U'
  2605  00FB18  4E                 	db	78	;'N'
  2606  00FB19  20                 	db	32
  2607  00FB1A  25                 	db	37
  2608  00FB1B  64                 	db	100	;'d'
  2609  00FB1C  20                 	db	32
  2610  00FB1D  56                 	db	86	;'V'
  2611  00FB1E  25                 	db	37
  2612  00FB1F  32                 	db	50	;'2'
  2613  00FB20  2E                 	db	46
  2614  00FB21  32                 	db	50	;'2'
  2615  00FB22  66                 	db	102	;'f'
  2616  00FB23  20                 	db	32
  2617  00FB24  20                 	db	32
  2618  00FB25  20                 	db	32
  2619  00FB26  20                 	db	32
  2620  00FB27  20                 	db	32
  2621  00FB28  20                 	db	32
  2622  00FB29  20                 	db	32
  2623  00FB2A  00                 	db	0
  2624  00FB2B                     STR_20:
  2625                           
  2626                           ; BSR set to: 57
  2627  00FB2B  52                 	db	82	;'R'
  2628  00FB2C  31                 	db	49	;'1'
  2629  00FB2D  20                 	db	32
  2630  00FB2E  25                 	db	37
  2631  00FB2F  32                 	db	50	;'2'
  2632  00FB30  2E                 	db	46
  2633  00FB31  33                 	db	51	;'3'
  2634  00FB32  66                 	db	102	;'f'
  2635  00FB33  20                 	db	32
  2636  00FB34  25                 	db	37
  2637  00FB35  33                 	db	51	;'3'
  2638  00FB36  2E                 	db	46
  2639  00FB37  34                 	db	52	;'4'
  2640  00FB38  66                 	db	102	;'f'
  2641  00FB39  20                 	db	32
  2642  00FB3A  20                 	db	32
  2643  00FB3B  20                 	db	32
  2644  00FB3C  20                 	db	32
  2645  00FB3D  20                 	db	32
  2646  00FB3E  20                 	db	32
  2647  00FB3F  20                 	db	32
  2648  00FB40  20                 	db	32
  2649  00FB41  20                 	db	32
  2650  00FB42  20                 	db	32
  2651  00FB43  20                 	db	32
  2652  00FB44  00                 	db	0
  2653  00FB45                     STR_21:
  2654                           
  2655                           ; BSR set to: 57
  2656  00FB45  52                 	db	82	;'R'
  2657  00FB46  32                 	db	50	;'2'
  2658  00FB47  20                 	db	32
  2659  00FB48  25                 	db	37
  2660  00FB49  32                 	db	50	;'2'
  2661  00FB4A  2E                 	db	46
  2662  00FB4B  33                 	db	51	;'3'
  2663  00FB4C  66                 	db	102	;'f'
  2664  00FB4D  20                 	db	32
  2665  00FB4E  25                 	db	37
  2666  00FB4F  33                 	db	51	;'3'
  2667  00FB50  2E                 	db	46
  2668  00FB51  34                 	db	52	;'4'
  2669  00FB52  66                 	db	102	;'f'
  2670  00FB53  20                 	db	32
  2671  00FB54  20                 	db	32
  2672  00FB55  20                 	db	32
  2673  00FB56  20                 	db	32
  2674  00FB57  20                 	db	32
  2675  00FB58  20                 	db	32
  2676  00FB59  20                 	db	32
  2677  00FB5A  20                 	db	32
  2678  00FB5B  20                 	db	32
  2679  00FB5C  20                 	db	32
  2680  00FB5D  20                 	db	32
  2681  00FB5E  00                 	db	0
  2682  00FB5F                     STR_11:
  2683                           
  2684                           ; BSR set to: 57
  2685  00FB5F  53                 	db	83	;'S'
  2686  00FB60  20                 	db	32
  2687  00FB61  53                 	db	83	;'S'
  2688  00FB62  25                 	db	37
  2689  00FB63  63                 	db	99	;'c'
  2690  00FB64  43                 	db	67	;'C'
  2691  00FB65  20                 	db	32
  2692  00FB66  25                 	db	37
  2693  00FB67  64                 	db	100	;'d'
  2694  00FB68  20                 	db	32
  2695  00FB69  25                 	db	37
  2696  00FB6A  32                 	db	50	;'2'
  2697  00FB6B  2E                 	db	46
  2698  00FB6C  34                 	db	52	;'4'
  2699  00FB6D  66                 	db	102	;'f'
  2700  00FB6E  20                 	db	32
  2701  00FB6F  20                 	db	32
  2702  00FB70  20                 	db	32
  2703  00FB71  20                 	db	32
  2704  00FB72  20                 	db	32
  2705  00FB73  20                 	db	32
  2706  00FB74  20                 	db	32
  2707  00FB75  20                 	db	32
  2708  00FB76  20                 	db	32
  2709  00FB77  20                 	db	32
  2710  00FB78  00                 	db	0
  2711  00FB79                     
  2712                           ; BSR set to: 57
  2713  00FB79  20                 	db	32
  2714  00FB7A  4D                 	db	77	;'M'
  2715  00FB7B  65                 	db	101	;'e'
  2716  00FB7C  73                 	db	115	;'s'
  2717  00FB7D  67                 	db	103	;'g'
  2718  00FB7E  20                 	db	32
  2719  00FB7F  25                 	db	37
  2720  00FB80  64                 	db	100	;'d'
  2721  00FB81  20                 	db	32
  2722  00FB82  53                 	db	83	;'S'
  2723  00FB83  74                 	db	116	;'t'
  2724  00FB84  61                 	db	97	;'a'
  2725  00FB85  63                 	db	99	;'c'
  2726  00FB86  6B                 	db	107	;'k'
  2727  00FB87  20                 	db	32
  2728  00FB88  25                 	db	37
  2729  00FB89  64                 	db	100	;'d'
  2730  00FB8A  20                 	db	32
  2731  00FB8B  20                 	db	32
  2732  00FB8C  20                 	db	32
  2733  00FB8D  20                 	db	32
  2734  00FB8E  20                 	db	32
  2735  00FB8F  20                 	db	32
  2736  00FB90  00                 	db	0
  2737  00FB91                     STR_43:
  2738                           
  2739                           ; BSR set to: 57
  2740  00FB91  45                 	db	69	;'E'
  2741  00FB92  53                 	db	83	;'S'
  2742  00FB93  52                 	db	82	;'R'
  2743  00FB94  20                 	db	32
  2744  00FB95  20                 	db	32
  2745  00FB96  25                 	db	37
  2746  00FB97  32                 	db	50	;'2'
  2747  00FB98  2E                 	db	46
  2748  00FB99  36                 	db	54	;'6'
  2749  00FB9A  66                 	db	102	;'f'
  2750  00FB9B  20                 	db	32
  2751  00FB9C  20                 	db	32
  2752  00FB9D  20                 	db	32
  2753  00FB9E  20                 	db	32
  2754  00FB9F  20                 	db	32
  2755  00FBA0  20                 	db	32
  2756  00FBA1  20                 	db	32
  2757  00FBA2  20                 	db	32
  2758  00FBA3  20                 	db	32
  2759  00FBA4  20                 	db	32
  2760  00FBA5  20                 	db	32
  2761  00FBA6  20                 	db	32
  2762  00FBA7  00                 	db	0
  2763  00FBA8                     STR_40:
  2764                           
  2765                           ; BSR set to: 57
  2766  00FBA8  42                 	db	66	;'B'
  2767  00FBA9  41                 	db	65	;'A'
  2768  00FBAA  54                 	db	84	;'T'
  2769  00FBAB  54                 	db	84	;'T'
  2770  00FBAC  20                 	db	32
  2771  00FBAD  50                 	db	80	;'P'
  2772  00FBAE  57                 	db	87	;'W'
  2773  00FBAF  52                 	db	82	;'R'
  2774  00FBB0  20                 	db	32
  2775  00FBB1  25                 	db	37
  2776  00FBB2  33                 	db	51	;'3'
  2777  00FBB3  2E                 	db	46
  2778  00FBB4  32                 	db	50	;'2'
  2779  00FBB5  66                 	db	102	;'f'
  2780  00FBB6  20                 	db	32
  2781  00FBB7  20                 	db	32
  2782  00FBB8  20                 	db	32
  2783  00FBB9  20                 	db	32
  2784  00FBBA  20                 	db	32
  2785  00FBBB  20                 	db	32
  2786  00FBBC  20                 	db	32
  2787  00FBBD  20                 	db	32
  2788  00FBBE  00                 	db	0
  2789  00FBBF                     STR_44:
  2790                           
  2791                           ; BSR set to: 57
  2792  00FBBF  52                 	db	82	;'R'
  2793  00FBC0  31                 	db	49	;'1'
  2794  00FBC1  20                 	db	32
  2795  00FBC2  25                 	db	37
  2796  00FBC3  32                 	db	50	;'2'
  2797  00FBC4  2E                 	db	46
  2798  00FBC5  33                 	db	51	;'3'
  2799  00FBC6  66                 	db	102	;'f'
  2800  00FBC7  20                 	db	32
  2801  00FBC8  25                 	db	37
  2802  00FBC9  33                 	db	51	;'3'
  2803  00FBCA  2E                 	db	46
  2804  00FBCB  34                 	db	52	;'4'
  2805  00FBCC  66                 	db	102	;'f'
  2806  00FBCD  20                 	db	32
  2807  00FBCE  20                 	db	32
  2808  00FBCF  20                 	db	32
  2809  00FBD0  20                 	db	32
  2810  00FBD1  20                 	db	32
  2811  00FBD2  20                 	db	32
  2812  00FBD3  20                 	db	32
  2813  00FBD4  20                 	db	32
  2814  00FBD5  00                 	db	0
  2815  00FBD6                     STR_45:
  2816                           
  2817                           ; BSR set to: 57
  2818  00FBD6  52                 	db	82	;'R'
  2819  00FBD7  32                 	db	50	;'2'
  2820  00FBD8  20                 	db	32
  2821  00FBD9  25                 	db	37
  2822  00FBDA  32                 	db	50	;'2'
  2823  00FBDB  2E                 	db	46
  2824  00FBDC  33                 	db	51	;'3'
  2825  00FBDD  66                 	db	102	;'f'
  2826  00FBDE  20                 	db	32
  2827  00FBDF  25                 	db	37
  2828  00FBE0  33                 	db	51	;'3'
  2829  00FBE1  2E                 	db	46
  2830  00FBE2  34                 	db	52	;'4'
  2831  00FBE3  66                 	db	102	;'f'
  2832  00FBE4  20                 	db	32
  2833  00FBE5  20                 	db	32
  2834  00FBE6  20                 	db	32
  2835  00FBE7  20                 	db	32
  2836  00FBE8  20                 	db	32
  2837  00FBE9  20                 	db	32
  2838  00FBEA  20                 	db	32
  2839  00FBEB  20                 	db	32
  2840  00FBEC  00                 	db	0
  2841  00FBED                     STR_41:
  2842                           
  2843                           ; BSR set to: 57
  2844  00FBED  42                 	db	66	;'B'
  2845  00FBEE  41                 	db	65	;'A'
  2846  00FBEF  48                 	db	72	;'H'
  2847  00FBF0  20                 	db	32
  2848  00FBF1  25                 	db	37
  2849  00FBF2  33                 	db	51	;'3'
  2850  00FBF3  2E                 	db	46
  2851  00FBF4  32                 	db	50	;'2'
  2852  00FBF5  66                 	db	102	;'f'
  2853  00FBF6  20                 	db	32
  2854  00FBF7  50                 	db	80	;'P'
  2855  00FBF8  25                 	db	37
  2856  00FBF9  33                 	db	51	;'3'
  2857  00FBFA  2E                 	db	46
  2858  00FBFB  32                 	db	50	;'2'
  2859  00FBFC  66                 	db	102	;'f'
  2860  00FBFD  20                 	db	32
  2861  00FBFE  20                 	db	32
  2862  00FBFF  20                 	db	32
  2863  00FC00  20                 	db	32
  2864  00FC01  20                 	db	32
  2865  00FC02  20                 	db	32
  2866  00FC03  00                 	db	0
  2867  00FC04                     STR_14:
  2868                           
  2869                           ; BSR set to: 57
  2870  00FC04  20                 	db	32
  2871  00FC05  20                 	db	32
  2872  00FC06  20                 	db	32
  2873  00FC07  20                 	db	32
  2874  00FC08  20                 	db	32
  2875  00FC09  20                 	db	32
  2876  00FC0A  20                 	db	32
  2877  00FC0B  20                 	db	32
  2878  00FC0C  20                 	db	32
  2879  00FC0D  20                 	db	32
  2880  00FC0E  20                 	db	32
  2881  00FC0F  20                 	db	32
  2882  00FC10  20                 	db	32
  2883  00FC11  20                 	db	32
  2884  00FC12  20                 	db	32
  2885  00FC13  20                 	db	32
  2886  00FC14  20                 	db	32
  2887  00FC15  20                 	db	32
  2888  00FC16  20                 	db	32
  2889  00FC17  20                 	db	32
  2890  00FC18  20                 	db	32
  2891  00FC19  00                 	db	0
  2892  00FC1A                     STR_19:
  2893                           
  2894                           ; BSR set to: 57
  2895  00FC1A  45                 	db	69	;'E'
  2896  00FC1B  53                 	db	83	;'S'
  2897  00FC1C  52                 	db	82	;'R'
  2898  00FC1D  20                 	db	32
  2899  00FC1E  20                 	db	32
  2900  00FC1F  25                 	db	37
  2901  00FC20  32                 	db	50	;'2'
  2902  00FC21  2E                 	db	46
  2903  00FC22  36                 	db	54	;'6'
  2904  00FC23  66                 	db	102	;'f'
  2905  00FC24  20                 	db	32
  2906  00FC25  20                 	db	32
  2907  00FC26  20                 	db	32
  2908  00FC27  20                 	db	32
  2909  00FC28  20                 	db	32
  2910  00FC29  20                 	db	32
  2911  00FC2A  20                 	db	32
  2912  00FC2B  20                 	db	32
  2913  00FC2C  20                 	db	32
  2914  00FC2D  20                 	db	32
  2915  00FC2E  20                 	db	32
  2916  00FC2F  00                 	db	0
  2917  00FC30                     STR_12:
  2918                           
  2919                           ; BSR set to: 57
  2920  00FC30  53                 	db	83	;'S'
  2921  00FC31  74                 	db	116	;'t'
  2922  00FC32  61                 	db	97	;'a'
  2923  00FC33  74                 	db	116	;'t'
  2924  00FC34  69                 	db	105	;'i'
  2925  00FC35  63                 	db	99	;'c'
  2926  00FC36  20                 	db	32
  2927  00FC37  53                 	db	83	;'S'
  2928  00FC38  4F                 	db	79	;'O'
  2929  00FC39  43                 	db	67	;'C'
  2930  00FC3A  20                 	db	32
  2931  00FC3B  25                 	db	37
  2932  00FC3C  64                 	db	100	;'d'
  2933  00FC3D  20                 	db	32
  2934  00FC3E  20                 	db	32
  2935  00FC3F  20                 	db	32
  2936  00FC40  20                 	db	32
  2937  00FC41  20                 	db	32
  2938  00FC42  20                 	db	32
  2939  00FC43  20                 	db	32
  2940  00FC44  20                 	db	32
  2941  00FC45  00                 	db	0
  2942  00FC46                     STR_37:
  2943                           
  2944                           ; BSR set to: 57
  2945  00FC46  42                 	db	66	;'B'
  2946  00FC47  41                 	db	65	;'A'
  2947  00FC48  54                 	db	84	;'T'
  2948  00FC49  20                 	db	32
  2949  00FC4A  49                 	db	73	;'I'
  2950  00FC4B  57                 	db	87	;'W'
  2951  00FC4C  48                 	db	72	;'H'
  2952  00FC4D  20                 	db	32
  2953  00FC4E  25                 	db	37
  2954  00FC4F  34                 	db	52	;'4'
  2955  00FC50  2E                 	db	46
  2956  00FC51  31                 	db	49	;'1'
  2957  00FC52  66                 	db	102	;'f'
  2958  00FC53  20                 	db	32
  2959  00FC54  20                 	db	32
  2960  00FC55  20                 	db	32
  2961  00FC56  20                 	db	32
  2962  00FC57  20                 	db	32
  2963  00FC58  20                 	db	32
  2964  00FC59  20                 	db	32
  2965  00FC5A  20                 	db	32
  2966  00FC5B  00                 	db	0
  2967  00FC5C                     STR_38:
  2968                           
  2969                           ; BSR set to: 57
  2970  00FC5C  42                 	db	66	;'B'
  2971  00FC5D  41                 	db	65	;'A'
  2972  00FC5E  54                 	db	84	;'T'
  2973  00FC5F  20                 	db	32
  2974  00FC60  4F                 	db	79	;'O'
  2975  00FC61  57                 	db	87	;'W'
  2976  00FC62  48                 	db	72	;'H'
  2977  00FC63  20                 	db	32
  2978  00FC64  25                 	db	37
  2979  00FC65  34                 	db	52	;'4'
  2980  00FC66  2E                 	db	46
  2981  00FC67  31                 	db	49	;'1'
  2982  00FC68  66                 	db	102	;'f'
  2983  00FC69  20                 	db	32
  2984  00FC6A  20                 	db	32
  2985  00FC6B  20                 	db	32
  2986  00FC6C  20                 	db	32
  2987  00FC6D  20                 	db	32
  2988  00FC6E  20                 	db	32
  2989  00FC6F  20                 	db	32
  2990  00FC70  20                 	db	32
  2991  00FC71  00                 	db	0
  2992  00FC72                     STR_39:
  2993                           
  2994                           ; BSR set to: 57
  2995  00FC72  42                 	db	66	;'B'
  2996  00FC73  41                 	db	65	;'A'
  2997  00FC74  54                 	db	84	;'T'
  2998  00FC75  20                 	db	32
  2999  00FC76  54                 	db	84	;'T'
  3000  00FC77  57                 	db	87	;'W'
  3001  00FC78  48                 	db	72	;'H'
  3002  00FC79  20                 	db	32
  3003  00FC7A  25                 	db	37
  3004  00FC7B  34                 	db	52	;'4'
  3005  00FC7C  2E                 	db	46
  3006  00FC7D  31                 	db	49	;'1'
  3007  00FC7E  66                 	db	102	;'f'
  3008  00FC7F  20                 	db	32
  3009  00FC80  20                 	db	32
  3010  00FC81  20                 	db	32
  3011  00FC82  20                 	db	32
  3012  00FC83  20                 	db	32
  3013  00FC84  20                 	db	32
  3014  00FC85  20                 	db	32
  3015  00FC86  20                 	db	32
  3016  00FC87  00                 	db	0
  3017  00FC88                     STR_33:
  3018                           
  3019                           ; BSR set to: 57
  3020  00FC88  49                 	db	73	;'I'
  3021  00FC89  4E                 	db	78	;'N'
  3022  00FC8A  56                 	db	86	;'V'
  3023  00FC8B  20                 	db	32
  3024  00FC8C  20                 	db	32
  3025  00FC8D  57                 	db	87	;'W'
  3026  00FC8E  48                 	db	72	;'H'
  3027  00FC8F  20                 	db	32
  3028  00FC90  25                 	db	37
  3029  00FC91  33                 	db	51	;'3'
  3030  00FC92  2E                 	db	46
  3031  00FC93  32                 	db	50	;'2'
  3032  00FC94  66                 	db	102	;'f'
  3033  00FC95  20                 	db	32
  3034  00FC96  20                 	db	32
  3035  00FC97  20                 	db	32
  3036  00FC98  20                 	db	32
  3037  00FC99  20                 	db	32
  3038  00FC9A  20                 	db	32
  3039  00FC9B  20                 	db	32
  3040  00FC9C  20                 	db	32
  3041  00FC9D  00                 	db	0
  3042  00FC9E                     STR_32:
  3043                           
  3044                           ; BSR set to: 57
  3045  00FC9E  4C                 	db	76	;'L'
  3046  00FC9F  4F                 	db	79	;'O'
  3047  00FCA0  41                 	db	65	;'A'
  3048  00FCA1  44                 	db	68	;'D'
  3049  00FCA2  20                 	db	32
  3050  00FCA3  57                 	db	87	;'W'
  3051  00FCA4  48                 	db	72	;'H'
  3052  00FCA5  20                 	db	32
  3053  00FCA6  25                 	db	37
  3054  00FCA7  33                 	db	51	;'3'
  3055  00FCA8  2E                 	db	46
  3056  00FCA9  32                 	db	50	;'2'
  3057  00FCAA  66                 	db	102	;'f'
  3058  00FCAB  20                 	db	32
  3059  00FCAC  20                 	db	32
  3060  00FCAD  20                 	db	32
  3061  00FCAE  20                 	db	32
  3062  00FCAF  20                 	db	32
  3063  00FCB0  20                 	db	32
  3064  00FCB1  20                 	db	32
  3065  00FCB2  20                 	db	32
  3066  00FCB3  00                 	db	0
  3067  00FCB4                     STR_31:
  3068                           
  3069                           ; BSR set to: 57
  3070  00FCB4  50                 	db	80	;'P'
  3071  00FCB5  56                 	db	86	;'V'
  3072  00FCB6  20                 	db	32
  3073  00FCB7  25                 	db	37
  3074  00FCB8  63                 	db	99	;'c'
  3075  00FCB9  20                 	db	32
  3076  00FCBA  57                 	db	87	;'W'
  3077  00FCBB  48                 	db	72	;'H'
  3078  00FCBC  20                 	db	32
  3079  00FCBD  25                 	db	37
  3080  00FCBE  33                 	db	51	;'3'
  3081  00FCBF  2E                 	db	46
  3082  00FCC0  32                 	db	50	;'2'
  3083  00FCC1  66                 	db	102	;'f'
  3084  00FCC2  20                 	db	32
  3085  00FCC3  20                 	db	32
  3086  00FCC4  20                 	db	32
  3087  00FCC5  20                 	db	32
  3088  00FCC6  20                 	db	32
  3089  00FCC7  20                 	db	32
  3090  00FCC8  20                 	db	32
  3091  00FCC9  00                 	db	0
  3092  00FCCA                     STR_30:
  3093                           
  3094                           ; BSR set to: 57
  3095  00FCCA  49                 	db	73	;'I'
  3096  00FCCB  4E                 	db	78	;'N'
  3097  00FCCC  56                 	db	86	;'V'
  3098  00FCCD  20                 	db	32
  3099  00FCCE  20                 	db	32
  3100  00FCCF  50                 	db	80	;'P'
  3101  00FCD0  57                 	db	87	;'W'
  3102  00FCD1  52                 	db	82	;'R'
  3103  00FCD2  20                 	db	32
  3104  00FCD3  25                 	db	37
  3105  00FCD4  33                 	db	51	;'3'
  3106  00FCD5  2E                 	db	46
  3107  00FCD6  32                 	db	50	;'2'
  3108  00FCD7  66                 	db	102	;'f'
  3109  00FCD8  20                 	db	32
  3110  00FCD9  20                 	db	32
  3111  00FCDA  20                 	db	32
  3112  00FCDB  20                 	db	32
  3113  00FCDC  20                 	db	32
  3114  00FCDD  20                 	db	32
  3115  00FCDE  20                 	db	32
  3116  00FCDF  00                 	db	0
  3117  00FCE0                     STR_29:
  3118                           
  3119                           ; BSR set to: 57
  3120  00FCE0  4C                 	db	76	;'L'
  3121  00FCE1  4F                 	db	79	;'O'
  3122  00FCE2  41                 	db	65	;'A'
  3123  00FCE3  44                 	db	68	;'D'
  3124  00FCE4  20                 	db	32
  3125  00FCE5  50                 	db	80	;'P'
  3126  00FCE6  57                 	db	87	;'W'
  3127  00FCE7  52                 	db	82	;'R'
  3128  00FCE8  20                 	db	32
  3129  00FCE9  25                 	db	37
  3130  00FCEA  33                 	db	51	;'3'
  3131  00FCEB  2E                 	db	46
  3132  00FCEC  32                 	db	50	;'2'
  3133  00FCED  66                 	db	102	;'f'
  3134  00FCEE  20                 	db	32
  3135  00FCEF  20                 	db	32
  3136  00FCF0  20                 	db	32
  3137  00FCF1  20                 	db	32
  3138  00FCF2  20                 	db	32
  3139  00FCF3  20                 	db	32
  3140  00FCF4  20                 	db	32
  3141  00FCF5  00                 	db	0
  3142  00FCF6                     STR_28:
  3143                           
  3144                           ; BSR set to: 57
  3145  00FCF6  50                 	db	80	;'P'
  3146  00FCF7  56                 	db	86	;'V'
  3147  00FCF8  20                 	db	32
  3148  00FCF9  25                 	db	37
  3149  00FCFA  63                 	db	99	;'c'
  3150  00FCFB  20                 	db	32
  3151  00FCFC  50                 	db	80	;'P'
  3152  00FCFD  57                 	db	87	;'W'
  3153  00FCFE  52                 	db	82	;'R'
  3154  00FCFF  20                 	db	32
  3155  00FD00  25                 	db	37
  3156  00FD01  33                 	db	51	;'3'
  3157  00FD02  2E                 	db	46
  3158  00FD03  32                 	db	50	;'2'
  3159  00FD04  66                 	db	102	;'f'
  3160  00FD05  20                 	db	32
  3161  00FD06  20                 	db	32
  3162  00FD07  20                 	db	32
  3163  00FD08  20                 	db	32
  3164  00FD09  20                 	db	32
  3165  00FD0A  20                 	db	32
  3166  00FD0B  00                 	db	0
  3167  00FD0C                     STR_13:
  3168                           
  3169                           ; BSR set to: 57
  3170  00FD0C  42                 	db	66	;'B'
  3171  00FD0D  61                 	db	97	;'a'
  3172  00FD0E  74                 	db	116	;'t'
  3173  00FD0F  74                 	db	116	;'t'
  3174  00FD10  65                 	db	101	;'e'
  3175  00FD11  72                 	db	114	;'r'
  3176  00FD12  79                 	db	121	;'y'
  3177  00FD13  20                 	db	32
  3178  00FD14  41                 	db	65	;'A'
  3179  00FD15  68                 	db	104	;'h'
  3180  00FD16  20                 	db	32
  3181  00FD17  25                 	db	37
  3182  00FD18  33                 	db	51	;'3'
  3183  00FD19  2E                 	db	46
  3184  00FD1A  32                 	db	50	;'2'
  3185  00FD1B  66                 	db	102	;'f'
  3186  00FD1C  20                 	db	32
  3187  00FD1D  20                 	db	32
  3188  00FD1E  20                 	db	32
  3189  00FD1F  20                 	db	32
  3190  00FD20  20                 	db	32
  3191  00FD21  00                 	db	0
  3192  00FD22                     STR_35:
  3193                           
  3194                           ; BSR set to: 57
  3195  00FD22  42                 	db	66	;'B'
  3196  00FD23  56                 	db	86	;'V'
  3197  00FD24  20                 	db	32
  3198  00FD25  25                 	db	37
  3199  00FD26  32                 	db	50	;'2'
  3200  00FD27  2E                 	db	46
  3201  00FD28  32                 	db	50	;'2'
  3202  00FD29  66                 	db	102	;'f'
  3203  00FD2A  20                 	db	32
  3204  00FD2B  42                 	db	66	;'B'
  3205  00FD2C  41                 	db	65	;'A'
  3206  00FD2D  20                 	db	32
  3207  00FD2E  25                 	db	37
  3208  00FD2F  32                 	db	50	;'2'
  3209  00FD30  2E                 	db	46
  3210  00FD31  32                 	db	50	;'2'
  3211  00FD32  66                 	db	102	;'f'
  3212  00FD33  20                 	db	32
  3213  00FD34  20                 	db	32
  3214  00FD35  20                 	db	32
  3215  00FD36  20                 	db	32
  3216  00FD37  00                 	db	0
  3217  00FD38                     STR_36:
  3218                           
  3219                           ; BSR set to: 57
  3220  00FD38  43                 	db	67	;'C'
  3221  00FD39  56                 	db	86	;'V'
  3222  00FD3A  20                 	db	32
  3223  00FD3B  25                 	db	37
  3224  00FD3C  32                 	db	50	;'2'
  3225  00FD3D  2E                 	db	46
  3226  00FD3E  32                 	db	50	;'2'
  3227  00FD3F  66                 	db	102	;'f'
  3228  00FD40  20                 	db	32
  3229  00FD41  4C                 	db	76	;'L'
  3230  00FD42  41                 	db	65	;'A'
  3231  00FD43  20                 	db	32
  3232  00FD44  25                 	db	37
  3233  00FD45  32                 	db	50	;'2'
  3234  00FD46  2E                 	db	46
  3235  00FD47  32                 	db	50	;'2'
  3236  00FD48  66                 	db	102	;'f'
  3237  00FD49  20                 	db	32
  3238  00FD4A  20                 	db	32
  3239  00FD4B  20                 	db	32
  3240  00FD4C  20                 	db	32
  3241  00FD4D  00                 	db	0
  3242  00FD4E                     STR_34:
  3243                           
  3244                           ; BSR set to: 57
  3245  00FD4E  50                 	db	80	;'P'
  3246  00FD4F  56                 	db	86	;'V'
  3247  00FD50  20                 	db	32
  3248  00FD51  25                 	db	37
  3249  00FD52  32                 	db	50	;'2'
  3250  00FD53  2E                 	db	46
  3251  00FD54  32                 	db	50	;'2'
  3252  00FD55  66                 	db	102	;'f'
  3253  00FD56  20                 	db	32
  3254  00FD57  50                 	db	80	;'P'
  3255  00FD58  41                 	db	65	;'A'
  3256  00FD59  20                 	db	32
  3257  00FD5A  25                 	db	37
  3258  00FD5B  32                 	db	50	;'2'
  3259  00FD5C  2E                 	db	46
  3260  00FD5D  32                 	db	50	;'2'
  3261  00FD5E  66                 	db	102	;'f'
  3262  00FD5F  20                 	db	32
  3263  00FD60  20                 	db	32
  3264  00FD61  20                 	db	32
  3265  00FD62  20                 	db	32
  3266  00FD63  00                 	db	0
  3267  00FD64                     STR_46:
  3268                           
  3269                           ; BSR set to: 57
  3270  00FD64  25                 	db	37
  3271  00FD65  64                 	db	100	;'d'
  3272  00FD66  20                 	db	32
  3273  00FD67  25                 	db	37
  3274  00FD68  32                 	db	50	;'2'
  3275  00FD69  2E                 	db	46
  3276  00FD6A  34                 	db	52	;'4'
  3277  00FD6B  66                 	db	102	;'f'
  3278  00FD6C  2C                 	db	44
  3279  00FD6D  20                 	db	32
  3280  00FD6E  25                 	db	37
  3281  00FD6F  64                 	db	100	;'d'
  3282  00FD70  20                 	db	32
  3283  00FD71  20                 	db	32
  3284  00FD72  54                 	db	84	;'T'
  3285  00FD73  52                 	db	82	;'R'
  3286  00FD74  49                 	db	73	;'I'
  3287  00FD75  4D                 	db	77	;'M'
  3288  00FD76  20                 	db	32
  3289  00FD77  20                 	db	32
  3290  00FD78  20                 	db	32
  3291  00FD79  00                 	db	0
  3292  00FD7A                     STR_54:
  3293                           
  3294                           ; BSR set to: 57
  3295  00FD7A  20                 	db	32
  3296  00FD7B  25                 	db	37
  3297  00FD7C  64                 	db	100	;'d'
  3298  00FD7D  20                 	db	32
  3299  00FD7E  25                 	db	37
  3300  00FD7F  64                 	db	100	;'d'
  3301  00FD80  20                 	db	32
  3302  00FD81  20                 	db	32
  3303  00FD82  20                 	db	32
  3304  00FD83  20                 	db	32
  3305  00FD84  20                 	db	32
  3306  00FD85  20                 	db	32
  3307  00FD86  20                 	db	32
  3308  00FD87  20                 	db	32
  3309  00FD88  20                 	db	32
  3310  00FD89  20                 	db	32
  3311  00FD8A  20                 	db	32
  3312  00FD8B  20                 	db	32
  3313  00FD8C  20                 	db	32
  3314  00FD8D  20                 	db	32
  3315  00FD8E  00                 	db	0
  3316  00FD8F                     STR_57:
  3317                           
  3318                           ; BSR set to: 57
  3319  00FD8F  20                 	db	32
  3320  00FD90  25                 	db	37
  3321  00FD91  6C                 	db	108	;'l'
  3322  00FD92  64                 	db	100	;'d'
  3323  00FD93  20                 	db	32
  3324  00FD94  25                 	db	37
  3325  00FD95  6C                 	db	108	;'l'
  3326  00FD96  64                 	db	100	;'d'
  3327  00FD97  20                 	db	32
  3328  00FD98  20                 	db	32
  3329  00FD99  20                 	db	32
  3330  00FD9A  20                 	db	32
  3331  00FD9B  20                 	db	32
  3332  00FD9C  20                 	db	32
  3333  00FD9D  20                 	db	32
  3334  00FD9E  20                 	db	32
  3335  00FD9F  20                 	db	32
  3336  00FDA0  20                 	db	32
  3337  00FDA1  20                 	db	32
  3338  00FDA2  20                 	db	32
  3339  00FDA3  00                 	db	0
  3340  00FDA4                     STR_10:
  3341                           
  3342                           ; BSR set to: 57
  3343  00FDA4  42                 	db	66	;'B'
  3344  00FDA5  56                 	db	86	;'V'
  3345  00FDA6  20                 	db	32
  3346  00FDA7  25                 	db	37
  3347  00FDA8  32                 	db	50	;'2'
  3348  00FDA9  2E                 	db	46
  3349  00FDAA  34                 	db	52	;'4'
  3350  00FDAB  66                 	db	102	;'f'
  3351  00FDAC  20                 	db	32
  3352  00FDAD  20                 	db	32
  3353  00FDAE  20                 	db	32
  3354  00FDAF  20                 	db	32
  3355  00FDB0  20                 	db	32
  3356  00FDB1  20                 	db	32
  3357  00FDB2  20                 	db	32
  3358  00FDB3  20                 	db	32
  3359  00FDB4  20                 	db	32
  3360  00FDB5  20                 	db	32
  3361  00FDB6  20                 	db	32
  3362  00FDB7  20                 	db	32
  3363  00FDB8  00                 	db	0
  3364  00FDB9                     STR_4:
  3365                           
  3366                           ; BSR set to: 57
  3367  00FDB9  20                 	db	32
  3368  00FDBA  4E                 	db	78	;'N'
  3369  00FDBB  53                 	db	83	;'S'
  3370  00FDBC  41                 	db	65	;'A'
  3371  00FDBD  53                 	db	83	;'S'
  3372  00FDBE  50                 	db	80	;'P'
  3373  00FDBF  4F                 	db	79	;'O'
  3374  00FDC0  4F                 	db	79	;'O'
  3375  00FDC1  4B                 	db	75	;'K'
  3376  00FDC2  20                 	db	32
  3377  00FDC3  20                 	db	32
  3378  00FDC4  20                 	db	32
  3379  00FDC5  20                 	db	32
  3380  00FDC6  20                 	db	32
  3381  00FDC7  20                 	db	32
  3382  00FDC8  20                 	db	32
  3383  00FDC9  20                 	db	32
  3384  00FDCA  20                 	db	32
  3385  00FDCB  20                 	db	32
  3386  00FDCC  20                 	db	32
  3387  00FDCD  00                 	db	0
  3388  00FDCE                     STR_23:
  3389                           
  3390                           ; BSR set to: 57
  3391  00FDCE  54                 	db	84	;'T'
  3392  00FDCF  6F                 	db	111	;'o'
  3393  00FDD0  20                 	db	32
  3394  00FDD1  45                 	db	69	;'E'
  3395  00FDD2  45                 	db	69	;'E'
  3396  00FDD3  50                 	db	80	;'P'
  3397  00FDD4  52                 	db	82	;'R'
  3398  00FDD5  4F                 	db	79	;'O'
  3399  00FDD6  4D                 	db	77	;'M'
  3400  00FDD7  20                 	db	32
  3401  00FDD8  20                 	db	32
  3402  00FDD9  20                 	db	32
  3403  00FDDA  20                 	db	32
  3404  00FDDB  20                 	db	32
  3405  00FDDC  20                 	db	32
  3406  00FDDD  20                 	db	32
  3407  00FDDE  20                 	db	32
  3408  00FDDF  20                 	db	32
  3409  00FDE0  20                 	db	32
  3410  00FDE1  20                 	db	32
  3411  00FDE2  00                 	db	0
  3412  00FDE3                     STR_15:
  3413                           
  3414                           ; BSR set to: 57
  3415  00FDE3  42                 	db	66	;'B'
  3416  00FDE4  61                 	db	97	;'a'
  3417  00FDE5  74                 	db	116	;'t'
  3418  00FDE6  74                 	db	116	;'t'
  3419  00FDE7  65                 	db	101	;'e'
  3420  00FDE8  72                 	db	114	;'r'
  3421  00FDE9  79                 	db	121	;'y'
  3422  00FDEA  20                 	db	32
  3423  00FDEB  45                 	db	69	;'E'
  3424  00FDEC  53                 	db	83	;'S'
  3425  00FDED  52                 	db	82	;'R'
  3426  00FDEE  20                 	db	32
  3427  00FDEF  20                 	db	32
  3428  00FDF0  20                 	db	32
  3429  00FDF1  20                 	db	32
  3430  00FDF2  20                 	db	32
  3431  00FDF3  20                 	db	32
  3432  00FDF4  20                 	db	32
  3433  00FDF5  20                 	db	32
  3434  00FDF6  20                 	db	32
  3435  00FDF7  00                 	db	0
  3436  00FDF8                     STR_16:
  3437                           
  3438                           ; BSR set to: 57
  3439  00FDF8  43                 	db	67	;'C'
  3440  00FDF9  61                 	db	97	;'a'
  3441  00FDFA  6C                 	db	108	;'l'
  3442  00FDFB  63                 	db	99	;'c'
  3443  00FDFC  75                 	db	117	;'u'
  3444  00FDFD  6C                 	db	108	;'l'
  3445  00FDFE  61                 	db	97	;'a'
  3446  00FDFF  74                 	db	116	;'t'
  3447  00FE00  69                 	db	105	;'i'
  3448  00FE01  6F                 	db	111	;'o'
  3449  00FE02  6E                 	db	110	;'n'
  3450  00FE03  20                 	db	32
  3451  00FE04  20                 	db	32
  3452  00FE05  20                 	db	32
  3453  00FE06  20                 	db	32
  3454  00FE07  20                 	db	32
  3455  00FE08  20                 	db	32
  3456  00FE09  20                 	db	32
  3457  00FE0A  20                 	db	32
  3458  00FE0B  20                 	db	32
  3459  00FE0C  00                 	db	0
  3460  00FE0D                     STR_51:
  3461                           
  3462                           ; BSR set to: 57
  3463  00FE0D  43                 	db	67	;'C'
  3464  00FE0E  61                 	db	97	;'a'
  3465  00FE0F  6C                 	db	108	;'l'
  3466  00FE10  69                 	db	105	;'i'
  3467  00FE11  62                 	db	98	;'b'
  3468  00FE12  72                 	db	114	;'r'
  3469  00FE13  61                 	db	97	;'a'
  3470  00FE14  74                 	db	116	;'t'
  3471  00FE15  69                 	db	105	;'i'
  3472  00FE16  6F                 	db	111	;'o'
  3473  00FE17  6E                 	db	110	;'n'
  3474  00FE18  20                 	db	32
  3475  00FE19  20                 	db	32
  3476  00FE1A  20                 	db	32
  3477  00FE1B  20                 	db	32
  3478  00FE1C  20                 	db	32
  3479  00FE1D  20                 	db	32
  3480  00FE1E  20                 	db	32
  3481  00FE1F  20                 	db	32
  3482  00FE20  20                 	db	32
  3483  00FE21  00                 	db	0
  3484  00FE22                     STR_50:
  3485                           
  3486                           ; BSR set to: 57
  3487  00FE22  53                 	db	83	;'S'
  3488  00FE23  65                 	db	101	;'e'
  3489  00FE24  6E                 	db	110	;'n'
  3490  00FE25  73                 	db	115	;'s'
  3491  00FE26  6F                 	db	111	;'o'
  3492  00FE27  72                 	db	114	;'r'
  3493  00FE28  20                 	db	32
  3494  00FE29  5A                 	db	90	;'Z'
  3495  00FE2A  65                 	db	101	;'e'
  3496  00FE2B  72                 	db	114	;'r'
  3497  00FE2C  6F                 	db	111	;'o'
  3498  00FE2D  20                 	db	32
  3499  00FE2E  20                 	db	32
  3500  00FE2F  20                 	db	32
  3501  00FE30  20                 	db	32
  3502  00FE31  20                 	db	32
  3503  00FE32  20                 	db	32
  3504  00FE33  20                 	db	32
  3505  00FE34  20                 	db	32
  3506  00FE35  20                 	db	32
  3507  00FE36  00                 	db	0
  3508  00FE37                     STR_2:
  3509                           
  3510                           ; BSR set to: 57
  3511  00FE37  20                 	db	32
  3512  00FE38  56                 	db	86	;'V'
  3513  00FE39  65                 	db	101	;'e'
  3514  00FE3A  72                 	db	114	;'r'
  3515  00FE3B  73                 	db	115	;'s'
  3516  00FE3C  69                 	db	105	;'i'
  3517  00FE3D  6F                 	db	111	;'o'
  3518  00FE3E  6E                 	db	110	;'n'
  3519  00FE3F  20                 	db	32
  3520  00FE40  25                 	db	37
  3521  00FE41  73                 	db	115	;'s'
  3522  00FE42  20                 	db	32
  3523  00FE43  20                 	db	32
  3524  00FE44  20                 	db	32
  3525  00FE45  20                 	db	32
  3526  00FE46  20                 	db	32
  3527  00FE47  20                 	db	32
  3528  00FE48  20                 	db	32
  3529  00FE49  20                 	db	32
  3530  00FE4A  20                 	db	32
  3531  00FE4B  00                 	db	0
  3532  00FE4C                     STR_58:
  3533                           
  3534                           ; BSR set to: 57
  3535  00FE4C  5A                 	db	90	;'Z'
  3536  00FE4D  65                 	db	101	;'e'
  3537  00FE4E  72                 	db	114	;'r'
  3538  00FE4F  6F                 	db	111	;'o'
  3539  00FE50  20                 	db	32
  3540  00FE51  43                 	db	67	;'C'
  3541  00FE52  61                 	db	97	;'a'
  3542  00FE53  6C                 	db	108	;'l'
  3543  00FE54  20                 	db	32
  3544  00FE55  53                 	db	83	;'S'
  3545  00FE56  65                 	db	101	;'e'
  3546  00FE57  74                 	db	116	;'t'
  3547  00FE58  20                 	db	32
  3548  00FE59  20                 	db	32
  3549  00FE5A  20                 	db	32
  3550  00FE5B  20                 	db	32
  3551  00FE5C  20                 	db	32
  3552  00FE5D  20                 	db	32
  3553  00FE5E  20                 	db	32
  3554  00FE5F  20                 	db	32
  3555  00FE60  00                 	db	0
  3556  00FE61                     STR_1:
  3557                           
  3558                           ; BSR set to: 57
  3559  00FE61  20                 	db	32
  3560  00FE62  4D                 	db	77	;'M'
  3561  00FE63  42                 	db	66	;'B'
  3562  00FE64  4D                 	db	77	;'M'
  3563  00FE65  43                 	db	67	;'C'
  3564  00FE66  20                 	db	32
  3565  00FE67  53                 	db	83	;'S'
  3566  00FE68  4F                 	db	79	;'O'
  3567  00FE69  4C                 	db	76	;'L'
  3568  00FE6A  41                 	db	65	;'A'
  3569  00FE6B  52                 	db	82	;'R'
  3570  00FE6C  4D                 	db	77	;'M'
  3571  00FE6D  4F                 	db	79	;'O'
  3572  00FE6E  4E                 	db	78	;'N'
  3573  00FE6F  20                 	db	32
  3574  00FE70  20                 	db	32
  3575  00FE71  20                 	db	32
  3576  00FE72  20                 	db	32
  3577  00FE73  20                 	db	32
  3578  00FE74  20                 	db	32
  3579  00FE75  00                 	db	0
  3580  00FE76                     STR_49:
  3581                           
  3582                           ; BSR set to: 57
  3583  00FE76  42                 	db	66	;'B'
  3584  00FE77  61                 	db	97	;'a'
  3585  00FE78  74                 	db	116	;'t'
  3586  00FE79  74                 	db	116	;'t'
  3587  00FE7A  65                 	db	101	;'e'
  3588  00FE7B  72                 	db	114	;'r'
  3589  00FE7C  79                 	db	121	;'y'
  3590  00FE7D  20                 	db	32
  3591  00FE7E  61                 	db	97	;'a'
  3592  00FE7F  6E                 	db	110	;'n'
  3593  00FE80  64                 	db	100	;'d'
  3594  00FE81  20                 	db	32
  3595  00FE82  50                 	db	80	;'P'
  3596  00FE83  56                 	db	86	;'V'
  3597  00FE84  20                 	db	32
  3598  00FE85  20                 	db	32
  3599  00FE86  20                 	db	32
  3600  00FE87  20                 	db	32
  3601  00FE88  20                 	db	32
  3602  00FE89  20                 	db	32
  3603  00FE8A  00                 	db	0
  3604  00FE8B                     STR_18:
  3605                           
  3606                           ; BSR set to: 57
  3607  00FE8B  43                 	db	67	;'C'
  3608  00FE8C  68                 	db	104	;'h'
  3609  00FE8D  65                 	db	101	;'e'
  3610  00FE8E  63                 	db	99	;'c'
  3611  00FE8F  6B                 	db	107	;'k'
  3612  00FE90  69                 	db	105	;'i'
  3613  00FE91  6E                 	db	110	;'n'
  3614  00FE92  67                 	db	103	;'g'
  3615  00FE93  20                 	db	32
  3616  00FE94  25                 	db	37
  3617  00FE95  63                 	db	99	;'c'
  3618  00FE96  20                 	db	32
  3619  00FE97  25                 	db	37
  3620  00FE98  63                 	db	99	;'c'
  3621  00FE99  20                 	db	32
  3622  00FE9A  20                 	db	32
  3623  00FE9B  20                 	db	32
  3624  00FE9C  20                 	db	32
  3625  00FE9D  20                 	db	32
  3626  00FE9E  20                 	db	32
  3627  00FE9F  00                 	db	0
  3628  00FEA0                     STR_24:
  3629                           
  3630                           ; BSR set to: 57
  3631  00FEA0  20                 	db	32
  3632  00FEA1  54                 	db	84	;'T'
  3633  00FEA2  69                 	db	105	;'i'
  3634  00FEA3  6D                 	db	109	;'m'
  3635  00FEA4  65                 	db	101	;'e'
  3636  00FEA5  20                 	db	32
  3637  00FEA6  25                 	db	37
  3638  00FEA7  6C                 	db	108	;'l'
  3639  00FEA8  75                 	db	117	;'u'
  3640  00FEA9  2C                 	db	44
  3641  00FEAA  20                 	db	32
  3642  00FEAB  25                 	db	37
  3643  00FEAC  6C                 	db	108	;'l'
  3644  00FEAD  75                 	db	117	;'u'
  3645  00FEAE  20                 	db	32
  3646  00FEAF  20                 	db	32
  3647  00FEB0  20                 	db	32
  3648  00FEB1  20                 	db	32
  3649  00FEB2  20                 	db	32
  3650  00FEB3  20                 	db	32
  3651  00FEB4  00                 	db	0
  3652  00FEB5                     STR_53:
  3653                           
  3654                           ; BSR set to: 57
  3655  00FEB5  53                 	db	83	;'S'
  3656  00FEB6  65                 	db	101	;'e'
  3657  00FEB7  6E                 	db	110	;'n'
  3658  00FEB8  73                 	db	115	;'s'
  3659  00FEB9  6F                 	db	111	;'o'
  3660  00FEBA  72                 	db	114	;'r'
  3661  00FEBB  20                 	db	32
  3662  00FEBC  52                 	db	82	;'R'
  3663  00FEBD  65                 	db	101	;'e'
  3664  00FEBE  61                 	db	97	;'a'
  3665  00FEBF  64                 	db	100	;'d'
  3666  00FEC0  69                 	db	105	;'i'
  3667  00FEC1  6E                 	db	110	;'n'
  3668  00FEC2  67                 	db	103	;'g'
  3669  00FEC3  73                 	db	115	;'s'
  3670  00FEC4  20                 	db	32
  3671  00FEC5  20                 	db	32
  3672  00FEC6  20                 	db	32
  3673  00FEC7  20                 	db	32
  3674  00FEC8  20                 	db	32
  3675  00FEC9  00                 	db	0
  3676  00FECA                     STR_8:
  3677                           
  3678                           ; BSR set to: 57
  3679  00FECA  52                 	db	82	;'R'
  3680  00FECB  65                 	db	101	;'e'
  3681  00FECC  61                 	db	97	;'a'
  3682  00FECD  64                 	db	100	;'d'
  3683  00FECE  20                 	db	32
  3684  00FECF  45                 	db	69	;'E'
  3685  00FED0  45                 	db	69	;'E'
  3686  00FED1  50                 	db	80	;'P'
  3687  00FED2  52                 	db	82	;'R'
  3688  00FED3  4F                 	db	79	;'O'
  3689  00FED4  4D                 	db	77	;'M'
  3690  00FED5  20                 	db	32
  3691  00FED6  44                 	db	68	;'D'
  3692  00FED7  41                 	db	65	;'A'
  3693  00FED8  54                 	db	84	;'T'
  3694  00FED9  41                 	db	65	;'A'
  3695  00FEDA  20                 	db	32
  3696  00FEDB  20                 	db	32
  3697  00FEDC  20                 	db	32
  3698  00FEDD  20                 	db	32
  3699  00FEDE  00                 	db	0
  3700  00FEDF                     STR_17:
  3701                           
  3702                           ; BSR set to: 57
  3703  00FEDF  43                 	db	67	;'C'
  3704  00FEE0  68                 	db	104	;'h'
  3705  00FEE1  65                 	db	101	;'e'
  3706  00FEE2  63                 	db	99	;'c'
  3707  00FEE3  6B                 	db	107	;'k'
  3708  00FEE4  20                 	db	32
  3709  00FEE5  33                 	db	51	;'3'
  3710  00FEE6  30                 	db	48	;'0'
  3711  00FEE7  20                 	db	32
  3712  00FEE8  73                 	db	115	;'s'
  3713  00FEE9  65                 	db	101	;'e'
  3714  00FEEA  63                 	db	99	;'c'
  3715  00FEEB  6F                 	db	111	;'o'
  3716  00FEEC  6E                 	db	110	;'n'
  3717  00FEED  64                 	db	100	;'d'
  3718  00FEEE  73                 	db	115	;'s'
  3719  00FEEF  20                 	db	32
  3720  00FEF0  20                 	db	32
  3721  00FEF1  20                 	db	32
  3722  00FEF2  20                 	db	32
  3723  00FEF3  00                 	db	0
  3724  00FEF4                     STR_61:
  3725                           
  3726                           ; BSR set to: 57
  3727  00FEF4  5A                 	db	90	;'Z'
  3728  00FEF5  65                 	db	101	;'e'
  3729  00FEF6  72                 	db	114	;'r'
  3730  00FEF7  6F                 	db	111	;'o'
  3731  00FEF8  20                 	db	32
  3732  00FEF9  4F                 	db	79	;'O'
  3733  00FEFA  75                 	db	117	;'u'
  3734  00FEFB  74                 	db	116	;'t'
  3735  00FEFC  20                 	db	32
  3736  00FEFD  4F                 	db	79	;'O'
  3737  00FEFE  66                 	db	102	;'f'
  3738  00FEFF  20                 	db	32
  3739  00FF00  52                 	db	82	;'R'
  3740  00FF01  61                 	db	97	;'a'
  3741  00FF02  6E                 	db	110	;'n'
  3742  00FF03  67                 	db	103	;'g'
  3743  00FF04  65                 	db	101	;'e'
  3744  00FF05  20                 	db	32
  3745  00FF06  20                 	db	32
  3746  00FF07  20                 	db	32
  3747  00FF08  00                 	db	0
  3748  00FF09                     STR_55:
  3749                           
  3750                           ; BSR set to: 57
  3751  00FF09  53                 	db	83	;'S'
  3752  00FF0A  74                 	db	116	;'t'
  3753  00FF0B  61                 	db	97	;'a'
  3754  00FF0C  62                 	db	98	;'b'
  3755  00FF0D  69                 	db	105	;'i'
  3756  00FF0E  6C                 	db	108	;'l'
  3757  00FF0F  69                 	db	105	;'i'
  3758  00FF10  74                 	db	116	;'t'
  3759  00FF11  79                 	db	121	;'y'
  3760  00FF12  20                 	db	32
  3761  00FF13  63                 	db	99	;'c'
  3762  00FF14  6C                 	db	108	;'l'
  3763  00FF15  6F                 	db	111	;'o'
  3764  00FF16  63                 	db	99	;'c'
  3765  00FF17  6B                 	db	107	;'k'
  3766  00FF18  20                 	db	32
  3767  00FF19  25                 	db	37
  3768  00FF1A  64                 	db	100	;'d'
  3769  00FF1B  20                 	db	32
  3770  00FF1C  20                 	db	32
  3771  00FF1D  00                 	db	0
  3772  00FF1E                     STR_9:
  3773                           
  3774                           ; BSR set to: 57
  3775  00FF1E  49                 	db	73	;'I'
  3776  00FF1F  6E                 	db	110	;'n'
  3777  00FF20  76                 	db	118	;'v'
  3778  00FF21  61                 	db	97	;'a'
  3779  00FF22  6C                 	db	108	;'l'
  3780  00FF23  69                 	db	105	;'i'
  3781  00FF24  64                 	db	100	;'d'
  3782  00FF25  20                 	db	32
  3783  00FF26  45                 	db	69	;'E'
  3784  00FF27  45                 	db	69	;'E'
  3785  00FF28  50                 	db	80	;'P'
  3786  00FF29  52                 	db	82	;'R'
  3787  00FF2A  4F                 	db	79	;'O'
  3788  00FF2B  4D                 	db	77	;'M'
  3789  00FF2C  20                 	db	32
  3790  00FF2D  44                 	db	68	;'D'
  3791  00FF2E  41                 	db	65	;'A'
  3792  00FF2F  54                 	db	84	;'T'
  3793  00FF30  41                 	db	65	;'A'
  3794  00FF31  20                 	db	32
  3795  00FF32  00                 	db	0
  3796  00FF33                     STR_22:
  3797                           
  3798                           ; BSR set to: 57
  3799  00FF33  48                 	db	72	;'H'
  3800  00FF34  69                 	db	105	;'i'
  3801  00FF35  73                 	db	115	;'s'
  3802  00FF36  74                 	db	116	;'t'
  3803  00FF37  6F                 	db	111	;'o'
  3804  00FF38  72                 	db	114	;'r'
  3805  00FF39  79                 	db	121	;'y'
  3806  00FF3A  20                 	db	32
  3807  00FF3B  44                 	db	68	;'D'
  3808  00FF3C  61                 	db	97	;'a'
  3809  00FF3D  74                 	db	116	;'t'
  3810  00FF3E  61                 	db	97	;'a'
  3811  00FF3F  20                 	db	32
  3812  00FF40  20                 	db	32
  3813  00FF41  53                 	db	83	;'S'
  3814  00FF42  61                 	db	97	;'a'
  3815  00FF43  76                 	db	118	;'v'
  3816  00FF44  65                 	db	101	;'e'
  3817  00FF45  64                 	db	100	;'d'
  3818  00FF46  20                 	db	32
  3819  00FF47  00                 	db	0
  3820  00FF48                     STR_52:
  3821                           
  3822                           ; BSR set to: 57
  3823  00FF48  52                 	db	82	;'R'
  3824  00FF49  65                 	db	101	;'e'
  3825  00FF4A  6C                 	db	108	;'l'
  3826  00FF4B  65                 	db	101	;'e'
  3827  00FF4C  61                 	db	97	;'a'
  3828  00FF4D  73                 	db	115	;'s'
  3829  00FF4E  65                 	db	101	;'e'
  3830  00FF4F  20                 	db	32
  3831  00FF50  62                 	db	98	;'b'
  3832  00FF51  75                 	db	117	;'u'
  3833  00FF52  74                 	db	116	;'t'
  3834  00FF53  74                 	db	116	;'t'
  3835  00FF54  6F                 	db	111	;'o'
  3836  00FF55  6E                 	db	110	;'n'
  3837  00FF56  20                 	db	32
  3838  00FF57  25                 	db	37
  3839  00FF58  63                 	db	99	;'c'
  3840  00FF59  20                 	db	32
  3841  00FF5A  20                 	db	32
  3842  00FF5B  00                 	db	0
  3843  00FF5C                     STR_66:
  3844                           
  3845                           ; BSR set to: 57
  3846  00FF5C  48                 	db	72	;'H'
  3847  00FF5D  45                 	db	69	;'E'
  3848  00FF5E  4C                 	db	76	;'L'
  3849  00FF5F  50                 	db	80	;'P'
  3850  00FF60  20                 	db	32
  3851  00FF61  25                 	db	37
  3852  00FF62  73                 	db	115	;'s'
  3853  00FF63  20                 	db	32
  3854  00FF64  20                 	db	32
  3855  00FF65  20                 	db	32
  3856  00FF66  20                 	db	32
  3857  00FF67  20                 	db	32
  3858  00FF68  20                 	db	32
  3859  00FF69  20                 	db	32
  3860  00FF6A  20                 	db	32
  3861  00FF6B  20                 	db	32
  3862  00FF6C  20                 	db	32
  3863  00FF6D  20                 	db	32
  3864  00FF6E  00                 	db	0
  3865  00FF6F                     
  3866                           ; BSR set to: 57
  3867  00FF6F  44                 	db	68	;'D'
  3868  00FF70  49                 	db	73	;'I'
  3869  00FF71  53                 	db	83	;'S'
  3870  00FF72  50                 	db	80	;'P'
  3871  00FF73  4C                 	db	76	;'L'
  3872  00FF74  41                 	db	65	;'A'
  3873  00FF75  59                 	db	89	;'Y'
  3874  00FF76  20                 	db	32
  3875  00FF77  25                 	db	37
  3876  00FF78  73                 	db	115	;'s'
  3877  00FF79  20                 	db	32
  3878  00FF7A  20                 	db	32
  3879  00FF7B  20                 	db	32
  3880  00FF7C  20                 	db	32
  3881  00FF7D  20                 	db	32
  3882  00FF7E  20                 	db	32
  3883  00FF7F  20                 	db	32
  3884  00FF80  20                 	db	32
  3885  00FF81  00                 	db	0
  3886  00FF82                     
  3887                           ; BSR set to: 57
  3888  00FF82  25                 	db	37
  3889  00FF83  64                 	db	100	;'d'
  3890  00FF84  20                 	db	32
  3891  00FF85  25                 	db	37
  3892  00FF86  32                 	db	50	;'2'
  3893  00FF87  2E                 	db	46
  3894  00FF88  34                 	db	52	;'4'
  3895  00FF89  66                 	db	102	;'f'
  3896  00FF8A  2C                 	db	44
  3897  00FF8B  20                 	db	32
  3898  00FF8C  25                 	db	37
  3899  00FF8D  64                 	db	100	;'d'
  3900  00FF8E  20                 	db	32
  3901  00FF8F  20                 	db	32
  3902  00FF90  20                 	db	32
  3903  00FF91  23                 	db	35
  3904  00FF92  00                 	db	0
  3905  00FF93                     STR_25:
  3906                           
  3907                           ; BSR set to: 57
  3908  00FF93  25                 	db	37
  3909  00FF94  64                 	db	100	;'d'
  3910  00FF95  20                 	db	32
  3911  00FF96  25                 	db	37
  3912  00FF97  32                 	db	50	;'2'
  3913  00FF98  2E                 	db	46
  3914  00FF99  34                 	db	52	;'4'
  3915  00FF9A  66                 	db	102	;'f'
  3916  00FF9B  20                 	db	32
  3917  00FF9C  20                 	db	32
  3918  00FF9D  20                 	db	32
  3919  00FF9E  25                 	db	37
  3920  00FF9F  64                 	db	100	;'d'
  3921  00FFA0  20                 	db	32
  3922  00FFA1  20                 	db	32
  3923  00FFA2  00                 	db	0
  3924  00FFA3                     STR_70:
  3925                           
  3926                           ; BSR set to: 57
  3927  00FFA3  76                 	db	118	;'v'
  3928  00FFA4  74                 	db	116	;'t'
  3929  00FFA5  65                 	db	101	;'e'
  3930  00FFA6  72                 	db	114	;'r'
  3931  00FFA7  6D                 	db	109	;'m'
  3932  00FFA8  20                 	db	32
  3933  00FFA9  25                 	db	37
  3934  00FFAA  78                 	db	120	;'x'
  3935  00FFAB  3A                 	db	58	;':'
  3936  00FFAC  25                 	db	37
  3937  00FFAD  78                 	db	120	;'x'
  3938  00FFAE  20                 	db	32
  3939  00FFAF  20                 	db	32
  3940  00FFB0  20                 	db	32
  3941  00FFB1  00                 	db	0
  3942  00FFB2                     STR_64:
  3943                           
  3944                           ; BSR set to: 57
  3945  00FFB2  46                 	db	70	;'F'
  3946  00FFB3  65                 	db	101	;'e'
  3947  00FFB4  62                 	db	98	;'b'
  3948  00FFB5  20                 	db	32
  3949  00FFB6  31                 	db	49	;'1'
  3950  00FFB7  34                 	db	52	;'4'
  3951  00FFB8  20                 	db	32
  3952  00FFB9  32                 	db	50	;'2'
  3953  00FFBA  30                 	db	48	;'0'
  3954  00FFBB  32                 	db	50	;'2'
  3955  00FFBC  30                 	db	48	;'0'
  3956  00FFBD  00                 	db	0
  3957  00FFBE                     STR_68:
  3958                           
  3959                           ; BSR set to: 57
  3960  00FFBE  25                 	db	37
  3961  00FFBF  73                 	db	115	;'s'
  3962  00FFC0  20                 	db	32
  3963  00FFC1  20                 	db	32
  3964  00FFC2  20                 	db	32
  3965  00FFC3  20                 	db	32
  3966  00FFC4  20                 	db	32
  3967  00FFC5  20                 	db	32
  3968  00FFC6  20                 	db	32
  3969  00FFC7  00                 	db	0
  3970  00FFC8                     STR_65:
  3971                           
  3972                           ; BSR set to: 57
  3973  00FFC8  31                 	db	49	;'1'
  3974  00FFC9  36                 	db	54	;'6'
  3975  00FFCA  3A                 	db	58	;':'
  3976  00FFCB  34                 	db	52	;'4'
  3977  00FFCC  37                 	db	55	;'7'
  3978  00FFCD  3A                 	db	58	;':'
  3979  00FFCE  32                 	db	50	;'2'
  3980  00FFCF  35                 	db	53	;'5'
  3981  00FFD0  00                 	db	0
  3982  00FFD1                     STR_3:
  3983                           
  3984                           ; BSR set to: 57
  3985  00FFD1  31                 	db	49	;'1'
  3986  00FFD2  2E                 	db	46
  3987  00FFD3  32                 	db	50	;'2'
  3988  00FFD4  32                 	db	50	;'2'
  3989  00FFD5  00                 	db	0
  3990  00FFD6                     STR_84:
  3991                           
  3992                           ; BSR set to: 57
  3993  00FFD6  49                 	db	73	;'I'
  3994  00FFD7  4E                 	db	78	;'N'
  3995  00FFD8  46                 	db	70	;'F'
  3996  00FFD9  00                 	db	0
  3997  00FFDA                     STR_88:
  3998                           
  3999                           ; BSR set to: 57
  4000  00FFDA  4E                 	db	78	;'N'
  4001  00FFDB  41                 	db	65	;'A'
  4002  00FFDC  4E                 	db	78	;'N'
  4003  00FFDD  00                 	db	0
  4004  00FFDE                     STR_85:
  4005                           
  4006                           ; BSR set to: 57
  4007  00FFDE  69                 	db	105	;'i'
  4008  00FFDF  6E                 	db	110	;'n'
  4009  00FFE0  66                 	db	102	;'f'
  4010  00FFE1  00                 	db	0
  4011  00FFE2                     STR_89:
  4012                           
  4013                           ; BSR set to: 57
  4014  00FFE2  6E                 	db	110	;'n'
  4015  00FFE3  61                 	db	97	;'a'
  4016  00FFE4  6E                 	db	110	;'n'
  4017  00FFE5  00                 	db	0
  4018  00FFE6                     STR_115:
  4019                           
  4020                           ; BSR set to: 57
  4021  00FFE6  6C                 	db	108	;'l'
  4022  00FFE7  58                 	db	88	;'X'
  4023  00FFE8  00                 	db	0
  4024  00FFE9                     STR_92:
  4025                           
  4026                           ; BSR set to: 57
  4027  00FFE9  6C                 	db	108	;'l'
  4028  00FFEA  64                 	db	100	;'d'
  4029  00FFEB  00                 	db	0
  4030  00FFEC                     STR_101:
  4031                           
  4032                           ; BSR set to: 57
  4033  00FFEC  6C                 	db	108	;'l'
  4034  00FFED  66                 	db	102	;'f'
  4035  00FFEE  00                 	db	0
  4036  00FFEF                     STR_96:
  4037                           
  4038                           ; BSR set to: 57
  4039  00FFEF  6C                 	db	108	;'l'
  4040  00FFF0  69                 	db	105	;'i'
  4041  00FFF1  00                 	db	0
  4042  00FFF2                     STR_106:
  4043                           
  4044                           ; BSR set to: 57
  4045  00FFF2  6C                 	db	108	;'l'
  4046  00FFF3  75                 	db	117	;'u'
  4047  00FFF4  00                 	db	0
  4048  00FFF5                     STR_111:
  4049                           
  4050                           ; BSR set to: 57
  4051  00FFF5  6C                 	db	108	;'l'
  4052  00FFF6  78                 	db	120	;'x'
  4053  00FFF7  00                 	db	0
  4054  00FFF8                     STR_63:
  4055                           
  4056                           ; BSR set to: 57
  4057  00FFF8  25                 	db	37
  4058  00FFF9  63                 	db	99	;'c'
  4059  00FFFA  00                 	db	0
  4060  00FFFB                     STR_62:
  4061                           
  4062                           ; BSR set to: 57
  4063  00FFFB  25                 	db	37
  4064  00FFFC  73                 	db	115	;'s'
  4065  00FFFD  00                 	db	0
  4066  0000                     
  4067                           ; #config settings
  4068  00FFFE  00                 	db	0	; dummy byte at the end
  4069  0000                     
  4070                           	psect	cinit
  4071  01A5BA                     __pcinit:
  4072                           	opt callstack 0
  4073  01A5BA                     start_initialization:
  4074                           	opt callstack 0
  4075  01A5BA                     __initialization:
  4076                           	opt callstack 0
  4077                           
  4078                           ; Initialize objects allocated to BIGRAM (848 bytes)
  4079                           ; load TBLPTR registers with __pidataBIGRAM
  4080  01A5BA  0E6A               	movlw	low __pidataBIGRAM
  4081  01A5BC  6EF6               	movwf	tblptrl,c
  4082  01A5BE  0E6E               	movlw	high __pidataBIGRAM
  4083  01A5C0  6EF7               	movwf	tblptrh,c
  4084  01A5C2  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  4085  01A5C4  6EF8               	movwf	tblptru,c
  4086  01A5C6  EE01  F2FF         	lfsr	0,__pdataBIGRAM
  4087  01A5CA  EE20 F350          	lfsr	2,848
  4088  01A5CE                     copy_data0:
  4089  01A5CE  0009               	tblrd		*+
  4090  01A5D0  006F FFD7 FFEE     	movff	tablat,postinc0
  4091  01A5D6  50DD               	movf	postdec2,w,c
  4092  01A5D8  50D9               	movf	fsr2l,w,c
  4093  01A5DA  E1F9               	bnz	copy_data0
  4094  01A5DC  50DA               	movf	fsr2h,w,c
  4095  01A5DE  E1F7               	bnz	copy_data0
  4096                           
  4097                           ; Initialize objects allocated to BANK2 (171 bytes)
  4098                           ; load TBLPTR registers with __pidataBANK2
  4099  01A5E0  0E6C               	movlw	low __pidataBANK2
  4100  01A5E2  6EF6               	movwf	tblptrl,c
  4101  01A5E4  0EB6               	movlw	high __pidataBANK2
  4102  01A5E6  6EF7               	movwf	tblptrh,c
  4103  01A5E8  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4104  01A5EA  6EF8               	movwf	tblptru,c
  4105  01A5EC  EE00  F200         	lfsr	0,__pdataBANK2
  4106  01A5F0  EE20 F0AB          	lfsr	2,171
  4107  01A5F4                     copy_data1:
  4108  01A5F4  0009               	tblrd		*+
  4109  01A5F6  006F FFD7 FFEE     	movff	tablat,postinc0
  4110  01A5FC  50DD               	movf	postdec2,w,c
  4111  01A5FE  50D9               	movf	fsr2l,w,c
  4112  01A600  E1F9               	bnz	copy_data1
  4113                           
  4114                           ; Initialize objects allocated to BANK1 (199 bytes)
  4115                           ; load TBLPTR registers with __pidataBANK1
  4116  01A602  0E5E               	movlw	low __pidataBANK1
  4117  01A604  6EF6               	movwf	tblptrl,c
  4118  01A606  0EB1               	movlw	high __pidataBANK1
  4119  01A608  6EF7               	movwf	tblptrh,c
  4120  01A60A  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  4121  01A60C  6EF8               	movwf	tblptru,c
  4122  01A60E  EE00  F100         	lfsr	0,__pdataBANK1
  4123  01A612  EE20 F0C7          	lfsr	2,199
  4124  01A616                     copy_data2:
  4125  01A616  0009               	tblrd		*+
  4126  01A618  006F FFD7 FFEE     	movff	tablat,postinc0
  4127  01A61E  50DD               	movf	postdec2,w,c
  4128  01A620  50D9               	movf	fsr2l,w,c
  4129  01A622  E1F9               	bnz	copy_data2
  4130                           
  4131                           ; Initialize objects allocated to BANK0 (9 bytes)
  4132                           ; load TBLPTR registers with __pidataBANK0
  4133  01A624  0EE2               	movlw	low __pidataBANK0
  4134  01A626  6EF6               	movwf	tblptrl,c
  4135  01A628  0ED4               	movlw	high __pidataBANK0
  4136  01A62A  6EF7               	movwf	tblptrh,c
  4137  01A62C  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  4138  01A62E  6EF8               	movwf	tblptru,c
  4139  01A630  EE00  F0F1         	lfsr	0,__pdataBANK0
  4140  01A634  EE20 F009          	lfsr	2,9
  4141  01A638                     copy_data3:
  4142  01A638  0009               	tblrd		*+
  4143  01A63A  006F FFD7 FFEE     	movff	tablat,postinc0
  4144  01A640  50DD               	movf	postdec2,w,c
  4145  01A642  50D9               	movf	fsr2l,w,c
  4146  01A644  E1F9               	bnz	copy_data3
  4147                           
  4148                           ; Clear objects allocated to BIGRAM (482 bytes)
  4149  01A646  EE02  F24F         	lfsr	0,__pbssBIGRAM
  4150  01A64A  EE20 F1E2          	lfsr	2,482
  4151  01A64E                     clear_0:
  4152  01A64E  6AEE               	clrf	postinc0,c
  4153  01A650  50DD               	movf	postdec2,w,c
  4154  01A652  50D9               	movf	fsr2l,w,c
  4155  01A654  E1FC               	bnz	clear_0
  4156  01A656  50DA               	movf	fsr2h,w,c
  4157  01A658  E1FA               	bnz	clear_0
  4158                           
  4159                           ; Clear objects allocated to BANK6 (255 bytes)
  4160  01A65A  EE01  F200         	lfsr	0,__pbssBANK6
  4161  01A65E  EE20 F0FF          	lfsr	2,255
  4162  01A662                     clear_1:
  4163  01A662  6AEE               	clrf	postinc0,c
  4164  01A664  50DD               	movf	postdec2,w,c
  4165  01A666  50D9               	movf	fsr2l,w,c
  4166  01A668  E1FC               	bnz	clear_1
  4167  01A66A  50DA               	movf	fsr2h,w,c
  4168  01A66C  E1FA               	bnz	clear_1
  4169                           
  4170                           ; Clear objects allocated to BANK5 (67 bytes)
  4171  01A66E  EE01  F100         	lfsr	0,__pbssBANK5
  4172  01A672  0E43               	movlw	67
  4173  01A674                     clear_2:
  4174  01A674  6AEE               	clrf	postinc0,c
  4175  01A676  06E8               	decf	wreg,f,c
  4176  01A678  E1FD               	bnz	clear_2
  4177                           
  4178                           ; Clear objects allocated to BANK4 (238 bytes)
  4179  01A67A  EE01  F000         	lfsr	0,__pbssBANK4
  4180  01A67E  0EEE               	movlw	238
  4181  01A680                     clear_3:
  4182  01A680  6AEE               	clrf	postinc0,c
  4183  01A682  06E8               	decf	wreg,f,c
  4184  01A684  E1FD               	bnz	clear_3
  4185                           
  4186                           ; Clear objects allocated to BANK3 (228 bytes)
  4187  01A686  EE00  F300         	lfsr	0,__pbssBANK3
  4188  01A68A  0EE4               	movlw	228
  4189  01A68C                     clear_4:
  4190  01A68C  6AEE               	clrf	postinc0,c
  4191  01A68E  06E8               	decf	wreg,f,c
  4192  01A690  E1FD               	bnz	clear_4
  4193                           
  4194                           ; Clear objects allocated to BANK2 (26 bytes)
  4195  01A692  EE00  F2AB         	lfsr	0,__pbssBANK2
  4196  01A696  0E1A               	movlw	26
  4197  01A698                     clear_5:
  4198  01A698  6AEE               	clrf	postinc0,c
  4199  01A69A  06E8               	decf	wreg,f,c
  4200  01A69C  E1FD               	bnz	clear_5
  4201                           
  4202                           ; Clear objects allocated to BANK1 (49 bytes)
  4203  01A69E  EE00  F1C7         	lfsr	0,__pbssBANK1
  4204  01A6A2  0E31               	movlw	49
  4205  01A6A4                     clear_6:
  4206  01A6A4  6AEE               	clrf	postinc0,c
  4207  01A6A6  06E8               	decf	wreg,f,c
  4208  01A6A8  E1FD               	bnz	clear_6
  4209                           
  4210                           ; Clear objects allocated to BANK0 (120 bytes)
  4211  01A6AA  EE00  F060         	lfsr	0,__pbssBANK0
  4212  01A6AE  0E78               	movlw	120
  4213  01A6B0                     clear_7:
  4214  01A6B0  6AEE               	clrf	postinc0,c
  4215  01A6B2  06E8               	decf	wreg,f,c
  4216  01A6B4  E1FD               	bnz	clear_7
  4217                           
  4218                           ; Clear objects allocated to COMRAM (14 bytes)
  4219  01A6B6  EE00  F03A         	lfsr	0,__pbssCOMRAM
  4220  01A6BA  0E0E               	movlw	14
  4221  01A6BC                     clear_8:
  4222  01A6BC  6AEE               	clrf	postinc0,c
  4223  01A6BE  06E8               	decf	wreg,f,c
  4224  01A6C0  E1FD               	bnz	clear_8
  4225                           
  4226                           ;
  4227                           ; Setup IVTBASE
  4228                           ;
  4229  01A6C2  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  4230  01A6C4  6ED5               	movwf	213,c
  4231  01A6C6  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  4232  01A6C8  6ED6               	movwf	214,c
  4233  01A6CA  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  4234  01A6CC  6ED7               	movwf	215,c
  4235  01A6CE                     end_of_initialization:
  4236                           	opt callstack 0
  4237  01A6CE                     __end_of__initialization:
  4238                           	opt callstack 0
  4239  01A6CE  0100               	movlb	0
  4240  01A6D0  EF00  F080         	goto	_main	;jump to C main() function
  4241                           
  4242                           	psect	bssCOMRAM
  4243  00003A                     __pbssCOMRAM:
  4244                           	opt callstack 0
  4245  00003A                     _width:
  4246                           	opt callstack 0
  4247  00003A                     	ds	2
  4248  00003C                     _prec:
  4249                           	opt callstack 0
  4250  00003C                     	ds	2
  4251  00003E                     _flags:
  4252                           	opt callstack 0
  4253  00003E                     	ds	2
  4254  000040                     calc_bsoc@log_update_wait:
  4255                           	opt callstack 0
  4256  000040                     	ds	1
  4257  000041                     check_day_time@day_delay:
  4258                           	opt callstack 0
  4259  000041                     	ds	1
  4260  000042                     dac_spi_control@S0:
  4261                           	opt callstack 0
  4262  000042                     	ds	1
  4263  000043                     dac_spi_control@init:
  4264                           	opt callstack 0
  4265  000043                     	ds	1
  4266  000044                     _uart2RxHead:
  4267                           	opt callstack 0
  4268  000044                     	ds	1
  4269  000045                     _uart2TxBufferRemaining:
  4270                           	opt callstack 0
  4271  000045                     	ds	1
  4272  000046                     _uart2TxTail:
  4273                           	opt callstack 0
  4274  000046                     	ds	1
  4275  000047                     _uart1RxHead:
  4276                           	opt callstack 0
  4277  000047                     	ds	1
  4278                           
  4279                           	psect	bssBANK0
  4280  000060                     __pbssBANK0:
  4281                           	opt callstack 0
  4282  000060                     _spi_link:
  4283                           	opt callstack 0
  4284  000060                     	ds	12
  4285  00006C                     _uart1RxBuffer:
  4286                           	opt callstack 0
  4287  00006C                     	ds	8
  4288  000074                     spinners@s:
  4289                           	opt callstack 0
  4290  000074                     	ds	6
  4291  00007A                     floorf@F524:
  4292                           	opt callstack 0
  4293  00007A                     	ds	4
  4294  00007E                     fabsf@F463:
  4295                           	opt callstack 0
  4296  00007E                     	ds	4
  4297  000082                     ___fpclassifyf@F463:
  4298                           	opt callstack 0
  4299  000082                     	ds	4
  4300  000086                     calc_ror_data@bcror:
  4301                           	opt callstack 0
  4302  000086                     	ds	4
  4303  00008A                     calc_ror_data@bvror:
  4304                           	opt callstack 0
  4305  00008A                     	ds	4
  4306  00008E                     calc_model_data@bcror:
  4307                           	opt callstack 0
  4308  00008E                     	ds	4
  4309  000092                     calc_model_data@bvror:
  4310                           	opt callstack 0
  4311  000092                     	ds	4
  4312  000096                     _utctime:
  4313                           	opt callstack 0
  4314  000096                     	ds	4
  4315  00009A                     wdtdelay@dcount:
  4316                           	opt callstack 0
  4317  00009A                     	ds	4
  4318  00009E                     _P:
  4319                           	opt callstack 0
  4320  00009E                     	ds	4
  4321  0000A2                     _TMR3_InterruptHandler:
  4322                           	opt callstack 0
  4323  0000A2                     	ds	3
  4324  0000A5                     _TMR5_InterruptHandler:
  4325                           	opt callstack 0
  4326  0000A5                     	ds	3
  4327  0000A8                     _TMR6_InterruptHandler:
  4328                           	opt callstack 0
  4329  0000A8                     	ds	3
  4330  0000AB                     _ADCC_ADTI_InterruptHandler:
  4331                           	opt callstack 0
  4332  0000AB                     	ds	3
  4333  0000AE                     _ADCC_ADI_InterruptHandler:
  4334                           	opt callstack 0
  4335  0000AE                     	ds	3
  4336  0000B1                     _UART1_RxInterruptHandler:
  4337                           	opt callstack 0
  4338  0000B1                     	ds	3
  4339  0000B4                     _UART2_TxInterruptHandler:
  4340                           	opt callstack 0
  4341  0000B4                     	ds	3
  4342  0000B7                     _UART2_RxInterruptHandler:
  4343                           	opt callstack 0
  4344  0000B7                     	ds	3
  4345  0000BA                     _INT1_InterruptHandler:
  4346                           	opt callstack 0
  4347  0000BA                     	ds	3
  4348  0000BD                     _INT0_InterruptHandler:
  4349                           	opt callstack 0
  4350  0000BD                     	ds	3
  4351  0000C0                     _nout:
  4352                           	opt callstack 0
  4353  0000C0                     	ds	2
  4354  0000C2                     TMR3_ISR@CountCallBack:
  4355                           	opt callstack 0
  4356  0000C2                     	ds	2
  4357  0000C4                     _timer3ReloadVal:
  4358                           	opt callstack 0
  4359  0000C4                     	ds	2
  4360  0000C6                     TMR5_ISR@CountCallBack:
  4361                           	opt callstack 0
  4362  0000C6                     	ds	2
  4363  0000C8                     _timer5ReloadVal:
  4364                           	opt callstack 0
  4365  0000C8                     	ds	2
  4366  0000CA                     esr_check@esr_state:
  4367                           	opt callstack 0
  4368  0000CA                     	ds	1
  4369  0000CB                     dac_spi_control@SB:
  4370                           	opt callstack 0
  4371  0000CB                     	ds	1
  4372  0000CC                     dac_spi_control@SC:
  4373                           	opt callstack 0
  4374  0000CC                     	ds	1
  4375  0000CD                     dac_spi_control@S2:
  4376                           	opt callstack 0
  4377  0000CD                     	ds	1
  4378  0000CE                     dac_spi_control@S1:
  4379                           	opt callstack 0
  4380  0000CE                     	ds	1
  4381  0000CF                     _mode_sw:
  4382                           	opt callstack 0
  4383  0000CF                     	ds	1
  4384  0000D0                     _uart2RxCount:
  4385                           	opt callstack 0
  4386  0000D0                     	ds	1
  4387  0000D1                     _uart2RxTail:
  4388                           	opt callstack 0
  4389  0000D1                     	ds	1
  4390  0000D2                     _uart2TxHead:
  4391                           	opt callstack 0
  4392  0000D2                     	ds	1
  4393  0000D3                     _uart1RxCount:
  4394                           	opt callstack 0
  4395  0000D3                     	ds	1
  4396  0000D4                     _uart1RxTail:
  4397                           	opt callstack 0
  4398  0000D4                     	ds	1
  4399  0000D5                     _crcObj:
  4400                           	opt callstack 0
  4401  0000D5                     	ds	3
  4402                           
  4403                           	psect	dataBANK0
  4404  0000F1                     __pdataBANK0:
  4405                           	opt callstack 0
  4406  0000F1                     _H:
  4407                           	opt callstack 0
  4408  0000F1                     	ds	9
  4409                           
  4410                           	psect	bssBANK1
  4411  0001C7                     __pbssBANK1:
  4412                           	opt callstack 0
  4413  0001C7                     _S:
  4414                           	opt callstack 0
  4415  0001C7                     	ds	41
  4416  0001F0                     _seed:
  4417                           	opt callstack 0
  4418  0001F0                     	ds	8
  4419                           
  4420                           	psect	dataBANK1
  4421  000100                     __pdataBANK1:
  4422                           	opt callstack 0
  4423  000100                     stoa@F1166:
  4424                           	opt callstack 0
  4425  000100                     	ds	7
  4426  000107                     _V:
  4427                           	opt callstack 0
  4428  000107                     	ds	192
  4429                           
  4430                           	psect	bssBANK2
  4431  0002AB                     __pbssBANK2:
  4432                           	opt callstack 0
  4433  0002AB                     _tickCount:
  4434                           	opt callstack 0
  4435  0002AB                     	ds	26
  4436                           
  4437                           	psect	dataBANK2
  4438  000200                     __pdataBANK2:
  4439                           	opt callstack 0
  4440  000200                     _R:
  4441                           	opt callstack 0
  4442  000200                     	ds	171
  4443                           
  4444                           	psect	bssBANK3
  4445  000300                     __pbssBANK3:
  4446                           	opt callstack 0
  4447  000300                     lp_filter@smooth:
  4448                           	opt callstack 0
  4449  000300                     	ds	84
  4450  000354                     _uart2TxBuffer:
  4451                           	opt callstack 0
  4452  000354                     	ds	64
  4453  000394                     _dbuf:
  4454                           	opt callstack 0
  4455  000394                     	ds	80
  4456                           
  4457                           	psect	bssBANK4
  4458  000400                     __pbssBANK4:
  4459                           	opt callstack 0
  4460  000400                     _r_cal:
  4461                           	opt callstack 0
  4462  000400                     	ds	171
  4463  0004AB                     _ring_buf1:
  4464                           	opt callstack 0
  4465  0004AB                     	ds	67
  4466                           
  4467                           	psect	bssBANK5
  4468  000500                     __pbssBANK5:
  4469                           	opt callstack 0
  4470  000500                     _ring_buf2:
  4471                           	opt callstack 0
  4472  000500                     	ds	67
  4473                           
  4474                           	psect	bssBANK6
  4475  000600                     __pbssBANK6:
  4476                           	opt callstack 0
  4477  000600                     _uart2RxBuffer:
  4478                           	opt callstack 0
  4479  000600                     	ds	255
  4480                           
  4481                           	psect	bssBIGRAM
  4482  000A4F                     __pbssBIGRAM:
  4483                           	opt callstack 0
  4484  000A4F                     _D:
  4485                           	opt callstack 0
  4486  000A4F                     	ds	482
  4487                           
  4488                           	psect	dataBIGRAM
  4489  0006FF                     __pdataBIGRAM:
  4490                           	opt callstack 0
  4491  0006FF                     _port_data:
  4492                           	opt callstack 0
  4493  0006FF                     	ds	512
  4494  0008FF                     _C:
  4495                           	opt callstack 0
  4496  0008FF                     	ds	336
  4497                           
  4498                           	psect	cstackBANK0
  4499  0000D8                     __pcstackBANK0:
  4500                           	opt callstack 0
  4501  0000D8                     ??_TMR3_ISR:
  4502                           
  4503                           ; 1 bytes @ 0x0
  4504  0000D8                     	ds	25
  4505                           
  4506                           	psect	cstackCOMRAM
  4507  000021                     __pcstackCOMRAM:
  4508                           	opt callstack 0
  4509  000021                     ??_ADCC_ThresholdISR:
  4510  000021                     
  4511                           ; 1 bytes @ 0x0
  4512  000021                     	ds	5
  4513  000026                     ??_TMR6_ISR:
  4514                           
  4515                           ; 1 bytes @ 0x5
  4516  000026                     	ds	1
  4517  000027                     ??_INT1_ISR:
  4518  000027                     
  4519                           ; 1 bytes @ 0x6
  4520  000027                     	ds	4
  4521  00002B                     ??_TMR5_ISR:
  4522                           
  4523                           ; 1 bytes @ 0xA
  4524  00002B                     	ds	15
  4525                           
  4526 ;;
  4527 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  4528 ;;
  4529 ;; *************** function _main *****************
  4530 ;; Defined at:
  4531 ;;		line 195 in file "main.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;		None
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;  esr_temp        4  [STACK] float 
  4536 ;;  i_esr           2  [STACK] unsigned short 
  4537 ;;  shape           1  [STACK] unsigned char 
  4538 ;;  inp_index       1  [STACK] unsigned char 
  4539 ;;  k               1  [STACK] unsigned char 
  4540 ;;  j               1  [STACK] unsigned char 
  4541 ;;  i               1  [STACK] unsigned char 
  4542 ;;  mode            1  [STACK] enum E17179
  4543 ;;  i_ror           1  [STACK] unsigned char 
  4544 ;; Return value:  Size  Location     Type
  4545 ;;                  1  [STACK] void 
  4546 ;; Registers used:
  4547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4557 ;;Total ram usage:        0 bytes
  4558 ;; Hardware stack levels required when called:   29
  4559 ;; This function calls:
  4560 ;;		_SYSTEM_Initialize
  4561 ;;		_StartTimer
  4562 ;;		_TimerDone
  4563 ;;		_WaitMs
  4564 ;;		___fladd
  4565 ;;		___flge
  4566 ;;		___fltol
  4567 ;;		_calc_model_data
  4568 ;;		_calc_ror_data
  4569 ;;		_check_adc_scan
  4570 ;;		_check_enter_button
  4571 ;;		_check_help
  4572 ;;		_clear_adc_scan
  4573 ;;		_clear_hid_pflags
  4574 ;;		_conv_raw_result
  4575 ;;		_convert_adc_data
  4576 ;;		_current_sensor_cal
  4577 ;;		_eaDogM_WriteCommand
  4578 ;;		_esr_check
  4579 ;;		_fabsf
  4580 ;;		_get_raw_result
  4581 ;;		_get_switch
  4582 ;;		_get_vterm_ptr
  4583 ;;		_hid_display
  4584 ;;		_init_bsoc
  4585 ;;		_init_display
  4586 ;;		_init_port_dma
  4587 ;;		_load_hist_data
  4588 ;;		_lp_filter
  4589 ;;		_mode_lamp_dim
  4590 ;;		_read_cal_data
  4591 ;;		_set_dac
  4592 ;;		_set_dac_a
  4593 ;;		_set_dac_b
  4594 ;;		_set_display_info
  4595 ;;		_set_load_relay_one
  4596 ;;		_set_load_relay_two
  4597 ;;		_set_vterm
  4598 ;;		_spinners
  4599 ;;		_sprintf
  4600 ;;		_srand
  4601 ;;		_start_adc_scan
  4602 ;;		_start_switch_handler
  4603 ;;		_static_soc
  4604 ;;		_update_cal_data
  4605 ;;		_update_hist_data
  4606 ;;		_update_lcd
  4607 ;;		_wait_lcd_done
  4608 ;;		_write_cal_data
  4609 ;; This function is called by:
  4610 ;;		Startup code after reset
  4611 ;; This function uses a reentrant model
  4612 ;;
  4613                           
  4614                           	psect	text0
  4615  010000                     __ptext0:
  4616                           	opt callstack 0
  4617  010000                     _main:
  4618                           	opt callstack 0
  4619                           
  4620                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4621  010000  0E11               	movlw	17
  4622  010002  26E1               	addwf	fsr1l,f,c
  4623  010004  0E00               	movlw	0
  4624  010006  22E2               	addwfc	fsr1h,f,c
  4625                           
  4626                           ;main.c: 197:  UI_STATES mode;;main.c: 198:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4627                           ;stkvar	_inp_index @ sp[(-17)+11]
  4628                           
  4629                           ;incstack = 0
  4630  010008  0EFA               	movlw	-6
  4631  01000A  6AE3               	clrf	plusw1,c
  4632                           
  4633                           ;stkvar	_i @ sp[(-17)+14]
  4634  01000C  0EFD               	movlw	-3
  4635  01000E  6AE3               	clrf	plusw1,c
  4636                           
  4637                           ;stkvar	_j @ sp[(-17)+13]
  4638  010010  0EFC               	movlw	-4
  4639  010012  6AE3               	clrf	plusw1,c
  4640  010014  2AE3               	incf	plusw1,f,c
  4641                           
  4642                           ;stkvar	_k @ sp[(-17)+12]
  4643  010016  0EFB               	movlw	-5
  4644  010018  6AE3               	clrf	plusw1,c
  4645  01001A  82E3               	bsf	plusw1,1,c
  4646                           
  4647                           ;main.c: 201:  SYSTEM_Initialize();
  4648  01001C  EC10  F0E3         	call	_SYSTEM_Initialize	;wreg free
  4649                           
  4650                           ; BSR set to: 60
  4651                           ;main.c: 204:  (INTCON0bits.GIEH = 1);
  4652  010020  8ED2               	bsf	210,7,c	;volatile
  4653                           
  4654                           ; BSR set to: 60
  4655                           ;main.c: 207:  (INTCON0bits.GIEL = 1);
  4656  010022  8CD2               	bsf	210,6,c	;volatile
  4657                           
  4658                           ; BSR set to: 60
  4659                           ;main.c: 209:  V.ui_state = UI_STATE_INIT;
  4660  010024  0101               	movlb	1	; () banked
  4661  010026  6B07               	clrf	_V& (0+255),b	;volatile
  4662                           
  4663                           ; BSR set to: 1
  4664                           ;main.c: 214:  WaitMs(300);
  4665  010028  0E2C               	movlw	44
  4666  01002A  6EE6               	movwf	postinc1,c
  4667  01002C  0E01               	movlw	1
  4668  01002E  6EE6               	movwf	postinc1,c
  4669  010030  ECD0  F0E5         	call	_WaitMs	;wreg free
  4670                           
  4671                           ;main.c: 215:  if (PORTBbits.RB0) {
  4672  010034  A0CB               	btfss	203,0,c	;volatile
  4673  010036  D004               	goto	l14474
  4674                           
  4675                           ;main.c: 216:   mode = UI_STATE_HOST;
  4676                           ;stkvar	_mode @ sp[(-17)+15]
  4677  010038  0EFE               	movlw	-2
  4678  01003A  6AE3               	clrf	plusw1,c
  4679  01003C  2AE3               	incf	plusw1,f,c
  4680                           
  4681                           ;main.c: 217:  } else {
  4682  01003E  D004               	goto	l14476
  4683  010040                     l14474:
  4684                           
  4685                           ;main.c: 218:   mode = UI_STATE_LOG;
  4686                           ;stkvar	_mode @ sp[(-17)+15]
  4687  010040  0EFE               	movlw	-2
  4688  010042  6AE3               	clrf	plusw1,c
  4689  010044  80E3               	bsf	plusw1,0,c
  4690  010046  82E3               	bsf	plusw1,1,c	;indir
  4691  010048                     l14476:
  4692                           
  4693                           ;main.c: 221:  if (mode == UI_STATE_HOST) {
  4694                           ;stkvar	_mode @ sp[(-17)+15]
  4695  010048  0EFE               	movlw	-2
  4696  01004A  04E3               	decf	plusw1,w,c
  4697  01004C  A4D8               	btfss	status,2,c
  4698  01004E  D007               	goto	l1439
  4699                           
  4700                           ;main.c: 222:   do { LATDbits.LATD0 = 1; } while(0);
  4701  010050  80BD               	bsf	189,0,c	;volatile
  4702                           
  4703                           ;main.c: 223:   V.mode_pwm = 70;
  4704  010052  0E00               	movlw	0
  4705  010054  0101               	movlb	1	; () banked
  4706  010056  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  4707  010058  0E46               	movlw	70
  4708  01005A  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  4709                           
  4710                           ;main.c: 224:  } else {
  4711  01005C  D004               	goto	l14480
  4712  01005E                     l1439:
  4713  01005E  90BD               	bcf	189,0,c	;volatile
  4714                           
  4715                           ;main.c: 226:   V.mode_pwm = 0;
  4716  010060  0101               	movlb	1	; () banked
  4717  010062  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  4718  010064  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  4719  010066                     l14480:
  4720                           
  4721                           ; BSR set to: 1
  4722                           ;main.c: 228:  mode_lamp_dim(V.mode_pwm);
  4723  010066  0060  F673  FFE6   	movff	_V+149,postinc1
  4724  01006C  0060  F677  FFE6   	movff	_V+150,postinc1
  4725  010072  ECB3  F0E9         	call	_mode_lamp_dim	;wreg free
  4726  010076  D3A4               	goto	l14630
  4727  010078                     l14482:
  4728                           
  4729                           ; BSR set to: 1
  4730                           ;main.c: 236:    init_port_dma();
  4731  010078  EC86  F0E6         	call	_init_port_dma	;wreg free
  4732                           
  4733                           ; BSR set to: 59
  4734                           ;main.c: 238:    init_display();
  4735  01007C  EC19  F0D6         	call	_init_display	;wreg free
  4736                           
  4737                           ; BSR set to: 61
  4738                           ;main.c: 239:    eaDogM_WriteCommand(0b00001100);
  4739  010080  0E0C               	movlw	12
  4740  010082  6EE6               	movwf	postinc1,c
  4741  010084  EC30  F0EA         	call	_eaDogM_WriteCommand	;wreg free
  4742                           
  4743                           ; BSR set to: 0
  4744                           ;main.c: 240:    set_dac();
  4745  010088  EC2E  F0DA         	call	_set_dac	;wreg free
  4746                           
  4747                           ;main.c: 244:    set_load_relay_one(1);
  4748  01008C  0E01               	movlw	1
  4749  01008E  6EE6               	movwf	postinc1,c
  4750  010090  EC10  F0EA         	call	_set_load_relay_one	;wreg free
  4751                           
  4752                           ;main.c: 245:    set_load_relay_two(1);
  4753  010094  0E01               	movlw	1
  4754  010096  6EE6               	movwf	postinc1,c
  4755  010098  EC08  F0EA         	call	_set_load_relay_two	;wreg free
  4756                           
  4757                           ;main.c: 247:    V.ui_state = mode;
  4758                           ;stkvar	_mode @ sp[(-17)+15]
  4759  01009C  0EFE               	movlw	-2
  4760  01009E  006F FF8C  F107    	movff	plusw1,_V	;volatile
  4761                           
  4762                           ;main.c: 248:    srand(1957);
  4763  0100A4  0EA5               	movlw	165
  4764  0100A6  6EE6               	movwf	postinc1,c
  4765  0100A8  0E07               	movlw	7
  4766  0100AA  6EE6               	movwf	postinc1,c
  4767  0100AC  ECEB  F0E5         	call	_srand	;wreg free
  4768                           
  4769                           ; BSR set to: 1
  4770                           ;main.c: 249:    set_vterm(0);
  4771  0100B0  0E00               	movlw	0
  4772  0100B2  6EE6               	movwf	postinc1,c
  4773  0100B4  EC5F  F0E9         	call	_set_vterm	;wreg free
  4774                           
  4775                           ;main.c: 250:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4776  0100B8  0E61               	movlw	low STR_1
  4777  0100BA  6EE6               	movwf	postinc1,c
  4778  0100BC  0EFE               	movlw	high STR_1
  4779  0100BE  6EE6               	movwf	postinc1,c
  4780  0100C0  0E00               	movlw	0
  4781  0100C2  6EE6               	movwf	postinc1,c
  4782  0100C4  0E00               	movlw	0
  4783  0100C6  6EE6               	movwf	postinc1,c
  4784  0100C8  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  4785  0100CC  0060  F007  FFE6   	movff	btemp,postinc1
  4786  0100D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4787  0100D8  0E04               	movlw	4
  4788  0100DA  6EE6               	movwf	postinc1,c
  4789  0100DC  EC94  F0D5         	call	_sprintf	;wreg free
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;main.c: 251:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.22");
  4793  0100E0  0ED1               	movlw	low STR_3
  4794  0100E2  6EE6               	movwf	postinc1,c
  4795  0100E4  0EFF               	movlw	high STR_3
  4796  0100E6  6EE6               	movwf	postinc1,c
  4797  0100E8  0E37               	movlw	low STR_2
  4798  0100EA  6EE6               	movwf	postinc1,c
  4799  0100EC  0EFE               	movlw	high STR_2
  4800  0100EE  6EE6               	movwf	postinc1,c
  4801  0100F0  0E00               	movlw	0
  4802  0100F2  6EE6               	movwf	postinc1,c
  4803  0100F4  0E01               	movlw	1
  4804  0100F6  6EE6               	movwf	postinc1,c
  4805  0100F8  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  4806  0100FC  0060  F007  FFE6   	movff	btemp,postinc1
  4807  010102  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4808  010108  0E06               	movlw	6
  4809  01010A  6EE6               	movwf	postinc1,c
  4810  01010C  EC94  F0D5         	call	_sprintf	;wreg free
  4811                           
  4812                           ; BSR set to: 0
  4813                           ;main.c: 252:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4814  010110  0EB9               	movlw	low STR_4
  4815  010112  6EE6               	movwf	postinc1,c
  4816  010114  0EFD               	movlw	high STR_4
  4817  010116  6EE6               	movwf	postinc1,c
  4818  010118  0E00               	movlw	0
  4819  01011A  6EE6               	movwf	postinc1,c
  4820  01011C  0E02               	movlw	2
  4821  01011E  6EE6               	movwf	postinc1,c
  4822  010120  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  4823  010124  0060  F007  FFE6   	movff	btemp,postinc1
  4824  01012A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4825  010130  0E04               	movlw	4
  4826  010132  6EE6               	movwf	postinc1,c
  4827  010134  EC94  F0D5         	call	_sprintf	;wreg free
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;main.c: 253:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4831  010138  0E05               	movlw	low (STR_14+1)
  4832  01013A  6EE6               	movwf	postinc1,c
  4833  01013C  0EFC               	movlw	high (STR_14+1)
  4834  01013E  6EE6               	movwf	postinc1,c
  4835  010140  0E02               	movlw	2
  4836  010142  6EE6               	movwf	postinc1,c
  4837  010144  0E00               	movlw	0
  4838  010146  6EE6               	movwf	postinc1,c
  4839  010148  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  4840  01014C  0060  F007  FFE6   	movff	btemp,postinc1
  4841  010152  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4842  010158  0E04               	movlw	4
  4843  01015A  6EE6               	movwf	postinc1,c
  4844  01015C  EC94  F0D5         	call	_sprintf	;wreg free
  4845                           
  4846                           ; BSR set to: 0
  4847                           ;main.c: 254:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4848  010160  0E05               	movlw	low (STR_14+1)
  4849  010162  6EE6               	movwf	postinc1,c
  4850  010164  0EFC               	movlw	high (STR_14+1)
  4851  010166  6EE6               	movwf	postinc1,c
  4852  010168  0E02               	movlw	2
  4853  01016A  6EE6               	movwf	postinc1,c
  4854  01016C  0E01               	movlw	1
  4855  01016E  6EE6               	movwf	postinc1,c
  4856  010170  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  4857  010174  0060  F007  FFE6   	movff	btemp,postinc1
  4858  01017A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4859  010180  0E04               	movlw	4
  4860  010182  6EE6               	movwf	postinc1,c
  4861  010184  EC94  F0D5         	call	_sprintf	;wreg free
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;main.c: 255:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4865  010188  0E05               	movlw	low (STR_14+1)
  4866  01018A  6EE6               	movwf	postinc1,c
  4867  01018C  0EFC               	movlw	high (STR_14+1)
  4868  01018E  6EE6               	movwf	postinc1,c
  4869  010190  0E02               	movlw	2
  4870  010192  6EE6               	movwf	postinc1,c
  4871  010194  0E02               	movlw	2
  4872  010196  6EE6               	movwf	postinc1,c
  4873  010198  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  4874  01019C  0060  F007  FFE6   	movff	btemp,postinc1
  4875  0101A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4876  0101A8  0E04               	movlw	4
  4877  0101AA  6EE6               	movwf	postinc1,c
  4878  0101AC  EC94  F0D5         	call	_sprintf	;wreg free
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;main.c: 256:    update_lcd(0);
  4882  0101B0  0E00               	movlw	0
  4883  0101B2  6EE6               	movwf	postinc1,c
  4884  0101B4  EC0C  F0D5         	call	_update_lcd	;wreg free
  4885                           
  4886                           ;main.c: 257:    WaitMs(1000);
  4887  0101B8  0EE8               	movlw	232
  4888  0101BA  6EE6               	movwf	postinc1,c
  4889  0101BC  0E03               	movlw	3
  4890  0101BE  6EE6               	movwf	postinc1,c
  4891  0101C0  ECD0  F0E5         	call	_WaitMs	;wreg free
  4892                           
  4893                           ;main.c: 258:    StartTimer(TMR_DISPLAY, 250);
  4894  0101C4  0EFA               	movlw	250
  4895  0101C6  6EE6               	movwf	postinc1,c
  4896  0101C8  0E00               	movlw	0
  4897  0101CA  6EE6               	movwf	postinc1,c
  4898  0101CC  0E0A               	movlw	10
  4899  0101CE  6EE6               	movwf	postinc1,c
  4900  0101D0  ECDC  F0E4         	call	_StartTimer	;wreg free
  4901                           
  4902                           ;main.c: 259:    StartTimer(TMR_ADC, 200);
  4903  0101D4  0EC8               	movlw	200
  4904  0101D6  6EE6               	movwf	postinc1,c
  4905  0101D8  0E00               	movlw	0
  4906  0101DA  6EE6               	movwf	postinc1,c
  4907  0101DC  0E01               	movlw	1
  4908  0101DE  6EE6               	movwf	postinc1,c
  4909  0101E0  ECDC  F0E4         	call	_StartTimer	;wreg free
  4910                           
  4911                           ;main.c: 260:    StartTimer(TMR_INFO, 3000);
  4912  0101E4  0EB8               	movlw	184
  4913  0101E6  6EE6               	movwf	postinc1,c
  4914  0101E8  0E0B               	movlw	11
  4915  0101EA  6EE6               	movwf	postinc1,c
  4916  0101EC  0E07               	movlw	7
  4917  0101EE  6EE6               	movwf	postinc1,c
  4918  0101F0  ECDC  F0E4         	call	_StartTimer	;wreg free
  4919                           
  4920                           ;main.c: 261:    StartTimer(TMR_FLIPPER, 1500);
  4921  0101F4  0EDC               	movlw	220
  4922  0101F6  6EE6               	movwf	postinc1,c
  4923  0101F8  0E05               	movlw	5
  4924  0101FA  6EE6               	movwf	postinc1,c
  4925  0101FC  0E0B               	movlw	11
  4926  0101FE  6EE6               	movwf	postinc1,c
  4927  010200  ECDC  F0E4         	call	_StartTimer	;wreg free
  4928                           
  4929                           ;main.c: 262:    StartTimer(TMR_HELPDIS, 3000);
  4930  010204  0EB8               	movlw	184
  4931  010206  6EE6               	movwf	postinc1,c
  4932  010208  0E0B               	movlw	11
  4933  01020A  6EE6               	movwf	postinc1,c
  4934  01020C  0E09               	movlw	9
  4935  01020E  6EE6               	movwf	postinc1,c
  4936  010210  ECDC  F0E4         	call	_StartTimer	;wreg free
  4937                           
  4938                           ;main.c: 264:    start_adc_scan();
  4939  010214  EC48  F0E1         	call	_start_adc_scan	;wreg free
  4940                           
  4941                           ;main.c: 265:    start_switch_handler();
  4942  010218  EC21  F0E9         	call	_start_switch_handler	;wreg free
  4943                           
  4944                           ; BSR set to: 57
  4945                           ;main.c: 266:    WaitMs(1000);
  4946  01021C  0EE8               	movlw	232
  4947  01021E  6EE6               	movwf	postinc1,c
  4948  010220  0E03               	movlw	3
  4949  010222  6EE6               	movwf	postinc1,c
  4950  010224  ECD0  F0E5         	call	_WaitMs	;wreg free
  4951                           
  4952                           ;main.c: 271:    if (read_cal_data()) {
  4953  010228  ECA9  F0C7         	call	_read_cal_data	;wreg free
  4954  01022C  5001               	movf	btemp^0,w,c
  4955  01022E  B4D8               	btfsc	status,2,c
  4956  010230  D01F               	goto	l14540
  4957                           
  4958                           ;main.c: 272:     update_cal_data();
  4959  010232  EC93  F0E2         	call	_update_cal_data	;wreg free
  4960                           
  4961                           ; BSR set to: 2
  4962                           ;main.c: 273:     update_hist_data(1, &C.hist[0]);
  4963  010236  0EB8               	movlw	low (_C+185)
  4964  010238  6EE6               	movwf	postinc1,c
  4965  01023A  0E09               	movlw	high (_C+185)
  4966  01023C  6EE6               	movwf	postinc1,c
  4967  01023E  0E01               	movlw	1
  4968  010240  6EE6               	movwf	postinc1,c
  4969  010242  EC0B  F0E0         	call	_update_hist_data	;wreg free
  4970                           
  4971                           ;main.c: 274:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  4972  010246  0ECA               	movlw	low STR_8
  4973  010248  6EE6               	movwf	postinc1,c
  4974  01024A  0EFE               	movlw	high STR_8
  4975  01024C  6EE6               	movwf	postinc1,c
  4976  01024E  0E00               	movlw	0
  4977  010250  6EE6               	movwf	postinc1,c
  4978  010252  0E02               	movlw	2
  4979  010254  6EE6               	movwf	postinc1,c
  4980  010256  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  4981  01025A  0060  F007  FFE6   	movff	btemp,postinc1
  4982  010260  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4983  010266  0E04               	movlw	4
  4984  010268  6EE6               	movwf	postinc1,c
  4985  01026A  EC94  F0D5         	call	_sprintf	;wreg free
  4986                           
  4987                           ;main.c: 275:    } else {
  4988  01026E  D014               	goto	l1445
  4989  010270                     l14540:
  4990                           
  4991                           ;main.c: 276:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  4992  010270  0E1E               	movlw	low STR_9
  4993  010272  6EE6               	movwf	postinc1,c
  4994  010274  0EFF               	movlw	high STR_9
  4995  010276  6EE6               	movwf	postinc1,c
  4996  010278  0E00               	movlw	0
  4997  01027A  6EE6               	movwf	postinc1,c
  4998  01027C  0E02               	movlw	2
  4999  01027E  6EE6               	movwf	postinc1,c
  5000  010280  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  5001  010284  0060  F007  FFE6   	movff	btemp,postinc1
  5002  01028A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5003  010290  0E04               	movlw	4
  5004  010292  6EE6               	movwf	postinc1,c
  5005  010294  EC94  F0D5         	call	_sprintf	;wreg free
  5006  010298                     l1445:
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;main.c: 278:    update_lcd(0);
  5010  010298  0E00               	movlw	0
  5011  01029A  6EE6               	movwf	postinc1,c
  5012  01029C  EC0C  F0D5         	call	_update_lcd	;wreg free
  5013                           
  5014                           ;main.c: 279:    WaitMs(2000);
  5015  0102A0  0ED0               	movlw	208
  5016  0102A2  6EE6               	movwf	postinc1,c
  5017  0102A4  0E07               	movlw	7
  5018  0102A6  6EE6               	movwf	postinc1,c
  5019  0102A8  ECD0  F0E5         	call	_WaitMs	;wreg free
  5020                           
  5021                           ;main.c: 281:    i_ror = 1;
  5022                           ;stkvar	_i_ror @ sp[(-17)+16]
  5023  0102AC  0EFF               	movlw	-1
  5024  0102AE  6AE3               	clrf	plusw1,c
  5025  0102B0  2AE3               	incf	plusw1,f,c
  5026  0102B2                     l14546:
  5027                           
  5028                           ;main.c: 283:     calc_ror_data();
  5029  0102B2  EC37  F0CA         	call	_calc_ror_data	;wreg free
  5030                           
  5031                           ;main.c: 284:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  5032  0102B6  0E00               	movlw	0
  5033  0102B8  6EE6               	movwf	postinc1,c
  5034  0102BA  0E04               	movlw	4
  5035  0102BC  6EE6               	movwf	postinc1,c
  5036  0102BE  EC9D  F0AA         	call	_conv_raw_result	;wreg free
  5037  0102C2  0060  F007  FFE6   	movff	btemp,postinc1
  5038  0102C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5039  0102CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5040  0102D4  0060  F013  FFE6   	movff	btemp+3,postinc1
  5041  0102DA  0EA4               	movlw	low STR_10
  5042  0102DC  6EE6               	movwf	postinc1,c
  5043  0102DE  0EFD               	movlw	high STR_10
  5044  0102E0  6EE6               	movwf	postinc1,c
  5045  0102E2  0E00               	movlw	0
  5046  0102E4  6EE6               	movwf	postinc1,c
  5047  0102E6  0E01               	movlw	1
  5048  0102E8  6EE6               	movwf	postinc1,c
  5049  0102EA  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  5050  0102EE  0060  F007  FFE6   	movff	btemp,postinc1
  5051  0102F4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5052  0102FA  0E08               	movlw	8
  5053  0102FC  6EE6               	movwf	postinc1,c
  5054  0102FE  EC94  F0D5         	call	_sprintf	;wreg free
  5055                           
  5056                           ; BSR set to: 0
  5057                           ;main.c: 285:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  5058  010302  EE22  F16B         	lfsr	2,_C+108	;volatile
  5059  010306  006F FF7B FFE6     	movff	postinc2,postinc1
  5060  01030C  006F FF7B FFE6     	movff	postinc2,postinc1
  5061  010312  006F FF7B FFE6     	movff	postinc2,postinc1
  5062  010318  006F FF7B FFE6     	movff	postinc2,postinc1
  5063                           
  5064                           ;stkvar	_i_ror @ sp[(-21)+16]
  5065  01031E  0EFB               	movlw	-5
  5066  010320  50E3               	movf	plusw1,w,c
  5067  010322  6EE6               	movwf	postinc1,c
  5068  010324  0E00               	movlw	0
  5069  010326  6EE6               	movwf	postinc1,c
  5070  010328  0E00               	movlw	0
  5071  01032A  6EE6               	movwf	postinc1,c
  5072  01032C  0E05               	movlw	5
  5073  01032E  6EE6               	movwf	postinc1,c
  5074  010330  EC8E  F0D6         	call	_spinners	;wreg free
  5075  010334  5001               	movf	btemp^0,w,c
  5076  010336  6EE6               	movwf	postinc1,c
  5077  010338  0E00               	movlw	0
  5078  01033A  6EE6               	movwf	postinc1,c
  5079  01033C  0E5F               	movlw	low STR_11
  5080  01033E  6EE6               	movwf	postinc1,c
  5081  010340  0EFB               	movlw	high STR_11
  5082  010342  6EE6               	movwf	postinc1,c
  5083  010344  0E00               	movlw	0
  5084  010346  6EE6               	movwf	postinc1,c
  5085  010348  0E02               	movlw	2
  5086  01034A  6EE6               	movwf	postinc1,c
  5087  01034C  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  5088  010350  0060  F007  FFE6   	movff	btemp,postinc1
  5089  010356  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5090  01035C  0E0C               	movlw	12
  5091  01035E  6EE6               	movwf	postinc1,c
  5092  010360  EC94  F0D5         	call	_sprintf	;wreg free
  5093                           
  5094                           ; BSR set to: 0
  5095                           ;main.c: 286:     update_lcd(0);
  5096  010364  0E00               	movlw	0
  5097  010366  6EE6               	movwf	postinc1,c
  5098  010368  EC0C  F0D5         	call	_update_lcd	;wreg free
  5099                           
  5100                           ;main.c: 287:     clear_adc_scan();
  5101  01036C  EC8D  F0EA         	call	_clear_adc_scan	;wreg free
  5102                           
  5103                           ; BSR set to: 2
  5104                           ;main.c: 288:     start_adc_scan();
  5105  010370  EC48  F0E1         	call	_start_adc_scan	;wreg free
  5106                           
  5107                           ;main.c: 289:     WaitMs(2000);
  5108  010374  0ED0               	movlw	208
  5109  010376  6EE6               	movwf	postinc1,c
  5110  010378  0E07               	movlw	7
  5111  01037A  6EE6               	movwf	postinc1,c
  5112  01037C  ECD0  F0E5         	call	_WaitMs	;wreg free
  5113                           
  5114                           ;main.c: 292:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  5115                           ;stkvar	_i_ror @ sp[(-17)+16]
  5116  010380  0EFF               	movlw	-1
  5117  010382  006F FF8C  F00C    	movff	plusw1,btemp+11
  5118  010388  2A0C               	incf	(btemp+11)^0,f,c
  5119  01038A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5120  010390  060C               	decf	(btemp+11)^0,f,c
  5121  010392  0E1E               	movlw	30
  5122  010394  600C               	cpfslt	(btemp+11)^0,c
  5123  010396  D01A               	goto	u13860
  5124  010398  EE22  F16B         	lfsr	2,_C+108	;volatile
  5125  01039C  006F FF7B FFE6     	movff	postinc2,postinc1
  5126  0103A2  006F FF7B FFE6     	movff	postinc2,postinc1
  5127  0103A8  006F FF7B FFE6     	movff	postinc2,postinc1
  5128  0103AE  006F FF7B FFE6     	movff	postinc2,postinc1
  5129  0103B4  0E42               	movlw	66
  5130  0103B6  6EE6               	movwf	postinc1,c
  5131  0103B8  0E60               	movlw	96
  5132  0103BA  6EE6               	movwf	postinc1,c
  5133  0103BC  0E65               	movlw	101
  5134  0103BE  6EE6               	movwf	postinc1,c
  5135  0103C0  0E3C               	movlw	60
  5136  0103C2  6EE6               	movwf	postinc1,c
  5137  0103C4  EC2C  F0CD         	call	___flge	;wreg free
  5138  0103C8  A001               	btfss	btemp& (0+255),0,c
  5139  0103CA  D773               	goto	l14546
  5140  0103CC                     u13860:
  5141                           
  5142                           ;main.c: 294:    static_soc();
  5143  0103CC  EC0C  F0E2         	call	_static_soc	;wreg free
  5144                           
  5145                           ;main.c: 295:    init_bsoc();
  5146  0103D0  EC38  F0C1         	call	_init_bsoc	;wreg free
  5147                           
  5148                           ;main.c: 296:    set_load_relay_one(0);
  5149  0103D4  0E00               	movlw	0
  5150  0103D6  6EE6               	movwf	postinc1,c
  5151  0103D8  EC10  F0EA         	call	_set_load_relay_one	;wreg free
  5152                           
  5153                           ;main.c: 297:    set_load_relay_two(0);
  5154  0103DC  0E00               	movlw	0
  5155  0103DE  6EE6               	movwf	postinc1,c
  5156  0103E0  EC08  F0EA         	call	_set_load_relay_two	;wreg free
  5157                           
  5158                           ;main.c: 298:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  5159  0103E4  EE22  F1B5         	lfsr	2,_C+182	;volatile
  5160  0103E8  006F FF78  F00B    	movff	postinc2,btemp+10
  5161  0103EE  006F FF74  F00C    	movff	postdec2,btemp+11
  5162  0103F4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5163  0103FA  0060  F033  FFE6   	movff	btemp+11,postinc1
  5164  010400  0E30               	movlw	low STR_12
  5165  010402  6EE6               	movwf	postinc1,c
  5166  010404  0EFC               	movlw	high STR_12
  5167  010406  6EE6               	movwf	postinc1,c
  5168  010408  0E00               	movlw	0
  5169  01040A  6EE6               	movwf	postinc1,c
  5170  01040C  0E00               	movlw	0
  5171  01040E  6EE6               	movwf	postinc1,c
  5172  010410  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  5173  010414  0060  F007  FFE6   	movff	btemp,postinc1
  5174  01041A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5175  010420  0E06               	movlw	6
  5176  010422  6EE6               	movwf	postinc1,c
  5177  010424  EC94  F0D5         	call	_sprintf	;wreg free
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;main.c: 299:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  5181  010428  EE22  F18F         	lfsr	2,_C+144	;volatile
  5182  01042C  006F FF7B FFE6     	movff	postinc2,postinc1
  5183  010432  006F FF7B FFE6     	movff	postinc2,postinc1
  5184  010438  006F FF7B FFE6     	movff	postinc2,postinc1
  5185  01043E  006F FF7B FFE6     	movff	postinc2,postinc1
  5186  010444  0E0C               	movlw	low STR_13
  5187  010446  6EE6               	movwf	postinc1,c
  5188  010448  0EFD               	movlw	high STR_13
  5189  01044A  6EE6               	movwf	postinc1,c
  5190  01044C  0E00               	movlw	0
  5191  01044E  6EE6               	movwf	postinc1,c
  5192  010450  0E01               	movlw	1
  5193  010452  6EE6               	movwf	postinc1,c
  5194  010454  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  5195  010458  0060  F007  FFE6   	movff	btemp,postinc1
  5196  01045E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5197  010464  0E08               	movlw	8
  5198  010466  6EE6               	movwf	postinc1,c
  5199  010468  EC94  F0D5         	call	_sprintf	;wreg free
  5200                           
  5201                           ; BSR set to: 0
  5202                           ;main.c: 300:    sprintf(get_vterm_ptr(2, 0), "                     ");
  5203  01046C  0E04               	movlw	low STR_14
  5204  01046E  6EE6               	movwf	postinc1,c
  5205  010470  0EFC               	movlw	high STR_14
  5206  010472  6EE6               	movwf	postinc1,c
  5207  010474  0E00               	movlw	0
  5208  010476  6EE6               	movwf	postinc1,c
  5209  010478  0E02               	movlw	2
  5210  01047A  6EE6               	movwf	postinc1,c
  5211  01047C  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  5212  010480  0060  F007  FFE6   	movff	btemp,postinc1
  5213  010486  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5214  01048C  0E04               	movlw	4
  5215  01048E  6EE6               	movwf	postinc1,c
  5216  010490  EC94  F0D5         	call	_sprintf	;wreg free
  5217                           
  5218                           ; BSR set to: 0
  5219                           ;main.c: 301:    update_lcd(0);
  5220  010494  0E00               	movlw	0
  5221  010496  6EE6               	movwf	postinc1,c
  5222  010498  EC0C  F0D5         	call	_update_lcd	;wreg free
  5223                           
  5224                           ;main.c: 302:    WaitMs(2000);
  5225  01049C  0ED0               	movlw	208
  5226  01049E  6EE6               	movwf	postinc1,c
  5227  0104A0  0E07               	movlw	7
  5228  0104A2  6EE6               	movwf	postinc1,c
  5229  0104A4  ECD0  F0E5         	call	_WaitMs	;wreg free
  5230                           
  5231                           ;main.c: 303:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  5232  0104A8  0EE3               	movlw	low STR_15
  5233  0104AA  6EE6               	movwf	postinc1,c
  5234  0104AC  0EFD               	movlw	high STR_15
  5235  0104AE  6EE6               	movwf	postinc1,c
  5236  0104B0  0E00               	movlw	0
  5237  0104B2  6EE6               	movwf	postinc1,c
  5238  0104B4  0E00               	movlw	0
  5239  0104B6  6EE6               	movwf	postinc1,c
  5240  0104B8  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  5241  0104BC  0060  F007  FFE6   	movff	btemp,postinc1
  5242  0104C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5243  0104C8  0E04               	movlw	4
  5244  0104CA  6EE6               	movwf	postinc1,c
  5245  0104CC  EC94  F0D5         	call	_sprintf	;wreg free
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;main.c: 304:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  5249  0104D0  0EF8               	movlw	low STR_16
  5250  0104D2  6EE6               	movwf	postinc1,c
  5251  0104D4  0EFD               	movlw	high STR_16
  5252  0104D6  6EE6               	movwf	postinc1,c
  5253  0104D8  0E00               	movlw	0
  5254  0104DA  6EE6               	movwf	postinc1,c
  5255  0104DC  0E01               	movlw	1
  5256  0104DE  6EE6               	movwf	postinc1,c
  5257  0104E0  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  5258  0104E4  0060  F007  FFE6   	movff	btemp,postinc1
  5259  0104EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5260  0104F0  0E04               	movlw	4
  5261  0104F2  6EE6               	movwf	postinc1,c
  5262  0104F4  EC94  F0D5         	call	_sprintf	;wreg free
  5263                           
  5264                           ; BSR set to: 0
  5265                           ;main.c: 305:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  5266  0104F8  0EDF               	movlw	low STR_17
  5267  0104FA  6EE6               	movwf	postinc1,c
  5268  0104FC  0EFE               	movlw	high STR_17
  5269  0104FE  6EE6               	movwf	postinc1,c
  5270  010500  0E00               	movlw	0
  5271  010502  6EE6               	movwf	postinc1,c
  5272  010504  0E02               	movlw	2
  5273  010506  6EE6               	movwf	postinc1,c
  5274  010508  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  5275  01050C  0060  F007  FFE6   	movff	btemp,postinc1
  5276  010512  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5277  010518  0E04               	movlw	4
  5278  01051A  6EE6               	movwf	postinc1,c
  5279  01051C  EC94  F0D5         	call	_sprintf	;wreg free
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;main.c: 306:    update_lcd(0);
  5283  010520  0E00               	movlw	0
  5284  010522  6EE6               	movwf	postinc1,c
  5285  010524  EC0C  F0D5         	call	_update_lcd	;wreg free
  5286                           
  5287                           ;main.c: 307:    uint16_t i_esr = 1;
  5288  010528  0E01               	movlw	1
  5289  01052A  6E0B               	movwf	(btemp+10)^0,c
  5290  01052C  0E00               	movlw	0
  5291  01052E  6E0C               	movwf	(btemp+11)^0,c
  5292                           
  5293                           ;stkvar	_i_esr @ sp[(-17)+8]
  5294  010530  0EF7               	movlw	-9
  5295  010532  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5296  010538  0EF8               	movlw	-8
  5297  01053A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5298                           
  5299                           ;main.c: 309:    float esr_temp;;main.c: 310:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  5300  010540  D06D               	goto	l14606
  5301  010542                     l14594:
  5302                           
  5303                           ;main.c: 311:     WaitMs(110);
  5304  010542  0E6E               	movlw	110
  5305  010544  6EE6               	movwf	postinc1,c
  5306  010546  0E00               	movlw	0
  5307  010548  6EE6               	movwf	postinc1,c
  5308  01054A  ECD0  F0E5         	call	_WaitMs	;wreg free
  5309                           
  5310                           ;main.c: 312:     shape = (uint8_t) fabsf(esr_temp);
  5311                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5312  01054E  0EF3               	movlw	-13
  5313  010550  006F FF8F FFE6     	movff	plusw1,postinc1
  5314  010556  006F FF8F FFE6     	movff	plusw1,postinc1
  5315  01055C  006F FF8F FFE6     	movff	plusw1,postinc1
  5316  010562  006F FF8F FFE6     	movff	plusw1,postinc1
  5317  010568  EC89  F0DA         	call	_fabsf	;wreg free
  5318  01056C  0060  F007  FFE6   	movff	btemp,postinc1
  5319  010572  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5320  010578  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5321  01057E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5322  010584  EC73  F0CC         	call	___fltol	;wreg free
  5323  010588  0060  F004  F00C   	movff	btemp,btemp+11
  5324                           
  5325                           ;stkvar	_shape @ sp[(-17)+10]
  5326  01058E  0EF9               	movlw	-7
  5327  010590  0060  F033  FFE3   	movff	btemp+11,plusw1
  5328                           
  5329                           ;main.c: 313:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  5330  010596  0E00               	movlw	0
  5331  010598  6EE6               	movwf	postinc1,c
  5332                           
  5333                           ;stkvar	_shape @ sp[(-18)+10]
  5334  01059A  0EF8               	movlw	-8
  5335  01059C  50E3               	movf	plusw1,w,c
  5336  01059E  6EE6               	movwf	postinc1,c
  5337  0105A0  EC8E  F0D6         	call	_spinners	;wreg free
  5338  0105A4  5001               	movf	btemp^0,w,c
  5339  0105A6  6EE6               	movwf	postinc1,c
  5340  0105A8  0E00               	movlw	0
  5341  0105AA  6EE6               	movwf	postinc1,c
  5342  0105AC  0E00               	movlw	0
  5343  0105AE  6EE6               	movwf	postinc1,c
  5344  0105B0  0E00               	movlw	0
  5345  0105B2  6EE6               	movwf	postinc1,c
  5346  0105B4  EC8E  F0D6         	call	_spinners	;wreg free
  5347  0105B8  5001               	movf	btemp^0,w,c
  5348  0105BA  6EE6               	movwf	postinc1,c
  5349  0105BC  0E00               	movlw	0
  5350  0105BE  6EE6               	movwf	postinc1,c
  5351  0105C0  0E8B               	movlw	low STR_18
  5352  0105C2  6EE6               	movwf	postinc1,c
  5353  0105C4  0EFE               	movlw	high STR_18
  5354  0105C6  6EE6               	movwf	postinc1,c
  5355  0105C8  0E00               	movlw	0
  5356  0105CA  6EE6               	movwf	postinc1,c
  5357  0105CC  0E02               	movlw	2
  5358  0105CE  6EE6               	movwf	postinc1,c
  5359  0105D0  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  5360  0105D4  0060  F007  FFE6   	movff	btemp,postinc1
  5361  0105DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5362  0105E0  0E08               	movlw	8
  5363  0105E2  6EE6               	movwf	postinc1,c
  5364  0105E4  EC94  F0D5         	call	_sprintf	;wreg free
  5365                           
  5366                           ; BSR set to: 0
  5367                           ;main.c: 314:     update_lcd(0);
  5368  0105E8  0E00               	movlw	0
  5369  0105EA  6EE6               	movwf	postinc1,c
  5370  0105EC  EC0C  F0D5         	call	_update_lcd	;wreg free
  5371                           
  5372                           ;main.c: 316:     if (i_esr++ > 512)
  5373                           ;stkvar	_i_esr @ sp[(-17)+8]
  5374  0105F0  50E1               	movf	fsr1l,w,c
  5375  0105F2  0FF7               	addlw	-9
  5376  0105F4  6ED9               	movwf	fsr2l,c
  5377  0105F6  50E2               	movf	fsr1h,w,c
  5378  0105F8  6EDA               	movwf	fsr2h,c
  5379  0105FA  0EFF               	movlw	255
  5380  0105FC  22DA               	addwfc	fsr2h,f,c
  5381  0105FE  006F FF7C  F00B    	movff	indf2,btemp+10
  5382  010604  0E01               	movlw	1
  5383  010606  26DE               	addwf	postinc2,f,c
  5384  010608  006F FF7C  F00C    	movff	indf2,btemp+11
  5385  01060E  0E00               	movlw	0
  5386  010610  22DD               	addwfc	postdec2,f,c
  5387  010612  040B               	decf	(btemp+10)^0,w,c
  5388  010614  0E02               	movlw	2
  5389  010616  580C               	subwfb	(btemp+11)^0,w,c
  5390  010618  B0D8               	btfsc	status,0,c
  5391  01061A  D017               	goto	u13880
  5392  01061C                     l14606:
  5393                           
  5394                           ;main.c: 310:    while ((esr_temp = esr_check(0)) < 0.0) {
  5395  01061C  0E00               	movlw	0
  5396  01061E  6EE6               	movwf	postinc1,c
  5397  010620  ECF3  F0BB         	call	_esr_check	;wreg free
  5398                           
  5399                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5400  010624  0EF3               	movlw	-13
  5401  010626  0060  F007  FFE3   	movff	btemp,plusw1
  5402  01062C  0EF4               	movlw	-12
  5403  01062E  0060  F00B  FFE3   	movff	btemp+1,plusw1
  5404  010634  0EF5               	movlw	-11
  5405  010636  0060  F00F  FFE3   	movff	btemp+2,plusw1
  5406  01063C  0EF6               	movlw	-10
  5407  01063E  0060  F013  FFE3   	movff	btemp+3,plusw1
  5408  010644  0EF6               	movlw	-10
  5409  010646  BEE3               	btfsc	plusw1,7,c
  5410  010648  D77C               	goto	l14594
  5411  01064A                     u13880:
  5412                           
  5413                           ;main.c: 319:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  5414  01064A  EE22  F187         	lfsr	2,_C+136	;volatile
  5415  01064E  006F FF7B FFE6     	movff	postinc2,postinc1
  5416  010654  006F FF7B FFE6     	movff	postinc2,postinc1
  5417  01065A  006F FF7B FFE6     	movff	postinc2,postinc1
  5418  010660  006F FF7B FFE6     	movff	postinc2,postinc1
  5419  010666  0E1A               	movlw	low STR_19
  5420  010668  6EE6               	movwf	postinc1,c
  5421  01066A  0EFC               	movlw	high STR_19
  5422  01066C  6EE6               	movwf	postinc1,c
  5423  01066E  0E00               	movlw	0
  5424  010670  6EE6               	movwf	postinc1,c
  5425  010672  0E00               	movlw	0
  5426  010674  6EE6               	movwf	postinc1,c
  5427  010676  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  5428  01067A  0060  F007  FFE6   	movff	btemp,postinc1
  5429  010680  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5430  010686  0E08               	movlw	8
  5431  010688  6EE6               	movwf	postinc1,c
  5432  01068A  EC94  F0D5         	call	_sprintf	;wreg free
  5433                           
  5434                           ;main.c: 320:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  5435  01068E  EE22  F229         	lfsr	2,_C+298	;volatile
  5436  010692  006F FF7B FFE6     	movff	postinc2,postinc1
  5437  010698  006F FF7B FFE6     	movff	postinc2,postinc1
  5438  01069E  006F FF7B FFE6     	movff	postinc2,postinc1
  5439  0106A4  006F FF7B FFE6     	movff	postinc2,postinc1
  5440  0106AA  EE22  F235         	lfsr	2,_C+310	;volatile
  5441  0106AE  006F FF7B FFE6     	movff	postinc2,postinc1
  5442  0106B4  006F FF7B FFE6     	movff	postinc2,postinc1
  5443  0106BA  006F FF7B FFE6     	movff	postinc2,postinc1
  5444  0106C0  006F FF7B FFE6     	movff	postinc2,postinc1
  5445  0106C6  0E2B               	movlw	low STR_20
  5446  0106C8  6EE6               	movwf	postinc1,c
  5447  0106CA  0EFB               	movlw	high STR_20
  5448  0106CC  6EE6               	movwf	postinc1,c
  5449  0106CE  0E00               	movlw	0
  5450  0106D0  6EE6               	movwf	postinc1,c
  5451  0106D2  0E01               	movlw	1
  5452  0106D4  6EE6               	movwf	postinc1,c
  5453  0106D6  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  5454  0106DA  0060  F007  FFE6   	movff	btemp,postinc1
  5455  0106E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5456  0106E6  0E0C               	movlw	12
  5457  0106E8  6EE6               	movwf	postinc1,c
  5458  0106EA  EC94  F0D5         	call	_sprintf	;wreg free
  5459                           
  5460                           ;main.c: 321:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  5461  0106EE  EE22  F22D         	lfsr	2,_C+302	;volatile
  5462  0106F2  006F FF7B FFE6     	movff	postinc2,postinc1
  5463  0106F8  006F FF7B FFE6     	movff	postinc2,postinc1
  5464  0106FE  006F FF7B FFE6     	movff	postinc2,postinc1
  5465  010704  006F FF7B FFE6     	movff	postinc2,postinc1
  5466  01070A  EE22  F239         	lfsr	2,_C+314	;volatile
  5467  01070E  006F FF7B FFE6     	movff	postinc2,postinc1
  5468  010714  006F FF7B FFE6     	movff	postinc2,postinc1
  5469  01071A  006F FF7B FFE6     	movff	postinc2,postinc1
  5470  010720  006F FF7B FFE6     	movff	postinc2,postinc1
  5471  010726  0E45               	movlw	low STR_21
  5472  010728  6EE6               	movwf	postinc1,c
  5473  01072A  0EFB               	movlw	high STR_21
  5474  01072C  6EE6               	movwf	postinc1,c
  5475  01072E  0E00               	movlw	0
  5476  010730  6EE6               	movwf	postinc1,c
  5477  010732  0E02               	movlw	2
  5478  010734  6EE6               	movwf	postinc1,c
  5479  010736  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  5480  01073A  0060  F007  FFE6   	movff	btemp,postinc1
  5481  010740  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5482  010746  0E0C               	movlw	12
  5483  010748  6EE6               	movwf	postinc1,c
  5484  01074A  EC94  F0D5         	call	_sprintf	;wreg free
  5485                           
  5486                           ;main.c: 322:    update_lcd(0);
  5487  01074E  0E00               	movlw	0
  5488  010750  6EE6               	movwf	postinc1,c
  5489  010752  EC0C  F0D5         	call	_update_lcd	;wreg free
  5490                           
  5491                           ;main.c: 323:    WaitMs(4000);
  5492  010756  0EA0               	movlw	160
  5493  010758  6EE6               	movwf	postinc1,c
  5494  01075A  0E0F               	movlw	15
  5495  01075C  6EE6               	movwf	postinc1,c
  5496  01075E  ECD0  F0E5         	call	_WaitMs	;wreg free
  5497                           
  5498                           ;main.c: 324:    V.sensor_set = get_switch(SCALIB);
  5499  010762  0E04               	movlw	4
  5500  010764  6EE6               	movwf	postinc1,c
  5501  010766  ECFD  F0E6         	call	_get_switch	;wreg free
  5502  01076A  5001               	movf	btemp^0,w,c
  5503  01076C  B4D8               	btfsc	status,2,c
  5504  01076E  D002               	goto	u13890
  5505  010770  0E01               	movlw	1
  5506  010772  D001               	goto	u13900
  5507  010774                     u13890:
  5508  010774  0E00               	movlw	0
  5509  010776                     u13900:
  5510  010776  0101               	movlb	1	; () banked
  5511  010778  6FB5               	movwf	(_V+174)& (0+255),b	;volatile
  5512                           
  5513                           ; BSR set to: 1
  5514                           ;main.c: 325:    WaitMs(1000);
  5515  01077A  0EE8               	movlw	232
  5516  01077C  6EE6               	movwf	postinc1,c
  5517  01077E  0E03               	movlw	3
  5518  010780  6EE6               	movwf	postinc1,c
  5519  010782  ECD0  F0E5         	call	_WaitMs	;wreg free
  5520                           
  5521                           ;main.c: 326:    if (V.sensor_set && get_switch(SCALIB)) {
  5522  010786  0101               	movlb	1	; () banked
  5523  010788  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
  5524  01078A  B4D8               	btfsc	status,2,c
  5525  01078C  D00F               	goto	l14624
  5526                           
  5527                           ; BSR set to: 1
  5528  01078E  0E04               	movlw	4
  5529  010790  6EE6               	movwf	postinc1,c
  5530  010792  ECFD  F0E6         	call	_get_switch	;wreg free
  5531  010796  5001               	movf	btemp^0,w,c
  5532  010798  B4D8               	btfsc	status,2,c
  5533  01079A  D008               	goto	l14624
  5534                           
  5535                           ;main.c: 327:     current_sensor_cal();
  5536  01079C  EC3B  F0AF         	call	_current_sensor_cal	;wreg free
  5537                           
  5538                           ;main.c: 328:     WaitMs(4000);
  5539  0107A0  0EA0               	movlw	160
  5540  0107A2  6EE6               	movwf	postinc1,c
  5541  0107A4  0E0F               	movlw	15
  5542  0107A6  6EE6               	movwf	postinc1,c
  5543  0107A8  ECD0  F0E5         	call	_WaitMs	;wreg free
  5544  0107AC                     l14624:
  5545                           
  5546                           ;main.c: 330:    V.sensor_set = 0;
  5547  0107AC  0101               	movlb	1	; () banked
  5548  0107AE  6BB5               	clrf	(_V+174)& (0+255),b	;volatile
  5549                           
  5550                           ; BSR set to: 1
  5551                           ;main.c: 331:    V.system_stable = 1;
  5552  0107B0  0E01               	movlw	1
  5553  0107B2  6FB6               	movwf	(_V+175)& (0+255),b	;volatile
  5554                           
  5555                           ;main.c: 332:    break;
  5556  0107B4  D01C               	goto	l14632
  5557  0107B6                     l1458:
  5558                           
  5559                           ; BSR set to: 1
  5560                           ;main.c: 338:    P.SYSTEM_STABLE = 1;
  5561  0107B6  0100               	movlb	0	; () banked
  5562  0107B8  819F               	bsf	(_P+1)& (0+255),0,b	;volatile
  5563                           
  5564                           ;main.c: 339:    break;
  5565  0107BA  D019               	goto	l14632
  5566  0107BC                     l1460:
  5567                           
  5568                           ; BSR set to: 1
  5569                           ;main.c: 342:    V.ui_state = UI_STATE_INIT;
  5570  0107BC  6B07               	clrf	_V& (0+255),b	;volatile
  5571                           
  5572                           ;main.c: 343:    break;
  5573  0107BE  D017               	goto	l14632
  5574  0107C0                     l14630:
  5575  0107C0  0101               	movlb	1	; () banked
  5576  0107C2  5107               	movf	_V& (0+255),w,b	;volatile
  5577  0107C4  6E0B               	movwf	(btemp+10)^0,c
  5578  0107C6  6A0C               	clrf	(btemp+11)^0,c
  5579                           
  5580                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5581                           ; Switch size 1, requested type "simple"
  5582                           ; Number of cases is 1, Range of values is 0 to 0
  5583                           ; switch strategies available:
  5584                           ; Name         Instructions Cycles
  5585                           ; simple_byte            4     3 (average)
  5586                           ;	Chosen strategy is simple_byte
  5587  0107C8  500C               	movf	(btemp+11)^0,w,c
  5588  0107CA  0A00               	xorlw	0	; case 0
  5589  0107CC  A4D8               	btfss	status,2,c
  5590  0107CE  D7F6               	goto	l1460
  5591                           
  5592                           ; BSR set to: 1
  5593                           ; Switch size 1, requested type "simple"
  5594                           ; Number of cases is 5, Range of values is 0 to 5
  5595                           ; switch strategies available:
  5596                           ; Name         Instructions Cycles
  5597                           ; simple_byte           16     9 (average)
  5598                           ;	Chosen strategy is simple_byte
  5599  0107D0  500B               	movf	(btemp+10)^0,w,c
  5600  0107D2  0A00               	xorlw	0	; case 0
  5601  0107D4  B4D8               	btfsc	status,2,c
  5602  0107D6  D450               	goto	l14482
  5603  0107D8  0A01               	xorlw	1	; case 1
  5604  0107DA  B4D8               	btfsc	status,2,c
  5605  0107DC  D008               	goto	l14632
  5606  0107DE  0A02               	xorlw	2	; case 3
  5607  0107E0  B4D8               	btfsc	status,2,c
  5608  0107E2  D005               	goto	l14632
  5609  0107E4  0A07               	xorlw	7	; case 4
  5610  0107E6  B4D8               	btfsc	status,2,c
  5611  0107E8  D7E6               	goto	l1458
  5612  0107EA  0A01               	xorlw	1	; case 5
  5613  0107EC  D7E7               	goto	l1460
  5614  0107EE                     l14632:
  5615                           
  5616                           ;main.c: 346:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  5617  0107EE  0E01               	movlw	1
  5618  0107F0  6EE6               	movwf	postinc1,c
  5619  0107F2  EC69  F0E7         	call	_TimerDone	;wreg free
  5620  0107F6  5001               	movf	btemp^0,w,c
  5621  0107F8  B4D8               	btfsc	status,2,c
  5622  0107FA  D013               	goto	l14644
  5623  0107FC  EC76  F0EA         	call	_check_adc_scan	;wreg free
  5624  010800  5001               	movf	btemp^0,w,c
  5625  010802  B4D8               	btfsc	status,2,c
  5626  010804  D00E               	goto	l14644
  5627                           
  5628                           ;main.c: 350:    convert_adc_data();
  5629  010806  ECD2  F0D9         	call	_convert_adc_data	;wreg free
  5630                           
  5631                           ;main.c: 354:    clear_adc_scan();
  5632  01080A  EC8D  F0EA         	call	_clear_adc_scan	;wreg free
  5633                           
  5634                           ; BSR set to: 2
  5635                           ;main.c: 355:    start_adc_scan();
  5636  01080E  EC48  F0E1         	call	_start_adc_scan	;wreg free
  5637                           
  5638                           ;main.c: 356:    StartTimer(TMR_ADC, 200);
  5639  010812  0EC8               	movlw	200
  5640  010814  6EE6               	movwf	postinc1,c
  5641  010816  0E00               	movlw	0
  5642  010818  6EE6               	movwf	postinc1,c
  5643  01081A  0E01               	movlw	1
  5644  01081C  6EE6               	movwf	postinc1,c
  5645  01081E  ECDC  F0E4         	call	_StartTimer	;wreg free
  5646  010822                     l14644:
  5647                           
  5648                           ;main.c: 363:   if (TimerDone(TMR_DISPLAY)) {
  5649                           
  5650                           ;main.c: 359:   if (V.ticks) {
  5651  010822  0E0A               	movlw	10
  5652  010824  6EE6               	movwf	postinc1,c
  5653  010826  EC69  F0E7         	call	_TimerDone	;wreg free
  5654  01082A  5001               	movf	btemp^0,w,c
  5655  01082C  B4D8               	btfsc	status,2,c
  5656  01082E  EF33  F089         	goto	l14748
  5657                           
  5658                           ;main.c: 364:    if (TimerDone(TMR_HELPDIS)) {
  5659  010832  0E09               	movlw	9
  5660  010834  6EE6               	movwf	postinc1,c
  5661  010836  EC69  F0E7         	call	_TimerDone	;wreg free
  5662  01083A  5001               	movf	btemp^0,w,c
  5663  01083C  B4D8               	btfsc	status,2,c
  5664  01083E  D004               	goto	l14652
  5665                           
  5666                           ;main.c: 365:     set_display_info(DIS_STR);
  5667  010840  0E00               	movlw	0
  5668  010842  6EE6               	movwf	postinc1,c
  5669  010844  EC6E  F0E9         	call	_set_display_info	;wreg free
  5670  010848                     l14652:
  5671                           
  5672                           ;main.c: 367:    calc_model_data();
  5673  010848  EC75  F0B1         	call	_calc_model_data	;wreg free
  5674                           
  5675                           ; BSR set to: 57
  5676                           ;main.c: 368:    if (C.dupdate) {
  5677  01084C  EE22  F23E         	lfsr	2,_C+319	;volatile
  5678  010850  50DF               	movf	indf2,w,c
  5679  010852  B4D8               	btfsc	status,2,c
  5680  010854  D070               	goto	l14676
  5681                           
  5682                           ; BSR set to: 57
  5683                           ;main.c: 369:     C.dupdate = 0;
  5684  010856  0E00               	movlw	0
  5685  010858  006F FFA0  FA3E    	movff	wreg,_C+319	;volatile
  5686                           
  5687                           ; BSR set to: 57
  5688                           ;main.c: 370:     load_hist_data();
  5689  01085E  ECA7  F0E9         	call	_load_hist_data	;wreg free
  5690                           
  5691                           ; BSR set to: 57
  5692                           ;main.c: 371:     update_hist_data(0, &C.hist[0]);
  5693  010862  0EB8               	movlw	low (_C+185)
  5694  010864  6EE6               	movwf	postinc1,c
  5695  010866  0E09               	movlw	high (_C+185)
  5696  010868  6EE6               	movwf	postinc1,c
  5697  01086A  0E00               	movlw	0
  5698  01086C  6EE6               	movwf	postinc1,c
  5699  01086E  EC0B  F0E0         	call	_update_hist_data	;wreg free
  5700                           
  5701                           ;main.c: 372:     write_cal_data();
  5702  010872  EC8F  F0CE         	call	_write_cal_data	;wreg free
  5703                           
  5704                           ;main.c: 373:     sprintf(get_vterm_ptr(0, 0), "History Data  Saved ");
  5705  010876  0E33               	movlw	low STR_22
  5706  010878  6EE6               	movwf	postinc1,c
  5707  01087A  0EFF               	movlw	high STR_22
  5708  01087C  6EE6               	movwf	postinc1,c
  5709  01087E  0E00               	movlw	0
  5710  010880  6EE6               	movwf	postinc1,c
  5711  010882  0E00               	movlw	0
  5712  010884  6EE6               	movwf	postinc1,c
  5713  010886  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  5714  01088A  0060  F007  FFE6   	movff	btemp,postinc1
  5715  010890  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5716  010896  0E04               	movlw	4
  5717  010898  6EE6               	movwf	postinc1,c
  5718  01089A  EC94  F0D5         	call	_sprintf	;wreg free
  5719                           
  5720                           ; BSR set to: 0
  5721                           ;main.c: 374:     sprintf(get_vterm_ptr(1, 0), "To EEPROM           ");
  5722  01089E  0ECE               	movlw	low STR_23
  5723  0108A0  6EE6               	movwf	postinc1,c
  5724  0108A2  0EFD               	movlw	high STR_23
  5725  0108A4  6EE6               	movwf	postinc1,c
  5726  0108A6  0E00               	movlw	0
  5727  0108A8  6EE6               	movwf	postinc1,c
  5728  0108AA  0E01               	movlw	1
  5729  0108AC  6EE6               	movwf	postinc1,c
  5730  0108AE  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  5731  0108B2  0060  F007  FFE6   	movff	btemp,postinc1
  5732  0108B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5733  0108BE  0E04               	movlw	4
  5734  0108C0  6EE6               	movwf	postinc1,c
  5735  0108C2  EC94  F0D5         	call	_sprintf	;wreg free
  5736                           
  5737                           ; BSR set to: 0
  5738                           ;main.c: 375:     sprintf(get_vterm_ptr(2, 0), " Time %lu, %lu      ", V.ticks, C.hist[0
      +                          ].updates);
  5739  0108C6  EE22  F1E9         	lfsr	2,_C+234	;volatile
  5740  0108CA  006F FF7B FFE6     	movff	postinc2,postinc1
  5741  0108D0  006F FF7B FFE6     	movff	postinc2,postinc1
  5742  0108D6  006F FF7B FFE6     	movff	postinc2,postinc1
  5743  0108DC  006F FF7B FFE6     	movff	postinc2,postinc1
  5744  0108E2  0060  F623  FFE6   	movff	_V+129,postinc1
  5745  0108E8  0060  F627  FFE6   	movff	_V+130,postinc1
  5746  0108EE  0060  F62B  FFE6   	movff	_V+131,postinc1
  5747  0108F4  0060  F62F  FFE6   	movff	_V+132,postinc1
  5748  0108FA  0EA0               	movlw	low STR_24
  5749  0108FC  6EE6               	movwf	postinc1,c
  5750  0108FE  0EFE               	movlw	high STR_24
  5751  010900  6EE6               	movwf	postinc1,c
  5752  010902  0E00               	movlw	0
  5753  010904  6EE6               	movwf	postinc1,c
  5754  010906  0E02               	movlw	2
  5755  010908  6EE6               	movwf	postinc1,c
  5756  01090A  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  5757  01090E  0060  F007  FFE6   	movff	btemp,postinc1
  5758  010914  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5759  01091A  0E0C               	movlw	12
  5760  01091C  6EE6               	movwf	postinc1,c
  5761  01091E  EC94  F0D5         	call	_sprintf	;wreg free
  5762                           
  5763                           ; BSR set to: 0
  5764                           ;main.c: 376:     update_lcd(0);
  5765  010922  0E00               	movlw	0
  5766  010924  6EE6               	movwf	postinc1,c
  5767  010926  EC0C  F0D5         	call	_update_lcd	;wreg free
  5768                           
  5769                           ;main.c: 377:     WaitMs(2000);
  5770  01092A  0ED0               	movlw	208
  5771  01092C  6EE6               	movwf	postinc1,c
  5772  01092E  0E07               	movlw	7
  5773  010930  6EE6               	movwf	postinc1,c
  5774  010932  ECD0  F0E5         	call	_WaitMs	;wreg free
  5775  010936                     l14676:
  5776                           
  5777                           ;main.c: 385:     hid_display(&H);
  5778  010936  0EF1               	movlw	_H& (0+255)
  5779  010938  6EE6               	movwf	postinc1,c
  5780  01093A  EC4C  F0D2         	call	_hid_display	;wreg free
  5781                           
  5782                           ;main.c: 386:     switch (H.hid_display) {
  5783  01093E  EFCA  F088         	goto	l14720
  5784  010942                     l1469:
  5785                           
  5786                           ; BSR set to: 0
  5787                           ;main.c: 388:      V.calib = 0;
  5788  010942  0101               	movlb	1	; () banked
  5789  010944  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5790                           
  5791                           ; BSR set to: 1
  5792                           ;main.c: 389:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  5793  010946  EE22  F23D         	lfsr	2,_C+318	;volatile
  5794  01094A  50DF               	movf	indf2,w,c
  5795  01094C  A4D8               	btfss	status,2,c
  5796  01094E  D002               	goto	l14682
  5797                           
  5798                           ; BSR set to: 1
  5799  010950  0E20               	movlw	32
  5800  010952  D001               	goto	L1
  5801  010954                     l14682:
  5802                           
  5803                           ; BSR set to: 1
  5804  010954  0E44               	movlw	68
  5805  010956                     L1:
  5806  010956  6E0B               	movwf	(btemp+10)^0,c
  5807  010958  0E00               	movlw	0
  5808  01095A  6E0C               	movwf	(btemp+11)^0,c
  5809                           
  5810                           ;stkvar	_main$4004 @ sp[(-17)+2]
  5811  01095C  0EF1               	movlw	-15
  5812  01095E  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5813  010964  0EF2               	movlw	-14
  5814  010966  0060  F033  FFE3   	movff	btemp+11,plusw1
  5815                           
  5816                           ; BSR set to: 1
  5817  01096C  EE22  F17B         	lfsr	2,_C+124	;volatile
  5818  010970  006F FF7B FFE6     	movff	postinc2,postinc1
  5819  010976  006F FF7B FFE6     	movff	postinc2,postinc1
  5820  01097C  006F FF7B FFE6     	movff	postinc2,postinc1
  5821  010982  006F FF7B FFE6     	movff	postinc2,postinc1
  5822                           
  5823                           ;stkvar	_main$4004 @ sp[(-21)+2]
  5824  010988  0EED               	movlw	-19
  5825  01098A  006F FF8F FFE6     	movff	plusw1,postinc1
  5826  010990  006F FF8F FFE6     	movff	plusw1,postinc1
  5827  010996  0EF6               	movlw	low STR_28
  5828  010998  6EE6               	movwf	postinc1,c
  5829  01099A  0EFC               	movlw	high STR_28
  5830  01099C  6EE6               	movwf	postinc1,c
  5831  01099E  0E00               	movlw	0
  5832  0109A0  6EE6               	movwf	postinc1,c
  5833  0109A2  0E00               	movlw	0
  5834  0109A4  6EE6               	movwf	postinc1,c
  5835  0109A6  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  5836  0109AA  0060  F007  FFE6   	movff	btemp,postinc1
  5837  0109B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5838  0109B6  0E0A               	movlw	10
  5839  0109B8  6EE6               	movwf	postinc1,c
  5840  0109BA  EC94  F0D5         	call	_sprintf	;wreg free
  5841                           
  5842                           ; BSR set to: 0
  5843                           ;main.c: 390:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  5844  0109BE  EE22  F173         	lfsr	2,_C+116	;volatile
  5845  0109C2  006F FF7B FFE6     	movff	postinc2,postinc1
  5846  0109C8  006F FF7B FFE6     	movff	postinc2,postinc1
  5847  0109CE  006F FF7B FFE6     	movff	postinc2,postinc1
  5848  0109D4  006F FF7B FFE6     	movff	postinc2,postinc1
  5849  0109DA  0EE0               	movlw	low STR_29
  5850  0109DC  6EE6               	movwf	postinc1,c
  5851  0109DE  0EFC               	movlw	high STR_29
  5852  0109E0  6EE6               	movwf	postinc1,c
  5853  0109E2  0E00               	movlw	0
  5854  0109E4  6EE6               	movwf	postinc1,c
  5855  0109E6  0E01               	movlw	1
  5856  0109E8  6EE6               	movwf	postinc1,c
  5857  0109EA  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  5858  0109EE  0060  F007  FFE6   	movff	btemp,postinc1
  5859  0109F4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5860  0109FA  0E08               	movlw	8
  5861  0109FC  6EE6               	movwf	postinc1,c
  5862  0109FE  EC94  F0D5         	call	_sprintf	;wreg free
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;main.c: 391:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  5866  010A02  EE22  F177         	lfsr	2,_C+120	;volatile
  5867  010A06  006F FF7B FFE6     	movff	postinc2,postinc1
  5868  010A0C  006F FF7B FFE6     	movff	postinc2,postinc1
  5869  010A12  006F FF7B FFE6     	movff	postinc2,postinc1
  5870  010A18  006F FF7B FFE6     	movff	postinc2,postinc1
  5871  010A1E  0ECA               	movlw	low STR_30
  5872  010A20  6EE6               	movwf	postinc1,c
  5873  010A22  0EFC               	movlw	high STR_30
  5874  010A24  6EE6               	movwf	postinc1,c
  5875  010A26  0E00               	movlw	0
  5876  010A28  6EE6               	movwf	postinc1,c
  5877  010A2A  0E02               	movlw	2
  5878  010A2C  6EE6               	movwf	postinc1,c
  5879  010A2E  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  5880  010A32  0060  F007  FFE6   	movff	btemp,postinc1
  5881  010A38  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5882  010A3E  0E08               	movlw	8
  5883  010A40  6EE6               	movwf	postinc1,c
  5884  010A42  EC94  F0D5         	call	_sprintf	;wreg free
  5885                           
  5886                           ; BSR set to: 0
  5887                           ;main.c: 393:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5888  010A46  EE22  F23D         	lfsr	2,_C+318	;volatile
  5889  010A4A  50DF               	movf	indf2,w,c
  5890  010A4C  A4D8               	btfss	status,2,c
  5891  010A4E  D002               	goto	l14694
  5892                           
  5893                           ; BSR set to: 0
  5894  010A50  0E20               	movlw	32
  5895  010A52  D001               	goto	L2
  5896  010A54                     l14694:
  5897                           
  5898                           ; BSR set to: 0
  5899  010A54  0E44               	movlw	68
  5900  010A56                     L2:
  5901  010A56  6E0B               	movwf	(btemp+10)^0,c
  5902  010A58  0E00               	movlw	0
  5903  010A5A  6E0C               	movwf	(btemp+11)^0,c
  5904                           
  5905                           ;stkvar	_main$4008 @ sp[(-17)+0]
  5906  010A5C  0EEF               	movlw	-17
  5907  010A5E  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5908  010A64  0EF0               	movlw	-16
  5909  010A66  0060  F033  FFE3   	movff	btemp+11,plusw1
  5910                           
  5911                           ; BSR set to: 0
  5912  010A6C  EE22  F1A7         	lfsr	2,_C+168	;volatile
  5913  010A70  006F FF7B FFE6     	movff	postinc2,postinc1
  5914  010A76  006F FF7B FFE6     	movff	postinc2,postinc1
  5915  010A7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5916  010A82  006F FF7B FFE6     	movff	postinc2,postinc1
  5917                           
  5918                           ;stkvar	_main$4008 @ sp[(-21)+0]
  5919  010A88  0EEB               	movlw	-21
  5920  010A8A  006F FF8F FFE6     	movff	plusw1,postinc1
  5921  010A90  006F FF8F FFE6     	movff	plusw1,postinc1
  5922  010A96  0EB4               	movlw	low STR_31
  5923  010A98  6EE6               	movwf	postinc1,c
  5924  010A9A  0EFC               	movlw	high STR_31
  5925  010A9C  6EE6               	movwf	postinc1,c
  5926  010A9E  0E01               	movlw	1
  5927  010AA0  6EE6               	movwf	postinc1,c
  5928  010AA2  0E00               	movlw	0
  5929  010AA4  6EE6               	movwf	postinc1,c
  5930  010AA6  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  5931  010AAA  0060  F007  FFE6   	movff	btemp,postinc1
  5932  010AB0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5933  010AB6  0E0A               	movlw	10
  5934  010AB8  6EE6               	movwf	postinc1,c
  5935  010ABA  EC94  F0D5         	call	_sprintf	;wreg free
  5936                           
  5937                           ; BSR set to: 0
  5938                           ;main.c: 394:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5939  010ABE  EE22  F1AF         	lfsr	2,_C+176	;volatile
  5940  010AC2  006F FF7B FFE6     	movff	postinc2,postinc1
  5941  010AC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5942  010ACE  006F FF7B FFE6     	movff	postinc2,postinc1
  5943  010AD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5944  010ADA  0E9E               	movlw	low STR_32
  5945  010ADC  6EE6               	movwf	postinc1,c
  5946  010ADE  0EFC               	movlw	high STR_32
  5947  010AE0  6EE6               	movwf	postinc1,c
  5948  010AE2  0E01               	movlw	1
  5949  010AE4  6EE6               	movwf	postinc1,c
  5950  010AE6  0E01               	movlw	1
  5951  010AE8  6EE6               	movwf	postinc1,c
  5952  010AEA  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  5953  010AEE  0060  F007  FFE6   	movff	btemp,postinc1
  5954  010AF4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5955  010AFA  0E08               	movlw	8
  5956  010AFC  6EE6               	movwf	postinc1,c
  5957  010AFE  EC94  F0D5         	call	_sprintf	;wreg free
  5958                           
  5959                           ; BSR set to: 0
  5960                           ;main.c: 395:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5961  010B02  EE22  F1AB         	lfsr	2,_C+172	;volatile
  5962  010B06  006F FF7B FFE6     	movff	postinc2,postinc1
  5963  010B0C  006F FF7B FFE6     	movff	postinc2,postinc1
  5964  010B12  006F FF7B FFE6     	movff	postinc2,postinc1
  5965  010B18  006F FF7B FFE6     	movff	postinc2,postinc1
  5966  010B1E  0E88               	movlw	low STR_33
  5967  010B20  6EE6               	movwf	postinc1,c
  5968  010B22  0EFC               	movlw	high STR_33
  5969  010B24  6EE6               	movwf	postinc1,c
  5970  010B26  0E01               	movlw	1
  5971  010B28  6EE6               	movwf	postinc1,c
  5972  010B2A  0E02               	movlw	2
  5973  010B2C  6EE6               	movwf	postinc1,c
  5974  010B2E  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  5975  010B32  0060  F007  FFE6   	movff	btemp,postinc1
  5976  010B38  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5977  010B3E  0E08               	movlw	8
  5978  010B40  6EE6               	movwf	postinc1,c
  5979  010B42  EC94  F0D5         	call	_sprintf	;wreg free
  5980                           
  5981                           ;main.c: 396:      break;
  5982  010B46  D33C               	goto	l14722
  5983  010B48                     l1479:
  5984                           
  5985                           ; BSR set to: 0
  5986                           ;main.c: 398:      V.calib = 0;
  5987  010B48  0101               	movlb	1	; () banked
  5988  010B4A  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5989                           
  5990                           ; BSR set to: 1
  5991                           ;main.c: 399:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5992  010B4C  EE22  F103         	lfsr	2,_C+4	;volatile
  5993  010B50  006F FF7B FFE6     	movff	postinc2,postinc1
  5994  010B56  006F FF7B FFE6     	movff	postinc2,postinc1
  5995  010B5C  006F FF7B FFE6     	movff	postinc2,postinc1
  5996  010B62  006F FF7B FFE6     	movff	postinc2,postinc1
  5997  010B68  EE22  F113         	lfsr	2,_C+20	;volatile
  5998  010B6C  006F FF7B FFE6     	movff	postinc2,postinc1
  5999  010B72  006F FF7B FFE6     	movff	postinc2,postinc1
  6000  010B78  006F FF7B FFE6     	movff	postinc2,postinc1
  6001  010B7E  006F FF7B FFE6     	movff	postinc2,postinc1
  6002  010B84  0E4E               	movlw	low STR_34
  6003  010B86  6EE6               	movwf	postinc1,c
  6004  010B88  0EFD               	movlw	high STR_34
  6005  010B8A  6EE6               	movwf	postinc1,c
  6006  010B8C  0E00               	movlw	0
  6007  010B8E  6EE6               	movwf	postinc1,c
  6008  010B90  0E00               	movlw	0
  6009  010B92  6EE6               	movwf	postinc1,c
  6010  010B94  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  6011  010B98  0060  F007  FFE6   	movff	btemp,postinc1
  6012  010B9E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6013  010BA4  0E0C               	movlw	12
  6014  010BA6  6EE6               	movwf	postinc1,c
  6015  010BA8  EC94  F0D5         	call	_sprintf	;wreg free
  6016                           
  6017                           ;main.c: 400:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  6018  010BAC  EE22  F0FF         	lfsr	2,_C
  6019  010BB0  006F FF7B FFE6     	movff	postinc2,postinc1
  6020  010BB6  006F FF7B FFE6     	movff	postinc2,postinc1
  6021  010BBC  006F FF7B FFE6     	movff	postinc2,postinc1
  6022  010BC2  006F FF7B FFE6     	movff	postinc2,postinc1
  6023  010BC8  EE22  F10F         	lfsr	2,_C+16	;volatile
  6024  010BCC  006F FF7B FFE6     	movff	postinc2,postinc1
  6025  010BD2  006F FF7B FFE6     	movff	postinc2,postinc1
  6026  010BD8  006F FF7B FFE6     	movff	postinc2,postinc1
  6027  010BDE  006F FF7B FFE6     	movff	postinc2,postinc1
  6028  010BE4  0E22               	movlw	low STR_35
  6029  010BE6  6EE6               	movwf	postinc1,c
  6030  010BE8  0EFD               	movlw	high STR_35
  6031  010BEA  6EE6               	movwf	postinc1,c
  6032  010BEC  0E00               	movlw	0
  6033  010BEE  6EE6               	movwf	postinc1,c
  6034  010BF0  0E01               	movlw	1
  6035  010BF2  6EE6               	movwf	postinc1,c
  6036  010BF4  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  6037  010BF8  0060  F007  FFE6   	movff	btemp,postinc1
  6038  010BFE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6039  010C04  0E0C               	movlw	12
  6040  010C06  6EE6               	movwf	postinc1,c
  6041  010C08  EC94  F0D5         	call	_sprintf	;wreg free
  6042                           
  6043                           ;main.c: 401:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  6044  010C0C  EE22  F13F         	lfsr	2,_C+64	;volatile
  6045  010C10  006F FF7B FFE6     	movff	postinc2,postinc1
  6046  010C16  006F FF7B FFE6     	movff	postinc2,postinc1
  6047  010C1C  006F FF7B FFE6     	movff	postinc2,postinc1
  6048  010C22  006F FF7B FFE6     	movff	postinc2,postinc1
  6049  010C28  EE22  F107         	lfsr	2,_C+8	;volatile
  6050  010C2C  006F FF7B FFE6     	movff	postinc2,postinc1
  6051  010C32  006F FF7B FFE6     	movff	postinc2,postinc1
  6052  010C38  006F FF7B FFE6     	movff	postinc2,postinc1
  6053  010C3E  006F FF7B FFE6     	movff	postinc2,postinc1
  6054  010C44  0E38               	movlw	low STR_36
  6055  010C46  6EE6               	movwf	postinc1,c
  6056  010C48  0EFD               	movlw	high STR_36
  6057  010C4A  6EE6               	movwf	postinc1,c
  6058  010C4C  0E00               	movlw	0
  6059  010C4E  6EE6               	movwf	postinc1,c
  6060  010C50  0E02               	movlw	2
  6061  010C52  6EE6               	movwf	postinc1,c
  6062  010C54  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  6063  010C58  0060  F007  FFE6   	movff	btemp,postinc1
  6064  010C5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6065  010C64  0E0C               	movlw	12
  6066  010C66  6EE6               	movwf	postinc1,c
  6067  010C68  EC94  F0D5         	call	_sprintf	;wreg free
  6068                           
  6069                           ;main.c: 403:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  6070  010C6C  EE22  F19F         	lfsr	2,_C+160	;volatile
  6071  010C70  006F FF7B FFE6     	movff	postinc2,postinc1
  6072  010C76  006F FF7B FFE6     	movff	postinc2,postinc1
  6073  010C7C  006F FF7B FFE6     	movff	postinc2,postinc1
  6074  010C82  006F FF7B FFE6     	movff	postinc2,postinc1
  6075  010C88  0E46               	movlw	low STR_37
  6076  010C8A  6EE6               	movwf	postinc1,c
  6077  010C8C  0EFC               	movlw	high STR_37
  6078  010C8E  6EE6               	movwf	postinc1,c
  6079  010C90  0E01               	movlw	1
  6080  010C92  6EE6               	movwf	postinc1,c
  6081  010C94  0E00               	movlw	0
  6082  010C96  6EE6               	movwf	postinc1,c
  6083  010C98  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  6084  010C9C  0060  F007  FFE6   	movff	btemp,postinc1
  6085  010CA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6086  010CA8  0E08               	movlw	8
  6087  010CAA  6EE6               	movwf	postinc1,c
  6088  010CAC  EC94  F0D5         	call	_sprintf	;wreg free
  6089                           
  6090                           ;main.c: 404:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  6091  010CB0  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6092  010CB4  006F FF7B FFE6     	movff	postinc2,postinc1
  6093  010CBA  006F FF7B FFE6     	movff	postinc2,postinc1
  6094  010CC0  006F FF7B FFE6     	movff	postinc2,postinc1
  6095  010CC6  006F FF7B FFE6     	movff	postinc2,postinc1
  6096  010CCC  0E5C               	movlw	low STR_38
  6097  010CCE  6EE6               	movwf	postinc1,c
  6098  010CD0  0EFC               	movlw	high STR_38
  6099  010CD2  6EE6               	movwf	postinc1,c
  6100  010CD4  0E01               	movlw	1
  6101  010CD6  6EE6               	movwf	postinc1,c
  6102  010CD8  0E01               	movlw	1
  6103  010CDA  6EE6               	movwf	postinc1,c
  6104  010CDC  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  6105  010CE0  0060  F007  FFE6   	movff	btemp,postinc1
  6106  010CE6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6107  010CEC  0E08               	movlw	8
  6108  010CEE  6EE6               	movwf	postinc1,c
  6109  010CF0  EC94  F0D5         	call	_sprintf	;wreg free
  6110                           
  6111                           ;main.c: 405:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  6112  010CF4  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6113  010CF8  006F FF7B FFE6     	movff	postinc2,postinc1
  6114  010CFE  006F FF7B FFE6     	movff	postinc2,postinc1
  6115  010D04  006F FF7B FFE6     	movff	postinc2,postinc1
  6116  010D0A  006F FF7B FFE6     	movff	postinc2,postinc1
  6117  010D10  EE22  F19F         	lfsr	2,_C+160	;volatile
  6118  010D14  006F FF7B FFE6     	movff	postinc2,postinc1
  6119  010D1A  006F FF7B FFE6     	movff	postinc2,postinc1
  6120  010D20  006F FF7B FFE6     	movff	postinc2,postinc1
  6121  010D26  006F FF7B FFE6     	movff	postinc2,postinc1
  6122  010D2C  EC02  F0A4         	call	___fladd	;wreg free
  6123  010D30  0060  F007  FFE6   	movff	btemp,postinc1
  6124  010D36  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6125  010D3C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6126  010D42  0060  F013  FFE6   	movff	btemp+3,postinc1
  6127  010D48  0E72               	movlw	low STR_39
  6128  010D4A  6EE6               	movwf	postinc1,c
  6129  010D4C  0EFC               	movlw	high STR_39
  6130  010D4E  6EE6               	movwf	postinc1,c
  6131  010D50  0E01               	movlw	1
  6132  010D52  6EE6               	movwf	postinc1,c
  6133  010D54  0E02               	movlw	2
  6134  010D56  6EE6               	movwf	postinc1,c
  6135  010D58  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  6136  010D5C  0060  F007  FFE6   	movff	btemp,postinc1
  6137  010D62  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6138  010D68  0E08               	movlw	8
  6139  010D6A  6EE6               	movwf	postinc1,c
  6140  010D6C  EC94  F0D5         	call	_sprintf	;wreg free
  6141                           
  6142                           ;main.c: 406:      break;
  6143  010D70  D227               	goto	l14722
  6144  010D72                     l1480:
  6145                           
  6146                           ; BSR set to: 0
  6147                           ;main.c: 408:      V.calib = 0;
  6148  010D72  0101               	movlb	1	; () banked
  6149  010D74  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  6150                           
  6151                           ; BSR set to: 1
  6152                           ;main.c: 409:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  6153  010D76  EE22  F17F         	lfsr	2,_C+128	;volatile
  6154  010D7A  006F FF7B FFE6     	movff	postinc2,postinc1
  6155  010D80  006F FF7B FFE6     	movff	postinc2,postinc1
  6156  010D86  006F FF7B FFE6     	movff	postinc2,postinc1
  6157  010D8C  006F FF7B FFE6     	movff	postinc2,postinc1
  6158  010D92  0EA8               	movlw	low STR_40
  6159  010D94  6EE6               	movwf	postinc1,c
  6160  010D96  0EFB               	movlw	high STR_40
  6161  010D98  6EE6               	movwf	postinc1,c
  6162  010D9A  0E00               	movlw	0
  6163  010D9C  6EE6               	movwf	postinc1,c
  6164  010D9E  0E00               	movlw	0
  6165  010DA0  6EE6               	movwf	postinc1,c
  6166  010DA2  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  6167  010DA6  0060  F007  FFE6   	movff	btemp,postinc1
  6168  010DAC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6169  010DB2  0E08               	movlw	8
  6170  010DB4  6EE6               	movwf	postinc1,c
  6171  010DB6  EC94  F0D5         	call	_sprintf	;wreg free
  6172                           
  6173                           ;main.c: 410:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  6174  010DBA  EE22  F193         	lfsr	2,_C+148	;volatile
  6175  010DBE  006F FF7B FFE6     	movff	postinc2,postinc1
  6176  010DC4  006F FF7B FFE6     	movff	postinc2,postinc1
  6177  010DCA  006F FF7B FFE6     	movff	postinc2,postinc1
  6178  010DD0  006F FF7B FFE6     	movff	postinc2,postinc1
  6179  010DD6  EE22  F18F         	lfsr	2,_C+144	;volatile
  6180  010DDA  006F FF7B FFE6     	movff	postinc2,postinc1
  6181  010DE0  006F FF7B FFE6     	movff	postinc2,postinc1
  6182  010DE6  006F FF7B FFE6     	movff	postinc2,postinc1
  6183  010DEC  006F FF7B FFE6     	movff	postinc2,postinc1
  6184  010DF2  0EED               	movlw	low STR_41
  6185  010DF4  6EE6               	movwf	postinc1,c
  6186  010DF6  0EFB               	movlw	high STR_41
  6187  010DF8  6EE6               	movwf	postinc1,c
  6188  010DFA  0E00               	movlw	0
  6189  010DFC  6EE6               	movwf	postinc1,c
  6190  010DFE  0E01               	movlw	1
  6191  010E00  6EE6               	movwf	postinc1,c
  6192  010E02  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  6193  010E06  0060  F007  FFE6   	movff	btemp,postinc1
  6194  010E0C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6195  010E12  0E0C               	movlw	12
  6196  010E14  6EE6               	movwf	postinc1,c
  6197  010E16  EC94  F0D5         	call	_sprintf	;wreg free
  6198                           
  6199                           ;main.c: 411:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  6200  010E1A  EE22  F10F         	lfsr	2,_C+16	;volatile
  6201  010E1E  006F FF7B FFE6     	movff	postinc2,postinc1
  6202  010E24  006F FF7B FFE6     	movff	postinc2,postinc1
  6203  010E2A  006F FF7B FFE6     	movff	postinc2,postinc1
  6204  010E30  006F FF7B FFE6     	movff	postinc2,postinc1
  6205  010E36  EE22  F1B3         	lfsr	2,_C+180	;volatile
  6206  010E3A  006F FF78  F00B    	movff	postinc2,btemp+10
  6207  010E40  006F FF74  F00C    	movff	postdec2,btemp+11
  6208  010E46  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6209  010E4C  0060  F033  FFE6   	movff	btemp+11,postinc1
  6210  010E52  EE22  F1B5         	lfsr	2,_C+182	;volatile
  6211  010E56  006F FF78  F00B    	movff	postinc2,btemp+10
  6212  010E5C  006F FF74  F00C    	movff	postdec2,btemp+11
  6213  010E62  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6214  010E68  0060  F033  FFE6   	movff	btemp+11,postinc1
  6215  010E6E  0E00               	movlw	0
  6216  010E70  6EE6               	movwf	postinc1,c
  6217  010E72  0E05               	movlw	5
  6218  010E74  6EE6               	movwf	postinc1,c
  6219  010E76  EC8E  F0D6         	call	_spinners	;wreg free
  6220  010E7A  5001               	movf	btemp^0,w,c
  6221  010E7C  6EE6               	movwf	postinc1,c
  6222  010E7E  0E00               	movlw	0
  6223  010E80  6EE6               	movwf	postinc1,c
  6224  010E82  0E0E               	movlw	low STR_42
  6225  010E84  6EE6               	movwf	postinc1,c
  6226  010E86  0EFB               	movlw	high STR_42
  6227  010E88  6EE6               	movwf	postinc1,c
  6228  010E8A  0E00               	movlw	0
  6229  010E8C  6EE6               	movwf	postinc1,c
  6230  010E8E  0E02               	movlw	2
  6231  010E90  6EE6               	movwf	postinc1,c
  6232  010E92  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  6233  010E96  0060  F007  FFE6   	movff	btemp,postinc1
  6234  010E9C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6235  010EA2  0E0E               	movlw	14
  6236  010EA4  6EE6               	movwf	postinc1,c
  6237  010EA6  EC94  F0D5         	call	_sprintf	;wreg free
  6238                           
  6239                           ;main.c: 413:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  6240  010EAA  EE22  F187         	lfsr	2,_C+136	;volatile
  6241  010EAE  006F FF7B FFE6     	movff	postinc2,postinc1
  6242  010EB4  006F FF7B FFE6     	movff	postinc2,postinc1
  6243  010EBA  006F FF7B FFE6     	movff	postinc2,postinc1
  6244  010EC0  006F FF7B FFE6     	movff	postinc2,postinc1
  6245  010EC6  0E91               	movlw	low STR_43
  6246  010EC8  6EE6               	movwf	postinc1,c
  6247  010ECA  0EFB               	movlw	high STR_43
  6248  010ECC  6EE6               	movwf	postinc1,c
  6249  010ECE  0E01               	movlw	1
  6250  010ED0  6EE6               	movwf	postinc1,c
  6251  010ED2  0E00               	movlw	0
  6252  010ED4  6EE6               	movwf	postinc1,c
  6253  010ED6  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  6254  010EDA  0060  F007  FFE6   	movff	btemp,postinc1
  6255  010EE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6256  010EE6  0E08               	movlw	8
  6257  010EE8  6EE6               	movwf	postinc1,c
  6258  010EEA  EC94  F0D5         	call	_sprintf	;wreg free
  6259                           
  6260                           ;main.c: 414:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  6261  010EEE  EE22  F229         	lfsr	2,_C+298	;volatile
  6262  010EF2  006F FF7B FFE6     	movff	postinc2,postinc1
  6263  010EF8  006F FF7B FFE6     	movff	postinc2,postinc1
  6264  010EFE  006F FF7B FFE6     	movff	postinc2,postinc1
  6265  010F04  006F FF7B FFE6     	movff	postinc2,postinc1
  6266  010F0A  EE22  F235         	lfsr	2,_C+310	;volatile
  6267  010F0E  006F FF7B FFE6     	movff	postinc2,postinc1
  6268  010F14  006F FF7B FFE6     	movff	postinc2,postinc1
  6269  010F1A  006F FF7B FFE6     	movff	postinc2,postinc1
  6270  010F20  006F FF7B FFE6     	movff	postinc2,postinc1
  6271  010F26  0EBF               	movlw	low STR_44
  6272  010F28  6EE6               	movwf	postinc1,c
  6273  010F2A  0EFB               	movlw	high STR_44
  6274  010F2C  6EE6               	movwf	postinc1,c
  6275  010F2E  0E01               	movlw	1
  6276  010F30  6EE6               	movwf	postinc1,c
  6277  010F32  0E01               	movlw	1
  6278  010F34  6EE6               	movwf	postinc1,c
  6279  010F36  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  6280  010F3A  0060  F007  FFE6   	movff	btemp,postinc1
  6281  010F40  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6282  010F46  0E0C               	movlw	12
  6283  010F48  6EE6               	movwf	postinc1,c
  6284  010F4A  EC94  F0D5         	call	_sprintf	;wreg free
  6285                           
  6286                           ;main.c: 415:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  6287  010F4E  EE22  F22D         	lfsr	2,_C+302	;volatile
  6288  010F52  006F FF7B FFE6     	movff	postinc2,postinc1
  6289  010F58  006F FF7B FFE6     	movff	postinc2,postinc1
  6290  010F5E  006F FF7B FFE6     	movff	postinc2,postinc1
  6291  010F64  006F FF7B FFE6     	movff	postinc2,postinc1
  6292  010F6A  EE22  F239         	lfsr	2,_C+314	;volatile
  6293  010F6E  006F FF7B FFE6     	movff	postinc2,postinc1
  6294  010F74  006F FF7B FFE6     	movff	postinc2,postinc1
  6295  010F7A  006F FF7B FFE6     	movff	postinc2,postinc1
  6296  010F80  006F FF7B FFE6     	movff	postinc2,postinc1
  6297  010F86  0ED6               	movlw	low STR_45
  6298  010F88  6EE6               	movwf	postinc1,c
  6299  010F8A  0EFB               	movlw	high STR_45
  6300  010F8C  6EE6               	movwf	postinc1,c
  6301  010F8E  0E01               	movlw	1
  6302  010F90  6EE6               	movwf	postinc1,c
  6303  010F92  0E02               	movlw	2
  6304  010F94  6EE6               	movwf	postinc1,c
  6305  010F96  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  6306  010F9A  0060  F007  FFE6   	movff	btemp,postinc1
  6307  010FA0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6308  010FA6  0E0C               	movlw	12
  6309  010FA8  6EE6               	movwf	postinc1,c
  6310  010FAA  EC94  F0D5         	call	_sprintf	;wreg free
  6311                           
  6312                           ;main.c: 416:      break;
  6313  010FAE  D108               	goto	l14722
  6314  010FB0                     l14706:
  6315                           
  6316                           ; BSR set to: 0
  6317                           ;main.c: 418:      if (!V.calib) {
  6318  010FB0  0101               	movlb	1	; () banked
  6319  010FB2  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  6320  010FB4  A4D8               	btfss	status,2,c
  6321  010FB6  D02D               	goto	l14710
  6322                           
  6323                           ; BSR set to: 1
  6324                           ;main.c: 419:       lp_filter(0.0, i, -1);
  6325  010FB8  0EFF               	movlw	255
  6326  010FBA  6EE6               	movwf	postinc1,c
  6327                           
  6328                           ;stkvar	_i @ sp[(-18)+14]
  6329  010FBC  0EFC               	movlw	-4
  6330  010FBE  50E3               	movf	plusw1,w,c
  6331  010FC0  6EE6               	movwf	postinc1,c
  6332  010FC2  0E00               	movlw	0
  6333  010FC4  6EE6               	movwf	postinc1,c
  6334  010FC6  0E00               	movlw	0
  6335  010FC8  6EE6               	movwf	postinc1,c
  6336  010FCA  0E00               	movlw	0
  6337  010FCC  6EE6               	movwf	postinc1,c
  6338  010FCE  0E00               	movlw	0
  6339  010FD0  6EE6               	movwf	postinc1,c
  6340  010FD2  EC8E  F0C8         	call	_lp_filter	;wreg free
  6341                           
  6342                           ;main.c: 420:       lp_filter(0.0, j, -1);
  6343  010FD6  0EFF               	movlw	255
  6344  010FD8  6EE6               	movwf	postinc1,c
  6345                           
  6346                           ;stkvar	_j @ sp[(-18)+13]
  6347  010FDA  0EFB               	movlw	-5
  6348  010FDC  50E3               	movf	plusw1,w,c
  6349  010FDE  6EE6               	movwf	postinc1,c
  6350  010FE0  0E00               	movlw	0
  6351  010FE2  6EE6               	movwf	postinc1,c
  6352  010FE4  0E00               	movlw	0
  6353  010FE6  6EE6               	movwf	postinc1,c
  6354  010FE8  0E00               	movlw	0
  6355  010FEA  6EE6               	movwf	postinc1,c
  6356  010FEC  0E00               	movlw	0
  6357  010FEE  6EE6               	movwf	postinc1,c
  6358  010FF0  EC8E  F0C8         	call	_lp_filter	;wreg free
  6359                           
  6360                           ;main.c: 421:       lp_filter(0.0, k, -1);
  6361  010FF4  0EFF               	movlw	255
  6362  010FF6  6EE6               	movwf	postinc1,c
  6363                           
  6364                           ;stkvar	_k @ sp[(-18)+12]
  6365  010FF8  0EFA               	movlw	-6
  6366  010FFA  50E3               	movf	plusw1,w,c
  6367  010FFC  6EE6               	movwf	postinc1,c
  6368  010FFE  0E00               	movlw	0
  6369  011000  6EE6               	movwf	postinc1,c
  6370  011002  0E00               	movlw	0
  6371  011004  6EE6               	movwf	postinc1,c
  6372  011006  0E00               	movlw	0
  6373  011008  6EE6               	movwf	postinc1,c
  6374  01100A  0E00               	movlw	0
  6375  01100C  6EE6               	movwf	postinc1,c
  6376  01100E  EC8E  F0C8         	call	_lp_filter	;wreg free
  6377  011012                     l14710:
  6378                           
  6379                           ;main.c: 423:      V.calib = 1;
  6380  011012  0E01               	movlw	1
  6381  011014  0101               	movlb	1	; () banked
  6382  011016  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  6383                           
  6384                           ; BSR set to: 1
  6385                           ;main.c: 424:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  6386                           ;stkvar	_inp_index @ sp[(-17)+11]
  6387  011018  0EFA               	movlw	-6
  6388  01101A  50E3               	movf	plusw1,w,c
  6389  01101C  6EE6               	movwf	postinc1,c
  6390  01101E  0E00               	movlw	0
  6391  011020  6EE6               	movwf	postinc1,c
  6392                           
  6393                           ;stkvar	_i @ sp[(-19)+14]
  6394  011022  0EFB               	movlw	-5
  6395  011024  50E3               	movf	plusw1,w,c
  6396  011026  0D04               	mullw	4
  6397  011028  0EFF               	movlw	low _C
  6398  01102A  24F3               	addwf	243,w,c
  6399  01102C  6ED9               	movwf	fsr2l,c
  6400  01102E  0E08               	movlw	high _C
  6401  011030  20F4               	addwfc	prodh,w,c
  6402  011032  6EDA               	movwf	fsr2h,c
  6403  011034  006F FF7B FFE6     	movff	postinc2,postinc1
  6404  01103A  006F FF7B FFE6     	movff	postinc2,postinc1
  6405  011040  006F FF7B FFE6     	movff	postinc2,postinc1
  6406  011046  006F FF7B FFE6     	movff	postinc2,postinc1
  6407                           
  6408                           ;stkvar	_i @ sp[(-23)+14]
  6409  01104C  0EF7               	movlw	-9
  6410  01104E  50E3               	movf	plusw1,w,c
  6411  011050  6EE6               	movwf	postinc1,c
  6412  011052  ECFF  F0E8         	call	_get_raw_result	;wreg free
  6413  011056  0060  F007  FFE6   	movff	btemp,postinc1
  6414  01105C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6415  011062  0E64               	movlw	low STR_46
  6416  011064  6EE6               	movwf	postinc1,c
  6417  011066  0EFD               	movlw	high STR_46
  6418  011068  6EE6               	movwf	postinc1,c
  6419  01106A  0E00               	movlw	0
  6420  01106C  6EE6               	movwf	postinc1,c
  6421  01106E  0E00               	movlw	0
  6422  011070  6EE6               	movwf	postinc1,c
  6423  011072  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  6424  011076  0060  F007  FFE6   	movff	btemp,postinc1
  6425  01107C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6426  011082  0E0C               	movlw	12
  6427  011084  6EE6               	movwf	postinc1,c
  6428  011086  EC94  F0D5         	call	_sprintf	;wreg free
  6429                           
  6430                           ; BSR set to: 0
  6431                           ;main.c: 425:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  6432                           ;stkvar	_inp_index @ sp[(-17)+11]
  6433  01108A  0EFA               	movlw	-6
  6434  01108C  50E3               	movf	plusw1,w,c
  6435  01108E  6E0B               	movwf	(btemp+10)^0,c
  6436  011090  6A0C               	clrf	(btemp+11)^0,c
  6437  011092  0E01               	movlw	1
  6438  011094  260B               	addwf	(btemp+10)^0,f,c
  6439  011096  0E00               	movlw	0
  6440  011098  220C               	addwfc	(btemp+11)^0,f,c
  6441  01109A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6442  0110A0  0060  F033  FFE6   	movff	btemp+11,postinc1
  6443                           
  6444                           ;stkvar	_j @ sp[(-19)+13]
  6445  0110A6  0EFA               	movlw	-6
  6446  0110A8  50E3               	movf	plusw1,w,c
  6447  0110AA  0D04               	mullw	4
  6448  0110AC  0EFF               	movlw	low _C
  6449  0110AE  24F3               	addwf	243,w,c
  6450  0110B0  6ED9               	movwf	fsr2l,c
  6451  0110B2  0E08               	movlw	high _C
  6452  0110B4  20F4               	addwfc	prodh,w,c
  6453  0110B6  6EDA               	movwf	fsr2h,c
  6454  0110B8  006F FF7B FFE6     	movff	postinc2,postinc1
  6455  0110BE  006F FF7B FFE6     	movff	postinc2,postinc1
  6456  0110C4  006F FF7B FFE6     	movff	postinc2,postinc1
  6457  0110CA  006F FF7B FFE6     	movff	postinc2,postinc1
  6458                           
  6459                           ;stkvar	_j @ sp[(-23)+13]
  6460  0110D0  0EF6               	movlw	-10
  6461  0110D2  50E3               	movf	plusw1,w,c
  6462  0110D4  6EE6               	movwf	postinc1,c
  6463  0110D6  ECFF  F0E8         	call	_get_raw_result	;wreg free
  6464  0110DA  0060  F007  FFE6   	movff	btemp,postinc1
  6465  0110E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6466  0110E6  0E64               	movlw	low STR_46
  6467  0110E8  6EE6               	movwf	postinc1,c
  6468  0110EA  0EFD               	movlw	high STR_46
  6469  0110EC  6EE6               	movwf	postinc1,c
  6470  0110EE  0E00               	movlw	0
  6471  0110F0  6EE6               	movwf	postinc1,c
  6472  0110F2  0E01               	movlw	1
  6473  0110F4  6EE6               	movwf	postinc1,c
  6474  0110F6  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  6475  0110FA  0060  F007  FFE6   	movff	btemp,postinc1
  6476  011100  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6477  011106  0E0C               	movlw	12
  6478  011108  6EE6               	movwf	postinc1,c
  6479  01110A  EC94  F0D5         	call	_sprintf	;wreg free
  6480                           
  6481                           ; BSR set to: 0
  6482                           ;main.c: 426:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  6483                           ;stkvar	_inp_index @ sp[(-17)+11]
  6484  01110E  0EFA               	movlw	-6
  6485  011110  50E3               	movf	plusw1,w,c
  6486  011112  6E0B               	movwf	(btemp+10)^0,c
  6487  011114  6A0C               	clrf	(btemp+11)^0,c
  6488  011116  0E02               	movlw	2
  6489  011118  260B               	addwf	(btemp+10)^0,f,c
  6490  01111A  0E00               	movlw	0
  6491  01111C  220C               	addwfc	(btemp+11)^0,f,c
  6492  01111E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6493  011124  0060  F033  FFE6   	movff	btemp+11,postinc1
  6494                           
  6495                           ;stkvar	_k @ sp[(-19)+12]
  6496  01112A  0EF9               	movlw	-7
  6497  01112C  50E3               	movf	plusw1,w,c
  6498  01112E  0D04               	mullw	4
  6499  011130  0EFF               	movlw	low _C
  6500  011132  24F3               	addwf	243,w,c
  6501  011134  6ED9               	movwf	fsr2l,c
  6502  011136  0E08               	movlw	high _C
  6503  011138  20F4               	addwfc	prodh,w,c
  6504  01113A  6EDA               	movwf	fsr2h,c
  6505  01113C  006F FF7B FFE6     	movff	postinc2,postinc1
  6506  011142  006F FF7B FFE6     	movff	postinc2,postinc1
  6507  011148  006F FF7B FFE6     	movff	postinc2,postinc1
  6508  01114E  006F FF7B FFE6     	movff	postinc2,postinc1
  6509                           
  6510                           ;stkvar	_k @ sp[(-23)+12]
  6511  011154  0EF5               	movlw	-11
  6512  011156  50E3               	movf	plusw1,w,c
  6513  011158  6EE6               	movwf	postinc1,c
  6514  01115A  ECFF  F0E8         	call	_get_raw_result	;wreg free
  6515  01115E  0060  F007  FFE6   	movff	btemp,postinc1
  6516  011164  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6517  01116A  0E64               	movlw	low STR_46
  6518  01116C  6EE6               	movwf	postinc1,c
  6519  01116E  0EFD               	movlw	high STR_46
  6520  011170  6EE6               	movwf	postinc1,c
  6521  011172  0E00               	movlw	0
  6522  011174  6EE6               	movwf	postinc1,c
  6523  011176  0E02               	movlw	2
  6524  011178  6EE6               	movwf	postinc1,c
  6525  01117A  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
  6526  01117E  0060  F007  FFE6   	movff	btemp,postinc1
  6527  011184  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6528  01118A  0E0C               	movlw	12
  6529  01118C  6EE6               	movwf	postinc1,c
  6530  01118E  EC94  F0D5         	call	_sprintf	;wreg free
  6531                           
  6532                           ;main.c: 427:      break;
  6533  011192  D016               	goto	l14722
  6534  011194                     l14720:
  6535  011194  0100               	movlb	0	; () banked
  6536  011196  51F1               	movf	_H& (0+255),w,b
  6537  011198  6E0B               	movwf	(btemp+10)^0,c
  6538  01119A  6A0C               	clrf	(btemp+11)^0,c
  6539                           
  6540                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6541                           ; Switch size 1, requested type "simple"
  6542                           ; Number of cases is 1, Range of values is 0 to 0
  6543                           ; switch strategies available:
  6544                           ; Name         Instructions Cycles
  6545                           ; simple_byte            4     3 (average)
  6546                           ;	Chosen strategy is simple_byte
  6547  01119C  500C               	movf	(btemp+11)^0,w,c
  6548  01119E  0A00               	xorlw	0	; case 0
  6549  0111A0  A4D8               	btfss	status,2,c
  6550  0111A2  D00E               	goto	l14722
  6551                           
  6552                           ; BSR set to: 0
  6553                           ; Switch size 1, requested type "simple"
  6554                           ; Number of cases is 4, Range of values is 0 to 3
  6555                           ; switch strategies available:
  6556                           ; Name         Instructions Cycles
  6557                           ; simple_byte           13     7 (average)
  6558                           ;	Chosen strategy is simple_byte
  6559  0111A4  500B               	movf	(btemp+10)^0,w,c
  6560  0111A6  0A00               	xorlw	0	; case 0
  6561  0111A8  B4D8               	btfsc	status,2,c
  6562  0111AA  D4CE               	goto	l1479
  6563  0111AC  0A01               	xorlw	1	; case 1
  6564  0111AE  B4D8               	btfsc	status,2,c
  6565  0111B0  EFA1  F084         	goto	l1469
  6566  0111B4  0A03               	xorlw	3	; case 2
  6567  0111B6  B4D8               	btfsc	status,2,c
  6568  0111B8  D5DC               	goto	l1480
  6569  0111BA  0A01               	xorlw	1	; case 3
  6570  0111BC  B4D8               	btfsc	status,2,c
  6571  0111BE  D6F8               	goto	l14706
  6572  0111C0                     l14722:
  6573                           
  6574                           ; BSR set to: 0
  6575                           ;main.c: 431:     clear_hid_pflags(&H);
  6576  0111C0  0EF1               	movlw	_H& (0+255)
  6577  0111C2  6EE6               	movwf	postinc1,c
  6578  0111C4  EC39  F0E6         	call	_clear_hid_pflags	;wreg free
  6579                           
  6580                           ;main.c: 433:    StartTimer(TMR_DISPLAY, 250);
  6581  0111C8  0EFA               	movlw	250
  6582  0111CA  6EE6               	movwf	postinc1,c
  6583  0111CC  0E00               	movlw	0
  6584  0111CE  6EE6               	movwf	postinc1,c
  6585  0111D0  0E0A               	movlw	10
  6586  0111D2  6EE6               	movwf	postinc1,c
  6587  0111D4  ECDC  F0E4         	call	_StartTimer	;wreg free
  6588                           
  6589                           ;main.c: 434:    V.enter = check_enter_button(&H);
  6590  0111D8  0EF1               	movlw	_H& (0+255)
  6591  0111DA  6EE6               	movwf	postinc1,c
  6592  0111DC  ECFC  F0E4         	call	_check_enter_button	;wreg free
  6593  0111E0  5001               	movf	btemp^0,w,c
  6594  0111E2  0101               	movlb	1	; () banked
  6595  0111E4  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  6596                           
  6597                           ; BSR set to: 1
  6598                           ;main.c: 435:    if (V.enter && (H.hid_display != HID_AUX)) {
  6599  0111E6  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6600  0111E8  B4D8               	btfsc	status,2,c
  6601  0111EA  D013               	goto	l14736
  6602                           
  6603                           ; BSR set to: 1
  6604  0111EC  0E03               	movlw	3
  6605  0111EE  0100               	movlb	0	; () banked
  6606  0111F0  19F1               	xorwf	_H& (0+255),w,b
  6607  0111F2  B4D8               	btfsc	status,2,c
  6608  0111F4  D00E               	goto	l14736
  6609                           
  6610                           ; BSR set to: 0
  6611                           ;main.c: 436:     V.enter = 0;
  6612  0111F6  0101               	movlb	1	; () banked
  6613  0111F8  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6614                           
  6615                           ; BSR set to: 1
  6616                           ;main.c: 437:     V.screen = ~V.screen;
  6617  0111FA  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6618  0111FC  D002               	goto	u14030
  6619  0111FE  0E01               	movlw	1
  6620  011200  D001               	goto	u14036
  6621  011202                     u14030:
  6622  011202  0E00               	movlw	0
  6623  011204                     u14036:
  6624  011204  0AFF               	xorlw	255
  6625  011206  6E0C               	movwf	(btemp+11)^0,c
  6626  011208  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  6627  01120A  180C               	xorwf	(btemp+11)^0,w,c
  6628  01120C  0BFE               	andlw	-2
  6629  01120E  180C               	xorwf	(btemp+11)^0,w,c
  6630  011210  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  6631  011212                     l14736:
  6632                           
  6633                           ;main.c: 439:    set_vterm(V.screen);
  6634  011212  0101               	movlb	1	; () banked
  6635  011214  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6636  011216  D002               	goto	u14040
  6637  011218  0E01               	movlw	1
  6638  01121A  D001               	goto	u14046
  6639  01121C                     u14040:
  6640  01121C  0E00               	movlw	0
  6641  01121E                     u14046:
  6642  01121E  6EE6               	movwf	postinc1,c
  6643  011220  EC5F  F0E9         	call	_set_vterm	;wreg free
  6644                           
  6645                           ;main.c: 440:    update_lcd(V.screen);
  6646  011224  0101               	movlb	1	; () banked
  6647  011226  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6648  011228  D002               	goto	u14050
  6649  01122A  0E01               	movlw	1
  6650  01122C  D001               	goto	u14056
  6651  01122E                     u14050:
  6652  01122E  0E00               	movlw	0
  6653  011230                     u14056:
  6654  011230  6EE6               	movwf	postinc1,c
  6655  011232  EC0C  F0D5         	call	_update_lcd	;wreg free
  6656                           
  6657                           ;main.c: 442:    wait_lcd_done();
  6658  011236  ECEE  F0E8         	call	_wait_lcd_done	;wreg free
  6659                           
  6660                           ; BSR set to: 0
  6661                           ;main.c: 443:    set_dac_a(3.333);
  6662  01123A  0EDF               	movlw	223
  6663  01123C  6EE6               	movwf	postinc1,c
  6664  01123E  0E4F               	movlw	79
  6665  011240  6EE6               	movwf	postinc1,c
  6666  011242  0E55               	movlw	85
  6667  011244  6EE6               	movwf	postinc1,c
  6668  011246  0E40               	movlw	64
  6669  011248  6EE6               	movwf	postinc1,c
  6670  01124A  EC1F  F0E6         	call	_set_dac_a	;wreg free
  6671                           
  6672                           ;main.c: 444:    set_dac_b(6.666);
  6673  01124E  0EDF               	movlw	223
  6674  011250  6EE6               	movwf	postinc1,c
  6675  011252  0E4F               	movlw	79
  6676  011254  6EE6               	movwf	postinc1,c
  6677  011256  0ED5               	movlw	213
  6678  011258  6EE6               	movwf	postinc1,c
  6679  01125A  0E40               	movlw	64
  6680  01125C  6EE6               	movwf	postinc1,c
  6681  01125E  EC05  F0E6         	call	_set_dac_b	;wreg free
  6682                           
  6683                           ;main.c: 445:    set_dac();
  6684  011262  EC2E  F0DA         	call	_set_dac	;wreg free
  6685  011266                     l14748:
  6686                           
  6687                           ;main.c: 451:   check_help(V.flipper);
  6688  011266  0101               	movlb	1	; () banked
  6689  011268  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  6690  01126A  6EE6               	movwf	postinc1,c
  6691  01126C  EC9E  F0C5         	call	_check_help	;wreg free
  6692                           
  6693                           ;main.c: 453:   if (V.enter) {
  6694  011270  0101               	movlb	1	; () banked
  6695  011272  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6696  011274  B4D8               	btfsc	status,2,c
  6697  011276  D062               	goto	l1485
  6698                           
  6699                           ; BSR set to: 1
  6700                           ;main.c: 454:    V.enter = 0;
  6701  011278  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6702                           
  6703                           ;main.c: 455:    V.calib = 0;
  6704  01127A  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  6705                           
  6706                           ; BSR set to: 1
  6707                           ;main.c: 456:    inp_index += 3;
  6708                           ;stkvar	_inp_index @ sp[(-17)+11]
  6709  01127C  0EFA               	movlw	-6
  6710  01127E  006F FF8C  F001    	movff	plusw1,btemp
  6711  011284  0E03               	movlw	3
  6712  011286  2601               	addwf	btemp^0,f,c
  6713  011288  0EFA               	movlw	-6
  6714  01128A  0060  F007  FFE3   	movff	btemp,plusw1
  6715                           
  6716                           ;main.c: 457:    if (inp_index > 9)
  6717                           ;stkvar	_inp_index @ sp[(-17)+11]
  6718  011290  0EFA               	movlw	-6
  6719  011292  006F FF8C  F001    	movff	plusw1,btemp
  6720  011298  0E09               	movlw	9
  6721  01129A  6401               	cpfsgt	btemp^0,c
  6722  01129C  D03A               	goto	l14776
  6723                           
  6724                           ; BSR set to: 1
  6725                           ;main.c: 458:     inp_index = 0;
  6726                           ;stkvar	_inp_index @ sp[(-17)+11]
  6727  01129E  0EFA               	movlw	-6
  6728  0112A0  6AE3               	clrf	plusw1,c
  6729  0112A2  D037               	goto	l14776
  6730  0112A4                     l14758:
  6731                           
  6732                           ; BSR set to: 1
  6733                           ;main.c: 461:     i = C_BATT;
  6734                           ;stkvar	_i @ sp[(-17)+14]
  6735  0112A4  0EFD               	movlw	-3
  6736  0112A6  6AE3               	clrf	plusw1,c
  6737                           
  6738                           ; BSR set to: 1
  6739                           ;main.c: 462:     j = C_PV;
  6740                           ;stkvar	_j @ sp[(-17)+13]
  6741  0112A8  0EFC               	movlw	-4
  6742  0112AA  6AE3               	clrf	plusw1,c
  6743  0112AC  2AE3               	incf	plusw1,f,c
  6744                           
  6745                           ; BSR set to: 1
  6746                           ;main.c: 463:     k = V_CC;
  6747                           ;stkvar	_k @ sp[(-17)+12]
  6748  0112AE  0EFB               	movlw	-5
  6749  0112B0  6AE3               	clrf	plusw1,c
  6750  0112B2  82E3               	bsf	plusw1,1,c
  6751                           
  6752                           ;main.c: 464:     break;
  6753  0112B4  D043               	goto	l1485
  6754  0112B6                     l14764:
  6755                           
  6756                           ; BSR set to: 1
  6757                           ;main.c: 466:     i = V_BAT;
  6758                           ;stkvar	_i @ sp[(-17)+14]
  6759  0112B6  0EFD               	movlw	-3
  6760  0112B8  6AE3               	clrf	plusw1,c
  6761  0112BA  84E3               	bsf	plusw1,2,c
  6762                           
  6763                           ;main.c: 467:     j = V_PV;
  6764                           ;stkvar	_j @ sp[(-17)+13]
  6765  0112BC  0EFC               	movlw	-4
  6766  0112BE  6AE3               	clrf	plusw1,c
  6767  0112C0  80E3               	bsf	plusw1,0,c
  6768  0112C2  84E3               	bsf	plusw1,2,c	;indir
  6769                           
  6770                           ;main.c: 468:     k = V_CBUS;
  6771                           ;stkvar	_k @ sp[(-17)+12]
  6772  0112C4  0EFB               	movlw	-5
  6773  0112C6  6AE3               	clrf	plusw1,c
  6774  0112C8  82E3               	bsf	plusw1,1,c
  6775  0112CA  84E3               	bsf	plusw1,2,c	;indir
  6776                           
  6777                           ;main.c: 469:     break;
  6778  0112CC  D037               	goto	l1485
  6779  0112CE                     l14766:
  6780                           
  6781                           ; BSR set to: 1
  6782                           ;main.c: 471:     i = V_BBAT;
  6783                           ;stkvar	_i @ sp[(-17)+14]
  6784  0112CE  0EFD               	movlw	-3
  6785  0112D0  6AE3               	clrf	plusw1,c
  6786  0112D2  82E3               	bsf	plusw1,1,c
  6787  0112D4  86E3               	bsf	plusw1,3,c	;indir
  6788                           
  6789                           ; BSR set to: 1
  6790                           ;main.c: 472:     j = V_TEMP;
  6791  0112D6  0E0B               	movlw	11
  6792  0112D8  6E0C               	movwf	(btemp+11)^0,c
  6793                           
  6794                           ;stkvar	_j @ sp[(-17)+13]
  6795  0112DA  0EFC               	movlw	-4
  6796  0112DC  0060  F033  FFE3   	movff	btemp+11,plusw1
  6797                           
  6798                           ; BSR set to: 1
  6799                           ;main.c: 473:     k = V_INVERTER;
  6800                           ;stkvar	_k @ sp[(-17)+12]
  6801  0112E2  0EFB               	movlw	-5
  6802  0112E4  6AE3               	clrf	plusw1,c
  6803  0112E6  84E3               	bsf	plusw1,2,c
  6804  0112E8  86E3               	bsf	plusw1,3,c	;indir
  6805                           
  6806                           ;main.c: 474:     break;
  6807  0112EA  D028               	goto	l1485
  6808  0112EC                     l14772:
  6809                           
  6810                           ; BSR set to: 1
  6811                           ;main.c: 476:     i = V_LIGHT_SENSOR;
  6812  0112EC  0E0D               	movlw	13
  6813  0112EE  6E0C               	movwf	(btemp+11)^0,c
  6814                           
  6815                           ;stkvar	_i @ sp[(-17)+14]
  6816  0112F0  0EFD               	movlw	-3
  6817  0112F2  0060  F033  FFE3   	movff	btemp+11,plusw1
  6818                           
  6819                           ;main.c: 477:     j = V_LIGHT_SENSOR;
  6820  0112F8  0E0D               	movlw	13
  6821  0112FA  6E0C               	movwf	(btemp+11)^0,c
  6822                           
  6823                           ;stkvar	_j @ sp[(-17)+13]
  6824  0112FC  0EFC               	movlw	-4
  6825  0112FE  0060  F033  FFE3   	movff	btemp+11,plusw1
  6826                           
  6827                           ;main.c: 478:     k = V_LIGHT_SENSOR;
  6828  011304  0E0D               	movlw	13
  6829  011306  6E0C               	movwf	(btemp+11)^0,c
  6830                           
  6831                           ;stkvar	_k @ sp[(-17)+12]
  6832  011308  0EFB               	movlw	-5
  6833  01130A  0060  F033  FFE3   	movff	btemp+11,plusw1
  6834                           
  6835                           ;main.c: 479:     break;
  6836  011310  D015               	goto	l1485
  6837  011312                     l14776:
  6838                           
  6839                           ; BSR set to: 1
  6840                           ;stkvar	_inp_index @ sp[(-17)+11]
  6841  011312  0EFA               	movlw	-6
  6842  011314  50E3               	movf	plusw1,w,c
  6843  011316  6E0B               	movwf	(btemp+10)^0,c
  6844  011318  6A0C               	clrf	(btemp+11)^0,c
  6845                           
  6846                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6847                           ; Switch size 1, requested type "simple"
  6848                           ; Number of cases is 1, Range of values is 0 to 0
  6849                           ; switch strategies available:
  6850                           ; Name         Instructions Cycles
  6851                           ; simple_byte            4     3 (average)
  6852                           ;	Chosen strategy is simple_byte
  6853  01131A  500C               	movf	(btemp+11)^0,w,c
  6854  01131C  0A00               	xorlw	0	; case 0
  6855  01131E  A4D8               	btfss	status,2,c
  6856  011320  D00D               	goto	l1485
  6857                           
  6858                           ; BSR set to: 1
  6859                           ; Switch size 1, requested type "simple"
  6860                           ; Number of cases is 4, Range of values is 0 to 9
  6861                           ; switch strategies available:
  6862                           ; Name         Instructions Cycles
  6863                           ; simple_byte           13     7 (average)
  6864                           ;	Chosen strategy is simple_byte
  6865  011322  500B               	movf	(btemp+10)^0,w,c
  6866  011324  0A00               	xorlw	0	; case 0
  6867  011326  B4D8               	btfsc	status,2,c
  6868  011328  D7BD               	goto	l14758
  6869  01132A  0A03               	xorlw	3	; case 3
  6870  01132C  B4D8               	btfsc	status,2,c
  6871  01132E  D7C3               	goto	l14764
  6872  011330  0A05               	xorlw	5	; case 6
  6873  011332  B4D8               	btfsc	status,2,c
  6874  011334  D7CC               	goto	l14766
  6875  011336  0A0F               	xorlw	15	; case 9
  6876  011338  B4D8               	btfsc	status,2,c
  6877  01133A  D7D8               	goto	l14772
  6878  01133C                     l1485:
  6879                           
  6880                           ; BSR set to: 1
  6881                           ;main.c: 488:   if (V.set_sequ) {
  6882  01133C  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  6883  01133E  EFE0  F083         	goto	l14630
  6884                           
  6885                           ; BSR set to: 1
  6886                           ;main.c: 489:    if (TimerDone(TMR_INFO)) {
  6887  011342  0E07               	movlw	7
  6888  011344  6EE6               	movwf	postinc1,c
  6889  011346  EC69  F0E7         	call	_TimerDone	;wreg free
  6890  01134A  5001               	movf	btemp^0,w,c
  6891  01134C  B4D8               	btfsc	status,2,c
  6892  01134E  D00C               	goto	l14786
  6893                           
  6894                           ;main.c: 490:     V.set_sequ = 0;
  6895  011350  0101               	movlb	1	; () banked
  6896  011352  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  6897                           
  6898                           ; BSR set to: 1
  6899                           ;main.c: 491:     set_vterm(0);
  6900  011354  0E00               	movlw	0
  6901  011356  6EE6               	movwf	postinc1,c
  6902  011358  EC5F  F0E9         	call	_set_vterm	;wreg free
  6903                           
  6904                           ;main.c: 492:     update_lcd(0);
  6905  01135C  0E00               	movlw	0
  6906  01135E  6EE6               	movwf	postinc1,c
  6907  011360  EC0C  F0D5         	call	_update_lcd	;wreg free
  6908                           
  6909                           ;main.c: 493:    } else {
  6910  011364  EFE0  F083         	goto	l14630
  6911  011368                     l14786:
  6912                           
  6913                           ;main.c: 494:     set_vterm(2);
  6914  011368  0E02               	movlw	2
  6915  01136A  6EE6               	movwf	postinc1,c
  6916  01136C  EC5F  F0E9         	call	_set_vterm	;wreg free
  6917                           
  6918                           ;main.c: 495:     update_lcd(2);
  6919  011370  0E02               	movlw	2
  6920  011372  6EE6               	movwf	postinc1,c
  6921  011374  EC0C  F0D5         	call	_update_lcd	;wreg free
  6922  011378  EFE0  F083         	goto	l14630
  6923  01137C                     __end_of_main:
  6924                           	opt callstack 0
  6925                           
  6926 ;; *************** function _update_hist_data *****************
  6927 ;; Defined at:
  6928 ;;		line 454 in file "daq.c"
  6929 ;; Parameters:    Size  Location     Type
  6930 ;;  mode            1  [STACK] const _Bool 
  6931 ;;  hist            2  [STACK] PTR volatile struct hist
  6932 ;;		 -> C.hist(113), C(336), 
  6933 ;; Auto vars:     Size  Location     Type
  6934 ;;		None
  6935 ;; Return value:  Size  Location     Type
  6936 ;;                  1  [STACK] void 
  6937 ;; Registers used:
  6938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
  6939 ;; Tracked objects:
  6940 ;;		On entry : 4/2
  6941 ;;		On exit  : 0/0
  6942 ;;		Unchanged: 0/0
  6943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6948 ;;Total ram usage:        0 bytes
  6949 ;; Hardware stack levels used:    1
  6950 ;; Hardware stack levels required when called:   15
  6951 ;; This function calls:
  6952 ;;		Nothing
  6953 ;; This function is called by:
  6954 ;;		_main
  6955 ;; This function uses a reentrant model
  6956 ;;
  6957                           
  6958                           	psect	text1
  6959  01C016                     __ptext1:
  6960                           	opt callstack 0
  6961  01C016                     _update_hist_data:
  6962                           	opt callstack 15
  6963                           
  6964                           ;daq.c: 454: void update_hist_data(const _Bool mode, volatile hist_type *hist);daq.c: 45
      +                          5: {;daq.c: 456:  if (hist == ((void*)0))
  6965                           ;stkvar	_hist @ sp[(0)+-3]
  6966                           
  6967                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6968                           ;incstack = 0
  6969  01C016  0EFD               	movlw	-3
  6970  01C018  006F FF8C  F001    	movff	plusw1,btemp
  6971  01C01E  0EFE               	movlw	-2
  6972  01C020  50E3               	movf	plusw1,w,c
  6973  01C022  1001               	iorwf	btemp^0,w,c
  6974  01C024  B4D8               	btfsc	status,2,c
  6975  01C026  D02A               	goto	l2072
  6976                           
  6977                           ;daq.c: 459:  if (mode) {
  6978                           ;stkvar	_mode @ sp[(0)+-1]
  6979  01C028  0EFF               	movlw	-1
  6980  01C02A  50E3               	movf	plusw1,w,c
  6981  01C02C  B4D8               	btfsc	status,2,c
  6982  01C02E  D014               	goto	l12066
  6983                           
  6984                           ;daq.c: 460:   if (R.hist_save)
  6985  01C030  0102               	movlb	2	; () banked
  6986  01C032  A1A7               	btfss	(_R+167)& (0+255),0,b	;volatile
  6987  01C034  D023               	goto	l2072
  6988                           
  6989                           ; BSR set to: 2
  6990                           ;daq.c: 461:    R.H = *hist;
  6991                           ;stkvar	_hist @ sp[(0)+-3]
  6992  01C036  0EFD               	movlw	-3
  6993  01C038  006F FF8F FFD9     	movff	plusw1,fsr2l
  6994  01C03E  0EFE               	movlw	-2
  6995  01C040  006F FF8F FFDA     	movff	plusw1,fsr2h
  6996  01C046  EE00  F236         	lfsr	0,_R+54	;volatile
  6997  01C04A  0E70               	movlw	112
  6998  01C04C                     u11151:
  6999  01C04C  006F FF6F FFEB     	movff	plusw2,plusw0
  7000  01C052  06E8               	decf	wreg,f,c
  7001  01C054  E2FB               	bc	u11151
  7002  01C056  D012               	goto	l2072
  7003  01C058                     l12066:
  7004                           
  7005                           ;daq.c: 463:   *hist = R.H;
  7006  01C058  EE20  F236         	lfsr	2,_R+54	;volatile
  7007                           
  7008                           ;stkvar	_hist @ sp[(0)+-3]
  7009  01C05C  0EFD               	movlw	-3
  7010  01C05E  006F FF8F FFE9     	movff	plusw1,fsr0l
  7011  01C064  0EFE               	movlw	-2
  7012  01C066  006F FF8F FFEA     	movff	plusw1,fsr0h
  7013  01C06C  0E70               	movlw	112
  7014  01C06E                     u11161:
  7015  01C06E  006F FF6F FFEB     	movff	plusw2,plusw0
  7016  01C074  06E8               	decf	wreg,f,c
  7017  01C076  E2FB               	bc	u11161
  7018                           
  7019                           ;daq.c: 464:   R.hist_save = 1;
  7020  01C078  0102               	movlb	2	; () banked
  7021  01C07A  81A7               	bsf	(_R+167)& (0+255),0,b	;volatile
  7022  01C07C                     l2072:
  7023                           
  7024                           ; _update_hist_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
  7025  01C07C  52E5               	movf	postdec1,f,c
  7026  01C07E  52E5               	movf	postdec1,f,c
  7027  01C080  52E5               	movf	postdec1,f,c
  7028  01C082  0012               	return		;funcret
  7029  01C084                     __end_of_update_hist_data:
  7030                           	opt callstack 0
  7031                           
  7032 ;; *************** function _update_cal_data *****************
  7033 ;; Defined at:
  7034 ;;		line 435 in file "daq.c"
  7035 ;; Parameters:    Size  Location     Type
  7036 ;;		None
  7037 ;; Auto vars:     Size  Location     Type
  7038 ;;		None
  7039 ;; Return value:  Size  Location     Type
  7040 ;;                  1  [STACK] void 
  7041 ;; Registers used:
  7042 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/39
  7045 ;;		On exit  : 3F/2
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7052 ;;Total ram usage:        0 bytes
  7053 ;; Hardware stack levels used:    1
  7054 ;; Hardware stack levels required when called:   15
  7055 ;; This function calls:
  7056 ;;		Nothing
  7057 ;; This function is called by:
  7058 ;;		_main
  7059 ;; This function uses a reentrant model
  7060 ;;
  7061                           
  7062                           	psect	text2
  7063  01C526                     __ptext2:
  7064                           	opt callstack 0
  7065  01C526                     _update_cal_data:
  7066                           	opt callstack 15
  7067                           
  7068                           ;daq.c: 437:  R = r_cal;
  7069                           
  7070                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7071                           ;incstack = 0
  7072  01C526  EE21  F000         	lfsr	2,_r_cal
  7073  01C52A  EE00  F200         	lfsr	0,_R	;volatile
  7074  01C52E  0EAA               	movlw	170
  7075  01C530                     u11091:
  7076  01C530  006F FF7B FFEE     	movff	postinc2,postinc0
  7077  01C536  06E8               	decf	wreg,f,c
  7078  01C538  E2FB               	bc	u11091
  7079  01C53A  0EAB               	movlw	171
  7080  01C53C  5ED9               	subwf	fsr2l,f,c
  7081  01C53E  5EE9               	subwf	fsr0l,f,c
  7082                           
  7083                           ;daq.c: 438:  if (!R.c_zero_cal) {
  7084  01C540  0102               	movlb	2	; () banked
  7085  01C542  B3A7               	btfsc	(_R+167)& (0+255),1,b	;volatile
  7086  01C544  D008               	goto	l12052
  7087                           
  7088                           ; BSR set to: 2
  7089                           ;daq.c: 439:   R.n_offset[0] = 3938;
  7090  01C546  0E0F               	movlw	15
  7091  01C548  6F27               	movwf	(_R+39)& (0+255),b	;volatile
  7092  01C54A  0E62               	movlw	98
  7093  01C54C  6F26               	movwf	(_R+38)& (0+255),b	;volatile
  7094                           
  7095                           ;daq.c: 440:   R.n_offset[1] = 4004;
  7096  01C54E  0E0F               	movlw	15
  7097  01C550  6F29               	movwf	(_R+41)& (0+255),b	;volatile
  7098  01C552  0EA4               	movlw	164
  7099  01C554  6F28               	movwf	(_R+40)& (0+255),b	;volatile
  7100  01C556                     l12052:
  7101                           
  7102                           ; BSR set to: 2
  7103                           ;daq.c: 444:  if (!R.c_scale_cal) {
  7104  01C556  B5A7               	btfsc	(_R+167)& (0+255),2,b	;volatile
  7105  01C558  0012               	return	
  7106                           
  7107                           ; BSR set to: 2
  7108                           ;daq.c: 445:   R.n_scalar[0] = 0.0862000;
  7109  01C55A  0EA0               	movlw	160
  7110  01C55C  6F2A               	movwf	(_R+42)& (0+255),b	;volatile
  7111  01C55E  0E89               	movlw	137
  7112  01C560  6F2B               	movwf	(_R+43)& (0+255),b	;volatile
  7113  01C562  0EB0               	movlw	176
  7114  01C564  6F2C               	movwf	(_R+44)& (0+255),b	;volatile
  7115  01C566  0E3D               	movlw	61
  7116  01C568  6F2D               	movwf	(_R+45)& (0+255),b	;volatile
  7117                           
  7118                           ;daq.c: 446:   R.n_scalar[1] = 0.0361010;
  7119  01C56A  0EA4               	movlw	164
  7120  01C56C  6F2E               	movwf	(_R+46)& (0+255),b	;volatile
  7121  01C56E  0EDE               	movlw	222
  7122  01C570  6F2F               	movwf	(_R+47)& (0+255),b	;volatile
  7123  01C572  0E13               	movlw	19
  7124  01C574  6F30               	movwf	(_R+48)& (0+255),b	;volatile
  7125  01C576  0E3D               	movlw	61
  7126  01C578  6F31               	movwf	(_R+49)& (0+255),b	;volatile
  7127                           
  7128                           ; BSR set to: 2
  7129                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  7130  01C57A  0012               	return		;funcret
  7131  01C57C                     __end_of_update_cal_data:
  7132                           	opt callstack 0
  7133                           
  7134 ;; *************** function _static_soc *****************
  7135 ;; Defined at:
  7136 ;;		line 118 in file "mbmc.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;		None
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;		None
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  1  [STACK] void 
  7143 ;; Registers used:
  7144 ;;		wreg, fsr2l, fsr2h
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/2
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7154 ;;Total ram usage:        0 bytes
  7155 ;; Hardware stack levels used:    1
  7156 ;; Hardware stack levels required when called:   15
  7157 ;; This function calls:
  7158 ;;		Nothing
  7159 ;; This function is called by:
  7160 ;;		_main
  7161 ;; This function uses a reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text3
  7165  01C418                     __ptext3:
  7166                           	opt callstack 0
  7167  01C418                     _static_soc:
  7168                           	opt callstack 15
  7169                           
  7170                           ;mbmc.c: 120:  C.runtime = 120;
  7171                           
  7172                           ; BSR set to: 2
  7173                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7174                           ;incstack = 0
  7175  01C418  0E78               	movlw	120
  7176  01C41A  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
  7177  01C420  0E00               	movlw	0
  7178  01C422  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
  7179                           
  7180                           ;mbmc.c: 121:  C.soc = 100;
  7181  01C428  0E64               	movlw	100
  7182  01C42A  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
  7183  01C430  0E00               	movlw	0
  7184  01C432  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
  7185                           
  7186                           ;mbmc.c: 122:  C.dynamic_ah = C.bank_ah;
  7187  01C438  EE22  F18B         	lfsr	2,_C+140	;volatile
  7188  01C43C  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
  7189  01C442  006F FF78  F990    	movff	postinc2,_C+145	;volatile
  7190  01C448  006F FF78  F991    	movff	postinc2,_C+146	;volatile
  7191  01C44E  006F FF74  F992    	movff	postdec2,_C+147	;volatile
  7192                           
  7193                           ;mbmc.c: 123:  C.dynamic_ah_adj = C.dynamic_ah;
  7194  01C454  EE22  F18F         	lfsr	2,_C+144	;volatile
  7195  01C458  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
  7196  01C45E  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
  7197  01C464  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
  7198  01C46A  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
  7199                           
  7200                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7201  01C470  0012               	return		;funcret
  7202  01C472                     __end_of_static_soc:
  7203                           	opt callstack 0
  7204                           
  7205 ;; *************** function _start_switch_handler *****************
  7206 ;; Defined at:
  7207 ;;		line 125 in file "dio.c"
  7208 ;; Parameters:    Size  Location     Type
  7209 ;;		None
  7210 ;; Auto vars:     Size  Location     Type
  7211 ;;		None
  7212 ;; Return value:  Size  Location     Type
  7213 ;;                  1  [STACK] void 
  7214 ;; Registers used:
  7215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  7216 ;; Tracked objects:
  7217 ;;		On entry : 3/2
  7218 ;;		On exit  : 3F/39
  7219 ;;		Unchanged: 0/0
  7220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7225 ;;Total ram usage:        0 bytes
  7226 ;; Hardware stack levels used:    1
  7227 ;; Hardware stack levels required when called:   16
  7228 ;; This function calls:
  7229 ;;		_INT1_SetInterruptHandler
  7230 ;; This function is called by:
  7231 ;;		_main
  7232 ;; This function uses a reentrant model
  7233 ;;
  7234                           
  7235                           	psect	text4
  7236  01D242                     __ptext4:
  7237                           	opt callstack 0
  7238  01D242                     _start_switch_handler:
  7239                           	opt callstack 14
  7240                           
  7241                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  7242                           
  7243                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7244                           ;incstack = 0
  7245  01D242  0139               	movlb	57	; () banked
  7246  01D244  9195               	bcf	149,0,b	;volatile
  7247                           
  7248                           ; BSR set to: 57
  7249                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  7250  01D246  0EC4               	movlw	low _switch_handler
  7251  01D248  6EE6               	movwf	postinc1,c
  7252  01D24A  0E9F               	movlw	high _switch_handler
  7253  01D24C  6EE6               	movwf	postinc1,c
  7254  01D24E  0E01               	movlw	low (_switch_handler shr (0+16))
  7255  01D250  6EE6               	movwf	postinc1,c
  7256  01D252  ECF5  F0E7         	call	_INT1_SetInterruptHandler	;wreg free
  7257                           
  7258                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  7259  01D256  0E02               	movlw	2
  7260  01D258  0101               	movlb	1	; () banked
  7261  01D25A  6FEA               	movwf	(_S+35)& (0+255),b	;volatile
  7262                           
  7263                           ; BSR set to: 1
  7264                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  7265  01D25C  0139               	movlb	57	; () banked
  7266  01D25E  8195               	bsf	149,0,b	;volatile
  7267                           
  7268                           ; BSR set to: 57
  7269                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  7270  01D260  0012               	return		;funcret
  7271  01D262                     __end_of_start_switch_handler:
  7272                           	opt callstack 0
  7273                           
  7274 ;; *************** function _srand *****************
  7275 ;; Defined at:
  7276 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;  s               2  [STACK] unsigned int 
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;		None
  7281 ;; Return value:  Size  Location     Type
  7282 ;;                  1  [STACK] void 
  7283 ;; Registers used:
  7284 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  7285 ;; Tracked objects:
  7286 ;;		On entry : 0/0
  7287 ;;		On exit  : 3F/1
  7288 ;;		Unchanged: 0/0
  7289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7294 ;;Total ram usage:        0 bytes
  7295 ;; Hardware stack levels used:    1
  7296 ;; Hardware stack levels required when called:   15
  7297 ;; This function calls:
  7298 ;;		Nothing
  7299 ;; This function is called by:
  7300 ;;		_main
  7301 ;; This function uses a reentrant model
  7302 ;;
  7303                           
  7304                           	psect	text5
  7305  01CBD6                     __ptext5:
  7306                           	opt callstack 0
  7307  01CBD6                     _srand:
  7308                           	opt callstack 15
  7309                           
  7310                           ;stkvar	_s @ sp[(0)+-2]
  7311                           
  7312                           ; BSR set to: 57
  7313                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7314                           ;incstack = 0
  7315  01CBD6  0EFE               	movlw	-2
  7316  01CBD8  50E3               	movf	plusw1,w,c
  7317  01CBDA  0FFF               	addlw	255
  7318  01CBDC  6E0B               	movwf	(btemp+10)^0,c
  7319  01CBDE  0EFF               	movlw	-1
  7320  01CBE0  006F FF8C  F00C    	movff	plusw1,btemp+11
  7321  01CBE6  0EFF               	movlw	255
  7322  01CBE8  220C               	addwfc	(btemp+11)^0,f,c
  7323  01CBEA  0060  F02C  F1F0   	movff	btemp+10,_seed
  7324  01CBF0  0060  F030  F1F1   	movff	btemp+11,_seed+1
  7325  01CBF6  0101               	movlb	1	; () banked
  7326  01CBF8  6BF2               	clrf	(_seed+2)& (0+255),b
  7327  01CBFA  6BF3               	clrf	(_seed+3)& (0+255),b
  7328  01CBFC  6BF4               	clrf	(_seed+4)& (0+255),b
  7329  01CBFE  6BF5               	clrf	(_seed+5)& (0+255),b
  7330  01CC00  6BF6               	clrf	(_seed+6)& (0+255),b
  7331  01CC02  6BF7               	clrf	(_seed+7)& (0+255),b
  7332                           
  7333                           ; BSR set to: 1
  7334                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  7335  01CC04  52E5               	movf	postdec1,f,c
  7336  01CC06  52E5               	movf	postdec1,f,c
  7337  01CC08  0012               	return		;funcret
  7338  01CC0A                     __end_of_srand:
  7339                           	opt callstack 0
  7340                           
  7341 ;; *************** function _set_dac_b *****************
  7342 ;; Defined at:
  7343 ;;		line 306 in file "daq.c"
  7344 ;; Parameters:    Size  Location     Type
  7345 ;;  voltage         4  [STACK] const float 
  7346 ;; Auto vars:     Size  Location     Type
  7347 ;;		None
  7348 ;; Return value:  Size  Location     Type
  7349 ;;                  2  [STACK] unsigned short 
  7350 ;; Registers used:
  7351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7352 ;; Tracked objects:
  7353 ;;		On entry : 0/0
  7354 ;;		On exit  : 0/0
  7355 ;;		Unchanged: 0/0
  7356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7361 ;;Total ram usage:        0 bytes
  7362 ;; Hardware stack levels used:    1
  7363 ;; Hardware stack levels required when called:   17
  7364 ;; This function calls:
  7365 ;;		_convert_dac_raw
  7366 ;; This function is called by:
  7367 ;;		_main
  7368 ;; This function uses a reentrant model
  7369 ;;
  7370                           
  7371                           	psect	text6
  7372  01CC0A                     __ptext6:
  7373                           	opt callstack 0
  7374  01CC0A                     _set_dac_b:
  7375                           	opt callstack 13
  7376                           
  7377                           ;daq.c: 306: uint16_t set_dac_b(const float voltage);daq.c: 307: {;daq.c: 308:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  7378                           ;stkvar	_voltage @ sp[(0)+-4]
  7379                           
  7380                           ; BSR set to: 1
  7381                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7382                           ;incstack = 0
  7383  01CC0A  0EFC               	movlw	-4
  7384  01CC0C  006F FF8F FFE6     	movff	plusw1,postinc1
  7385  01CC12  006F FF8F FFE6     	movff	plusw1,postinc1
  7386  01CC18  006F FF8F FFE6     	movff	plusw1,postinc1
  7387  01CC1E  006F FF8F FFE6     	movff	plusw1,postinc1
  7388  01CC24  EC6A  F0D3         	call	_convert_dac_raw	;wreg free
  7389  01CC28  0060  F004  F222   	movff	btemp,_R+34	;volatile
  7390  01CC2E  0060  F008  F223   	movff	btemp+1,_R+35	;volatile
  7391                           
  7392                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  7393                           
  7394                           ;daq.c: 309:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  7395  01CC34  52E5               	movf	postdec1,f,c
  7396  01CC36  52E5               	movf	postdec1,f,c
  7397  01CC38  52E5               	movf	postdec1,f,c
  7398  01CC3A  52E5               	movf	postdec1,f,c
  7399  01CC3C  0012               	return		;funcret
  7400  01CC3E                     __end_of_set_dac_b:
  7401                           	opt callstack 0
  7402                           
  7403 ;; *************** function _set_dac_a *****************
  7404 ;; Defined at:
  7405 ;;		line 297 in file "daq.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;  voltage         4  [STACK] const float 
  7408 ;; Auto vars:     Size  Location     Type
  7409 ;;		None
  7410 ;; Return value:  Size  Location     Type
  7411 ;;                  2  [STACK] unsigned short 
  7412 ;; Registers used:
  7413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7414 ;; Tracked objects:
  7415 ;;		On entry : 3F/0
  7416 ;;		On exit  : 0/0
  7417 ;;		Unchanged: 0/0
  7418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7423 ;;Total ram usage:        0 bytes
  7424 ;; Hardware stack levels used:    1
  7425 ;; Hardware stack levels required when called:   17
  7426 ;; This function calls:
  7427 ;;		_convert_dac_raw
  7428 ;; This function is called by:
  7429 ;;		_main
  7430 ;; This function uses a reentrant model
  7431 ;;
  7432                           
  7433                           	psect	text7
  7434  01CC3E                     __ptext7:
  7435                           	opt callstack 0
  7436  01CC3E                     _set_dac_a:
  7437                           	opt callstack 13
  7438                           
  7439                           ;daq.c: 297: uint16_t set_dac_a(const float voltage);daq.c: 298: {;daq.c: 299:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  7440                           ;stkvar	_voltage @ sp[(0)+-4]
  7441                           
  7442                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7443                           ;incstack = 0
  7444  01CC3E  0EFC               	movlw	-4
  7445  01CC40  006F FF8F FFE6     	movff	plusw1,postinc1
  7446  01CC46  006F FF8F FFE6     	movff	plusw1,postinc1
  7447  01CC4C  006F FF8F FFE6     	movff	plusw1,postinc1
  7448  01CC52  006F FF8F FFE6     	movff	plusw1,postinc1
  7449  01CC58  EC6A  F0D3         	call	_convert_dac_raw	;wreg free
  7450  01CC5C  0060  F004  F220   	movff	btemp,_R+32	;volatile
  7451  01CC62  0060  F008  F221   	movff	btemp+1,_R+33	;volatile
  7452                           
  7453                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  7454                           
  7455                           ;daq.c: 300:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  7456  01CC68  52E5               	movf	postdec1,f,c
  7457  01CC6A  52E5               	movf	postdec1,f,c
  7458  01CC6C  52E5               	movf	postdec1,f,c
  7459  01CC6E  52E5               	movf	postdec1,f,c
  7460  01CC70  0012               	return		;funcret
  7461  01CC72                     __end_of_set_dac_a:
  7462                           	opt callstack 0
  7463                           
  7464 ;; *************** function _convert_dac_raw *****************
  7465 ;; Defined at:
  7466 ;;		line 279 in file "daq.c"
  7467 ;; Parameters:    Size  Location     Type
  7468 ;;  voltage         4  [STACK] float 
  7469 ;; Auto vars:     Size  Location     Type
  7470 ;;		None
  7471 ;; Return value:  Size  Location     Type
  7472 ;;                  2  [STACK] unsigned short 
  7473 ;; Registers used:
  7474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7475 ;; Tracked objects:
  7476 ;;		On entry : 0/0
  7477 ;;		On exit  : 0/0
  7478 ;;		Unchanged: 0/0
  7479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7484 ;;Total ram usage:        0 bytes
  7485 ;; Hardware stack levels used:    1
  7486 ;; Hardware stack levels required when called:   16
  7487 ;; This function calls:
  7488 ;;		___fldiv
  7489 ;;		___flge
  7490 ;;		___fltol
  7491 ;; This function is called by:
  7492 ;;		_set_dac_a
  7493 ;;		_set_dac_b
  7494 ;; This function uses a reentrant model
  7495 ;;
  7496                           
  7497                           	psect	text8
  7498  01A6D4                     __ptext8:
  7499                           	opt callstack 0
  7500  01A6D4                     _convert_dac_raw:
  7501                           	opt callstack 13
  7502                           
  7503                           ;daq.c: 279: static uint16_t convert_dac_raw(float voltage);daq.c: 280: {;daq.c: 284:  i
      +                          f (voltage < 0.001)
  7504                           
  7505                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7506                           ;incstack = 0
  7507  01A6D4  0E6F               	movlw	111
  7508  01A6D6  6EE6               	movwf	postinc1,c
  7509  01A6D8  0E12               	movlw	18
  7510  01A6DA  6EE6               	movwf	postinc1,c
  7511  01A6DC  0E83               	movlw	131
  7512  01A6DE  6EE6               	movwf	postinc1,c
  7513  01A6E0  0E3A               	movlw	58
  7514  01A6E2  6EE6               	movwf	postinc1,c
  7515                           
  7516                           ;stkvar	_voltage @ sp[(-4)+-4]
  7517  01A6E4  0EF8               	movlw	-8
  7518  01A6E6  006F FF8F FFE6     	movff	plusw1,postinc1
  7519  01A6EC  006F FF8F FFE6     	movff	plusw1,postinc1
  7520  01A6F2  006F FF8F FFE6     	movff	plusw1,postinc1
  7521  01A6F8  006F FF8F FFE6     	movff	plusw1,postinc1
  7522  01A6FE  EC2C  F0CD         	call	___flge	;wreg free
  7523  01A702  B001               	btfsc	btemp& (0+255),0,c
  7524  01A704  D018               	goto	l11586
  7525                           
  7526                           ;daq.c: 285:   voltage = 0.001;
  7527  01A706  0E6F               	movlw	111
  7528  01A708  6E09               	movwf	(btemp+8)^0,c
  7529  01A70A  0E12               	movlw	18
  7530  01A70C  6E0A               	movwf	(btemp+9)^0,c
  7531  01A70E  0E83               	movlw	131
  7532  01A710  6E0B               	movwf	(btemp+10)^0,c
  7533  01A712  0E3A               	movlw	58
  7534  01A714  6E0C               	movwf	(btemp+11)^0,c
  7535                           
  7536                           ;stkvar	_voltage @ sp[(0)+-4]
  7537  01A716  0EFC               	movlw	-4
  7538  01A718  0060  F027  FFE3   	movff	btemp+8,plusw1
  7539  01A71E  0EFD               	movlw	-3
  7540  01A720  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7541  01A726  0EFE               	movlw	-2
  7542  01A728  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7543  01A72E  0EFF               	movlw	-1
  7544  01A730  0060  F033  FFE3   	movff	btemp+11,plusw1
  7545  01A736                     l11586:
  7546                           
  7547                           ;daq.c: 286:  if (voltage > 10.0)
  7548                           ;stkvar	_voltage @ sp[(0)+-4]
  7549  01A736  0EFC               	movlw	-4
  7550  01A738  006F FF8F FFE6     	movff	plusw1,postinc1
  7551  01A73E  006F FF8F FFE6     	movff	plusw1,postinc1
  7552  01A744  006F FF8F FFE6     	movff	plusw1,postinc1
  7553  01A74A  006F FF8F FFE6     	movff	plusw1,postinc1
  7554  01A750  0E00               	movlw	0
  7555  01A752  6EE6               	movwf	postinc1,c
  7556  01A754  0E00               	movlw	0
  7557  01A756  6EE6               	movwf	postinc1,c
  7558  01A758  0E20               	movlw	32
  7559  01A75A  6EE6               	movwf	postinc1,c
  7560  01A75C  0E41               	movlw	65
  7561  01A75E  6EE6               	movwf	postinc1,c
  7562  01A760  EC2C  F0CD         	call	___flge	;wreg free
  7563  01A764  B001               	btfsc	btemp& (0+255),0,c
  7564  01A766  D018               	goto	l11590
  7565                           
  7566                           ;daq.c: 287:   voltage = 10.0;
  7567  01A768  0E00               	movlw	0
  7568  01A76A  6E09               	movwf	(btemp+8)^0,c
  7569  01A76C  0E00               	movlw	0
  7570  01A76E  6E0A               	movwf	(btemp+9)^0,c
  7571  01A770  0E20               	movlw	32
  7572  01A772  6E0B               	movwf	(btemp+10)^0,c
  7573  01A774  0E41               	movlw	65
  7574  01A776  6E0C               	movwf	(btemp+11)^0,c
  7575                           
  7576                           ;stkvar	_voltage @ sp[(0)+-4]
  7577  01A778  0EFC               	movlw	-4
  7578  01A77A  0060  F027  FFE3   	movff	btemp+8,plusw1
  7579  01A780  0EFD               	movlw	-3
  7580  01A782  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7581  01A788  0EFE               	movlw	-2
  7582  01A78A  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7583  01A790  0EFF               	movlw	-1
  7584  01A792  0060  F033  FFE3   	movff	btemp+11,plusw1
  7585  01A798                     l11590:
  7586                           
  7587                           ;daq.c: 291:  return(uint16_t) (voltage / 0.002442);
  7588  01A798  0EF6               	movlw	246
  7589  01A79A  6EE6               	movwf	postinc1,c
  7590  01A79C  0E09               	movlw	9
  7591  01A79E  6EE6               	movwf	postinc1,c
  7592  01A7A0  0E20               	movlw	32
  7593  01A7A2  6EE6               	movwf	postinc1,c
  7594  01A7A4  0E3B               	movlw	59
  7595  01A7A6  6EE6               	movwf	postinc1,c
  7596                           
  7597                           ;stkvar	_voltage @ sp[(-4)+-4]
  7598  01A7A8  0EF8               	movlw	-8
  7599  01A7AA  006F FF8F FFE6     	movff	plusw1,postinc1
  7600  01A7B0  006F FF8F FFE6     	movff	plusw1,postinc1
  7601  01A7B6  006F FF8F FFE6     	movff	plusw1,postinc1
  7602  01A7BC  006F FF8F FFE6     	movff	plusw1,postinc1
  7603  01A7C2  ECE0  F0A7         	call	___fldiv	;wreg free
  7604  01A7C6  0060  F007  FFE6   	movff	btemp,postinc1
  7605  01A7CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7606  01A7D2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7607  01A7D8  0060  F013  FFE6   	movff	btemp+3,postinc1
  7608  01A7DE  EC73  F0CC         	call	___fltol	;wreg free
  7609                           
  7610                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  7611  01A7E2  52E5               	movf	postdec1,f,c
  7612  01A7E4  52E5               	movf	postdec1,f,c
  7613  01A7E6  52E5               	movf	postdec1,f,c
  7614  01A7E8  52E5               	movf	postdec1,f,c
  7615  01A7EA  0012               	return		;funcret
  7616  01A7EC                     __end_of_convert_dac_raw:
  7617                           	opt callstack 0
  7618                           
  7619 ;; *************** function _set_dac *****************
  7620 ;; Defined at:
  7621 ;;		line 255 in file "daq.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;		None
  7624 ;; Auto vars:     Size  Location     Type
  7625 ;;		None
  7626 ;; Return value:  Size  Location     Type
  7627 ;;                  1  [STACK] void 
  7628 ;; Registers used:
  7629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  7630 ;; Tracked objects:
  7631 ;;		On entry : 0/0
  7632 ;;		On exit  : 0/0
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7639 ;;Total ram usage:        0 bytes
  7640 ;; Hardware stack levels used:    1
  7641 ;; Hardware stack levels required when called:   16
  7642 ;; This function calls:
  7643 ;;		_SPI1_Exchange8bit
  7644 ;;		_dac_spi_control
  7645 ;; This function is called by:
  7646 ;;		_main
  7647 ;; This function uses a reentrant model
  7648 ;;
  7649                           
  7650                           	psect	text9
  7651  01B45C                     __ptext9:
  7652                           	opt callstack 0
  7653  01B45C                     _set_dac:
  7654                           	opt callstack 14
  7655                           
  7656                           ;daq.c: 257:  while (!SPI1STATUSbits.TXBE);
  7657                           
  7658                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7659                           ;incstack = 0
  7660  01B45C  013D               	movlb	61	; () banked
  7661  01B45E  AB17               	btfss	23,5,b	;volatile
  7662  01B460  D7FD               	goto	_set_dac
  7663                           
  7664                           ; BSR set to: 61
  7665                           
  7666                           ;daq.c: 258:  do { LATCbits.LATC2 = 1; } while(0);
  7667  01B462  84BC               	bsf	188,2,c	;volatile
  7668                           
  7669                           ; BSR set to: 61
  7670                           
  7671                           ;daq.c: 259:  do { LATCbits.LATC0 = 1; } while(0);
  7672  01B464  80BC               	bsf	188,0,c	;volatile
  7673                           
  7674                           ; BSR set to: 61
  7675                           ;daq.c: 260:  dac_spi_control(1);
  7676  01B466  0E01               	movlw	1
  7677  01B468  6EE6               	movwf	postinc1,c
  7678  01B46A  EC92  F0DF         	call	_dac_spi_control	;wreg free
  7679                           
  7680                           ;daq.c: 261:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  7681  01B46E  C220  F224         	movff	_R+32,_R+36	;volatile
  7682                           
  7683                           ;daq.c: 262:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  7684  01B472  EE20  F220         	lfsr	2,_R+32	;volatile
  7685  01B476  006F FF78  F00B    	movff	postinc2,btemp+10
  7686  01B47C  006F FF74  F00C    	movff	postdec2,btemp+11
  7687  01B482  0060  F030  F00B   	movff	btemp+11,btemp+10
  7688  01B488  6A0C               	clrf	(btemp+11)^0,c
  7689  01B48A  0E0F               	movlw	15
  7690  01B48C  160B               	andwf	(btemp+10)^0,f,c
  7691  01B48E  0102               	movlb	2	; () banked
  7692  01B490  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  7693  01B492  180B               	xorwf	(btemp+10)^0,w,c
  7694  01B494  0BF0               	andlw	-16
  7695  01B496  180B               	xorwf	(btemp+10)^0,w,c
  7696  01B498  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  7697                           
  7698                           ; BSR set to: 2
  7699                           ;daq.c: 263:  R.max5322_cmd.map.cont = 0b0100;
  7700  01B49A  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  7701  01B49C  0B0F               	andlw	-241
  7702  01B49E  0940               	iorlw	64
  7703  01B4A0  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  7704                           
  7705                           ; BSR set to: 2
  7706  01B4A2  90BF               	bcf	191,0,c	;volatile
  7707                           
  7708                           ; BSR set to: 2
  7709                           ;daq.c: 265:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7710  01B4A4  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  7711  01B4A6  6EE6               	movwf	postinc1,c
  7712  01B4A8  EC41  F0E9         	call	_SPI1_Exchange8bit	;wreg free
  7713                           
  7714                           ; BSR set to: 57
  7715                           ;daq.c: 266:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7716  01B4AC  0102               	movlb	2	; () banked
  7717  01B4AE  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  7718  01B4B0  6EE6               	movwf	postinc1,c
  7719  01B4B2  EC41  F0E9         	call	_SPI1_Exchange8bit	;wreg free
  7720                           
  7721                           ; BSR set to: 57
  7722  01B4B6  80BF               	bsf	191,0,c	;volatile
  7723                           
  7724                           ; BSR set to: 57
  7725                           ;daq.c: 268:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  7726  01B4B8  C222  F224         	movff	_R+34,_R+36	;volatile
  7727                           
  7728                           ; BSR set to: 57
  7729                           ;daq.c: 269:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  7730  01B4BC  EE20  F222         	lfsr	2,_R+34	;volatile
  7731  01B4C0  006F FF78  F00B    	movff	postinc2,btemp+10
  7732  01B4C6  006F FF74  F00C    	movff	postdec2,btemp+11
  7733  01B4CC  0060  F030  F00B   	movff	btemp+11,btemp+10
  7734  01B4D2  6A0C               	clrf	(btemp+11)^0,c
  7735  01B4D4  0E0F               	movlw	15
  7736  01B4D6  160B               	andwf	(btemp+10)^0,f,c
  7737  01B4D8  0102               	movlb	2	; () banked
  7738  01B4DA  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  7739  01B4DC  180B               	xorwf	(btemp+10)^0,w,c
  7740  01B4DE  0BF0               	andlw	-16
  7741  01B4E0  180B               	xorwf	(btemp+10)^0,w,c
  7742  01B4E2  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  7743                           
  7744                           ; BSR set to: 2
  7745                           ;daq.c: 270:  R.max5322_cmd.map.cont = 0b0101;
  7746  01B4E4  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  7747  01B4E6  0B0F               	andlw	-241
  7748  01B4E8  0950               	iorlw	80
  7749  01B4EA  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  7750                           
  7751                           ; BSR set to: 2
  7752  01B4EC  90BF               	bcf	191,0,c	;volatile
  7753                           
  7754                           ; BSR set to: 2
  7755                           ;daq.c: 272:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7756  01B4EE  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  7757  01B4F0  6EE6               	movwf	postinc1,c
  7758  01B4F2  EC41  F0E9         	call	_SPI1_Exchange8bit	;wreg free
  7759                           
  7760                           ; BSR set to: 57
  7761                           ;daq.c: 273:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7762  01B4F6  0102               	movlb	2	; () banked
  7763  01B4F8  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  7764  01B4FA  6EE6               	movwf	postinc1,c
  7765  01B4FC  EC41  F0E9         	call	_SPI1_Exchange8bit	;wreg free
  7766  01B500                     l2009:
  7767  01B500  013D               	movlb	61	; () banked
  7768  01B502  AB17               	btfss	23,5,b	;volatile
  7769  01B504  D7FD               	goto	l2009
  7770                           
  7771                           ; BSR set to: 61
  7772                           
  7773                           ;daq.c: 275:  do { LATFbits.LATF0 = 1; } while(0);
  7774  01B506  80BF               	bsf	191,0,c	;volatile
  7775                           
  7776                           ; BSR set to: 61
  7777                           ;daq.c: 276:  dac_spi_control(0);
  7778  01B508  0E00               	movlw	0
  7779  01B50A  6EE6               	movwf	postinc1,c
  7780  01B50C  EC92  F0DF         	call	_dac_spi_control	;wreg free
  7781                           
  7782                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  7783  01B510  0012               	return		;funcret
  7784  01B512                     __end_of_set_dac:
  7785                           	opt callstack 0
  7786                           
  7787 ;; *************** function _dac_spi_control *****************
  7788 ;; Defined at:
  7789 ;;		line 207 in file "daq.c"
  7790 ;; Parameters:    Size  Location     Type
  7791 ;;  set             1  [STACK] _Bool 
  7792 ;; Auto vars:     Size  Location     Type
  7793 ;;		None
  7794 ;; Return value:  Size  Location     Type
  7795 ;;                  1  [STACK] void 
  7796 ;; Registers used:
  7797 ;;		wreg, fsr1l, fsr1h, status,2
  7798 ;; Tracked objects:
  7799 ;;		On entry : 3F/3D
  7800 ;;		On exit  : 0/0
  7801 ;;		Unchanged: 0/0
  7802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7807 ;;Total ram usage:        0 bytes
  7808 ;; Hardware stack levels used:    1
  7809 ;; Hardware stack levels required when called:   15
  7810 ;; This function calls:
  7811 ;;		Nothing
  7812 ;; This function is called by:
  7813 ;;		_set_dac
  7814 ;; This function uses a reentrant model
  7815 ;;
  7816                           
  7817                           	psect	text10
  7818  01BF24                     __ptext10:
  7819                           	opt callstack 0
  7820  01BF24                     _dac_spi_control:
  7821                           	opt callstack 14
  7822                           
  7823                           ;daq.c: 207: void dac_spi_control(_Bool set);daq.c: 208: {;daq.c: 209:  static _Bool ini
      +                          t = 0;;daq.c: 210:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 212:  if (set) {
  7824                           ;stkvar	_set @ sp[(0)+-1]
  7825                           
  7826                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7827                           ;incstack = 0
  7828  01BF24  0EFF               	movlw	-1
  7829  01BF26  50E3               	movf	plusw1,w,c
  7830  01BF28  B4D8               	btfsc	status,2,c
  7831  01BF2A  D022               	goto	l11578
  7832                           
  7833                           ;daq.c: 213:   SPI1CON0bits.EN = 0;
  7834  01BF2C  013D               	movlb	61	; () banked
  7835  01BF2E  9F14               	bcf	20,7,b	;volatile
  7836                           
  7837                           ; BSR set to: 61
  7838                           ;daq.c: 214:   if (!init) {
  7839  01BF30  5043               	movf	dac_spi_control@init^0,w,c
  7840  01BF32  A4D8               	btfss	status,2,c
  7841  01BF34  D011               	goto	l11566
  7842                           
  7843                           ; BSR set to: 61
  7844                           ;daq.c: 215:    init = 1;
  7845  01BF36  0E01               	movlw	1
  7846  01BF38  6E43               	movwf	dac_spi_control@init^0,c
  7847                           
  7848                           ; BSR set to: 61
  7849                           ;daq.c: 216:    S0 = SPI1CON0;
  7850  01BF3A  006F F450  F042    	movff	15636,dac_spi_control@S0	;volatile
  7851                           
  7852                           ; BSR set to: 61
  7853                           ;daq.c: 217:    S1 = SPI1CON1;
  7854  01BF40  006F F454  F0CE    	movff	15637,dac_spi_control@S1	;volatile
  7855                           
  7856                           ; BSR set to: 61
  7857                           ;daq.c: 218:    S2 = SPI1CON2;
  7858  01BF46  006F F458  F0CD    	movff	15638,dac_spi_control@S2	;volatile
  7859                           
  7860                           ; BSR set to: 61
  7861                           ;daq.c: 219:    SC = SPI1CLK;
  7862  01BF4C  006F F470  F0CC    	movff	15644,dac_spi_control@SC	;volatile
  7863                           
  7864                           ; BSR set to: 61
  7865                           ;daq.c: 220:    SB = SPI1BAUD;
  7866  01BF52  006F F464  F0CB    	movff	15641,dac_spi_control@SB	;volatile
  7867  01BF58                     l11566:
  7868                           
  7869                           ; BSR set to: 61
  7870                           ;daq.c: 226:   SPI1CON1 = 0x00;
  7871  01BF58  6B15               	clrf	21,b	;volatile
  7872                           
  7873                           ; BSR set to: 61
  7874                           ;daq.c: 227:   SPI1CON1bits.CKE = 1;
  7875  01BF5A  8D15               	bsf	21,6,b	;volatile
  7876                           
  7877                           ; BSR set to: 61
  7878                           ;daq.c: 228:   SPI1CON1bits.CKP = 0;
  7879  01BF5C  9B15               	bcf	21,5,b	;volatile
  7880                           
  7881                           ; BSR set to: 61
  7882                           ;daq.c: 229:   SPI1CON1bits.SMP = 0;
  7883  01BF5E  9F15               	bcf	21,7,b	;volatile
  7884                           
  7885                           ;daq.c: 231:   SPI1CON2 = 0x03;
  7886  01BF60  0E03               	movlw	3
  7887  01BF62  6F16               	movwf	22,b	;volatile
  7888                           
  7889                           ;daq.c: 233:   SPI1BAUD = 0x0f;
  7890  01BF64  0E0F               	movlw	15
  7891  01BF66  6F19               	movwf	25,b	;volatile
  7892                           
  7893                           ; BSR set to: 61
  7894                           ;daq.c: 235:   SPI1CLK = 0x00;
  7895  01BF68  6B1C               	clrf	28,b	;volatile
  7896                           
  7897                           ;daq.c: 237:   SPI1CON0 = 0x83;
  7898  01BF6A  0E83               	movlw	131
  7899  01BF6C  6F14               	movwf	20,b	;volatile
  7900  01BF6E  D014               	goto	L3
  7901  01BF70                     l11578:
  7902                           
  7903                           ;daq.c: 240:   if (init) {
  7904  01BF70  5043               	movf	dac_spi_control@init^0,w,c
  7905  01BF72  B4D8               	btfsc	status,2,c
  7906  01BF74  D012               	goto	l1993
  7907                           
  7908                           ;daq.c: 244:    SPI1CON0bits.EN = 0;
  7909  01BF76  013D               	movlb	61	; () banked
  7910  01BF78  9F14               	bcf	20,7,b	;volatile
  7911                           
  7912                           ;daq.c: 245:    SPI1CON1 = S1;
  7913  01BF7A  0060  F33B  FD15   	movff	dac_spi_control@S1,15637	;volatile
  7914                           
  7915                           ;daq.c: 246:    SPI1CON2 = S2;
  7916  01BF80  0060  F337  FD16   	movff	dac_spi_control@S2,15638	;volatile
  7917                           
  7918                           ;daq.c: 247:    SPI1CLK = SC;
  7919  01BF86  0060  F333  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  7920                           
  7921                           ;daq.c: 248:    SPI1BAUD = SB;
  7922  01BF8C  0060  F32F  FD19   	movff	dac_spi_control@SB,15641	;volatile
  7923                           
  7924                           ;daq.c: 249:    SPI1CON0 = S0;
  7925  01BF92  0060  F10B  FD14   	movff	dac_spi_control@S0,15636	;volatile
  7926  01BF98                     L3:
  7927                           
  7928                           ;daq.c: 250:    SPI1CON0bits.EN = 1;
  7929  01BF98  8F14               	bsf	20,7,b	;volatile
  7930  01BF9A                     l1993:
  7931                           
  7932                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  7933  01BF9A  52E5               	movf	postdec1,f,c
  7934  01BF9C  0012               	return		;funcret
  7935  01BF9E                     __end_of_dac_spi_control:
  7936                           	opt callstack 0
  7937                           
  7938 ;; *************** function _read_cal_data *****************
  7939 ;; Defined at:
  7940 ;;		line 368 in file "daq.c"
  7941 ;; Parameters:    Size  Location     Type
  7942 ;;		None
  7943 ;; Auto vars:     Size  Location     Type
  7944 ;;  x               2  [STACK] unsigned short 
  7945 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  7946 ;;		 -> r_cal(171), 
  7947 ;;  y               2  [STACK] unsigned short 
  7948 ;;  crcVal_save     1  [STACK] unsigned char 
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  1  [STACK] _Bool 
  7951 ;; Registers used:
  7952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
  7953 ;; Tracked objects:
  7954 ;;		On entry : 0/39
  7955 ;;		On exit  : 0/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7962 ;;Total ram usage:        0 bytes
  7963 ;; Hardware stack levels used:    1
  7964 ;; Hardware stack levels required when called:   17
  7965 ;; This function calls:
  7966 ;;		_CRC_8BitDataWrite
  7967 ;;		_CRC_CalculatedResultGet
  7968 ;;		_CRC_Initialize
  7969 ;;		_CRC_IsBusy
  7970 ;;		_CRC_Start
  7971 ;;		_DATAEE_ReadByte
  7972 ;; This function is called by:
  7973 ;;		_main
  7974 ;; This function uses a reentrant model
  7975 ;;
  7976                           
  7977                           	psect	text11
  7978  018F52                     __ptext11:
  7979                           	opt callstack 0
  7980  018F52                     _read_cal_data:
  7981                           	opt callstack 0
  7982                           
  7983                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7984  018F52  0E07               	movlw	7
  7985  018F54  26E1               	addwf	fsr1l,f,c
  7986  018F56  0E00               	movlw	0
  7987  018F58  22E2               	addwfc	fsr1h,f,c
  7988                           
  7989                           ;daq.c: 370:  uint16_t x = 0, y;
  7990                           ;stkvar	_x @ sp[(-7)+0]
  7991                           
  7992                           ;incstack = 0
  7993  018F5A  0EF9               	movlw	-7
  7994  018F5C  6AE3               	clrf	plusw1,c
  7995  018F5E  0EFA               	movlw	-6
  7996  018F60  6AE3               	clrf	plusw1,c
  7997                           
  7998                           ;daq.c: 371:  uint8_t *r_cal_ptr, crcVal_save;;daq.c: 373:  y = sizeof(r_cal);
  7999  018F62  0EAB               	movlw	171
  8000  018F64  6E0B               	movwf	(btemp+10)^0,c
  8001  018F66  0E00               	movlw	0
  8002  018F68  6E0C               	movwf	(btemp+11)^0,c
  8003                           
  8004                           ;stkvar	_y @ sp[(-7)+4]
  8005  018F6A  0EFD               	movlw	-3
  8006  018F6C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8007  018F72  0EFE               	movlw	-2
  8008  018F74  0060  F033  FFE3   	movff	btemp+11,plusw1
  8009                           
  8010                           ;daq.c: 374:  r_cal_ptr = (uint8_t*) & r_cal;
  8011                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8012  018F7A  0E04               	movlw	high _r_cal
  8013  018F7C  6E01               	movwf	btemp^0,c
  8014  018F7E  0EFC               	movlw	-4
  8015  018F80  0060  F007  FFE3   	movff	btemp,plusw1
  8016  018F86  0E00               	movlw	low _r_cal
  8017  018F88  6E01               	movwf	btemp^0,c
  8018  018F8A  0EFB               	movlw	-5
  8019  018F8C  0060  F007  FFE3   	movff	btemp,plusw1
  8020                           
  8021                           ;daq.c: 376:  CRC_Initialize();
  8022  018F92  EC00  F0DE         	call	_CRC_Initialize	;wreg free
  8023                           
  8024                           ; BSR set to: 0
  8025                           ;daq.c: 379:  CRC_Start();
  8026  018F96  EC8A  F0EA         	call	_CRC_Start	;wreg free
  8027  018F9A                     l12012:
  8028                           
  8029                           ;daq.c: 382:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  8030                           ;stkvar	_x @ sp[(-7)+0]
  8031  018F9A  0EF9               	movlw	-7
  8032  018F9C  006F FF8F FFE6     	movff	plusw1,postinc1
  8033  018FA2  006F FF8F FFE6     	movff	plusw1,postinc1
  8034  018FA8  EC6D  F0E6         	call	_DATAEE_ReadByte	;wreg free
  8035                           
  8036                           ;stkvar	_x @ sp[(-7)+0]
  8037  018FAC  0EF9               	movlw	-7
  8038  018FAE  006F FF8C  F00B    	movff	plusw1,btemp+10
  8039  018FB4  0EFA               	movlw	-6
  8040  018FB6  006F FF8C  F00C    	movff	plusw1,btemp+11
  8041                           
  8042                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8043  018FBC  0EFB               	movlw	-5
  8044  018FBE  006F FF8C  F009    	movff	plusw1,btemp+8
  8045  018FC4  0EFC               	movlw	-4
  8046  018FC6  006F FF8C  F00A    	movff	plusw1,btemp+9
  8047  018FCC  500B               	movf	(btemp+10)^0,w,c
  8048  018FCE  2409               	addwf	(btemp+8)^0,w,c
  8049  018FD0  6ED9               	movwf	fsr2l,c
  8050  018FD2  500C               	movf	(btemp+11)^0,w,c
  8051  018FD4  200A               	addwfc	(btemp+9)^0,w,c
  8052  018FD6  6EDA               	movwf	fsr2h,c
  8053  018FD8  0060  F007  FFDF   	movff	btemp,indf2
  8054                           
  8055                           ;daq.c: 383:  } while (++x < y);
  8056                           ;stkvar	_y @ sp[(-7)+4]
  8057  018FDE  0EFD               	movlw	-3
  8058  018FE0  006F FF8C  F00B    	movff	plusw1,btemp+10
  8059  018FE6  0EFE               	movlw	-2
  8060  018FE8  006F FF8C  F00C    	movff	plusw1,btemp+11
  8061                           
  8062                           ;stkvar	_x @ sp[(-7)+0]
  8063  018FEE  0EF9               	movlw	-7
  8064  018FF0  50E3               	movf	plusw1,w,c
  8065  018FF2  0F01               	addlw	1
  8066  018FF4  6E01               	movwf	btemp^0,c
  8067  018FF6  0EF9               	movlw	-7
  8068  018FF8  0060  F007  FFE3   	movff	btemp,plusw1
  8069  018FFE  6A01               	clrf	btemp^0,c
  8070  019000  0EFA               	movlw	-6
  8071  019002  50E3               	movf	plusw1,w,c
  8072  019004  2001               	addwfc	btemp^0,w,c
  8073  019006  6E01               	movwf	btemp^0,c
  8074  019008  0EFA               	movlw	-6
  8075  01900A  0060  F007  FFE3   	movff	btemp,plusw1
  8076  019010  0EF9               	movlw	-7
  8077  019012  006F FF8C  F009    	movff	plusw1,btemp+8
  8078  019018  0EFA               	movlw	-6
  8079  01901A  006F FF8C  F00A    	movff	plusw1,btemp+9
  8080  019020  500B               	movf	(btemp+10)^0,w,c
  8081  019022  5C09               	subwf	(btemp+8)^0,w,c
  8082  019024  500C               	movf	(btemp+11)^0,w,c
  8083  019026  580A               	subwfb	(btemp+9)^0,w,c
  8084  019028  A0D8               	btfss	status,0,c
  8085  01902A  D7B7               	goto	l12012
  8086                           
  8087                           ;daq.c: 384:  crcVal_save = r_cal.crc;
  8088                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8089  01902C  0EFF               	movlw	-1
  8090  01902E  0061  F2AB  FFE3   	movff	_r_cal+170,plusw1
  8091                           
  8092                           ;daq.c: 386:  if (r_cal.checkmark == 0x1957) {
  8093  019034  0E57               	movlw	87
  8094  019036  0104               	movlb	4	; () banked
  8095  019038  19A8               	xorwf	(_r_cal+168)& (0+255),w,b
  8096  01903A  E163               	bnz	l12032
  8097  01903C  0E19               	movlw	25
  8098  01903E  19A9               	xorwf	(_r_cal+169)& (0+255),w,b
  8099  019040  A4D8               	btfss	status,2,c
  8100  019042  D05F               	goto	u11080
  8101                           
  8102                           ; BSR set to: 4
  8103                           ;daq.c: 387:   r_cal.crc = 0x42;
  8104  019044  0E42               	movlw	66
  8105  019046  6FAA               	movwf	(_r_cal+170)& (0+255),b
  8106                           
  8107                           ; BSR set to: 4
  8108                           ;daq.c: 388:   x = 0;
  8109                           ;stkvar	_x @ sp[(-7)+0]
  8110  019048  0EF9               	movlw	-7
  8111  01904A  6AE3               	clrf	plusw1,c
  8112  01904C  0EFA               	movlw	-6
  8113  01904E  6AE3               	clrf	plusw1,c
  8114  019050                     l12024:
  8115                           
  8116                           ;daq.c: 391:    CRC_8BitDataWrite(r_cal_ptr[x]);
  8117                           ;stkvar	_x @ sp[(-7)+0]
  8118  019050  0EF9               	movlw	-7
  8119  019052  006F FF8C  F00B    	movff	plusw1,btemp+10
  8120  019058  0EFA               	movlw	-6
  8121  01905A  006F FF8C  F00C    	movff	plusw1,btemp+11
  8122                           
  8123                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8124  019060  0EFB               	movlw	-5
  8125  019062  006F FF8C  F009    	movff	plusw1,btemp+8
  8126  019068  0EFC               	movlw	-4
  8127  01906A  006F FF8C  F00A    	movff	plusw1,btemp+9
  8128  019070  500B               	movf	(btemp+10)^0,w,c
  8129  019072  2409               	addwf	(btemp+8)^0,w,c
  8130  019074  6ED9               	movwf	fsr2l,c
  8131  019076  500C               	movf	(btemp+11)^0,w,c
  8132  019078  200A               	addwfc	(btemp+9)^0,w,c
  8133  01907A  6EDA               	movwf	fsr2h,c
  8134  01907C  50DF               	movf	indf2,w,c
  8135  01907E  6EE6               	movwf	postinc1,c
  8136  019080  ECF6  F0E9         	call	_CRC_8BitDataWrite	;wreg free
  8137  019084                     l12026:
  8138  019084  EC18  F0EA         	call	_CRC_IsBusy	;wreg free
  8139  019088  5001               	movf	btemp^0,w,c
  8140  01908A  A4D8               	btfss	status,2,c
  8141  01908C  D7FB               	goto	l12026
  8142                           
  8143                           ;daq.c: 393:   } while (++x < y);
  8144                           ;stkvar	_y @ sp[(-7)+4]
  8145  01908E  0EFD               	movlw	-3
  8146  019090  006F FF8C  F00B    	movff	plusw1,btemp+10
  8147  019096  0EFE               	movlw	-2
  8148  019098  006F FF8C  F00C    	movff	plusw1,btemp+11
  8149                           
  8150                           ;stkvar	_x @ sp[(-7)+0]
  8151  01909E  0EF9               	movlw	-7
  8152  0190A0  50E3               	movf	plusw1,w,c
  8153  0190A2  0F01               	addlw	1
  8154  0190A4  6E01               	movwf	btemp^0,c
  8155  0190A6  0EF9               	movlw	-7
  8156  0190A8  0060  F007  FFE3   	movff	btemp,plusw1
  8157  0190AE  6A01               	clrf	btemp^0,c
  8158  0190B0  0EFA               	movlw	-6
  8159  0190B2  50E3               	movf	plusw1,w,c
  8160  0190B4  2001               	addwfc	btemp^0,w,c
  8161  0190B6  6E01               	movwf	btemp^0,c
  8162  0190B8  0EFA               	movlw	-6
  8163  0190BA  0060  F007  FFE3   	movff	btemp,plusw1
  8164  0190C0  0EF9               	movlw	-7
  8165  0190C2  006F FF8C  F009    	movff	plusw1,btemp+8
  8166  0190C8  0EFA               	movlw	-6
  8167  0190CA  006F FF8C  F00A    	movff	plusw1,btemp+9
  8168  0190D0  500B               	movf	(btemp+10)^0,w,c
  8169  0190D2  5C09               	subwf	(btemp+8)^0,w,c
  8170  0190D4  500C               	movf	(btemp+11)^0,w,c
  8171  0190D6  580A               	subwfb	(btemp+9)^0,w,c
  8172  0190D8  A0D8               	btfss	status,0,c
  8173  0190DA  D7BA               	goto	l12024
  8174                           
  8175                           ;daq.c: 394:   if (CRC_CalculatedResultGet(0, 0x00) != crcVal_save)
  8176  0190DC  0E00               	movlw	0
  8177  0190DE  6EE6               	movwf	postinc1,c
  8178  0190E0  0E00               	movlw	0
  8179  0190E2  6EE6               	movwf	postinc1,c
  8180  0190E4  0E00               	movlw	0
  8181  0190E6  6EE6               	movwf	postinc1,c
  8182  0190E8  ECBA  F0CB         	call	_CRC_CalculatedResultGet	;wreg free
  8183                           
  8184                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8185  0190EC  0EFF               	movlw	-1
  8186  0190EE  50E3               	movf	plusw1,w,c
  8187  0190F0  6E0B               	movwf	(btemp+10)^0,c
  8188  0190F2  6A0C               	clrf	(btemp+11)^0,c
  8189  0190F4  500B               	movf	(btemp+10)^0,w,c
  8190  0190F6  1801               	xorwf	btemp^0,w,c
  8191  0190F8  E104               	bnz	u11080
  8192  0190FA  500C               	movf	(btemp+11)^0,w,c
  8193  0190FC  1802               	xorwf	(btemp+1)^0,w,c
  8194  0190FE  B4D8               	btfsc	status,2,c
  8195  019100  D002               	goto	l12040
  8196  019102                     u11080:
  8197  019102                     l12032:
  8198                           
  8199                           ;daq.c: 395:    return 0;
  8200  019102  0E00               	movlw	0
  8201  019104  D005               	goto	L4
  8202  019106                     l12040:
  8203                           
  8204                           ;daq.c: 399:  r_cal.crc = crcVal_save;
  8205                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8206  019106  0EFF               	movlw	-1
  8207  019108  006F FF8C  F4AA    	movff	plusw1,_r_cal+170
  8208                           
  8209                           ;daq.c: 400:  return 1;
  8210  01910E  0E01               	movlw	1
  8211  019110                     L4:
  8212  019110  6E01               	movwf	btemp^0,c
  8213                           
  8214                           ; _read_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8215  019112  0EF9               	movlw	249
  8216  019114  26E1               	addwf	fsr1l,f,c
  8217  019116  0EFF               	movlw	255
  8218  019118  22E2               	addwfc	fsr1h,f,c
  8219  01911A  0012               	return		;funcret
  8220  01911C                     __end_of_read_cal_data:
  8221                           	opt callstack 0
  8222                           
  8223 ;; *************** function _DATAEE_ReadByte *****************
  8224 ;; Defined at:
  8225 ;;		line 194 in file "mcc_generated_files/memory.c"
  8226 ;; Parameters:    Size  Location     Type
  8227 ;;  bAdd            2  [STACK] unsigned short 
  8228 ;; Auto vars:     Size  Location     Type
  8229 ;;		None
  8230 ;; Return value:  Size  Location     Type
  8231 ;;                  1  [STACK] unsigned char 
  8232 ;; Registers used:
  8233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  8234 ;; Tracked objects:
  8235 ;;		On entry : 0/39
  8236 ;;		On exit  : 0/0
  8237 ;;		Unchanged: 0/0
  8238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8243 ;;Total ram usage:        0 bytes
  8244 ;; Hardware stack levels used:    1
  8245 ;; Hardware stack levels required when called:   15
  8246 ;; This function calls:
  8247 ;;		Nothing
  8248 ;; This function is called by:
  8249 ;;		_read_cal_data
  8250 ;; This function uses a reentrant model
  8251 ;;
  8252                           
  8253                           	psect	text12
  8254  01CCDA                     __ptext12:
  8255                           	opt callstack 0
  8256  01CCDA                     _DATAEE_ReadByte:
  8257                           	opt callstack 14
  8258                           
  8259                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  8260                           ;stkvar	_bAdd @ sp[(0)+-2]
  8261                           
  8262                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8263                           ;incstack = 0
  8264  01CCDA  0EFF               	movlw	255
  8265  01CCDC  24E1               	addwf	fsr1l,w,c
  8266  01CCDE  6ED9               	movwf	fsr2l,c
  8267  01CCE0  0EFF               	movlw	255
  8268  01CCE2  20E2               	addwfc	fsr1h,w,c
  8269  01CCE4  6EDA               	movwf	fsr2h,c
  8270  01CCE6  50DF               	movf	indf2,w,c
  8271  01CCE8  0B03               	andlw	3
  8272  01CCEA  0139               	movlb	57	; () banked
  8273  01CCEC  6FE1               	movwf	225,b	;volatile
  8274                           
  8275                           ; BSR set to: 57
  8276                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  8277                           ;stkvar	_bAdd @ sp[(0)+-2]
  8278  01CCEE  0EFE               	movlw	-2
  8279  01CCF0  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  8280                           
  8281                           ; BSR set to: 57
  8282                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  8283  01CCF6  0E3F               	movlw	-193
  8284  01CCF8  17E5               	andwf	229,f,b	;volsfr
  8285                           
  8286                           ; BSR set to: 57
  8287                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  8288  01CCFA  81E5               	bsf	229,0,b	;volsfr
  8289                           
  8290                           ; BSR set to: 57
  8291                           ;mcc_generated_files/memory.c: 200:     __nop();
  8292  01CCFC  F000               	nop	
  8293                           
  8294                           ;mcc_generated_files/memory.c: 201:     __nop();
  8295  01CCFE  F000               	nop	
  8296                           
  8297                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  8298  01CD00  006E F78C  F001    	movff	14819,btemp	;volatile
  8299                           
  8300                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  8301  01CD06  52E5               	movf	postdec1,f,c
  8302  01CD08  52E5               	movf	postdec1,f,c
  8303  01CD0A  0012               	return		;funcret
  8304  01CD0C                     __end_of_DATAEE_ReadByte:
  8305                           	opt callstack 0
  8306                           
  8307 ;; *************** function _load_hist_data *****************
  8308 ;; Defined at:
  8309 ;;		line 224 in file "mbmc.c"
  8310 ;; Parameters:    Size  Location     Type
  8311 ;;		None
  8312 ;; Auto vars:     Size  Location     Type
  8313 ;;		None
  8314 ;; Return value:  Size  Location     Type
  8315 ;;                  1  [STACK] void 
  8316 ;; Registers used:
  8317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, btemp+11
  8318 ;; Tracked objects:
  8319 ;;		On entry : 3F/39
  8320 ;;		On exit  : 3F/39
  8321 ;;		Unchanged: 0/0
  8322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8327 ;;Total ram usage:        0 bytes
  8328 ;; Hardware stack levels used:    1
  8329 ;; Hardware stack levels required when called:   16
  8330 ;; This function calls:
  8331 ;;		_start_bsoc
  8332 ;;		_stop_bsoc
  8333 ;; This function is called by:
  8334 ;;		_main
  8335 ;; This function uses a reentrant model
  8336 ;;
  8337                           
  8338                           	psect	text13
  8339  01D34E                     __ptext13:
  8340                           	opt callstack 0
  8341  01D34E                     _load_hist_data:
  8342                           	opt callstack 14
  8343                           
  8344                           ;mbmc.c: 226:  stop_bsoc();
  8345                           
  8346                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8347                           ;incstack = 0
  8348  01D34E  EC96  F0EA         	call	_stop_bsoc	;wreg free
  8349                           
  8350                           ; BSR set to: 57
  8351                           ;mbmc.c: 227:  C.hist[0].updates++;
  8352  01D352  EE22  F1E9         	lfsr	2,_C+234	;volatile
  8353  01D356  2ADE               	incf	postinc2,f,c
  8354  01D358  0E00               	movlw	0
  8355  01D35A  22DE               	addwfc	postinc2,f,c
  8356  01D35C  22DE               	addwfc	postinc2,f,c
  8357  01D35E  22DE               	addwfc	postinc2,f,c
  8358                           
  8359                           ; BSR set to: 57
  8360                           ;mbmc.c: 228:  start_bsoc();
  8361  01D360  EC10  F0E9         	call	_start_bsoc	;wreg free
  8362                           
  8363                           ; BSR set to: 57
  8364                           ; _load_hist_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8365  01D364  0012               	return		;funcret
  8366  01D366                     __end_of_load_hist_data:
  8367                           	opt callstack 0
  8368                           
  8369 ;; *************** function _init_port_dma *****************
  8370 ;; Defined at:
  8371 ;;		line 104 in file "eadog.c"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;		None
  8374 ;; Auto vars:     Size  Location     Type
  8375 ;;		None
  8376 ;; Return value:  Size  Location     Type
  8377 ;;                  1  [STACK] void 
  8378 ;; Registers used:
  8379 ;;		wreg, status,2
  8380 ;; Tracked objects:
  8381 ;;		On entry : 0/1
  8382 ;;		On exit  : 3F/3B
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8389 ;;Total ram usage:        0 bytes
  8390 ;; Hardware stack levels used:    1
  8391 ;; Hardware stack levels required when called:   15
  8392 ;; This function calls:
  8393 ;;		Nothing
  8394 ;; This function is called by:
  8395 ;;		_main
  8396 ;; This function uses a reentrant model
  8397 ;;
  8398                           
  8399                           	psect	text14
  8400  01CD0C                     __ptext14:
  8401                           	opt callstack 0
  8402  01CD0C                     _init_port_dma:
  8403                           	opt callstack 15
  8404                           
  8405                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  8406                           
  8407                           ; BSR set to: 57
  8408                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8409                           ;incstack = 0
  8410  01CD0C  0E3F               	movlw	-193
  8411  01CD0E  013B               	movlb	59	; () banked
  8412  01CD10  17DD               	andwf	221,f,b	;volatile
  8413                           
  8414                           ; BSR set to: 59
  8415                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  8416  01CD12  9BDD               	bcf	221,5,b	;volatile
  8417                           
  8418                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  8419  01CD14  51DD               	movf	221,w,b	;volatile
  8420  01CD16  0BF9               	andlw	-7
  8421  01CD18  0902               	iorlw	2
  8422  01CD1A  6FDD               	movwf	221,b	;volatile
  8423                           
  8424                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  8425  01CD1C  0EE7               	movlw	-25
  8426  01CD1E  17DD               	andwf	221,f,b	;volatile
  8427                           
  8428                           ; BSR set to: 59
  8429                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  8430  01CD20  81DD               	bsf	221,0,b	;volatile
  8431                           
  8432                           ; BSR set to: 59
  8433                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  8434  01CD22  9DDC               	bcf	220,6,b	;volatile
  8435                           
  8436                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  8437  01CD24  0E3D               	movlw	61
  8438  01CD26  6FD1               	movwf	209,b	;volatile
  8439  01CD28  0EEA               	movlw	234
  8440  01CD2A  6FD0               	movwf	208,b	;volatile
  8441                           
  8442                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  8443  01CD2C  0EFF               	movlw	low _port_data
  8444  01CD2E  6FD9               	movwf	217,b	;volatile
  8445  01CD30  0E06               	movlw	high _port_data
  8446  01CD32  6FDA               	movwf	218,b	;volatile
  8447  01CD34  0E00               	movlw	low (_port_data shr (0+16))
  8448  01CD36  6FDB               	movwf	219,b	;volatile
  8449                           
  8450                           ; BSR set to: 59
  8451                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  8452  01CD38  9BDC               	bcf	220,5,b	;volatile
  8453                           
  8454                           ; BSR set to: 59
  8455                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8456  01CD3A  0012               	return		;funcret
  8457  01CD3C                     __end_of_init_port_dma:
  8458                           	opt callstack 0
  8459                           
  8460 ;; *************** function _init_display *****************
  8461 ;; Defined at:
  8462 ;;		line 38 in file "eadog.c"
  8463 ;; Parameters:    Size  Location     Type
  8464 ;;		None
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;		None
  8467 ;; Return value:  Size  Location     Type
  8468 ;;                  1  [STACK] void 
  8469 ;; Registers used:
  8470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8471 ;; Tracked objects:
  8472 ;;		On entry : 3F/3B
  8473 ;;		On exit  : 3F/3D
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8480 ;;Total ram usage:        0 bytes
  8481 ;; Hardware stack levels used:    1
  8482 ;; Hardware stack levels required when called:   17
  8483 ;; This function calls:
  8484 ;;		_ringBufS_init
  8485 ;;		_send_lcd_cmd
  8486 ;;		_send_lcd_cmd_long
  8487 ;;		_send_lcd_data
  8488 ;;		_wdtdelay
  8489 ;; This function is called by:
  8490 ;;		_main
  8491 ;; This function uses a reentrant model
  8492 ;;
  8493                           
  8494                           	psect	text15
  8495  01AC32                     __ptext15:
  8496                           	opt callstack 0
  8497  01AC32                     _init_display:
  8498                           	opt callstack 13
  8499                           
  8500                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  8501                           
  8502                           ; BSR set to: 59
  8503                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8504                           ;incstack = 0
  8505  01AC32  0EAB               	movlw	low _ring_buf1
  8506  01AC34  0100               	movlb	0	; () banked
  8507  01AC36  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  8508  01AC38  0E04               	movlw	high _ring_buf1
  8509  01AC3A  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  8510                           
  8511                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  8512  01AC3C  0E00               	movlw	low _ring_buf2
  8513  01AC3E  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  8514  01AC40  0E05               	movlw	high _ring_buf2
  8515  01AC42  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  8516                           
  8517                           ; BSR set to: 0
  8518                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  8519  01AC44  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  8520  01AC4A  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  8521  01AC50  EC55  F0E7         	call	_ringBufS_init	;wreg free
  8522                           
  8523                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  8524  01AC54  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  8525  01AC5A  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  8526  01AC60  EC55  F0E7         	call	_ringBufS_init	;wreg free
  8527                           
  8528                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  8529  01AC64  84BE               	bsf	190,2,c	;volatile
  8530                           
  8531                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  8532  01AC66  013D               	movlb	61	; () banked
  8533  01AC68  9F14               	bcf	20,7,b	;volatile
  8534                           
  8535                           ; BSR set to: 61
  8536                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  8537  01AC6A  0E20               	movlw	32
  8538  01AC6C  6F15               	movwf	21,b	;volatile
  8539                           
  8540                           ; BSR set to: 61
  8541                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  8542  01AC6E  0E03               	movlw	3
  8543  01AC70  6F16               	movwf	22,b	;volatile
  8544                           
  8545                           ; BSR set to: 61
  8546                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  8547  01AC72  0E04               	movlw	4
  8548  01AC74  6F19               	movwf	25,b	;volatile
  8549                           
  8550                           ; BSR set to: 61
  8551                           ;eadog.c: 55:  SPI1CLK = 0x02;
  8552  01AC76  0E02               	movlw	2
  8553  01AC78  6F1C               	movwf	28,b	;volatile
  8554                           
  8555                           ; BSR set to: 61
  8556                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  8557  01AC7A  0E83               	movlw	131
  8558  01AC7C  6F14               	movwf	20,b	;volatile
  8559                           
  8560                           ; BSR set to: 61
  8561                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  8562  01AC7E  8F14               	bsf	20,7,b	;volatile
  8563                           
  8564                           ; BSR set to: 61
  8565                           ;eadog.c: 60:  wdtdelay(350000);
  8566  01AC80  0E30               	movlw	48
  8567  01AC82  6EE6               	movwf	postinc1,c
  8568  01AC84  0E57               	movlw	87
  8569  01AC86  6EE6               	movwf	postinc1,c
  8570  01AC88  0E05               	movlw	5
  8571  01AC8A  6EE6               	movwf	postinc1,c
  8572  01AC8C  0E00               	movlw	0
  8573  01AC8E  6EE6               	movwf	postinc1,c
  8574  01AC90  EC39  F0E2         	call	_wdtdelay	;wreg free
  8575                           
  8576                           ; BSR set to: 0
  8577                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  8578  01AC94  0E46               	movlw	70
  8579  01AC96  6EE6               	movwf	postinc1,c
  8580  01AC98  EC9C  F0E4         	call	_send_lcd_cmd_long	;wreg free
  8581                           
  8582                           ; BSR set to: 0
  8583                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  8584  01AC9C  0E41               	movlw	65
  8585  01AC9E  6EE6               	movwf	postinc1,c
  8586  01ACA0  ECBC  F0E4         	call	_send_lcd_cmd	;wreg free
  8587                           
  8588                           ; BSR set to: 0
  8589                           ;eadog.c: 63:  wdtdelay(80);
  8590  01ACA4  0E50               	movlw	80
  8591  01ACA6  6EE6               	movwf	postinc1,c
  8592  01ACA8  0E00               	movlw	0
  8593  01ACAA  6EE6               	movwf	postinc1,c
  8594  01ACAC  0E00               	movlw	0
  8595  01ACAE  6EE6               	movwf	postinc1,c
  8596  01ACB0  0E00               	movlw	0
  8597  01ACB2  6EE6               	movwf	postinc1,c
  8598  01ACB4  EC39  F0E2         	call	_wdtdelay	;wreg free
  8599                           
  8600                           ; BSR set to: 0
  8601                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  8602  01ACB8  0E53               	movlw	83
  8603  01ACBA  6EE6               	movwf	postinc1,c
  8604  01ACBC  ECBC  F0E4         	call	_send_lcd_cmd	;wreg free
  8605                           
  8606                           ; BSR set to: 0
  8607                           ;eadog.c: 65:  send_lcd_data(2);
  8608  01ACC0  0E02               	movlw	2
  8609  01ACC2  6EE6               	movwf	postinc1,c
  8610  01ACC4  EC82  F0E8         	call	_send_lcd_data	;wreg free
  8611                           
  8612                           ; BSR set to: 0
  8613                           ;eadog.c: 66:  wdtdelay(80);
  8614  01ACC8  0E50               	movlw	80
  8615  01ACCA  6EE6               	movwf	postinc1,c
  8616  01ACCC  0E00               	movlw	0
  8617  01ACCE  6EE6               	movwf	postinc1,c
  8618  01ACD0  0E00               	movlw	0
  8619  01ACD2  6EE6               	movwf	postinc1,c
  8620  01ACD4  0E00               	movlw	0
  8621  01ACD6  6EE6               	movwf	postinc1,c
  8622  01ACD8  EC39  F0E2         	call	_wdtdelay	;wreg free
  8623                           
  8624                           ; BSR set to: 0
  8625                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  8626  01ACDC  0E51               	movlw	81
  8627  01ACDE  6EE6               	movwf	postinc1,c
  8628  01ACE0  EC9C  F0E4         	call	_send_lcd_cmd_long	;wreg free
  8629                           
  8630                           ; BSR set to: 0
  8631                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  8632  01ACE4  013D               	movlb	61	; () banked
  8633  01ACE6  9F14               	bcf	20,7,b	;volatile
  8634                           
  8635                           ; BSR set to: 61
  8636                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  8637  01ACE8  0E02               	movlw	2
  8638  01ACEA  6F16               	movwf	22,b	;volatile
  8639                           
  8640                           ; BSR set to: 61
  8641                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  8642  01ACEC  8F14               	bsf	20,7,b	;volatile
  8643                           
  8644                           ; BSR set to: 61
  8645                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  8646  01ACEE  931A               	bcf	26,1,b	;volatile
  8647                           
  8648                           ; BSR set to: 61
  8649                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  8650  01ACF0  0E3F               	movlw	-193
  8651  01ACF2  013B               	movlb	59	; () banked
  8652  01ACF4  17FD               	andwf	253,f,b	;volatile
  8653                           
  8654                           ; BSR set to: 59
  8655                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  8656  01ACF6  9BFD               	bcf	253,5,b	;volatile
  8657                           
  8658                           ; BSR set to: 59
  8659                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  8660  01ACF8  51FD               	movf	253,w,b	;volatile
  8661  01ACFA  0BF9               	andlw	-7
  8662  01ACFC  0902               	iorlw	2
  8663  01ACFE  6FFD               	movwf	253,b	;volatile
  8664                           
  8665                           ; BSR set to: 59
  8666                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  8667  01AD00  0EE7               	movlw	-25
  8668  01AD02  17FD               	andwf	253,f,b	;volatile
  8669                           
  8670                           ; BSR set to: 59
  8671                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  8672  01AD04  81FD               	bsf	253,0,b	;volatile
  8673                           
  8674                           ; BSR set to: 59
  8675                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  8676  01AD06  0EAB               	movlw	low _ring_buf1
  8677  01AD08  6FF9               	movwf	249,b	;volatile
  8678  01AD0A  0E04               	movlw	high _ring_buf1
  8679  01AD0C  6FFA               	movwf	250,b	;volatile
  8680  01AD0E  0E00               	movlw	low (_ring_buf1 shr (0+16))
  8681  01AD10  6FFB               	movwf	251,b	;volatile
  8682                           
  8683                           ; BSR set to: 59
  8684                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  8685  01AD12  9BFC               	bcf	252,5,b	;volatile
  8686                           
  8687                           ; BSR set to: 59
  8688                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  8689  01AD14  013D               	movlb	61	; () banked
  8690  01AD16  831A               	bsf	26,1,b	;volatile
  8691                           
  8692                           ; BSR set to: 61
  8693                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  8694  01AD18  94BE               	bcf	190,2,c	;volatile
  8695                           
  8696                           ; BSR set to: 61
  8697                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8698  01AD1A  0012               	return		;funcret
  8699  01AD1C                     __end_of_init_display:
  8700                           	opt callstack 0
  8701                           
  8702 ;; *************** function _send_lcd_data *****************
  8703 ;; Defined at:
  8704 ;;		line 123 in file "eadog.c"
  8705 ;; Parameters:    Size  Location     Type
  8706 ;;  data            1  [STACK] const unsigned char 
  8707 ;; Auto vars:     Size  Location     Type
  8708 ;;		None
  8709 ;; Return value:  Size  Location     Type
  8710 ;;                  1  [STACK] void 
  8711 ;; Registers used:
  8712 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8713 ;; Tracked objects:
  8714 ;;		On entry : 3F/0
  8715 ;;		On exit  : 3F/0
  8716 ;;		Unchanged: 0/0
  8717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8722 ;;Total ram usage:        0 bytes
  8723 ;; Hardware stack levels used:    1
  8724 ;; Hardware stack levels required when called:   16
  8725 ;; This function calls:
  8726 ;;		_SPI1_Exchange8bit
  8727 ;;		_wdtdelay
  8728 ;; This function is called by:
  8729 ;;		_init_display
  8730 ;; This function uses a reentrant model
  8731 ;;
  8732                           
  8733                           	psect	text16
  8734  01D104                     __ptext16:
  8735                           	opt callstack 0
  8736  01D104                     _send_lcd_data:
  8737                           	opt callstack 13
  8738                           
  8739                           ; BSR set to: 61
  8740                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8741                           ;incstack = 0
  8742                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  8743  01D104  94BC               	bcf	188,2,c	;volatile
  8744                           
  8745                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  8746                           ;stkvar	_data @ sp[(0)+-1]
  8747  01D106  0EFF               	movlw	-1
  8748  01D108  50E3               	movf	plusw1,w,c
  8749  01D10A  6EE6               	movwf	postinc1,c
  8750  01D10C  EC41  F0E9         	call	_SPI1_Exchange8bit	;wreg free
  8751                           
  8752                           ; BSR set to: 57
  8753                           ;eadog.c: 127:  wdtdelay(8);
  8754  01D110  0E08               	movlw	8
  8755  01D112  6EE6               	movwf	postinc1,c
  8756  01D114  0E00               	movlw	0
  8757  01D116  6EE6               	movwf	postinc1,c
  8758  01D118  0E00               	movlw	0
  8759  01D11A  6EE6               	movwf	postinc1,c
  8760  01D11C  0E00               	movlw	0
  8761  01D11E  6EE6               	movwf	postinc1,c
  8762  01D120  EC39  F0E2         	call	_wdtdelay	;wreg free
  8763                           
  8764                           ; BSR set to: 0
  8765                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  8766  01D124  52E5               	movf	postdec1,f,c
  8767  01D126  0012               	return		;funcret
  8768  01D128                     __end_of_send_lcd_data:
  8769                           	opt callstack 0
  8770                           
  8771 ;; *************** function _send_lcd_cmd_long *****************
  8772 ;; Defined at:
  8773 ;;		line 139 in file "eadog.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;  cmd             1  [STACK] const unsigned char 
  8776 ;; Auto vars:     Size  Location     Type
  8777 ;;		None
  8778 ;; Return value:  Size  Location     Type
  8779 ;;                  1  [STACK] void 
  8780 ;; Registers used:
  8781 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8782 ;; Tracked objects:
  8783 ;;		On entry : 3F/0
  8784 ;;		On exit  : 3F/0
  8785 ;;		Unchanged: 0/0
  8786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8791 ;;Total ram usage:        0 bytes
  8792 ;; Hardware stack levels used:    1
  8793 ;; Hardware stack levels required when called:   16
  8794 ;; This function calls:
  8795 ;;		_SPI1_Exchange8bit
  8796 ;;		_wdtdelay
  8797 ;; This function is called by:
  8798 ;;		_init_display
  8799 ;; This function uses a reentrant model
  8800 ;;
  8801                           
  8802                           	psect	text17
  8803  01C938                     __ptext17:
  8804                           	opt callstack 0
  8805  01C938                     _send_lcd_cmd_long:
  8806                           	opt callstack 13
  8807                           
  8808                           ; BSR set to: 0
  8809                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8810                           ;incstack = 0
  8811                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  8812  01C938  94BC               	bcf	188,2,c	;volatile
  8813                           
  8814                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  8815  01C93A  0EFE               	movlw	254
  8816  01C93C  6EE6               	movwf	postinc1,c
  8817  01C93E  EC41  F0E9         	call	_SPI1_Exchange8bit	;wreg free
  8818                           
  8819                           ; BSR set to: 57
  8820                           ;eadog.c: 143:  wdtdelay(8);
  8821  01C942  0E08               	movlw	8
  8822  01C944  6EE6               	movwf	postinc1,c
  8823  01C946  0E00               	movlw	0
  8824  01C948  6EE6               	movwf	postinc1,c
  8825  01C94A  0E00               	movlw	0
  8826  01C94C  6EE6               	movwf	postinc1,c
  8827  01C94E  0E00               	movlw	0
  8828  01C950  6EE6               	movwf	postinc1,c
  8829  01C952  EC39  F0E2         	call	_wdtdelay	;wreg free
  8830                           
  8831                           ; BSR set to: 0
  8832                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  8833                           ;stkvar	_cmd @ sp[(0)+-1]
  8834  01C956  0EFF               	movlw	-1
  8835  01C958  50E3               	movf	plusw1,w,c
  8836  01C95A  6EE6               	movwf	postinc1,c
  8837  01C95C  EC41  F0E9         	call	_SPI1_Exchange8bit	;wreg free
  8838                           
  8839                           ;eadog.c: 145:  wdtdelay(800);
  8840  01C960  0E20               	movlw	32
  8841  01C962  6EE6               	movwf	postinc1,c
  8842  01C964  0E03               	movlw	3
  8843  01C966  6EE6               	movwf	postinc1,c
  8844  01C968  0E00               	movlw	0
  8845  01C96A  6EE6               	movwf	postinc1,c
  8846  01C96C  0E00               	movlw	0
  8847  01C96E  6EE6               	movwf	postinc1,c
  8848  01C970  EC39  F0E2         	call	_wdtdelay	;wreg free
  8849                           
  8850                           ; BSR set to: 0
  8851                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8852  01C974  52E5               	movf	postdec1,f,c
  8853  01C976  0012               	return		;funcret
  8854  01C978                     __end_of_send_lcd_cmd_long:
  8855                           	opt callstack 0
  8856                           
  8857 ;; *************** function _send_lcd_cmd *****************
  8858 ;; Defined at:
  8859 ;;		line 130 in file "eadog.c"
  8860 ;; Parameters:    Size  Location     Type
  8861 ;;  cmd             1  [STACK] const unsigned char 
  8862 ;; Auto vars:     Size  Location     Type
  8863 ;;		None
  8864 ;; Return value:  Size  Location     Type
  8865 ;;                  1  [STACK] void 
  8866 ;; Registers used:
  8867 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8868 ;; Tracked objects:
  8869 ;;		On entry : 3F/0
  8870 ;;		On exit  : 3F/0
  8871 ;;		Unchanged: 0/0
  8872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8877 ;;Total ram usage:        0 bytes
  8878 ;; Hardware stack levels used:    1
  8879 ;; Hardware stack levels required when called:   16
  8880 ;; This function calls:
  8881 ;;		_SPI1_Exchange8bit
  8882 ;;		_wdtdelay
  8883 ;; This function is called by:
  8884 ;;		_init_display
  8885 ;; This function uses a reentrant model
  8886 ;;
  8887                           
  8888                           	psect	text18
  8889  01C978                     __ptext18:
  8890                           	opt callstack 0
  8891  01C978                     _send_lcd_cmd:
  8892                           	opt callstack 13
  8893                           
  8894                           ; BSR set to: 0
  8895                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8896                           ;incstack = 0
  8897                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  8898  01C978  94BC               	bcf	188,2,c	;volatile
  8899                           
  8900                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  8901  01C97A  0EFE               	movlw	254
  8902  01C97C  6EE6               	movwf	postinc1,c
  8903  01C97E  EC41  F0E9         	call	_SPI1_Exchange8bit	;wreg free
  8904                           
  8905                           ; BSR set to: 57
  8906                           ;eadog.c: 134:  wdtdelay(8);
  8907  01C982  0E08               	movlw	8
  8908  01C984  6EE6               	movwf	postinc1,c
  8909  01C986  0E00               	movlw	0
  8910  01C988  6EE6               	movwf	postinc1,c
  8911  01C98A  0E00               	movlw	0
  8912  01C98C  6EE6               	movwf	postinc1,c
  8913  01C98E  0E00               	movlw	0
  8914  01C990  6EE6               	movwf	postinc1,c
  8915  01C992  EC39  F0E2         	call	_wdtdelay	;wreg free
  8916                           
  8917                           ; BSR set to: 0
  8918                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  8919                           ;stkvar	_cmd @ sp[(0)+-1]
  8920  01C996  0EFF               	movlw	-1
  8921  01C998  50E3               	movf	plusw1,w,c
  8922  01C99A  6EE6               	movwf	postinc1,c
  8923  01C99C  EC41  F0E9         	call	_SPI1_Exchange8bit	;wreg free
  8924                           
  8925                           ;eadog.c: 136:  wdtdelay(8);
  8926  01C9A0  0E08               	movlw	8
  8927  01C9A2  6EE6               	movwf	postinc1,c
  8928  01C9A4  0E00               	movlw	0
  8929  01C9A6  6EE6               	movwf	postinc1,c
  8930  01C9A8  0E00               	movlw	0
  8931  01C9AA  6EE6               	movwf	postinc1,c
  8932  01C9AC  0E00               	movlw	0
  8933  01C9AE  6EE6               	movwf	postinc1,c
  8934  01C9B0  EC39  F0E2         	call	_wdtdelay	;wreg free
  8935                           
  8936                           ; BSR set to: 0
  8937                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  8938  01C9B4  52E5               	movf	postdec1,f,c
  8939  01C9B6  0012               	return		;funcret
  8940  01C9B8                     __end_of_send_lcd_cmd:
  8941                           	opt callstack 0
  8942                           
  8943 ;; *************** function _SPI1_Exchange8bit *****************
  8944 ;; Defined at:
  8945 ;;		line 79 in file "mcc_generated_files/spi1.c"
  8946 ;; Parameters:    Size  Location     Type
  8947 ;;  data            1  [STACK] unsigned char 
  8948 ;; Auto vars:     Size  Location     Type
  8949 ;;		None
  8950 ;; Return value:  Size  Location     Type
  8951 ;;                  1  [STACK] unsigned char 
  8952 ;; Registers used:
  8953 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  8954 ;; Tracked objects:
  8955 ;;		On entry : 0/2
  8956 ;;		On exit  : 3F/39
  8957 ;;		Unchanged: 0/0
  8958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8963 ;;Total ram usage:        0 bytes
  8964 ;; Hardware stack levels used:    1
  8965 ;; Hardware stack levels required when called:   15
  8966 ;; This function calls:
  8967 ;;		Nothing
  8968 ;; This function is called by:
  8969 ;;		_send_lcd_data
  8970 ;;		_send_lcd_cmd
  8971 ;;		_send_lcd_cmd_long
  8972 ;;		_set_dac
  8973 ;; This function uses a reentrant model
  8974 ;;
  8975                           
  8976                           	psect	text19
  8977  01D282                     __ptext19:
  8978                           	opt callstack 0
  8979  01D282                     _SPI1_Exchange8bit:
  8980                           	opt callstack 14
  8981                           
  8982                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  8983                           
  8984                           ; BSR set to: 0
  8985                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8986                           ;incstack = 0
  8987  01D282  0E01               	movlw	1
  8988  01D284  013D               	movlb	61	; () banked
  8989  01D286  6F12               	movwf	18,b	;volatile
  8990                           
  8991                           ; BSR set to: 61
  8992                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  8993                           ;stkvar	_data @ sp[(0)+-1]
  8994  01D288  0EFF               	movlw	-1
  8995  01D28A  006F FF8F FD11     	movff	plusw1,15633	;volatile
  8996  01D290                     l809:
  8997                           
  8998                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  8999  01D290  0139               	movlb	57	; () banked
  9000  01D292  A9A2               	btfss	162,4,b	;volatile
  9001  01D294  D7FD               	goto	l809
  9002                           
  9003                           ; BSR set to: 57
  9004                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  9005  01D296  006F F440  F001    	movff	15632,btemp	;volatile
  9006                           
  9007                           ; BSR set to: 57
  9008                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  9009  01D29C  52E5               	movf	postdec1,f,c
  9010  01D29E  0012               	return		;funcret
  9011  01D2A0                     __end_of_SPI1_Exchange8bit:
  9012                           	opt callstack 0
  9013                           
  9014 ;; *************** function _ringBufS_init *****************
  9015 ;; Defined at:
  9016 ;;		line 22 in file "ringbufs.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;  _this           2  [STACK] PTR volatile struct ring
  9019 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9020 ;; Auto vars:     Size  Location     Type
  9021 ;;		None
  9022 ;; Return value:  Size  Location     Type
  9023 ;;                  1  [STACK] void 
  9024 ;; Registers used:
  9025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9026 ;; Tracked objects:
  9027 ;;		On entry : 0/0
  9028 ;;		On exit  : 0/0
  9029 ;;		Unchanged: 0/0
  9030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9035 ;;Total ram usage:        0 bytes
  9036 ;; Hardware stack levels used:    1
  9037 ;; Hardware stack levels required when called:   16
  9038 ;; This function calls:
  9039 ;;		_memset
  9040 ;; This function is called by:
  9041 ;;		_init_display
  9042 ;; This function uses a reentrant model
  9043 ;;
  9044                           
  9045                           	psect	text20
  9046  01CEAA                     __ptext20:
  9047                           	opt callstack 0
  9048  01CEAA                     _ringBufS_init:
  9049                           	opt callstack 13
  9050                           
  9051                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  9052                           
  9053                           ; BSR set to: 57
  9054                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9055                           ;incstack = 0
  9056  01CEAA  0E43               	movlw	67
  9057  01CEAC  6EE6               	movwf	postinc1,c
  9058  01CEAE  0E00               	movlw	0
  9059  01CEB0  6EE6               	movwf	postinc1,c
  9060  01CEB2  0E00               	movlw	0
  9061  01CEB4  6EE6               	movwf	postinc1,c
  9062  01CEB6  0E00               	movlw	0
  9063  01CEB8  6EE6               	movwf	postinc1,c
  9064                           
  9065                           ;stkvar	__this @ sp[(-4)+-2]
  9066  01CEBA  0EFA               	movlw	-6
  9067  01CEBC  006F FF8F FFE6     	movff	plusw1,postinc1
  9068  01CEC2  006F FF8F FFE6     	movff	plusw1,postinc1
  9069  01CEC8  EC7D  F0BA         	call	_memset	;wreg free
  9070                           
  9071                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9072  01CECC  52E5               	movf	postdec1,f,c
  9073  01CECE  52E5               	movf	postdec1,f,c
  9074  01CED0  0012               	return		;funcret
  9075  01CED2                     __end_of_ringBufS_init:
  9076                           	opt callstack 0
  9077                           
  9078 ;; *************** function _init_bsoc *****************
  9079 ;; Defined at:
  9080 ;;		line 110 in file "bsoc.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;		None
  9083 ;; Auto vars:     Size  Location     Type
  9084 ;;		None
  9085 ;; Return value:  Size  Location     Type
  9086 ;;                  1  [STACK] void 
  9087 ;; Registers used:
  9088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9089 ;; Tracked objects:
  9090 ;;		On entry : 0/2
  9091 ;;		On exit  : 0/0
  9092 ;;		Unchanged: 0/0
  9093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9098 ;;Total ram usage:        0 bytes
  9099 ;; Hardware stack levels used:    1
  9100 ;; Hardware stack levels required when called:   18
  9101 ;; This function calls:
  9102 ;;		_TMR3_SetInterruptHandler
  9103 ;;		_Volts_to_SOC
  9104 ;;		___fldiv
  9105 ;;		___flmul
  9106 ;;		___fltol
  9107 ;;		___xxtofl
  9108 ;;		_conv_raw_result
  9109 ;; This function is called by:
  9110 ;;		_main
  9111 ;; This function uses a reentrant model
  9112 ;;
  9113                           
  9114                           	psect	text21
  9115  018270                     __ptext21:
  9116                           	opt callstack 0
  9117  018270                     _init_bsoc:
  9118                           	opt callstack 12
  9119                           
  9120                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  9121                           
  9122                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9123                           ;incstack = 0
  9124  018270  0E00               	movlw	0
  9125  018272  6EE6               	movwf	postinc1,c
  9126  018274  0E00               	movlw	0
  9127  018276  6EE6               	movwf	postinc1,c
  9128  018278  0E7A               	movlw	122
  9129  01827A  6EE6               	movwf	postinc1,c
  9130  01827C  0E44               	movlw	68
  9131  01827E  6EE6               	movwf	postinc1,c
  9132  018280  0E00               	movlw	0
  9133  018282  6EE6               	movwf	postinc1,c
  9134  018284  0E04               	movlw	4
  9135  018286  6EE6               	movwf	postinc1,c
  9136  018288  EC9D  F0AA         	call	_conv_raw_result	;wreg free
  9137  01828C  0060  F007  FFE6   	movff	btemp,postinc1
  9138  018292  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9139  018298  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9140  01829E  0060  F013  FFE6   	movff	btemp+3,postinc1
  9141  0182A4  EC73  F0CC         	call	___fltol	;wreg free
  9142  0182A8  0060  F007  FFE6   	movff	btemp,postinc1
  9143  0182AE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9144  0182B4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9145  0182BA  0060  F013  FFE6   	movff	btemp+3,postinc1
  9146  0182C0  0E00               	movlw	0
  9147  0182C2  6EE6               	movwf	postinc1,c
  9148  0182C4  ECA7  F0C6         	call	___xxtofl	;wreg free
  9149  0182C8  0060  F007  FFE6   	movff	btemp,postinc1
  9150  0182CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9151  0182D4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9152  0182DA  0060  F013  FFE6   	movff	btemp+3,postinc1
  9153  0182E0  ECED  F09F         	call	___flmul	;wreg free
  9154  0182E4  0060  F007  FFE6   	movff	btemp,postinc1
  9155  0182EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9156  0182F0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9157  0182F6  0060  F013  FFE6   	movff	btemp+3,postinc1
  9158  0182FC  EC73  F0CC         	call	___fltol	;wreg free
  9159  018300  0060  F007  FFE6   	movff	btemp,postinc1
  9160  018306  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9161  01830C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9162  018312  0060  F013  FFE6   	movff	btemp+3,postinc1
  9163  018318  EC75  F0D9         	call	_Volts_to_SOC	;wreg free
  9164  01831C  0060  F004  F9B5   	movff	btemp,_C+182	;volatile
  9165  018322  0060  F008  F9B6   	movff	btemp+1,_C+183	;volatile
  9166                           
  9167                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  9168  018328  EE22  F18B         	lfsr	2,_C+140	;volatile
  9169  01832C  006F FF7B FFE6     	movff	postinc2,postinc1
  9170  018332  006F FF7B FFE6     	movff	postinc2,postinc1
  9171  018338  006F FF7B FFE6     	movff	postinc2,postinc1
  9172  01833E  006F FF7B FFE6     	movff	postinc2,postinc1
  9173  018344  0E00               	movlw	0
  9174  018346  6EE6               	movwf	postinc1,c
  9175  018348  0E00               	movlw	0
  9176  01834A  6EE6               	movwf	postinc1,c
  9177  01834C  0EC8               	movlw	200
  9178  01834E  6EE6               	movwf	postinc1,c
  9179  018350  0E42               	movlw	66
  9180  018352  6EE6               	movwf	postinc1,c
  9181  018354  0E00               	movlw	0
  9182  018356  6EE6               	movwf	postinc1,c
  9183  018358  0E00               	movlw	0
  9184  01835A  6EE6               	movwf	postinc1,c
  9185  01835C  0E7A               	movlw	122
  9186  01835E  6EE6               	movwf	postinc1,c
  9187  018360  0E44               	movlw	68
  9188  018362  6EE6               	movwf	postinc1,c
  9189  018364  0E00               	movlw	0
  9190  018366  6EE6               	movwf	postinc1,c
  9191  018368  0E04               	movlw	4
  9192  01836A  6EE6               	movwf	postinc1,c
  9193  01836C  EC9D  F0AA         	call	_conv_raw_result	;wreg free
  9194  018370  0060  F007  FFE6   	movff	btemp,postinc1
  9195  018376  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9196  01837C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9197  018382  0060  F013  FFE6   	movff	btemp+3,postinc1
  9198  018388  EC73  F0CC         	call	___fltol	;wreg free
  9199  01838C  0060  F007  FFE6   	movff	btemp,postinc1
  9200  018392  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9201  018398  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9202  01839E  0060  F013  FFE6   	movff	btemp+3,postinc1
  9203  0183A4  0E00               	movlw	0
  9204  0183A6  6EE6               	movwf	postinc1,c
  9205  0183A8  ECA7  F0C6         	call	___xxtofl	;wreg free
  9206  0183AC  0060  F007  FFE6   	movff	btemp,postinc1
  9207  0183B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9208  0183B8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9209  0183BE  0060  F013  FFE6   	movff	btemp+3,postinc1
  9210  0183C4  ECED  F09F         	call	___flmul	;wreg free
  9211  0183C8  0060  F007  FFE6   	movff	btemp,postinc1
  9212  0183CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9213  0183D4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9214  0183DA  0060  F013  FFE6   	movff	btemp+3,postinc1
  9215  0183E0  EC73  F0CC         	call	___fltol	;wreg free
  9216  0183E4  0060  F007  FFE6   	movff	btemp,postinc1
  9217  0183EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9218  0183F0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9219  0183F6  0060  F013  FFE6   	movff	btemp+3,postinc1
  9220  0183FC  EC75  F0D9         	call	_Volts_to_SOC	;wreg free
  9221  018400  0060  F004  F00B   	movff	btemp,btemp+10
  9222  018406  0060  F008  F00C   	movff	btemp+1,btemp+11
  9223  01840C  500B               	movf	(btemp+10)^0,w,c
  9224  01840E  6E05               	movwf	(btemp+4)^0,c
  9225  018410  500C               	movf	(btemp+11)^0,w,c
  9226  018412  6E06               	movwf	(btemp+5)^0,c
  9227  018414  6A07               	clrf	(btemp+6)^0,c
  9228  018416  6A08               	clrf	(btemp+7)^0,c
  9229  018418  0060  F017  FFE6   	movff	btemp+4,postinc1
  9230  01841E  0060  F01B  FFE6   	movff	btemp+5,postinc1
  9231  018424  0060  F01F  FFE6   	movff	btemp+6,postinc1
  9232  01842A  0060  F023  FFE6   	movff	btemp+7,postinc1
  9233  018430  0E00               	movlw	0
  9234  018432  6EE6               	movwf	postinc1,c
  9235  018434  ECA7  F0C6         	call	___xxtofl	;wreg free
  9236  018438  0060  F007  FFE6   	movff	btemp,postinc1
  9237  01843E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9238  018444  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9239  01844A  0060  F013  FFE6   	movff	btemp+3,postinc1
  9240  018450  ECE0  F0A7         	call	___fldiv	;wreg free
  9241  018454  0060  F007  FFE6   	movff	btemp,postinc1
  9242  01845A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9243  018460  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9244  018466  0060  F013  FFE6   	movff	btemp+3,postinc1
  9245  01846C  ECED  F09F         	call	___flmul	;wreg free
  9246  018470  0060  F004  F98F   	movff	btemp,_C+144	;volatile
  9247  018476  0060  F008  F990   	movff	btemp+1,_C+145	;volatile
  9248  01847C  0060  F00C  F991   	movff	btemp+2,_C+146	;volatile
  9249  018482  0060  F010  F992   	movff	btemp+3,_C+147	;volatile
  9250                           
  9251                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
  9252  018488  EE22  F18F         	lfsr	2,_C+144	;volatile
  9253  01848C  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
  9254  018492  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
  9255  018498  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
  9256  01849E  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
  9257                           
  9258                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
  9259  0184A4  0E6C               	movlw	low _calc_bsoc
  9260  0184A6  6EE6               	movwf	postinc1,c
  9261  0184A8  0E35               	movlw	high _calc_bsoc
  9262  0184AA  6EE6               	movwf	postinc1,c
  9263  0184AC  0E01               	movlw	low (_calc_bsoc shr (0+16))
  9264  0184AE  6EE6               	movwf	postinc1,c
  9265  0184B0  ECE1  F0E7         	call	_TMR3_SetInterruptHandler	;wreg free
  9266                           
  9267                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  9268  0184B4  0012               	return		;funcret
  9269  0184B6                     __end_of_init_bsoc:
  9270                           	opt callstack 0
  9271                           
  9272 ;; *************** function _Volts_to_SOC *****************
  9273 ;; Defined at:
  9274 ;;		line 175 in file "bsoc.c"
  9275 ;; Parameters:    Size  Location     Type
  9276 ;;  cvoltage        4  [STACK] const unsigned long 
  9277 ;; Auto vars:     Size  Location     Type
  9278 ;;  soc             2  [STACK] unsigned short 
  9279 ;;  slot            1  [STACK] unsigned char 
  9280 ;; Return value:  Size  Location     Type
  9281 ;;                  2  [STACK] unsigned short 
  9282 ;; Registers used:
  9283 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9284 ;; Tracked objects:
  9285 ;;		On entry : 0/2
  9286 ;;		On exit  : 0/0
  9287 ;;		Unchanged: 0/0
  9288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9293 ;;Total ram usage:        0 bytes
  9294 ;; Hardware stack levels used:    1
  9295 ;; Hardware stack levels required when called:   15
  9296 ;; This function calls:
  9297 ;;		Nothing
  9298 ;; This function is called by:
  9299 ;;		_init_bsoc
  9300 ;; This function uses a reentrant model
  9301 ;;
  9302                           
  9303                           	psect	text22
  9304  01B2EA                     __ptext22:
  9305                           	opt callstack 0
  9306  01B2EA                     _Volts_to_SOC:
  9307                           	opt callstack 0
  9308                           
  9309                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9310  01B2EA  52E6               	movf	postinc1,f,c
  9311  01B2EC  52E6               	movf	postinc1,f,c
  9312  01B2EE  52E6               	movf	postinc1,f,c
  9313                           
  9314                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
  9315                           ;stkvar	_soc @ sp[(-3)+0]
  9316                           
  9317                           ;incstack = 0
  9318  01B2F0  0EFD               	movlw	-3
  9319  01B2F2  6AE3               	clrf	plusw1,c
  9320  01B2F4  0EFE               	movlw	-2
  9321  01B2F6  6AE3               	clrf	plusw1,c
  9322                           
  9323                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
  9324                           ;stkvar	_slot @ sp[(-3)+2]
  9325  01B2F8  0EFF               	movlw	-1
  9326  01B2FA  6AE3               	clrf	plusw1,c
  9327  01B2FC                     l11754:
  9328                           
  9329                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  9330                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  9331                           ;stkvar	_slot @ sp[(-3)+2]
  9332  01B2FC  0EFF               	movlw	-1
  9333  01B2FE  50E3               	movf	plusw1,w,c
  9334  01B300  0D08               	mullw	8
  9335  01B302  0EA3               	movlw	low _BVSOC_TABLE
  9336  01B304  24F3               	addwf	243,w,c
  9337  01B306  6EF6               	movwf	tblptrl,c
  9338  01B308  0EF8               	movlw	high _BVSOC_TABLE
  9339  01B30A  20F4               	addwfc	244,w,c
  9340  01B30C  6EF7               	movwf	tblptrh,c
  9341  01B30E                     	if	1	;There are 3 active tblptr bytes
  9342  01B30E  6AF8               	clrf	tblptru,c
  9343  01B310  0E00               	movlw	low (__mediumconst shr (0+16))
  9344  01B312  22F8               	addwfc	tblptru,f,c
  9345  01B314                     	endif
  9346  01B314  0EF9               	movlw	-7
  9347  01B316  50E3               	movf	plusw1,w,c
  9348  01B318  0009               	tblrd		*+
  9349  01B31A  5CF5               	subwf	tablat,w,c
  9350  01B31C  0EFA               	movlw	-6
  9351  01B31E  50E3               	movf	plusw1,w,c
  9352  01B320  0009               	tblrd		*+
  9353  01B322  58F5               	subwfb	tablat,w,c
  9354  01B324  0EFB               	movlw	-5
  9355  01B326  50E3               	movf	plusw1,w,c
  9356  01B328  0009               	tblrd		*+
  9357  01B32A  58F5               	subwfb	tablat,w,c
  9358  01B32C  0EFC               	movlw	-4
  9359  01B32E  50E3               	movf	plusw1,w,c
  9360  01B330  0009               	tblrd		*+
  9361  01B332  58F5               	subwfb	tablat,w,c
  9362  01B334  B0D8               	btfsc	status,0,c
  9363  01B336  D020               	goto	l11758
  9364                           
  9365                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
  9366                           ;stkvar	_slot @ sp[(-3)+2]
  9367  01B338  0EFF               	movlw	-1
  9368  01B33A  50E3               	movf	plusw1,w,c
  9369  01B33C  0D08               	mullw	8
  9370  01B33E  0E04               	movlw	4
  9371  01B340  26F3               	addwf	243,f,c
  9372  01B342  0E00               	movlw	0
  9373  01B344  22F4               	addwfc	244,f,c
  9374  01B346  0EA3               	movlw	low _BVSOC_TABLE
  9375  01B348  24F3               	addwf	243,w,c
  9376  01B34A  6EF6               	movwf	tblptrl,c
  9377  01B34C  0EF8               	movlw	high _BVSOC_TABLE
  9378  01B34E  20F4               	addwfc	244,w,c
  9379  01B350  6EF7               	movwf	tblptrh,c
  9380  01B352                     	if	1	;There are 3 active tblptr bytes
  9381  01B352  6AF8               	clrf	tblptru,c
  9382  01B354  0E00               	movlw	low (__mediumconst shr (0+16))
  9383  01B356  22F8               	addwfc	tblptru,f,c
  9384  01B358                     	endif
  9385  01B358  0009               	tblrd		*+
  9386  01B35A  006F FFD4  F00B    	movff	tablat,btemp+10
  9387  01B360  0009               	tblrd		*+
  9388  01B362  006F FFD4  F00C    	movff	tablat,btemp+11
  9389                           
  9390                           ;stkvar	_soc @ sp[(-3)+0]
  9391  01B368  0EFD               	movlw	-3
  9392  01B36A  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9393  01B370  0EFE               	movlw	-2
  9394  01B372  0060  F033  FFE3   	movff	btemp+11,plusw1
  9395  01B378                     l11758:
  9396                           
  9397                           ;bsoc.c: 187:  }
  9398                           ;stkvar	_slot @ sp[(-3)+2]
  9399  01B378  0EFF               	movlw	-1
  9400  01B37A  2AE3               	incf	plusw1,f,c
  9401                           
  9402                           ;stkvar	_slot @ sp[(-3)+2]
  9403  01B37C  0EFF               	movlw	-1
  9404  01B37E  006F FF8C  F001    	movff	plusw1,btemp
  9405  01B384  0E19               	movlw	25
  9406  01B386  6401               	cpfsgt	btemp^0,c
  9407  01B388  D7B9               	goto	l11754
  9408                           
  9409                           ;bsoc.c: 188:  return soc;
  9410                           ;stkvar	_soc @ sp[(-3)+0]
  9411  01B38A  0EFD               	movlw	-3
  9412  01B38C  006F FF8C  F001    	movff	plusw1,btemp
  9413  01B392  0EFE               	movlw	-2
  9414  01B394  006F FF8C  F002    	movff	plusw1,btemp+1
  9415                           
  9416                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  9417  01B39A  0EF9               	movlw	249
  9418  01B39C  26E1               	addwf	fsr1l,f,c
  9419  01B39E  0EFF               	movlw	255
  9420  01B3A0  22E2               	addwfc	fsr1h,f,c
  9421  01B3A2  0012               	return		;funcret
  9422  01B3A4                     __end_of_Volts_to_SOC:
  9423                           	opt callstack 0
  9424                           
  9425 ;; *************** function _hid_display *****************
  9426 ;; Defined at:
  9427 ;;		line 22 in file "hid.c"
  9428 ;; Parameters:    Size  Location     Type
  9429 ;;  h               1  [STACK] PTR struct H_data
  9430 ;;		 -> H(9), 
  9431 ;; Auto vars:     Size  Location     Type
  9432 ;;		None
  9433 ;; Return value:  Size  Location     Type
  9434 ;;                  1  [STACK] PTR struct H_data
  9435 ;; Registers used:
  9436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  9437 ;; Tracked objects:
  9438 ;;		On entry : 0/39
  9439 ;;		On exit  : 0/0
  9440 ;;		Unchanged: 0/0
  9441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9446 ;;Total ram usage:        0 bytes
  9447 ;; Hardware stack levels used:    1
  9448 ;; Hardware stack levels required when called:   17
  9449 ;; This function calls:
  9450 ;;		_hid_input
  9451 ;; This function is called by:
  9452 ;;		_main
  9453 ;; This function uses a reentrant model
  9454 ;;
  9455                           
  9456                           	psect	text23
  9457  01A498                     __ptext23:
  9458                           	opt callstack 0
  9459  01A498                     _hid_display:
  9460                           	opt callstack 13
  9461                           
  9462                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
  9463                           ;stkvar	_h @ sp[(0)+-1]
  9464                           
  9465                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9466                           ;incstack = 0
  9467  01A498  0EFF               	movlw	-1
  9468  01A49A  50E3               	movf	plusw1,w,c
  9469  01A49C  6EE6               	movwf	postinc1,c
  9470  01A49E  EC73  F0D7         	call	_hid_input	;wreg free
  9471                           
  9472                           ;hid.c: 26:  switch (h->h_state) {
  9473  01A4A2  D076               	goto	l12338
  9474  01A4A4                     l12312:
  9475                           
  9476                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
  9477                           ;stkvar	_h @ sp[(0)+-1]
  9478  01A4A4  0EFF               	movlw	-1
  9479  01A4A6  50E3               	movf	plusw1,w,c
  9480  01A4A8  6ED9               	movwf	fsr2l,c
  9481  01A4AA  6ADA               	clrf	fsr2h,c
  9482  01A4AC  0E01               	movlw	1
  9483  01A4AE  26D9               	addwf	fsr2l,f,c
  9484  01A4B0  0E01               	movlw	1
  9485  01A4B2  6EDF               	movwf	indf2,c
  9486                           
  9487                           ;hid.c: 29:   h->hid_display = HID_MAIN;
  9488                           ;stkvar	_h @ sp[(0)+-1]
  9489  01A4B4  0EFF               	movlw	-1
  9490  01A4B6  50E3               	movf	plusw1,w,c
  9491  01A4B8  6ED9               	movwf	fsr2l,c
  9492  01A4BA  6ADA               	clrf	fsr2h,c
  9493  01A4BC  0E00               	movlw	0
  9494  01A4BE  6EDF               	movwf	indf2,c
  9495                           
  9496                           ;hid.c: 30:   h->wait_enter = 1;
  9497                           ;stkvar	_h @ sp[(0)+-1]
  9498  01A4C0  0EFF               	movlw	-1
  9499  01A4C2  50E3               	movf	plusw1,w,c
  9500  01A4C4  6ED9               	movwf	fsr2l,c
  9501  01A4C6  6ADA               	clrf	fsr2h,c
  9502  01A4C8  0E04               	movlw	4
  9503  01A4CA  26D9               	addwf	fsr2l,f,c
  9504  01A4CC  0E01               	movlw	1
  9505  01A4CE  6EDF               	movwf	indf2,c
  9506                           
  9507                           ;hid.c: 31:   h->wait_select = 1;
  9508                           ;stkvar	_h @ sp[(0)+-1]
  9509  01A4D0  0EFF               	movlw	-1
  9510  01A4D2  50E3               	movf	plusw1,w,c
  9511  01A4D4  6ED9               	movwf	fsr2l,c
  9512  01A4D6  6ADA               	clrf	fsr2h,c
  9513  01A4D8  0E02               	movlw	2
  9514  01A4DA  26D9               	addwf	fsr2l,f,c
  9515  01A4DC  0E01               	movlw	1
  9516  01A4DE  6EDF               	movwf	indf2,c
  9517                           
  9518                           ;hid.c: 32:   h->wait_calib = 1;
  9519                           ;stkvar	_h @ sp[(0)+-1]
  9520  01A4E0  0EFF               	movlw	-1
  9521  01A4E2  50E3               	movf	plusw1,w,c
  9522  01A4E4  6ED9               	movwf	fsr2l,c
  9523  01A4E6  6ADA               	clrf	fsr2h,c
  9524  01A4E8  0E06               	movlw	6
  9525  01A4EA  26D9               	addwf	fsr2l,f,c
  9526  01A4EC  0E01               	movlw	1
  9527  01A4EE  6EDF               	movwf	indf2,c
  9528                           
  9529                           ;hid.c: 33:   h->select_p = SW_OFF;
  9530                           ;stkvar	_h @ sp[(0)+-1]
  9531  01A4F0  0EFF               	movlw	-1
  9532  01A4F2  50E3               	movf	plusw1,w,c
  9533  01A4F4  6ED9               	movwf	fsr2l,c
  9534  01A4F6  6ADA               	clrf	fsr2h,c
  9535  01A4F8  0E03               	movlw	3
  9536  01A4FA  26D9               	addwf	fsr2l,f,c
  9537  01A4FC  0E00               	movlw	0
  9538  01A4FE  6EDF               	movwf	indf2,c
  9539                           
  9540                           ;hid.c: 34:   h->enter_p = SW_OFF;
  9541                           ;stkvar	_h @ sp[(0)+-1]
  9542  01A500  0EFF               	movlw	-1
  9543  01A502  50E3               	movf	plusw1,w,c
  9544  01A504  6ED9               	movwf	fsr2l,c
  9545  01A506  6ADA               	clrf	fsr2h,c
  9546  01A508  0E05               	movlw	5
  9547  01A50A  26D9               	addwf	fsr2l,f,c
  9548  01A50C  0E00               	movlw	0
  9549  01A50E  6EDF               	movwf	indf2,c
  9550                           
  9551                           ;hid.c: 35:   h->calib_p = SW_OFF;
  9552                           ;stkvar	_h @ sp[(0)+-1]
  9553  01A510  0EFF               	movlw	-1
  9554  01A512  50E3               	movf	plusw1,w,c
  9555  01A514  6ED9               	movwf	fsr2l,c
  9556  01A516  6ADA               	clrf	fsr2h,c
  9557  01A518  0E07               	movlw	7
  9558  01A51A  26D9               	addwf	fsr2l,f,c
  9559  01A51C  0E00               	movlw	0
  9560  01A51E  D036               	goto	L5
  9561  01A520                     l12328:
  9562                           
  9563                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  9564                           ;stkvar	_h @ sp[(0)+-1]
  9565  01A520  0EFF               	movlw	-1
  9566  01A522  50E3               	movf	plusw1,w,c
  9567  01A524  6ED9               	movwf	fsr2l,c
  9568  01A526  6ADA               	clrf	fsr2h,c
  9569  01A528  0E02               	movlw	2
  9570  01A52A  26D9               	addwf	fsr2l,f,c
  9571  01A52C  50DF               	movf	indf2,w,c
  9572  01A52E  A4D8               	btfss	status,2,c
  9573  01A530  D042               	goto	l2247
  9574                           
  9575                           ;stkvar	_h @ sp[(0)+-1]
  9576  01A532  0EFF               	movlw	-1
  9577  01A534  50E3               	movf	plusw1,w,c
  9578  01A536  6ED9               	movwf	fsr2l,c
  9579  01A538  6ADA               	clrf	fsr2h,c
  9580  01A53A  0E03               	movlw	3
  9581  01A53C  26D9               	addwf	fsr2l,f,c
  9582  01A53E  50DF               	movf	indf2,w,c
  9583  01A540  A4D8               	btfss	status,2,c
  9584  01A542  D039               	goto	l2247
  9585                           
  9586                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
  9587                           ;stkvar	_h @ sp[(0)+-1]
  9588  01A544  0EFF               	movlw	-1
  9589  01A546  50E3               	movf	plusw1,w,c
  9590  01A548  6ED9               	movwf	fsr2l,c
  9591  01A54A  6ADA               	clrf	fsr2h,c
  9592  01A54C  0E08               	movlw	8
  9593  01A54E  26D9               	addwf	fsr2l,f,c
  9594                           
  9595                           ;stkvar	_h @ sp[(0)+-1]
  9596  01A550  0EFF               	movlw	-1
  9597  01A552  50E3               	movf	plusw1,w,c
  9598  01A554  6EE9               	movwf	fsr0l,c
  9599  01A556  6AEA               	clrf	fsr0h,c
  9600  01A558  0E08               	movlw	8
  9601  01A55A  26E9               	addwf	fsr0l,f,c
  9602  01A55C  2AEF               	incf	indf0,f,c
  9603  01A55E  50EF               	movf	indf0,w,c
  9604  01A560  0B03               	andlw	3
  9605  01A562  6EDF               	movwf	indf2,c
  9606                           
  9607                           ;hid.c: 41:    h->hid_display = h->sequence;
  9608                           ;stkvar	_h @ sp[(0)+-1]
  9609  01A564  0EFF               	movlw	-1
  9610  01A566  50E3               	movf	plusw1,w,c
  9611  01A568  6ED9               	movwf	fsr2l,c
  9612  01A56A  6ADA               	clrf	fsr2h,c
  9613  01A56C  0E08               	movlw	8
  9614  01A56E  26D9               	addwf	fsr2l,f,c
  9615                           
  9616                           ;stkvar	_h @ sp[(0)+-1]
  9617  01A570  0EFF               	movlw	-1
  9618  01A572  50E3               	movf	plusw1,w,c
  9619  01A574  6EE9               	movwf	fsr0l,c
  9620  01A576  6AEA               	clrf	fsr0h,c
  9621  01A578  006F FF7F FFEF     	movff	indf2,indf0
  9622                           
  9623                           ;hid.c: 42:    h->wait_select = 1;
  9624                           ;stkvar	_h @ sp[(0)+-1]
  9625  01A57E  0EFF               	movlw	-1
  9626  01A580  50E3               	movf	plusw1,w,c
  9627  01A582  6ED9               	movwf	fsr2l,c
  9628  01A584  6ADA               	clrf	fsr2h,c
  9629  01A586  0E02               	movlw	2
  9630  01A588  26D9               	addwf	fsr2l,f,c
  9631  01A58A  0E01               	movlw	1
  9632  01A58C                     L5:
  9633  01A58C  6EDF               	movwf	indf2,c
  9634  01A58E  D013               	goto	l2247
  9635  01A590                     l12338:
  9636                           
  9637                           ;stkvar	_h @ sp[(0)+-1]
  9638  01A590  0EFF               	movlw	-1
  9639  01A592  50E3               	movf	plusw1,w,c
  9640  01A594  6ED9               	movwf	fsr2l,c
  9641  01A596  6ADA               	clrf	fsr2h,c
  9642  01A598  0E01               	movlw	1
  9643  01A59A  26D9               	addwf	fsr2l,f,c
  9644  01A59C  50DF               	movf	indf2,w,c
  9645  01A59E  6E0B               	movwf	(btemp+10)^0,c
  9646  01A5A0  6A0C               	clrf	(btemp+11)^0,c
  9647                           
  9648                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9649                           ; Switch size 1, requested type "simple"
  9650                           ; Number of cases is 1, Range of values is 0 to 0
  9651                           ; switch strategies available:
  9652                           ; Name         Instructions Cycles
  9653                           ; simple_byte            4     3 (average)
  9654                           ;	Chosen strategy is simple_byte
  9655  01A5A2  500C               	movf	(btemp+11)^0,w,c
  9656  01A5A4  0A00               	xorlw	0	; case 0
  9657  01A5A6  A4D8               	btfss	status,2,c
  9658  01A5A8  D7BB               	goto	l12328
  9659                           
  9660                           ; Switch size 1, requested type "simple"
  9661                           ; Number of cases is 2, Range of values is 0 to 1
  9662                           ; switch strategies available:
  9663                           ; Name         Instructions Cycles
  9664                           ; simple_byte            7     4 (average)
  9665                           ;	Chosen strategy is simple_byte
  9666  01A5AA  500B               	movf	(btemp+10)^0,w,c
  9667  01A5AC  0A00               	xorlw	0	; case 0
  9668  01A5AE  B4D8               	btfsc	status,2,c
  9669  01A5B0  D779               	goto	l12312
  9670  01A5B2  0A01               	xorlw	1	; case 1
  9671  01A5B4  D7B5               	goto	l12328
  9672  01A5B6                     l2247:
  9673                           
  9674                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  9675  01A5B6  52E5               	movf	postdec1,f,c
  9676  01A5B8  0012               	return		;funcret
  9677  01A5BA                     __end_of_hid_display:
  9678                           	opt callstack 0
  9679                           
  9680 ;; *************** function _hid_input *****************
  9681 ;; Defined at:
  9682 ;;		line 3 in file "hid.c"
  9683 ;; Parameters:    Size  Location     Type
  9684 ;;  h               1  [STACK] PTR struct H_data
  9685 ;;		 -> H(9), 
  9686 ;; Auto vars:     Size  Location     Type
  9687 ;;		None
  9688 ;; Return value:  Size  Location     Type
  9689 ;;                  1  [STACK] PTR struct H_data
  9690 ;; Registers used:
  9691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  9692 ;; Tracked objects:
  9693 ;;		On entry : 0/39
  9694 ;;		On exit  : 0/0
  9695 ;;		Unchanged: 0/0
  9696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9701 ;;Total ram usage:        0 bytes
  9702 ;; Hardware stack levels used:    1
  9703 ;; Hardware stack levels required when called:   16
  9704 ;; This function calls:
  9705 ;;		_get_switch
  9706 ;; This function is called by:
  9707 ;;		_hid_display
  9708 ;; This function uses a reentrant model
  9709 ;;
  9710                           
  9711                           	psect	text24
  9712  01AEE6                     __ptext24:
  9713                           	opt callstack 0
  9714  01AEE6                     _hid_input:
  9715                           	opt callstack 13
  9716                           
  9717                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  9718                           
  9719                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9720                           ;incstack = 0
  9721  01AEE6  0E02               	movlw	2
  9722  01AEE8  6EE6               	movwf	postinc1,c
  9723  01AEEA  ECFD  F0E6         	call	_get_switch	;wreg free
  9724  01AEEE  5001               	movf	btemp^0,w,c
  9725  01AEF0  B4D8               	btfsc	status,2,c
  9726  01AEF2  D01C               	goto	l11658
  9727                           
  9728                           ;hid.c: 6:   h->wait_select = 0;
  9729                           ;stkvar	_h @ sp[(0)+-1]
  9730  01AEF4  0EFF               	movlw	-1
  9731  01AEF6  50E3               	movf	plusw1,w,c
  9732  01AEF8  6ED9               	movwf	fsr2l,c
  9733  01AEFA  6ADA               	clrf	fsr2h,c
  9734  01AEFC  0E02               	movlw	2
  9735  01AEFE  26D9               	addwf	fsr2l,f,c
  9736  01AF00  0E00               	movlw	0
  9737  01AF02  6EDF               	movwf	indf2,c
  9738                           
  9739                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  9740  01AF04  0E02               	movlw	2
  9741  01AF06  6EE6               	movwf	postinc1,c
  9742  01AF08  ECFD  F0E6         	call	_get_switch	;wreg free
  9743  01AF0C  5001               	movf	btemp^0,w,c
  9744  01AF0E  B4D8               	btfsc	status,2,c
  9745  01AF10  D003               	goto	u10620
  9746  01AF12  6A0C               	clrf	(btemp+11)^0,c
  9747  01AF14  2A0C               	incf	(btemp+11)^0,f,c
  9748  01AF16  D001               	goto	u10638
  9749  01AF18                     u10620:
  9750  01AF18  6A0C               	clrf	(btemp+11)^0,c
  9751  01AF1A                     u10638:
  9752                           
  9753                           ;stkvar	_h @ sp[(0)+-1]
  9754  01AF1A  0EFF               	movlw	-1
  9755  01AF1C  50E3               	movf	plusw1,w,c
  9756  01AF1E  6ED9               	movwf	fsr2l,c
  9757  01AF20  6ADA               	clrf	fsr2h,c
  9758  01AF22  0E03               	movlw	3
  9759  01AF24  26D9               	addwf	fsr2l,f,c
  9760  01AF26  0060  F033  FFDF   	movff	btemp+11,indf2
  9761  01AF2C                     l11658:
  9762                           
  9763                           ;hid.c: 10:  if (get_switch(SENTER)) {
  9764  01AF2C  0E03               	movlw	3
  9765  01AF2E  6EE6               	movwf	postinc1,c
  9766  01AF30  ECFD  F0E6         	call	_get_switch	;wreg free
  9767  01AF34  5001               	movf	btemp^0,w,c
  9768  01AF36  B4D8               	btfsc	status,2,c
  9769  01AF38  D01C               	goto	l11664
  9770                           
  9771                           ;hid.c: 11:   h->wait_enter = 0;
  9772                           ;stkvar	_h @ sp[(0)+-1]
  9773  01AF3A  0EFF               	movlw	-1
  9774  01AF3C  50E3               	movf	plusw1,w,c
  9775  01AF3E  6ED9               	movwf	fsr2l,c
  9776  01AF40  6ADA               	clrf	fsr2h,c
  9777  01AF42  0E04               	movlw	4
  9778  01AF44  26D9               	addwf	fsr2l,f,c
  9779  01AF46  0E00               	movlw	0
  9780  01AF48  6EDF               	movwf	indf2,c
  9781                           
  9782                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  9783  01AF4A  0E03               	movlw	3
  9784  01AF4C  6EE6               	movwf	postinc1,c
  9785  01AF4E  ECFD  F0E6         	call	_get_switch	;wreg free
  9786  01AF52  5001               	movf	btemp^0,w,c
  9787  01AF54  B4D8               	btfsc	status,2,c
  9788  01AF56  D003               	goto	u10650
  9789  01AF58  6A0C               	clrf	(btemp+11)^0,c
  9790  01AF5A  2A0C               	incf	(btemp+11)^0,f,c
  9791  01AF5C  D001               	goto	u10668
  9792  01AF5E                     u10650:
  9793  01AF5E  6A0C               	clrf	(btemp+11)^0,c
  9794  01AF60                     u10668:
  9795                           
  9796                           ;stkvar	_h @ sp[(0)+-1]
  9797  01AF60  0EFF               	movlw	-1
  9798  01AF62  50E3               	movf	plusw1,w,c
  9799  01AF64  6ED9               	movwf	fsr2l,c
  9800  01AF66  6ADA               	clrf	fsr2h,c
  9801  01AF68  0E05               	movlw	5
  9802  01AF6A  26D9               	addwf	fsr2l,f,c
  9803  01AF6C  0060  F033  FFDF   	movff	btemp+11,indf2
  9804  01AF72                     l11664:
  9805                           
  9806                           ;hid.c: 15:  if (get_switch(SCALIB)) {
  9807  01AF72  0E04               	movlw	4
  9808  01AF74  6EE6               	movwf	postinc1,c
  9809  01AF76  ECFD  F0E6         	call	_get_switch	;wreg free
  9810  01AF7A  5001               	movf	btemp^0,w,c
  9811  01AF7C  B4D8               	btfsc	status,2,c
  9812  01AF7E  D01C               	goto	l2238
  9813                           
  9814                           ;hid.c: 16:   h->wait_calib = 0;
  9815                           ;stkvar	_h @ sp[(0)+-1]
  9816  01AF80  0EFF               	movlw	-1
  9817  01AF82  50E3               	movf	plusw1,w,c
  9818  01AF84  6ED9               	movwf	fsr2l,c
  9819  01AF86  6ADA               	clrf	fsr2h,c
  9820  01AF88  0E06               	movlw	6
  9821  01AF8A  26D9               	addwf	fsr2l,f,c
  9822  01AF8C  0E00               	movlw	0
  9823  01AF8E  6EDF               	movwf	indf2,c
  9824                           
  9825                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
  9826  01AF90  0E04               	movlw	4
  9827  01AF92  6EE6               	movwf	postinc1,c
  9828  01AF94  ECFD  F0E6         	call	_get_switch	;wreg free
  9829  01AF98  5001               	movf	btemp^0,w,c
  9830  01AF9A  B4D8               	btfsc	status,2,c
  9831  01AF9C  D003               	goto	u10680
  9832  01AF9E  6A0C               	clrf	(btemp+11)^0,c
  9833  01AFA0  2A0C               	incf	(btemp+11)^0,f,c
  9834  01AFA2  D001               	goto	u10698
  9835  01AFA4                     u10680:
  9836  01AFA4  6A0C               	clrf	(btemp+11)^0,c
  9837  01AFA6                     u10698:
  9838                           
  9839                           ;stkvar	_h @ sp[(0)+-1]
  9840  01AFA6  0EFF               	movlw	-1
  9841  01AFA8  50E3               	movf	plusw1,w,c
  9842  01AFAA  6ED9               	movwf	fsr2l,c
  9843  01AFAC  6ADA               	clrf	fsr2h,c
  9844  01AFAE  0E07               	movlw	7
  9845  01AFB0  26D9               	addwf	fsr2l,f,c
  9846  01AFB2  0060  F033  FFDF   	movff	btemp+11,indf2
  9847  01AFB8                     l2238:
  9848                           
  9849                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9850  01AFB8  52E5               	movf	postdec1,f,c
  9851  01AFBA  0012               	return		;funcret
  9852  01AFBC                     __end_of_hid_input:
  9853                           	opt callstack 0
  9854                           
  9855 ;; *************** function _esr_check *****************
  9856 ;; Defined at:
  9857 ;;		line 197 in file "bsoc.c"
  9858 ;; Parameters:    Size  Location     Type
  9859 ;;  fsm             1  [STACK] const unsigned char 
  9860 ;; Auto vars:     Size  Location     Type
  9861 ;;		None
  9862 ;; Return value:  Size  Location     Type
  9863 ;;                  4  [STACK] float 
  9864 ;; Registers used:
  9865 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9866 ;; Tracked objects:
  9867 ;;		On entry : 0/0
  9868 ;;		On exit  : 0/0
  9869 ;;		Unchanged: 0/0
  9870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9875 ;;Total ram usage:        0 bytes
  9876 ;; Hardware stack levels used:    1
  9877 ;; Hardware stack levels required when called:   18
  9878 ;; This function calls:
  9879 ;;		_StartTimer
  9880 ;;		_TimerDone
  9881 ;;		___fldiv
  9882 ;;		___flsub
  9883 ;;		_conv_raw_result
  9884 ;;		_fabsf
  9885 ;;		_set_load_relay_one
  9886 ;;		_set_load_relay_two
  9887 ;;		_update_adc_result
  9888 ;; This function is called by:
  9889 ;;		_main
  9890 ;; This function uses a reentrant model
  9891 ;;
  9892                           
  9893                           	psect	text25
  9894  0177E6                     __ptext25:
  9895                           	opt callstack 0
  9896  0177E6                     _esr_check:
  9897                           	opt callstack 12
  9898                           
  9899                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
  9900                           ;stkvar	_fsm @ sp[(0)+-1]
  9901                           
  9902                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9903                           ;incstack = 0
  9904  0177E6  0EFF               	movlw	-1
  9905  0177E8  50E3               	movf	plusw1,w,c
  9906  0177EA  B4D8               	btfsc	status,2,c
  9907  0177EC  D149               	goto	l12164
  9908                           
  9909                           ;bsoc.c: 202:   esr_state = 0;
  9910  0177EE  0100               	movlb	0	; () banked
  9911  0177F0  6BCA               	clrf	esr_check@esr_state& (0+255),b
  9912                           
  9913                           ; BSR set to: 0
  9914                           ;bsoc.c: 203:   return -10.0;
  9915  0177F2  0E00               	movlw	0
  9916  0177F4  6E01               	movwf	btemp^0,c
  9917  0177F6  0E00               	movlw	0
  9918  0177F8  6E02               	movwf	(btemp+1)^0,c
  9919  0177FA  0E20               	movlw	32
  9920  0177FC  6E03               	movwf	(btemp+2)^0,c
  9921  0177FE  0EC1               	movlw	193
  9922  017800  D15B               	goto	L6
  9923  017802                     l12096:
  9924                           
  9925                           ; BSR set to: 0
  9926                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
  9927  017802  0E10               	movlw	16
  9928  017804  6EE6               	movwf	postinc1,c
  9929  017806  0E27               	movlw	39
  9930  017808  6EE6               	movwf	postinc1,c
  9931  01780A  0E0C               	movlw	12
  9932  01780C  6EE6               	movwf	postinc1,c
  9933  01780E  ECDC  F0E4         	call	_StartTimer	;wreg free
  9934  017812                     l12098:
  9935                           
  9936                           ;bsoc.c: 209:   esr_state++;
  9937  017812  0100               	movlb	0	; () banked
  9938  017814  2BCA               	incf	esr_check@esr_state& (0+255),f,b
  9939                           
  9940                           ;bsoc.c: 210:   break;
  9941  017816  D149               	goto	l12166
  9942  017818                     l12100:
  9943                           
  9944                           ; BSR set to: 0
  9945                           ;bsoc.c: 215:   set_load_relay_one(0);
  9946  017818  0E00               	movlw	0
  9947  01781A  6EE6               	movwf	postinc1,c
  9948  01781C  EC10  F0EA         	call	_set_load_relay_one	;wreg free
  9949                           
  9950                           ;bsoc.c: 216:   set_load_relay_two(0);
  9951  017820  0E00               	movlw	0
  9952  017822  6EE6               	movwf	postinc1,c
  9953  017824  EC08  F0EA         	call	_set_load_relay_two	;wreg free
  9954                           
  9955                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
  9956  017828  0E0C               	movlw	12
  9957  01782A  6EE6               	movwf	postinc1,c
  9958  01782C  EC69  F0E7         	call	_TimerDone	;wreg free
  9959  017830  5001               	movf	btemp^0,w,c
  9960  017832  B4D8               	btfsc	status,2,c
  9961  017834  D009               	goto	l12106
  9962                           
  9963                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
  9964  017836  0E10               	movlw	16
  9965  017838  6EE6               	movwf	postinc1,c
  9966  01783A  0E27               	movlw	39
  9967  01783C  6EE6               	movwf	postinc1,c
  9968  01783E  0E0C               	movlw	12
  9969  017840  6EE6               	movwf	postinc1,c
  9970  017842  ECDC  F0E4         	call	_StartTimer	;wreg free
  9971                           
  9972                           ;bsoc.c: 219:   } else {
  9973  017846  D006               	goto	l12110
  9974  017848                     l12106:
  9975                           
  9976                           ;bsoc.c: 220:    return -2.0;
  9977  017848  0E00               	movlw	0
  9978  01784A  6E01               	movwf	btemp^0,c
  9979  01784C  0E00               	movlw	0
  9980  01784E  6E02               	movwf	(btemp+1)^0,c
  9981  017850  0E00               	movlw	0
  9982  017852  D066               	goto	L8
  9983  017854                     l12110:
  9984                           
  9985                           ;bsoc.c: 225:   update_adc_result();
  9986  017854  EC7B  F0E5         	call	_update_adc_result	;wreg free
  9987                           
  9988                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  9989  017858  0E00               	movlw	0
  9990  01785A  6EE6               	movwf	postinc1,c
  9991  01785C  0E04               	movlw	4
  9992  01785E  6EE6               	movwf	postinc1,c
  9993  017860  EC9D  F0AA         	call	_conv_raw_result	;wreg free
  9994  017864  0060  F004  FA31   	movff	btemp,_C+306	;volatile
  9995  01786A  0060  F008  FA32   	movff	btemp+1,_C+307	;volatile
  9996  017870  0060  F00C  FA33   	movff	btemp+2,_C+308	;volatile
  9997  017876  0060  F010  FA34   	movff	btemp+3,_C+309	;volatile
  9998  01787C  D7CA               	goto	l12098
  9999  01787E                     l12116:
 10000                           
 10001                           ; BSR set to: 0
 10002                           ;bsoc.c: 230:   set_load_relay_one(1);
 10003  01787E  0E01               	movlw	1
 10004  017880  6EE6               	movwf	postinc1,c
 10005  017882  EC10  F0EA         	call	_set_load_relay_one	;wreg free
 10006                           
 10007                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
 10008  017886  0E0C               	movlw	12
 10009  017888  6EE6               	movwf	postinc1,c
 10010  01788A  EC69  F0E7         	call	_TimerDone	;wreg free
 10011  01788E  5001               	movf	btemp^0,w,c
 10012  017890  B4D8               	btfsc	status,2,c
 10013  017892  D009               	goto	l12122
 10014                           
 10015                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
 10016  017894  0E10               	movlw	16
 10017  017896  6EE6               	movwf	postinc1,c
 10018  017898  0E27               	movlw	39
 10019  01789A  6EE6               	movwf	postinc1,c
 10020  01789C  0E0C               	movlw	12
 10021  01789E  6EE6               	movwf	postinc1,c
 10022  0178A0  ECDC  F0E4         	call	_StartTimer	;wreg free
 10023                           
 10024                           ;bsoc.c: 233:   } else {
 10025  0178A4  D006               	goto	l12126
 10026  0178A6                     l12122:
 10027                           
 10028                           ;bsoc.c: 234:    return -3.0;
 10029  0178A6  0E00               	movlw	0
 10030  0178A8  6E01               	movwf	btemp^0,c
 10031  0178AA  0E00               	movlw	0
 10032  0178AC  6E02               	movwf	(btemp+1)^0,c
 10033  0178AE  0E40               	movlw	64
 10034  0178B0  D037               	goto	L8
 10035  0178B2                     l12126:
 10036                           
 10037                           ;bsoc.c: 237:   update_adc_result();
 10038  0178B2  EC7B  F0E5         	call	_update_adc_result	;wreg free
 10039                           
 10040                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
 10041  0178B6  0E00               	movlw	0
 10042  0178B8  6EE6               	movwf	postinc1,c
 10043  0178BA  0E04               	movlw	4
 10044  0178BC  6EE6               	movwf	postinc1,c
 10045  0178BE  EC9D  F0AA         	call	_conv_raw_result	;wreg free
 10046  0178C2  0060  F004  FA35   	movff	btemp,_C+310	;volatile
 10047  0178C8  0060  F008  FA36   	movff	btemp+1,_C+311	;volatile
 10048  0178CE  0060  F00C  FA37   	movff	btemp+2,_C+312	;volatile
 10049  0178D4  0060  F010  FA38   	movff	btemp+3,_C+313	;volatile
 10050                           
 10051                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
 10052  0178DA  0E00               	movlw	0
 10053  0178DC  6EE6               	movwf	postinc1,c
 10054  0178DE  0E00               	movlw	0
 10055  0178E0  6EE6               	movwf	postinc1,c
 10056  0178E2  EC9D  F0AA         	call	_conv_raw_result	;wreg free
 10057  0178E6  0060  F004  FA29   	movff	btemp,_C+298	;volatile
 10058  0178EC  0060  F008  FA2A   	movff	btemp+1,_C+299	;volatile
 10059  0178F2  0060  F00C  FA2B   	movff	btemp+2,_C+300	;volatile
 10060  0178F8  0060  F010  FA2C   	movff	btemp+3,_C+301	;volatile
 10061  0178FE  D789               	goto	l12098
 10062  017900                     l12134:
 10063                           
 10064                           ; BSR set to: 0
 10065                           ;bsoc.c: 243:   set_load_relay_two(1);
 10066  017900  0E01               	movlw	1
 10067  017902  6EE6               	movwf	postinc1,c
 10068  017904  EC08  F0EA         	call	_set_load_relay_two	;wreg free
 10069                           
 10070                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
 10071  017908  0E0C               	movlw	12
 10072  01790A  6EE6               	movwf	postinc1,c
 10073  01790C  EC69  F0E7         	call	_TimerDone	;wreg free
 10074  017910  5001               	movf	btemp^0,w,c
 10075  017912  A4D8               	btfss	status,2,c
 10076  017914  D008               	goto	l12142
 10077                           
 10078                           ;bsoc.c: 245:    return -4.0;
 10079  017916  0E00               	movlw	0
 10080  017918  6E01               	movwf	btemp^0,c
 10081  01791A  0E00               	movlw	0
 10082  01791C  6E02               	movwf	(btemp+1)^0,c
 10083  01791E  0E80               	movlw	128
 10084  017920                     L8:
 10085  017920  6E03               	movwf	(btemp+2)^0,c
 10086  017922  0EC0               	movlw	192
 10087  017924  D0C9               	goto	L6
 10088  017926                     l12142:
 10089                           
 10090                           ;bsoc.c: 247:   update_adc_result();
 10091  017926  EC7B  F0E5         	call	_update_adc_result	;wreg free
 10092                           
 10093                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
 10094  01792A  0E00               	movlw	0
 10095  01792C  6EE6               	movwf	postinc1,c
 10096  01792E  0E04               	movlw	4
 10097  017930  6EE6               	movwf	postinc1,c
 10098  017932  EC9D  F0AA         	call	_conv_raw_result	;wreg free
 10099  017936  0060  F004  FA39   	movff	btemp,_C+314	;volatile
 10100  01793C  0060  F008  FA3A   	movff	btemp+1,_C+315	;volatile
 10101  017942  0060  F00C  FA3B   	movff	btemp+2,_C+316	;volatile
 10102  017948  0060  F010  FA3C   	movff	btemp+3,_C+317	;volatile
 10103                           
 10104                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
 10105  01794E  0E00               	movlw	0
 10106  017950  6EE6               	movwf	postinc1,c
 10107  017952  0E00               	movlw	0
 10108  017954  6EE6               	movwf	postinc1,c
 10109  017956  EC9D  F0AA         	call	_conv_raw_result	;wreg free
 10110  01795A  0060  F004  FA2D   	movff	btemp,_C+302	;volatile
 10111  017960  0060  F008  FA2E   	movff	btemp+1,_C+303	;volatile
 10112  017966  0060  F00C  FA2F   	movff	btemp+2,_C+304	;volatile
 10113  01796C  0060  F010  FA30   	movff	btemp+3,_C+305	;volatile
 10114                           
 10115                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
 10116  017972  EE22  F22D         	lfsr	2,_C+302	;volatile
 10117  017976  006F FF7B FFE6     	movff	postinc2,postinc1
 10118  01797C  006F FF7B FFE6     	movff	postinc2,postinc1
 10119  017982  006F FF7B FFE6     	movff	postinc2,postinc1
 10120  017988  006F FF7B FFE6     	movff	postinc2,postinc1
 10121  01798E  EE22  F229         	lfsr	2,_C+298	;volatile
 10122  017992  006F FF7B FFE6     	movff	postinc2,postinc1
 10123  017998  006F FF7B FFE6     	movff	postinc2,postinc1
 10124  01799E  006F FF7B FFE6     	movff	postinc2,postinc1
 10125  0179A4  006F FF7B FFE6     	movff	postinc2,postinc1
 10126  0179AA  EC36  F0E4         	call	___flsub	;wreg free
 10127  0179AE  0060  F007  FFE6   	movff	btemp,postinc1
 10128  0179B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10129  0179BA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 10130  0179C0  0060  F013  FFE6   	movff	btemp+3,postinc1
 10131  0179C6  EE22  F239         	lfsr	2,_C+314	;volatile
 10132  0179CA  006F FF7B FFE6     	movff	postinc2,postinc1
 10133  0179D0  006F FF7B FFE6     	movff	postinc2,postinc1
 10134  0179D6  006F FF7B FFE6     	movff	postinc2,postinc1
 10135  0179DC  006F FF7B FFE6     	movff	postinc2,postinc1
 10136  0179E2  EE22  F235         	lfsr	2,_C+310	;volatile
 10137  0179E6  006F FF7B FFE6     	movff	postinc2,postinc1
 10138  0179EC  006F FF7B FFE6     	movff	postinc2,postinc1
 10139  0179F2  006F FF7B FFE6     	movff	postinc2,postinc1
 10140  0179F8  006F FF7B FFE6     	movff	postinc2,postinc1
 10141  0179FE  EC36  F0E4         	call	___flsub	;wreg free
 10142  017A02  0060  F007  FFE6   	movff	btemp,postinc1
 10143  017A08  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10144  017A0E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 10145  017A14  0060  F013  FFE6   	movff	btemp+3,postinc1
 10146  017A1A  ECE0  F0A7         	call	___fldiv	;wreg free
 10147  017A1E  0060  F007  FFE6   	movff	btemp,postinc1
 10148  017A24  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10149  017A2A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 10150  017A30  0060  F013  FFE6   	movff	btemp+3,postinc1
 10151  017A36  EC89  F0DA         	call	_fabsf	;wreg free
 10152  017A3A  0060  F004  F987   	movff	btemp,_C+136	;volatile
 10153  017A40  0060  F008  F988   	movff	btemp+1,_C+137	;volatile
 10154  017A46  0060  F00C  F989   	movff	btemp+2,_C+138	;volatile
 10155  017A4C  0060  F010  F98A   	movff	btemp+3,_C+139	;volatile
 10156                           
 10157                           ;bsoc.c: 252:   set_load_relay_one(0);
 10158  017A52  0E00               	movlw	0
 10159  017A54  6EE6               	movwf	postinc1,c
 10160  017A56  EC10  F0EA         	call	_set_load_relay_one	;wreg free
 10161                           
 10162                           ;bsoc.c: 253:   set_load_relay_two(0);
 10163  017A5A  0E00               	movlw	0
 10164  017A5C  6EE6               	movwf	postinc1,c
 10165  017A5E  EC08  F0EA         	call	_set_load_relay_two	;wreg free
 10166                           
 10167                           ;bsoc.c: 254:   esr_state = 0;
 10168  017A62  0100               	movlb	0	; () banked
 10169  017A64  6BCA               	clrf	esr_check@esr_state& (0+255),b
 10170                           
 10171                           ; BSR set to: 0
 10172                           ;bsoc.c: 255:   return C.esr;
 10173  017A66  0062  F61C  F001   	movff	_C+136,btemp	;volatile
 10174  017A6C  0062  F620  F002   	movff	_C+137,btemp+1	;volatile
 10175  017A72  0062  F624  F003   	movff	_C+138,btemp+2	;volatile
 10176  017A78  0062  F628  F004   	movff	_C+139,btemp+3	;volatile
 10177  017A7E  D01D               	goto	l2363
 10178  017A80                     l12164:
 10179  017A80  0100               	movlb	0	; () banked
 10180  017A82  51CA               	movf	esr_check@esr_state& (0+255),w,b
 10181  017A84  6E0B               	movwf	(btemp+10)^0,c
 10182  017A86  6A0C               	clrf	(btemp+11)^0,c
 10183                           
 10184                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10185                           ; Switch size 1, requested type "simple"
 10186                           ; Number of cases is 1, Range of values is 0 to 0
 10187                           ; switch strategies available:
 10188                           ; Name         Instructions Cycles
 10189                           ; simple_byte            4     3 (average)
 10190                           ;	Chosen strategy is simple_byte
 10191  017A88  500C               	movf	(btemp+11)^0,w,c
 10192  017A8A  0A00               	xorlw	0	; case 0
 10193  017A8C  A4D8               	btfss	status,2,c
 10194  017A8E  D00D               	goto	l12166
 10195                           
 10196                           ; BSR set to: 0
 10197                           ; Switch size 1, requested type "simple"
 10198                           ; Number of cases is 4, Range of values is 0 to 3
 10199                           ; switch strategies available:
 10200                           ; Name         Instructions Cycles
 10201                           ; simple_byte           13     7 (average)
 10202                           ;	Chosen strategy is simple_byte
 10203  017A90  500B               	movf	(btemp+10)^0,w,c
 10204  017A92  0A00               	xorlw	0	; case 0
 10205  017A94  B4D8               	btfsc	status,2,c
 10206  017A96  D6B5               	goto	l12096
 10207  017A98  0A01               	xorlw	1	; case 1
 10208  017A9A  B4D8               	btfsc	status,2,c
 10209  017A9C  D6BD               	goto	l12100
 10210  017A9E  0A03               	xorlw	3	; case 2
 10211  017AA0  B4D8               	btfsc	status,2,c
 10212  017AA2  D6ED               	goto	l12116
 10213  017AA4  0A01               	xorlw	1	; case 3
 10214  017AA6  B4D8               	btfsc	status,2,c
 10215  017AA8  D72B               	goto	l12134
 10216  017AAA                     l12166:
 10217                           
 10218                           ; BSR set to: 0
 10219                           ;bsoc.c: 260:  return -1.0;
 10220  017AAA  0E00               	movlw	0
 10221  017AAC  6E01               	movwf	btemp^0,c
 10222  017AAE  0E00               	movlw	0
 10223  017AB0  6E02               	movwf	(btemp+1)^0,c
 10224  017AB2  0E80               	movlw	128
 10225  017AB4  6E03               	movwf	(btemp+2)^0,c
 10226  017AB6  0EBF               	movlw	191
 10227  017AB8                     L6:
 10228  017AB8  6E04               	movwf	(btemp+3)^0,c
 10229  017ABA                     l2363:
 10230                           
 10231                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 10232  017ABA  52E5               	movf	postdec1,f,c
 10233  017ABC  0012               	return		;funcret
 10234  017ABE                     __end_of_esr_check:
 10235                           	opt callstack 0
 10236                           
 10237 ;; *************** function _update_adc_result *****************
 10238 ;; Defined at:
 10239 ;;		line 109 in file "daq.c"
 10240 ;; Parameters:    Size  Location     Type
 10241 ;;		None
 10242 ;; Auto vars:     Size  Location     Type
 10243 ;;		None
 10244 ;; Return value:  Size  Location     Type
 10245 ;;                  1  [STACK] _Bool 
 10246 ;; Registers used:
 10247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
 10248 ;; Tracked objects:
 10249 ;;		On entry : 0/0
 10250 ;;		On exit  : 0/0
 10251 ;;		Unchanged: 0/0
 10252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10257 ;;Total ram usage:        0 bytes
 10258 ;; Hardware stack levels used:    1
 10259 ;; Hardware stack levels required when called:   17
 10260 ;; This function calls:
 10261 ;;		_StartTimer
 10262 ;;		_TimerDone
 10263 ;;		_check_adc_scan
 10264 ;;		_clear_adc_scan
 10265 ;;		_start_adc_scan
 10266 ;; This function is called by:
 10267 ;;		_esr_check
 10268 ;; This function uses a reentrant model
 10269 ;;
 10270                           
 10271                           	psect	text26
 10272  01CAF6                     __ptext26:
 10273                           	opt callstack 0
 10274  01CAF6                     _update_adc_result:
 10275                           	opt callstack 12
 10276                           
 10277                           ;daq.c: 111:  if (R.done) {
 10278                           
 10279                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10280                           ;incstack = 0
 10281  01CAF6  0102               	movlb	2	; () banked
 10282  01CAF8  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 10283  01CAFA  B4D8               	btfsc	status,2,c
 10284  01CAFC  0012               	return	
 10285                           
 10286                           ; BSR set to: 2
 10287                           ;daq.c: 112:   clear_adc_scan();
 10288  01CAFE  EC8D  F0EA         	call	_clear_adc_scan	;wreg free
 10289                           
 10290                           ; BSR set to: 2
 10291                           ;daq.c: 113:   start_adc_scan();
 10292  01CB02  EC48  F0E1         	call	_start_adc_scan	;wreg free
 10293                           
 10294                           ;daq.c: 114:   StartTimer(TMR_ADC, 200);
 10295  01CB06  0EC8               	movlw	200
 10296  01CB08  6EE6               	movwf	postinc1,c
 10297  01CB0A  0E00               	movlw	0
 10298  01CB0C  6EE6               	movwf	postinc1,c
 10299  01CB0E  0E01               	movlw	1
 10300  01CB10  6EE6               	movwf	postinc1,c
 10301  01CB12  ECDC  F0E4         	call	_StartTimer	;wreg free
 10302  01CB16                     l11542:
 10303  01CB16  0E01               	movlw	1
 10304  01CB18  6EE6               	movwf	postinc1,c
 10305  01CB1A  EC69  F0E7         	call	_TimerDone	;wreg free
 10306  01CB1E  5001               	movf	btemp^0,w,c
 10307  01CB20  A4D8               	btfss	status,2,c
 10308  01CB22  0012               	return	
 10309  01CB24  EC76  F0EA         	call	_check_adc_scan	;wreg free
 10310  01CB28  5001               	movf	btemp^0,w,c
 10311  01CB2A  A4D8               	btfss	status,2,c
 10312  01CB2C  0012               	return	
 10313  01CB2E  D7F3               	goto	l11542
 10314  01CB30                     __end_of_update_adc_result:
 10315                           	opt callstack 0
 10316                           
 10317 ;; *************** function _check_adc_scan *****************
 10318 ;; Defined at:
 10319 ;;		line 93 in file "daq.c"
 10320 ;; Parameters:    Size  Location     Type
 10321 ;;		None
 10322 ;; Auto vars:     Size  Location     Type
 10323 ;;		None
 10324 ;; Return value:  Size  Location     Type
 10325 ;;                  1  [STACK] _Bool 
 10326 ;; Registers used:
 10327 ;;		btemp
 10328 ;; Tracked objects:
 10329 ;;		On entry : 0/1
 10330 ;;		On exit  : 0/0
 10331 ;;		Unchanged: 0/0
 10332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10337 ;;Total ram usage:        0 bytes
 10338 ;; Hardware stack levels used:    1
 10339 ;; Hardware stack levels required when called:   15
 10340 ;; This function calls:
 10341 ;;		Nothing
 10342 ;; This function is called by:
 10343 ;;		_main
 10344 ;;		_update_adc_result
 10345 ;; This function uses a reentrant model
 10346 ;;
 10347                           
 10348                           	psect	text27
 10349  01D4EC                     __ptext27:
 10350                           	opt callstack 0
 10351  01D4EC                     _check_adc_scan:
 10352                           	opt callstack 13
 10353                           
 10354                           ;daq.c: 95:  return R.done;
 10355                           
 10356                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10357                           ;incstack = 0
 10358  01D4EC  0060  F8D4  F001   	movff	_R+53,btemp	;volatile
 10359                           
 10360                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 10361  01D4F2  0012               	return		;funcret
 10362  01D4F4                     __end_of_check_adc_scan:
 10363                           	opt callstack 0
 10364                           
 10365 ;; *************** function _set_load_relay_two *****************
 10366 ;; Defined at:
 10367 ;;		line 131 in file "mbmc.c"
 10368 ;; Parameters:    Size  Location     Type
 10369 ;;  mode            1  [STACK] const _Bool 
 10370 ;; Auto vars:     Size  Location     Type
 10371 ;;		None
 10372 ;; Return value:  Size  Location     Type
 10373 ;;                  1  [STACK] void 
 10374 ;; Registers used:
 10375 ;;		wreg, fsr1l, fsr1h
 10376 ;; Tracked objects:
 10377 ;;		On entry : 0/0
 10378 ;;		On exit  : 0/0
 10379 ;;		Unchanged: 0/0
 10380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10385 ;;Total ram usage:        0 bytes
 10386 ;; Hardware stack levels used:    1
 10387 ;; Hardware stack levels required when called:   15
 10388 ;; This function calls:
 10389 ;;		Nothing
 10390 ;; This function is called by:
 10391 ;;		_main
 10392 ;;		_esr_check
 10393 ;; This function uses a reentrant model
 10394 ;;
 10395                           
 10396                           	psect	text28
 10397  01D410                     __ptext28:
 10398                           	opt callstack 0
 10399  01D410                     _set_load_relay_two:
 10400                           	opt callstack 15
 10401                           
 10402                           ;mbmc.c: 131: void set_load_relay_two(const _Bool mode);mbmc.c: 132: {;mbmc.c: 133:  LAT
      +                          Dbits.LATD5 = mode;
 10403                           ;stkvar	_mode @ sp[(0)+-1]
 10404                           
 10405                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10406                           ;incstack = 0
 10407  01D410  0EFF               	movlw	-1
 10408  01D412  B0E3               	btfsc	plusw1,0,c
 10409  01D414  D002               	bra	u10265
 10410  01D416  9ABD               	bcf	189,5,c	;volatile
 10411  01D418  D001               	bra	u10266
 10412  01D41A                     u10265:
 10413  01D41A  8ABD               	bsf	189,5,c	;volatile
 10414  01D41C                     u10266:
 10415                           
 10416                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 10417  01D41C  52E5               	movf	postdec1,f,c
 10418  01D41E  0012               	return		;funcret
 10419  01D420                     __end_of_set_load_relay_two:
 10420                           	opt callstack 0
 10421                           
 10422 ;; *************** function _set_load_relay_one *****************
 10423 ;; Defined at:
 10424 ;;		line 126 in file "mbmc.c"
 10425 ;; Parameters:    Size  Location     Type
 10426 ;;  mode            1  [STACK] const _Bool 
 10427 ;; Auto vars:     Size  Location     Type
 10428 ;;		None
 10429 ;; Return value:  Size  Location     Type
 10430 ;;                  1  [STACK] void 
 10431 ;; Registers used:
 10432 ;;		wreg, fsr1l, fsr1h
 10433 ;; Tracked objects:
 10434 ;;		On entry : 0/0
 10435 ;;		On exit  : 0/0
 10436 ;;		Unchanged: 0/0
 10437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10442 ;;Total ram usage:        0 bytes
 10443 ;; Hardware stack levels used:    1
 10444 ;; Hardware stack levels required when called:   15
 10445 ;; This function calls:
 10446 ;;		Nothing
 10447 ;; This function is called by:
 10448 ;;		_main
 10449 ;;		_esr_check
 10450 ;; This function uses a reentrant model
 10451 ;;
 10452                           
 10453                           	psect	text29
 10454  01D420                     __ptext29:
 10455                           	opt callstack 0
 10456  01D420                     _set_load_relay_one:
 10457                           	opt callstack 15
 10458                           
 10459                           ;mbmc.c: 126: void set_load_relay_one(const _Bool mode);mbmc.c: 127: {;mbmc.c: 128:  LAT
      +                          Dbits.LATD4 = mode;
 10460                           ;stkvar	_mode @ sp[(0)+-1]
 10461                           
 10462                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10463                           ;incstack = 0
 10464  01D420  0EFF               	movlw	-1
 10465  01D422  B0E3               	btfsc	plusw1,0,c
 10466  01D424  D002               	bra	u10255
 10467  01D426  98BD               	bcf	189,4,c	;volatile
 10468  01D428  D001               	bra	u10256
 10469  01D42A                     u10255:
 10470  01D42A  88BD               	bsf	189,4,c	;volatile
 10471  01D42C                     u10256:
 10472                           
 10473                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 10474  01D42C  52E5               	movf	postdec1,f,c
 10475  01D42E  0012               	return		;funcret
 10476  01D430                     __end_of_set_load_relay_one:
 10477                           	opt callstack 0
 10478                           
 10479 ;; *************** function _eaDogM_WriteCommand *****************
 10480 ;; Defined at:
 10481 ;;		line 385 in file "eadog.c"
 10482 ;; Parameters:    Size  Location     Type
 10483 ;;  cmd             1  [STACK] const unsigned char 
 10484 ;; Auto vars:     Size  Location     Type
 10485 ;;		None
 10486 ;; Return value:  Size  Location     Type
 10487 ;;                  1  [STACK] void 
 10488 ;; Registers used:
 10489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10490 ;; Tracked objects:
 10491 ;;		On entry : 3F/3D
 10492 ;;		On exit  : 3F/0
 10493 ;;		Unchanged: 0/0
 10494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10499 ;;Total ram usage:        0 bytes
 10500 ;; Hardware stack levels used:    1
 10501 ;; Hardware stack levels required when called:   26
 10502 ;; This function calls:
 10503 ;;		_send_lcd_cmd_dma
 10504 ;; This function is called by:
 10505 ;;		_main
 10506 ;; This function uses a reentrant model
 10507 ;;
 10508                           
 10509                           	psect	text30
 10510  01D460                     __ptext30:
 10511                           	opt callstack 0
 10512  01D460                     _eaDogM_WriteCommand:
 10513                           	opt callstack 4
 10514                           
 10515                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
 10516                           ;stkvar	_cmd @ sp[(0)+-1]
 10517                           
 10518                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10519                           ;incstack = 0
 10520  01D460  0EFF               	movlw	-1
 10521  01D462  50E3               	movf	plusw1,w,c
 10522  01D464  6EE6               	movwf	postinc1,c
 10523  01D466  EC50  F0E9         	call	_send_lcd_cmd_dma	;wreg free
 10524                           
 10525                           ; BSR set to: 0
 10526                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 10527  01D46A  52E5               	movf	postdec1,f,c
 10528  01D46C  0012               	return		;funcret
 10529  01D46E                     __end_of_eaDogM_WriteCommand:
 10530                           	opt callstack 0
 10531                           
 10532 ;; *************** function _current_sensor_cal *****************
 10533 ;; Defined at:
 10534 ;;		line 501 in file "main.c"
 10535 ;; Parameters:    Size  Location     Type
 10536 ;;		None
 10537 ;; Auto vars:     Size  Location     Type
 10538 ;;  cp              4  [STACK] unsigned long 
 10539 ;;  cb              4  [STACK] unsigned long 
 10540 ;;  x               1  [STACK] unsigned char 
 10541 ;; Return value:  Size  Location     Type
 10542 ;;                  1  [STACK] _Bool 
 10543 ;; Registers used:
 10544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10545 ;; Tracked objects:
 10546 ;;		On entry : 0/1
 10547 ;;		On exit  : 0/0
 10548 ;;		Unchanged: 0/0
 10549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10554 ;;Total ram usage:        0 bytes
 10555 ;; Hardware stack levels used:    1
 10556 ;; Hardware stack levels required when called:   28
 10557 ;; This function calls:
 10558 ;;		_WaitMs
 10559 ;;		_cal_current_zero
 10560 ;;		_clear_adc_scan
 10561 ;;		_get_raw_result
 10562 ;;		_get_switch
 10563 ;;		_get_vterm_ptr
 10564 ;;		_spinners
 10565 ;;		_sprintf
 10566 ;;		_start_adc_scan
 10567 ;;		_update_lcd
 10568 ;;		_write_cal_data
 10569 ;; This function is called by:
 10570 ;;		_main
 10571 ;; This function uses a reentrant model
 10572 ;;
 10573                           
 10574                           	psect	text31
 10575  015E76                     __ptext31:
 10576                           	opt callstack 0
 10577  015E76                     _current_sensor_cal:
 10578                           	opt callstack 0
 10579                           
 10580                           ; BSR set to: 0
 10581                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10582  015E76  0E09               	movlw	9
 10583  015E78  26E1               	addwf	fsr1l,f,c
 10584  015E7A  0E00               	movlw	0
 10585  015E7C  22E2               	addwfc	fsr1h,f,c
 10586                           
 10587                           ;main.c: 503:  uint8_t x = 0;
 10588                           ;stkvar	_x @ sp[(-9)+8]
 10589                           
 10590                           ;incstack = 0
 10591  015E7E  0EFF               	movlw	-1
 10592  015E80  6AE3               	clrf	plusw1,c
 10593                           
 10594                           ;main.c: 504:  uint32_t cb = 0, cp = 0;
 10595                           ;stkvar	_cb @ sp[(-9)+4]
 10596  015E82  0EFB               	movlw	-5
 10597  015E84  6AE3               	clrf	plusw1,c
 10598  015E86  0EFC               	movlw	-4
 10599  015E88  6AE3               	clrf	plusw1,c
 10600  015E8A  0EFD               	movlw	-3
 10601  015E8C  6AE3               	clrf	plusw1,c
 10602  015E8E  0EFE               	movlw	-2
 10603  015E90  6AE3               	clrf	plusw1,c
 10604                           
 10605                           ;stkvar	_cp @ sp[(-9)+0]
 10606  015E92  0EF7               	movlw	-9
 10607  015E94  6AE3               	clrf	plusw1,c
 10608  015E96  0EF8               	movlw	-8
 10609  015E98  6AE3               	clrf	plusw1,c
 10610  015E9A  0EF9               	movlw	-7
 10611  015E9C  6AE3               	clrf	plusw1,c
 10612  015E9E  0EFA               	movlw	-6
 10613  015EA0  6AE3               	clrf	plusw1,c
 10614                           
 10615                           ;main.c: 506:  sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 10616  015EA2  0E76               	movlw	low STR_49
 10617  015EA4  6EE6               	movwf	postinc1,c
 10618  015EA6  0EFE               	movlw	high STR_49
 10619  015EA8  6EE6               	movwf	postinc1,c
 10620  015EAA  0E00               	movlw	0
 10621  015EAC  6EE6               	movwf	postinc1,c
 10622  015EAE  0E00               	movlw	0
 10623  015EB0  6EE6               	movwf	postinc1,c
 10624  015EB2  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
 10625  015EB6  0060  F007  FFE6   	movff	btemp,postinc1
 10626  015EBC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10627  015EC2  0E04               	movlw	4
 10628  015EC4  6EE6               	movwf	postinc1,c
 10629  015EC6  EC94  F0D5         	call	_sprintf	;wreg free
 10630                           
 10631                           ; BSR set to: 0
 10632                           ;main.c: 507:  sprintf(get_vterm_ptr(1, 0), "Sensor Zero         ");
 10633  015ECA  0E22               	movlw	low STR_50
 10634  015ECC  6EE6               	movwf	postinc1,c
 10635  015ECE  0EFE               	movlw	high STR_50
 10636  015ED0  6EE6               	movwf	postinc1,c
 10637  015ED2  0E00               	movlw	0
 10638  015ED4  6EE6               	movwf	postinc1,c
 10639  015ED6  0E01               	movlw	1
 10640  015ED8  6EE6               	movwf	postinc1,c
 10641  015EDA  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
 10642  015EDE  0060  F007  FFE6   	movff	btemp,postinc1
 10643  015EE4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10644  015EEA  0E04               	movlw	4
 10645  015EEC  6EE6               	movwf	postinc1,c
 10646  015EEE  EC94  F0D5         	call	_sprintf	;wreg free
 10647                           
 10648                           ; BSR set to: 0
 10649                           ;main.c: 508:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
 10650  015EF2  0E0D               	movlw	low STR_51
 10651  015EF4  6EE6               	movwf	postinc1,c
 10652  015EF6  0EFE               	movlw	high STR_51
 10653  015EF8  6EE6               	movwf	postinc1,c
 10654  015EFA  0E00               	movlw	0
 10655  015EFC  6EE6               	movwf	postinc1,c
 10656  015EFE  0E02               	movlw	2
 10657  015F00  6EE6               	movwf	postinc1,c
 10658  015F02  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
 10659  015F06  0060  F007  FFE6   	movff	btemp,postinc1
 10660  015F0C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10661  015F12  0E04               	movlw	4
 10662  015F14  6EE6               	movwf	postinc1,c
 10663  015F16  EC94  F0D5         	call	_sprintf	;wreg free
 10664                           
 10665                           ; BSR set to: 0
 10666                           ;main.c: 509:  update_lcd(0);
 10667  015F1A  0E00               	movlw	0
 10668  015F1C  6EE6               	movwf	postinc1,c
 10669  015F1E  EC0C  F0D5         	call	_update_lcd	;wreg free
 10670                           
 10671                           ;main.c: 510:  WaitMs(2000);
 10672  015F22  0ED0               	movlw	208
 10673  015F24  6EE6               	movwf	postinc1,c
 10674  015F26  0E07               	movlw	7
 10675  015F28  6EE6               	movwf	postinc1,c
 10676  015F2A  ECD0  F0E5         	call	_WaitMs	;wreg free
 10677  015F2E                     l14334:
 10678                           
 10679                           ;main.c: 512:   if (++x > 64)
 10680                           ;stkvar	_x @ sp[(-9)+8]
 10681  015F2E  0EFF               	movlw	-1
 10682  015F30  2AE3               	incf	plusw1,f,c
 10683  015F32  0EFF               	movlw	-1
 10684  015F34  006F FF8C  F001    	movff	plusw1,btemp
 10685  015F3A  0E40               	movlw	64
 10686  015F3C  6401               	cpfsgt	btemp^0,c
 10687  015F3E  D001               	goto	l14338
 10688  015F40  D1CF               	goto	l1504
 10689  015F42                     l14338:
 10690                           
 10691                           ;main.c: 514:   sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
 10692  015F42  0E00               	movlw	0
 10693  015F44  6EE6               	movwf	postinc1,c
 10694  015F46  0E04               	movlw	4
 10695  015F48  6EE6               	movwf	postinc1,c
 10696  015F4A  EC8E  F0D6         	call	_spinners	;wreg free
 10697  015F4E  5001               	movf	btemp^0,w,c
 10698  015F50  6EE6               	movwf	postinc1,c
 10699  015F52  0E00               	movlw	0
 10700  015F54  6EE6               	movwf	postinc1,c
 10701  015F56  0E48               	movlw	low STR_52
 10702  015F58  6EE6               	movwf	postinc1,c
 10703  015F5A  0EFF               	movlw	high STR_52
 10704  015F5C  6EE6               	movwf	postinc1,c
 10705  015F5E  0E00               	movlw	0
 10706  015F60  6EE6               	movwf	postinc1,c
 10707  015F62  0E02               	movlw	2
 10708  015F64  6EE6               	movwf	postinc1,c
 10709  015F66  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
 10710  015F6A  0060  F007  FFE6   	movff	btemp,postinc1
 10711  015F70  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10712  015F76  0E06               	movlw	6
 10713  015F78  6EE6               	movwf	postinc1,c
 10714  015F7A  EC94  F0D5         	call	_sprintf	;wreg free
 10715                           
 10716                           ;main.c: 515:   update_lcd(0);
 10717  015F7E  0E00               	movlw	0
 10718  015F80  6EE6               	movwf	postinc1,c
 10719  015F82  EC0C  F0D5         	call	_update_lcd	;wreg free
 10720                           
 10721                           ;main.c: 516:   WaitMs(100);
 10722  015F86  0E64               	movlw	100
 10723  015F88  6EE6               	movwf	postinc1,c
 10724  015F8A  0E00               	movlw	0
 10725  015F8C  6EE6               	movwf	postinc1,c
 10726  015F8E  ECD0  F0E5         	call	_WaitMs	;wreg free
 10727                           
 10728                           ;main.c: 517:  } while (get_switch(SCALIB));
 10729  015F92  0E04               	movlw	4
 10730  015F94  6EE6               	movwf	postinc1,c
 10731  015F96  ECFD  F0E6         	call	_get_switch	;wreg free
 10732  015F9A  5001               	movf	btemp^0,w,c
 10733  015F9C  A4D8               	btfss	status,2,c
 10734  015F9E  D7C7               	goto	l14334
 10735                           
 10736                           ;main.c: 519:  x = 0;
 10737                           ;stkvar	_x @ sp[(-9)+8]
 10738  015FA0  0EFF               	movlw	-1
 10739  015FA2  6AE3               	clrf	plusw1,c
 10740  015FA4                     l14346:
 10741                           
 10742                           ;main.c: 521:   cb += get_raw_result(C_BATT);
 10743  015FA4  0E00               	movlw	0
 10744  015FA6  6EE6               	movwf	postinc1,c
 10745  015FA8  ECFF  F0E8         	call	_get_raw_result	;wreg free
 10746                           
 10747                           ;stkvar	_cb @ sp[(-9)+4]
 10748  015FAC  50E1               	movf	fsr1l,w,c
 10749  015FAE  0FFB               	addlw	-5
 10750  015FB0  6ED9               	movwf	fsr2l,c
 10751  015FB2  50E2               	movf	fsr1h,w,c
 10752  015FB4  6EDA               	movwf	fsr2h,c
 10753  015FB6  0EFF               	movlw	255
 10754  015FB8  22DA               	addwfc	fsr2h,f,c
 10755  015FBA  5001               	movf	btemp^0,w,c
 10756  015FBC  26DE               	addwf	postinc2,f,c
 10757  015FBE  5002               	movf	(btemp+1)^0,w,c
 10758  015FC0  22DE               	addwfc	postinc2,f,c
 10759  015FC2  0E00               	movlw	0
 10760  015FC4  22DE               	addwfc	postinc2,f,c
 10761  015FC6  22DE               	addwfc	postinc2,f,c
 10762                           
 10763                           ;main.c: 522:   cp += get_raw_result(C_PV);
 10764  015FC8  0E01               	movlw	1
 10765  015FCA  6EE6               	movwf	postinc1,c
 10766  015FCC  ECFF  F0E8         	call	_get_raw_result	;wreg free
 10767                           
 10768                           ;stkvar	_cp @ sp[(-9)+0]
 10769  015FD0  50E1               	movf	fsr1l,w,c
 10770  015FD2  0FF7               	addlw	-9
 10771  015FD4  6ED9               	movwf	fsr2l,c
 10772  015FD6  50E2               	movf	fsr1h,w,c
 10773  015FD8  6EDA               	movwf	fsr2h,c
 10774  015FDA  0EFF               	movlw	255
 10775  015FDC  22DA               	addwfc	fsr2h,f,c
 10776  015FDE  5001               	movf	btemp^0,w,c
 10777  015FE0  26DE               	addwf	postinc2,f,c
 10778  015FE2  5002               	movf	(btemp+1)^0,w,c
 10779  015FE4  22DE               	addwfc	postinc2,f,c
 10780  015FE6  0E00               	movlw	0
 10781  015FE8  22DE               	addwfc	postinc2,f,c
 10782  015FEA  22DE               	addwfc	postinc2,f,c
 10783                           
 10784                           ;main.c: 523:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings     ");
 10785  015FEC  0EB5               	movlw	low STR_53
 10786  015FEE  6EE6               	movwf	postinc1,c
 10787  015FF0  0EFE               	movlw	high STR_53
 10788  015FF2  6EE6               	movwf	postinc1,c
 10789  015FF4  0E00               	movlw	0
 10790  015FF6  6EE6               	movwf	postinc1,c
 10791  015FF8  0E00               	movlw	0
 10792  015FFA  6EE6               	movwf	postinc1,c
 10793  015FFC  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
 10794  016000  0060  F007  FFE6   	movff	btemp,postinc1
 10795  016006  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10796  01600C  0E04               	movlw	4
 10797  01600E  6EE6               	movwf	postinc1,c
 10798  016010  EC94  F0D5         	call	_sprintf	;wreg free
 10799                           
 10800                           ; BSR set to: 0
 10801                           ;main.c: 524:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 10802  016014  0E01               	movlw	1
 10803  016016  6EE6               	movwf	postinc1,c
 10804  016018  ECFF  F0E8         	call	_get_raw_result	;wreg free
 10805  01601C  0060  F007  FFE6   	movff	btemp,postinc1
 10806  016022  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10807  016028  0E00               	movlw	0
 10808  01602A  6EE6               	movwf	postinc1,c
 10809  01602C  ECFF  F0E8         	call	_get_raw_result	;wreg free
 10810  016030  0060  F007  FFE6   	movff	btemp,postinc1
 10811  016036  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10812  01603C  0E7A               	movlw	low STR_54
 10813  01603E  6EE6               	movwf	postinc1,c
 10814  016040  0EFD               	movlw	high STR_54
 10815  016042  6EE6               	movwf	postinc1,c
 10816  016044  0E00               	movlw	0
 10817  016046  6EE6               	movwf	postinc1,c
 10818  016048  0E01               	movlw	1
 10819  01604A  6EE6               	movwf	postinc1,c
 10820  01604C  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
 10821  016050  0060  F007  FFE6   	movff	btemp,postinc1
 10822  016056  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10823  01605C  0E08               	movlw	8
 10824  01605E  6EE6               	movwf	postinc1,c
 10825  016060  EC94  F0D5         	call	_sprintf	;wreg free
 10826                           
 10827                           ; BSR set to: 0
 10828                           ;main.c: 525:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d  ", x);
 10829                           ;stkvar	_x @ sp[(-9)+8]
 10830  016064  0EFF               	movlw	-1
 10831  016066  50E3               	movf	plusw1,w,c
 10832  016068  6EE6               	movwf	postinc1,c
 10833  01606A  0E00               	movlw	0
 10834  01606C  6EE6               	movwf	postinc1,c
 10835  01606E  0E09               	movlw	low STR_55
 10836  016070  6EE6               	movwf	postinc1,c
 10837  016072  0EFF               	movlw	high STR_55
 10838  016074  6EE6               	movwf	postinc1,c
 10839  016076  0E00               	movlw	0
 10840  016078  6EE6               	movwf	postinc1,c
 10841  01607A  0E02               	movlw	2
 10842  01607C  6EE6               	movwf	postinc1,c
 10843  01607E  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
 10844  016082  0060  F007  FFE6   	movff	btemp,postinc1
 10845  016088  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10846  01608E  0E06               	movlw	6
 10847  016090  6EE6               	movwf	postinc1,c
 10848  016092  EC94  F0D5         	call	_sprintf	;wreg free
 10849                           
 10850                           ; BSR set to: 0
 10851                           ;main.c: 526:   update_lcd(0);
 10852  016096  0E00               	movlw	0
 10853  016098  6EE6               	movwf	postinc1,c
 10854  01609A  EC0C  F0D5         	call	_update_lcd	;wreg free
 10855                           
 10856                           ;main.c: 527:   clear_adc_scan();
 10857  01609E  EC8D  F0EA         	call	_clear_adc_scan	;wreg free
 10858                           
 10859                           ; BSR set to: 2
 10860                           ;main.c: 528:   start_adc_scan();
 10861  0160A2  EC48  F0E1         	call	_start_adc_scan	;wreg free
 10862                           
 10863                           ;main.c: 529:   WaitMs(100);
 10864  0160A6  0E64               	movlw	100
 10865  0160A8  6EE6               	movwf	postinc1,c
 10866  0160AA  0E00               	movlw	0
 10867  0160AC  6EE6               	movwf	postinc1,c
 10868  0160AE  ECD0  F0E5         	call	_WaitMs	;wreg free
 10869                           
 10870                           ;main.c: 530:  } while (++x < 64);
 10871                           ;stkvar	_x @ sp[(-9)+8]
 10872  0160B2  0EFF               	movlw	-1
 10873  0160B4  2AE3               	incf	plusw1,f,c
 10874  0160B6  0EFF               	movlw	-1
 10875  0160B8  006F FF8C  F001    	movff	plusw1,btemp
 10876  0160BE  0E3F               	movlw	63
 10877  0160C0  6401               	cpfsgt	btemp^0,c
 10878  0160C2  D770               	goto	l14346
 10879                           
 10880                           ;main.c: 531:  cb = cb >> 6;
 10881  0160C4  0E06               	movlw	6
 10882  0160C6  6E0C               	movwf	(btemp+11)^0,c
 10883                           
 10884                           ;stkvar	_cb @ sp[(-9)+4]
 10885  0160C8  50E1               	movf	fsr1l,w,c
 10886  0160CA  0FFB               	addlw	-5
 10887  0160CC  6ED9               	movwf	fsr2l,c
 10888  0160CE  50E2               	movf	fsr1h,w,c
 10889  0160D0  6EDA               	movwf	fsr2h,c
 10890  0160D2  0EFF               	movlw	255
 10891  0160D4  22DA               	addwfc	fsr2h,f,c
 10892  0160D6  280C               	incf	(btemp+11)^0,w,c
 10893  0160D8  52DE               	movf	postinc2,f,c
 10894  0160DA  D007               	goto	u13700
 10895  0160DC                     u13705:
 10896  0160DC  52DE               	movf	postinc2,f,c
 10897  0160DE  52DE               	movf	postinc2,f,c
 10898  0160E0  90D8               	bcf	status,0,c
 10899  0160E2  32DD               	rrcf	postdec2,f,c
 10900  0160E4  32DD               	rrcf	postdec2,f,c
 10901  0160E6  32DD               	rrcf	postdec2,f,c
 10902  0160E8  32DE               	rrcf	postinc2,f,c
 10903  0160EA                     u13700:
 10904  0160EA  2EE8               	decfsz	wreg,f,c
 10905  0160EC  D7F7               	goto	u13705
 10906                           
 10907                           ;main.c: 532:  cp = cp >> 6;
 10908  0160EE  0E06               	movlw	6
 10909  0160F0  6E0C               	movwf	(btemp+11)^0,c
 10910                           
 10911                           ;stkvar	_cp @ sp[(-9)+0]
 10912  0160F2  50E1               	movf	fsr1l,w,c
 10913  0160F4  0FF7               	addlw	-9
 10914  0160F6  6ED9               	movwf	fsr2l,c
 10915  0160F8  50E2               	movf	fsr1h,w,c
 10916  0160FA  6EDA               	movwf	fsr2h,c
 10917  0160FC  0EFF               	movlw	255
 10918  0160FE  22DA               	addwfc	fsr2h,f,c
 10919  016100  280C               	incf	(btemp+11)^0,w,c
 10920  016102  52DE               	movf	postinc2,f,c
 10921  016104  D007               	goto	u13710
 10922  016106                     u13715:
 10923  016106  52DE               	movf	postinc2,f,c
 10924  016108  52DE               	movf	postinc2,f,c
 10925  01610A  90D8               	bcf	status,0,c
 10926  01610C  32DD               	rrcf	postdec2,f,c
 10927  01610E  32DD               	rrcf	postdec2,f,c
 10928  016110  32DD               	rrcf	postdec2,f,c
 10929  016112  32DE               	rrcf	postinc2,f,c
 10930  016114                     u13710:
 10931  016114  2EE8               	decfsz	wreg,f,c
 10932  016116  D7F7               	goto	u13715
 10933                           
 10934                           ;main.c: 534:  if (cal_current_zero(0, cb, cp)) {
 10935                           ;stkvar	_cp @ sp[(-9)+0]
 10936  016118  0EF7               	movlw	-9
 10937  01611A  006F FF8F FFE6     	movff	plusw1,postinc1
 10938  016120  006F FF8F FFE6     	movff	plusw1,postinc1
 10939                           
 10940                           ;stkvar	_cb @ sp[(-11)+4]
 10941  016126  0EF9               	movlw	-7
 10942  016128  006F FF8F FFE6     	movff	plusw1,postinc1
 10943  01612E  006F FF8F FFE6     	movff	plusw1,postinc1
 10944  016134  0E00               	movlw	0
 10945  016136  6EE6               	movwf	postinc1,c
 10946  016138  EC25  F0DD         	call	_cal_current_zero	;wreg free
 10947  01613C  5001               	movf	btemp^0,w,c
 10948  01613E  B4D8               	btfsc	status,2,c
 10949  016140  D075               	goto	l14384
 10950                           
 10951                           ;main.c: 535:   cal_current_zero(1, cb, cp);
 10952                           ;stkvar	_cp @ sp[(-9)+0]
 10953  016142  0EF7               	movlw	-9
 10954  016144  006F FF8F FFE6     	movff	plusw1,postinc1
 10955  01614A  006F FF8F FFE6     	movff	plusw1,postinc1
 10956                           
 10957                           ;stkvar	_cb @ sp[(-11)+4]
 10958  016150  0EF9               	movlw	-7
 10959  016152  006F FF8F FFE6     	movff	plusw1,postinc1
 10960  016158  006F FF8F FFE6     	movff	plusw1,postinc1
 10961  01615E  0E01               	movlw	1
 10962  016160  6EE6               	movwf	postinc1,c
 10963  016162  EC25  F0DD         	call	_cal_current_zero	;wreg free
 10964                           
 10965                           ;main.c: 536:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 10966  016166  0E76               	movlw	low STR_49
 10967  016168  6EE6               	movwf	postinc1,c
 10968  01616A  0EFE               	movlw	high STR_49
 10969  01616C  6EE6               	movwf	postinc1,c
 10970  01616E  0E00               	movlw	0
 10971  016170  6EE6               	movwf	postinc1,c
 10972  016172  0E00               	movlw	0
 10973  016174  6EE6               	movwf	postinc1,c
 10974  016176  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
 10975  01617A  0060  F007  FFE6   	movff	btemp,postinc1
 10976  016180  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10977  016186  0E04               	movlw	4
 10978  016188  6EE6               	movwf	postinc1,c
 10979  01618A  EC94  F0D5         	call	_sprintf	;wreg free
 10980                           
 10981                           ; BSR set to: 0
 10982                           ;main.c: 537:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", cb, cp);
 10983                           ;stkvar	_cp @ sp[(-9)+0]
 10984  01618E  0EF7               	movlw	-9
 10985  016190  006F FF8F FFE6     	movff	plusw1,postinc1
 10986  016196  006F FF8F FFE6     	movff	plusw1,postinc1
 10987  01619C  006F FF8F FFE6     	movff	plusw1,postinc1
 10988  0161A2  006F FF8F FFE6     	movff	plusw1,postinc1
 10989                           
 10990                           ;stkvar	_cb @ sp[(-13)+4]
 10991  0161A8  0EF7               	movlw	-9
 10992  0161AA  006F FF8F FFE6     	movff	plusw1,postinc1
 10993  0161B0  006F FF8F FFE6     	movff	plusw1,postinc1
 10994  0161B6  006F FF8F FFE6     	movff	plusw1,postinc1
 10995  0161BC  006F FF8F FFE6     	movff	plusw1,postinc1
 10996  0161C2  0E8F               	movlw	low STR_57
 10997  0161C4  6EE6               	movwf	postinc1,c
 10998  0161C6  0EFD               	movlw	high STR_57
 10999  0161C8  6EE6               	movwf	postinc1,c
 11000  0161CA  0E00               	movlw	0
 11001  0161CC  6EE6               	movwf	postinc1,c
 11002  0161CE  0E01               	movlw	1
 11003  0161D0  6EE6               	movwf	postinc1,c
 11004  0161D2  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
 11005  0161D6  0060  F007  FFE6   	movff	btemp,postinc1
 11006  0161DC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11007  0161E2  0E0C               	movlw	12
 11008  0161E4  6EE6               	movwf	postinc1,c
 11009  0161E6  EC94  F0D5         	call	_sprintf	;wreg free
 11010                           
 11011                           ; BSR set to: 0
 11012                           ;main.c: 538:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set        ");
 11013  0161EA  0E4C               	movlw	low STR_58
 11014  0161EC  6EE6               	movwf	postinc1,c
 11015  0161EE  0EFE               	movlw	high STR_58
 11016  0161F0  6EE6               	movwf	postinc1,c
 11017  0161F2  0E00               	movlw	0
 11018  0161F4  6EE6               	movwf	postinc1,c
 11019  0161F6  0E02               	movlw	2
 11020  0161F8  6EE6               	movwf	postinc1,c
 11021  0161FA  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
 11022  0161FE  0060  F007  FFE6   	movff	btemp,postinc1
 11023  016204  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11024  01620A  0E04               	movlw	4
 11025  01620C  6EE6               	movwf	postinc1,c
 11026  01620E  EC94  F0D5         	call	_sprintf	;wreg free
 11027                           
 11028                           ; BSR set to: 0
 11029                           ;main.c: 539:   update_lcd(0);
 11030  016212  0E00               	movlw	0
 11031  016214  6EE6               	movwf	postinc1,c
 11032  016216  EC0C  F0D5         	call	_update_lcd	;wreg free
 11033                           
 11034                           ;main.c: 540:   WaitMs(2000);
 11035  01621A  0ED0               	movlw	208
 11036  01621C  6EE6               	movwf	postinc1,c
 11037  01621E  0E07               	movlw	7
 11038  016220  6EE6               	movwf	postinc1,c
 11039  016222  ECD0  F0E5         	call	_WaitMs	;wreg free
 11040                           
 11041                           ;main.c: 541:   write_cal_data();
 11042  016226  EC8F  F0CE         	call	_write_cal_data	;wreg free
 11043                           
 11044                           ;main.c: 542:  } else {
 11045  01622A  D05A               	goto	l1504
 11046  01622C                     l14384:
 11047                           
 11048                           ;main.c: 543:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 11049  01622C  0E76               	movlw	low STR_49
 11050  01622E  6EE6               	movwf	postinc1,c
 11051  016230  0EFE               	movlw	high STR_49
 11052  016232  6EE6               	movwf	postinc1,c
 11053  016234  0E00               	movlw	0
 11054  016236  6EE6               	movwf	postinc1,c
 11055  016238  0E00               	movlw	0
 11056  01623A  6EE6               	movwf	postinc1,c
 11057  01623C  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
 11058  016240  0060  F007  FFE6   	movff	btemp,postinc1
 11059  016246  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11060  01624C  0E04               	movlw	4
 11061  01624E  6EE6               	movwf	postinc1,c
 11062  016250  EC94  F0D5         	call	_sprintf	;wreg free
 11063                           
 11064                           ;main.c: 544:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 11065  016254  0E01               	movlw	1
 11066  016256  6EE6               	movwf	postinc1,c
 11067  016258  ECFF  F0E8         	call	_get_raw_result	;wreg free
 11068  01625C  0060  F007  FFE6   	movff	btemp,postinc1
 11069  016262  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11070  016268  0E00               	movlw	0
 11071  01626A  6EE6               	movwf	postinc1,c
 11072  01626C  ECFF  F0E8         	call	_get_raw_result	;wreg free
 11073  016270  0060  F007  FFE6   	movff	btemp,postinc1
 11074  016276  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11075  01627C  0E8F               	movlw	low STR_57
 11076  01627E  6EE6               	movwf	postinc1,c
 11077  016280  0EFD               	movlw	high STR_57
 11078  016282  6EE6               	movwf	postinc1,c
 11079  016284  0E00               	movlw	0
 11080  016286  6EE6               	movwf	postinc1,c
 11081  016288  0E01               	movlw	1
 11082  01628A  6EE6               	movwf	postinc1,c
 11083  01628C  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
 11084  016290  0060  F007  FFE6   	movff	btemp,postinc1
 11085  016296  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11086  01629C  0E08               	movlw	8
 11087  01629E  6EE6               	movwf	postinc1,c
 11088  0162A0  EC94  F0D5         	call	_sprintf	;wreg free
 11089                           
 11090                           ;main.c: 545:   sprintf(get_vterm_ptr(2, 0), "Zero Out Of Range   ");
 11091  0162A4  0EF4               	movlw	low STR_61
 11092  0162A6  6EE6               	movwf	postinc1,c
 11093  0162A8  0EFE               	movlw	high STR_61
 11094  0162AA  6EE6               	movwf	postinc1,c
 11095  0162AC  0E00               	movlw	0
 11096  0162AE  6EE6               	movwf	postinc1,c
 11097  0162B0  0E02               	movlw	2
 11098  0162B2  6EE6               	movwf	postinc1,c
 11099  0162B4  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
 11100  0162B8  0060  F007  FFE6   	movff	btemp,postinc1
 11101  0162BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11102  0162C4  0E04               	movlw	4
 11103  0162C6  6EE6               	movwf	postinc1,c
 11104  0162C8  EC94  F0D5         	call	_sprintf	;wreg free
 11105                           
 11106                           ;main.c: 546:   update_lcd(0);
 11107  0162CC  0E00               	movlw	0
 11108  0162CE  6EE6               	movwf	postinc1,c
 11109  0162D0  EC0C  F0D5         	call	_update_lcd	;wreg free
 11110                           
 11111                           ;main.c: 547:   WaitMs(2000);
 11112  0162D4  0ED0               	movlw	208
 11113  0162D6  6EE6               	movwf	postinc1,c
 11114  0162D8  0E07               	movlw	7
 11115  0162DA  6EE6               	movwf	postinc1,c
 11116  0162DC  ECD0  F0E5         	call	_WaitMs	;wreg free
 11117  0162E0                     l1504:
 11118                           
 11119                           ; _current_sensor_cal: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 11120  0162E0  0EF7               	movlw	247
 11121  0162E2  26E1               	addwf	fsr1l,f,c
 11122  0162E4  0EFF               	movlw	255
 11123  0162E6  22E2               	addwfc	fsr1h,f,c
 11124  0162E8  0012               	return		;funcret
 11125  0162EA                     __end_of_current_sensor_cal:
 11126                           	opt callstack 0
 11127                           
 11128 ;; *************** function _write_cal_data *****************
 11129 ;; Defined at:
 11130 ;;		line 406 in file "daq.c"
 11131 ;; Parameters:    Size  Location     Type
 11132 ;;		None
 11133 ;; Auto vars:     Size  Location     Type
 11134 ;;  x               2  [STACK] unsigned short 
 11135 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
 11136 ;;		 -> R(171), 
 11137 ;;  y               2  [STACK] unsigned short 
 11138 ;;  crcVal          1  [STACK] unsigned char 
 11139 ;; Return value:  Size  Location     Type
 11140 ;;                  1  [STACK] void 
 11141 ;; Registers used:
 11142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
 11143 ;; Tracked objects:
 11144 ;;		On entry : 0/39
 11145 ;;		On exit  : 0/0
 11146 ;;		Unchanged: 0/0
 11147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11152 ;;Total ram usage:        0 bytes
 11153 ;; Hardware stack levels used:    1
 11154 ;; Hardware stack levels required when called:   17
 11155 ;; This function calls:
 11156 ;;		_CRC_8BitDataWrite
 11157 ;;		_CRC_CalculatedResultGet
 11158 ;;		_CRC_Initialize
 11159 ;;		_CRC_IsBusy
 11160 ;;		_CRC_Start
 11161 ;;		_DATAEE_WriteByte
 11162 ;; This function is called by:
 11163 ;;		_main
 11164 ;;		_current_sensor_cal
 11165 ;; This function uses a reentrant model
 11166 ;;
 11167                           
 11168                           	psect	text32
 11169  019D1E                     __ptext32:
 11170                           	opt callstack 0
 11171  019D1E                     _write_cal_data:
 11172                           	opt callstack 0
 11173                           
 11174                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11175  019D1E  0E07               	movlw	7
 11176  019D20  26E1               	addwf	fsr1l,f,c
 11177  019D22  0E00               	movlw	0
 11178  019D24  22E2               	addwfc	fsr1h,f,c
 11179                           
 11180                           ;daq.c: 408:  uint16_t x = 0, y;
 11181                           ;stkvar	_x @ sp[(-7)+0]
 11182                           
 11183                           ;incstack = 0
 11184  019D26  0EF9               	movlw	-7
 11185  019D28  6AE3               	clrf	plusw1,c
 11186  019D2A  0EFA               	movlw	-6
 11187  019D2C  6AE3               	clrf	plusw1,c
 11188                           
 11189                           ;daq.c: 409:  uint8_t *r_cal_ptr, crcVal;;daq.c: 411:  y = sizeof(R);
 11190  019D2E  0EAB               	movlw	171
 11191  019D30  6E0B               	movwf	(btemp+10)^0,c
 11192  019D32  0E00               	movlw	0
 11193  019D34  6E0C               	movwf	(btemp+11)^0,c
 11194                           
 11195                           ;stkvar	_y @ sp[(-7)+4]
 11196  019D36  0EFD               	movlw	-3
 11197  019D38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11198  019D3E  0EFE               	movlw	-2
 11199  019D40  0060  F033  FFE3   	movff	btemp+11,plusw1
 11200                           
 11201                           ;daq.c: 412:  R.crc = 0x42;
 11202  019D46  0E42               	movlw	66
 11203  019D48  0102               	movlb	2	; () banked
 11204  019D4A  6FAA               	movwf	(_R+170)& (0+255),b	;volatile
 11205                           
 11206                           ; BSR set to: 2
 11207                           ;daq.c: 413:  r_cal_ptr = (uint8_t*) & R;
 11208                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 11209  019D4C  0E02               	movlw	high _R
 11210  019D4E  6E01               	movwf	btemp^0,c
 11211  019D50  0EFC               	movlw	-4
 11212  019D52  0060  F007  FFE3   	movff	btemp,plusw1
 11213  019D58  0E00               	movlw	low _R
 11214  019D5A  6E01               	movwf	btemp^0,c
 11215  019D5C  0EFB               	movlw	-5
 11216  019D5E  0060  F007  FFE3   	movff	btemp,plusw1
 11217                           
 11218                           ; BSR set to: 2
 11219                           ;daq.c: 414:  R.checkmark = 0x1957;
 11220  019D64  0E19               	movlw	25
 11221  019D66  6FA9               	movwf	(_R+169)& (0+255),b	;volatile
 11222  019D68  0E57               	movlw	87
 11223  019D6A  6FA8               	movwf	(_R+168)& (0+255),b	;volatile
 11224                           
 11225                           ; BSR set to: 2
 11226                           ;daq.c: 416:  CRC_Initialize();
 11227  019D6C  EC00  F0DE         	call	_CRC_Initialize	;wreg free
 11228                           
 11229                           ; BSR set to: 0
 11230                           ;daq.c: 419:  CRC_Start();
 11231  019D70  EC8A  F0EA         	call	_CRC_Start	;wreg free
 11232  019D74                     l11406:
 11233                           
 11234                           ;daq.c: 422:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 11235                           ;stkvar	_x @ sp[(-7)+0]
 11236  019D74  0EF9               	movlw	-7
 11237  019D76  006F FF8C  F00B    	movff	plusw1,btemp+10
 11238  019D7C  0EFA               	movlw	-6
 11239  019D7E  006F FF8C  F00C    	movff	plusw1,btemp+11
 11240                           
 11241                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 11242  019D84  0EFB               	movlw	-5
 11243  019D86  006F FF8C  F009    	movff	plusw1,btemp+8
 11244  019D8C  0EFC               	movlw	-4
 11245  019D8E  006F FF8C  F00A    	movff	plusw1,btemp+9
 11246  019D94  500B               	movf	(btemp+10)^0,w,c
 11247  019D96  2409               	addwf	(btemp+8)^0,w,c
 11248  019D98  6ED9               	movwf	fsr2l,c
 11249  019D9A  500C               	movf	(btemp+11)^0,w,c
 11250  019D9C  200A               	addwfc	(btemp+9)^0,w,c
 11251  019D9E  6EDA               	movwf	fsr2h,c
 11252  019DA0  50DF               	movf	indf2,w,c
 11253  019DA2  6EE6               	movwf	postinc1,c
 11254                           
 11255                           ;stkvar	_x @ sp[(-8)+0]
 11256  019DA4  0EF8               	movlw	-8
 11257  019DA6  006F FF8F FFE6     	movff	plusw1,postinc1
 11258  019DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 11259  019DB2  ECE1  F0E0         	call	_DATAEE_WriteByte	;wreg free
 11260                           
 11261                           ;daq.c: 423:   CRC_8BitDataWrite(r_cal_ptr[x]);
 11262                           ;stkvar	_x @ sp[(-7)+0]
 11263  019DB6  0EF9               	movlw	-7
 11264  019DB8  006F FF8C  F00B    	movff	plusw1,btemp+10
 11265  019DBE  0EFA               	movlw	-6
 11266  019DC0  006F FF8C  F00C    	movff	plusw1,btemp+11
 11267                           
 11268                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 11269  019DC6  0EFB               	movlw	-5
 11270  019DC8  006F FF8C  F009    	movff	plusw1,btemp+8
 11271  019DCE  0EFC               	movlw	-4
 11272  019DD0  006F FF8C  F00A    	movff	plusw1,btemp+9
 11273  019DD6  500B               	movf	(btemp+10)^0,w,c
 11274  019DD8  2409               	addwf	(btemp+8)^0,w,c
 11275  019DDA  6ED9               	movwf	fsr2l,c
 11276  019DDC  500C               	movf	(btemp+11)^0,w,c
 11277  019DDE  200A               	addwfc	(btemp+9)^0,w,c
 11278  019DE0  6EDA               	movwf	fsr2h,c
 11279  019DE2  50DF               	movf	indf2,w,c
 11280  019DE4  6EE6               	movwf	postinc1,c
 11281  019DE6  ECF6  F0E9         	call	_CRC_8BitDataWrite	;wreg free
 11282  019DEA                     l11410:
 11283  019DEA  EC18  F0EA         	call	_CRC_IsBusy	;wreg free
 11284  019DEE  5001               	movf	btemp^0,w,c
 11285  019DF0  A4D8               	btfss	status,2,c
 11286  019DF2  D7FB               	goto	l11410
 11287                           
 11288                           ;daq.c: 425:  } while (++x < y);
 11289                           ;stkvar	_y @ sp[(-7)+4]
 11290  019DF4  0EFD               	movlw	-3
 11291  019DF6  006F FF8C  F00B    	movff	plusw1,btemp+10
 11292  019DFC  0EFE               	movlw	-2
 11293  019DFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 11294                           
 11295                           ;stkvar	_x @ sp[(-7)+0]
 11296  019E04  0EF9               	movlw	-7
 11297  019E06  50E3               	movf	plusw1,w,c
 11298  019E08  0F01               	addlw	1
 11299  019E0A  6E01               	movwf	btemp^0,c
 11300  019E0C  0EF9               	movlw	-7
 11301  019E0E  0060  F007  FFE3   	movff	btemp,plusw1
 11302  019E14  6A01               	clrf	btemp^0,c
 11303  019E16  0EFA               	movlw	-6
 11304  019E18  50E3               	movf	plusw1,w,c
 11305  019E1A  2001               	addwfc	btemp^0,w,c
 11306  019E1C  6E01               	movwf	btemp^0,c
 11307  019E1E  0EFA               	movlw	-6
 11308  019E20  0060  F007  FFE3   	movff	btemp,plusw1
 11309  019E26  0EF9               	movlw	-7
 11310  019E28  006F FF8C  F009    	movff	plusw1,btemp+8
 11311  019E2E  0EFA               	movlw	-6
 11312  019E30  006F FF8C  F00A    	movff	plusw1,btemp+9
 11313  019E36  500B               	movf	(btemp+10)^0,w,c
 11314  019E38  5C09               	subwf	(btemp+8)^0,w,c
 11315  019E3A  500C               	movf	(btemp+11)^0,w,c
 11316  019E3C  580A               	subwfb	(btemp+9)^0,w,c
 11317  019E3E  A0D8               	btfss	status,0,c
 11318  019E40  D799               	goto	l11406
 11319                           
 11320                           ;daq.c: 427:  crcVal = CRC_CalculatedResultGet(0, 0x00);
 11321  019E42  0E00               	movlw	0
 11322  019E44  6EE6               	movwf	postinc1,c
 11323  019E46  0E00               	movlw	0
 11324  019E48  6EE6               	movwf	postinc1,c
 11325  019E4A  0E00               	movlw	0
 11326  019E4C  6EE6               	movwf	postinc1,c
 11327  019E4E  ECBA  F0CB         	call	_CRC_CalculatedResultGet	;wreg free
 11328                           
 11329                           ;stkvar	_crcVal @ sp[(-7)+6]
 11330  019E52  0EFF               	movlw	-1
 11331  019E54  0060  F007  FFE3   	movff	btemp,plusw1
 11332                           
 11333                           ;daq.c: 429:  DATAEE_WriteByte(sizeof(R) - 1, crcVal);
 11334                           ;stkvar	_crcVal @ sp[(-7)+6]
 11335  019E5A  0EFF               	movlw	-1
 11336  019E5C  50E3               	movf	plusw1,w,c
 11337  019E5E  6EE6               	movwf	postinc1,c
 11338  019E60  0EAA               	movlw	170
 11339  019E62  6EE6               	movwf	postinc1,c
 11340  019E64  0E00               	movlw	0
 11341  019E66  6EE6               	movwf	postinc1,c
 11342  019E68  ECE1  F0E0         	call	_DATAEE_WriteByte	;wreg free
 11343                           
 11344                           ; _write_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11345  019E6C  0EF9               	movlw	249
 11346  019E6E  26E1               	addwf	fsr1l,f,c
 11347  019E70  0EFF               	movlw	255
 11348  019E72  22E2               	addwfc	fsr1h,f,c
 11349  019E74  0012               	return		;funcret
 11350  019E76                     __end_of_write_cal_data:
 11351                           	opt callstack 0
 11352                           
 11353 ;; *************** function _DATAEE_WriteByte *****************
 11354 ;; Defined at:
 11355 ;;		line 172 in file "mcc_generated_files/memory.c"
 11356 ;; Parameters:    Size  Location     Type
 11357 ;;  bAdd            2  [STACK] unsigned short 
 11358 ;;  bData           1  [STACK] unsigned char 
 11359 ;; Auto vars:     Size  Location     Type
 11360 ;;  GIEBitValue     1  [STACK] unsigned char 
 11361 ;; Return value:  Size  Location     Type
 11362 ;;                  1  [STACK] void 
 11363 ;; Registers used:
 11364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 11365 ;; Tracked objects:
 11366 ;;		On entry : 0/39
 11367 ;;		On exit  : 0/0
 11368 ;;		Unchanged: 0/0
 11369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11374 ;;Total ram usage:        0 bytes
 11375 ;; Hardware stack levels used:    1
 11376 ;; Hardware stack levels required when called:   15
 11377 ;; This function calls:
 11378 ;;		Nothing
 11379 ;; This function is called by:
 11380 ;;		_write_cal_data
 11381 ;; This function uses a reentrant model
 11382 ;;
 11383                           
 11384                           	psect	text33
 11385  01C1C2                     __ptext33:
 11386                           	opt callstack 0
 11387  01C1C2                     _DATAEE_WriteByte:
 11388                           	opt callstack 0
 11389                           
 11390                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11391  01C1C2  52E6               	movf	postinc1,f,c
 11392                           
 11393                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 11394                           
 11395                           ;incstack = 0
 11396  01C1C4  AED2               	btfss	210,7,c	;volatile
 11397  01C1C6  D003               	goto	u9870
 11398  01C1C8  6A0C               	clrf	(btemp+11)^0,c
 11399  01C1CA  2A0C               	incf	(btemp+11)^0,f,c
 11400  01C1CC  D001               	goto	u9878
 11401  01C1CE                     u9870:
 11402  01C1CE  6A0C               	clrf	(btemp+11)^0,c
 11403  01C1D0                     u9878:
 11404                           
 11405                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 11406  01C1D0  0EFF               	movlw	-1
 11407  01C1D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 11408                           
 11409                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 11410                           ;stkvar	_bAdd @ sp[(-1)+-2]
 11411  01C1D8  0EFE               	movlw	254
 11412  01C1DA  24E1               	addwf	fsr1l,w,c
 11413  01C1DC  6ED9               	movwf	fsr2l,c
 11414  01C1DE  0EFF               	movlw	255
 11415  01C1E0  20E2               	addwfc	fsr1h,w,c
 11416  01C1E2  6EDA               	movwf	fsr2h,c
 11417  01C1E4  50DF               	movf	indf2,w,c
 11418  01C1E6  0B03               	andlw	3
 11419  01C1E8  0139               	movlb	57	; () banked
 11420  01C1EA  6FE1               	movwf	225,b	;volatile
 11421                           
 11422                           ; BSR set to: 57
 11423                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 11424                           ;stkvar	_bAdd @ sp[(-1)+-2]
 11425  01C1EC  0EFD               	movlw	-3
 11426  01C1EE  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 11427                           
 11428                           ; BSR set to: 57
 11429                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 11430                           ;stkvar	_bData @ sp[(-1)+-3]
 11431  01C1F4  0EFC               	movlw	-4
 11432  01C1F6  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 11433                           
 11434                           ; BSR set to: 57
 11435                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 11436  01C1FC  0E3F               	movlw	-193
 11437  01C1FE  17E5               	andwf	229,f,b	;volsfr
 11438                           
 11439                           ; BSR set to: 57
 11440                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 11441  01C200  85E5               	bsf	229,2,b	;volsfr
 11442                           
 11443                           ; BSR set to: 57
 11444                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 11445  01C202  9ED2               	bcf	210,7,c	;volatile
 11446                           
 11447                           ; BSR set to: 57
 11448                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 11449  01C204  0E55               	movlw	85
 11450  01C206  6FE6               	movwf	230,b	;volsfr
 11451                           
 11452                           ; BSR set to: 57
 11453                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 11454  01C208  0EAA               	movlw	170
 11455  01C20A  6FE6               	movwf	230,b	;volsfr
 11456                           
 11457                           ; BSR set to: 57
 11458                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 11459  01C20C  83E5               	bsf	229,1,b	;volsfr
 11460  01C20E                     l942:
 11461                           
 11462                           ; BSR set to: 57
 11463                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 11464  01C20E  B3E5               	btfsc	229,1,b	;volsfr
 11465  01C210  D7FE               	goto	l942
 11466                           
 11467                           ; BSR set to: 57
 11468                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 11469  01C212  95E5               	bcf	229,2,b	;volsfr
 11470                           
 11471                           ; BSR set to: 57
 11472                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 11473                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 11474  01C214  0EFF               	movlw	-1
 11475  01C216  B0E3               	btfsc	plusw1,0,c
 11476  01C218  D002               	bra	u9895
 11477  01C21A  9ED2               	bcf	210,7,c	;volatile
 11478  01C21C  D001               	bra	u9896
 11479  01C21E                     u9895:
 11480  01C21E  8ED2               	bsf	210,7,c	;volatile
 11481  01C220                     u9896:
 11482                           
 11483                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 11484  01C220  52E5               	movf	postdec1,f,c
 11485  01C222  52E5               	movf	postdec1,f,c
 11486  01C224  52E5               	movf	postdec1,f,c
 11487  01C226  52E5               	movf	postdec1,f,c
 11488  01C228  0012               	return		;funcret
 11489  01C22A                     __end_of_DATAEE_WriteByte:
 11490                           	opt callstack 0
 11491                           
 11492 ;; *************** function _CRC_Start *****************
 11493 ;; Defined at:
 11494 ;;		line 119 in file "mcc_generated_files/crc.c"
 11495 ;; Parameters:    Size  Location     Type
 11496 ;;		None
 11497 ;; Auto vars:     Size  Location     Type
 11498 ;;		None
 11499 ;; Return value:  Size  Location     Type
 11500 ;;                  1  [STACK] void 
 11501 ;; Registers used:
 11502 ;;		None
 11503 ;; Tracked objects:
 11504 ;;		On entry : 3F/0
 11505 ;;		On exit  : 3F/39
 11506 ;;		Unchanged: 0/0
 11507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11512 ;;Total ram usage:        0 bytes
 11513 ;; Hardware stack levels used:    1
 11514 ;; Hardware stack levels required when called:   15
 11515 ;; This function calls:
 11516 ;;		Nothing
 11517 ;; This function is called by:
 11518 ;;		_read_cal_data
 11519 ;;		_write_cal_data
 11520 ;; This function uses a reentrant model
 11521 ;;
 11522                           
 11523                           	psect	text34
 11524  01D514                     __ptext34:
 11525                           	opt callstack 0
 11526  01D514                     _CRC_Start:
 11527                           	opt callstack 14
 11528                           
 11529                           ;mcc_generated_files/crc.c: 122:     CRCCON0bits.CRCGO = 1;
 11530                           
 11531                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11532                           ;incstack = 0
 11533  01D514  0139               	movlb	57	; () banked
 11534  01D516  8D68               	bsf	104,6,b	;volatile
 11535                           
 11536                           ; BSR set to: 57
 11537                           ; _CRC_Start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 11538  01D518  0012               	return		;funcret
 11539  01D51A                     __end_of_CRC_Start:
 11540                           	opt callstack 0
 11541                           
 11542 ;; *************** function _CRC_IsBusy *****************
 11543 ;; Defined at:
 11544 ;;		line 201 in file "mcc_generated_files/crc.c"
 11545 ;; Parameters:    Size  Location     Type
 11546 ;;		None
 11547 ;; Auto vars:     Size  Location     Type
 11548 ;;		None
 11549 ;; Return value:  Size  Location     Type
 11550 ;;                  1  [STACK] _Bool 
 11551 ;; Registers used:
 11552 ;;		btemp
 11553 ;; Tracked objects:
 11554 ;;		On entry : 0/39
 11555 ;;		On exit  : 0/0
 11556 ;;		Unchanged: 0/0
 11557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11562 ;;Total ram usage:        0 bytes
 11563 ;; Hardware stack levels used:    1
 11564 ;; Hardware stack levels required when called:   15
 11565 ;; This function calls:
 11566 ;;		Nothing
 11567 ;; This function is called by:
 11568 ;;		_read_cal_data
 11569 ;;		_write_cal_data
 11570 ;; This function uses a reentrant model
 11571 ;;
 11572                           
 11573                           	psect	text35
 11574  01D430                     __ptext35:
 11575                           	opt callstack 0
 11576  01D430                     _CRC_IsBusy:
 11577                           	opt callstack 14
 11578                           
 11579                           ;mcc_generated_files/crc.c: 204:     return(CRCCON0bits.BUSY);
 11580                           
 11581                           ; BSR set to: 57
 11582                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11583                           ;incstack = 0
 11584  01D430  0139               	movlb	57	; () banked
 11585  01D432  AB68               	btfss	104,5,b	;volatile
 11586  01D434  D003               	goto	u10100
 11587  01D436  6A01               	clrf	btemp^0,c
 11588  01D438  2A01               	incf	btemp^0,f,c
 11589  01D43A  0012               	return	
 11590  01D43C                     u10100:
 11591  01D43C  6A01               	clrf	btemp^0,c
 11592                           
 11593                           ; _CRC_IsBusy: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 11594  01D43E  0012               	return		;funcret
 11595  01D440                     __end_of_CRC_IsBusy:
 11596                           	opt callstack 0
 11597                           
 11598 ;; *************** function _CRC_CalculatedResultGet *****************
 11599 ;; Defined at:
 11600 ;;		line 159 in file "mcc_generated_files/crc.c"
 11601 ;; Parameters:    Size  Location     Type
 11602 ;;  reverse         1  [STACK] _Bool 
 11603 ;;  xorValue        2  [STACK] unsigned short 
 11604 ;; Auto vars:     Size  Location     Type
 11605 ;;  result          2  [STACK] unsigned short 
 11606 ;;  mask            2  [STACK] unsigned short 
 11607 ;; Return value:  Size  Location     Type
 11608 ;;                  2  [STACK] unsigned short 
 11609 ;; Registers used:
 11610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+9, btemp+10, btemp+11,
      + prodl
 11611 ;; Tracked objects:
 11612 ;;		On entry : 0/39
 11613 ;;		On exit  : 0/0
 11614 ;;		Unchanged: 0/0
 11615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11620 ;;Total ram usage:        0 bytes
 11621 ;; Hardware stack levels used:    1
 11622 ;; Hardware stack levels required when called:   16
 11623 ;; This function calls:
 11624 ;;		_CRC_ReverseValue
 11625 ;; This function is called by:
 11626 ;;		_read_cal_data
 11627 ;;		_write_cal_data
 11628 ;; This function uses a reentrant model
 11629 ;;
 11630                           
 11631                           	psect	text36
 11632  019774                     __ptext36:
 11633                           	opt callstack 0
 11634  019774                     _CRC_CalculatedResultGet:
 11635                           	opt callstack 0
 11636                           
 11637                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11638  019774  52E6               	movf	postinc1,f,c
 11639  019776  52E6               	movf	postinc1,f,c
 11640  019778  52E6               	movf	postinc1,f,c
 11641  01977A  52E6               	movf	postinc1,f,c
 11642                           
 11643                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 11644                           
 11645                           ;incstack = 0
 11646  01977C  0139               	movlb	57	; () banked
 11647  01977E  9D68               	bcf	104,6,b	;volatile
 11648                           
 11649                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 11650  019780  9DA0               	bcf	160,6,b	;volatile
 11651                           
 11652                           ; BSR set to: 57
 11653                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 11654  019782  5169               	movf	105,w,b	;volatile
 11655  019784  0B0F               	andlw	15
 11656  019786  6E0C               	movwf	(btemp+11)^0,c
 11657  019788  3A0C               	swapf	(btemp+11)^0,f,c
 11658  01978A  5169               	movf	105,w,b	;volatile
 11659  01978C  180C               	xorwf	(btemp+11)^0,w,c
 11660  01978E  0B0F               	andlw	-241
 11661  019790  180C               	xorwf	(btemp+11)^0,w,c
 11662  019792  6F69               	movwf	105,b	;volatile
 11663                           
 11664                           ; BSR set to: 57
 11665                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 11666  019794  0E08               	movlw	8
 11667  019796  0100               	movlb	0	; () banked
 11668  019798  65D6               	cpfsgt	(_crcObj+1)& (0+255),b
 11669  01979A  D003               	goto	l1282
 11670                           
 11671                           ; BSR set to: 0
 11672                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 11673  01979C  0139               	movlb	57	; () banked
 11674  01979E  6B61               	clrf	97,b	;volatile
 11675  0197A0  D001               	goto	L9
 11676  0197A2                     l1282:
 11677                           
 11678                           ; BSR set to: 0
 11679                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 11680  0197A2  0139               	movlb	57	; () banked
 11681  0197A4                     L9:
 11682  0197A4  6B60               	clrf	96,b	;volatile
 11683                           
 11684                           ; BSR set to: 57
 11685                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 11686                           
 11687                           ;mcc_generated_files/crc.c: 176:      }
 11688  0197A6  8D68               	bsf	104,6,b	;volatile
 11689  0197A8                     l1284:
 11690                           
 11691                           ; BSR set to: 57
 11692  0197A8  ADA0               	btfss	160,6,b	;volatile
 11693  0197AA  D7FE               	goto	l1284
 11694                           
 11695                           ; BSR set to: 57
 11696                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 11697  0197AC  9DA0               	bcf	160,6,b	;volatile
 11698                           
 11699                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 11700  0197AE  9D68               	bcf	104,6,b	;volatile
 11701                           
 11702                           ; BSR set to: 57
 11703                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 11704  0197B0  0060  F354  F00C   	movff	_crcObj,btemp+11
 11705  0197B6  0EFF               	movlw	255
 11706  0197B8  260C               	addwf	(btemp+11)^0,f,c
 11707  0197BA  3A0C               	swapf	(btemp+11)^0,f,c
 11708  0197BC  5169               	movf	105,w,b	;volatile
 11709  0197BE  180C               	xorwf	(btemp+11)^0,w,c
 11710  0197C0  0B0F               	andlw	-241
 11711  0197C2  180C               	xorwf	(btemp+11)^0,w,c
 11712  0197C4  6F69               	movwf	105,b	;volatile
 11713                           
 11714                           ; BSR set to: 57
 11715                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 11716  0197C6  5162               	movf	98,w,b	;volatile
 11717  0197C8  006E F58C  F001    	movff	14691,btemp	;volatile
 11718  0197CE  6A02               	clrf	(btemp+1)^0,c
 11719  0197D0  0060  F004  F002   	movff	btemp,btemp+1
 11720  0197D6  6A01               	clrf	btemp^0,c
 11721  0197D8  1201               	iorwf	btemp^0,f,c
 11722  0197DA  0E00               	movlw	0
 11723  0197DC  1202               	iorwf	(btemp+1)^0,f,c
 11724                           
 11725                           ;stkvar	_result @ sp[(-4)+0]
 11726  0197DE  0EFC               	movlw	-4
 11727  0197E0  0060  F007  FFE3   	movff	btemp,plusw1
 11728  0197E6  0EFD               	movlw	-3
 11729  0197E8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 11730                           
 11731                           ; BSR set to: 57
 11732                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 11733  0197EE  0E10               	movlw	16
 11734  0197F0  0100               	movlb	0	; () banked
 11735  0197F2  61D6               	cpfslt	(_crcObj+1)& (0+255),b
 11736  0197F4  D03A               	goto	l10788
 11737                           
 11738                           ; BSR set to: 0
 11739                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 11740  0197F6  0EFF               	movlw	255
 11741  0197F8  6E0B               	movwf	(btemp+10)^0,c
 11742  0197FA  0EFF               	movlw	255
 11743  0197FC  6E0C               	movwf	(btemp+11)^0,c
 11744  0197FE  0060  F358  F00A   	movff	_crcObj+1,btemp+9
 11745  019804  0E01               	movlw	1
 11746  019806  6E07               	movwf	(btemp+6)^0,c
 11747  019808  0E00               	movlw	0
 11748  01980A  6E08               	movwf	(btemp+7)^0,c
 11749  01980C  2A0A               	incf	(btemp+9)^0,f,c
 11750  01980E  D003               	goto	u10084
 11751  019810                     u10085:
 11752  019810  90D8               	bcf	status,0,c
 11753  019812  3607               	rlcf	(btemp+6)^0,f,c
 11754  019814  3608               	rlcf	(btemp+7)^0,f,c
 11755  019816                     u10084:
 11756  019816  2E0A               	decfsz	(btemp+9)^0,f,c
 11757  019818  D7FB               	goto	u10085
 11758  01981A  500B               	movf	(btemp+10)^0,w,c
 11759  01981C  2607               	addwf	(btemp+6)^0,f,c
 11760  01981E  500C               	movf	(btemp+11)^0,w,c
 11761  019820  2208               	addwfc	(btemp+7)^0,f,c
 11762                           
 11763                           ;stkvar	_mask @ sp[(-4)+2]
 11764  019822  0EFE               	movlw	-2
 11765  019824  0060  F01F  FFE3   	movff	btemp+6,plusw1
 11766  01982A  0EFF               	movlw	-1
 11767  01982C  0060  F023  FFE3   	movff	btemp+7,plusw1
 11768                           
 11769                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 11770                           ;stkvar	_mask @ sp[(-4)+2]
 11771  019832  0EFE               	movlw	-2
 11772  019834  006F FF8C  F00B    	movff	plusw1,btemp+10
 11773  01983A  0EFF               	movlw	-1
 11774  01983C  006F FF8C  F00C    	movff	plusw1,btemp+11
 11775                           
 11776                           ;stkvar	_result @ sp[(-4)+0]
 11777  019842  0EFC               	movlw	-4
 11778  019844  006F FF8C  F001    	movff	plusw1,btemp
 11779  01984A  500B               	movf	(btemp+10)^0,w,c
 11780  01984C  1601               	andwf	btemp^0,f,c
 11781  01984E  0EFC               	movlw	-4
 11782  019850  0060  F007  FFE3   	movff	btemp,plusw1
 11783  019856  0EFD               	movlw	-3
 11784  019858  006F FF8C  F001    	movff	plusw1,btemp
 11785  01985E  500C               	movf	(btemp+11)^0,w,c
 11786  019860  1601               	andwf	btemp^0,f,c
 11787  019862  0EFD               	movlw	-3
 11788  019864  0060  F007  FFE3   	movff	btemp,plusw1
 11789  01986A                     l10788:
 11790                           
 11791                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 11792                           ;stkvar	_reverse @ sp[(-4)+-1]
 11793  01986A  0EFB               	movlw	-5
 11794  01986C  50E3               	movf	plusw1,w,c
 11795  01986E  B4D8               	btfsc	status,2,c
 11796  019870  D011               	goto	l10792
 11797                           
 11798                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 11799                           ;stkvar	_result @ sp[(-4)+0]
 11800  019872  0EFC               	movlw	-4
 11801  019874  006F FF8F FFE6     	movff	plusw1,postinc1
 11802  01987A  006F FF8F FFE6     	movff	plusw1,postinc1
 11803  019880  EC48  F0D8         	call	_CRC_ReverseValue	;wreg free
 11804                           
 11805                           ;stkvar	_result @ sp[(-4)+0]
 11806  019884  0EFC               	movlw	-4
 11807  019886  0060  F007  FFE3   	movff	btemp,plusw1
 11808  01988C  0EFD               	movlw	-3
 11809  01988E  0060  F00B  FFE3   	movff	btemp+1,plusw1
 11810  019894                     l10792:
 11811                           
 11812                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 11813                           ;stkvar	_xorValue @ sp[(-4)+-3]
 11814  019894  0EF9               	movlw	-7
 11815  019896  006F FF8C  F00B    	movff	plusw1,btemp+10
 11816  01989C  0EFA               	movlw	-6
 11817  01989E  006F FF8C  F00C    	movff	plusw1,btemp+11
 11818                           
 11819                           ;stkvar	_result @ sp[(-4)+0]
 11820  0198A4  0EFC               	movlw	-4
 11821  0198A6  006F FF8C  F001    	movff	plusw1,btemp
 11822  0198AC  500B               	movf	(btemp+10)^0,w,c
 11823  0198AE  1A01               	xorwf	btemp^0,f,c
 11824  0198B0  0EFC               	movlw	-4
 11825  0198B2  0060  F007  FFE3   	movff	btemp,plusw1
 11826  0198B8  0EFD               	movlw	-3
 11827  0198BA  006F FF8C  F001    	movff	plusw1,btemp
 11828  0198C0  500C               	movf	(btemp+11)^0,w,c
 11829  0198C2  1A01               	xorwf	btemp^0,f,c
 11830  0198C4  0EFD               	movlw	-3
 11831  0198C6  0060  F007  FFE3   	movff	btemp,plusw1
 11832                           
 11833                           ;mcc_generated_files/crc.c: 198:     return result;
 11834                           ;stkvar	_result @ sp[(-4)+0]
 11835  0198CC  0EFC               	movlw	-4
 11836  0198CE  006F FF8C  F001    	movff	plusw1,btemp
 11837  0198D4  0EFD               	movlw	-3
 11838  0198D6  006F FF8C  F002    	movff	plusw1,btemp+1
 11839                           
 11840                           ; _CRC_CalculatedResultGet: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
 11841  0198DC  0EF9               	movlw	249
 11842  0198DE  26E1               	addwf	fsr1l,f,c
 11843  0198E0  0EFF               	movlw	255
 11844  0198E2  22E2               	addwfc	fsr1h,f,c
 11845  0198E4  0012               	return		;funcret
 11846  0198E6                     __end_of_CRC_CalculatedResultGet:
 11847                           	opt callstack 0
 11848                           
 11849 ;; *************** function _CRC_ReverseValue *****************
 11850 ;; Defined at:
 11851 ;;		line 138 in file "mcc_generated_files/crc.c"
 11852 ;; Parameters:    Size  Location     Type
 11853 ;;  crc             2  [STACK] unsigned short 
 11854 ;; Auto vars:     Size  Location     Type
 11855 ;;  mask            2  [STACK] unsigned short 
 11856 ;;  reverse         2  [STACK] unsigned short 
 11857 ;; Return value:  Size  Location     Type
 11858 ;;                  2  [STACK] unsigned short 
 11859 ;; Registers used:
 11860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 11861 ;; Tracked objects:
 11862 ;;		On entry : 0/0
 11863 ;;		On exit  : 0/0
 11864 ;;		Unchanged: 0/0
 11865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11870 ;;Total ram usage:        0 bytes
 11871 ;; Hardware stack levels used:    1
 11872 ;; Hardware stack levels required when called:   15
 11873 ;; This function calls:
 11874 ;;		Nothing
 11875 ;; This function is called by:
 11876 ;;		_CRC_CalculatedResultGet
 11877 ;; This function uses a reentrant model
 11878 ;;
 11879                           
 11880                           	psect	text37
 11881  01B090                     __ptext37:
 11882                           	opt callstack 0
 11883  01B090                     _CRC_ReverseValue:
 11884                           	opt callstack 0
 11885                           
 11886                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11887  01B090  52E6               	movf	postinc1,f,c
 11888  01B092  52E6               	movf	postinc1,f,c
 11889  01B094  52E6               	movf	postinc1,f,c
 11890  01B096  52E6               	movf	postinc1,f,c
 11891                           
 11892                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 11893                           
 11894                           ;incstack = 0
 11895  01B098  0E01               	movlw	1
 11896  01B09A  6E0B               	movwf	(btemp+10)^0,c
 11897  01B09C  0E00               	movlw	0
 11898  01B09E  6E0C               	movwf	(btemp+11)^0,c
 11899                           
 11900                           ;stkvar	_mask @ sp[(-4)+0]
 11901  01B0A0  0EFC               	movlw	-4
 11902  01B0A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11903  01B0A8  0EFD               	movlw	-3
 11904  01B0AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 11905                           
 11906                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 11907  01B0B0  0060  F358  F00C   	movff	_crcObj+1,btemp+11
 11908  01B0B6  0EFF               	movlw	255
 11909  01B0B8  260C               	addwf	(btemp+11)^0,f,c
 11910                           
 11911                           ;stkvar	_mask @ sp[(-4)+0]
 11912  01B0BA  50E1               	movf	fsr1l,w,c
 11913  01B0BC  0FFC               	addlw	-4
 11914  01B0BE  6ED9               	movwf	fsr2l,c
 11915  01B0C0  50E2               	movf	fsr1h,w,c
 11916  01B0C2  6EDA               	movwf	fsr2h,c
 11917  01B0C4  0EFF               	movlw	255
 11918  01B0C6  22DA               	addwfc	fsr2h,f,c
 11919  01B0C8  280C               	incf	(btemp+11)^0,w,c
 11920  01B0CA  D003               	goto	u9670
 11921  01B0CC                     u9675:
 11922  01B0CC  90D8               	bcf	status,0,c
 11923  01B0CE  36DE               	rlcf	postinc2,f,c
 11924  01B0D0  36DD               	rlcf	postdec2,f,c
 11925  01B0D2                     u9670:
 11926  01B0D2  2EE8               	decfsz	wreg,f,c
 11927  01B0D4  D7FB               	goto	u9675
 11928                           
 11929                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 11930                           ;stkvar	_reverse @ sp[(-4)+2]
 11931  01B0D6  0EFE               	movlw	-2
 11932  01B0D8  6AE3               	clrf	plusw1,c
 11933  01B0DA  0EFF               	movlw	-1
 11934  01B0DC  6AE3               	clrf	plusw1,c
 11935                           
 11936                           ;mcc_generated_files/crc.c: 147:     while(crc)
 11937  01B0DE  D029               	goto	l10498
 11938  01B0E0                     l10490:
 11939                           
 11940                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 11941                           ;stkvar	_crc @ sp[(-4)+-2]
 11942  01B0E0  0EFA               	movlw	-6
 11943  01B0E2  A0E3               	btfss	plusw1,0,c
 11944  01B0E4  D01C               	goto	l10494
 11945                           
 11946                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 11947                           ;stkvar	_mask @ sp[(-4)+0]
 11948  01B0E6  0EFC               	movlw	-4
 11949  01B0E8  006F FF8C  F00B    	movff	plusw1,btemp+10
 11950  01B0EE  0EFD               	movlw	-3
 11951  01B0F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 11952                           
 11953                           ;stkvar	_reverse @ sp[(-4)+2]
 11954  01B0F6  0EFE               	movlw	-2
 11955  01B0F8  006F FF8C  F001    	movff	plusw1,btemp
 11956  01B0FE  500B               	movf	(btemp+10)^0,w,c
 11957  01B100  1201               	iorwf	btemp^0,f,c
 11958  01B102  0EFE               	movlw	-2
 11959  01B104  0060  F007  FFE3   	movff	btemp,plusw1
 11960  01B10A  0EFF               	movlw	-1
 11961  01B10C  006F FF8C  F001    	movff	plusw1,btemp
 11962  01B112  500C               	movf	(btemp+11)^0,w,c
 11963  01B114  1201               	iorwf	btemp^0,f,c
 11964  01B116  0EFF               	movlw	-1
 11965  01B118  0060  F007  FFE3   	movff	btemp,plusw1
 11966  01B11E                     l10494:
 11967                           
 11968                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 11969                           ;stkvar	_mask @ sp[(-4)+0]
 11970  01B11E  90D8               	bcf	status,0,c
 11971  01B120  0EFD               	movlw	-3
 11972  01B122  32E3               	rrcf	plusw1,f,c
 11973  01B124  0EFC               	movlw	-4
 11974  01B126  32E3               	rrcf	plusw1,f,c
 11975                           
 11976                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 11977                           ;stkvar	_crc @ sp[(-4)+-2]
 11978  01B128  90D8               	bcf	status,0,c
 11979  01B12A  0EFB               	movlw	-5
 11980  01B12C  32E3               	rrcf	plusw1,f,c
 11981  01B12E  0EFA               	movlw	-6
 11982  01B130  32E3               	rrcf	plusw1,f,c
 11983  01B132                     l10498:
 11984                           
 11985                           ;mcc_generated_files/crc.c: 147:     while(crc)
 11986                           ;stkvar	_crc @ sp[(-4)+-2]
 11987  01B132  0EFA               	movlw	-6
 11988  01B134  006F FF8C  F001    	movff	plusw1,btemp
 11989  01B13A  0EFB               	movlw	-5
 11990  01B13C  50E3               	movf	plusw1,w,c
 11991  01B13E  1001               	iorwf	btemp^0,w,c
 11992  01B140  A4D8               	btfss	status,2,c
 11993  01B142  D7CE               	goto	l10490
 11994                           
 11995                           ;mcc_generated_files/crc.c: 156:     return reverse;
 11996                           ;stkvar	_reverse @ sp[(-4)+2]
 11997  01B144  0EFE               	movlw	-2
 11998  01B146  006F FF8C  F001    	movff	plusw1,btemp
 11999  01B14C  0EFF               	movlw	-1
 12000  01B14E  006F FF8C  F002    	movff	plusw1,btemp+1
 12001                           
 12002                           ; _CRC_ReverseValue: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 12003  01B154  0EFA               	movlw	250
 12004  01B156  26E1               	addwf	fsr1l,f,c
 12005  01B158  0EFF               	movlw	255
 12006  01B15A  22E2               	addwfc	fsr1h,f,c
 12007  01B15C  0012               	return		;funcret
 12008  01B15E                     __end_of_CRC_ReverseValue:
 12009                           	opt callstack 0
 12010                           
 12011 ;; *************** function _CRC_8BitDataWrite *****************
 12012 ;; Defined at:
 12013 ;;		line 125 in file "mcc_generated_files/crc.c"
 12014 ;; Parameters:    Size  Location     Type
 12015 ;;  data            1  [STACK] unsigned char 
 12016 ;; Auto vars:     Size  Location     Type
 12017 ;;		None
 12018 ;; Return value:  Size  Location     Type
 12019 ;;                  1  [STACK] _Bool 
 12020 ;; Registers used:
 12021 ;;		fsr1l, fsr1h
 12022 ;; Tracked objects:
 12023 ;;		On entry : 0/4
 12024 ;;		On exit  : 3F/39
 12025 ;;		Unchanged: 0/0
 12026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12031 ;;Total ram usage:        0 bytes
 12032 ;; Hardware stack levels used:    1
 12033 ;; Hardware stack levels required when called:   15
 12034 ;; This function calls:
 12035 ;;		Nothing
 12036 ;; This function is called by:
 12037 ;;		_read_cal_data
 12038 ;;		_write_cal_data
 12039 ;; This function uses a reentrant model
 12040 ;;
 12041                           
 12042                           	psect	text38
 12043  01D3EC                     __ptext38:
 12044                           	opt callstack 0
 12045  01D3EC                     _CRC_8BitDataWrite:
 12046                           	opt callstack 14
 12047                           
 12048                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 12049                           
 12050                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12051                           ;incstack = 0
 12052  01D3EC  0139               	movlb	57	; () banked
 12053  01D3EE  B168               	btfsc	104,0,b	;volatile
 12054  01D3F0  D004               	goto	l1271
 12055                           
 12056                           ; BSR set to: 57
 12057                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 12058                           ;stkvar	_data @ sp[(0)+-1]
 12059  01D3F2  0EFF               	movlw	-1
 12060  01D3F4  006F FF8F F960     	movff	plusw1,14688	;volatile
 12061  01D3FA                     l1271:
 12062                           
 12063                           ; BSR set to: 57
 12064                           ; _CRC_8BitDataWrite: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 12065  01D3FA  52E5               	movf	postdec1,f,c
 12066  01D3FC  0012               	return		;funcret
 12067  01D3FE                     __end_of_CRC_8BitDataWrite:
 12068                           	opt callstack 0
 12069                           
 12070 ;; *************** function _start_adc_scan *****************
 12071 ;; Defined at:
 12072 ;;		line 70 in file "daq.c"
 12073 ;; Parameters:    Size  Location     Type
 12074 ;;		None
 12075 ;; Auto vars:     Size  Location     Type
 12076 ;;		None
 12077 ;; Return value:  Size  Location     Type
 12078 ;;                  1  [STACK] _Bool 
 12079 ;; Registers used:
 12080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 12081 ;; Tracked objects:
 12082 ;;		On entry : 0/0
 12083 ;;		On exit  : 3/2
 12084 ;;		Unchanged: 0/0
 12085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12090 ;;Total ram usage:        0 bytes
 12091 ;; Hardware stack levels used:    1
 12092 ;; Hardware stack levels required when called:   16
 12093 ;; This function calls:
 12094 ;;		_ADCC_DischargeSampleCapacitor
 12095 ;;		_ADCC_SetADIInterruptHandler
 12096 ;;		_ADCC_SetADTIInterruptHandler
 12097 ;;		_ADCC_StartConversion
 12098 ;; This function is called by:
 12099 ;;		_main
 12100 ;;		_current_sensor_cal
 12101 ;;		_update_adc_result
 12102 ;; This function uses a reentrant model
 12103 ;;
 12104                           
 12105                           	psect	text39
 12106  01C290                     __ptext39:
 12107                           	opt callstack 0
 12108  01C290                     _start_adc_scan:
 12109                           	opt callstack 14
 12110                           
 12111                           ;daq.c: 72:  if (R.done)
 12112                           
 12113                           ; BSR set to: 57
 12114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12115                           ;incstack = 0
 12116  01C290  0102               	movlb	2	; () banked
 12117  01C292  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 12118  01C294  A4D8               	btfss	status,2,c
 12119  01C296  0012               	return	
 12120                           
 12121                           ; BSR set to: 2
 12122                           ;daq.c: 75:  R.scan_index = 0;
 12123  01C298  6B32               	clrf	(_R+50)& (0+255),b	;volatile
 12124                           
 12125                           ; BSR set to: 2
 12126                           ;daq.c: 76:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 12127  01C29A  013A               	movlb	58	; () banked
 12128  01C29C  5140               	movf	64,w,b	;volatile
 12129  01C29E  006E F940  F001    	movff	14928,btemp	;volatile
 12130  01C2A4  6A02               	clrf	(btemp+1)^0,c
 12131  01C2A6  0060  F004  F002   	movff	btemp,btemp+1
 12132  01C2AC  6A01               	clrf	btemp^0,c
 12133  01C2AE  2601               	addwf	btemp^0,f,c
 12134  01C2B0  0E00               	movlw	0
 12135  01C2B2  2202               	addwfc	(btemp+1)^0,f,c
 12136  01C2B4  0E77               	movlw	119
 12137  01C2B6  1401               	andwf	btemp^0,w,c
 12138  01C2B8  0102               	movlb	2	; () banked
 12139  01C2BA  6F33               	movwf	(_R+51)& (0+255),b	;volatile
 12140  01C2BC  0E3C               	movlw	60
 12141  01C2BE  1402               	andwf	(btemp+1)^0,w,c
 12142  01C2C0  6F34               	movwf	(_R+52)& (0+255),b	;volatile
 12143                           
 12144                           ; BSR set to: 2
 12145                           ;daq.c: 77:  ADCC_SetADIInterruptHandler(adc_int_handler);
 12146  01C2C2  0E42               	movlw	low _adc_int_handler
 12147  01C2C4  6EE6               	movwf	postinc1,c
 12148  01C2C6  0ED5               	movlw	high _adc_int_handler
 12149  01C2C8  6EE6               	movwf	postinc1,c
 12150  01C2CA  0E01               	movlw	low (_adc_int_handler shr (0+16))
 12151  01C2CC  6EE6               	movwf	postinc1,c
 12152  01C2CE  EC31  F0E8         	call	_ADCC_SetADIInterruptHandler	;wreg free
 12153                           
 12154                           ;daq.c: 78:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 12155  01C2D2  0E22               	movlw	low _adc_int_t_handler
 12156  01C2D4  6EE6               	movwf	postinc1,c
 12157  01C2D6  0EBE               	movlw	high _adc_int_t_handler
 12158  01C2D8  6EE6               	movwf	postinc1,c
 12159  01C2DA  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
 12160  01C2DC  6EE6               	movwf	postinc1,c
 12161  01C2DE  EC1D  F0E8         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 12162                           
 12163                           ;daq.c: 79:  ADCC_DischargeSampleCapacitor();
 12164  01C2E2  EC7A  F0EA         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 12165                           
 12166                           ; BSR set to: 62
 12167                           ;daq.c: 80:  ADCC_StartConversion(R.scan_index & 0xf);
 12168  01C2E6  0102               	movlb	2	; () banked
 12169  01C2E8  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 12170  01C2EA  0B0F               	andlw	15
 12171  01C2EC  6EE6               	movwf	postinc1,c
 12172  01C2EE  ECFF  F0E9         	call	_ADCC_StartConversion	;wreg free
 12173                           
 12174                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12175  01C2F2  0012               	return		;funcret
 12176  01C2F4                     __end_of_start_adc_scan:
 12177                           	opt callstack 0
 12178                           
 12179 ;; *************** function _ADCC_StartConversion *****************
 12180 ;; Defined at:
 12181 ;;		line 128 in file "mcc_generated_files/adcc.c"
 12182 ;; Parameters:    Size  Location     Type
 12183 ;;  channel         1  [STACK] enum E16136
 12184 ;; Auto vars:     Size  Location     Type
 12185 ;;		None
 12186 ;; Return value:  Size  Location     Type
 12187 ;;                  1  [STACK] void 
 12188 ;; Registers used:
 12189 ;;		fsr1l, fsr1h
 12190 ;; Tracked objects:
 12191 ;;		On entry : 3F/2
 12192 ;;		On exit  : 3F/3E
 12193 ;;		Unchanged: 0/0
 12194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12199 ;;Total ram usage:        0 bytes
 12200 ;; Hardware stack levels used:    1
 12201 ;; Hardware stack levels required when called:   15
 12202 ;; This function calls:
 12203 ;;		Nothing
 12204 ;; This function is called by:
 12205 ;;		_start_adc_scan
 12206 ;;		_adc_int_t_handler
 12207 ;; This function uses a reentrant model
 12208 ;;
 12209                           
 12210                           	psect	text40
 12211  01D3FE                     __ptext40:
 12212                           	opt callstack 0
 12213  01D3FE                     _ADCC_StartConversion:
 12214                           	opt callstack 0
 12215                           
 12216                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 12217                           ;stkvar	_channel @ sp[(0)+-1]
 12218                           
 12219                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12220                           ;incstack = 0
 12221 ;; hardware stack exceeded
 12222  01D3FE  0EFF               	movlw	-1
 12223  01D400  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 12224                           
 12225                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 12226  01D406  013E               	movlb	62	; () banked
 12227  01D408  8FF8               	bsf	248,7,b	;volatile
 12228                           
 12229                           ; BSR set to: 62
 12230                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 12231  01D40A  81F8               	bsf	248,0,b	;volatile
 12232                           
 12233                           ; BSR set to: 62
 12234                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 12235  01D40C  52E5               	movf	postdec1,f,c
 12236  01D40E  0012               	return		;funcret
 12237  01D410                     __end_of_ADCC_StartConversion:
 12238                           	opt callstack 0
 12239                           
 12240 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 12241 ;; Defined at:
 12242 ;;		line 189 in file "mcc_generated_files/adcc.c"
 12243 ;; Parameters:    Size  Location     Type
 12244 ;;		None
 12245 ;; Auto vars:     Size  Location     Type
 12246 ;;		None
 12247 ;; Return value:  Size  Location     Type
 12248 ;;                  1  [STACK] void 
 12249 ;; Registers used:
 12250 ;;		wreg, status,2
 12251 ;; Tracked objects:
 12252 ;;		On entry : 0/2
 12253 ;;		On exit  : 3F/3E
 12254 ;;		Unchanged: 0/0
 12255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12260 ;;Total ram usage:        0 bytes
 12261 ;; Hardware stack levels used:    1
 12262 ;; Hardware stack levels required when called:   15
 12263 ;; This function calls:
 12264 ;;		Nothing
 12265 ;; This function is called by:
 12266 ;;		_start_adc_scan
 12267 ;;		_adc_int_t_handler
 12268 ;; This function uses a reentrant model
 12269 ;;
 12270                           
 12271                           	psect	text41
 12272  01D4F4                     __ptext41:
 12273                           	opt callstack 0
 12274  01D4F4                     _ADCC_DischargeSampleCapacitor:
 12275                           	opt callstack 0
 12276                           
 12277                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 12278                           
 12279                           ; BSR set to: 62
 12280                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12281                           ;incstack = 0
 12282 ;; hardware stack exceeded
 12283  01D4F4  0E3B               	movlw	59
 12284  01D4F6  013E               	movlb	62	; () banked
 12285  01D4F8  6FF1               	movwf	241,b	;volatile
 12286                           
 12287                           ; BSR set to: 62
 12288                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 12289  01D4FA  0012               	return		;funcret
 12290  01D4FC                     __end_of_ADCC_DischargeSampleCapacitor:
 12291                           	opt callstack 0
 12292                           
 12293 ;; *************** function _spinners *****************
 12294 ;; Defined at:
 12295 ;;		line 147 in file "mbmc.c"
 12296 ;; Parameters:    Size  Location     Type
 12297 ;;  shape           1  [STACK] unsigned char 
 12298 ;;  reset           1  [STACK] const unsigned char 
 12299 ;; Auto vars:     Size  Location     Type
 12300 ;;  c               1  [STACK] unsigned char 
 12301 ;; Return value:  Size  Location     Type
 12302 ;;                  1  [STACK] unsigned char 
 12303 ;; Registers used:
 12304 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
 12305 ;; Tracked objects:
 12306 ;;		On entry : 0/0
 12307 ;;		On exit  : 0/0
 12308 ;;		Unchanged: 0/0
 12309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12314 ;;Total ram usage:        0 bytes
 12315 ;; Hardware stack levels used:    1
 12316 ;; Hardware stack levels required when called:   16
 12317 ;; This function calls:
 12318 ;;		_strlen
 12319 ;; This function is called by:
 12320 ;;		_main
 12321 ;;		_current_sensor_cal
 12322 ;; This function uses a reentrant model
 12323 ;;
 12324                           
 12325                           	psect	text42
 12326  01AD1C                     __ptext42:
 12327                           	opt callstack 0
 12328  01AD1C                     _spinners:
 12329                           	opt callstack 0
 12330                           
 12331                           ; BSR set to: 62
 12332                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12333  01AD1C  52E6               	movf	postinc1,f,c
 12334                           
 12335                           ;mbmc.c: 147: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 148: {;mbmc.c: 1
      +                          49:  static uint8_t s[6];;mbmc.c: 150:  char c;;mbmc.c: 152:  if (shape > (6 - 1))
 12336                           ;stkvar	_shape @ sp[(-1)+-1]
 12337                           
 12338                           ;incstack = 0
 12339  01AD1E  0EFE               	movlw	-2
 12340  01AD20  006F FF8C  F001    	movff	plusw1,btemp
 12341  01AD26  0E05               	movlw	5
 12342  01AD28  6401               	cpfsgt	btemp^0,c
 12343  01AD2A  D002               	goto	l2150
 12344                           
 12345                           ;mbmc.c: 153:   shape = 0;
 12346                           ;stkvar	_shape @ sp[(-1)+-1]
 12347  01AD2C  0EFE               	movlw	-2
 12348  01AD2E  6AE3               	clrf	plusw1,c
 12349  01AD30                     l2150:
 12350                           
 12351                           ;mbmc.c: 154:  if (reset)
 12352                           ;stkvar	_reset @ sp[(-1)+-2]
 12353  01AD30  0EFD               	movlw	-3
 12354  01AD32  50E3               	movf	plusw1,w,c
 12355  01AD34  B4D8               	btfsc	status,2,c
 12356  01AD36  D00A               	goto	l14140
 12357                           
 12358                           ;mbmc.c: 155:   s[shape] = 0;
 12359                           ;stkvar	_shape @ sp[(-1)+-1]
 12360  01AD38  0EFE               	movlw	-2
 12361  01AD3A  006F FF8C  F00C    	movff	plusw1,btemp+11
 12362  01AD40  500C               	movf	(btemp+11)^0,w,c
 12363  01AD42  0F74               	addlw	low spinners@s
 12364  01AD44  6ED9               	movwf	fsr2l,c
 12365  01AD46  6ADA               	clrf	fsr2h,c
 12366  01AD48  0E00               	movlw	0
 12367  01AD4A  6EDF               	movwf	indf2,c
 12368  01AD4C                     l14140:
 12369                           
 12370                           ;mbmc.c: 156:  c = spin[shape][s[shape]];
 12371                           ;stkvar	_shape @ sp[(-1)+-1]
 12372  01AD4C  0EFE               	movlw	-2
 12373  01AD4E  50E3               	movf	plusw1,w,c
 12374  01AD50  0D14               	mullw	20
 12375  01AD52  0E03               	movlw	low _spin
 12376  01AD54  6E0B               	movwf	(btemp+10)^0,c
 12377  01AD56  0EFA               	movlw	high _spin
 12378  01AD58  6E0C               	movwf	(btemp+11)^0,c
 12379  01AD5A  50F3               	movf	243,w,c
 12380  01AD5C  260B               	addwf	(btemp+10)^0,f,c
 12381  01AD5E  50F4               	movf	244,w,c
 12382  01AD60  220C               	addwfc	(btemp+11)^0,f,c
 12383                           
 12384                           ;stkvar	_shape @ sp[(-1)+-1]
 12385  01AD62  0EFE               	movlw	-2
 12386  01AD64  006F FF8C  F00A    	movff	plusw1,btemp+9
 12387  01AD6A  500A               	movf	(btemp+9)^0,w,c
 12388  01AD6C  0F74               	addlw	low spinners@s
 12389  01AD6E  6ED9               	movwf	fsr2l,c
 12390  01AD70  6ADA               	clrf	fsr2h,c
 12391  01AD72  50DF               	movf	indf2,w,c
 12392  01AD74  260B               	addwf	(btemp+10)^0,f,c
 12393  01AD76  0E00               	movlw	0
 12394  01AD78  220C               	addwfc	(btemp+11)^0,f,c
 12395  01AD7A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12396  01AD80  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12397  01AD86                     	if	0	;tblptru may be non-zero
 12398  01AD86                     	endif
 12399  01AD86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12400  01AD86  0E00               	movlw	low (__mediumconst shr (0+16))
 12401  01AD88  6EF8               	movwf	tblptru,c
 12402  01AD8A                     	endif
 12403                           
 12404                           ;stkvar	_c @ sp[(-1)+0]
 12405  01AD8A  0008               	tblrd		*
 12406  01AD8C  0EFF               	movlw	-1
 12407  01AD8E  006F FFD7 FFE3     	movff	tablat,plusw1
 12408                           
 12409                           ;mbmc.c: 157:  if (++s[shape] >= strlen(spin[shape]))
 12410                           ;stkvar	_shape @ sp[(-1)+-1]
 12411  01AD94  0EFE               	movlw	-2
 12412  01AD96  50E3               	movf	plusw1,w,c
 12413  01AD98  0D14               	mullw	20
 12414  01AD9A  0E03               	movlw	low _spin
 12415  01AD9C  6E0B               	movwf	(btemp+10)^0,c
 12416  01AD9E  0EFA               	movlw	high _spin
 12417  01ADA0  6E0C               	movwf	(btemp+11)^0,c
 12418  01ADA2  50F3               	movf	243,w,c
 12419  01ADA4  260B               	addwf	(btemp+10)^0,f,c
 12420  01ADA6  50F4               	movf	244,w,c
 12421  01ADA8  220C               	addwfc	(btemp+11)^0,f,c
 12422  01ADAA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12423  01ADB0  0060  F033  FFE6   	movff	btemp+11,postinc1
 12424  01ADB6  EC88  F0DC         	call	_strlen	;wreg free
 12425                           
 12426                           ;stkvar	_shape @ sp[(-1)+-1]
 12427  01ADBA  0EFE               	movlw	-2
 12428  01ADBC  006F FF8C  F00C    	movff	plusw1,btemp+11
 12429  01ADC2  500C               	movf	(btemp+11)^0,w,c
 12430  01ADC4  0F74               	addlw	low spinners@s
 12431  01ADC6  6ED9               	movwf	fsr2l,c
 12432  01ADC8  6ADA               	clrf	fsr2h,c
 12433  01ADCA  2ADF               	incf	indf2,f,c
 12434  01ADCC  50DF               	movf	indf2,w,c
 12435  01ADCE  6E0B               	movwf	(btemp+10)^0,c
 12436  01ADD0  6A0C               	clrf	(btemp+11)^0,c
 12437  01ADD2  5001               	movf	btemp^0,w,c
 12438  01ADD4  5C0B               	subwf	(btemp+10)^0,w,c
 12439  01ADD6  5002               	movf	(btemp+1)^0,w,c
 12440  01ADD8  580C               	subwfb	(btemp+11)^0,w,c
 12441  01ADDA  A0D8               	btfss	status,0,c
 12442  01ADDC  D00A               	goto	l14146
 12443                           
 12444                           ;mbmc.c: 158:   s[shape] = 0;
 12445                           ;stkvar	_shape @ sp[(-1)+-1]
 12446  01ADDE  0EFE               	movlw	-2
 12447  01ADE0  006F FF8C  F00C    	movff	plusw1,btemp+11
 12448  01ADE6  500C               	movf	(btemp+11)^0,w,c
 12449  01ADE8  0F74               	addlw	low spinners@s
 12450  01ADEA  6ED9               	movwf	fsr2l,c
 12451  01ADEC  6ADA               	clrf	fsr2h,c
 12452  01ADEE  0E00               	movlw	0
 12453  01ADF0  6EDF               	movwf	indf2,c
 12454  01ADF2                     l14146:
 12455                           
 12456                           ;mbmc.c: 159:  return c;
 12457                           ;stkvar	_c @ sp[(-1)+0]
 12458  01ADF2  0EFF               	movlw	-1
 12459  01ADF4  006F FF8C  F001    	movff	plusw1,btemp
 12460                           
 12461                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 12462  01ADFA  52E5               	movf	postdec1,f,c
 12463  01ADFC  52E5               	movf	postdec1,f,c
 12464  01ADFE  52E5               	movf	postdec1,f,c
 12465  01AE00  0012               	return		;funcret
 12466  01AE02                     __end_of_spinners:
 12467                           	opt callstack 0
 12468                           
 12469 ;; *************** function _get_switch *****************
 12470 ;; Defined at:
 12471 ;;		line 18 in file "dio.c"
 12472 ;; Parameters:    Size  Location     Type
 12473 ;;  i               1  [STACK] const unsigned char 
 12474 ;; Auto vars:     Size  Location     Type
 12475 ;;		None
 12476 ;; Return value:  Size  Location     Type
 12477 ;;                  1  [STACK] enum E17187
 12478 ;; Registers used:
 12479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 12480 ;; Tracked objects:
 12481 ;;		On entry : 0/0
 12482 ;;		On exit  : 0/0
 12483 ;;		Unchanged: 0/0
 12484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12489 ;;Total ram usage:        0 bytes
 12490 ;; Hardware stack levels used:    1
 12491 ;; Hardware stack levels required when called:   15
 12492 ;; This function calls:
 12493 ;;		Nothing
 12494 ;; This function is called by:
 12495 ;;		_main
 12496 ;;		_current_sensor_cal
 12497 ;;		_hid_input
 12498 ;; This function uses a reentrant model
 12499 ;;
 12500                           
 12501                           	psect	text43
 12502  01CDFA                     __ptext43:
 12503                           	opt callstack 0
 12504  01CDFA                     _get_switch:
 12505                           	opt callstack 13
 12506                           
 12507                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 12508                           ;stkvar	_i @ sp[(0)+-1]
 12509                           
 12510                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12511                           ;incstack = 0
 12512  01CDFA  0EFF               	movlw	-1
 12513  01CDFC  006F FF8C  F001    	movff	plusw1,btemp
 12514  01CE02  0E05               	movlw	5
 12515  01CE04  6401               	cpfsgt	btemp^0,c
 12516  01CE06  D002               	goto	l10858
 12517                           
 12518                           ;dio.c: 21:   return SW_OFF;
 12519  01CE08  0E00               	movlw	0
 12520  01CE0A  D00A               	goto	L10
 12521  01CE0C                     l10858:
 12522                           
 12523                           ;dio.c: 23:  return S.button[i].sw;
 12524                           ;stkvar	_i @ sp[(0)+-1]
 12525  01CE0C  0EFF               	movlw	-1
 12526  01CE0E  50E3               	movf	plusw1,w,c
 12527  01CE10  0D05               	mullw	5
 12528  01CE12  0EC7               	movlw	low _S
 12529  01CE14  24F3               	addwf	243,w,c
 12530  01CE16  6ED9               	movwf	fsr2l,c
 12531  01CE18  0E01               	movlw	high _S
 12532  01CE1A  20F4               	addwfc	prodh,w,c
 12533  01CE1C  6EDA               	movwf	fsr2h,c
 12534  01CE1E  50DF               	movf	indf2,w,c
 12535  01CE20                     L10:
 12536  01CE20  6E01               	movwf	btemp^0,c
 12537                           
 12538                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 12539  01CE22  52E5               	movf	postdec1,f,c
 12540  01CE24  0012               	return		;funcret
 12541  01CE26                     __end_of_get_switch:
 12542                           	opt callstack 0
 12543                           
 12544 ;; *************** function _clear_adc_scan *****************
 12545 ;; Defined at:
 12546 ;;		line 101 in file "daq.c"
 12547 ;; Parameters:    Size  Location     Type
 12548 ;;		None
 12549 ;; Auto vars:     Size  Location     Type
 12550 ;;		None
 12551 ;; Return value:  Size  Location     Type
 12552 ;;                  1  [STACK] void 
 12553 ;; Registers used:
 12554 ;;		None
 12555 ;; Tracked objects:
 12556 ;;		On entry : 0/0
 12557 ;;		On exit  : 3F/2
 12558 ;;		Unchanged: 0/0
 12559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12564 ;;Total ram usage:        0 bytes
 12565 ;; Hardware stack levels used:    1
 12566 ;; Hardware stack levels required when called:   15
 12567 ;; This function calls:
 12568 ;;		Nothing
 12569 ;; This function is called by:
 12570 ;;		_main
 12571 ;;		_current_sensor_cal
 12572 ;;		_update_adc_result
 12573 ;; This function uses a reentrant model
 12574 ;;
 12575                           
 12576                           	psect	text44
 12577  01D51A                     __ptext44:
 12578                           	opt callstack 0
 12579  01D51A                     _clear_adc_scan:
 12580                           	opt callstack 13
 12581                           
 12582                           ;daq.c: 103:  R.done = 0;
 12583                           
 12584                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12585                           ;incstack = 0
 12586  01D51A  0102               	movlb	2	; () banked
 12587  01D51C  6B35               	clrf	(_R+53)& (0+255),b	;volatile
 12588                           
 12589                           ; BSR set to: 2
 12590                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12591  01D51E  0012               	return		;funcret
 12592  01D520                     __end_of_clear_adc_scan:
 12593                           	opt callstack 0
 12594                           
 12595 ;; *************** function _cal_current_zero *****************
 12596 ;; Defined at:
 12597 ;;		line 327 in file "daq.c"
 12598 ;; Parameters:    Size  Location     Type
 12599 ;;  mode            1  [STACK] const _Bool 
 12600 ;;  cb              2  [STACK] const short 
 12601 ;;  cp              2  [STACK] const short 
 12602 ;; Auto vars:     Size  Location     Type
 12603 ;;		None
 12604 ;; Return value:  Size  Location     Type
 12605 ;;                  1  [STACK] _Bool 
 12606 ;; Registers used:
 12607 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 12608 ;; Tracked objects:
 12609 ;;		On entry : 0/2
 12610 ;;		On exit  : 0/0
 12611 ;;		Unchanged: 0/0
 12612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12617 ;;Total ram usage:        0 bytes
 12618 ;; Hardware stack levels used:    1
 12619 ;; Hardware stack levels required when called:   16
 12620 ;; This function calls:
 12621 ;;		_check_range
 12622 ;; This function is called by:
 12623 ;;		_current_sensor_cal
 12624 ;; This function uses a reentrant model
 12625 ;;
 12626                           
 12627                           	psect	text45
 12628  01BA4A                     __ptext45:
 12629                           	opt callstack 0
 12630  01BA4A                     _cal_current_zero:
 12631                           	opt callstack 13
 12632                           
 12633                           ;daq.c: 327: _Bool cal_current_zero(const _Bool mode, const int16_t cb, const int16_t cp
      +                          );daq.c: 328: {;daq.c: 330:  if (!check_range(cb, 100, 4000))
 12634                           
 12635                           ; BSR set to: 2
 12636                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12637                           ;incstack = 0
 12638  01BA4A  0EA0               	movlw	160
 12639  01BA4C  6EE6               	movwf	postinc1,c
 12640  01BA4E  0E0F               	movlw	15
 12641  01BA50  6EE6               	movwf	postinc1,c
 12642  01BA52  0E64               	movlw	100
 12643  01BA54  6EE6               	movwf	postinc1,c
 12644  01BA56  0E00               	movlw	0
 12645  01BA58  6EE6               	movwf	postinc1,c
 12646                           
 12647                           ;stkvar	_cb @ sp[(-4)+-3]
 12648  01BA5A  0EF9               	movlw	-7
 12649  01BA5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12650  01BA62  006F FF8F FFE6     	movff	plusw1,postinc1
 12651  01BA68  EC52  F0DF         	call	_check_range	;wreg free
 12652  01BA6C  5001               	movf	btemp^0,w,c
 12653  01BA6E  A4D8               	btfss	status,2,c
 12654  01BA70  D002               	goto	l11448
 12655  01BA72                     u10380:
 12656                           
 12657                           ;daq.c: 331:   return 0;
 12658  01BA72  0E00               	movlw	0
 12659  01BA74  D019               	goto	L11
 12660  01BA76                     l11448:
 12661                           
 12662                           ;daq.c: 333:  if (!check_range(cp, 100, 4000))
 12663  01BA76  0EA0               	movlw	160
 12664  01BA78  6EE6               	movwf	postinc1,c
 12665  01BA7A  0E0F               	movlw	15
 12666  01BA7C  6EE6               	movwf	postinc1,c
 12667  01BA7E  0E64               	movlw	100
 12668  01BA80  6EE6               	movwf	postinc1,c
 12669  01BA82  0E00               	movlw	0
 12670  01BA84  6EE6               	movwf	postinc1,c
 12671                           
 12672                           ;stkvar	_cp @ sp[(-4)+-5]
 12673  01BA86  0EF7               	movlw	-9
 12674  01BA88  006F FF8F FFE6     	movff	plusw1,postinc1
 12675  01BA8E  006F FF8F FFE6     	movff	plusw1,postinc1
 12676  01BA94  EC52  F0DF         	call	_check_range	;wreg free
 12677  01BA98  5001               	movf	btemp^0,w,c
 12678  01BA9A  B4D8               	btfsc	status,2,c
 12679  01BA9C  D7EA               	goto	u10380
 12680                           
 12681                           ;daq.c: 336:  if (!mode)
 12682                           ;stkvar	_mode @ sp[(0)+-1]
 12683  01BA9E  0EFF               	movlw	-1
 12684  01BAA0  50E3               	movf	plusw1,w,c
 12685  01BAA2  A4D8               	btfss	status,2,c
 12686  01BAA4  D003               	goto	l11460
 12687  01BAA6                     u10400:
 12688                           
 12689                           ;daq.c: 337:   return 1;
 12690  01BAA6  0E01               	movlw	1
 12691  01BAA8                     L11:
 12692  01BAA8  6E01               	movwf	btemp^0,c
 12693  01BAAA  D013               	goto	l2034
 12694  01BAAC                     l11460:
 12695                           
 12696                           ;daq.c: 339:  R.n_offset[0] = cb;
 12697                           ;stkvar	_cb @ sp[(0)+-3]
 12698  01BAAC  0EFD               	movlw	-3
 12699  01BAAE  006F FF8C  F226    	movff	plusw1,_R+38	;volatile
 12700  01BAB4  0EFE               	movlw	-2
 12701  01BAB6  006F FF8C  F227    	movff	plusw1,_R+39	;volatile
 12702                           
 12703                           ;daq.c: 340:  R.n_offset[1] = cp;
 12704                           ;stkvar	_cp @ sp[(0)+-5]
 12705  01BABC  0EFB               	movlw	-5
 12706  01BABE  006F FF8C  F228    	movff	plusw1,_R+40	;volatile
 12707  01BAC4  0EFC               	movlw	-4
 12708  01BAC6  006F FF8C  F229    	movff	plusw1,_R+41	;volatile
 12709                           
 12710                           ;daq.c: 341:  R.c_zero_cal = 1;
 12711  01BACC  0102               	movlb	2	; () banked
 12712  01BACE  83A7               	bsf	(_R+167)& (0+255),1,b	;volatile
 12713  01BAD0  D7EA               	goto	u10400
 12714  01BAD2                     l2034:
 12715                           
 12716                           ; _cal_current_zero: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
 12717  01BAD2  0EFB               	movlw	251
 12718  01BAD4  26E1               	addwf	fsr1l,f,c
 12719  01BAD6  0EFF               	movlw	255
 12720  01BAD8  22E2               	addwfc	fsr1h,f,c
 12721  01BADA  0012               	return		;funcret
 12722  01BADC                     __end_of_cal_current_zero:
 12723                           	opt callstack 0
 12724                           
 12725 ;; *************** function _check_range *****************
 12726 ;; Defined at:
 12727 ;;		line 315 in file "daq.c"
 12728 ;; Parameters:    Size  Location     Type
 12729 ;;  value           2  [STACK] const short 
 12730 ;;  window          2  [STACK] const short 
 12731 ;;  standard        2  [STACK] const short 
 12732 ;; Auto vars:     Size  Location     Type
 12733 ;;		None
 12734 ;; Return value:  Size  Location     Type
 12735 ;;                  1  [STACK] _Bool 
 12736 ;; Registers used:
 12737 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 12738 ;; Tracked objects:
 12739 ;;		On entry : 0/2
 12740 ;;		On exit  : 0/0
 12741 ;;		Unchanged: 0/0
 12742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12747 ;;Total ram usage:        0 bytes
 12748 ;; Hardware stack levels used:    1
 12749 ;; Hardware stack levels required when called:   15
 12750 ;; This function calls:
 12751 ;;		Nothing
 12752 ;; This function is called by:
 12753 ;;		_cal_current_zero
 12754 ;; This function uses a reentrant model
 12755 ;;
 12756                           
 12757                           	psect	text46
 12758  01BEA4                     __ptext46:
 12759                           	opt callstack 0
 12760  01BEA4                     _check_range:
 12761                           	opt callstack 13
 12762                           
 12763                           ;daq.c: 315: static _Bool check_range(const int16_t value, const int16_t window, const i
      +                          nt16_t standard);daq.c: 316: {;daq.c: 317:  if (value > (standard + window))
 12764                           ;stkvar	_value @ sp[(0)+-2]
 12765                           ;stkvar	_window @ sp[(0)+-4]
 12766                           ;stkvar	_standard @ sp[(0)+-6]
 12767                           
 12768                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12769                           ;incstack = 0
 12770  01BEA4  0EFA               	movlw	-6
 12771  01BEA6  006F FF8C  F00B    	movff	plusw1,btemp+10
 12772  01BEAC  0EFB               	movlw	-5
 12773  01BEAE  006F FF8C  F00C    	movff	plusw1,btemp+11
 12774  01BEB4  0EFC               	movlw	-4
 12775  01BEB6  50E3               	movf	plusw1,w,c
 12776  01BEB8  260B               	addwf	(btemp+10)^0,f,c
 12777  01BEBA  0EFD               	movlw	-3
 12778  01BEBC  50E3               	movf	plusw1,w,c
 12779  01BEBE  220C               	addwfc	(btemp+11)^0,f,c
 12780  01BEC0  0EFE               	movlw	-2
 12781  01BEC2  50E3               	movf	plusw1,w,c
 12782  01BEC4  5C0B               	subwf	(btemp+10)^0,w,c
 12783  01BEC6  500C               	movf	(btemp+11)^0,w,c
 12784  01BEC8  0A80               	xorlw	128
 12785  01BECA  6E01               	movwf	btemp^0,c
 12786  01BECC  0EFF               	movlw	-1
 12787  01BECE  50E3               	movf	plusw1,w,c
 12788  01BED0  0A80               	xorlw	128
 12789  01BED2  5801               	subwfb	btemp^0,w,c
 12790  01BED4  B0D8               	btfsc	status,0,c
 12791  01BED6  D002               	goto	l10916
 12792  01BED8                     u10150:
 12793                           
 12794                           ;daq.c: 318:   return 0;
 12795  01BED8  0E00               	movlw	0
 12796  01BEDA  D01E               	goto	L12
 12797  01BEDC                     l10916:
 12798                           
 12799                           ;daq.c: 319:  if (value < (standard - window))
 12800                           ;stkvar	_window @ sp[(0)+-4]
 12801                           ;stkvar	_standard @ sp[(0)+-6]
 12802  01BEDC  0EFA               	movlw	-6
 12803  01BEDE  006F FF8C  F00B    	movff	plusw1,btemp+10
 12804  01BEE4  0EFB               	movlw	-5
 12805  01BEE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 12806  01BEEC  0EFC               	movlw	-4
 12807  01BEEE  50E3               	movf	plusw1,w,c
 12808  01BEF0  5E0B               	subwf	(btemp+10)^0,f,c
 12809  01BEF2  0EFD               	movlw	-3
 12810  01BEF4  50E3               	movf	plusw1,w,c
 12811  01BEF6  5A0C               	subwfb	(btemp+11)^0,f,c
 12812                           
 12813                           ;stkvar	_value @ sp[(0)+-2]
 12814  01BEF8  0EFE               	movlw	-2
 12815  01BEFA  006F FF8C  F001    	movff	plusw1,btemp
 12816  01BF00  500B               	movf	(btemp+10)^0,w,c
 12817  01BF02  5C01               	subwf	btemp^0,w,c
 12818  01BF04  0EFF               	movlw	-1
 12819  01BF06  50E3               	movf	plusw1,w,c
 12820  01BF08  0A80               	xorlw	128
 12821  01BF0A  6E01               	movwf	btemp^0,c
 12822  01BF0C  500C               	movf	(btemp+11)^0,w,c
 12823  01BF0E  0A80               	xorlw	128
 12824  01BF10  5801               	subwfb	btemp^0,w,c
 12825  01BF12  A0D8               	btfss	status,0,c
 12826  01BF14  D7E1               	goto	u10150
 12827                           
 12828                           ;daq.c: 321:  return 1;
 12829  01BF16  0E01               	movlw	1
 12830  01BF18                     L12:
 12831  01BF18  6E01               	movwf	btemp^0,c
 12832                           
 12833                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 12834  01BF1A  0EFA               	movlw	250
 12835  01BF1C  26E1               	addwf	fsr1l,f,c
 12836  01BF1E  0EFF               	movlw	255
 12837  01BF20  22E2               	addwfc	fsr1h,f,c
 12838  01BF22  0012               	return		;funcret
 12839  01BF24                     __end_of_check_range:
 12840                           	opt callstack 0
 12841                           
 12842 ;; *************** function _convert_adc_data *****************
 12843 ;; Defined at:
 12844 ;;		line 51 in file "mbmc.c"
 12845 ;; Parameters:    Size  Location     Type
 12846 ;;		None
 12847 ;; Auto vars:     Size  Location     Type
 12848 ;;  i               1  [STACK] unsigned char 
 12849 ;; Return value:  Size  Location     Type
 12850 ;;                  1  [STACK] void 
 12851 ;; Registers used:
 12852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 12853 ;; Tracked objects:
 12854 ;;		On entry : 0/1
 12855 ;;		On exit  : 0/0
 12856 ;;		Unchanged: 0/0
 12857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12862 ;;Total ram usage:        0 bytes
 12863 ;; Hardware stack levels used:    1
 12864 ;; Hardware stack levels required when called:   18
 12865 ;; This function calls:
 12866 ;;		_conv_raw_result
 12867 ;;		_lp_filter
 12868 ;; This function is called by:
 12869 ;;		_main
 12870 ;; This function uses a reentrant model
 12871 ;;
 12872                           
 12873                           	psect	text47
 12874  01B3A4                     __ptext47:
 12875                           	opt callstack 0
 12876  01B3A4                     _convert_adc_data:
 12877                           	opt callstack 0
 12878                           
 12879                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12880  01B3A4  52E6               	movf	postinc1,f,c
 12881                           
 12882                           ;mbmc.c: 53:  uint8_t i = 0;
 12883                           ;stkvar	_i @ sp[(-1)+0]
 12884                           
 12885                           ;incstack = 0
 12886  01B3A6  0EFF               	movlw	-1
 12887  01B3A8  6AE3               	clrf	plusw1,c
 12888  01B3AA                     l12250:
 12889                           
 12890                           ;mbmc.c: 56:   if (V.calib) {
 12891  01B3AA  0101               	movlb	1	; () banked
 12892  01B3AC  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 12893  01B3AE  B4D8               	btfsc	status,2,c
 12894  01B3B0  D01B               	goto	l12254
 12895                           
 12896                           ; BSR set to: 1
 12897                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 12898  01B3B2  0E01               	movlw	1
 12899  01B3B4  6EE6               	movwf	postinc1,c
 12900                           
 12901                           ;stkvar	_i @ sp[(-2)+0]
 12902  01B3B6  0EFE               	movlw	-2
 12903  01B3B8  50E3               	movf	plusw1,w,c
 12904  01B3BA  6EE6               	movwf	postinc1,c
 12905  01B3BC  0E01               	movlw	1
 12906  01B3BE  6EE6               	movwf	postinc1,c
 12907                           
 12908                           ;stkvar	_i @ sp[(-4)+0]
 12909  01B3C0  0EFC               	movlw	-4
 12910  01B3C2  50E3               	movf	plusw1,w,c
 12911  01B3C4  6EE6               	movwf	postinc1,c
 12912  01B3C6  EC9D  F0AA         	call	_conv_raw_result	;wreg free
 12913  01B3CA  0060  F007  FFE6   	movff	btemp,postinc1
 12914  01B3D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12915  01B3D6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 12916  01B3DC  0060  F013  FFE6   	movff	btemp+3,postinc1
 12917  01B3E2  EC8E  F0C8         	call	_lp_filter	;wreg free
 12918  01B3E6  D01A               	goto	L13
 12919  01B3E8                     l12254:
 12920                           
 12921                           ; BSR set to: 1
 12922                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 12923  01B3E8  0E00               	movlw	0
 12924  01B3EA  6EE6               	movwf	postinc1,c
 12925                           
 12926                           ;stkvar	_i @ sp[(-2)+0]
 12927  01B3EC  0EFE               	movlw	-2
 12928  01B3EE  50E3               	movf	plusw1,w,c
 12929  01B3F0  6EE6               	movwf	postinc1,c
 12930  01B3F2  0E00               	movlw	0
 12931  01B3F4  6EE6               	movwf	postinc1,c
 12932                           
 12933                           ;stkvar	_i @ sp[(-4)+0]
 12934  01B3F6  0EFC               	movlw	-4
 12935  01B3F8  50E3               	movf	plusw1,w,c
 12936  01B3FA  6EE6               	movwf	postinc1,c
 12937  01B3FC  EC9D  F0AA         	call	_conv_raw_result	;wreg free
 12938  01B400  0060  F007  FFE6   	movff	btemp,postinc1
 12939  01B406  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12940  01B40C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 12941  01B412  0060  F013  FFE6   	movff	btemp+3,postinc1
 12942  01B418  EC8E  F0C8         	call	_lp_filter	;wreg free
 12943  01B41C                     L13:
 12944                           
 12945                           ;stkvar	_i @ sp[(-1)+0]
 12946  01B41C  0EFF               	movlw	-1
 12947  01B41E  50E3               	movf	plusw1,w,c
 12948  01B420  0D04               	mullw	4
 12949  01B422  0EFF               	movlw	low _C
 12950  01B424  24F3               	addwf	243,w,c
 12951  01B426  6ED9               	movwf	fsr2l,c
 12952  01B428  0E08               	movlw	high _C
 12953  01B42A  20F4               	addwfc	prodh,w,c
 12954  01B42C  6EDA               	movwf	fsr2h,c
 12955  01B42E  0060  F007  FFDE   	movff	btemp,postinc2
 12956  01B434  0060  F00B  FFDE   	movff	btemp+1,postinc2
 12957  01B43A  0060  F00F  FFDE   	movff	btemp+2,postinc2
 12958  01B440  0060  F013  FFDE   	movff	btemp+3,postinc2
 12959                           
 12960                           ;mbmc.c: 61:  } while (++i < 16);
 12961                           ;stkvar	_i @ sp[(-1)+0]
 12962  01B446  0EFF               	movlw	-1
 12963  01B448  2AE3               	incf	plusw1,f,c
 12964  01B44A  0EFF               	movlw	-1
 12965  01B44C  006F FF8C  F001    	movff	plusw1,btemp
 12966  01B452  0E0F               	movlw	15
 12967  01B454  6401               	cpfsgt	btemp^0,c
 12968  01B456  D7A9               	goto	l12250
 12969                           
 12970                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 12971  01B458  52E5               	movf	postdec1,f,c
 12972  01B45A  0012               	return		;funcret
 12973  01B45C                     __end_of_convert_adc_data:
 12974                           	opt callstack 0
 12975                           
 12976 ;; *************** function _clear_hid_pflags *****************
 12977 ;; Defined at:
 12978 ;;		line 67 in file "hid.c"
 12979 ;; Parameters:    Size  Location     Type
 12980 ;;  h               1  [STACK] PTR struct H_data
 12981 ;;		 -> H(9), 
 12982 ;; Auto vars:     Size  Location     Type
 12983 ;;		None
 12984 ;; Return value:  Size  Location     Type
 12985 ;;                  1  [STACK] void 
 12986 ;; Registers used:
 12987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 12988 ;; Tracked objects:
 12989 ;;		On entry : 3F/0
 12990 ;;		On exit  : 0/0
 12991 ;;		Unchanged: 0/0
 12992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12997 ;;Total ram usage:        0 bytes
 12998 ;; Hardware stack levels used:    1
 12999 ;; Hardware stack levels required when called:   15
 13000 ;; This function calls:
 13001 ;;		Nothing
 13002 ;; This function is called by:
 13003 ;;		_main
 13004 ;; This function uses a reentrant model
 13005 ;;
 13006                           
 13007                           	psect	text48
 13008  01CC72                     __ptext48:
 13009                           	opt callstack 0
 13010  01CC72                     _clear_hid_pflags:
 13011                           	opt callstack 15
 13012                           
 13013                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 13014                           ;stkvar	_h @ sp[(0)+-1]
 13015                           
 13016                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13017                           ;incstack = 0
 13018  01CC72  0EFF               	movlw	-1
 13019  01CC74  50E3               	movf	plusw1,w,c
 13020  01CC76  6ED9               	movwf	fsr2l,c
 13021  01CC78  6ADA               	clrf	fsr2h,c
 13022  01CC7A  0E03               	movlw	3
 13023  01CC7C  26D9               	addwf	fsr2l,f,c
 13024  01CC7E  0E00               	movlw	0
 13025  01CC80  6EDF               	movwf	indf2,c
 13026                           
 13027                           ;hid.c: 70:  h->enter_p = SW_OFF;
 13028                           ;stkvar	_h @ sp[(0)+-1]
 13029  01CC82  0EFF               	movlw	-1
 13030  01CC84  50E3               	movf	plusw1,w,c
 13031  01CC86  6ED9               	movwf	fsr2l,c
 13032  01CC88  6ADA               	clrf	fsr2h,c
 13033  01CC8A  0E05               	movlw	5
 13034  01CC8C  26D9               	addwf	fsr2l,f,c
 13035  01CC8E  0E00               	movlw	0
 13036  01CC90  6EDF               	movwf	indf2,c
 13037                           
 13038                           ;hid.c: 71:  h->calib_p = SW_OFF;
 13039                           ;stkvar	_h @ sp[(0)+-1]
 13040  01CC92  0EFF               	movlw	-1
 13041  01CC94  50E3               	movf	plusw1,w,c
 13042  01CC96  6ED9               	movwf	fsr2l,c
 13043  01CC98  6ADA               	clrf	fsr2h,c
 13044  01CC9A  0E07               	movlw	7
 13045  01CC9C  26D9               	addwf	fsr2l,f,c
 13046  01CC9E  0E00               	movlw	0
 13047  01CCA0  6EDF               	movwf	indf2,c
 13048                           
 13049                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 13050  01CCA2  52E5               	movf	postdec1,f,c
 13051  01CCA4  0012               	return		;funcret
 13052  01CCA6                     __end_of_clear_hid_pflags:
 13053                           	opt callstack 0
 13054                           
 13055 ;; *************** function _check_help *****************
 13056 ;; Defined at:
 13057 ;;		line 40 in file "mconfig.c"
 13058 ;; Parameters:    Size  Location     Type
 13059 ;;  flipper         1  [STACK] const _Bool 
 13060 ;; Auto vars:     Size  Location     Type
 13061 ;;  estatus         1    0        _Bool 
 13062 ;; Return value:  Size  Location     Type
 13063 ;;                  1  [STACK] _Bool 
 13064 ;; Registers used:
 13065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13066 ;; Tracked objects:
 13067 ;;		On entry : 3F/1
 13068 ;;		On exit  : 0/0
 13069 ;;		Unchanged: 0/0
 13070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13075 ;;Total ram usage:        0 bytes
 13076 ;; Hardware stack levels used:    1
 13077 ;; Hardware stack levels required when called:   28
 13078 ;; This function calls:
 13079 ;;		_StartTimer
 13080 ;;		_TimerDone
 13081 ;;		_display_help
 13082 ;;		_display_info
 13083 ;;		_get_vterm_ptr
 13084 ;;		_help_button
 13085 ;;		_mode_lamp_bright
 13086 ;;		_mode_lamp_dim
 13087 ;;		_set_display_info
 13088 ;;		_set_temp_display_help
 13089 ;;		_set_vterm
 13090 ;;		_sprintf
 13091 ;;		_update_lcd
 13092 ;;		_vterm_dump
 13093 ;; This function is called by:
 13094 ;;		_main
 13095 ;; This function uses a reentrant model
 13096 ;;
 13097                           
 13098                           	psect	text49
 13099  018B3C                     __ptext49:
 13100                           	opt callstack 0
 13101  018B3C                     _check_help:
 13102                           	opt callstack 2
 13103                           
 13104                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 13105                           
 13106                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13107                           ;incstack = 0
 13108  018B3C  EC98  F0E5         	call	_help_button	;wreg free
 13109  018B40  5001               	movf	btemp^0,w,c
 13110  018B42  B4D8               	btfsc	status,2,c
 13111  018B44  D0D0               	goto	l14426
 13112  018B46  EC7E  F0EA         	call	_display_info	;wreg free
 13113  018B4A  0401               	decf	btemp^0,w,c
 13114  018B4C  B4D8               	btfsc	status,2,c
 13115  018B4E  D0CB               	goto	l14426
 13116                           
 13117                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 13118  018B50  0EDC               	movlw	220
 13119  018B52  6EE6               	movwf	postinc1,c
 13120  018B54  0E05               	movlw	5
 13121  018B56  6EE6               	movwf	postinc1,c
 13122  018B58  0E0B               	movlw	11
 13123  018B5A  6EE6               	movwf	postinc1,c
 13124  018B5C  ECDC  F0E4         	call	_StartTimer	;wreg free
 13125                           
 13126                           ;mconfig.c: 48:   if (V.debug)
 13127  018B60  0101               	movlb	1	; () banked
 13128  018B62  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
 13129                           
 13130                           ; BSR set to: 1
 13131                           ;mconfig.c: 49:    vterm_dump();
 13132  018B64  EC23  F0D1         	call	_vterm_dump	;wreg free
 13133                           
 13134                           ;mconfig.c: 51:   set_vterm(1);
 13135  018B68  0E01               	movlw	1
 13136  018B6A  6EE6               	movwf	postinc1,c
 13137  018B6C  EC5F  F0E9         	call	_set_vterm	;wreg free
 13138                           
 13139                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 13140  018B70  EC7E  F0EA         	call	_display_info	;wreg free
 13141  018B74  5001               	movf	btemp^0,w,c
 13142  018B76  6EE6               	movwf	postinc1,c
 13143  018B78  EC20  F0EA         	call	_set_temp_display_help	;wreg free
 13144                           
 13145                           ; BSR set to: 1
 13146                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 13147  018B7C  0E01               	movlw	1
 13148  018B7E  6EE6               	movwf	postinc1,c
 13149  018B80  EC6E  F0E9         	call	_set_display_info	;wreg free
 13150                           
 13151                           ;mconfig.c: 54:   if (flipper) {
 13152                           ;stkvar	_flipper @ sp[(0)+-1]
 13153  018B84  0EFF               	movlw	-1
 13154  018B86  50E3               	movf	plusw1,w,c
 13155  018B88  B4D8               	btfsc	status,2,c
 13156  018B8A  D019               	goto	l14412
 13157                           
 13158                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 13159  018B8C  0EB2               	movlw	low STR_64
 13160  018B8E  6EE6               	movwf	postinc1,c
 13161  018B90  0EFF               	movlw	high STR_64
 13162  018B92  6EE6               	movwf	postinc1,c
 13163  018B94  0E5C               	movlw	low STR_66
 13164  018B96  6EE6               	movwf	postinc1,c
 13165  018B98  0EFF               	movlw	high STR_66
 13166  018B9A  6EE6               	movwf	postinc1,c
 13167  018B9C  0E01               	movlw	1
 13168  018B9E  6EE6               	movwf	postinc1,c
 13169  018BA0  0E00               	movlw	0
 13170  018BA2  6EE6               	movwf	postinc1,c
 13171  018BA4  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
 13172  018BA8  0060  F007  FFE6   	movff	btemp,postinc1
 13173  018BAE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13174  018BB4  0E06               	movlw	6
 13175  018BB6  6EE6               	movwf	postinc1,c
 13176  018BB8  EC94  F0D5         	call	_sprintf	;wreg free
 13177                           
 13178                           ;mconfig.c: 56:   } else {
 13179  018BBC  D018               	goto	l1805
 13180  018BBE                     l14412:
 13181                           
 13182                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 13183  018BBE  0EC8               	movlw	low STR_65
 13184  018BC0  6EE6               	movwf	postinc1,c
 13185  018BC2  0EFF               	movlw	high STR_65
 13186  018BC4  6EE6               	movwf	postinc1,c
 13187  018BC6  0E5C               	movlw	low STR_66
 13188  018BC8  6EE6               	movwf	postinc1,c
 13189  018BCA  0EFF               	movlw	high STR_66
 13190  018BCC  6EE6               	movwf	postinc1,c
 13191  018BCE  0E01               	movlw	1
 13192  018BD0  6EE6               	movwf	postinc1,c
 13193  018BD2  0E00               	movlw	0
 13194  018BD4  6EE6               	movwf	postinc1,c
 13195  018BD6  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
 13196  018BDA  0060  F007  FFE6   	movff	btemp,postinc1
 13197  018BE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13198  018BE6  0E06               	movlw	6
 13199  018BE8  6EE6               	movwf	postinc1,c
 13200  018BEA  EC94  F0D5         	call	_sprintf	;wreg free
 13201  018BEE                     l1805:
 13202                           
 13203                           ; BSR set to: 0
 13204                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 13205  018BEE  0101               	movlb	1	; () banked
 13206  018BF0  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 13207  018BF2  32E8               	rrcf	wreg,f,c
 13208  018BF4  32E8               	rrcf	wreg,f,c
 13209  018BF6  0B03               	andlw	3
 13210  018BF8  0D24               	mullw	36
 13211  018BFA  0E12               	movlw	18
 13212  018BFC  26F3               	addwf	243,f,c
 13213  018BFE  0E00               	movlw	0
 13214  018C00  22F4               	addwfc	244,f,c
 13215  018C02  0E73               	movlw	low _T
 13216  018C04  6E0B               	movwf	(btemp+10)^0,c
 13217  018C06  0EF9               	movlw	high _T
 13218  018C08  6E0C               	movwf	(btemp+11)^0,c
 13219  018C0A  50F3               	movf	243,w,c
 13220  018C0C  260B               	addwf	(btemp+10)^0,f,c
 13221  018C0E  50F4               	movf	244,w,c
 13222  018C10  220C               	addwfc	(btemp+11)^0,f,c
 13223  018C12  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13224  018C18  0060  F033  FFE6   	movff	btemp+11,postinc1
 13225  018C1E  0EBE               	movlw	low STR_68
 13226  018C20  6EE6               	movwf	postinc1,c
 13227  018C22  0EFF               	movlw	high STR_68
 13228  018C24  6EE6               	movwf	postinc1,c
 13229  018C26  0E01               	movlw	1
 13230  018C28  6EE6               	movwf	postinc1,c
 13231  018C2A  0E01               	movlw	1
 13232  018C2C  6EE6               	movwf	postinc1,c
 13233  018C2E  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
 13234  018C32  0060  F007  FFE6   	movff	btemp,postinc1
 13235  018C38  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13236  018C3E  0E06               	movlw	6
 13237  018C40  6EE6               	movwf	postinc1,c
 13238  018C42  EC94  F0D5         	call	_sprintf	;wreg free
 13239                           
 13240                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 13241  018C46  0101               	movlb	1	; () banked
 13242  018C48  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 13243  018C4A  32E8               	rrcf	wreg,f,c
 13244  018C4C  32E8               	rrcf	wreg,f,c
 13245  018C4E  0B03               	andlw	3
 13246  018C50  0D24               	mullw	36
 13247  018C52  0E73               	movlw	low _T
 13248  018C54  6E0B               	movwf	(btemp+10)^0,c
 13249  018C56  0EF9               	movlw	high _T
 13250  018C58  6E0C               	movwf	(btemp+11)^0,c
 13251  018C5A  50F3               	movf	243,w,c
 13252  018C5C  260B               	addwf	(btemp+10)^0,f,c
 13253  018C5E  50F4               	movf	244,w,c
 13254  018C60  220C               	addwfc	(btemp+11)^0,f,c
 13255  018C62  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13256  018C68  0060  F033  FFE6   	movff	btemp+11,postinc1
 13257  018C6E  0EBE               	movlw	low STR_68
 13258  018C70  6EE6               	movwf	postinc1,c
 13259  018C72  0EFF               	movlw	high STR_68
 13260  018C74  6EE6               	movwf	postinc1,c
 13261  018C76  0E01               	movlw	1
 13262  018C78  6EE6               	movwf	postinc1,c
 13263  018C7A  0E02               	movlw	2
 13264  018C7C  6EE6               	movwf	postinc1,c
 13265  018C7E  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
 13266  018C82  0060  F007  FFE6   	movff	btemp,postinc1
 13267  018C88  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13268  018C8E  0E06               	movlw	6
 13269  018C90  6EE6               	movwf	postinc1,c
 13270  018C92  EC94  F0D5         	call	_sprintf	;wreg free
 13271                           
 13272                           ; BSR set to: 0
 13273                           ;mconfig.c: 61:   V.help_id++;
 13274  018C96  EE20  F1A2         	lfsr	2,_V+155	;volatile
 13275  018C9A  38DF               	swapf	223,w,c
 13276  018C9C  6E0C               	movwf	(btemp+11)^0,c
 13277  018C9E  320C               	rrcf	(btemp+11)^0,f,c
 13278  018CA0  300C               	rrcf	(btemp+11)^0,w,c
 13279  018CA2  0B03               	andlw	3
 13280  018CA4  6E0C               	movwf	(btemp+11)^0,c
 13281  018CA6  2A0C               	incf	(btemp+11)^0,f,c
 13282  018CA8  3A0C               	swapf	(btemp+11)^0,f,c
 13283  018CAA  360C               	rlcf	(btemp+11)^0,f,c
 13284  018CAC  360C               	rlcf	(btemp+11)^0,f,c
 13285  018CAE  50DF               	movf	223,w,c
 13286  018CB0  180C               	xorwf	(btemp+11)^0,w,c
 13287  018CB2  0B3F               	andlw	-193
 13288  018CB4  180C               	xorwf	(btemp+11)^0,w,c
 13289  018CB6  6EDF               	movwf	223,c
 13290                           
 13291                           ; BSR set to: 0
 13292                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 13293  018CB8  0EB8               	movlw	184
 13294  018CBA  6EE6               	movwf	postinc1,c
 13295  018CBC  0E0B               	movlw	11
 13296  018CBE  6EE6               	movwf	postinc1,c
 13297  018CC0  0E09               	movlw	9
 13298  018CC2  6EE6               	movwf	postinc1,c
 13299  018CC4  ECDC  F0E4         	call	_StartTimer	;wreg free
 13300                           
 13301                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 13302  018CC8  0EB8               	movlw	184
 13303  018CCA  6EE6               	movwf	postinc1,c
 13304  018CCC  0E0B               	movlw	11
 13305  018CCE  6EE6               	movwf	postinc1,c
 13306  018CD0  0E07               	movlw	7
 13307  018CD2  6EE6               	movwf	postinc1,c
 13308  018CD4  ECDC  F0E4         	call	_StartTimer	;wreg free
 13309                           
 13310                           ;mconfig.c: 64:   mode_lamp_bright();
 13311  018CD8  EC37  F0EA         	call	_mode_lamp_bright	;wreg free
 13312                           
 13313                           ;mconfig.c: 65:   update_lcd(1);
 13314  018CDC  0E01               	movlw	1
 13315  018CDE  6EE6               	movwf	postinc1,c
 13316  018CE0  EC0C  F0D5         	call	_update_lcd	;wreg free
 13317                           
 13318                           ;mconfig.c: 67:  } else {
 13319  018CE4  D032               	goto	l1806
 13320  018CE6                     l14426:
 13321                           
 13322                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 13323  018CE6  0E09               	movlw	9
 13324  018CE8  6EE6               	movwf	postinc1,c
 13325  018CEA  EC69  F0E7         	call	_TimerDone	;wreg free
 13326  018CEE  5001               	movf	btemp^0,w,c
 13327  018CF0  B4D8               	btfsc	status,2,c
 13328  018CF2  D02B               	goto	l1806
 13329                           
 13330                           ;mconfig.c: 69:    set_vterm(0);
 13331  018CF4  0E00               	movlw	0
 13332  018CF6  6EE6               	movwf	postinc1,c
 13333  018CF8  EC5F  F0E9         	call	_set_vterm	;wreg free
 13334                           
 13335                           ;mconfig.c: 70:    V.help = 0;
 13336  018CFC  0101               	movlb	1	; () banked
 13337  018CFE  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
 13338                           
 13339                           ; BSR set to: 1
 13340                           ;mconfig.c: 71:    set_display_info(display_help());
 13341  018D00  EC82  F0EA         	call	_display_help	;wreg free
 13342  018D04  5001               	movf	btemp^0,w,c
 13343  018D06  6EE6               	movwf	postinc1,c
 13344  018D08  EC6E  F0E9         	call	_set_display_info	;wreg free
 13345                           
 13346                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 13347  018D0C  0060  F673  FFE6   	movff	_V+149,postinc1
 13348  018D12  0060  F677  FFE6   	movff	_V+150,postinc1
 13349  018D18  ECB3  F0E9         	call	_mode_lamp_dim	;wreg free
 13350                           
 13351                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 13352  018D1C  0E0B               	movlw	11
 13353  018D1E  6EE6               	movwf	postinc1,c
 13354  018D20  EC69  F0E7         	call	_TimerDone	;wreg free
 13355  018D24  5001               	movf	btemp^0,w,c
 13356  018D26  B4D8               	btfsc	status,2,c
 13357  018D28  D010               	goto	l1806
 13358                           
 13359                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 13360  018D2A  0101               	movlb	1	; () banked
 13361  018D2C  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
 13362  018D2E  A4D8               	btfss	status,2,c
 13363  018D30  D002               	goto	u13790
 13364  018D32  0E01               	movlw	1
 13365  018D34  D001               	goto	u13800
 13366  018D36                     u13790:
 13367  018D36  0E00               	movlw	0
 13368  018D38                     u13800:
 13369  018D38  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
 13370                           
 13371                           ; BSR set to: 1
 13372                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 13373  018D3A  0EDC               	movlw	220
 13374  018D3C  6EE6               	movwf	postinc1,c
 13375  018D3E  0E05               	movlw	5
 13376  018D40  6EE6               	movwf	postinc1,c
 13377  018D42  0E0B               	movlw	11
 13378  018D44  6EE6               	movwf	postinc1,c
 13379  018D46  ECDC  F0E4         	call	_StartTimer	;wreg free
 13380  018D4A                     l1806:
 13381                           
 13382                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 13383  018D4A  52E5               	movf	postdec1,f,c
 13384  018D4C  0012               	return		;funcret
 13385  018D4E                     __end_of_check_help:
 13386                           	opt callstack 0
 13387                           
 13388 ;; *************** function _vterm_dump *****************
 13389 ;; Defined at:
 13390 ;;		line 121 in file "mconfig.c"
 13391 ;; Parameters:    Size  Location     Type
 13392 ;;		None
 13393 ;; Auto vars:     Size  Location     Type
 13394 ;;		None
 13395 ;; Return value:  Size  Location     Type
 13396 ;;                  1  [STACK] void 
 13397 ;; Registers used:
 13398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13399 ;; Tracked objects:
 13400 ;;		On entry : 3F/1
 13401 ;;		On exit  : 0/0
 13402 ;;		Unchanged: 0/0
 13403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13408 ;;Total ram usage:        0 bytes
 13409 ;; Hardware stack levels used:    1
 13410 ;; Hardware stack levels required when called:   27
 13411 ;; This function calls:
 13412 ;;		_WaitMs
 13413 ;;		_eaDogM_WriteStringAtPos
 13414 ;;		_get_vterm_ptr
 13415 ;;		_sprintf
 13416 ;;		_wait_lcd_done
 13417 ;; This function is called by:
 13418 ;;		_check_help
 13419 ;; This function uses a reentrant model
 13420 ;;
 13421                           
 13422                           	psect	text50
 13423  01A246                     __ptext50:
 13424                           	opt callstack 0
 13425  01A246                     _vterm_dump:
 13426                           	opt callstack 2
 13427                           
 13428                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 13429                           
 13430                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13431                           ;incstack = 0
 13432  01A246  0E01               	movlw	1
 13433  01A248  6EE6               	movwf	postinc1,c
 13434  01A24A  0E00               	movlw	0
 13435  01A24C  6EE6               	movwf	postinc1,c
 13436  01A24E  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
 13437  01A252  0060  F007  FFE6   	movff	btemp,postinc1
 13438  01A258  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13439  01A25E  0E00               	movlw	0
 13440  01A260  6EE6               	movwf	postinc1,c
 13441  01A262  0E00               	movlw	0
 13442  01A264  6EE6               	movwf	postinc1,c
 13443  01A266  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
 13444  01A26A  0060  F007  FFE6   	movff	btemp,postinc1
 13445  01A270  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13446  01A276  0EA3               	movlw	low STR_70
 13447  01A278  6EE6               	movwf	postinc1,c
 13448  01A27A  0EFF               	movlw	high STR_70
 13449  01A27C  6EE6               	movwf	postinc1,c
 13450  01A27E  0E08               	movlw	low (_V+1)
 13451  01A280  6EE6               	movwf	postinc1,c
 13452  01A282  0E01               	movlw	high (_V+1)
 13453  01A284  6EE6               	movwf	postinc1,c
 13454  01A286  0E08               	movlw	8
 13455  01A288  6EE6               	movwf	postinc1,c
 13456  01A28A  EC94  F0D5         	call	_sprintf	;wreg free
 13457                           
 13458                           ; BSR set to: 0
 13459                           ;mconfig.c: 124:  wait_lcd_done();
 13460  01A28E  ECEE  F0E8         	call	_wait_lcd_done	;wreg free
 13461                           
 13462                           ; BSR set to: 0
 13463                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 13464  01A292  0E08               	movlw	low (_V+1)
 13465  01A294  6EE6               	movwf	postinc1,c
 13466  01A296  0E01               	movlw	high (_V+1)
 13467  01A298  6EE6               	movwf	postinc1,c
 13468  01A29A  0E00               	movlw	0
 13469  01A29C  6EE6               	movwf	postinc1,c
 13470  01A29E  0E00               	movlw	0
 13471  01A2A0  6EE6               	movwf	postinc1,c
 13472  01A2A2  ECE1  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
 13473                           
 13474                           ; BSR set to: 59
 13475                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 13476  01A2A6  0E01               	movlw	1
 13477  01A2A8  6EE6               	movwf	postinc1,c
 13478  01A2AA  0E01               	movlw	1
 13479  01A2AC  6EE6               	movwf	postinc1,c
 13480  01A2AE  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
 13481  01A2B2  0060  F007  FFE6   	movff	btemp,postinc1
 13482  01A2B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13483  01A2BE  0E00               	movlw	0
 13484  01A2C0  6EE6               	movwf	postinc1,c
 13485  01A2C2  0E01               	movlw	1
 13486  01A2C4  6EE6               	movwf	postinc1,c
 13487  01A2C6  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
 13488  01A2CA  0060  F007  FFE6   	movff	btemp,postinc1
 13489  01A2D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13490  01A2D6  0EA3               	movlw	low STR_70
 13491  01A2D8  6EE6               	movwf	postinc1,c
 13492  01A2DA  0EFF               	movlw	high STR_70
 13493  01A2DC  6EE6               	movwf	postinc1,c
 13494  01A2DE  0E08               	movlw	low (_V+1)
 13495  01A2E0  6EE6               	movwf	postinc1,c
 13496  01A2E2  0E01               	movlw	high (_V+1)
 13497  01A2E4  6EE6               	movwf	postinc1,c
 13498  01A2E6  0E08               	movlw	8
 13499  01A2E8  6EE6               	movwf	postinc1,c
 13500  01A2EA  EC94  F0D5         	call	_sprintf	;wreg free
 13501                           
 13502                           ; BSR set to: 0
 13503                           ;mconfig.c: 127:  wait_lcd_done();
 13504  01A2EE  ECEE  F0E8         	call	_wait_lcd_done	;wreg free
 13505                           
 13506                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 13507  01A2F2  0E08               	movlw	low (_V+1)
 13508  01A2F4  6EE6               	movwf	postinc1,c
 13509  01A2F6  0E01               	movlw	high (_V+1)
 13510  01A2F8  6EE6               	movwf	postinc1,c
 13511  01A2FA  0E00               	movlw	0
 13512  01A2FC  6EE6               	movwf	postinc1,c
 13513  01A2FE  0E01               	movlw	1
 13514  01A300  6EE6               	movwf	postinc1,c
 13515  01A302  ECE1  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
 13516                           
 13517                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 13518  01A306  0E01               	movlw	1
 13519  01A308  6EE6               	movwf	postinc1,c
 13520  01A30A  0E02               	movlw	2
 13521  01A30C  6EE6               	movwf	postinc1,c
 13522  01A30E  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
 13523  01A312  0060  F007  FFE6   	movff	btemp,postinc1
 13524  01A318  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13525  01A31E  0E00               	movlw	0
 13526  01A320  6EE6               	movwf	postinc1,c
 13527  01A322  0E02               	movlw	2
 13528  01A324  6EE6               	movwf	postinc1,c
 13529  01A326  ECE6  F0E6         	call	_get_vterm_ptr	;wreg free
 13530  01A32A  0060  F007  FFE6   	movff	btemp,postinc1
 13531  01A330  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13532  01A336  0EA3               	movlw	low STR_70
 13533  01A338  6EE6               	movwf	postinc1,c
 13534  01A33A  0EFF               	movlw	high STR_70
 13535  01A33C  6EE6               	movwf	postinc1,c
 13536  01A33E  0E08               	movlw	low (_V+1)
 13537  01A340  6EE6               	movwf	postinc1,c
 13538  01A342  0E01               	movlw	high (_V+1)
 13539  01A344  6EE6               	movwf	postinc1,c
 13540  01A346  0E08               	movlw	8
 13541  01A348  6EE6               	movwf	postinc1,c
 13542  01A34A  EC94  F0D5         	call	_sprintf	;wreg free
 13543                           
 13544                           ; BSR set to: 0
 13545                           ;mconfig.c: 130:  wait_lcd_done();
 13546  01A34E  ECEE  F0E8         	call	_wait_lcd_done	;wreg free
 13547                           
 13548                           ; BSR set to: 0
 13549                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 13550  01A352  0E08               	movlw	low (_V+1)
 13551  01A354  6EE6               	movwf	postinc1,c
 13552  01A356  0E01               	movlw	high (_V+1)
 13553  01A358  6EE6               	movwf	postinc1,c
 13554  01A35A  0E00               	movlw	0
 13555  01A35C  6EE6               	movwf	postinc1,c
 13556  01A35E  0E02               	movlw	2
 13557  01A360  6EE6               	movwf	postinc1,c
 13558  01A362  ECE1  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
 13559                           
 13560                           ; BSR set to: 59
 13561                           ;mconfig.c: 132:  WaitMs(3000);
 13562  01A366  0EB8               	movlw	184
 13563  01A368  6EE6               	movwf	postinc1,c
 13564  01A36A  0E0B               	movlw	11
 13565  01A36C  6EE6               	movwf	postinc1,c
 13566  01A36E  ECD0  F0E5         	call	_WaitMs	;wreg free
 13567                           
 13568                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 13569  01A372  0012               	return		;funcret
 13570  01A374                     __end_of_vterm_dump:
 13571                           	opt callstack 0
 13572                           
 13573 ;; *************** function _sprintf *****************
 13574 ;; Defined at:
 13575 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 13576 ;; Parameters:    Size  Location     Type
 13577 ;;  s               2  [STACK] PTR unsigned char 
 13578 ;;		 -> D.lcd(480), D(482), port_data(512), V(192), 
 13579 ;;  fmt             2  [STACK] PTR const unsigned char 
 13580 ;;		 -> STR_83(127), STR_81(3), STR_80(3), STR_79(19), 
 13581 ;;		 -> STR_78(19), STR_77(19), STR_76(19), STR_75(19), 
 13582 ;;		 -> STR_74(19), STR_73(24), STR_72(15), STR_71(15), 
 13583 ;;		 -> STR_70(15), STR_69(10), STR_68(10), STR_67(19), 
 13584 ;;		 -> STR_66(19), STR_61(21), STR_60(21), STR_59(21), 
 13585 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 13586 ;;		 -> STR_54(21), STR_53(21), STR_52(20), STR_51(21), 
 13587 ;;		 -> STR_50(21), STR_49(21), STR_48(22), STR_47(22), 
 13588 ;;		 -> STR_46(22), STR_45(23), STR_44(23), STR_43(23), 
 13589 ;;		 -> STR_42(29), STR_41(23), STR_40(23), STR_39(22), 
 13590 ;;		 -> STR_38(22), STR_37(22), STR_36(22), STR_35(22), 
 13591 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 13592 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(17), 
 13593 ;;		 -> STR_26(16), STR_25(16), STR_24(21), STR_23(21), 
 13594 ;;		 -> STR_22(21), STR_21(26), STR_20(26), STR_19(22), 
 13595 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 13596 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 13597 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 13598 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 13599 ;;		 -> STR_1(21), 
 13600 ;; Auto vars:     Size  Location     Type
 13601 ;;  f               6  [STACK] struct _IO_FILE
 13602 ;;  ap              2  [STACK] PTR void [1]
 13603 ;;		 -> ?_printf(2), ?_sprintf(2), 
 13604 ;;  ret             2    0        int 
 13605 ;; Return value:  Size  Location     Type
 13606 ;;                  2  [STACK] int 
 13607 ;; Registers used:
 13608 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13609 ;; Tracked objects:
 13610 ;;		On entry : 0/1
 13611 ;;		On exit  : 3F/0
 13612 ;;		Unchanged: 0/0
 13613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13618 ;;Total ram usage:        0 bytes
 13619 ;; Hardware stack levels used:    1
 13620 ;; Hardware stack levels required when called:   23
 13621 ;; This function calls:
 13622 ;;		_vfprintf
 13623 ;; This function is called by:
 13624 ;;		_main
 13625 ;;		_current_sensor_cal
 13626 ;;		_check_help
 13627 ;;		_vterm_dump
 13628 ;;		_calc_bsoc
 13629 ;; This function uses a reentrant model
 13630 ;;
 13631                           
 13632                           	psect	text51
 13633  01AB28                     __ptext51:
 13634                           	opt callstack 0
 13635  01AB28                     _sprintf:
 13636                           	opt callstack 0
 13637                           
 13638                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13639  01AB28  0E08               	movlw	8
 13640  01AB2A  26E1               	addwf	fsr1l,f,c
 13641  01AB2C  0E00               	movlw	0
 13642  01AB2E  22E2               	addwfc	fsr1h,f,c
 13643                           
 13644                           ;incstack = 0
 13645 ;; hardware stack exceeded
 13646  01AB30  0EFE               	movlw	254
 13647  01AB32  6E0B               	movwf	(btemp+10)^0,c
 13648  01AB34  0EFF               	movlw	255
 13649  01AB36  6E0C               	movwf	(btemp+11)^0,c
 13650                           
 13651                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 13652  01AB38  0EF5               	movlw	245
 13653  01AB3A  24E1               	addwf	fsr1l,w,c
 13654  01AB3C  6E09               	movwf	(btemp+8)^0,c
 13655  01AB3E  0EFF               	movlw	255
 13656  01AB40  20E2               	addwfc	fsr1h,w,c
 13657  01AB42  6E0A               	movwf	(btemp+9)^0,c
 13658  01AB44  500B               	movf	(btemp+10)^0,w,c
 13659  01AB46  2609               	addwf	(btemp+8)^0,f,c
 13660  01AB48  500C               	movf	(btemp+11)^0,w,c
 13661  01AB4A  220A               	addwfc	(btemp+9)^0,f,c
 13662                           
 13663                           ;stkvar	_ap @ sp[(-8)+6]
 13664  01AB4C  0EFF               	movlw	-1
 13665  01AB4E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13666  01AB54  0EFE               	movlw	-2
 13667  01AB56  0060  F027  FFE3   	movff	btemp+8,plusw1
 13668                           
 13669                           ;stkvar	_s @ sp[(-8)+-3]
 13670  01AB5C  0EF5               	movlw	-11
 13671  01AB5E  006F FF8C  F00B    	movff	plusw1,btemp+10
 13672  01AB64  0EF6               	movlw	-10
 13673  01AB66  006F FF8C  F00C    	movff	plusw1,btemp+11
 13674                           
 13675                           ;stkvar	_f @ sp[(-8)+0]
 13676  01AB6C  0EF9               	movlw	-7
 13677  01AB6E  0060  F033  FFE3   	movff	btemp+11,plusw1
 13678  01AB74  0EF8               	movlw	-8
 13679  01AB76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13680                           
 13681                           ;stkvar	_f @ sp[(-8)+0]
 13682  01AB7C  0EFA               	movlw	250
 13683  01AB7E  24E1               	addwf	fsr1l,w,c
 13684  01AB80  6ED9               	movwf	fsr2l,c
 13685  01AB82  0EFF               	movlw	255
 13686  01AB84  20E2               	addwfc	fsr1h,w,c
 13687  01AB86  6EDA               	movwf	fsr2h,c
 13688  01AB88  0E00               	movlw	0
 13689  01AB8A  6EDE               	movwf	postinc2,c
 13690  01AB8C  0E00               	movlw	0
 13691  01AB8E  6EDD               	movwf	postdec2,c
 13692                           
 13693                           ;stkvar	_f @ sp[(-8)+0]
 13694  01AB90  0EFC               	movlw	252
 13695  01AB92  24E1               	addwf	fsr1l,w,c
 13696  01AB94  6ED9               	movwf	fsr2l,c
 13697  01AB96  0EFF               	movlw	255
 13698  01AB98  20E2               	addwfc	fsr1h,w,c
 13699  01AB9A  6EDA               	movwf	fsr2h,c
 13700  01AB9C  0E00               	movlw	0
 13701  01AB9E  6EDE               	movwf	postinc2,c
 13702  01ABA0  0E00               	movlw	0
 13703  01ABA2  6EDD               	movwf	postdec2,c
 13704                           
 13705                           ;stkvar	_ap @ sp[(-8)+6]
 13706  01ABA4  0EFE               	movlw	254
 13707  01ABA6  24E1               	addwf	fsr1l,w,c
 13708  01ABA8  6E01               	movwf	btemp^0,c
 13709  01ABAA  0EFF               	movlw	255
 13710  01ABAC  20E2               	addwfc	fsr1h,w,c
 13711  01ABAE  6E02               	movwf	(btemp+1)^0,c
 13712  01ABB0  0060  F007  FFE6   	movff	btemp,postinc1
 13713  01ABB6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13714                           
 13715                           ;stkvar	_fmt @ sp[(-10)+-5]
 13716  01ABBC  0EF1               	movlw	-15
 13717  01ABBE  006F FF8F FFE6     	movff	plusw1,postinc1
 13718  01ABC4  006F FF8F FFE6     	movff	plusw1,postinc1
 13719                           
 13720                           ;stkvar	_f @ sp[(-12)+0]
 13721  01ABCA  0EF4               	movlw	244
 13722  01ABCC  24E1               	addwf	fsr1l,w,c
 13723  01ABCE  6E01               	movwf	btemp^0,c
 13724  01ABD0  0EFF               	movlw	255
 13725  01ABD2  20E2               	addwfc	fsr1h,w,c
 13726  01ABD4  6E02               	movwf	(btemp+1)^0,c
 13727  01ABD6  0060  F007  FFE6   	movff	btemp,postinc1
 13728  01ABDC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13729  01ABE2  ECE0  F0DA         	call	_vfprintf	;wreg free
 13730                           
 13731                           ; BSR set to: 0
 13732                           ;stkvar	_f @ sp[(-8)+0]
 13733  01ABE6  0EFA               	movlw	250
 13734  01ABE8  24E1               	addwf	fsr1l,w,c
 13735  01ABEA  6ED9               	movwf	fsr2l,c
 13736  01ABEC  0EFF               	movlw	255
 13737  01ABEE  20E2               	addwfc	fsr1h,w,c
 13738  01ABF0  6EDA               	movwf	fsr2h,c
 13739  01ABF2  006F FF78  F00B    	movff	postinc2,btemp+10
 13740  01ABF8  006F FF74  F00C    	movff	postdec2,btemp+11
 13741                           
 13742                           ;stkvar	_s @ sp[(-8)+-3]
 13743  01ABFE  0EF5               	movlw	-11
 13744  01AC00  006F FF8C  F009    	movff	plusw1,btemp+8
 13745  01AC06  0EF6               	movlw	-10
 13746  01AC08  006F FF8C  F00A    	movff	plusw1,btemp+9
 13747  01AC0E  500B               	movf	(btemp+10)^0,w,c
 13748  01AC10  2409               	addwf	(btemp+8)^0,w,c
 13749  01AC12  6ED9               	movwf	fsr2l,c
 13750  01AC14  500C               	movf	(btemp+11)^0,w,c
 13751  01AC16  200A               	addwfc	(btemp+9)^0,w,c
 13752  01AC18  6EDA               	movwf	fsr2h,c
 13753  01AC1A  0E00               	movlw	0
 13754  01AC1C  6EDF               	movwf	indf2,c
 13755                           
 13756                           ; BSR set to: 0
 13757                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 13758  01AC1E  0EF8               	movlw	248
 13759  01AC20  26E1               	addwf	fsr1l,f,c
 13760  01AC22  0EFF               	movlw	255
 13761  01AC24  22E2               	addwfc	fsr1h,f,c
 13762  01AC26  52E5               	movf	postdec1,f,c
 13763  01AC28  50E7               	movf	indf1,w,c
 13764  01AC2A  5EE1               	subwf	fsr1l,f,c
 13765  01AC2C  0E00               	movlw	0
 13766  01AC2E  5AE2               	subwfb	fsr1h,f,c
 13767  01AC30  0012               	return		;funcret
 13768  01AC32                     __end_of_sprintf:
 13769                           	opt callstack 0
 13770                           
 13771 ;; *************** function _get_vterm_ptr *****************
 13772 ;; Defined at:
 13773 ;;		line 116 in file "mconfig.c"
 13774 ;; Parameters:    Size  Location     Type
 13775 ;;  line            1  [STACK] const unsigned char 
 13776 ;;  vterm           1  [STACK] const unsigned char 
 13777 ;; Auto vars:     Size  Location     Type
 13778 ;;		None
 13779 ;; Return value:  Size  Location     Type
 13780 ;;                  2  [STACK] PTR unsigned char 
 13781 ;; Registers used:
 13782 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 13783 ;; Tracked objects:
 13784 ;;		On entry : 0/1
 13785 ;;		On exit  : 0/0
 13786 ;;		Unchanged: 0/0
 13787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13792 ;;Total ram usage:        0 bytes
 13793 ;; Hardware stack levels used:    1
 13794 ;; Hardware stack levels required when called:   15
 13795 ;; This function calls:
 13796 ;;		Nothing
 13797 ;; This function is called by:
 13798 ;;		_main
 13799 ;;		_current_sensor_cal
 13800 ;;		_check_help
 13801 ;;		_vterm_dump
 13802 ;; This function uses a reentrant model
 13803 ;;
 13804                           
 13805                           	psect	text52
 13806  01CDCC                     __ptext52:
 13807                           	opt callstack 0
 13808  01CDCC                     _get_vterm_ptr:
 13809                           	opt callstack 15
 13810                           
 13811                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
 13812                           ;stkvar	_vterm @ sp[(0)+-2]
 13813                           
 13814                           ; BSR set to: 0
 13815                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13816                           ;incstack = 0
 13817  01CDCC  0EFE               	movlw	-2
 13818  01CDCE  50E3               	movf	plusw1,w,c
 13819  01CDD0  0B03               	andlw	3
 13820  01CDD2  0D78               	mullw	120
 13821  01CDD4  0E4F               	movlw	low _D
 13822  01CDD6  6E01               	movwf	btemp^0,c
 13823  01CDD8  0E0A               	movlw	high _D
 13824  01CDDA  6E02               	movwf	(btemp+1)^0,c
 13825  01CDDC  50F3               	movf	243,w,c
 13826  01CDDE  2601               	addwf	btemp^0,f,c
 13827  01CDE0  50F4               	movf	244,w,c
 13828  01CDE2  2202               	addwfc	(btemp+1)^0,f,c
 13829                           
 13830                           ;stkvar	_line @ sp[(0)+-1]
 13831  01CDE4  0EFF               	movlw	-1
 13832  01CDE6  50E3               	movf	plusw1,w,c
 13833  01CDE8  0B03               	andlw	3
 13834  01CDEA  0D28               	mullw	40
 13835  01CDEC  50F3               	movf	243,w,c
 13836  01CDEE  2601               	addwf	btemp^0,f,c
 13837  01CDF0  50F4               	movf	244,w,c
 13838  01CDF2  2202               	addwfc	(btemp+1)^0,f,c
 13839                           
 13840                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 13841  01CDF4  52E5               	movf	postdec1,f,c
 13842  01CDF6  52E5               	movf	postdec1,f,c
 13843  01CDF8  0012               	return		;funcret
 13844  01CDFA                     __end_of_get_vterm_ptr:
 13845                           	opt callstack 0
 13846                           
 13847 ;; *************** function _WaitMs *****************
 13848 ;; Defined at:
 13849 ;;		line 32 in file "timers.c"
 13850 ;; Parameters:    Size  Location     Type
 13851 ;;  numMilliseco    2  [STACK] const unsigned short 
 13852 ;; Auto vars:     Size  Location     Type
 13853 ;;		None
 13854 ;; Return value:  Size  Location     Type
 13855 ;;                  1  [STACK] void 
 13856 ;; Registers used:
 13857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 13858 ;; Tracked objects:
 13859 ;;		On entry : 0/1
 13860 ;;		On exit  : 0/0
 13861 ;;		Unchanged: 0/0
 13862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13867 ;;Total ram usage:        0 bytes
 13868 ;; Hardware stack levels used:    1
 13869 ;; Hardware stack levels required when called:   16
 13870 ;; This function calls:
 13871 ;;		_StartTimer
 13872 ;;		_TimerDone
 13873 ;; This function is called by:
 13874 ;;		_main
 13875 ;;		_current_sensor_cal
 13876 ;;		_vterm_dump
 13877 ;; This function uses a reentrant model
 13878 ;;
 13879                           
 13880                           	psect	text53
 13881  01CBA0                     __ptext53:
 13882                           	opt callstack 0
 13883  01CBA0                     _WaitMs:
 13884                           	opt callstack 13
 13885                           
 13886                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 13887                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 13888                           
 13889                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13890                           ;incstack = 0
 13891  01CBA0  0EFE               	movlw	-2
 13892  01CBA2  006F FF8F FFE6     	movff	plusw1,postinc1
 13893  01CBA8  006F FF8F FFE6     	movff	plusw1,postinc1
 13894  01CBAE  0E00               	movlw	0
 13895  01CBB0  6EE6               	movwf	postinc1,c
 13896  01CBB2  ECDC  F0E4         	call	_StartTimer	;wreg free
 13897                           
 13898                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 13899  01CBB6  D005               	goto	l10804
 13900  01CBB8                     l1737:
 13901                           
 13902                           ;timers.c: 36:   __nop();
 13903  01CBB8  F000               	nop	
 13904                           
 13905                           ;timers.c: 37:   __nop();
 13906  01CBBA  F000               	nop	
 13907                           
 13908                           ;timers.c: 38:   __nop();
 13909  01CBBC  F000               	nop	
 13910                           
 13911                           ;timers.c: 39:   __nop();
 13912  01CBBE  F000               	nop	
 13913  01CBC0  0004               	clrwdt		;# 
 13914  01CBC2                     l10804:
 13915                           
 13916                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 13917  01CBC2  0E00               	movlw	0
 13918  01CBC4  6EE6               	movwf	postinc1,c
 13919  01CBC6  EC69  F0E7         	call	_TimerDone	;wreg free
 13920  01CBCA  5001               	movf	btemp^0,w,c
 13921  01CBCC  B4D8               	btfsc	status,2,c
 13922  01CBCE  D7F4               	goto	l1737
 13923                           
 13924                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 13925  01CBD0  52E5               	movf	postdec1,f,c
 13926  01CBD2  52E5               	movf	postdec1,f,c
 13927  01CBD4  0012               	return		;funcret
 13928  01CBD6                     __end_of_WaitMs:
 13929                           	opt callstack 0
 13930                           
 13931 ;; *************** function _update_lcd *****************
 13932 ;; Defined at:
 13933 ;;		line 85 in file "mconfig.c"
 13934 ;; Parameters:    Size  Location     Type
 13935 ;;  vterm           1  [STACK] unsigned char 
 13936 ;; Auto vars:     Size  Location     Type
 13937 ;;		None
 13938 ;; Return value:  Size  Location     Type
 13939 ;;                  1  [STACK] unsigned char 
 13940 ;; Registers used:
 13941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13942 ;; Tracked objects:
 13943 ;;		On entry : 0/0
 13944 ;;		On exit  : 0/0
 13945 ;;		Unchanged: 0/0
 13946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13951 ;;Total ram usage:        0 bytes
 13952 ;; Hardware stack levels used:    1
 13953 ;; Hardware stack levels required when called:   27
 13954 ;; This function calls:
 13955 ;;		_eaDogM_WriteStringAtPos
 13956 ;;		_wait_lcd_done
 13957 ;; This function is called by:
 13958 ;;		_main
 13959 ;;		_current_sensor_cal
 13960 ;;		_check_help
 13961 ;; This function uses a reentrant model
 13962 ;;
 13963                           
 13964                           	psect	text54
 13965  01AA18                     __ptext54:
 13966                           	opt callstack 0
 13967  01AA18                     _update_lcd:
 13968                           	opt callstack 3
 13969                           
 13970                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 13971                           ;stkvar	_vterm @ sp[(0)+-1]
 13972                           
 13973                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13974                           ;incstack = 0
 13975  01AA18  0EFF               	movlw	-1
 13976  01AA1A  006F FF8C  F001    	movff	plusw1,btemp
 13977  01AA20  0E03               	movlw	3
 13978  01AA22  1601               	andwf	btemp^0,f,c
 13979  01AA24  0EFF               	movlw	-1
 13980  01AA26  0060  F007  FFE3   	movff	btemp,plusw1
 13981                           
 13982                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 13983  01AA2C  EE23  F02F         	lfsr	2,_D+480
 13984  01AA30  A0DF               	btfss	indf2,0,c
 13985  01AA32  D004               	goto	l14118
 13986                           
 13987                           ;stkvar	_vterm @ sp[(0)+-1]
 13988  01AA34  0EFF               	movlw	-1
 13989  01AA36  50E3               	movf	plusw1,w,c
 13990  01AA38  B4D8               	btfsc	status,2,c
 13991  01AA3A  D074               	goto	l1813
 13992  01AA3C                     l14118:
 13993                           
 13994                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 13995                           ;stkvar	_vterm @ sp[(0)+-1]
 13996  01AA3C  0EFF               	movlw	-1
 13997  01AA3E  50E3               	movf	plusw1,w,c
 13998  01AA40  0D78               	mullw	120
 13999  01AA42  0E63               	movlw	low (_D+20)
 14000  01AA44  24F3               	addwf	243,w,c
 14001  01AA46  6ED9               	movwf	fsr2l,c
 14002  01AA48  0E0A               	movlw	high (_D+20)
 14003  01AA4A  20F4               	addwfc	prodh,w,c
 14004  01AA4C  6EDA               	movwf	fsr2h,c
 14005  01AA4E  0E00               	movlw	0
 14006  01AA50  6EDF               	movwf	indf2,c
 14007                           
 14008                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 14009                           ;stkvar	_vterm @ sp[(0)+-1]
 14010  01AA52  0EFF               	movlw	-1
 14011  01AA54  50E3               	movf	plusw1,w,c
 14012  01AA56  0D78               	mullw	120
 14013  01AA58  0E8B               	movlw	low (_D+60)
 14014  01AA5A  24F3               	addwf	243,w,c
 14015  01AA5C  6ED9               	movwf	fsr2l,c
 14016  01AA5E  0E0A               	movlw	high (_D+60)
 14017  01AA60  20F4               	addwfc	prodh,w,c
 14018  01AA62  6EDA               	movwf	fsr2h,c
 14019  01AA64  0E00               	movlw	0
 14020  01AA66  6EDF               	movwf	indf2,c
 14021                           
 14022                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 14023                           ;stkvar	_vterm @ sp[(0)+-1]
 14024  01AA68  0EFF               	movlw	-1
 14025  01AA6A  50E3               	movf	plusw1,w,c
 14026  01AA6C  0D78               	mullw	120
 14027  01AA6E  0EB3               	movlw	low (_D+100)
 14028  01AA70  24F3               	addwf	243,w,c
 14029  01AA72  6ED9               	movwf	fsr2l,c
 14030  01AA74  0E0A               	movlw	high (_D+100)
 14031  01AA76  20F4               	addwfc	prodh,w,c
 14032  01AA78  6EDA               	movwf	fsr2h,c
 14033  01AA7A  0E00               	movlw	0
 14034  01AA7C  6EDF               	movwf	indf2,c
 14035                           
 14036                           ;mconfig.c: 95:  wait_lcd_done();
 14037  01AA7E  ECEE  F0E8         	call	_wait_lcd_done	;wreg free
 14038                           
 14039                           ; BSR set to: 0
 14040                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 14041                           ;stkvar	_vterm @ sp[(0)+-1]
 14042  01AA82  0EFF               	movlw	-1
 14043  01AA84  50E3               	movf	plusw1,w,c
 14044  01AA86  0D78               	mullw	120
 14045  01AA88  0E4F               	movlw	low _D
 14046  01AA8A  6E0B               	movwf	(btemp+10)^0,c
 14047  01AA8C  0E0A               	movlw	high _D
 14048  01AA8E  6E0C               	movwf	(btemp+11)^0,c
 14049  01AA90  50F3               	movf	243,w,c
 14050  01AA92  260B               	addwf	(btemp+10)^0,f,c
 14051  01AA94  50F4               	movf	244,w,c
 14052  01AA96  220C               	addwfc	(btemp+11)^0,f,c
 14053  01AA98  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14054  01AA9E  0060  F033  FFE6   	movff	btemp+11,postinc1
 14055  01AAA4  0E00               	movlw	0
 14056  01AAA6  6EE6               	movwf	postinc1,c
 14057  01AAA8  0E00               	movlw	0
 14058  01AAAA  6EE6               	movwf	postinc1,c
 14059  01AAAC  ECE1  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
 14060                           
 14061                           ; BSR set to: 59
 14062                           ;mconfig.c: 97:  wait_lcd_done();
 14063  01AAB0  ECEE  F0E8         	call	_wait_lcd_done	;wreg free
 14064                           
 14065                           ; BSR set to: 0
 14066                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 14067                           ;stkvar	_vterm @ sp[(0)+-1]
 14068  01AAB4  0EFF               	movlw	-1
 14069  01AAB6  50E3               	movf	plusw1,w,c
 14070  01AAB8  0D78               	mullw	120
 14071  01AABA  0E4F               	movlw	low _D
 14072  01AABC  6E0B               	movwf	(btemp+10)^0,c
 14073  01AABE  0E0A               	movlw	high _D
 14074  01AAC0  6E0C               	movwf	(btemp+11)^0,c
 14075  01AAC2  0E28               	movlw	40
 14076  01AAC4  260B               	addwf	(btemp+10)^0,f,c
 14077  01AAC6  0E00               	movlw	0
 14078  01AAC8  220C               	addwfc	(btemp+11)^0,f,c
 14079  01AACA  50F3               	movf	243,w,c
 14080  01AACC  260B               	addwf	(btemp+10)^0,f,c
 14081  01AACE  50F4               	movf	244,w,c
 14082  01AAD0  220C               	addwfc	(btemp+11)^0,f,c
 14083  01AAD2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14084  01AAD8  0060  F033  FFE6   	movff	btemp+11,postinc1
 14085  01AADE  0E00               	movlw	0
 14086  01AAE0  6EE6               	movwf	postinc1,c
 14087  01AAE2  0E01               	movlw	1
 14088  01AAE4  6EE6               	movwf	postinc1,c
 14089  01AAE6  ECE1  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
 14090                           
 14091                           ; BSR set to: 59
 14092                           ;mconfig.c: 99:  wait_lcd_done();
 14093  01AAEA  ECEE  F0E8         	call	_wait_lcd_done	;wreg free
 14094                           
 14095                           ; BSR set to: 0
 14096                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 14097                           ;stkvar	_vterm @ sp[(0)+-1]
 14098  01AAEE  0EFF               	movlw	-1
 14099  01AAF0  50E3               	movf	plusw1,w,c
 14100  01AAF2  0D78               	mullw	120
 14101  01AAF4  0E4F               	movlw	low _D
 14102  01AAF6  6E0B               	movwf	(btemp+10)^0,c
 14103  01AAF8  0E0A               	movlw	high _D
 14104  01AAFA  6E0C               	movwf	(btemp+11)^0,c
 14105  01AAFC  0E50               	movlw	80
 14106  01AAFE  260B               	addwf	(btemp+10)^0,f,c
 14107  01AB00  0E00               	movlw	0
 14108  01AB02  220C               	addwfc	(btemp+11)^0,f,c
 14109  01AB04  50F3               	movf	243,w,c
 14110  01AB06  260B               	addwf	(btemp+10)^0,f,c
 14111  01AB08  50F4               	movf	244,w,c
 14112  01AB0A  220C               	addwfc	(btemp+11)^0,f,c
 14113  01AB0C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14114  01AB12  0060  F033  FFE6   	movff	btemp+11,postinc1
 14115  01AB18  0E00               	movlw	0
 14116  01AB1A  6EE6               	movwf	postinc1,c
 14117  01AB1C  0E02               	movlw	2
 14118  01AB1E  6EE6               	movwf	postinc1,c
 14119  01AB20  ECE1  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
 14120  01AB24                     l1813:
 14121                           
 14122                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 14123  01AB24  52E5               	movf	postdec1,f,c
 14124  01AB26  0012               	return		;funcret
 14125  01AB28                     __end_of_update_lcd:
 14126                           	opt callstack 0
 14127                           
 14128 ;; *************** function _eaDogM_WriteStringAtPos *****************
 14129 ;; Defined at:
 14130 ;;		line 195 in file "eadog.c"
 14131 ;; Parameters:    Size  Location     Type
 14132 ;;  r               1  [STACK] const unsigned char 
 14133 ;;  c               1  [STACK] const unsigned char 
 14134 ;;  strPtr          2  [STACK] PTR unsigned char 
 14135 ;;		 -> D.lcd(480), D(482), V(192), 
 14136 ;; Auto vars:     Size  Location     Type
 14137 ;;  row             1  [STACK] unsigned char 
 14138 ;; Return value:  Size  Location     Type
 14139 ;;                  1  [STACK] void 
 14140 ;; Registers used:
 14141 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14142 ;; Tracked objects:
 14143 ;;		On entry : 3F/0
 14144 ;;		On exit  : 3F/3B
 14145 ;;		Unchanged: 0/0
 14146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14151 ;;Total ram usage:        0 bytes
 14152 ;; Hardware stack levels used:    1
 14153 ;; Hardware stack levels required when called:   26
 14154 ;; This function calls:
 14155 ;;		_eaDogM_WriteString
 14156 ;;		_send_lcd_cmd_dma
 14157 ;;		_send_lcd_data_dma
 14158 ;;		_wait_lcd_done
 14159 ;;		_wdtdelay
 14160 ;; This function is called by:
 14161 ;;		_update_lcd
 14162 ;;		_vterm_dump
 14163 ;; This function uses a reentrant model
 14164 ;;
 14165                           
 14166                           	psect	text55
 14167  01B7C2                     __ptext55:
 14168                           	opt callstack 0
 14169  01B7C2                     _eaDogM_WriteStringAtPos:
 14170                           	opt callstack 0
 14171                           
 14172                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14173  01B7C2  52E6               	movf	postinc1,f,c
 14174                           
 14175                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 14176                           
 14177                           ;incstack = 0
 14178  01B7C4  D014               	goto	l14094
 14179  01B7C6                     l14082:
 14180                           
 14181                           ;eadog.c: 201:   row = 0x40;
 14182                           ;stkvar	_row @ sp[(-1)+0]
 14183  01B7C6  0EFF               	movlw	-1
 14184  01B7C8  6AE3               	clrf	plusw1,c
 14185  01B7CA  8CE3               	bsf	plusw1,6,c
 14186                           
 14187                           ;eadog.c: 202:   break;
 14188  01B7CC  D026               	goto	l14096
 14189  01B7CE                     l14084:
 14190                           
 14191                           ;eadog.c: 204:   row = 0x14;
 14192                           ;stkvar	_row @ sp[(-1)+0]
 14193  01B7CE  0EFF               	movlw	-1
 14194  01B7D0  6AE3               	clrf	plusw1,c
 14195  01B7D2  84E3               	bsf	plusw1,2,c
 14196  01B7D4  88E3               	bsf	plusw1,4,c	;indir
 14197                           
 14198                           ;eadog.c: 205:   break;
 14199  01B7D6  D021               	goto	l14096
 14200  01B7D8                     l14086:
 14201                           
 14202                           ;eadog.c: 207:   row = 0x54;
 14203  01B7D8  0E54               	movlw	84
 14204  01B7DA  6E0C               	movwf	(btemp+11)^0,c
 14205                           
 14206                           ;stkvar	_row @ sp[(-1)+0]
 14207  01B7DC  0EFF               	movlw	-1
 14208  01B7DE  0060  F033  FFE3   	movff	btemp+11,plusw1
 14209                           
 14210                           ;eadog.c: 208:   break;
 14211  01B7E4  D01A               	goto	l14096
 14212  01B7E6                     l14088:
 14213                           
 14214                           ;eadog.c: 210:   row = 0x1;
 14215                           ;stkvar	_row @ sp[(-1)+0]
 14216  01B7E6  0EFF               	movlw	-1
 14217  01B7E8  6AE3               	clrf	plusw1,c
 14218  01B7EA  2AE3               	incf	plusw1,f,c
 14219                           
 14220                           ;eadog.c: 211:   break;
 14221  01B7EC  D016               	goto	l14096
 14222  01B7EE                     l14094:
 14223                           
 14224                           ;stkvar	_r @ sp[(-1)+-1]
 14225  01B7EE  0EFE               	movlw	-2
 14226  01B7F0  50E3               	movf	plusw1,w,c
 14227  01B7F2  6E0B               	movwf	(btemp+10)^0,c
 14228  01B7F4  6A0C               	clrf	(btemp+11)^0,c
 14229                           
 14230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14231                           ; Switch size 1, requested type "simple"
 14232                           ; Number of cases is 1, Range of values is 0 to 0
 14233                           ; switch strategies available:
 14234                           ; Name         Instructions Cycles
 14235                           ; simple_byte            4     3 (average)
 14236                           ;	Chosen strategy is simple_byte
 14237  01B7F6  500C               	movf	(btemp+11)^0,w,c
 14238  01B7F8  0A00               	xorlw	0	; case 0
 14239  01B7FA  A4D8               	btfss	status,2,c
 14240  01B7FC  D7E4               	goto	l14082
 14241                           
 14242                           ; Switch size 1, requested type "simple"
 14243                           ; Number of cases is 4, Range of values is 0 to 3
 14244                           ; switch strategies available:
 14245                           ; Name         Instructions Cycles
 14246                           ; simple_byte           13     7 (average)
 14247                           ;	Chosen strategy is simple_byte
 14248  01B7FE  500B               	movf	(btemp+10)^0,w,c
 14249  01B800  0A00               	xorlw	0	; case 0
 14250  01B802  B4D8               	btfsc	status,2,c
 14251  01B804  D7E0               	goto	l14082
 14252  01B806  0A01               	xorlw	1	; case 1
 14253  01B808  B4D8               	btfsc	status,2,c
 14254  01B80A  D7E1               	goto	l14084
 14255  01B80C  0A03               	xorlw	3	; case 2
 14256  01B80E  B4D8               	btfsc	status,2,c
 14257  01B810  D7E3               	goto	l14086
 14258  01B812  0A01               	xorlw	1	; case 3
 14259  01B814  B4D8               	btfsc	status,2,c
 14260  01B816  D7E7               	goto	l14088
 14261  01B818  D7D6               	goto	l14082
 14262  01B81A                     l14096:
 14263                           
 14264                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 14265  01B81A  0E45               	movlw	69
 14266  01B81C  6EE6               	movwf	postinc1,c
 14267  01B81E  EC50  F0E9         	call	_send_lcd_cmd_dma	;wreg free
 14268                           
 14269                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 14270                           ;stkvar	_c @ sp[(-1)+-2]
 14271  01B822  0EFD               	movlw	-3
 14272  01B824  006F FF8C  F00C    	movff	plusw1,btemp+11
 14273                           
 14274                           ;stkvar	_row @ sp[(-1)+0]
 14275  01B82A  0EFF               	movlw	-1
 14276  01B82C  50E3               	movf	plusw1,w,c
 14277  01B82E  240C               	addwf	(btemp+11)^0,w,c
 14278  01B830  6EE6               	movwf	postinc1,c
 14279  01B832  EC5E  F0E3         	call	_send_lcd_data_dma	;wreg free
 14280                           
 14281                           ; BSR set to: 59
 14282                           ;eadog.c: 218:  wait_lcd_done();
 14283  01B836  ECEE  F0E8         	call	_wait_lcd_done	;wreg free
 14284                           
 14285                           ; BSR set to: 0
 14286                           ;eadog.c: 219:  wdtdelay(8);
 14287  01B83A  0E08               	movlw	8
 14288  01B83C  6EE6               	movwf	postinc1,c
 14289  01B83E  0E00               	movlw	0
 14290  01B840  6EE6               	movwf	postinc1,c
 14291  01B842  0E00               	movlw	0
 14292  01B844  6EE6               	movwf	postinc1,c
 14293  01B846  0E00               	movlw	0
 14294  01B848  6EE6               	movwf	postinc1,c
 14295  01B84A  EC39  F0E2         	call	_wdtdelay	;wreg free
 14296                           
 14297                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 14298                           ;stkvar	_strPtr @ sp[(-1)+-4]
 14299  01B84E  0EFB               	movlw	-5
 14300  01B850  006F FF8F FFE6     	movff	plusw1,postinc1
 14301  01B856  006F FF8F FFE6     	movff	plusw1,postinc1
 14302  01B85C  EC35  F0DC         	call	_eaDogM_WriteString	;wreg free
 14303                           
 14304                           ; BSR set to: 59
 14305                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 14306  01B860  0EFB               	movlw	251
 14307  01B862  26E1               	addwf	fsr1l,f,c
 14308  01B864  0EFF               	movlw	255
 14309  01B866  22E2               	addwfc	fsr1h,f,c
 14310  01B868  0012               	return		;funcret
 14311  01B86A                     __end_of_eaDogM_WriteStringAtPos:
 14312                           	opt callstack 0
 14313                           
 14314 ;; *************** function _send_lcd_cmd_dma *****************
 14315 ;; Defined at:
 14316 ;;		line 171 in file "eadog.c"
 14317 ;; Parameters:    Size  Location     Type
 14318 ;;  strPtr          1  [STACK] const unsigned char 
 14319 ;; Auto vars:     Size  Location     Type
 14320 ;;		None
 14321 ;; Return value:  Size  Location     Type
 14322 ;;                  1  [STACK] void 
 14323 ;; Registers used:
 14324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14325 ;; Tracked objects:
 14326 ;;		On entry : 0/3D
 14327 ;;		On exit  : 3F/0
 14328 ;;		Unchanged: 0/0
 14329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14334 ;;Total ram usage:        0 bytes
 14335 ;; Hardware stack levels used:    1
 14336 ;; Hardware stack levels required when called:   25
 14337 ;; This function calls:
 14338 ;;		_send_lcd_data_dma
 14339 ;;		_wait_lcd_done
 14340 ;; This function is called by:
 14341 ;;		_eaDogM_WriteStringAtPos
 14342 ;;		_eaDogM_WriteCommand
 14343 ;; This function uses a reentrant model
 14344 ;;
 14345                           
 14346                           	psect	text56
 14347  01D2A0                     __ptext56:
 14348                           	opt callstack 0
 14349  01D2A0                     _send_lcd_cmd_dma:
 14350                           	opt callstack 3
 14351                           
 14352                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 14353                           
 14354                           ; BSR set to: 59
 14355                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14356                           ;incstack = 0
 14357  01D2A0  0EFE               	movlw	254
 14358  01D2A2  6EE6               	movwf	postinc1,c
 14359  01D2A4  EC5E  F0E3         	call	_send_lcd_data_dma	;wreg free
 14360                           
 14361                           ; BSR set to: 59
 14362                           ;eadog.c: 174:  wait_lcd_done();
 14363  01D2A8  ECEE  F0E8         	call	_wait_lcd_done	;wreg free
 14364                           
 14365                           ; BSR set to: 0
 14366                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 14367                           ;stkvar	_strPtr @ sp[(0)+-1]
 14368  01D2AC  0EFF               	movlw	-1
 14369  01D2AE  50E3               	movf	plusw1,w,c
 14370  01D2B0  6EE6               	movwf	postinc1,c
 14371  01D2B2  EC5E  F0E3         	call	_send_lcd_data_dma	;wreg free
 14372                           
 14373                           ;eadog.c: 176:  wait_lcd_done();
 14374  01D2B6  ECEE  F0E8         	call	_wait_lcd_done	;wreg free
 14375                           
 14376                           ; BSR set to: 0
 14377                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 14378  01D2BA  52E5               	movf	postdec1,f,c
 14379  01D2BC  0012               	return		;funcret
 14380  01D2BE                     __end_of_send_lcd_cmd_dma:
 14381                           	opt callstack 0
 14382                           
 14383 ;; *************** function _wait_lcd_done *****************
 14384 ;; Defined at:
 14385 ;;		line 444 in file "eadog.c"
 14386 ;; Parameters:    Size  Location     Type
 14387 ;;		None
 14388 ;; Auto vars:     Size  Location     Type
 14389 ;;		None
 14390 ;; Return value:  Size  Location     Type
 14391 ;;                  1  [STACK] void 
 14392 ;; Registers used:
 14393 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 14394 ;; Tracked objects:
 14395 ;;		On entry : 0/1
 14396 ;;		On exit  : 3F/0
 14397 ;;		Unchanged: 0/0
 14398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14403 ;;Total ram usage:        0 bytes
 14404 ;; Hardware stack levels used:    1
 14405 ;; Hardware stack levels required when called:   16
 14406 ;; This function calls:
 14407 ;;		_wdtdelay
 14408 ;; This function is called by:
 14409 ;;		_main
 14410 ;;		_send_lcd_cmd_dma
 14411 ;;		_eaDogM_WriteStringAtPos
 14412 ;;		_update_lcd
 14413 ;;		_vterm_dump
 14414 ;; This function uses a reentrant model
 14415 ;;
 14416                           
 14417                           	psect	text57
 14418  01D1DC                     __ptext57:
 14419                           	opt callstack 0
 14420  01D1DC                     _wait_lcd_done:
 14421                           	opt callstack 14
 14422                           
 14423                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 14424                           
 14425                           ; BSR set to: 0
 14426                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14427                           ;incstack = 0
 14428  01D1DC  0100               	movlb	0	; () banked
 14429  01D1DE  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 14430  01D1E0  D7FD               	goto	_wait_lcd_done
 14431  01D1E2                     u9240:
 14432  01D1E2  013D               	movlb	61	; () banked
 14433  01D1E4  AB17               	btfss	23,5,b	;volatile
 14434  01D1E6  D7FD               	goto	u9240
 14435                           
 14436                           ; BSR set to: 61
 14437                           ;eadog.c: 448:  wdtdelay(50);
 14438  01D1E8  0E32               	movlw	50
 14439  01D1EA  6EE6               	movwf	postinc1,c
 14440  01D1EC  0E00               	movlw	0
 14441  01D1EE  6EE6               	movwf	postinc1,c
 14442  01D1F0  0E00               	movlw	0
 14443  01D1F2  6EE6               	movwf	postinc1,c
 14444  01D1F4  0E00               	movlw	0
 14445  01D1F6  6EE6               	movwf	postinc1,c
 14446  01D1F8  EC39  F0E2         	call	_wdtdelay	;wreg free
 14447                           
 14448                           ; BSR set to: 0
 14449                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 14450  01D1FC  0012               	return		;funcret
 14451  01D1FE                     __end_of_wait_lcd_done:
 14452                           	opt callstack 0
 14453                           
 14454 ;; *************** function _wdtdelay *****************
 14455 ;; Defined at:
 14456 ;;		line 23 in file "eadog.c"
 14457 ;; Parameters:    Size  Location     Type
 14458 ;;  delay           4  [STACK] const unsigned long 
 14459 ;; Auto vars:     Size  Location     Type
 14460 ;;		None
 14461 ;; Return value:  Size  Location     Type
 14462 ;;                  1  [STACK] void 
 14463 ;; Registers used:
 14464 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 14465 ;; Tracked objects:
 14466 ;;		On entry : 2/3D
 14467 ;;		On exit  : 3F/0
 14468 ;;		Unchanged: 0/0
 14469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14474 ;;Total ram usage:        0 bytes
 14475 ;; Hardware stack levels used:    1
 14476 ;; Hardware stack levels required when called:   15
 14477 ;; This function calls:
 14478 ;;		Nothing
 14479 ;; This function is called by:
 14480 ;;		_init_display
 14481 ;;		_send_lcd_data
 14482 ;;		_send_lcd_cmd
 14483 ;;		_send_lcd_cmd_long
 14484 ;;		_eaDogM_WriteStringAtPos
 14485 ;;		_wait_lcd_done
 14486 ;; This function uses a reentrant model
 14487 ;;
 14488                           
 14489                           	psect	text58
 14490  01C472                     __ptext58:
 14491                           	opt callstack 0
 14492  01C472                     _wdtdelay:
 14493                           	opt callstack 14
 14494                           
 14495                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 14496                           
 14497                           ; BSR set to: 0
 14498                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14499                           ;incstack = 0
 14500  01C472  0100               	movlb	0	; () banked
 14501  01C474  6B9A               	clrf	wdtdelay@dcount& (0+255),b
 14502  01C476  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
 14503  01C478  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
 14504  01C47A  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
 14505  01C47C                     l1590:
 14506                           
 14507                           ; BSR set to: 0
 14508                           ;eadog.c: 28:   __nop();
 14509  01C47C  F000               	nop	
 14510  01C47E  0004               	clrwdt		;# 
 14511                           
 14512                           ;eadog.c: 30:  };
 14513  01C480  0E01               	movlw	1
 14514  01C482  0100               	movlb	0	; () banked
 14515  01C484  279A               	addwf	wdtdelay@dcount& (0+255),f,b
 14516  01C486  0E00               	movlw	0
 14517  01C488  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 14518  01C48A  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 14519  01C48C  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 14520                           
 14521                           ; BSR set to: 0
 14522                           ;stkvar	_delay @ sp[(0)+-4]
 14523  01C48E  0EFC               	movlw	-4
 14524  01C490  006F FF8C  F001    	movff	plusw1,btemp
 14525  01C496  519A               	movf	wdtdelay@dcount& (0+255),w,b
 14526  01C498  5C01               	subwf	btemp^0,w,c
 14527  01C49A  0EFD               	movlw	-3
 14528  01C49C  006F FF8C  F001    	movff	plusw1,btemp
 14529  01C4A2  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 14530  01C4A4  5801               	subwfb	btemp^0,w,c
 14531  01C4A6  0EFE               	movlw	-2
 14532  01C4A8  006F FF8C  F001    	movff	plusw1,btemp
 14533  01C4AE  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 14534  01C4B0  5801               	subwfb	btemp^0,w,c
 14535  01C4B2  0EFF               	movlw	-1
 14536  01C4B4  006F FF8C  F001    	movff	plusw1,btemp
 14537  01C4BA  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 14538  01C4BC  5801               	subwfb	btemp^0,w,c
 14539  01C4BE  B0D8               	btfsc	status,0,c
 14540  01C4C0  D7DD               	goto	l1590
 14541                           
 14542                           ; BSR set to: 0
 14543                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 14544  01C4C2  52E5               	movf	postdec1,f,c
 14545  01C4C4  52E5               	movf	postdec1,f,c
 14546  01C4C6  52E5               	movf	postdec1,f,c
 14547  01C4C8  52E5               	movf	postdec1,f,c
 14548  01C4CA  0012               	return		;funcret
 14549  01C4CC                     __end_of_wdtdelay:
 14550                           	opt callstack 0
 14551                           
 14552 ;; *************** function _send_lcd_data_dma *****************
 14553 ;; Defined at:
 14554 ;;		line 182 in file "eadog.c"
 14555 ;; Parameters:    Size  Location     Type
 14556 ;;  strPtr          1  [STACK] const unsigned char 
 14557 ;; Auto vars:     Size  Location     Type
 14558 ;;		None
 14559 ;; Return value:  Size  Location     Type
 14560 ;;                  1  [STACK] void 
 14561 ;; Registers used:
 14562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14563 ;; Tracked objects:
 14564 ;;		On entry : 0/0
 14565 ;;		On exit  : 3F/3B
 14566 ;;		Unchanged: 0/0
 14567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14572 ;;Total ram usage:        0 bytes
 14573 ;; Hardware stack levels used:    1
 14574 ;; Hardware stack levels required when called:   24
 14575 ;; This function calls:
 14576 ;;		_printf
 14577 ;;		_ringBufS_flush
 14578 ;;		_start_lcd
 14579 ;;		_wait_lcd_set
 14580 ;; This function is called by:
 14581 ;;		_send_lcd_cmd_dma
 14582 ;;		_eaDogM_WriteStringAtPos
 14583 ;; This function uses a reentrant model
 14584 ;;
 14585                           
 14586                           	psect	text59
 14587  01C6BC                     __ptext59:
 14588                           	opt callstack 0
 14589  01C6BC                     _send_lcd_data_dma:
 14590                           	opt callstack 4
 14591                           
 14592                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 14593                           
 14594                           ; BSR set to: 0
 14595                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14596                           ;incstack = 0
 14597  01C6BC  EC90  F0EA         	call	_wait_lcd_set	;wreg free
 14598                           
 14599                           ; BSR set to: 0
 14600                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 14601  01C6C0  0E00               	movlw	0
 14602  01C6C2  6EE6               	movwf	postinc1,c
 14603  01C6C4  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 14604  01C6CA  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 14605  01C6D0  EC6E  F0DD         	call	_ringBufS_flush	;wreg free
 14606  01C6D4  94BC               	bcf	188,2,c	;volatile
 14607                           
 14608                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 14609  01C6D6  013B               	movlb	59	; () banked
 14610  01C6D8  9FFC               	bcf	252,7,b	;volatile
 14611                           
 14612                           ; BSR set to: 59
 14613                           ;eadog.c: 189:  DMA1SSZ = 1;
 14614  01C6DA  0E00               	movlw	0
 14615  01C6DC  6FF8               	movwf	248,b	;volatile
 14616  01C6DE  0E01               	movlw	1
 14617  01C6E0  6FF7               	movwf	247,b	;volatile
 14618                           
 14619                           ; BSR set to: 59
 14620                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 14621  01C6E2  8FFC               	bsf	252,7,b	;volatile
 14622                           
 14623                           ; BSR set to: 59
 14624                           ;eadog.c: 191:  printf("%c", strPtr);
 14625                           ;stkvar	_strPtr @ sp[(0)+-1]
 14626  01C6E4  0EFF               	movlw	-1
 14627  01C6E6  50E3               	movf	plusw1,w,c
 14628  01C6E8  6EE6               	movwf	postinc1,c
 14629  01C6EA  0E00               	movlw	0
 14630  01C6EC  6EE6               	movwf	postinc1,c
 14631  01C6EE  0EF8               	movlw	low STR_63
 14632  01C6F0  6EE6               	movwf	postinc1,c
 14633  01C6F2  0EFF               	movlw	high STR_63
 14634  01C6F4  6EE6               	movwf	postinc1,c
 14635  01C6F6  0E04               	movlw	4
 14636  01C6F8  6EE6               	movwf	postinc1,c
 14637  01C6FA  EC7A  F0E1         	call	_printf	;wreg free
 14638                           
 14639                           ; BSR set to: 0
 14640                           ;eadog.c: 192:  start_lcd();
 14641  01C6FE  EC93  F0EA         	call	_start_lcd	;wreg free
 14642                           
 14643                           ; BSR set to: 59
 14644                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 14645  01C702  52E5               	movf	postdec1,f,c
 14646  01C704  0012               	return		;funcret
 14647  01C706                     __end_of_send_lcd_data_dma:
 14648                           	opt callstack 0
 14649                           
 14650 ;; *************** function _eaDogM_WriteString *****************
 14651 ;; Defined at:
 14652 ;;		line 151 in file "eadog.c"
 14653 ;; Parameters:    Size  Location     Type
 14654 ;;  strPtr          2  [STACK] PTR unsigned char 
 14655 ;;		 -> D.lcd(480), D(482), V(192), 
 14656 ;; Auto vars:     Size  Location     Type
 14657 ;;		None
 14658 ;; Return value:  Size  Location     Type
 14659 ;;                  1  [STACK] void 
 14660 ;; Registers used:
 14661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14662 ;; Tracked objects:
 14663 ;;		On entry : 3F/0
 14664 ;;		On exit  : 3F/3B
 14665 ;;		Unchanged: 0/0
 14666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14671 ;;Total ram usage:        0 bytes
 14672 ;; Hardware stack levels used:    1
 14673 ;; Hardware stack levels required when called:   24
 14674 ;; This function calls:
 14675 ;;		_printf
 14676 ;;		_ringBufS_flush
 14677 ;;		_start_lcd
 14678 ;;		_strlen
 14679 ;;		_wait_lcd_set
 14680 ;; This function is called by:
 14681 ;;		_eaDogM_WriteStringAtPos
 14682 ;; This function uses a reentrant model
 14683 ;;
 14684                           
 14685                           	psect	text60
 14686  01B86A                     __ptext60:
 14687                           	opt callstack 0
 14688  01B86A                     _eaDogM_WriteString:
 14689                           	opt callstack 4
 14690                           
 14691                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 14692                           
 14693                           ; BSR set to: 59
 14694                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14695                           ;incstack = 0
 14696  01B86A  EC90  F0EA         	call	_wait_lcd_set	;wreg free
 14697                           
 14698                           ; BSR set to: 0
 14699                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 14700  01B86E  0E00               	movlw	0
 14701  01B870  6EE6               	movwf	postinc1,c
 14702  01B872  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 14703  01B878  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 14704  01B87E  EC6E  F0DD         	call	_ringBufS_flush	;wreg free
 14705  01B882  94BC               	bcf	188,2,c	;volatile
 14706                           
 14707                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 14708                           ;stkvar	_strPtr @ sp[(0)+-2]
 14709  01B884  0EFE               	movlw	-2
 14710  01B886  006F FF8F FFE6     	movff	plusw1,postinc1
 14711  01B88C  006F FF8F FFE6     	movff	plusw1,postinc1
 14712  01B892  EC88  F0DC         	call	_strlen	;wreg free
 14713  01B896  5002               	movf	(btemp+1)^0,w,c
 14714  01B898  E104               	bnz	u13440
 14715  01B89A  0E41               	movlw	65
 14716  01B89C  5C01               	subwf	btemp^0,w,c
 14717  01B89E  A0D8               	btfss	status,0,c
 14718  01B8A0  D010               	goto	l14038
 14719  01B8A2                     u13440:
 14720                           
 14721                           ;stkvar	_strPtr @ sp[(0)+-2]
 14722  01B8A2  0EFE               	movlw	-2
 14723  01B8A4  006F FF8C  F00B    	movff	plusw1,btemp+10
 14724  01B8AA  0EFF               	movlw	-1
 14725  01B8AC  006F FF8C  F00C    	movff	plusw1,btemp+11
 14726  01B8B2  0E40               	movlw	64
 14727  01B8B4  240B               	addwf	(btemp+10)^0,w,c
 14728  01B8B6  6ED9               	movwf	fsr2l,c
 14729  01B8B8  0E00               	movlw	0
 14730  01B8BA  200C               	addwfc	(btemp+11)^0,w,c
 14731  01B8BC  6EDA               	movwf	fsr2h,c
 14732  01B8BE  0E00               	movlw	0
 14733  01B8C0  6EDF               	movwf	indf2,c
 14734  01B8C2                     l14038:
 14735                           
 14736                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 14737  01B8C2  013B               	movlb	59	; () banked
 14738  01B8C4  9FFC               	bcf	252,7,b	;volatile
 14739                           
 14740                           ; BSR set to: 59
 14741                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 14742                           ;stkvar	_strPtr @ sp[(0)+-2]
 14743  01B8C6  0EFE               	movlw	-2
 14744  01B8C8  006F FF8F FFE6     	movff	plusw1,postinc1
 14745  01B8CE  006F FF8F FFE6     	movff	plusw1,postinc1
 14746  01B8D4  EC88  F0DC         	call	_strlen	;wreg free
 14747  01B8D8  0060  F007  FBF7   	movff	btemp,15351	;volatile
 14748  01B8DE  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 14749                           
 14750                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 14751  01B8E4  013B               	movlb	59	; () banked
 14752  01B8E6  8FFC               	bsf	252,7,b	;volatile
 14753                           
 14754                           ; BSR set to: 59
 14755                           ;eadog.c: 161:  printf("%s", strPtr);
 14756                           ;stkvar	_strPtr @ sp[(0)+-2]
 14757  01B8E8  0EFE               	movlw	-2
 14758  01B8EA  006F FF8F FFE6     	movff	plusw1,postinc1
 14759  01B8F0  006F FF8F FFE6     	movff	plusw1,postinc1
 14760  01B8F6  0EFB               	movlw	low STR_62
 14761  01B8F8  6EE6               	movwf	postinc1,c
 14762  01B8FA  0EFF               	movlw	high STR_62
 14763  01B8FC  6EE6               	movwf	postinc1,c
 14764  01B8FE  0E04               	movlw	4
 14765  01B900  6EE6               	movwf	postinc1,c
 14766  01B902  EC7A  F0E1         	call	_printf	;wreg free
 14767                           
 14768                           ; BSR set to: 0
 14769                           ;eadog.c: 162:  start_lcd();
 14770  01B906  EC93  F0EA         	call	_start_lcd	;wreg free
 14771                           
 14772                           ; BSR set to: 59
 14773                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 14774  01B90A  52E5               	movf	postdec1,f,c
 14775  01B90C  52E5               	movf	postdec1,f,c
 14776  01B90E  0012               	return		;funcret
 14777  01B910                     __end_of_eaDogM_WriteString:
 14778                           	opt callstack 0
 14779                           
 14780 ;; *************** function _wait_lcd_set *****************
 14781 ;; Defined at:
 14782 ;;		line 434 in file "eadog.c"
 14783 ;; Parameters:    Size  Location     Type
 14784 ;;		None
 14785 ;; Auto vars:     Size  Location     Type
 14786 ;;		None
 14787 ;; Return value:  Size  Location     Type
 14788 ;;                  1  [STACK] void 
 14789 ;; Registers used:
 14790 ;;		None
 14791 ;; Tracked objects:
 14792 ;;		On entry : 0/0
 14793 ;;		On exit  : 3F/0
 14794 ;;		Unchanged: 0/0
 14795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14800 ;;Total ram usage:        0 bytes
 14801 ;; Hardware stack levels used:    1
 14802 ;; Hardware stack levels required when called:   15
 14803 ;; This function calls:
 14804 ;;		Nothing
 14805 ;; This function is called by:
 14806 ;;		_eaDogM_WriteString
 14807 ;;		_send_lcd_data_dma
 14808 ;; This function uses a reentrant model
 14809 ;;
 14810                           
 14811                           	psect	text61
 14812  01D520                     __ptext61:
 14813                           	opt callstack 0
 14814  01D520                     _wait_lcd_set:
 14815                           	opt callstack 12
 14816                           
 14817                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 14818                           
 14819                           ; BSR set to: 59
 14820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14821                           ;incstack = 0
 14822  01D520  0100               	movlb	0	; () banked
 14823  01D522  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 14824                           
 14825                           ; BSR set to: 0
 14826                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 14827  01D524  0012               	return		;funcret
 14828  01D526                     __end_of_wait_lcd_set:
 14829                           	opt callstack 0
 14830                           
 14831 ;; *************** function _start_lcd *****************
 14832 ;; Defined at:
 14833 ;;		line 429 in file "eadog.c"
 14834 ;; Parameters:    Size  Location     Type
 14835 ;;		None
 14836 ;; Auto vars:     Size  Location     Type
 14837 ;;		None
 14838 ;; Return value:  Size  Location     Type
 14839 ;;                  1  [STACK] void 
 14840 ;; Registers used:
 14841 ;;		None
 14842 ;; Tracked objects:
 14843 ;;		On entry : 3F/0
 14844 ;;		On exit  : 3F/3B
 14845 ;;		Unchanged: 0/0
 14846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14851 ;;Total ram usage:        0 bytes
 14852 ;; Hardware stack levels used:    1
 14853 ;; Hardware stack levels required when called:   15
 14854 ;; This function calls:
 14855 ;;		Nothing
 14856 ;; This function is called by:
 14857 ;;		_eaDogM_WriteString
 14858 ;;		_send_lcd_data_dma
 14859 ;; This function uses a reentrant model
 14860 ;;
 14861                           
 14862                           	psect	text62
 14863  01D526                     __ptext62:
 14864                           	opt callstack 0
 14865  01D526                     _start_lcd:
 14866                           	opt callstack 12
 14867                           
 14868                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 14869                           
 14870                           ; BSR set to: 0
 14871                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14872                           ;incstack = 0
 14873  01D526  013B               	movlb	59	; () banked
 14874  01D528  8DFC               	bsf	252,6,b	;volatile
 14875                           
 14876                           ; BSR set to: 59
 14877                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 14878  01D52A  0012               	return		;funcret
 14879  01D52C                     __end_of_start_lcd:
 14880                           	opt callstack 0
 14881                           
 14882 ;; *************** function _ringBufS_flush *****************
 14883 ;; Defined at:
 14884 ;;		line 76 in file "ringbufs.c"
 14885 ;; Parameters:    Size  Location     Type
 14886 ;;  _this           2  [STACK] PTR struct ringBufS_t
 14887 ;;		 -> ring_buf1(67), 
 14888 ;;  clearBuffer     1  [STACK] const char 
 14889 ;; Auto vars:     Size  Location     Type
 14890 ;;		None
 14891 ;; Return value:  Size  Location     Type
 14892 ;;                  1  [STACK] void 
 14893 ;; Registers used:
 14894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 14895 ;; Tracked objects:
 14896 ;;		On entry : 3F/0
 14897 ;;		On exit  : 0/0
 14898 ;;		Unchanged: 0/0
 14899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14904 ;;Total ram usage:        0 bytes
 14905 ;; Hardware stack levels used:    1
 14906 ;; Hardware stack levels required when called:   16
 14907 ;; This function calls:
 14908 ;;		_memset
 14909 ;; This function is called by:
 14910 ;;		_eaDogM_WriteString
 14911 ;;		_send_lcd_data_dma
 14912 ;; This function uses a reentrant model
 14913 ;;
 14914                           
 14915                           	psect	text63
 14916  01BADC                     __ptext63:
 14917                           	opt callstack 0
 14918  01BADC                     _ringBufS_flush:
 14919                           	opt callstack 11
 14920                           
 14921                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 14922                           ;stkvar	__this @ sp[(0)+-2]
 14923                           
 14924                           ; BSR set to: 59
 14925                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14926                           ;incstack = 0
 14927  01BADC  0EFE               	movlw	-2
 14928  01BADE  006F FF8C  F00B    	movff	plusw1,btemp+10
 14929  01BAE4  0EFF               	movlw	-1
 14930  01BAE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 14931  01BAEC  0E42               	movlw	66
 14932  01BAEE  240B               	addwf	(btemp+10)^0,w,c
 14933  01BAF0  6ED9               	movwf	fsr2l,c
 14934  01BAF2  0E00               	movlw	0
 14935  01BAF4  200C               	addwfc	(btemp+11)^0,w,c
 14936  01BAF6  6EDA               	movwf	fsr2h,c
 14937  01BAF8  0E00               	movlw	0
 14938  01BAFA  6EDF               	movwf	indf2,c
 14939                           
 14940                           ;ringbufs.c: 79:  _this->head = 0;
 14941                           ;stkvar	__this @ sp[(0)+-2]
 14942  01BAFC  0EFE               	movlw	-2
 14943  01BAFE  006F FF8C  F00B    	movff	plusw1,btemp+10
 14944  01BB04  0EFF               	movlw	-1
 14945  01BB06  006F FF8C  F00C    	movff	plusw1,btemp+11
 14946  01BB0C  0E40               	movlw	64
 14947  01BB0E  240B               	addwf	(btemp+10)^0,w,c
 14948  01BB10  6ED9               	movwf	fsr2l,c
 14949  01BB12  0E00               	movlw	0
 14950  01BB14  200C               	addwfc	(btemp+11)^0,w,c
 14951  01BB16  6EDA               	movwf	fsr2h,c
 14952  01BB18  0E00               	movlw	0
 14953  01BB1A  6EDF               	movwf	indf2,c
 14954                           
 14955                           ;ringbufs.c: 80:  _this->tail = 0;
 14956                           ;stkvar	__this @ sp[(0)+-2]
 14957  01BB1C  0EFE               	movlw	-2
 14958  01BB1E  006F FF8C  F00B    	movff	plusw1,btemp+10
 14959  01BB24  0EFF               	movlw	-1
 14960  01BB26  006F FF8C  F00C    	movff	plusw1,btemp+11
 14961  01BB2C  0E41               	movlw	65
 14962  01BB2E  240B               	addwf	(btemp+10)^0,w,c
 14963  01BB30  6ED9               	movwf	fsr2l,c
 14964  01BB32  0E00               	movlw	0
 14965  01BB34  200C               	addwfc	(btemp+11)^0,w,c
 14966  01BB36  6EDA               	movwf	fsr2h,c
 14967  01BB38  0E00               	movlw	0
 14968  01BB3A  6EDF               	movwf	indf2,c
 14969                           
 14970                           ;ringbufs.c: 81:  if (clearBuffer) {
 14971                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 14972  01BB3C  0EFD               	movlw	-3
 14973  01BB3E  50E3               	movf	plusw1,w,c
 14974  01BB40  B4D8               	btfsc	status,2,c
 14975  01BB42  D011               	goto	l1722
 14976                           
 14977                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 14978  01BB44  0E40               	movlw	64
 14979  01BB46  6EE6               	movwf	postinc1,c
 14980  01BB48  0E00               	movlw	0
 14981  01BB4A  6EE6               	movwf	postinc1,c
 14982  01BB4C  0E00               	movlw	0
 14983  01BB4E  6EE6               	movwf	postinc1,c
 14984  01BB50  0E00               	movlw	0
 14985  01BB52  6EE6               	movwf	postinc1,c
 14986                           
 14987                           ;stkvar	__this @ sp[(-4)+-2]
 14988  01BB54  0EFA               	movlw	-6
 14989  01BB56  006F FF8F FFE6     	movff	plusw1,postinc1
 14990  01BB5C  006F FF8F FFE6     	movff	plusw1,postinc1
 14991  01BB62  EC7D  F0BA         	call	_memset	;wreg free
 14992  01BB66                     l1722:
 14993                           
 14994                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 14995  01BB66  52E5               	movf	postdec1,f,c
 14996  01BB68  52E5               	movf	postdec1,f,c
 14997  01BB6A  52E5               	movf	postdec1,f,c
 14998  01BB6C  0012               	return		;funcret
 14999  01BB6E                     __end_of_ringBufS_flush:
 15000                           	opt callstack 0
 15001                           
 15002 ;; *************** function _memset *****************
 15003 ;; Defined at:
 15004 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 15005 ;; Parameters:    Size  Location     Type
 15006 ;;  dest            2  [STACK] PTR void 
 15007 ;;		 -> ring_buf2(67), ring_buf1(67), 
 15008 ;;  c               2  [STACK] int 
 15009 ;;  n               2  [STACK] unsigned int 
 15010 ;; Auto vars:     Size  Location     Type
 15011 ;;  s               2  [STACK] PTR unsigned char 
 15012 ;;		 -> ring_buf2(67), ring_buf1(67), 
 15013 ;;  k               2  [STACK] unsigned int 
 15014 ;; Return value:  Size  Location     Type
 15015 ;;                  2  [STACK] PTR void 
 15016 ;; Registers used:
 15017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 15018 ;; Tracked objects:
 15019 ;;		On entry : 0/0
 15020 ;;		On exit  : 0/0
 15021 ;;		Unchanged: 0/0
 15022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15027 ;;Total ram usage:        0 bytes
 15028 ;; Hardware stack levels used:    1
 15029 ;; Hardware stack levels required when called:   15
 15030 ;; This function calls:
 15031 ;;		Nothing
 15032 ;; This function is called by:
 15033 ;;		_ringBufS_init
 15034 ;;		_ringBufS_flush
 15035 ;; This function uses a reentrant model
 15036 ;;
 15037                           
 15038                           	psect	text64
 15039  0174FA                     __ptext64:
 15040                           	opt callstack 0
 15041  0174FA                     _memset:
 15042                           	opt callstack 0
 15043                           
 15044                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15045  0174FA  52E6               	movf	postinc1,f,c
 15046  0174FC  52E6               	movf	postinc1,f,c
 15047  0174FE  52E6               	movf	postinc1,f,c
 15048  017500  52E6               	movf	postinc1,f,c
 15049                           
 15050                           ;stkvar	_dest @ sp[(-4)+-2]
 15051                           
 15052                           ;incstack = 0
 15053  017502  0EFA               	movlw	-6
 15054  017504  006F FF8C  F00B    	movff	plusw1,btemp+10
 15055  01750A  0EFB               	movlw	-5
 15056  01750C  006F FF8C  F00C    	movff	plusw1,btemp+11
 15057                           
 15058                           ;stkvar	_s @ sp[(-4)+0]
 15059  017512  0EFD               	movlw	-3
 15060  017514  0060  F033  FFE3   	movff	btemp+11,plusw1
 15061  01751A  0EFC               	movlw	-4
 15062  01751C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15063                           
 15064                           ;stkvar	_n @ sp[(-4)+-6]
 15065  017522  0EF6               	movlw	-10
 15066  017524  006F FF8C  F001    	movff	plusw1,btemp
 15067  01752A  0EF7               	movlw	-9
 15068  01752C  50E3               	movf	plusw1,w,c
 15069  01752E  1001               	iorwf	btemp^0,w,c
 15070  017530  B4D8               	btfsc	status,2,c
 15071  017532  D154               	goto	u11990
 15072                           
 15073                           ;stkvar	_c @ sp[(-4)+-4]
 15074                           ;stkvar	_s @ sp[(-4)+0]
 15075  017534  0EFC               	movlw	-4
 15076  017536  006F FF8F FFD9     	movff	plusw1,fsr2l
 15077  01753C  0EFD               	movlw	-3
 15078  01753E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15079  017544  0EF8               	movlw	-8
 15080  017546  006F FF8F FFDF     	movff	plusw1,indf2
 15081                           
 15082                           ;stkvar	_c @ sp[(-4)+-4]
 15083                           ;stkvar	_n @ sp[(-4)+-6]
 15084                           ;stkvar	_s @ sp[(-4)+0]
 15085  01754C  0EFC               	movlw	-4
 15086  01754E  006F FF8C  F00B    	movff	plusw1,btemp+10
 15087  017554  0EFD               	movlw	-3
 15088  017556  006F FF8C  F00C    	movff	plusw1,btemp+11
 15089  01755C  0EF6               	movlw	-10
 15090  01755E  50E3               	movf	plusw1,w,c
 15091  017560  260B               	addwf	(btemp+10)^0,f,c
 15092  017562  0EF7               	movlw	-9
 15093  017564  50E3               	movf	plusw1,w,c
 15094  017566  220C               	addwfc	(btemp+11)^0,f,c
 15095  017568  0EFF               	movlw	255
 15096  01756A  240B               	addwf	(btemp+10)^0,w,c
 15097  01756C  6ED9               	movwf	fsr2l,c
 15098  01756E  0EFF               	movlw	255
 15099  017570  200C               	addwfc	(btemp+11)^0,w,c
 15100  017572  6EDA               	movwf	fsr2h,c
 15101  017574  0EF8               	movlw	-8
 15102  017576  006F FF8F FFDF     	movff	plusw1,indf2
 15103                           
 15104                           ;stkvar	_n @ sp[(-4)+-6]
 15105  01757C  0EF7               	movlw	-9
 15106  01757E  50E3               	movf	plusw1,w,c
 15107  017580  E108               	bnz	l13190
 15108  017582  0EF6               	movlw	-10
 15109  017584  006F FF8C  F001    	movff	plusw1,btemp
 15110  01758A  0E03               	movlw	3
 15111  01758C  5E01               	subwf	btemp^0,f,c
 15112  01758E  A0D8               	btfss	status,0,c
 15113  017590  D125               	goto	u11990
 15114  017592                     l13190:
 15115                           
 15116                           ;stkvar	_c @ sp[(-4)+-4]
 15117                           ;stkvar	_s @ sp[(-4)+0]
 15118  017592  0EFC               	movlw	-4
 15119  017594  006F FF8C  F00B    	movff	plusw1,btemp+10
 15120  01759A  0EFD               	movlw	-3
 15121  01759C  006F FF8C  F00C    	movff	plusw1,btemp+11
 15122  0175A2  0E01               	movlw	1
 15123  0175A4  240B               	addwf	(btemp+10)^0,w,c
 15124  0175A6  6ED9               	movwf	fsr2l,c
 15125  0175A8  0E00               	movlw	0
 15126  0175AA  200C               	addwfc	(btemp+11)^0,w,c
 15127  0175AC  6EDA               	movwf	fsr2h,c
 15128  0175AE  0EF8               	movlw	-8
 15129  0175B0  006F FF8F FFDF     	movff	plusw1,indf2
 15130                           
 15131                           ;stkvar	_c @ sp[(-4)+-4]
 15132                           ;stkvar	_s @ sp[(-4)+0]
 15133  0175B6  0EFC               	movlw	-4
 15134  0175B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 15135  0175BE  0EFD               	movlw	-3
 15136  0175C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 15137  0175C6  0E02               	movlw	2
 15138  0175C8  240B               	addwf	(btemp+10)^0,w,c
 15139  0175CA  6ED9               	movwf	fsr2l,c
 15140  0175CC  0E00               	movlw	0
 15141  0175CE  200C               	addwfc	(btemp+11)^0,w,c
 15142  0175D0  6EDA               	movwf	fsr2h,c
 15143  0175D2  0EF8               	movlw	-8
 15144  0175D4  006F FF8F FFDF     	movff	plusw1,indf2
 15145                           
 15146                           ;stkvar	_c @ sp[(-4)+-4]
 15147                           ;stkvar	_n @ sp[(-4)+-6]
 15148                           ;stkvar	_s @ sp[(-4)+0]
 15149  0175DA  0EFC               	movlw	-4
 15150  0175DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 15151  0175E2  0EFD               	movlw	-3
 15152  0175E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 15153  0175EA  0EF6               	movlw	-10
 15154  0175EC  50E3               	movf	plusw1,w,c
 15155  0175EE  260B               	addwf	(btemp+10)^0,f,c
 15156  0175F0  0EF7               	movlw	-9
 15157  0175F2  50E3               	movf	plusw1,w,c
 15158  0175F4  220C               	addwfc	(btemp+11)^0,f,c
 15159  0175F6  0EFE               	movlw	254
 15160  0175F8  240B               	addwf	(btemp+10)^0,w,c
 15161  0175FA  6ED9               	movwf	fsr2l,c
 15162  0175FC  0EFF               	movlw	255
 15163  0175FE  200C               	addwfc	(btemp+11)^0,w,c
 15164  017600  6EDA               	movwf	fsr2h,c
 15165  017602  0EF8               	movlw	-8
 15166  017604  006F FF8F FFDF     	movff	plusw1,indf2
 15167                           
 15168                           ;stkvar	_c @ sp[(-4)+-4]
 15169                           ;stkvar	_n @ sp[(-4)+-6]
 15170                           ;stkvar	_s @ sp[(-4)+0]
 15171  01760A  0EFC               	movlw	-4
 15172  01760C  006F FF8C  F00B    	movff	plusw1,btemp+10
 15173  017612  0EFD               	movlw	-3
 15174  017614  006F FF8C  F00C    	movff	plusw1,btemp+11
 15175  01761A  0EF6               	movlw	-10
 15176  01761C  50E3               	movf	plusw1,w,c
 15177  01761E  260B               	addwf	(btemp+10)^0,f,c
 15178  017620  0EF7               	movlw	-9
 15179  017622  50E3               	movf	plusw1,w,c
 15180  017624  220C               	addwfc	(btemp+11)^0,f,c
 15181  017626  0EFD               	movlw	253
 15182  017628  240B               	addwf	(btemp+10)^0,w,c
 15183  01762A  6ED9               	movwf	fsr2l,c
 15184  01762C  0EFF               	movlw	255
 15185  01762E  200C               	addwfc	(btemp+11)^0,w,c
 15186  017630  6EDA               	movwf	fsr2h,c
 15187  017632  0EF8               	movlw	-8
 15188  017634  006F FF8F FFDF     	movff	plusw1,indf2
 15189                           
 15190                           ;stkvar	_n @ sp[(-4)+-6]
 15191  01763A  0EF7               	movlw	-9
 15192  01763C  50E3               	movf	plusw1,w,c
 15193  01763E  E108               	bnz	l13196
 15194  017640  0EF6               	movlw	-10
 15195  017642  006F FF8C  F001    	movff	plusw1,btemp
 15196  017648  0E07               	movlw	7
 15197  01764A  5E01               	subwf	btemp^0,f,c
 15198  01764C  A0D8               	btfss	status,0,c
 15199  01764E  D0C6               	goto	u11990
 15200  017650                     l13196:
 15201                           
 15202                           ;stkvar	_c @ sp[(-4)+-4]
 15203                           ;stkvar	_s @ sp[(-4)+0]
 15204  017650  0EFC               	movlw	-4
 15205  017652  006F FF8C  F00B    	movff	plusw1,btemp+10
 15206  017658  0EFD               	movlw	-3
 15207  01765A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15208  017660  0E03               	movlw	3
 15209  017662  240B               	addwf	(btemp+10)^0,w,c
 15210  017664  6ED9               	movwf	fsr2l,c
 15211  017666  0E00               	movlw	0
 15212  017668  200C               	addwfc	(btemp+11)^0,w,c
 15213  01766A  6EDA               	movwf	fsr2h,c
 15214  01766C  0EF8               	movlw	-8
 15215  01766E  006F FF8F FFDF     	movff	plusw1,indf2
 15216                           
 15217                           ;stkvar	_c @ sp[(-4)+-4]
 15218                           ;stkvar	_n @ sp[(-4)+-6]
 15219                           ;stkvar	_s @ sp[(-4)+0]
 15220  017674  0EFC               	movlw	-4
 15221  017676  006F FF8C  F00B    	movff	plusw1,btemp+10
 15222  01767C  0EFD               	movlw	-3
 15223  01767E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15224  017684  0EF6               	movlw	-10
 15225  017686  50E3               	movf	plusw1,w,c
 15226  017688  260B               	addwf	(btemp+10)^0,f,c
 15227  01768A  0EF7               	movlw	-9
 15228  01768C  50E3               	movf	plusw1,w,c
 15229  01768E  220C               	addwfc	(btemp+11)^0,f,c
 15230  017690  0EFC               	movlw	252
 15231  017692  240B               	addwf	(btemp+10)^0,w,c
 15232  017694  6ED9               	movwf	fsr2l,c
 15233  017696  0EFF               	movlw	255
 15234  017698  200C               	addwfc	(btemp+11)^0,w,c
 15235  01769A  6EDA               	movwf	fsr2h,c
 15236  01769C  0EF8               	movlw	-8
 15237  01769E  006F FF8F FFDF     	movff	plusw1,indf2
 15238                           
 15239                           ;stkvar	_n @ sp[(-4)+-6]
 15240  0176A4  0EF7               	movlw	-9
 15241  0176A6  50E3               	movf	plusw1,w,c
 15242  0176A8  E108               	bnz	l13202
 15243  0176AA  0EF6               	movlw	-10
 15244  0176AC  006F FF8C  F001    	movff	plusw1,btemp
 15245  0176B2  0E09               	movlw	9
 15246  0176B4  5E01               	subwf	btemp^0,f,c
 15247  0176B6  A0D8               	btfss	status,0,c
 15248  0176B8  D091               	goto	u11990
 15249  0176BA                     l13202:
 15250                           
 15251                           ;stkvar	_s @ sp[(-4)+0]
 15252  0176BA  0EFC               	movlw	-4
 15253  0176BC  006F FF8C  F00B    	movff	plusw1,btemp+10
 15254  0176C2  1E0B               	comf	(btemp+10)^0,f,c
 15255  0176C4  0EFD               	movlw	-3
 15256  0176C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 15257  0176CC  1E0C               	comf	(btemp+11)^0,f,c
 15258  0176CE  2A0B               	incf	(btemp+10)^0,f,c
 15259  0176D0  B4D8               	btfsc	status,2,c
 15260  0176D2  2A0C               	incf	(btemp+11)^0,f,c
 15261  0176D4  0E03               	movlw	3
 15262  0176D6  160B               	andwf	(btemp+10)^0,f,c
 15263  0176D8  0E00               	movlw	0
 15264  0176DA  160C               	andwf	(btemp+11)^0,f,c
 15265                           
 15266                           ;stkvar	_k @ sp[(-4)+2]
 15267  0176DC  0EFE               	movlw	-2
 15268  0176DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15269  0176E4  0EFF               	movlw	-1
 15270  0176E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 15271                           
 15272                           ;stkvar	_k @ sp[(-4)+2]
 15273                           ;stkvar	_s @ sp[(-4)+0]
 15274  0176EC  0EFC               	movlw	-4
 15275  0176EE  50E3               	movf	plusw1,w,c
 15276  0176F0  6E01               	movwf	btemp^0,c
 15277  0176F2  0EFE               	movlw	-2
 15278  0176F4  50E3               	movf	plusw1,w,c
 15279  0176F6  2601               	addwf	btemp^0,f,c
 15280  0176F8  0EFC               	movlw	-4
 15281  0176FA  0060  F007  FFE3   	movff	btemp,plusw1
 15282  017700  0EFD               	movlw	-3
 15283  017702  50E3               	movf	plusw1,w,c
 15284  017704  6E01               	movwf	btemp^0,c
 15285  017706  0EFF               	movlw	-1
 15286  017708  50E3               	movf	plusw1,w,c
 15287  01770A  2201               	addwfc	btemp^0,f,c
 15288  01770C  0EFD               	movlw	-3
 15289  01770E  0060  F007  FFE3   	movff	btemp,plusw1
 15290                           
 15291                           ;stkvar	_k @ sp[(-4)+2]
 15292                           ;stkvar	_n @ sp[(-4)+-6]
 15293  017714  0EF6               	movlw	-10
 15294  017716  50E3               	movf	plusw1,w,c
 15295  017718  6E01               	movwf	btemp^0,c
 15296  01771A  0EFE               	movlw	-2
 15297  01771C  50E3               	movf	plusw1,w,c
 15298  01771E  5E01               	subwf	btemp^0,f,c
 15299  017720  0EF6               	movlw	-10
 15300  017722  0060  F007  FFE3   	movff	btemp,plusw1
 15301  017728  0EF7               	movlw	-9
 15302  01772A  50E3               	movf	plusw1,w,c
 15303  01772C  6E01               	movwf	btemp^0,c
 15304  01772E  0EFF               	movlw	-1
 15305  017730  50E3               	movf	plusw1,w,c
 15306  017732  5A01               	subwfb	btemp^0,f,c
 15307  017734  0EF7               	movlw	-9
 15308  017736  0060  F007  FFE3   	movff	btemp,plusw1
 15309  01773C  0EFC               	movlw	252
 15310  01773E  6E0B               	movwf	(btemp+10)^0,c
 15311  017740  0EFF               	movlw	255
 15312  017742  6E0C               	movwf	(btemp+11)^0,c
 15313                           
 15314                           ;stkvar	_n @ sp[(-4)+-6]
 15315  017744  0EF6               	movlw	-10
 15316  017746  006F FF8C  F001    	movff	plusw1,btemp
 15317  01774C  500B               	movf	(btemp+10)^0,w,c
 15318  01774E  1601               	andwf	btemp^0,f,c
 15319  017750  0EF6               	movlw	-10
 15320  017752  0060  F007  FFE3   	movff	btemp,plusw1
 15321  017758  0EF7               	movlw	-9
 15322  01775A  006F FF8C  F001    	movff	plusw1,btemp
 15323  017760  500C               	movf	(btemp+11)^0,w,c
 15324  017762  1601               	andwf	btemp^0,f,c
 15325  017764  0EF7               	movlw	-9
 15326  017766  D02E               	goto	L14
 15327  017768                     l13210:
 15328                           
 15329                           ;stkvar	_c @ sp[(-4)+-4]
 15330                           ;stkvar	_s @ sp[(-4)+0]
 15331  017768  0EFC               	movlw	-4
 15332  01776A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15333  017770  0EFD               	movlw	-3
 15334  017772  006F FF8F FFDA     	movff	plusw1,fsr2h
 15335  017778  0EF8               	movlw	-8
 15336  01777A  006F FF8F FFDF     	movff	plusw1,indf2
 15337                           
 15338                           ;stkvar	_n @ sp[(-4)+-6]
 15339  017780  0EF6               	movlw	-10
 15340  017782  006F FF8C  F001    	movff	plusw1,btemp
 15341  017788  0E01               	movlw	1
 15342  01778A  5E01               	subwf	btemp^0,f,c
 15343  01778C  0EF6               	movlw	-10
 15344  01778E  0060  F007  FFE3   	movff	btemp,plusw1
 15345  017794  0EF7               	movlw	-9
 15346  017796  006F FF8C  F001    	movff	plusw1,btemp
 15347  01779C  0E00               	movlw	0
 15348  01779E  5A01               	subwfb	btemp^0,f,c
 15349  0177A0  0EF7               	movlw	-9
 15350  0177A2  0060  F007  FFE3   	movff	btemp,plusw1
 15351                           
 15352                           ;stkvar	_s @ sp[(-4)+0]
 15353  0177A8  0EFC               	movlw	-4
 15354  0177AA  50E3               	movf	plusw1,w,c
 15355  0177AC  0F01               	addlw	1
 15356  0177AE  6E01               	movwf	btemp^0,c
 15357  0177B0  0EFC               	movlw	-4
 15358  0177B2  0060  F007  FFE3   	movff	btemp,plusw1
 15359  0177B8  6A01               	clrf	btemp^0,c
 15360  0177BA  0EFD               	movlw	-3
 15361  0177BC  50E3               	movf	plusw1,w,c
 15362  0177BE  2001               	addwfc	btemp^0,w,c
 15363  0177C0  6E01               	movwf	btemp^0,c
 15364  0177C2  0EFD               	movlw	-3
 15365  0177C4                     L14:
 15366  0177C4  0060  F007  FFE3   	movff	btemp,plusw1
 15367                           
 15368                           ;stkvar	_n @ sp[(-4)+-6]
 15369  0177CA  0EF6               	movlw	-10
 15370  0177CC  006F FF8C  F001    	movff	plusw1,btemp
 15371  0177D2  0EF7               	movlw	-9
 15372  0177D4  50E3               	movf	plusw1,w,c
 15373  0177D6  1001               	iorwf	btemp^0,w,c
 15374  0177D8  A4D8               	btfss	status,2,c
 15375  0177DA  D7C6               	goto	l13210
 15376  0177DC                     u11990:
 15377                           
 15378                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 15379  0177DC  0EF6               	movlw	246
 15380  0177DE  26E1               	addwf	fsr1l,f,c
 15381  0177E0  0EFF               	movlw	255
 15382  0177E2  22E2               	addwfc	fsr1h,f,c
 15383  0177E4  0012               	return		;funcret
 15384  0177E6                     __end_of_memset:
 15385                           	opt callstack 0
 15386                           
 15387 ;; *************** function _printf *****************
 15388 ;; Defined at:
 15389 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 15390 ;; Parameters:    Size  Location     Type
 15391 ;;  fmt             2  [STACK] PTR const unsigned char 
 15392 ;;		 -> STR_63(3), STR_62(3), 
 15393 ;; Auto vars:     Size  Location     Type
 15394 ;;  ap              2  [STACK] PTR void [1]
 15395 ;;		 -> ?_printf(2), ?_sprintf(2), 
 15396 ;;  ret             2    0        int 
 15397 ;; Return value:  Size  Location     Type
 15398 ;;                  2  [STACK] int 
 15399 ;; Registers used:
 15400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 15401 ;; Tracked objects:
 15402 ;;		On entry : 3F/3B
 15403 ;;		On exit  : 3F/0
 15404 ;;		Unchanged: 0/0
 15405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15410 ;;Total ram usage:        0 bytes
 15411 ;; Hardware stack levels used:    1
 15412 ;; Hardware stack levels required when called:   23
 15413 ;; This function calls:
 15414 ;;		_vfprintf
 15415 ;; This function is called by:
 15416 ;;		_eaDogM_WriteString
 15417 ;;		_send_lcd_data_dma
 15418 ;; This function uses a reentrant model
 15419 ;;
 15420                           
 15421                           	psect	text65
 15422  01C2F4                     __ptext65:
 15423                           	opt callstack 0
 15424  01C2F4                     _printf:
 15425                           	opt callstack 0
 15426                           
 15427                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15428  01C2F4  52E6               	movf	postinc1,f,c
 15429  01C2F6  52E6               	movf	postinc1,f,c
 15430                           
 15431                           ;stkvar	?_printf @ sp[(-2)+-3]
 15432                           
 15433                           ;incstack = 0
 15434  01C2F8  0EFB               	movlw	251
 15435  01C2FA  24E1               	addwf	fsr1l,w,c
 15436  01C2FC  6E0B               	movwf	(btemp+10)^0,c
 15437  01C2FE  0EFF               	movlw	255
 15438  01C300  20E2               	addwfc	fsr1h,w,c
 15439  01C302  6E0C               	movwf	(btemp+11)^0,c
 15440                           
 15441                           ;stkvar	_ap @ sp[(-2)+0]
 15442  01C304  0EFF               	movlw	-1
 15443  01C306  0060  F033  FFE3   	movff	btemp+11,plusw1
 15444  01C30C  0EFE               	movlw	-2
 15445  01C30E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15446                           
 15447                           ;stkvar	_ap @ sp[(-2)+0]
 15448  01C314  0EFE               	movlw	254
 15449  01C316  24E1               	addwf	fsr1l,w,c
 15450  01C318  6E01               	movwf	btemp^0,c
 15451  01C31A  0EFF               	movlw	255
 15452  01C31C  20E2               	addwfc	fsr1h,w,c
 15453  01C31E  6E02               	movwf	(btemp+1)^0,c
 15454  01C320  0060  F007  FFE6   	movff	btemp,postinc1
 15455  01C326  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15456                           
 15457                           ;stkvar	_fmt @ sp[(-4)+-3]
 15458  01C32C  0EF9               	movlw	-7
 15459  01C32E  006F FF8F FFE6     	movff	plusw1,postinc1
 15460  01C334  006F FF8F FFE6     	movff	plusw1,postinc1
 15461  01C33A  0E00               	movlw	0
 15462  01C33C  6EE6               	movwf	postinc1,c
 15463  01C33E  0E00               	movlw	0
 15464  01C340  6EE6               	movwf	postinc1,c
 15465  01C342  ECE0  F0DA         	call	_vfprintf	;wreg free
 15466                           
 15467                           ; BSR set to: 0
 15468                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 15469  01C346  52E5               	movf	postdec1,f,c
 15470  01C348  52E5               	movf	postdec1,f,c
 15471  01C34A  52E5               	movf	postdec1,f,c
 15472  01C34C  50E7               	movf	indf1,w,c
 15473  01C34E  5EE1               	subwf	fsr1l,f,c
 15474  01C350  0E00               	movlw	0
 15475  01C352  5AE2               	subwfb	fsr1h,f,c
 15476  01C354  0012               	return		;funcret
 15477  01C356                     __end_of_printf:
 15478                           	opt callstack 0
 15479                           
 15480 ;; *************** function _vfprintf *****************
 15481 ;; Defined at:
 15482 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15483 ;; Parameters:    Size  Location     Type
 15484 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15485 ;;		 -> f(6), NULL(0), 
 15486 ;;  fmt             2  [STACK] PTR const unsigned char 
 15487 ;;		 -> STR_83(127), STR_81(3), STR_80(3), STR_79(19), 
 15488 ;;		 -> STR_78(19), STR_77(19), STR_76(19), STR_75(19), 
 15489 ;;		 -> STR_74(19), STR_73(24), STR_72(15), STR_71(15), 
 15490 ;;		 -> STR_70(15), STR_69(10), STR_68(10), STR_67(19), 
 15491 ;;		 -> STR_66(19), STR_63(3), STR_62(3), STR_61(21), 
 15492 ;;		 -> STR_60(21), STR_59(21), STR_58(21), STR_57(21), 
 15493 ;;		 -> STR_56(21), STR_55(21), STR_54(21), STR_53(21), 
 15494 ;;		 -> STR_52(20), STR_51(21), STR_50(21), STR_49(21), 
 15495 ;;		 -> STR_48(22), STR_47(22), STR_46(22), STR_45(23), 
 15496 ;;		 -> STR_44(23), STR_43(23), STR_42(29), STR_41(23), 
 15497 ;;		 -> STR_40(23), STR_39(22), STR_38(22), STR_37(22), 
 15498 ;;		 -> STR_36(22), STR_35(22), STR_34(22), STR_33(22), 
 15499 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 15500 ;;		 -> STR_28(22), STR_27(17), STR_26(16), STR_25(16), 
 15501 ;;		 -> STR_24(21), STR_23(21), STR_22(21), STR_21(26), 
 15502 ;;		 -> STR_20(26), STR_19(22), STR_18(21), STR_17(21), 
 15503 ;;		 -> STR_16(21), STR_15(21), STR_14(22), STR_13(22), 
 15504 ;;		 -> STR_12(22), STR_11(26), STR_10(21), STR_9(21), 
 15505 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 15506 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 15507 ;;  ap              2  [STACK] PTR PTR void 
 15508 ;;		 -> ap(2), ap(2), 
 15509 ;; Auto vars:     Size  Location     Type
 15510 ;;  cfmt            2  [STACK] PTR unsigned char 
 15511 ;;		 -> STR_83(127), STR_81(3), STR_80(3), STR_79(19), 
 15512 ;;		 -> STR_78(19), STR_77(19), STR_76(19), STR_75(19), 
 15513 ;;		 -> STR_74(19), STR_73(24), STR_72(15), STR_71(15), 
 15514 ;;		 -> STR_70(15), STR_69(10), STR_68(10), STR_67(19), 
 15515 ;;		 -> STR_66(19), STR_63(3), STR_62(3), STR_61(21), 
 15516 ;;		 -> STR_60(21), STR_59(21), STR_58(21), STR_57(21), 
 15517 ;;		 -> STR_56(21), STR_55(21), STR_54(21), STR_53(21), 
 15518 ;;		 -> STR_52(20), STR_51(21), STR_50(21), STR_49(21), 
 15519 ;;		 -> STR_48(22), STR_47(22), STR_46(22), STR_45(23), 
 15520 ;;		 -> STR_44(23), STR_43(23), STR_42(29), STR_41(23), 
 15521 ;;		 -> STR_40(23), STR_39(22), STR_38(22), STR_37(22), 
 15522 ;;		 -> STR_36(22), STR_35(22), STR_34(22), STR_33(22), 
 15523 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 15524 ;;		 -> STR_28(22), STR_27(17), STR_26(16), STR_25(16), 
 15525 ;;		 -> STR_24(21), STR_23(21), STR_22(21), STR_21(26), 
 15526 ;;		 -> STR_20(26), STR_19(22), STR_18(21), STR_17(21), 
 15527 ;;		 -> STR_16(21), STR_15(21), STR_14(22), STR_13(22), 
 15528 ;;		 -> STR_12(22), STR_11(26), STR_10(21), STR_9(21), 
 15529 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 15530 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 15531 ;; Return value:  Size  Location     Type
 15532 ;;                  2  [STACK] int 
 15533 ;; Registers used:
 15534 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 15535 ;; Tracked objects:
 15536 ;;		On entry : 0/1
 15537 ;;		On exit  : 3F/0
 15538 ;;		Unchanged: 0/0
 15539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15544 ;;Total ram usage:        0 bytes
 15545 ;; Hardware stack levels used:    1
 15546 ;; Hardware stack levels required when called:   22
 15547 ;; This function calls:
 15548 ;;		_vfpfcnvrt
 15549 ;; This function is called by:
 15550 ;;		_sprintf
 15551 ;;		_printf
 15552 ;; This function uses a reentrant model
 15553 ;;
 15554                           
 15555                           	psect	text66
 15556  01B5C0                     __ptext66:
 15557                           	opt callstack 0
 15558  01B5C0                     _vfprintf:
 15559                           	opt callstack 0
 15560                           
 15561                           ; BSR set to: 0
 15562                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15563  01B5C0  52E6               	movf	postinc1,f,c
 15564  01B5C2  52E6               	movf	postinc1,f,c
 15565                           
 15566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 15567                           ;stkvar	_fmt @ sp[(-2)+-4]
 15568                           
 15569                           ;incstack = 0
 15570 ;; hardware stack exceeded
 15571  01B5C4  0EFA               	movlw	-6
 15572  01B5C6  006F FF8C  F00B    	movff	plusw1,btemp+10
 15573  01B5CC  0EFB               	movlw	-5
 15574  01B5CE  006F FF8C  F00C    	movff	plusw1,btemp+11
 15575                           
 15576                           ;stkvar	_cfmt @ sp[(-2)+0]
 15577  01B5D4  0EFF               	movlw	-1
 15578  01B5D6  0060  F033  FFE3   	movff	btemp+11,plusw1
 15579  01B5DC  0EFE               	movlw	-2
 15580  01B5DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15581                           
 15582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 15583  01B5E4  0100               	movlb	0	; () banked
 15584  01B5E6  6BC0               	clrf	_nout& (0+255),b
 15585  01B5E8  6BC1               	clrf	(_nout+1)& (0+255),b
 15586                           
 15587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 15588  01B5EA  D021               	goto	l14060
 15589  01B5EC                     l14058:
 15590                           
 15591                           ; BSR set to: 0
 15592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 15593                           ;stkvar	_ap @ sp[(-2)+-6]
 15594  01B5EC  0EF8               	movlw	-8
 15595  01B5EE  006F FF8F FFE6     	movff	plusw1,postinc1
 15596  01B5F4  006F FF8F FFE6     	movff	plusw1,postinc1
 15597                           
 15598                           ;stkvar	_cfmt @ sp[(-4)+0]
 15599  01B5FA  0EFC               	movlw	252
 15600  01B5FC  24E1               	addwf	fsr1l,w,c
 15601  01B5FE  6E01               	movwf	btemp^0,c
 15602  01B600  0EFF               	movlw	255
 15603  01B602  20E2               	addwfc	fsr1h,w,c
 15604  01B604  6E02               	movwf	(btemp+1)^0,c
 15605  01B606  0060  F007  FFE6   	movff	btemp,postinc1
 15606  01B60C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15607                           
 15608                           ;stkvar	_fp @ sp[(-6)+-2]
 15609  01B612  0EF8               	movlw	-8
 15610  01B614  006F FF8F FFE6     	movff	plusw1,postinc1
 15611  01B61A  006F FF8F FFE6     	movff	plusw1,postinc1
 15612  01B620  ECE0  F092         	call	_vfpfcnvrt	;wreg free
 15613  01B624  5001               	movf	btemp^0,w,c
 15614  01B626  0100               	movlb	0	; () banked
 15615  01B628  27C0               	addwf	_nout& (0+255),f,b
 15616  01B62A  5002               	movf	(btemp+1)^0,w,c
 15617  01B62C  23C1               	addwfc	(_nout+1)& (0+255),f,b
 15618  01B62E                     l14060:
 15619                           
 15620                           ; BSR set to: 0
 15621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 15622                           ;stkvar	_cfmt @ sp[(-2)+0]
 15623  01B62E  50E1               	movf	fsr1l,w,c
 15624  01B630  0FFE               	addlw	-2
 15625  01B632  6ED9               	movwf	fsr2l,c
 15626  01B634  50E2               	movf	fsr1h,w,c
 15627  01B636  6EDA               	movwf	fsr2h,c
 15628  01B638  0EFF               	movlw	255
 15629  01B63A  22DA               	addwfc	fsr2h,f,c
 15630  01B63C  006F FF7B FFF6     	movff	postinc2,tblptrl
 15631  01B642  006F FF77 FFF7     	movff	postdec2,tblptrh
 15632  01B648                     	if	0	;tblptru may be non-zero
 15633  01B648                     	endif
 15634  01B648                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15635  01B648  0E00               	movlw	low (__mediumconst shr (0+16))
 15636  01B64A  6EF8               	movwf	tblptru,c
 15637  01B64C                     	endif
 15638  01B64C  0008               	tblrd		*
 15639  01B64E  50F5               	movf	tablat,w,c
 15640  01B650  0900               	iorlw	0
 15641  01B652  A4D8               	btfss	status,2,c
 15642  01B654  D7CB               	goto	l14058
 15643                           
 15644                           ; BSR set to: 0
 15645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 15646  01B656  0060  F300  F001   	movff	_nout,btemp
 15647  01B65C  0060  F304  F002   	movff	_nout+1,btemp+1
 15648                           
 15649                           ; BSR set to: 0
 15650                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 15651  01B662  0EF8               	movlw	248
 15652  01B664  26E1               	addwf	fsr1l,f,c
 15653  01B666  0EFF               	movlw	255
 15654  01B668  22E2               	addwfc	fsr1h,f,c
 15655  01B66A  0012               	return		;funcret
 15656  01B66C                     __end_of_vfprintf:
 15657                           	opt callstack 0
 15658                           
 15659 ;; *************** function _vfpfcnvrt *****************
 15660 ;; Defined at:
 15661 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15662 ;; Parameters:    Size  Location     Type
 15663 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15664 ;;		 -> f(6), NULL(0), 
 15665 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 15666 ;;		 -> cfmt(2), 
 15667 ;;  ap              2  [STACK] PTR PTR void 
 15668 ;;		 -> ap(2), ap(2), 
 15669 ;; Auto vars:     Size  Location     Type
 15670 ;;  llu             8  [STACK] unsigned long long 
 15671 ;;  ll              8  [STACK] long long 
 15672 ;;  f               4  [STACK] long long 
 15673 ;;  ct              3  [STACK] unsigned char [3]
 15674 ;;  vp              3    0        PTR void 
 15675 ;;  cp              2  [STACK] PTR unsigned char 
 15676 ;;		 -> ?_printf(2), ?_sprintf(2), STR_65(9), STR_64(12), 
 15677 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 15678 ;;		 -> V(192), 
 15679 ;;  i               2    0        int 
 15680 ;;  done            2    0        int 
 15681 ;;  c               1  [STACK] unsigned char 
 15682 ;; Return value:  Size  Location     Type
 15683 ;;                  2  [STACK] int 
 15684 ;; Registers used:
 15685 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 15686 ;; Tracked objects:
 15687 ;;		On entry : 0/0
 15688 ;;		On exit  : 0/0
 15689 ;;		Unchanged: 0/0
 15690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15695 ;;Total ram usage:        0 bytes
 15696 ;; Hardware stack levels used:    1
 15697 ;; Hardware stack levels required when called:   21
 15698 ;; This function calls:
 15699 ;;		_atoi
 15700 ;;		_ctoa
 15701 ;;		_dtoa
 15702 ;;		_efgtoa
 15703 ;;		_fputc
 15704 ;;		_isdigit
 15705 ;;		_isupper
 15706 ;;		_stoa
 15707 ;;		_strncmp
 15708 ;;		_tolower
 15709 ;;		_utoa
 15710 ;;		_xtoa
 15711 ;; This function is called by:
 15712 ;;		_vfprintf
 15713 ;; This function uses a reentrant model
 15714 ;;
 15715                           
 15716                           	psect	text67
 15717  0125C0                     __ptext67:
 15718                           	opt callstack 0
 15719  0125C0                     _vfpfcnvrt:
 15720                           	opt callstack 0
 15721                           
 15722                           ; BSR set to: 0
 15723                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15724  0125C0  0E20               	movlw	32
 15725  0125C2  26E1               	addwf	fsr1l,f,c
 15726  0125C4  0E00               	movlw	0
 15727  0125C6  22E2               	addwfc	fsr1h,f,c
 15728                           
 15729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 15730                           ;stkvar	_fmt @ sp[(-32)+-4]
 15731                           
 15732                           ;incstack = 0
 15733 ;; hardware stack exceeded
 15734  0125C8  0EDC               	movlw	-36
 15735  0125CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 15736  0125D0  0EDD               	movlw	-35
 15737  0125D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 15738  0125D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 15739  0125DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 15740  0125E4                     	if	0	;tblptru may be non-zero
 15741  0125E4                     	endif
 15742  0125E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15743  0125E4  0E00               	movlw	low (__mediumconst shr (0+16))
 15744  0125E6  6EF8               	movwf	tblptru,c
 15745  0125E8                     	endif
 15746  0125E8  0008               	tblrd		*
 15747  0125EA  50F5               	movf	tablat,w,c
 15748  0125EC  0A25               	xorlw	37
 15749  0125EE  A4D8               	btfss	status,2,c
 15750  0125F0  EF87  F09A         	goto	l14020
 15751                           
 15752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 15753                           ;stkvar	_fmt @ sp[(-32)+-4]
 15754  0125F4  0EDC               	movlw	-36
 15755  0125F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 15756  0125FC  0EDD               	movlw	-35
 15757  0125FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 15758  012604  2ADE               	incf	postinc2,f,c
 15759  012606  0E00               	movlw	0
 15760  012608  22DD               	addwfc	postdec2,f,c
 15761                           
 15762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 15763  01260A  6A3A               	clrf	_width^0,c
 15764  01260C  6A3B               	clrf	(_width+1)^0,c
 15765  01260E  6A3E               	clrf	_flags^0,c
 15766  012610  6A3F               	clrf	(_flags+1)^0,c
 15767                           
 15768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 15769  012612  683C               	setf	_prec^0,c
 15770  012614  683D               	setf	(_prec+1)^0,c
 15771                           
 15772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 15773                           ;stkvar	_fmt @ sp[(-32)+-4]
 15774  012616  0EDC               	movlw	-36
 15775  012618  006F FF8F FFD9     	movff	plusw1,fsr2l
 15776  01261E  0EDD               	movlw	-35
 15777  012620  006F FF8F FFDA     	movff	plusw1,fsr2h
 15778  012626  006F FF7B FFF6     	movff	postinc2,tblptrl
 15779  01262C  006F FF77 FFF7     	movff	postdec2,tblptrh
 15780  012632                     	if	0	;tblptru may be non-zero
 15781  012632                     	endif
 15782  012632                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15783  012632  0E00               	movlw	low (__mediumconst shr (0+16))
 15784  012634  6EF8               	movwf	tblptru,c
 15785  012636                     	endif
 15786  012636  0008               	tblrd		*
 15787  012638  50F5               	movf	tablat,w,c
 15788  01263A  0A2A               	xorlw	42
 15789  01263C  A4D8               	btfss	status,2,c
 15790  01263E  D031               	goto	l13838
 15791                           
 15792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 15793                           ;stkvar	_fmt @ sp[(-32)+-4]
 15794  012640  0EDC               	movlw	-36
 15795  012642  006F FF8F FFD9     	movff	plusw1,fsr2l
 15796  012648  0EDD               	movlw	-35
 15797  01264A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15798  012650  2ADE               	incf	postinc2,f,c
 15799  012652  0E00               	movlw	0
 15800  012654  22DD               	addwfc	postdec2,f,c
 15801                           
 15802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 15803                           ;stkvar	_ap @ sp[(-32)+-6]
 15804  012656  0EDA               	movlw	-38
 15805  012658  006F FF8F FFD9     	movff	plusw1,fsr2l
 15806  01265E  0EDB               	movlw	-37
 15807  012660  006F FF8F FFDA     	movff	plusw1,fsr2h
 15808  012666  0E02               	movlw	2
 15809  012668  5EDE               	subwf	postinc2,f,c
 15810  01266A  0E00               	movlw	0
 15811  01266C  5ADD               	subwfb	postdec2,f,c
 15812  01266E  006F FF78  F00B    	movff	postinc2,btemp+10
 15813  012674  006F FF74  F00C    	movff	postdec2,btemp+11
 15814  01267A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15815  012680  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15816  012686  006F FF78  F03A    	movff	postinc2,_width
 15817  01268C  006F FF74  F03B    	movff	postdec2,_width+1
 15818                           
 15819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 15820  012692  AE3B               	btfss	(_width+1)^0,7,c
 15821  012694  D066               	goto	u13180
 15822                           
 15823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 15824  012696  803E               	bsf	_flags^0,0,c
 15825                           
 15826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 15827  012698  6C3A               	negf	_width^0,c
 15828  01269A  1E3B               	comf	(_width+1)^0,f,c
 15829  01269C  B0D8               	btfsc	status,0,c
 15830  01269E  2A3B               	incf	(_width+1)^0,f,c
 15831  0126A0  D060               	goto	u13180
 15832  0126A2                     l13838:
 15833                           
 15834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 15835                           ;stkvar	_fmt @ sp[(-32)+-4]
 15836  0126A2  0EDC               	movlw	-36
 15837  0126A4  006F FF8F FFD9     	movff	plusw1,fsr2l
 15838  0126AA  0EDD               	movlw	-35
 15839  0126AC  006F FF8F FFDA     	movff	plusw1,fsr2h
 15840  0126B2  006F FF78  F00B    	movff	postinc2,btemp+10
 15841  0126B8  006F FF74  F00C    	movff	postdec2,btemp+11
 15842  0126BE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15843  0126C4  0060  F033  FFE6   	movff	btemp+11,postinc1
 15844  0126CA  ECFE  F0BF         	call	_atoi	;wreg free
 15845  0126CE  0060  F004  F03A   	movff	btemp,_width
 15846  0126D4  0060  F008  F03B   	movff	btemp+1,_width+1
 15847                           
 15848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 15849  0126DA  D00B               	goto	l13842
 15850  0126DC                     l13840:
 15851                           
 15852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 15853                           ;stkvar	_fmt @ sp[(-32)+-4]
 15854  0126DC  0EDC               	movlw	-36
 15855  0126DE  006F FF8F FFD9     	movff	plusw1,fsr2l
 15856  0126E4  0EDD               	movlw	-35
 15857  0126E6  006F FF8F FFDA     	movff	plusw1,fsr2h
 15858  0126EC  2ADE               	incf	postinc2,f,c
 15859  0126EE  0E00               	movlw	0
 15860  0126F0  22DD               	addwfc	postdec2,f,c
 15861  0126F2                     l13842:
 15862  0126F2  0ED0               	movlw	208
 15863  0126F4  6E0B               	movwf	(btemp+10)^0,c
 15864  0126F6  0EFF               	movlw	255
 15865  0126F8  6E0C               	movwf	(btemp+11)^0,c
 15866                           
 15867                           ;stkvar	_fmt @ sp[(-32)+-4]
 15868  0126FA  0EDC               	movlw	-36
 15869  0126FC  006F FF8F FFD9     	movff	plusw1,fsr2l
 15870  012702  0EDD               	movlw	-35
 15871  012704  006F FF8F FFDA     	movff	plusw1,fsr2h
 15872  01270A  006F FF7B FFF6     	movff	postinc2,tblptrl
 15873  012710  006F FF77 FFF7     	movff	postdec2,tblptrh
 15874  012716                     	if	0	;tblptru may be non-zero
 15875  012716                     	endif
 15876  012716                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15877  012716  0E00               	movlw	low (__mediumconst shr (0+16))
 15878  012718  6EF8               	movwf	tblptru,c
 15879  01271A                     	endif
 15880  01271A  0008               	tblrd		*
 15881  01271C  50F5               	movf	tablat,w,c
 15882  01271E  6E09               	movwf	(btemp+8)^0,c
 15883  012720  6A0A               	clrf	(btemp+9)^0,c
 15884  012722  500B               	movf	(btemp+10)^0,w,c
 15885  012724  2609               	addwf	(btemp+8)^0,f,c
 15886  012726  500C               	movf	(btemp+11)^0,w,c
 15887  012728  220A               	addwfc	(btemp+9)^0,f,c
 15888  01272A  500A               	movf	(btemp+9)^0,w,c
 15889  01272C  E106               	bnz	u13160
 15890  01272E  0E0A               	movlw	10
 15891  012730  5C09               	subwf	(btemp+8)^0,w,c
 15892  012732  B0D8               	btfsc	status,0,c
 15893  012734  D002               	goto	u13160
 15894  012736  0E01               	movlw	1
 15895  012738  D001               	goto	u13170
 15896  01273A                     u13160:
 15897  01273A  0E00               	movlw	0
 15898  01273C                     u13170:
 15899  01273C  6E0B               	movwf	(btemp+10)^0,c
 15900  01273E  6A0C               	clrf	(btemp+11)^0,c
 15901                           
 15902                           ;stkvar	_vfpfcnvrt$6846 @ sp[(-32)+4]
 15903  012740  0EE4               	movlw	-28
 15904  012742  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15905  012748  0EE5               	movlw	-27
 15906  01274A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15907                           
 15908                           ;stkvar	_vfpfcnvrt$6846 @ sp[(-32)+4]
 15909  012750  0EE4               	movlw	-28
 15910  012752  006F FF8C  F001    	movff	plusw1,btemp
 15911  012758  0EE5               	movlw	-27
 15912  01275A  50E3               	movf	plusw1,w,c
 15913  01275C  1001               	iorwf	btemp^0,w,c
 15914  01275E  A4D8               	btfss	status,2,c
 15915  012760  D7BD               	goto	l13840
 15916  012762                     u13180:
 15917                           
 15918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 15919                           ;stkvar	_fmt @ sp[(-32)+-4]
 15920  012762  0EDC               	movlw	-36
 15921  012764  006F FF8F FFD9     	movff	plusw1,fsr2l
 15922  01276A  0EDD               	movlw	-35
 15923  01276C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15924  012772  006F FF7B FFF6     	movff	postinc2,tblptrl
 15925  012778  006F FF77 FFF7     	movff	postdec2,tblptrh
 15926  01277E                     	if	0	;tblptru may be non-zero
 15927  01277E                     	endif
 15928  01277E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15929  01277E  0E00               	movlw	low (__mediumconst shr (0+16))
 15930  012780  6EF8               	movwf	tblptru,c
 15931  012782                     	endif
 15932  012782  0008               	tblrd		*
 15933  012784  50F5               	movf	tablat,w,c
 15934  012786  0A2E               	xorlw	46
 15935  012788  A4D8               	btfss	status,2,c
 15936  01278A  D0AC               	goto	u13230
 15937                           
 15938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 15939  01278C  6A3C               	clrf	_prec^0,c
 15940  01278E  6A3D               	clrf	(_prec+1)^0,c
 15941                           
 15942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 15943                           ;stkvar	_fmt @ sp[(-32)+-4]
 15944  012790  0EDC               	movlw	-36
 15945  012792  006F FF8F FFD9     	movff	plusw1,fsr2l
 15946  012798  0EDD               	movlw	-35
 15947  01279A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15948  0127A0  2ADE               	incf	postinc2,f,c
 15949  0127A2  0E00               	movlw	0
 15950  0127A4  22DD               	addwfc	postdec2,f,c
 15951                           
 15952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 15953                           ;stkvar	_fmt @ sp[(-32)+-4]
 15954  0127A6  0EDC               	movlw	-36
 15955  0127A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 15956  0127AE  0EDD               	movlw	-35
 15957  0127B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 15958  0127B6  006F FF7B FFF6     	movff	postinc2,tblptrl
 15959  0127BC  006F FF77 FFF7     	movff	postdec2,tblptrh
 15960  0127C2                     	if	0	;tblptru may be non-zero
 15961  0127C2                     	endif
 15962  0127C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15963  0127C2  0E00               	movlw	low (__mediumconst shr (0+16))
 15964  0127C4  6EF8               	movwf	tblptru,c
 15965  0127C6                     	endif
 15966  0127C6  0008               	tblrd		*
 15967  0127C8  50F5               	movf	tablat,w,c
 15968  0127CA  0A2A               	xorlw	42
 15969  0127CC  A4D8               	btfss	status,2,c
 15970  0127CE  D02A               	goto	l13860
 15971                           
 15972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 15973                           ;stkvar	_fmt @ sp[(-32)+-4]
 15974  0127D0  0EDC               	movlw	-36
 15975  0127D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 15976  0127D8  0EDD               	movlw	-35
 15977  0127DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 15978  0127E0  2ADE               	incf	postinc2,f,c
 15979  0127E2  0E00               	movlw	0
 15980  0127E4  22DD               	addwfc	postdec2,f,c
 15981                           
 15982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 15983                           ;stkvar	_ap @ sp[(-32)+-6]
 15984  0127E6  0EDA               	movlw	-38
 15985  0127E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 15986  0127EE  0EDB               	movlw	-37
 15987  0127F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 15988  0127F6  0E02               	movlw	2
 15989  0127F8  5EDE               	subwf	postinc2,f,c
 15990  0127FA  0E00               	movlw	0
 15991  0127FC  5ADD               	subwfb	postdec2,f,c
 15992  0127FE  006F FF78  F00B    	movff	postinc2,btemp+10
 15993  012804  006F FF74  F00C    	movff	postdec2,btemp+11
 15994  01280A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15995  012810  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15996  012816  006F FF78  F03C    	movff	postinc2,_prec
 15997  01281C  006F FF74  F03D    	movff	postdec2,_prec+1
 15998                           
 15999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 16000  012822  D060               	goto	u13230
 16001  012824                     l13860:
 16002                           
 16003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 16004                           ;stkvar	_fmt @ sp[(-32)+-4]
 16005  012824  0EDC               	movlw	-36
 16006  012826  006F FF8F FFD9     	movff	plusw1,fsr2l
 16007  01282C  0EDD               	movlw	-35
 16008  01282E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16009  012834  006F FF78  F00B    	movff	postinc2,btemp+10
 16010  01283A  006F FF74  F00C    	movff	postdec2,btemp+11
 16011  012840  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16012  012846  0060  F033  FFE6   	movff	btemp+11,postinc1
 16013  01284C  ECFE  F0BF         	call	_atoi	;wreg free
 16014  012850  0060  F004  F03C   	movff	btemp,_prec
 16015  012856  0060  F008  F03D   	movff	btemp+1,_prec+1
 16016                           
 16017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 16018  01285C  D00B               	goto	l13864
 16019  01285E                     l13862:
 16020                           
 16021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 16022                           ;stkvar	_fmt @ sp[(-32)+-4]
 16023  01285E  0EDC               	movlw	-36
 16024  012860  006F FF8F FFD9     	movff	plusw1,fsr2l
 16025  012866  0EDD               	movlw	-35
 16026  012868  006F FF8F FFDA     	movff	plusw1,fsr2h
 16027  01286E  2ADE               	incf	postinc2,f,c
 16028  012870  0E00               	movlw	0
 16029  012872  22DD               	addwfc	postdec2,f,c
 16030  012874                     l13864:
 16031  012874  0ED0               	movlw	208
 16032  012876  6E0B               	movwf	(btemp+10)^0,c
 16033  012878  0EFF               	movlw	255
 16034  01287A  6E0C               	movwf	(btemp+11)^0,c
 16035                           
 16036                           ;stkvar	_fmt @ sp[(-32)+-4]
 16037  01287C  0EDC               	movlw	-36
 16038  01287E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16039  012884  0EDD               	movlw	-35
 16040  012886  006F FF8F FFDA     	movff	plusw1,fsr2h
 16041  01288C  006F FF7B FFF6     	movff	postinc2,tblptrl
 16042  012892  006F FF77 FFF7     	movff	postdec2,tblptrh
 16043  012898                     	if	0	;tblptru may be non-zero
 16044  012898                     	endif
 16045  012898                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16046  012898  0E00               	movlw	low (__mediumconst shr (0+16))
 16047  01289A  6EF8               	movwf	tblptru,c
 16048  01289C                     	endif
 16049  01289C  0008               	tblrd		*
 16050  01289E  50F5               	movf	tablat,w,c
 16051  0128A0  6E09               	movwf	(btemp+8)^0,c
 16052  0128A2  6A0A               	clrf	(btemp+9)^0,c
 16053  0128A4  500B               	movf	(btemp+10)^0,w,c
 16054  0128A6  2609               	addwf	(btemp+8)^0,f,c
 16055  0128A8  500C               	movf	(btemp+11)^0,w,c
 16056  0128AA  220A               	addwfc	(btemp+9)^0,f,c
 16057  0128AC  500A               	movf	(btemp+9)^0,w,c
 16058  0128AE  E106               	bnz	u13210
 16059  0128B0  0E0A               	movlw	10
 16060  0128B2  5C09               	subwf	(btemp+8)^0,w,c
 16061  0128B4  B0D8               	btfsc	status,0,c
 16062  0128B6  D002               	goto	u13210
 16063  0128B8  0E01               	movlw	1
 16064  0128BA  D001               	goto	u13220
 16065  0128BC                     u13210:
 16066  0128BC  0E00               	movlw	0
 16067  0128BE                     u13220:
 16068  0128BE  6E0B               	movwf	(btemp+10)^0,c
 16069  0128C0  6A0C               	clrf	(btemp+11)^0,c
 16070                           
 16071                           ;stkvar	_vfpfcnvrt$6847 @ sp[(-32)+0]
 16072  0128C2  0EE0               	movlw	-32
 16073  0128C4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16074  0128CA  0EE1               	movlw	-31
 16075  0128CC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16076                           
 16077                           ;stkvar	_vfpfcnvrt$6847 @ sp[(-32)+0]
 16078  0128D2  0EE0               	movlw	-32
 16079  0128D4  006F FF8C  F001    	movff	plusw1,btemp
 16080  0128DA  0EE1               	movlw	-31
 16081  0128DC  50E3               	movf	plusw1,w,c
 16082  0128DE  1001               	iorwf	btemp^0,w,c
 16083  0128E0  A4D8               	btfss	status,2,c
 16084  0128E2  D7BD               	goto	l13862
 16085  0128E4                     u13230:
 16086                           
 16087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 16088                           ;stkvar	_fmt @ sp[(-32)+-4]
 16089  0128E4  0EDC               	movlw	-36
 16090  0128E6  006F FF8F FFD9     	movff	plusw1,fsr2l
 16091  0128EC  0EDD               	movlw	-35
 16092  0128EE  006F FF8F FFDA     	movff	plusw1,fsr2h
 16093  0128F4  006F FF7B FFF6     	movff	postinc2,tblptrl
 16094  0128FA  006F FF77 FFF7     	movff	postdec2,tblptrh
 16095  012900                     	if	0	;tblptru may be non-zero
 16096  012900                     	endif
 16097  012900                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16098  012900  0E00               	movlw	low (__mediumconst shr (0+16))
 16099  012902  6EF8               	movwf	tblptru,c
 16100  012904                     	endif
 16101  012904  0008               	tblrd		*
 16102  012906  50F5               	movf	tablat,w,c
 16103  012908  6EE6               	movwf	postinc1,c
 16104  01290A  0E00               	movlw	0
 16105  01290C  6EE6               	movwf	postinc1,c
 16106  01290E  ECCF  F0DE         	call	_tolower	;wreg free
 16107                           
 16108                           ;stkvar	_ct @ sp[(-32)+26]
 16109  012912  0EFA               	movlw	-6
 16110  012914  0060  F007  FFE3   	movff	btemp,plusw1
 16111                           
 16112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 16113                           ;stkvar	_ct @ sp[(-32)+26]
 16114  01291A  0EFA               	movlw	-6
 16115  01291C  50E3               	movf	plusw1,w,c
 16116  01291E  B4D8               	btfsc	status,2,c
 16117  012920  D05B               	goto	l13880
 16118                           
 16119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 16120                           ;stkvar	_ct @ sp[(-32)+26]
 16121  012922  0EFB               	movlw	251
 16122  012924  24E1               	addwf	fsr1l,w,c
 16123  012926  6ED9               	movwf	fsr2l,c
 16124  012928  0EFF               	movlw	255
 16125  01292A  20E2               	addwfc	fsr1h,w,c
 16126  01292C  6EDA               	movwf	fsr2h,c
 16127                           
 16128                           ;stkvar	_fmt @ sp[(-32)+-4]
 16129  01292E  0EDC               	movlw	-36
 16130  012930  006F FF8F FFE9     	movff	plusw1,fsr0l
 16131  012936  0EDD               	movlw	-35
 16132  012938  006F FF8F FFEA     	movff	plusw1,fsr0h
 16133  01293E  006F FFB8  F00B    	movff	postinc0,btemp+10
 16134  012944  006F FFB4  F00C    	movff	postdec0,btemp+11
 16135  01294A  0E01               	movlw	1
 16136  01294C  260B               	addwf	(btemp+10)^0,f,c
 16137  01294E  0E00               	movlw	0
 16138  012950  220C               	addwfc	(btemp+11)^0,f,c
 16139  012952  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 16140  012958  0060  F033  FFF7   	movff	btemp+11,tblptrh
 16141  01295E                     	if	0	;tblptru may be non-zero
 16142  01295E                     	endif
 16143  01295E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16144  01295E  0E00               	movlw	low (__mediumconst shr (0+16))
 16145  012960  6EF8               	movwf	tblptru,c
 16146  012962                     	endif
 16147  012962  0008               	tblrd		*
 16148  012964  50F5               	movf	tablat,w,c
 16149  012966  6EE6               	movwf	postinc1,c
 16150  012968  0E00               	movlw	0
 16151  01296A  6EE6               	movwf	postinc1,c
 16152  01296C  ECCF  F0DE         	call	_tolower	;wreg free
 16153  012970  5001               	movf	btemp^0,w,c
 16154  012972  6EDF               	movwf	indf2,c
 16155                           
 16156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 16157                           ;stkvar	_ct @ sp[(-32)+26]
 16158  012974  0EFB               	movlw	251
 16159  012976  24E1               	addwf	fsr1l,w,c
 16160  012978  6ED9               	movwf	fsr2l,c
 16161  01297A  0EFF               	movlw	255
 16162  01297C  20E2               	addwfc	fsr1h,w,c
 16163  01297E  6EDA               	movwf	fsr2h,c
 16164  012980  50DF               	movf	indf2,w,c
 16165  012982  B4D8               	btfsc	status,2,c
 16166  012984  D029               	goto	l13880
 16167                           
 16168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 16169                           ;stkvar	_ct @ sp[(-32)+26]
 16170  012986  0EFC               	movlw	252
 16171  012988  24E1               	addwf	fsr1l,w,c
 16172  01298A  6ED9               	movwf	fsr2l,c
 16173  01298C  0EFF               	movlw	255
 16174  01298E  20E2               	addwfc	fsr1h,w,c
 16175  012990  6EDA               	movwf	fsr2h,c
 16176                           
 16177                           ;stkvar	_fmt @ sp[(-32)+-4]
 16178  012992  0EDC               	movlw	-36
 16179  012994  006F FF8F FFE9     	movff	plusw1,fsr0l
 16180  01299A  0EDD               	movlw	-35
 16181  01299C  006F FF8F FFEA     	movff	plusw1,fsr0h
 16182  0129A2  006F FFB8  F00B    	movff	postinc0,btemp+10
 16183  0129A8  006F FFB4  F00C    	movff	postdec0,btemp+11
 16184  0129AE  0E02               	movlw	2
 16185  0129B0  260B               	addwf	(btemp+10)^0,f,c
 16186  0129B2  0E00               	movlw	0
 16187  0129B4  220C               	addwfc	(btemp+11)^0,f,c
 16188  0129B6  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 16189  0129BC  0060  F033  FFF7   	movff	btemp+11,tblptrh
 16190  0129C2                     	if	0	;tblptru may be non-zero
 16191  0129C2                     	endif
 16192  0129C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16193  0129C2  0E00               	movlw	low (__mediumconst shr (0+16))
 16194  0129C4  6EF8               	movwf	tblptru,c
 16195  0129C6                     	endif
 16196  0129C6  0008               	tblrd		*
 16197  0129C8  50F5               	movf	tablat,w,c
 16198  0129CA  6EE6               	movwf	postinc1,c
 16199  0129CC  0E00               	movlw	0
 16200  0129CE  6EE6               	movwf	postinc1,c
 16201  0129D0  ECCF  F0DE         	call	_tolower	;wreg free
 16202  0129D4  5001               	movf	btemp^0,w,c
 16203  0129D6  6EDF               	movwf	indf2,c
 16204  0129D8                     l13880:
 16205                           
 16206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 16207                           ;stkvar	_fmt @ sp[(-32)+-4]
 16208  0129D8  0EDC               	movlw	-36
 16209  0129DA  006F FF8F FFD9     	movff	plusw1,fsr2l
 16210  0129E0  0EDD               	movlw	-35
 16211  0129E2  006F FF8F FFDA     	movff	plusw1,fsr2h
 16212  0129E8  006F FF7B FFF6     	movff	postinc2,tblptrl
 16213  0129EE  006F FF77 FFF7     	movff	postdec2,tblptrh
 16214  0129F4                     	if	0	;tblptru may be non-zero
 16215  0129F4                     	endif
 16216  0129F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16217  0129F4  0E00               	movlw	low (__mediumconst shr (0+16))
 16218  0129F6  6EF8               	movwf	tblptru,c
 16219  0129F8                     	endif
 16220  0129F8  0008               	tblrd		*
 16221  0129FA  50F5               	movf	tablat,w,c
 16222  0129FC  0A63               	xorlw	99
 16223  0129FE  A4D8               	btfss	status,2,c
 16224  012A00  D037               	goto	l13890
 16225                           
 16226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 16227                           ;stkvar	_fmt @ sp[(-32)+-4]
 16228  012A02  0EDC               	movlw	-36
 16229  012A04  006F FF8F FFD9     	movff	plusw1,fsr2l
 16230  012A0A  0EDD               	movlw	-35
 16231  012A0C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16232  012A12  2ADE               	incf	postinc2,f,c
 16233  012A14  0E00               	movlw	0
 16234  012A16  22DD               	addwfc	postdec2,f,c
 16235                           
 16236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 16237                           ;stkvar	_ap @ sp[(-32)+-6]
 16238  012A18  0EDA               	movlw	-38
 16239  012A1A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16240  012A20  0EDB               	movlw	-37
 16241  012A22  006F FF8F FFDA     	movff	plusw1,fsr2h
 16242  012A28  0E02               	movlw	2
 16243  012A2A  5EDE               	subwf	postinc2,f,c
 16244  012A2C  0E00               	movlw	0
 16245  012A2E  5ADD               	subwfb	postdec2,f,c
 16246  012A30  006F FF78  F00B    	movff	postinc2,btemp+10
 16247  012A36  006F FF74  F00C    	movff	postdec2,btemp+11
 16248  012A3C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16249  012A42  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16250  012A48  50DF               	movf	indf2,w,c
 16251  012A4A  6E0C               	movwf	(btemp+11)^0,c
 16252                           
 16253                           ;stkvar	_c @ sp[(-32)+31]
 16254  012A4C  0EFF               	movlw	-1
 16255  012A4E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16256                           
 16257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 16258                           ;stkvar	_c @ sp[(-32)+31]
 16259  012A54  0EFF               	movlw	-1
 16260  012A56  50E3               	movf	plusw1,w,c
 16261  012A58  6EE6               	movwf	postinc1,c
 16262                           
 16263                           ;stkvar	_fp @ sp[(-33)+-2]
 16264  012A5A  0EDD               	movlw	-35
 16265  012A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16266  012A62  006F FF8F FFE6     	movff	plusw1,postinc1
 16267  012A68  EC49  F0DE         	call	_ctoa	;wreg free
 16268  012A6C  EFB1  F09A         	goto	l2646
 16269  012A70                     l13890:
 16270                           
 16271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 16272                           ;stkvar	_fmt @ sp[(-32)+-4]
 16273  012A70  0EDC               	movlw	-36
 16274  012A72  006F FF8F FFD9     	movff	plusw1,fsr2l
 16275  012A78  0EDD               	movlw	-35
 16276  012A7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16277  012A80  006F FF7B FFF6     	movff	postinc2,tblptrl
 16278  012A86  006F FF77 FFF7     	movff	postdec2,tblptrh
 16279  012A8C                     	if	0	;tblptru may be non-zero
 16280  012A8C                     	endif
 16281  012A8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16282  012A8C  0E00               	movlw	low (__mediumconst shr (0+16))
 16283  012A8E  6EF8               	movwf	tblptru,c
 16284  012A90                     	endif
 16285  012A90  0008               	tblrd		*
 16286  012A92  50F5               	movf	tablat,w,c
 16287  012A94  0A64               	xorlw	100
 16288  012A96  B4D8               	btfsc	status,2,c
 16289  012A98  D015               	goto	u13280
 16290                           
 16291                           ;stkvar	_fmt @ sp[(-32)+-4]
 16292  012A9A  0EDC               	movlw	-36
 16293  012A9C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16294  012AA2  0EDD               	movlw	-35
 16295  012AA4  006F FF8F FFDA     	movff	plusw1,fsr2h
 16296  012AAA  006F FF7B FFF6     	movff	postinc2,tblptrl
 16297  012AB0  006F FF77 FFF7     	movff	postdec2,tblptrh
 16298  012AB6                     	if	0	;tblptru may be non-zero
 16299  012AB6                     	endif
 16300  012AB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16301  012AB6  0E00               	movlw	low (__mediumconst shr (0+16))
 16302  012AB8  6EF8               	movwf	tblptru,c
 16303  012ABA                     	endif
 16304  012ABA  0008               	tblrd		*
 16305  012ABC  50F5               	movf	tablat,w,c
 16306  012ABE  0A69               	xorlw	105
 16307  012AC0  A4D8               	btfss	status,2,c
 16308  012AC2  D076               	goto	l13902
 16309  012AC4                     u13280:
 16310                           
 16311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 16312                           ;stkvar	_fmt @ sp[(-32)+-4]
 16313  012AC4  0EDC               	movlw	-36
 16314  012AC6  006F FF8F FFD9     	movff	plusw1,fsr2l
 16315  012ACC  0EDD               	movlw	-35
 16316  012ACE  006F FF8F FFDA     	movff	plusw1,fsr2h
 16317  012AD4  2ADE               	incf	postinc2,f,c
 16318  012AD6  0E00               	movlw	0
 16319  012AD8  22DD               	addwfc	postdec2,f,c
 16320                           
 16321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 16322                           ;stkvar	_ap @ sp[(-32)+-6]
 16323  012ADA  0EDA               	movlw	-38
 16324  012ADC  006F FF8F FFD9     	movff	plusw1,fsr2l
 16325  012AE2  0EDB               	movlw	-37
 16326  012AE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 16327  012AEA  0E02               	movlw	2
 16328  012AEC  5EDE               	subwf	postinc2,f,c
 16329  012AEE  0E00               	movlw	0
 16330  012AF0  5ADD               	subwfb	postdec2,f,c
 16331  012AF2  006F FF78  F00B    	movff	postinc2,btemp+10
 16332  012AF8  006F FF74  F00C    	movff	postdec2,btemp+11
 16333  012AFE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16334  012B04  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16335  012B0A  006F FF78  F00B    	movff	postinc2,btemp+10
 16336  012B10  006F FF74  F00C    	movff	postdec2,btemp+11
 16337                           
 16338                           ;stkvar	_ll @ sp[(-32)+14]
 16339  012B16  0EEE               	movlw	-18
 16340  012B18  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16341  012B1E  0EEF               	movlw	-17
 16342  012B20  0060  F033  FFE3   	movff	btemp+11,plusw1
 16343  012B26  6A01               	clrf	btemp^0,c
 16344  012B28  BEE3               	btfsc	plusw1,7,c
 16345  012B2A  6801               	setf	btemp^0,c
 16346  012B2C  0EF0               	movlw	-16
 16347  012B2E  0060  F007  FFE3   	movff	btemp,plusw1
 16348  012B34  0EF1               	movlw	-15
 16349  012B36  0060  F007  FFE3   	movff	btemp,plusw1
 16350  012B3C  0EF2               	movlw	-14
 16351  012B3E  0060  F007  FFE3   	movff	btemp,plusw1
 16352  012B44  0EF3               	movlw	-13
 16353  012B46  0060  F007  FFE3   	movff	btemp,plusw1
 16354  012B4C  0EF4               	movlw	-12
 16355  012B4E  0060  F007  FFE3   	movff	btemp,plusw1
 16356  012B54  0EF5               	movlw	-11
 16357  012B56  0060  F007  FFE3   	movff	btemp,plusw1
 16358  012B5C                     l13898:
 16359                           
 16360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 16361                           ;stkvar	_ll @ sp[(-32)+14]
 16362  012B5C  50E1               	movf	fsr1l,w,c
 16363  012B5E  0FEE               	addlw	-18
 16364  012B60  6ED9               	movwf	fsr2l,c
 16365  012B62  50E2               	movf	fsr1h,w,c
 16366  012B64  6EDA               	movwf	fsr2h,c
 16367  012B66  0EFF               	movlw	255
 16368  012B68  22DA               	addwfc	fsr2h,f,c
 16369  012B6A  006F FF7B FFE6     	movff	postinc2,postinc1
 16370  012B70  006F FF7B FFE6     	movff	postinc2,postinc1
 16371  012B76  006F FF7B FFE6     	movff	postinc2,postinc1
 16372  012B7C  006F FF7B FFE6     	movff	postinc2,postinc1
 16373  012B82  006F FF7B FFE6     	movff	postinc2,postinc1
 16374  012B88  006F FF7B FFE6     	movff	postinc2,postinc1
 16375  012B8E  006F FF7B FFE6     	movff	postinc2,postinc1
 16376  012B94  006F FF7B FFE6     	movff	postinc2,postinc1
 16377                           
 16378                           ;stkvar	_fp @ sp[(-40)+-2]
 16379  012B9A  0ED6               	movlw	-42
 16380  012B9C  006F FF8F FFE6     	movff	plusw1,postinc1
 16381  012BA2  006F FF8F FFE6     	movff	plusw1,postinc1
 16382  012BA8  ECFB  F0AC         	call	_dtoa	;wreg free
 16383  012BAC  EFB1  F09A         	goto	l2646
 16384  012BB0                     l13902:
 16385                           
 16386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 16387  012BB0  0E02               	movlw	2
 16388  012BB2  6EE6               	movwf	postinc1,c
 16389  012BB4  0E00               	movlw	0
 16390  012BB6  6EE6               	movwf	postinc1,c
 16391  012BB8  0EE9               	movlw	low STR_92
 16392  012BBA  6EE6               	movwf	postinc1,c
 16393  012BBC  0EFF               	movlw	high STR_92
 16394  012BBE  6EE6               	movwf	postinc1,c
 16395                           
 16396                           ;stkvar	_fmt @ sp[(-36)+-4]
 16397  012BC0  0ED8               	movlw	-40
 16398  012BC2  006F FF8F FFD9     	movff	plusw1,fsr2l
 16399  012BC8  0ED9               	movlw	-39
 16400  012BCA  006F FF8F FFDA     	movff	plusw1,fsr2h
 16401  012BD0  006F FF78  F00B    	movff	postinc2,btemp+10
 16402  012BD6  006F FF74  F00C    	movff	postdec2,btemp+11
 16403  012BDC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16404  012BE2  0060  F033  FFE6   	movff	btemp+11,postinc1
 16405  012BE8  EC8E  F0C4         	call	_strncmp	;wreg free
 16406  012BEC  5001               	movf	btemp^0,w,c
 16407  012BEE  1002               	iorwf	(btemp+1)^0,w,c
 16408  012BF0  B4D8               	btfsc	status,2,c
 16409  012BF2  D022               	goto	u13300
 16410  012BF4  0E02               	movlw	2
 16411  012BF6  6EE6               	movwf	postinc1,c
 16412  012BF8  0E00               	movlw	0
 16413  012BFA  6EE6               	movwf	postinc1,c
 16414  012BFC  0EEF               	movlw	low STR_96
 16415  012BFE  6EE6               	movwf	postinc1,c
 16416  012C00  0EFF               	movlw	high STR_96
 16417  012C02  6EE6               	movwf	postinc1,c
 16418                           
 16419                           ;stkvar	_fmt @ sp[(-36)+-4]
 16420  012C04  0ED8               	movlw	-40
 16421  012C06  006F FF8F FFD9     	movff	plusw1,fsr2l
 16422  012C0C  0ED9               	movlw	-39
 16423  012C0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16424  012C14  006F FF78  F00B    	movff	postinc2,btemp+10
 16425  012C1A  006F FF74  F00C    	movff	postdec2,btemp+11
 16426  012C20  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16427  012C26  0060  F033  FFE6   	movff	btemp+11,postinc1
 16428  012C2C  EC8E  F0C4         	call	_strncmp	;wreg free
 16429  012C30  5001               	movf	btemp^0,w,c
 16430  012C32  1002               	iorwf	(btemp+1)^0,w,c
 16431  012C34  A4D8               	btfss	status,2,c
 16432  012C36  D069               	goto	l13914
 16433  012C38                     u13300:
 16434                           
 16435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 16436                           ;stkvar	_fmt @ sp[(-32)+-4]
 16437  012C38  0EDC               	movlw	-36
 16438  012C3A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16439  012C40  0EDD               	movlw	-35
 16440  012C42  006F FF8F FFDA     	movff	plusw1,fsr2h
 16441  012C48  0E02               	movlw	2
 16442  012C4A  26DE               	addwf	postinc2,f,c
 16443  012C4C  0E00               	movlw	0
 16444  012C4E  22DD               	addwfc	postdec2,f,c
 16445                           
 16446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 16447                           ;stkvar	_ap @ sp[(-32)+-6]
 16448  012C50  0EDA               	movlw	-38
 16449  012C52  006F FF8F FFD9     	movff	plusw1,fsr2l
 16450  012C58  0EDB               	movlw	-37
 16451  012C5A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16452  012C60  0E04               	movlw	4
 16453  012C62  5EDE               	subwf	postinc2,f,c
 16454  012C64  0E00               	movlw	0
 16455  012C66  5ADD               	subwfb	postdec2,f,c
 16456  012C68  006F FF78  F00B    	movff	postinc2,btemp+10
 16457  012C6E  006F FF74  F00C    	movff	postdec2,btemp+11
 16458  012C74  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16459  012C7A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16460  012C80  006F FF78  F009    	movff	postinc2,btemp+8
 16461  012C86  006F FF78  F00A    	movff	postinc2,btemp+9
 16462  012C8C  006F FF78  F00B    	movff	postinc2,btemp+10
 16463  012C92  006F FF78  F00C    	movff	postinc2,btemp+11
 16464  012C98  0060  F024  F011   	movff	btemp+8,btemp+16
 16465  012C9E  0060  F028  F012   	movff	btemp+9,btemp+17
 16466  012CA4  0060  F02C  F013   	movff	btemp+10,btemp+18
 16467  012CAA  0060  F030  F014   	movff	btemp+11,btemp+19
 16468  012CB0  6A15               	clrf	(btemp+20)^0,c
 16469  012CB2  BE14               	btfsc	(btemp+19)^0,7,c
 16470  012CB4  6815               	setf	(btemp+20)^0,c
 16471  012CB6  0060  F054  F016   	movff	btemp+20,btemp+21
 16472  012CBC  0060  F054  F017   	movff	btemp+20,btemp+22
 16473  012CC2  0060  F054  F018   	movff	btemp+20,btemp+23
 16474                           
 16475                           ;stkvar	_ll @ sp[(-32)+14]
 16476  012CC8  0EEE               	movlw	-18
 16477  012CCA  0060  F047  FFE3   	movff	btemp+16,plusw1
 16478  012CD0  0EEF               	movlw	-17
 16479  012CD2  0060  F04B  FFE3   	movff	btemp+17,plusw1
 16480  012CD8  0EF0               	movlw	-16
 16481  012CDA  0060  F04F  FFE3   	movff	btemp+18,plusw1
 16482  012CE0  0EF1               	movlw	-15
 16483  012CE2  0060  F053  FFE3   	movff	btemp+19,plusw1
 16484  012CE8  0EF2               	movlw	-14
 16485  012CEA  0060  F057  FFE3   	movff	btemp+20,plusw1
 16486  012CF0  0EF3               	movlw	-13
 16487  012CF2  0060  F05B  FFE3   	movff	btemp+21,plusw1
 16488  012CF8  0EF4               	movlw	-12
 16489  012CFA  0060  F05F  FFE3   	movff	btemp+22,plusw1
 16490  012D00  0EF5               	movlw	-11
 16491  012D02  0060  F063  FFE3   	movff	btemp+23,plusw1
 16492  012D08  D729               	goto	l13898
 16493  012D0A                     l13914:
 16494                           
 16495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 16496                           ;stkvar	_ct @ sp[(-32)+26]
 16497  012D0A  0EFA               	movlw	-6
 16498  012D0C  006F FF8C  F001    	movff	plusw1,btemp
 16499  012D12  0E66               	movlw	102
 16500  012D14  1801               	xorwf	btemp^0,w,c
 16501  012D16  A4D8               	btfss	status,2,c
 16502  012D18  D06E               	goto	l13926
 16503                           
 16504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 16505                           ;stkvar	_fmt @ sp[(-32)+-4]
 16506  012D1A  0EDC               	movlw	-36
 16507  012D1C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16508  012D22  0EDD               	movlw	-35
 16509  012D24  006F FF8F FFDA     	movff	plusw1,fsr2h
 16510  012D2A  006F FF7B FFF6     	movff	postinc2,tblptrl
 16511  012D30  006F FF77 FFF7     	movff	postdec2,tblptrh
 16512  012D36                     	if	0	;tblptru may be non-zero
 16513  012D36                     	endif
 16514  012D36                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16515  012D36  0E00               	movlw	low (__mediumconst shr (0+16))
 16516  012D38  6EF8               	movwf	tblptru,c
 16517  012D3A                     	endif
 16518                           
 16519                           ;stkvar	_c @ sp[(-32)+31]
 16520  012D3A  0008               	tblrd		*
 16521  012D3C  0EFF               	movlw	-1
 16522  012D3E  006F FFD7 FFE3     	movff	tablat,plusw1
 16523                           
 16524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 16525                           ;stkvar	_fmt @ sp[(-32)+-4]
 16526  012D44  0EDC               	movlw	-36
 16527  012D46  006F FF8F FFD9     	movff	plusw1,fsr2l
 16528  012D4C  0EDD               	movlw	-35
 16529  012D4E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16530  012D54  2ADE               	incf	postinc2,f,c
 16531  012D56  0E00               	movlw	0
 16532  012D58  22DD               	addwfc	postdec2,f,c
 16533                           
 16534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 16535                           ;stkvar	_ap @ sp[(-32)+-6]
 16536  012D5A  0EDA               	movlw	-38
 16537  012D5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16538  012D62  0EDB               	movlw	-37
 16539  012D64  006F FF8F FFDA     	movff	plusw1,fsr2h
 16540  012D6A  0E04               	movlw	4
 16541  012D6C  5EDE               	subwf	postinc2,f,c
 16542  012D6E  0E00               	movlw	0
 16543  012D70  5ADD               	subwfb	postdec2,f,c
 16544  012D72  006F FF78  F00B    	movff	postinc2,btemp+10
 16545  012D78  006F FF74  F00C    	movff	postdec2,btemp+11
 16546  012D7E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16547  012D84  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16548  012D8A  006F FF78  F009    	movff	postinc2,btemp+8
 16549  012D90  006F FF78  F00A    	movff	postinc2,btemp+9
 16550  012D96  006F FF78  F00B    	movff	postinc2,btemp+10
 16551  012D9C  006F FF78  F00C    	movff	postinc2,btemp+11
 16552                           
 16553                           ;stkvar	_f @ sp[(-32)+22]
 16554  012DA2  0EF6               	movlw	-10
 16555  012DA4  0060  F027  FFE3   	movff	btemp+8,plusw1
 16556  012DAA  0EF7               	movlw	-9
 16557  012DAC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16558  012DB2  0EF8               	movlw	-8
 16559  012DB4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16560  012DBA  0EF9               	movlw	-7
 16561  012DBC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16562  012DC2                     l13922:
 16563                           
 16564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 16565                           ;stkvar	_c @ sp[(-32)+31]
 16566  012DC2  0EFF               	movlw	-1
 16567  012DC4  50E3               	movf	plusw1,w,c
 16568  012DC6  6EE6               	movwf	postinc1,c
 16569                           
 16570                           ;stkvar	_f @ sp[(-33)+22]
 16571  012DC8  0EF5               	movlw	-11
 16572  012DCA  006F FF8F FFE6     	movff	plusw1,postinc1
 16573  012DD0  006F FF8F FFE6     	movff	plusw1,postinc1
 16574  012DD6  006F FF8F FFE6     	movff	plusw1,postinc1
 16575  012DDC  006F FF8F FFE6     	movff	plusw1,postinc1
 16576                           
 16577                           ;stkvar	_fp @ sp[(-37)+-2]
 16578  012DE2  0ED9               	movlw	-39
 16579  012DE4  006F FF8F FFE6     	movff	plusw1,postinc1
 16580  012DEA  006F FF8F FFE6     	movff	plusw1,postinc1
 16581  012DF0  ECBE  F089         	call	_efgtoa	;wreg free
 16582  012DF4  D3B6               	goto	l2646
 16583  012DF6                     l13926:
 16584                           
 16585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 16586  012DF6  0E02               	movlw	2
 16587  012DF8  6EE6               	movwf	postinc1,c
 16588  012DFA  0E00               	movlw	0
 16589  012DFC  6EE6               	movwf	postinc1,c
 16590  012DFE  0EEC               	movlw	low STR_101
 16591  012E00  6EE6               	movwf	postinc1,c
 16592  012E02  0EFF               	movlw	high STR_101
 16593  012E04  6EE6               	movwf	postinc1,c
 16594                           
 16595                           ;stkvar	_ct @ sp[(-36)+26]
 16596  012E06  0EF6               	movlw	246
 16597  012E08  24E1               	addwf	fsr1l,w,c
 16598  012E0A  6E01               	movwf	btemp^0,c
 16599  012E0C  0EFF               	movlw	255
 16600  012E0E  20E2               	addwfc	fsr1h,w,c
 16601  012E10  6E02               	movwf	(btemp+1)^0,c
 16602  012E12  0060  F007  FFE6   	movff	btemp,postinc1
 16603  012E18  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16604  012E1E  EC8E  F0C4         	call	_strncmp	;wreg free
 16605  012E22  5001               	movf	btemp^0,w,c
 16606  012E24  1002               	iorwf	(btemp+1)^0,w,c
 16607  012E26  A4D8               	btfss	status,2,c
 16608  012E28  D096               	goto	l13946
 16609                           
 16610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 16611                           ;stkvar	_fmt @ sp[(-32)+-4]
 16612  012E2A  0EDC               	movlw	-36
 16613  012E2C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16614  012E32  0EDD               	movlw	-35
 16615  012E34  006F FF8F FFDA     	movff	plusw1,fsr2h
 16616  012E3A  006F FF78  F00B    	movff	postinc2,btemp+10
 16617  012E40  006F FF74  F00C    	movff	postdec2,btemp+11
 16618  012E46  0E01               	movlw	1
 16619  012E48  260B               	addwf	(btemp+10)^0,f,c
 16620  012E4A  0E00               	movlw	0
 16621  012E4C  220C               	addwfc	(btemp+11)^0,f,c
 16622  012E4E  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 16623  012E54  0060  F033  FFF7   	movff	btemp+11,tblptrh
 16624  012E5A                     	if	0	;tblptru may be non-zero
 16625  012E5A                     	endif
 16626  012E5A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16627  012E5A  0E00               	movlw	low (__mediumconst shr (0+16))
 16628  012E5C  6EF8               	movwf	tblptru,c
 16629  012E5E                     	endif
 16630                           
 16631                           ;stkvar	_c @ sp[(-32)+31]
 16632  012E5E  0008               	tblrd		*
 16633  012E60  0EFF               	movlw	-1
 16634  012E62  006F FFD7 FFE3     	movff	tablat,plusw1
 16635  012E68  0EBF               	movlw	191
 16636  012E6A  6E0B               	movwf	(btemp+10)^0,c
 16637  012E6C  0EFF               	movlw	255
 16638  012E6E  6E0C               	movwf	(btemp+11)^0,c
 16639                           
 16640                           ;stkvar	_fmt @ sp[(-32)+-4]
 16641  012E70  0EDC               	movlw	-36
 16642  012E72  006F FF8F FFD9     	movff	plusw1,fsr2l
 16643  012E78  0EDD               	movlw	-35
 16644  012E7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16645  012E80  006F FF7B FFF6     	movff	postinc2,tblptrl
 16646  012E86  006F FF77 FFF7     	movff	postdec2,tblptrh
 16647  012E8C                     	if	0	;tblptru may be non-zero
 16648  012E8C                     	endif
 16649  012E8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16650  012E8C  0E00               	movlw	low (__mediumconst shr (0+16))
 16651  012E8E  6EF8               	movwf	tblptru,c
 16652  012E90                     	endif
 16653  012E90  0008               	tblrd		*
 16654  012E92  50F5               	movf	tablat,w,c
 16655  012E94  6E09               	movwf	(btemp+8)^0,c
 16656  012E96  6A0A               	clrf	(btemp+9)^0,c
 16657  012E98  500B               	movf	(btemp+10)^0,w,c
 16658  012E9A  2609               	addwf	(btemp+8)^0,f,c
 16659  012E9C  500C               	movf	(btemp+11)^0,w,c
 16660  012E9E  220A               	addwfc	(btemp+9)^0,f,c
 16661  012EA0  500A               	movf	(btemp+9)^0,w,c
 16662  012EA2  E106               	bnz	u13330
 16663  012EA4  0E1A               	movlw	26
 16664  012EA6  5C09               	subwf	(btemp+8)^0,w,c
 16665  012EA8  B0D8               	btfsc	status,0,c
 16666  012EAA  D002               	goto	u13330
 16667  012EAC  0E01               	movlw	1
 16668  012EAE  D001               	goto	u13340
 16669  012EB0                     u13330:
 16670  012EB0  0E00               	movlw	0
 16671  012EB2                     u13340:
 16672  012EB2  6E0B               	movwf	(btemp+10)^0,c
 16673  012EB4  6A0C               	clrf	(btemp+11)^0,c
 16674                           
 16675                           ;stkvar	_vfpfcnvrt$6858 @ sp[(-32)+2]
 16676  012EB6  0EE2               	movlw	-30
 16677  012EB8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16678  012EBE  0EE3               	movlw	-29
 16679  012EC0  0060  F033  FFE3   	movff	btemp+11,plusw1
 16680                           
 16681                           ;stkvar	_vfpfcnvrt$6858 @ sp[(-32)+2]
 16682  012EC6  0EE2               	movlw	-30
 16683  012EC8  006F FF8C  F001    	movff	plusw1,btemp
 16684  012ECE  0EE3               	movlw	-29
 16685  012ED0  50E3               	movf	plusw1,w,c
 16686  012ED2  1001               	iorwf	btemp^0,w,c
 16687                           
 16688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 16689                           ;stkvar	_ap @ sp[(-32)+-6]
 16690                           
 16691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 16692                           
 16693                           ;stkvar	_f @ sp[(-32)+22]
 16694                           
 16695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 16696                           ;stkvar	_ap @ sp[(-32)+-6]
 16697  012ED4  0EDA               	movlw	-38
 16698  012ED6  006F FF8F FFD9     	movff	plusw1,fsr2l
 16699  012EDC  0EDB               	movlw	-37
 16700  012EDE  006F FF8F FFDA     	movff	plusw1,fsr2h
 16701  012EE4  0E04               	movlw	4
 16702  012EE6  5EDE               	subwf	postinc2,f,c
 16703  012EE8  0E00               	movlw	0
 16704  012EEA  5ADD               	subwfb	postdec2,f,c
 16705  012EEC  006F FF78  F00B    	movff	postinc2,btemp+10
 16706  012EF2  006F FF74  F00C    	movff	postdec2,btemp+11
 16707  012EF8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16708  012EFE  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16709  012F04  006F FF78  F009    	movff	postinc2,btemp+8
 16710  012F0A  006F FF78  F00A    	movff	postinc2,btemp+9
 16711  012F10  006F FF78  F00B    	movff	postinc2,btemp+10
 16712  012F16  006F FF78  F00C    	movff	postinc2,btemp+11
 16713                           
 16714                           ;stkvar	_f @ sp[(-32)+22]
 16715  012F1C  0EF6               	movlw	-10
 16716  012F1E  0060  F027  FFE3   	movff	btemp+8,plusw1
 16717  012F24  0EF7               	movlw	-9
 16718  012F26  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16719  012F2C  0EF8               	movlw	-8
 16720  012F2E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16721  012F34  0EF9               	movlw	-7
 16722  012F36  0060  F033  FFE3   	movff	btemp+11,plusw1
 16723                           
 16724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 16725                           ;stkvar	_fmt @ sp[(-32)+-4]
 16726  012F3C  0EDC               	movlw	-36
 16727  012F3E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16728  012F44  0EDD               	movlw	-35
 16729  012F46  006F FF8F FFDA     	movff	plusw1,fsr2h
 16730  012F4C  0E02               	movlw	2
 16731  012F4E  26DE               	addwf	postinc2,f,c
 16732  012F50  0E00               	movlw	0
 16733  012F52  22DD               	addwfc	postdec2,f,c
 16734  012F54  D736               	goto	l13922
 16735  012F56                     l13946:
 16736                           
 16737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 16738                           ;stkvar	_fmt @ sp[(-32)+-4]
 16739  012F56  0EDC               	movlw	-36
 16740  012F58  006F FF8F FFD9     	movff	plusw1,fsr2l
 16741  012F5E  0EDD               	movlw	-35
 16742  012F60  006F FF8F FFDA     	movff	plusw1,fsr2h
 16743  012F66  006F FF7B FFF6     	movff	postinc2,tblptrl
 16744  012F6C  006F FF77 FFF7     	movff	postdec2,tblptrh
 16745  012F72                     	if	0	;tblptru may be non-zero
 16746  012F72                     	endif
 16747  012F72                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16748  012F72  0E00               	movlw	low (__mediumconst shr (0+16))
 16749  012F74  6EF8               	movwf	tblptru,c
 16750  012F76                     	endif
 16751  012F76  0008               	tblrd		*
 16752  012F78  50F5               	movf	tablat,w,c
 16753  012F7A  0A73               	xorlw	115
 16754  012F7C  A4D8               	btfss	status,2,c
 16755  012F7E  D042               	goto	l13956
 16756                           
 16757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 16758                           ;stkvar	_fmt @ sp[(-32)+-4]
 16759  012F80  0EDC               	movlw	-36
 16760  012F82  006F FF8F FFD9     	movff	plusw1,fsr2l
 16761  012F88  0EDD               	movlw	-35
 16762  012F8A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16763  012F90  2ADE               	incf	postinc2,f,c
 16764  012F92  0E00               	movlw	0
 16765  012F94  22DD               	addwfc	postdec2,f,c
 16766                           
 16767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 16768                           ;stkvar	_ap @ sp[(-32)+-6]
 16769  012F96  0EDA               	movlw	-38
 16770  012F98  006F FF8F FFD9     	movff	plusw1,fsr2l
 16771  012F9E  0EDB               	movlw	-37
 16772  012FA0  006F FF8F FFDA     	movff	plusw1,fsr2h
 16773  012FA6  0E02               	movlw	2
 16774  012FA8  5EDE               	subwf	postinc2,f,c
 16775  012FAA  0E00               	movlw	0
 16776  012FAC  5ADD               	subwfb	postdec2,f,c
 16777  012FAE  006F FF78  F00B    	movff	postinc2,btemp+10
 16778  012FB4  006F FF74  F00C    	movff	postdec2,btemp+11
 16779  012FBA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16780  012FC0  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16781  012FC6  006F FF78  F00B    	movff	postinc2,btemp+10
 16782  012FCC  006F FF74  F00C    	movff	postdec2,btemp+11
 16783                           
 16784                           ;stkvar	_cp @ sp[(-32)+29]
 16785  012FD2  0EFE               	movlw	-2
 16786  012FD4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16787  012FDA  0EFD               	movlw	-3
 16788  012FDC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16789                           
 16790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 16791                           ;stkvar	_cp @ sp[(-32)+29]
 16792  012FE2  0EFD               	movlw	-3
 16793  012FE4  006F FF8F FFE6     	movff	plusw1,postinc1
 16794  012FEA  006F FF8F FFE6     	movff	plusw1,postinc1
 16795                           
 16796                           ;stkvar	_fp @ sp[(-34)+-2]
 16797  012FF0  0EDC               	movlw	-36
 16798  012FF2  006F FF8F FFE6     	movff	plusw1,postinc1
 16799  012FF8  006F FF8F FFE6     	movff	plusw1,postinc1
 16800  012FFE  EC5F  F0BD         	call	_stoa	;wreg free
 16801  013002  D2AF               	goto	l2646
 16802  013004                     l13956:
 16803                           
 16804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 16805                           ;stkvar	_fmt @ sp[(-32)+-4]
 16806  013004  0EDC               	movlw	-36
 16807  013006  006F FF8F FFD9     	movff	plusw1,fsr2l
 16808  01300C  0EDD               	movlw	-35
 16809  01300E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16810  013014  006F FF7B FFF6     	movff	postinc2,tblptrl
 16811  01301A  006F FF77 FFF7     	movff	postdec2,tblptrh
 16812  013020                     	if	0	;tblptru may be non-zero
 16813  013020                     	endif
 16814  013020                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16815  013020  0E00               	movlw	low (__mediumconst shr (0+16))
 16816  013022  6EF8               	movwf	tblptru,c
 16817  013024                     	endif
 16818  013024  0008               	tblrd		*
 16819  013026  50F5               	movf	tablat,w,c
 16820  013028  0A75               	xorlw	117
 16821  01302A  A4D8               	btfss	status,2,c
 16822  01302C  D07C               	goto	l13966
 16823                           
 16824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 16825                           ;stkvar	_fmt @ sp[(-32)+-4]
 16826  01302E  0EDC               	movlw	-36
 16827  013030  006F FF8F FFD9     	movff	plusw1,fsr2l
 16828  013036  0EDD               	movlw	-35
 16829  013038  006F FF8F FFDA     	movff	plusw1,fsr2h
 16830  01303E  2ADE               	incf	postinc2,f,c
 16831  013040  0E00               	movlw	0
 16832  013042  22DD               	addwfc	postdec2,f,c
 16833                           
 16834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 16835                           ;stkvar	_ap @ sp[(-32)+-6]
 16836  013044  0EDA               	movlw	-38
 16837  013046  006F FF8F FFD9     	movff	plusw1,fsr2l
 16838  01304C  0EDB               	movlw	-37
 16839  01304E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16840  013054  0E02               	movlw	2
 16841  013056  5EDE               	subwf	postinc2,f,c
 16842  013058  0E00               	movlw	0
 16843  01305A  5ADD               	subwfb	postdec2,f,c
 16844  01305C  006F FF78  F00B    	movff	postinc2,btemp+10
 16845  013062  006F FF74  F00C    	movff	postdec2,btemp+11
 16846  013068  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16847  01306E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16848  013074  006F FF78  F00B    	movff	postinc2,btemp+10
 16849  01307A  006F FF74  F00C    	movff	postdec2,btemp+11
 16850  013080  500B               	movf	(btemp+10)^0,w,c
 16851  013082  6E11               	movwf	(btemp+16)^0,c
 16852  013084  500C               	movf	(btemp+11)^0,w,c
 16853  013086  6E12               	movwf	(btemp+17)^0,c
 16854  013088  6A13               	clrf	(btemp+18)^0,c
 16855  01308A  6A14               	clrf	(btemp+19)^0,c
 16856  01308C  6A15               	clrf	(btemp+20)^0,c
 16857  01308E  6A16               	clrf	(btemp+21)^0,c
 16858  013090  6A17               	clrf	(btemp+22)^0,c
 16859  013092  6A18               	clrf	(btemp+23)^0,c
 16860                           
 16861                           ;stkvar	_llu @ sp[(-32)+6]
 16862  013094  0EE6               	movlw	-26
 16863  013096  0060  F047  FFE3   	movff	btemp+16,plusw1
 16864  01309C  0EE7               	movlw	-25
 16865  01309E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 16866  0130A4  0EE8               	movlw	-24
 16867  0130A6  0060  F04F  FFE3   	movff	btemp+18,plusw1
 16868  0130AC  0EE9               	movlw	-23
 16869  0130AE  0060  F053  FFE3   	movff	btemp+19,plusw1
 16870  0130B4  0EEA               	movlw	-22
 16871  0130B6  0060  F057  FFE3   	movff	btemp+20,plusw1
 16872  0130BC  0EEB               	movlw	-21
 16873  0130BE  0060  F05B  FFE3   	movff	btemp+21,plusw1
 16874  0130C4  0EEC               	movlw	-20
 16875  0130C6  0060  F05F  FFE3   	movff	btemp+22,plusw1
 16876  0130CC  0EED               	movlw	-19
 16877  0130CE  0060  F063  FFE3   	movff	btemp+23,plusw1
 16878                           
 16879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 16880                           ;stkvar	_llu @ sp[(-32)+6]
 16881  0130D4  50E1               	movf	fsr1l,w,c
 16882  0130D6  0FE6               	addlw	-26
 16883  0130D8  6ED9               	movwf	fsr2l,c
 16884  0130DA  50E2               	movf	fsr1h,w,c
 16885  0130DC  6EDA               	movwf	fsr2h,c
 16886  0130DE  0EFF               	movlw	255
 16887  0130E0  22DA               	addwfc	fsr2h,f,c
 16888  0130E2  006F FF7B FFE6     	movff	postinc2,postinc1
 16889  0130E8  006F FF7B FFE6     	movff	postinc2,postinc1
 16890  0130EE  006F FF7B FFE6     	movff	postinc2,postinc1
 16891  0130F4  006F FF7B FFE6     	movff	postinc2,postinc1
 16892  0130FA  006F FF7B FFE6     	movff	postinc2,postinc1
 16893  013100  006F FF7B FFE6     	movff	postinc2,postinc1
 16894  013106  006F FF7B FFE6     	movff	postinc2,postinc1
 16895  01310C  006F FF7B FFE6     	movff	postinc2,postinc1
 16896                           
 16897                           ;stkvar	_fp @ sp[(-40)+-2]
 16898  013112  0ED6               	movlw	-42
 16899  013114  006F FF8F FFE6     	movff	plusw1,postinc1
 16900  01311A  006F FF8F FFE6     	movff	plusw1,postinc1
 16901  013120  ECDD  F0B8         	call	_utoa	;wreg free
 16902  013124  D21E               	goto	l2646
 16903  013126                     l13966:
 16904                           
 16905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 16906  013126  0E02               	movlw	2
 16907  013128  6EE6               	movwf	postinc1,c
 16908  01312A  0E00               	movlw	0
 16909  01312C  6EE6               	movwf	postinc1,c
 16910  01312E  0EF2               	movlw	low STR_106
 16911  013130  6EE6               	movwf	postinc1,c
 16912  013132  0EFF               	movlw	high STR_106
 16913  013134  6EE6               	movwf	postinc1,c
 16914                           
 16915                           ;stkvar	_fmt @ sp[(-36)+-4]
 16916  013136  0ED8               	movlw	-40
 16917  013138  006F FF8F FFD9     	movff	plusw1,fsr2l
 16918  01313E  0ED9               	movlw	-39
 16919  013140  006F FF8F FFDA     	movff	plusw1,fsr2h
 16920  013146  006F FF78  F00B    	movff	postinc2,btemp+10
 16921  01314C  006F FF74  F00C    	movff	postdec2,btemp+11
 16922  013152  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16923  013158  0060  F033  FFE6   	movff	btemp+11,postinc1
 16924  01315E  EC8E  F0C4         	call	_strncmp	;wreg free
 16925  013162  5001               	movf	btemp^0,w,c
 16926  013164  1002               	iorwf	(btemp+1)^0,w,c
 16927  013166  A4D8               	btfss	status,2,c
 16928  013168  D039               	goto	l13976
 16929                           
 16930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 16931                           ;stkvar	_fmt @ sp[(-32)+-4]
 16932  01316A  0EDC               	movlw	-36
 16933  01316C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16934  013172  0EDD               	movlw	-35
 16935  013174  006F FF8F FFDA     	movff	plusw1,fsr2h
 16936  01317A  0E02               	movlw	2
 16937  01317C  26DE               	addwf	postinc2,f,c
 16938  01317E  0E00               	movlw	0
 16939  013180  22DD               	addwfc	postdec2,f,c
 16940                           
 16941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 16942                           ;stkvar	_ap @ sp[(-32)+-6]
 16943  013182  0EDA               	movlw	-38
 16944  013184  006F FF8F FFD9     	movff	plusw1,fsr2l
 16945  01318A  0EDB               	movlw	-37
 16946  01318C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16947  013192  0E04               	movlw	4
 16948  013194  5EDE               	subwf	postinc2,f,c
 16949  013196  0E00               	movlw	0
 16950  013198  5ADD               	subwfb	postdec2,f,c
 16951  01319A  006F FF78  F00B    	movff	postinc2,btemp+10
 16952  0131A0  006F FF74  F00C    	movff	postdec2,btemp+11
 16953  0131A6  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16954  0131AC  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16955  0131B2  006F FF78  F009    	movff	postinc2,btemp+8
 16956  0131B8  006F FF78  F00A    	movff	postinc2,btemp+9
 16957  0131BE  006F FF78  F00B    	movff	postinc2,btemp+10
 16958  0131C4  006F FF78  F00C    	movff	postinc2,btemp+11
 16959  0131CA  5009               	movf	(btemp+8)^0,w,c
 16960  0131CC  6E11               	movwf	(btemp+16)^0,c
 16961  0131CE  500A               	movf	(btemp+9)^0,w,c
 16962  0131D0  6E12               	movwf	(btemp+17)^0,c
 16963  0131D2  500B               	movf	(btemp+10)^0,w,c
 16964  0131D4  6E13               	movwf	(btemp+18)^0,c
 16965  0131D6  500C               	movf	(btemp+11)^0,w,c
 16966  0131D8  6E14               	movwf	(btemp+19)^0,c
 16967  0131DA  D758               	goto	L15
 16968  0131DC                     l13976:
 16969                           
 16970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 16971                           ;stkvar	_fmt @ sp[(-32)+-4]
 16972  0131DC  0EDC               	movlw	-36
 16973  0131DE  006F FF8F FFD9     	movff	plusw1,fsr2l
 16974  0131E4  0EDD               	movlw	-35
 16975  0131E6  006F FF8F FFDA     	movff	plusw1,fsr2h
 16976  0131EC  006F FF7B FFF6     	movff	postinc2,tblptrl
 16977  0131F2  006F FF77 FFF7     	movff	postdec2,tblptrh
 16978  0131F8                     	if	0	;tblptru may be non-zero
 16979  0131F8                     	endif
 16980  0131F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16981  0131F8  0E00               	movlw	low (__mediumconst shr (0+16))
 16982  0131FA  6EF8               	movwf	tblptru,c
 16983  0131FC                     	endif
 16984  0131FC  0008               	tblrd		*
 16985  0131FE  50F5               	movf	tablat,w,c
 16986  013200  0A78               	xorlw	120
 16987  013202  B4D8               	btfsc	status,2,c
 16988  013204  D015               	goto	u13400
 16989                           
 16990                           ;stkvar	_fmt @ sp[(-32)+-4]
 16991  013206  0EDC               	movlw	-36
 16992  013208  006F FF8F FFD9     	movff	plusw1,fsr2l
 16993  01320E  0EDD               	movlw	-35
 16994  013210  006F FF8F FFDA     	movff	plusw1,fsr2h
 16995  013216  006F FF7B FFF6     	movff	postinc2,tblptrl
 16996  01321C  006F FF77 FFF7     	movff	postdec2,tblptrh
 16997  013222                     	if	0	;tblptru may be non-zero
 16998  013222                     	endif
 16999  013222                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17000  013222  0E00               	movlw	low (__mediumconst shr (0+16))
 17001  013224  6EF8               	movwf	tblptru,c
 17002  013226                     	endif
 17003  013226  0008               	tblrd		*
 17004  013228  50F5               	movf	tablat,w,c
 17005  01322A  0A58               	xorlw	88
 17006  01322C  A4D8               	btfss	status,2,c
 17007  01322E  D094               	goto	l13990
 17008  013230                     u13400:
 17009                           
 17010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 17011                           ;stkvar	_fmt @ sp[(-32)+-4]
 17012  013230  0EDC               	movlw	-36
 17013  013232  006F FF8F FFD9     	movff	plusw1,fsr2l
 17014  013238  0EDD               	movlw	-35
 17015  01323A  006F FF8F FFDA     	movff	plusw1,fsr2h
 17016  013240  006F FF7B FFF6     	movff	postinc2,tblptrl
 17017  013246  006F FF77 FFF7     	movff	postdec2,tblptrh
 17018  01324C                     	if	0	;tblptru may be non-zero
 17019  01324C                     	endif
 17020  01324C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17021  01324C  0E00               	movlw	low (__mediumconst shr (0+16))
 17022  01324E  6EF8               	movwf	tblptru,c
 17023  013250                     	endif
 17024                           
 17025                           ;stkvar	_c @ sp[(-32)+31]
 17026  013250  0008               	tblrd		*
 17027  013252  0EFF               	movlw	-1
 17028  013254  006F FFD7 FFE3     	movff	tablat,plusw1
 17029                           
 17030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 17031                           ;stkvar	_fmt @ sp[(-32)+-4]
 17032  01325A  0EDC               	movlw	-36
 17033  01325C  006F FF8F FFD9     	movff	plusw1,fsr2l
 17034  013262  0EDD               	movlw	-35
 17035  013264  006F FF8F FFDA     	movff	plusw1,fsr2h
 17036  01326A  2ADE               	incf	postinc2,f,c
 17037  01326C  0E00               	movlw	0
 17038  01326E  22DD               	addwfc	postdec2,f,c
 17039                           
 17040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 17041                           ;stkvar	_ap @ sp[(-32)+-6]
 17042  013270  0EDA               	movlw	-38
 17043  013272  006F FF8F FFD9     	movff	plusw1,fsr2l
 17044  013278  0EDB               	movlw	-37
 17045  01327A  006F FF8F FFDA     	movff	plusw1,fsr2h
 17046  013280  0E02               	movlw	2
 17047  013282  5EDE               	subwf	postinc2,f,c
 17048  013284  0E00               	movlw	0
 17049  013286  5ADD               	subwfb	postdec2,f,c
 17050  013288  006F FF78  F00B    	movff	postinc2,btemp+10
 17051  01328E  006F FF74  F00C    	movff	postdec2,btemp+11
 17052  013294  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17053  01329A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17054  0132A0  006F FF78  F00B    	movff	postinc2,btemp+10
 17055  0132A6  006F FF74  F00C    	movff	postdec2,btemp+11
 17056  0132AC  500B               	movf	(btemp+10)^0,w,c
 17057  0132AE  6E11               	movwf	(btemp+16)^0,c
 17058  0132B0  500C               	movf	(btemp+11)^0,w,c
 17059  0132B2  6E12               	movwf	(btemp+17)^0,c
 17060  0132B4  6A13               	clrf	(btemp+18)^0,c
 17061  0132B6  6A14               	clrf	(btemp+19)^0,c
 17062  0132B8  6A15               	clrf	(btemp+20)^0,c
 17063  0132BA  6A16               	clrf	(btemp+21)^0,c
 17064  0132BC  6A17               	clrf	(btemp+22)^0,c
 17065  0132BE  6A18               	clrf	(btemp+23)^0,c
 17066                           
 17067                           ;stkvar	_llu @ sp[(-32)+6]
 17068  0132C0  0EE6               	movlw	-26
 17069  0132C2  0060  F047  FFE3   	movff	btemp+16,plusw1
 17070  0132C8  0EE7               	movlw	-25
 17071  0132CA  0060  F04B  FFE3   	movff	btemp+17,plusw1
 17072  0132D0  0EE8               	movlw	-24
 17073  0132D2  0060  F04F  FFE3   	movff	btemp+18,plusw1
 17074  0132D8  0EE9               	movlw	-23
 17075  0132DA  0060  F053  FFE3   	movff	btemp+19,plusw1
 17076  0132E0  0EEA               	movlw	-22
 17077  0132E2  0060  F057  FFE3   	movff	btemp+20,plusw1
 17078  0132E8  0EEB               	movlw	-21
 17079  0132EA  0060  F05B  FFE3   	movff	btemp+21,plusw1
 17080  0132F0  0EEC               	movlw	-20
 17081  0132F2  0060  F05F  FFE3   	movff	btemp+22,plusw1
 17082  0132F8  0EED               	movlw	-19
 17083  0132FA  0060  F063  FFE3   	movff	btemp+23,plusw1
 17084                           
 17085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 17086                           ;stkvar	_c @ sp[(-32)+31]
 17087  013300  0EFF               	movlw	-1
 17088  013302  50E3               	movf	plusw1,w,c
 17089  013304  6EE6               	movwf	postinc1,c
 17090                           
 17091                           ;stkvar	_llu @ sp[(-33)+6]
 17092  013306  50E1               	movf	fsr1l,w,c
 17093  013308  0FE5               	addlw	-27
 17094  01330A  6ED9               	movwf	fsr2l,c
 17095  01330C  50E2               	movf	fsr1h,w,c
 17096  01330E  6EDA               	movwf	fsr2h,c
 17097  013310  0EFF               	movlw	255
 17098  013312  22DA               	addwfc	fsr2h,f,c
 17099  013314  006F FF7B FFE6     	movff	postinc2,postinc1
 17100  01331A  006F FF7B FFE6     	movff	postinc2,postinc1
 17101  013320  006F FF7B FFE6     	movff	postinc2,postinc1
 17102  013326  006F FF7B FFE6     	movff	postinc2,postinc1
 17103  01332C  006F FF7B FFE6     	movff	postinc2,postinc1
 17104  013332  006F FF7B FFE6     	movff	postinc2,postinc1
 17105  013338  006F FF7B FFE6     	movff	postinc2,postinc1
 17106  01333E  006F FF7B FFE6     	movff	postinc2,postinc1
 17107                           
 17108                           ;stkvar	_fp @ sp[(-41)+-2]
 17109  013344  0ED5               	movlw	-43
 17110  013346  006F FF8F FFE6     	movff	plusw1,postinc1
 17111  01334C  006F FF8F FFE6     	movff	plusw1,postinc1
 17112  013352  ECA2  F0B3         	call	_xtoa	;wreg free
 17113  013356  D105               	goto	l2646
 17114  013358                     l13990:
 17115                           
 17116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 17117  013358  0E02               	movlw	2
 17118  01335A  6EE6               	movwf	postinc1,c
 17119  01335C  0E00               	movlw	0
 17120  01335E  6EE6               	movwf	postinc1,c
 17121  013360  0EF5               	movlw	low STR_111
 17122  013362  6EE6               	movwf	postinc1,c
 17123  013364  0EFF               	movlw	high STR_111
 17124  013366  6EE6               	movwf	postinc1,c
 17125                           
 17126                           ;stkvar	_fmt @ sp[(-36)+-4]
 17127  013368  0ED8               	movlw	-40
 17128  01336A  006F FF8F FFD9     	movff	plusw1,fsr2l
 17129  013370  0ED9               	movlw	-39
 17130  013372  006F FF8F FFDA     	movff	plusw1,fsr2h
 17131  013378  006F FF78  F00B    	movff	postinc2,btemp+10
 17132  01337E  006F FF74  F00C    	movff	postdec2,btemp+11
 17133  013384  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17134  01338A  0060  F033  FFE6   	movff	btemp+11,postinc1
 17135  013390  EC8E  F0C4         	call	_strncmp	;wreg free
 17136  013394  5001               	movf	btemp^0,w,c
 17137  013396  1002               	iorwf	(btemp+1)^0,w,c
 17138  013398  B4D8               	btfsc	status,2,c
 17139  01339A  D022               	goto	u13420
 17140  01339C  0E02               	movlw	2
 17141  01339E  6EE6               	movwf	postinc1,c
 17142  0133A0  0E00               	movlw	0
 17143  0133A2  6EE6               	movwf	postinc1,c
 17144  0133A4  0EE6               	movlw	low STR_115
 17145  0133A6  6EE6               	movwf	postinc1,c
 17146  0133A8  0EFF               	movlw	high STR_115
 17147  0133AA  6EE6               	movwf	postinc1,c
 17148                           
 17149                           ;stkvar	_fmt @ sp[(-36)+-4]
 17150  0133AC  0ED8               	movlw	-40
 17151  0133AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 17152  0133B4  0ED9               	movlw	-39
 17153  0133B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 17154  0133BC  006F FF78  F00B    	movff	postinc2,btemp+10
 17155  0133C2  006F FF74  F00C    	movff	postdec2,btemp+11
 17156  0133C8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17157  0133CE  0060  F033  FFE6   	movff	btemp+11,postinc1
 17158  0133D4  EC8E  F0C4         	call	_strncmp	;wreg free
 17159  0133D8  5001               	movf	btemp^0,w,c
 17160  0133DA  1002               	iorwf	(btemp+1)^0,w,c
 17161  0133DC  A4D8               	btfss	status,2,c
 17162  0133DE  D058               	goto	l14004
 17163  0133E0                     u13420:
 17164                           
 17165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 17166                           ;stkvar	_fmt @ sp[(-32)+-4]
 17167  0133E0  0EDC               	movlw	-36
 17168  0133E2  006F FF8F FFD9     	movff	plusw1,fsr2l
 17169  0133E8  0EDD               	movlw	-35
 17170  0133EA  006F FF8F FFDA     	movff	plusw1,fsr2h
 17171  0133F0  006F FF78  F00B    	movff	postinc2,btemp+10
 17172  0133F6  006F FF74  F00C    	movff	postdec2,btemp+11
 17173  0133FC  0E01               	movlw	1
 17174  0133FE  260B               	addwf	(btemp+10)^0,f,c
 17175  013400  0E00               	movlw	0
 17176  013402  220C               	addwfc	(btemp+11)^0,f,c
 17177  013404  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 17178  01340A  0060  F033  FFF7   	movff	btemp+11,tblptrh
 17179  013410                     	if	0	;tblptru may be non-zero
 17180  013410                     	endif
 17181  013410                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17182  013410  0E00               	movlw	low (__mediumconst shr (0+16))
 17183  013412  6EF8               	movwf	tblptru,c
 17184  013414                     	endif
 17185                           
 17186                           ;stkvar	_c @ sp[(-32)+31]
 17187  013414  0008               	tblrd		*
 17188  013416  0EFF               	movlw	-1
 17189  013418  006F FFD7 FFE3     	movff	tablat,plusw1
 17190                           
 17191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 17192                           ;stkvar	_fmt @ sp[(-32)+-4]
 17193  01341E  0EDC               	movlw	-36
 17194  013420  006F FF8F FFD9     	movff	plusw1,fsr2l
 17195  013426  0EDD               	movlw	-35
 17196  013428  006F FF8F FFDA     	movff	plusw1,fsr2h
 17197  01342E  0E02               	movlw	2
 17198  013430  26DE               	addwf	postinc2,f,c
 17199  013432  0E00               	movlw	0
 17200  013434  22DD               	addwfc	postdec2,f,c
 17201                           
 17202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 17203                           ;stkvar	_ap @ sp[(-32)+-6]
 17204  013436  0EDA               	movlw	-38
 17205  013438  006F FF8F FFD9     	movff	plusw1,fsr2l
 17206  01343E  0EDB               	movlw	-37
 17207  013440  006F FF8F FFDA     	movff	plusw1,fsr2h
 17208  013446  0E04               	movlw	4
 17209  013448  5EDE               	subwf	postinc2,f,c
 17210  01344A  0E00               	movlw	0
 17211  01344C  5ADD               	subwfb	postdec2,f,c
 17212  01344E  006F FF78  F00B    	movff	postinc2,btemp+10
 17213  013454  006F FF74  F00C    	movff	postdec2,btemp+11
 17214  01345A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17215  013460  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17216  013466  006F FF78  F009    	movff	postinc2,btemp+8
 17217  01346C  006F FF78  F00A    	movff	postinc2,btemp+9
 17218  013472  006F FF78  F00B    	movff	postinc2,btemp+10
 17219  013478  006F FF78  F00C    	movff	postinc2,btemp+11
 17220  01347E  5009               	movf	(btemp+8)^0,w,c
 17221  013480  6E11               	movwf	(btemp+16)^0,c
 17222  013482  500A               	movf	(btemp+9)^0,w,c
 17223  013484  6E12               	movwf	(btemp+17)^0,c
 17224  013486  500B               	movf	(btemp+10)^0,w,c
 17225  013488  6E13               	movwf	(btemp+18)^0,c
 17226  01348A  500C               	movf	(btemp+11)^0,w,c
 17227  01348C  6E14               	movwf	(btemp+19)^0,c
 17228  01348E  D714               	goto	L16
 17229  013490                     l14004:
 17230                           
 17231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 17232                           ;stkvar	_fmt @ sp[(-32)+-4]
 17233  013490  0EDC               	movlw	-36
 17234  013492  006F FF8F FFD9     	movff	plusw1,fsr2l
 17235  013498  0EDD               	movlw	-35
 17236  01349A  006F FF8F FFDA     	movff	plusw1,fsr2h
 17237  0134A0  006F FF7B FFF6     	movff	postinc2,tblptrl
 17238  0134A6  006F FF77 FFF7     	movff	postdec2,tblptrh
 17239  0134AC                     	if	0	;tblptru may be non-zero
 17240  0134AC                     	endif
 17241  0134AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17242  0134AC  0E00               	movlw	low (__mediumconst shr (0+16))
 17243  0134AE  6EF8               	movwf	tblptru,c
 17244  0134B0                     	endif
 17245  0134B0  0008               	tblrd		*
 17246  0134B2  50F5               	movf	tablat,w,c
 17247  0134B4  0A25               	xorlw	37
 17248  0134B6  A4D8               	btfss	status,2,c
 17249  0134B8  D01A               	goto	l14014
 17250                           
 17251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 17252                           ;stkvar	_fmt @ sp[(-32)+-4]
 17253  0134BA  0EDC               	movlw	-36
 17254  0134BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 17255  0134C2  0EDD               	movlw	-35
 17256  0134C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 17257  0134CA  2ADE               	incf	postinc2,f,c
 17258  0134CC  0E00               	movlw	0
 17259  0134CE  22DD               	addwfc	postdec2,f,c
 17260                           
 17261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 17262                           ;stkvar	_fp @ sp[(-32)+-2]
 17263  0134D0  0EDE               	movlw	-34
 17264  0134D2  006F FF8F FFE6     	movff	plusw1,postinc1
 17265  0134D8  006F FF8F FFE6     	movff	plusw1,postinc1
 17266  0134DE  0E25               	movlw	37
 17267  0134E0  6EE6               	movwf	postinc1,c
 17268  0134E2  0E00               	movlw	0
 17269  0134E4  6EE6               	movwf	postinc1,c
 17270  0134E6  ECBA  F0D1         	call	_fputc	;wreg free
 17271  0134EA                     l14010:
 17272                           
 17273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 17274  0134EA  0E01               	movlw	1
 17275  0134EC  D00C               	goto	L17
 17276  0134EE                     l14014:
 17277                           
 17278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 17279                           ;stkvar	_fmt @ sp[(-32)+-4]
 17280  0134EE  0EDC               	movlw	-36
 17281  0134F0  006F FF8F FFD9     	movff	plusw1,fsr2l
 17282  0134F6  0EDD               	movlw	-35
 17283  0134F8  006F FF8F FFDA     	movff	plusw1,fsr2h
 17284  0134FE  2ADE               	incf	postinc2,f,c
 17285  013500  0E00               	movlw	0
 17286  013502  22DD               	addwfc	postdec2,f,c
 17287                           
 17288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 17289  013504  0E00               	movlw	0
 17290  013506                     L17:
 17291  013506  6E01               	movwf	btemp^0,c
 17292  013508  0E00               	movlw	0
 17293  01350A  6E02               	movwf	(btemp+1)^0,c
 17294  01350C  D02A               	goto	l2646
 17295  01350E                     l14020:
 17296                           
 17297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 17298                           ;stkvar	_fp @ sp[(-32)+-2]
 17299  01350E  0EDE               	movlw	-34
 17300  013510  006F FF8F FFE6     	movff	plusw1,postinc1
 17301  013516  006F FF8F FFE6     	movff	plusw1,postinc1
 17302                           
 17303                           ;stkvar	_fmt @ sp[(-34)+-4]
 17304  01351C  0EDA               	movlw	-38
 17305  01351E  006F FF8F FFD9     	movff	plusw1,fsr2l
 17306  013524  0EDB               	movlw	-37
 17307  013526  006F FF8F FFDA     	movff	plusw1,fsr2h
 17308  01352C  006F FF7B FFF6     	movff	postinc2,tblptrl
 17309  013532  006F FF77 FFF7     	movff	postdec2,tblptrh
 17310  013538                     	if	0	;tblptru may be non-zero
 17311  013538                     	endif
 17312  013538                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17313  013538  0E00               	movlw	low (__mediumconst shr (0+16))
 17314  01353A  6EF8               	movwf	tblptru,c
 17315  01353C                     	endif
 17316  01353C  0008               	tblrd		*
 17317  01353E  50F5               	movf	tablat,w,c
 17318  013540  6EE6               	movwf	postinc1,c
 17319  013542  0E00               	movlw	0
 17320  013544  6EE6               	movwf	postinc1,c
 17321  013546  ECBA  F0D1         	call	_fputc	;wreg free
 17322                           
 17323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 17324                           ;stkvar	_fmt @ sp[(-32)+-4]
 17325  01354A  0EDC               	movlw	-36
 17326  01354C  006F FF8F FFD9     	movff	plusw1,fsr2l
 17327  013552  0EDD               	movlw	-35
 17328  013554  006F FF8F FFDA     	movff	plusw1,fsr2h
 17329  01355A  2ADE               	incf	postinc2,f,c
 17330  01355C  0E00               	movlw	0
 17331  01355E  22DD               	addwfc	postdec2,f,c
 17332  013560  D7C4               	goto	l14010
 17333  013562                     l2646:
 17334                           
 17335                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 17336  013562  0EDA               	movlw	218
 17337  013564  26E1               	addwf	fsr1l,f,c
 17338  013566  0EFF               	movlw	255
 17339  013568  22E2               	addwfc	fsr1h,f,c
 17340  01356A  0012               	return		;funcret
 17341  01356C                     __end_of_vfpfcnvrt:
 17342                           	opt callstack 0
 17343                           
 17344 ;; *************** function _xtoa *****************
 17345 ;; Defined at:
 17346 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17347 ;; Parameters:    Size  Location     Type
 17348 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17349 ;;		 -> f(6), NULL(0), 
 17350 ;;  d               8  [STACK] unsigned long long 
 17351 ;;  x               1  [STACK] unsigned char 
 17352 ;; Auto vars:     Size  Location     Type
 17353 ;;  n               8  [STACK] unsigned long long 
 17354 ;;  c               2  [STACK] int 
 17355 ;;  i               2  [STACK] int 
 17356 ;;  w               2  [STACK] int 
 17357 ;;  p               2  [STACK] int 
 17358 ;; Return value:  Size  Location     Type
 17359 ;;                  2  [STACK] int 
 17360 ;; Registers used:
 17361 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17362 ;; Tracked objects:
 17363 ;;		On entry : 0/0
 17364 ;;		On exit  : 0/0
 17365 ;;		Unchanged: 0/0
 17366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17371 ;;Total ram usage:        0 bytes
 17372 ;; Hardware stack levels used:    1
 17373 ;; Hardware stack levels required when called:   20
 17374 ;; This function calls:
 17375 ;;		_isalpha
 17376 ;;		_isupper
 17377 ;;		_pad
 17378 ;;		_toupper
 17379 ;; This function is called by:
 17380 ;;		_vfpfcnvrt
 17381 ;; This function uses a reentrant model
 17382 ;;
 17383                           
 17384                           	psect	text68
 17385  016744                     __ptext68:
 17386                           	opt callstack 0
 17387  016744                     _xtoa:
 17388                           	opt callstack 0
 17389                           
 17390                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17391  016744  0E14               	movlw	20
 17392  016746  26E1               	addwf	fsr1l,f,c
 17393  016748  0E00               	movlw	0
 17394  01674A  22E2               	addwfc	fsr1h,f,c
 17395                           
 17396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 17397                           
 17398                           ;incstack = 0
 17399 ;; hardware stack exceeded
 17400  01674C  AE3D               	btfss	(_prec+1)^0,7,c
 17401                           
 17402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 17403  01674E  923E               	bcf	_flags^0,1,c
 17404                           
 17405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 17406  016750  BE3D               	btfsc	(_prec+1)^0,7,c
 17407  016752  D005               	goto	u12960
 17408  016754  503D               	movf	(_prec+1)^0,w,c
 17409  016756  E110               	bnz	l13740
 17410  016758  043C               	decf	_prec^0,w,c
 17411  01675A  B0D8               	btfsc	status,0,c
 17412  01675C  D00D               	goto	l13740
 17413  01675E                     u12960:
 17414  01675E  0E01               	movlw	1
 17415  016760  6E0B               	movwf	(btemp+10)^0,c
 17416  016762  0E00               	movlw	0
 17417  016764  6E0C               	movwf	(btemp+11)^0,c
 17418                           
 17419                           ;stkvar	_p @ sp[(-20)+18]
 17420  016766  0EFE               	movlw	-2
 17421  016768  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17422  01676E  0EFF               	movlw	-1
 17423  016770  0060  F033  FFE3   	movff	btemp+11,plusw1
 17424  016776  D008               	goto	l2596
 17425  016778                     l13740:
 17426                           
 17427                           ;stkvar	_p @ sp[(-20)+18]
 17428  016778  0EFE               	movlw	-2
 17429  01677A  0060  F0F3  FFE3   	movff	_prec,plusw1
 17430  016780  0EFF               	movlw	-1
 17431  016782  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 17432  016788                     l2596:
 17433                           
 17434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 17435                           ;stkvar	_w @ sp[(-20)+16]
 17436  016788  0EFC               	movlw	-4
 17437  01678A  0060  F0EB  FFE3   	movff	_width,plusw1
 17438  016790  0EFD               	movlw	-3
 17439  016792  0060  F0EF  FFE3   	movff	_width+1,plusw1
 17440                           
 17441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 17442  016798  A83E               	btfss	_flags^0,4,c
 17443  01679A  D00B               	goto	l13746
 17444                           
 17445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 17446                           ;stkvar	_w @ sp[(-20)+16]
 17447  01679C  50E1               	movf	fsr1l,w,c
 17448  01679E  0FFC               	addlw	-4
 17449  0167A0  6ED9               	movwf	fsr2l,c
 17450  0167A2  50E2               	movf	fsr1h,w,c
 17451  0167A4  6EDA               	movwf	fsr2h,c
 17452  0167A6  0EFF               	movlw	255
 17453  0167A8  22DA               	addwfc	fsr2h,f,c
 17454  0167AA  0EFE               	movlw	254
 17455  0167AC  26DE               	addwf	postinc2,f,c
 17456  0167AE  0EFF               	movlw	255
 17457  0167B0  22DD               	addwfc	postdec2,f,c
 17458  0167B2                     l13746:
 17459                           
 17460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 17461                           ;stkvar	_d @ sp[(-20)+-10]
 17462  0167B2  0EE2               	movlw	226
 17463  0167B4  24E1               	addwf	fsr1l,w,c
 17464  0167B6  6ED9               	movwf	fsr2l,c
 17465  0167B8  0EFF               	movlw	255
 17466  0167BA  20E2               	addwfc	fsr1h,w,c
 17467  0167BC  6EDA               	movwf	fsr2h,c
 17468                           
 17469                           ;stkvar	_n @ sp[(-20)+4]
 17470  0167BE  0E08               	movlw	8
 17471  0167C0  6E01               	movwf	btemp^0,c
 17472  0167C2  0EF0               	movlw	-16
 17473  0167C4                     us1298999:
 17474  0167C4  006F FF7B FFE3     	movff	postinc2,plusw1
 17475  0167CA  28E8               	incf	wreg,w,c
 17476  0167CC  2E01               	decfsz	btemp^0,f,c
 17477  0167CE  D7FA               	bra	us1298999
 17478                           
 17479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 17480  0167D0  0E4F               	movlw	79
 17481  0167D2  6E0B               	movwf	(btemp+10)^0,c
 17482  0167D4  0E00               	movlw	0
 17483  0167D6  6E0C               	movwf	(btemp+11)^0,c
 17484                           
 17485                           ;stkvar	_i @ sp[(-20)+14]
 17486  0167D8  0EFA               	movlw	-6
 17487  0167DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17488  0167E0  0EFB               	movlw	-5
 17489  0167E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 17490                           
 17491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 17492  0167E8  0103               	movlb	3	; () banked
 17493  0167EA  6BE3               	clrf	(_dbuf+79)& (0+255),b
 17494                           
 17495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17496  0167EC  D0EE               	goto	l13784
 17497  0167EE                     l13752:
 17498                           
 17499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 17500                           ;stkvar	_i @ sp[(-20)+14]
 17501  0167EE  50E1               	movf	fsr1l,w,c
 17502  0167F0  0FFA               	addlw	-6
 17503  0167F2  6ED9               	movwf	fsr2l,c
 17504  0167F4  50E2               	movf	fsr1h,w,c
 17505  0167F6  6EDA               	movwf	fsr2h,c
 17506  0167F8  0EFF               	movlw	255
 17507  0167FA  22DA               	addwfc	fsr2h,f,c
 17508  0167FC  06DE               	decf	postinc2,f,c
 17509  0167FE  0E00               	movlw	0
 17510  016800  5ADD               	subwfb	postdec2,f,c
 17511                           
 17512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 17513                           ;stkvar	_n @ sp[(-20)+4]
 17514  016802  0EF0               	movlw	-16
 17515  016804  006F FF8C  F00B    	movff	plusw1,btemp+10
 17516  01680A  0EF1               	movlw	-15
 17517  01680C  006F FF8C  F00C    	movff	plusw1,btemp+11
 17518  016812  0E0F               	movlw	15
 17519  016814  160B               	andwf	(btemp+10)^0,f,c
 17520  016816  0E00               	movlw	0
 17521  016818  160C               	andwf	(btemp+11)^0,f,c
 17522                           
 17523                           ;stkvar	_c @ sp[(-20)+12]
 17524  01681A  0EF8               	movlw	-8
 17525  01681C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17526  016822  0EF9               	movlw	-7
 17527  016824  0060  F033  FFE3   	movff	btemp+11,plusw1
 17528                           
 17529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 17530                           ;stkvar	_c @ sp[(-20)+12]
 17531  01682A  0EF9               	movlw	-7
 17532  01682C  BEE3               	btfsc	plusw1,7,c
 17533  01682E  D00F               	goto	l13760
 17534  016830  0EF9               	movlw	-7
 17535  016832  50E3               	movf	plusw1,w,c
 17536  016834  E108               	bnz	u12990
 17537  016836  0EF8               	movlw	-8
 17538  016838  006F FF8C  F001    	movff	plusw1,btemp
 17539  01683E  0E0A               	movlw	10
 17540  016840  5E01               	subwf	btemp^0,f,c
 17541  016842  A0D8               	btfss	status,0,c
 17542  016844  D004               	goto	l13760
 17543  016846                     u12990:
 17544                           
 17545                           ;stkvar	_c @ sp[(-20)+12]
 17546  016846  0EF8               	movlw	-8
 17547  016848  50E3               	movf	plusw1,w,c
 17548  01684A  0F57               	addlw	87
 17549  01684C  D003               	goto	L18
 17550  01684E                     l13760:
 17551                           
 17552                           ;stkvar	_c @ sp[(-20)+12]
 17553  01684E  0EF8               	movlw	-8
 17554  016850  50E3               	movf	plusw1,w,c
 17555  016852  0F30               	addlw	48
 17556  016854                     L18:
 17557  016854  6E0B               	movwf	(btemp+10)^0,c
 17558  016856  0EF9               	movlw	-7
 17559  016858  006F FF8C  F00C    	movff	plusw1,btemp+11
 17560  01685E  0E00               	movlw	0
 17561  016860  220C               	addwfc	(btemp+11)^0,f,c
 17562                           
 17563                           ;stkvar	_c @ sp[(-20)+12]
 17564  016862  0EF8               	movlw	-8
 17565  016864  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17566  01686A  0EF9               	movlw	-7
 17567  01686C  0060  F033  FFE3   	movff	btemp+11,plusw1
 17568  016872  0EBF               	movlw	191
 17569  016874  6E0B               	movwf	(btemp+10)^0,c
 17570  016876  0EFF               	movlw	255
 17571  016878  6E0C               	movwf	(btemp+11)^0,c
 17572                           
 17573                           ;stkvar	_x @ sp[(-20)+-11]
 17574  01687A  0EE1               	movlw	-31
 17575  01687C  50E3               	movf	plusw1,w,c
 17576  01687E  6E09               	movwf	(btemp+8)^0,c
 17577  016880  6A0A               	clrf	(btemp+9)^0,c
 17578  016882  500B               	movf	(btemp+10)^0,w,c
 17579  016884  2609               	addwf	(btemp+8)^0,f,c
 17580  016886  500C               	movf	(btemp+11)^0,w,c
 17581  016888  220A               	addwfc	(btemp+9)^0,f,c
 17582  01688A  500A               	movf	(btemp+9)^0,w,c
 17583  01688C  E106               	bnz	u13000
 17584  01688E  0E1A               	movlw	26
 17585  016890  5C09               	subwf	(btemp+8)^0,w,c
 17586  016892  B0D8               	btfsc	status,0,c
 17587  016894  D002               	goto	u13000
 17588  016896  0E01               	movlw	1
 17589  016898  D001               	goto	u13010
 17590  01689A                     u13000:
 17591  01689A  0E00               	movlw	0
 17592  01689C                     u13010:
 17593  01689C  6E0B               	movwf	(btemp+10)^0,c
 17594  01689E  6A0C               	clrf	(btemp+11)^0,c
 17595                           
 17596                           ;stkvar	_xtoa$6831 @ sp[(-20)+2]
 17597  0168A0  0EEE               	movlw	-18
 17598  0168A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17599  0168A8  0EEF               	movlw	-17
 17600  0168AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17601                           
 17602                           ;stkvar	_xtoa$6831 @ sp[(-20)+2]
 17603  0168B0  0EEE               	movlw	-18
 17604  0168B2  006F FF8C  F001    	movff	plusw1,btemp
 17605  0168B8  0EEF               	movlw	-17
 17606  0168BA  50E3               	movf	plusw1,w,c
 17607  0168BC  1001               	iorwf	btemp^0,w,c
 17608  0168BE  B4D8               	btfsc	status,2,c
 17609  0168C0  D041               	goto	l13776
 17610  0168C2  0E9F               	movlw	159
 17611  0168C4  6E0B               	movwf	(btemp+10)^0,c
 17612  0168C6  0EFF               	movlw	255
 17613  0168C8  6E0C               	movwf	(btemp+11)^0,c
 17614                           
 17615                           ;stkvar	_c @ sp[(-20)+12]
 17616  0168CA  0EF8               	movlw	-8
 17617  0168CC  006F FF8C  F009    	movff	plusw1,btemp+8
 17618  0168D2  0EF9               	movlw	-7
 17619  0168D4  006F FF8C  F00A    	movff	plusw1,btemp+9
 17620  0168DA  0E20               	movlw	32
 17621  0168DC  1209               	iorwf	(btemp+8)^0,f,c
 17622  0168DE  0E00               	movlw	0
 17623  0168E0  120A               	iorwf	(btemp+9)^0,f,c
 17624  0168E2  500B               	movf	(btemp+10)^0,w,c
 17625  0168E4  2609               	addwf	(btemp+8)^0,f,c
 17626  0168E6  500C               	movf	(btemp+11)^0,w,c
 17627  0168E8  220A               	addwfc	(btemp+9)^0,f,c
 17628  0168EA  500A               	movf	(btemp+9)^0,w,c
 17629  0168EC  E106               	bnz	u13030
 17630  0168EE  0E1A               	movlw	26
 17631  0168F0  5C09               	subwf	(btemp+8)^0,w,c
 17632  0168F2  B0D8               	btfsc	status,0,c
 17633  0168F4  D002               	goto	u13030
 17634  0168F6  0E01               	movlw	1
 17635  0168F8  D001               	goto	u13040
 17636  0168FA                     u13030:
 17637  0168FA  0E00               	movlw	0
 17638  0168FC                     u13040:
 17639  0168FC  6E0B               	movwf	(btemp+10)^0,c
 17640  0168FE  6A0C               	clrf	(btemp+11)^0,c
 17641                           
 17642                           ;stkvar	_xtoa$6832 @ sp[(-20)+0]
 17643  016900  0EEC               	movlw	-20
 17644  016902  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17645  016908  0EED               	movlw	-19
 17646  01690A  0060  F033  FFE3   	movff	btemp+11,plusw1
 17647                           
 17648                           ;stkvar	_xtoa$6832 @ sp[(-20)+0]
 17649  016910  0EEC               	movlw	-20
 17650  016912  006F FF8C  F001    	movff	plusw1,btemp
 17651  016918  0EED               	movlw	-19
 17652  01691A  50E3               	movf	plusw1,w,c
 17653  01691C  1001               	iorwf	btemp^0,w,c
 17654  01691E  B4D8               	btfsc	status,2,c
 17655  016920  D011               	goto	l13776
 17656                           
 17657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 17658                           ;stkvar	_c @ sp[(-20)+12]
 17659  016922  0EF8               	movlw	-8
 17660  016924  006F FF8F FFE6     	movff	plusw1,postinc1
 17661  01692A  006F FF8F FFE6     	movff	plusw1,postinc1
 17662  016930  EC8D  F0DE         	call	_toupper	;wreg free
 17663                           
 17664                           ;stkvar	_c @ sp[(-20)+12]
 17665  016934  0EF8               	movlw	-8
 17666  016936  0060  F007  FFE3   	movff	btemp,plusw1
 17667  01693C  0EF9               	movlw	-7
 17668  01693E  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17669  016944                     l13776:
 17670                           
 17671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 17672                           ;stkvar	_c @ sp[(-20)+12]
 17673                           ;stkvar	_i @ sp[(-20)+14]
 17674  016944  0EFA               	movlw	-6
 17675  016946  006F FF8C  F00B    	movff	plusw1,btemp+10
 17676  01694C  0EFB               	movlw	-5
 17677  01694E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17678  016954  0E94               	movlw	low _dbuf
 17679  016956  240B               	addwf	(btemp+10)^0,w,c
 17680  016958  6ED9               	movwf	fsr2l,c
 17681  01695A  0E03               	movlw	high _dbuf
 17682  01695C  200C               	addwfc	(btemp+11)^0,w,c
 17683  01695E  6EDA               	movwf	fsr2h,c
 17684  016960  0EF8               	movlw	-8
 17685  016962  006F FF8F FFDF     	movff	plusw1,indf2
 17686                           
 17687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 17688                           ;stkvar	_p @ sp[(-20)+18]
 17689  016968  50E1               	movf	fsr1l,w,c
 17690  01696A  0FFE               	addlw	-2
 17691  01696C  6ED9               	movwf	fsr2l,c
 17692  01696E  50E2               	movf	fsr1h,w,c
 17693  016970  6EDA               	movwf	fsr2h,c
 17694  016972  0EFF               	movlw	255
 17695  016974  22DA               	addwfc	fsr2h,f,c
 17696  016976  06DE               	decf	postinc2,f,c
 17697  016978  0E00               	movlw	0
 17698  01697A  5ADD               	subwfb	postdec2,f,c
 17699                           
 17700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 17701                           ;stkvar	_w @ sp[(-20)+16]
 17702  01697C  50E1               	movf	fsr1l,w,c
 17703  01697E  0FFC               	addlw	-4
 17704  016980  6ED9               	movwf	fsr2l,c
 17705  016982  50E2               	movf	fsr1h,w,c
 17706  016984  6EDA               	movwf	fsr2h,c
 17707  016986  0EFF               	movlw	255
 17708  016988  22DA               	addwfc	fsr2h,f,c
 17709  01698A  06DE               	decf	postinc2,f,c
 17710  01698C  0E00               	movlw	0
 17711  01698E  5ADD               	subwfb	postdec2,f,c
 17712                           
 17713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 17714  016990  0E04               	movlw	4
 17715  016992  6E0C               	movwf	(btemp+11)^0,c
 17716                           
 17717                           ;stkvar	_n @ sp[(-20)+4]
 17718  016994  50E1               	movf	fsr1l,w,c
 17719  016996  0FF0               	addlw	-16
 17720  016998  6ED9               	movwf	fsr2l,c
 17721  01699A  50E2               	movf	fsr1h,w,c
 17722  01699C  6EDA               	movwf	fsr2h,c
 17723  01699E  0EFF               	movlw	255
 17724  0169A0  22DA               	addwfc	fsr2h,f,c
 17725  0169A2  280C               	incf	(btemp+11)^0,w,c
 17726  0169A4  52DE               	movf	postinc2,f,c
 17727  0169A6  D00F               	goto	u13060
 17728  0169A8                     u13065:
 17729  0169A8  52DE               	movf	postinc2,f,c
 17730  0169AA  52DE               	movf	postinc2,f,c
 17731  0169AC  52DE               	movf	postinc2,f,c
 17732  0169AE  52DE               	movf	postinc2,f,c
 17733  0169B0  52DE               	movf	postinc2,f,c
 17734  0169B2  52DE               	movf	postinc2,f,c
 17735  0169B4  90D8               	bcf	status,0,c
 17736  0169B6  32DD               	rrcf	postdec2,f,c
 17737  0169B8  32DD               	rrcf	postdec2,f,c
 17738  0169BA  32DD               	rrcf	postdec2,f,c
 17739  0169BC  32DD               	rrcf	postdec2,f,c
 17740  0169BE  32DD               	rrcf	postdec2,f,c
 17741  0169C0  32DD               	rrcf	postdec2,f,c
 17742  0169C2  32DD               	rrcf	postdec2,f,c
 17743  0169C4  32DE               	rrcf	postinc2,f,c
 17744  0169C6                     u13060:
 17745  0169C6  2EE8               	decfsz	wreg,f,c
 17746  0169C8  D7EF               	goto	u13065
 17747  0169CA                     l13784:
 17748                           
 17749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17750                           ;stkvar	_i @ sp[(-20)+14]
 17751  0169CA  0EFB               	movlw	-5
 17752  0169CC  BEE3               	btfsc	plusw1,7,c
 17753  0169CE  D03A               	goto	u13110
 17754  0169D0  0EFB               	movlw	-5
 17755  0169D2  50E3               	movf	plusw1,w,c
 17756  0169D4  E108               	bnz	u13070
 17757  0169D6  0EFA               	movlw	-6
 17758  0169D8  006F FF8C  F001    	movff	plusw1,btemp
 17759  0169DE  0E02               	movlw	2
 17760  0169E0  5E01               	subwf	btemp^0,f,c
 17761  0169E2  A0D8               	btfss	status,0,c
 17762  0169E4  D02F               	goto	u13110
 17763  0169E6                     u13070:
 17764                           
 17765                           ;stkvar	_n @ sp[(-20)+4]
 17766  0169E6  0EF0               	movlw	-16
 17767  0169E8  50E3               	movf	plusw1,w,c
 17768  0169EA  E115               	bnz	u13081
 17769  0169EC  0EF1               	movlw	-15
 17770  0169EE  50E3               	movf	plusw1,w,c
 17771  0169F0  E112               	bnz	u13081
 17772  0169F2  0EF2               	movlw	-14
 17773  0169F4  50E3               	movf	plusw1,w,c
 17774  0169F6  E10F               	bnz	u13081
 17775  0169F8  0EF3               	movlw	-13
 17776  0169FA  50E3               	movf	plusw1,w,c
 17777  0169FC  E10C               	bnz	u13081
 17778  0169FE  0EF4               	movlw	-12
 17779  016A00  50E3               	movf	plusw1,w,c
 17780  016A02  E109               	bnz	u13081
 17781  016A04  0EF5               	movlw	-11
 17782  016A06  50E3               	movf	plusw1,w,c
 17783  016A08  E106               	bnz	u13081
 17784  016A0A  0EF6               	movlw	-10
 17785  016A0C  50E3               	movf	plusw1,w,c
 17786  016A0E  E103               	bnz	u13081
 17787  016A10  0EF7               	movlw	-9
 17788  016A12  50E3               	movf	plusw1,w,c
 17789  016A14  A4D8               	btfss	status,2,c
 17790  016A16                     u13081:
 17791  016A16  D6EB               	goto	l13752
 17792                           
 17793                           ;stkvar	_p @ sp[(-20)+18]
 17794  016A18  0EFF               	movlw	-1
 17795  016A1A  BEE3               	btfsc	plusw1,7,c
 17796  016A1C  D007               	goto	u13090
 17797  016A1E  0EFF               	movlw	-1
 17798  016A20  50E3               	movf	plusw1,w,c
 17799  016A22  E103               	bnz	u13091
 17800  016A24  0EFE               	movlw	-2
 17801  016A26  04E3               	decf	plusw1,w,c
 17802  016A28  B0D8               	btfsc	status,0,c
 17803  016A2A                     u13091:
 17804  016A2A  D6E1               	goto	l13752
 17805  016A2C                     u13090:
 17806                           
 17807                           ;stkvar	_w @ sp[(-20)+16]
 17808  016A2C  0EFD               	movlw	-3
 17809  016A2E  BEE3               	btfsc	plusw1,7,c
 17810  016A30  D009               	goto	u13110
 17811  016A32  0EFD               	movlw	-3
 17812  016A34  50E3               	movf	plusw1,w,c
 17813  016A36  E104               	bnz	u13100
 17814  016A38  0EFC               	movlw	-4
 17815  016A3A  04E3               	decf	plusw1,w,c
 17816  016A3C  A0D8               	btfss	status,0,c
 17817  016A3E  D002               	goto	u13110
 17818  016A40                     u13100:
 17819  016A40  B23E               	btfsc	_flags^0,1,c
 17820  016A42  D6D5               	goto	l13752
 17821  016A44                     u13110:
 17822                           
 17823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 17824  016A44  A83E               	btfss	_flags^0,4,c
 17825  016A46  D036               	goto	l13800
 17826                           
 17827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 17828                           ;stkvar	_i @ sp[(-20)+14]
 17829  016A48  50E1               	movf	fsr1l,w,c
 17830  016A4A  0FFA               	addlw	-6
 17831  016A4C  6ED9               	movwf	fsr2l,c
 17832  016A4E  50E2               	movf	fsr1h,w,c
 17833  016A50  6EDA               	movwf	fsr2h,c
 17834  016A52  0EFF               	movlw	255
 17835  016A54  22DA               	addwfc	fsr2h,f,c
 17836  016A56  06DE               	decf	postinc2,f,c
 17837  016A58  0E00               	movlw	0
 17838  016A5A  5ADD               	subwfb	postdec2,f,c
 17839                           
 17840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 17841                           ;stkvar	_x @ sp[(-20)+-11]
 17842                           ;stkvar	_i @ sp[(-20)+14]
 17843  016A5C  0EFA               	movlw	-6
 17844  016A5E  006F FF8C  F00B    	movff	plusw1,btemp+10
 17845  016A64  0EFB               	movlw	-5
 17846  016A66  006F FF8C  F00C    	movff	plusw1,btemp+11
 17847  016A6C  0E94               	movlw	low _dbuf
 17848  016A6E  240B               	addwf	(btemp+10)^0,w,c
 17849  016A70  6ED9               	movwf	fsr2l,c
 17850  016A72  0E03               	movlw	high _dbuf
 17851  016A74  200C               	addwfc	(btemp+11)^0,w,c
 17852  016A76  6EDA               	movwf	fsr2h,c
 17853  016A78  0EE1               	movlw	-31
 17854  016A7A  006F FF8F FFDF     	movff	plusw1,indf2
 17855                           
 17856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 17857                           ;stkvar	_i @ sp[(-20)+14]
 17858  016A80  50E1               	movf	fsr1l,w,c
 17859  016A82  0FFA               	addlw	-6
 17860  016A84  6ED9               	movwf	fsr2l,c
 17861  016A86  50E2               	movf	fsr1h,w,c
 17862  016A88  6EDA               	movwf	fsr2h,c
 17863  016A8A  0EFF               	movlw	255
 17864  016A8C  22DA               	addwfc	fsr2h,f,c
 17865  016A8E  06DE               	decf	postinc2,f,c
 17866  016A90  0E00               	movlw	0
 17867  016A92  5ADD               	subwfb	postdec2,f,c
 17868                           
 17869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 17870                           ;stkvar	_i @ sp[(-20)+14]
 17871  016A94  0EFA               	movlw	-6
 17872  016A96  006F FF8C  F00B    	movff	plusw1,btemp+10
 17873  016A9C  0EFB               	movlw	-5
 17874  016A9E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17875  016AA4  0E94               	movlw	low _dbuf
 17876  016AA6  240B               	addwf	(btemp+10)^0,w,c
 17877  016AA8  6ED9               	movwf	fsr2l,c
 17878  016AAA  0E03               	movlw	high _dbuf
 17879  016AAC  200C               	addwfc	(btemp+11)^0,w,c
 17880  016AAE  6EDA               	movwf	fsr2h,c
 17881  016AB0  0E30               	movlw	48
 17882  016AB2  6EDF               	movwf	indf2,c
 17883  016AB4                     l13800:
 17884                           
 17885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 17886                           ;stkvar	_w @ sp[(-20)+16]
 17887  016AB4  0EFC               	movlw	-4
 17888  016AB6  006F FF8F FFE6     	movff	plusw1,postinc1
 17889  016ABC  006F FF8F FFE6     	movff	plusw1,postinc1
 17890                           
 17891                           ;stkvar	_i @ sp[(-22)+14]
 17892  016AC2  0E94               	movlw	low _dbuf
 17893  016AC4  6E0B               	movwf	(btemp+10)^0,c
 17894  016AC6  0E03               	movlw	high _dbuf
 17895  016AC8  6E0C               	movwf	(btemp+11)^0,c
 17896  016ACA  0EF8               	movlw	-8
 17897  016ACC  50E3               	movf	plusw1,w,c
 17898  016ACE  260B               	addwf	(btemp+10)^0,f,c
 17899  016AD0  0EF9               	movlw	-7
 17900  016AD2  50E3               	movf	plusw1,w,c
 17901  016AD4  220C               	addwfc	(btemp+11)^0,f,c
 17902  016AD6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17903  016ADC  0060  F033  FFE6   	movff	btemp+11,postinc1
 17904                           
 17905                           ;stkvar	_fp @ sp[(-24)+-2]
 17906  016AE2  0EE6               	movlw	-26
 17907  016AE4  006F FF8F FFE6     	movff	plusw1,postinc1
 17908  016AEA  006F FF8F FFE6     	movff	plusw1,postinc1
 17909  016AF0  EC82  F0D4         	call	_pad	;wreg free
 17910                           
 17911                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 17912  016AF4  0EE1               	movlw	225
 17913  016AF6  26E1               	addwf	fsr1l,f,c
 17914  016AF8  0EFF               	movlw	255
 17915  016AFA  22E2               	addwfc	fsr1h,f,c
 17916  016AFC  0012               	return		;funcret
 17917  016AFE                     __end_of_xtoa:
 17918                           	opt callstack 0
 17919                           
 17920 ;; *************** function _toupper *****************
 17921 ;; Defined at:
 17922 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 17923 ;; Parameters:    Size  Location     Type
 17924 ;;  c               2  [STACK] int 
 17925 ;; Auto vars:     Size  Location     Type
 17926 ;;		None
 17927 ;; Return value:  Size  Location     Type
 17928 ;;                  2  [STACK] int 
 17929 ;; Registers used:
 17930 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 17931 ;; Tracked objects:
 17932 ;;		On entry : 0/3
 17933 ;;		On exit  : 0/0
 17934 ;;		Unchanged: 0/0
 17935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17940 ;;Total ram usage:        0 bytes
 17941 ;; Hardware stack levels used:    1
 17942 ;; Hardware stack levels required when called:   16
 17943 ;; This function calls:
 17944 ;;		_islower
 17945 ;; This function is called by:
 17946 ;;		_xtoa
 17947 ;; This function uses a reentrant model
 17948 ;;
 17949                           
 17950                           	psect	text69
 17951  01BD1A                     __ptext69:
 17952                           	opt callstack 0
 17953  01BD1A                     _toupper:
 17954                           	opt callstack 0
 17955                           
 17956                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17957  01BD1A  52E6               	movf	postinc1,f,c
 17958  01BD1C  52E6               	movf	postinc1,f,c
 17959                           
 17960                           ;stkvar	_c @ sp[(-2)+-2]
 17961                           
 17962                           ;incstack = 0
 17963 ;; hardware stack exceeded
 17964  01BD1E  0EFC               	movlw	-4
 17965  01BD20  50E3               	movf	plusw1,w,c
 17966  01BD22  0F9F               	addlw	159
 17967  01BD24  6E0B               	movwf	(btemp+10)^0,c
 17968  01BD26  0EFD               	movlw	-3
 17969  01BD28  006F FF8C  F00C    	movff	plusw1,btemp+11
 17970  01BD2E  0EFF               	movlw	255
 17971  01BD30  220C               	addwfc	(btemp+11)^0,f,c
 17972  01BD32  500C               	movf	(btemp+11)^0,w,c
 17973  01BD34  E106               	bnz	u6820
 17974  01BD36  0E1A               	movlw	26
 17975  01BD38  5C0B               	subwf	(btemp+10)^0,w,c
 17976  01BD3A  B0D8               	btfsc	status,0,c
 17977  01BD3C  D002               	goto	u6820
 17978  01BD3E  0E01               	movlw	1
 17979  01BD40  D001               	goto	u6830
 17980  01BD42                     u6820:
 17981  01BD42  0E00               	movlw	0
 17982  01BD44                     u6830:
 17983  01BD44  6E0B               	movwf	(btemp+10)^0,c
 17984  01BD46  6A0C               	clrf	(btemp+11)^0,c
 17985                           
 17986                           ;stkvar	_toupper$7638 @ sp[(-2)+0]
 17987  01BD48  0EFE               	movlw	-2
 17988  01BD4A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17989  01BD50  0EFF               	movlw	-1
 17990  01BD52  0060  F033  FFE3   	movff	btemp+11,plusw1
 17991                           
 17992                           ;stkvar	_toupper$7638 @ sp[(-2)+0]
 17993  01BD58  0EFE               	movlw	-2
 17994  01BD5A  006F FF8C  F001    	movff	plusw1,btemp
 17995  01BD60  0EFF               	movlw	-1
 17996  01BD62  50E3               	movf	plusw1,w,c
 17997  01BD64  1001               	iorwf	btemp^0,w,c
 17998  01BD66  B4D8               	btfsc	status,2,c
 17999  01BD68  D00D               	goto	l8910
 18000                           
 18001                           ;stkvar	_c @ sp[(-2)+-2]
 18002  01BD6A  0EFC               	movlw	-4
 18003  01BD6C  006F FF8C  F001    	movff	plusw1,btemp
 18004  01BD72  0EFD               	movlw	-3
 18005  01BD74  006F FF8C  F002    	movff	plusw1,btemp+1
 18006  01BD7A  0E5F               	movlw	95
 18007  01BD7C  1601               	andwf	btemp^0,f,c
 18008  01BD7E  0E00               	movlw	0
 18009  01BD80  1602               	andwf	(btemp+1)^0,f,c
 18010  01BD82  D008               	goto	l3763
 18011  01BD84                     l8910:
 18012                           
 18013                           ;stkvar	_c @ sp[(-2)+-2]
 18014  01BD84  0EFC               	movlw	-4
 18015  01BD86  006F FF8C  F001    	movff	plusw1,btemp
 18016  01BD8C  0EFD               	movlw	-3
 18017  01BD8E  006F FF8C  F002    	movff	plusw1,btemp+1
 18018  01BD94                     l3763:
 18019                           
 18020                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18021  01BD94  52E5               	movf	postdec1,f,c
 18022  01BD96  52E5               	movf	postdec1,f,c
 18023  01BD98  52E5               	movf	postdec1,f,c
 18024  01BD9A  52E5               	movf	postdec1,f,c
 18025  01BD9C  0012               	return		;funcret
 18026  01BD9E                     __end_of_toupper:
 18027                           	opt callstack 0
 18028                           
 18029 ;; *************** function _islower *****************
 18030 ;; Defined at:
 18031 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 18032 ;; Parameters:    Size  Location     Type
 18033 ;;  c               2  [STACK] int 
 18034 ;; Auto vars:     Size  Location     Type
 18035 ;;		None
 18036 ;; Return value:  Size  Location     Type
 18037 ;;                  2  [STACK] int 
 18038 ;; Registers used:
 18039 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18040 ;; Tracked objects:
 18041 ;;		On entry : 0/0
 18042 ;;		On exit  : 0/0
 18043 ;;		Unchanged: 0/0
 18044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18049 ;;Total ram usage:        0 bytes
 18050 ;; Hardware stack levels used:    1
 18051 ;; Hardware stack levels required when called:   15
 18052 ;; This function calls:
 18053 ;;		Nothing
 18054 ;; This function is called by:
 18055 ;;		_toupper
 18056 ;; This function uses a reentrant model
 18057 ;;
 18058                           
 18059                           	psect	text70
 18060  01CD3C                     __ptext70:
 18061                           	opt callstack 0
 18062  01CD3C                     _islower:
 18063                           	opt callstack 0
 18064                           
 18065                           ;stkvar	_c @ sp[(0)+-2]
 18066                           
 18067                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18068                           ;incstack = 0
 18069 ;; hardware stack exceeded
 18070  01CD3C  0EFE               	movlw	-2
 18071  01CD3E  50E3               	movf	plusw1,w,c
 18072  01CD40  0F9F               	addlw	159
 18073  01CD42  6E0B               	movwf	(btemp+10)^0,c
 18074  01CD44  0EFF               	movlw	-1
 18075  01CD46  006F FF8C  F00C    	movff	plusw1,btemp+11
 18076  01CD4C  0EFF               	movlw	255
 18077  01CD4E  220C               	addwfc	(btemp+11)^0,f,c
 18078  01CD50  500C               	movf	(btemp+11)^0,w,c
 18079  01CD52  E106               	bnz	u6460
 18080  01CD54  0E1A               	movlw	26
 18081  01CD56  5C0B               	subwf	(btemp+10)^0,w,c
 18082  01CD58  B0D8               	btfsc	status,0,c
 18083  01CD5A  D002               	goto	u6460
 18084  01CD5C  0E01               	movlw	1
 18085  01CD5E  D001               	goto	u6470
 18086  01CD60                     u6460:
 18087  01CD60  0E00               	movlw	0
 18088  01CD62                     u6470:
 18089  01CD62  6E01               	movwf	btemp^0,c
 18090  01CD64  6A02               	clrf	(btemp+1)^0,c
 18091                           
 18092                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18093  01CD66  52E5               	movf	postdec1,f,c
 18094  01CD68  52E5               	movf	postdec1,f,c
 18095  01CD6A  0012               	return		;funcret
 18096  01CD6C                     __end_of_islower:
 18097                           	opt callstack 0
 18098                           
 18099 ;; *************** function _isalpha *****************
 18100 ;; Defined at:
 18101 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 18102 ;; Parameters:    Size  Location     Type
 18103 ;;  c               2  [STACK] int 
 18104 ;; Auto vars:     Size  Location     Type
 18105 ;;		None
 18106 ;; Return value:  Size  Location     Type
 18107 ;;                  2  [STACK] int 
 18108 ;; Registers used:
 18109 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 18110 ;; Tracked objects:
 18111 ;;		On entry : 0/0
 18112 ;;		On exit  : 0/0
 18113 ;;		Unchanged: 0/0
 18114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18119 ;;Total ram usage:        0 bytes
 18120 ;; Hardware stack levels used:    1
 18121 ;; Hardware stack levels required when called:   15
 18122 ;; This function calls:
 18123 ;;		Nothing
 18124 ;; This function is called by:
 18125 ;;		_xtoa
 18126 ;; This function uses a reentrant model
 18127 ;;
 18128                           
 18129                           	psect	text71
 18130  01C8B2                     __ptext71:
 18131                           	opt callstack 0
 18132  01C8B2                     _isalpha:
 18133                           	opt callstack 0
 18134                           
 18135                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18136                           ;incstack = 0
 18137 ;; hardware stack exceeded
 18138  01C8B2  0E9F               	movlw	159
 18139  01C8B4  6E0B               	movwf	(btemp+10)^0,c
 18140  01C8B6  0EFF               	movlw	255
 18141  01C8B8  6E0C               	movwf	(btemp+11)^0,c
 18142                           
 18143                           ;stkvar	_c @ sp[(0)+-2]
 18144  01C8BA  0EFE               	movlw	-2
 18145  01C8BC  006F FF8C  F009    	movff	plusw1,btemp+8
 18146  01C8C2  0EFF               	movlw	-1
 18147  01C8C4  006F FF8C  F00A    	movff	plusw1,btemp+9
 18148  01C8CA  0E20               	movlw	32
 18149  01C8CC  1209               	iorwf	(btemp+8)^0,f,c
 18150  01C8CE  0E00               	movlw	0
 18151  01C8D0  120A               	iorwf	(btemp+9)^0,f,c
 18152  01C8D2  500B               	movf	(btemp+10)^0,w,c
 18153  01C8D4  2609               	addwf	(btemp+8)^0,f,c
 18154  01C8D6  500C               	movf	(btemp+11)^0,w,c
 18155  01C8D8  220A               	addwfc	(btemp+9)^0,f,c
 18156  01C8DA  500A               	movf	(btemp+9)^0,w,c
 18157  01C8DC  E106               	bnz	u6800
 18158  01C8DE  0E1A               	movlw	26
 18159  01C8E0  5C09               	subwf	(btemp+8)^0,w,c
 18160  01C8E2  B0D8               	btfsc	status,0,c
 18161  01C8E4  D002               	goto	u6800
 18162  01C8E6  0E01               	movlw	1
 18163  01C8E8  D001               	goto	u6810
 18164  01C8EA                     u6800:
 18165  01C8EA  0E00               	movlw	0
 18166  01C8EC                     u6810:
 18167  01C8EC  6E01               	movwf	btemp^0,c
 18168  01C8EE  6A02               	clrf	(btemp+1)^0,c
 18169                           
 18170                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18171  01C8F0  52E5               	movf	postdec1,f,c
 18172  01C8F2  52E5               	movf	postdec1,f,c
 18173  01C8F4  0012               	return		;funcret
 18174  01C8F6                     __end_of_isalpha:
 18175                           	opt callstack 0
 18176                           
 18177 ;; *************** function _utoa *****************
 18178 ;; Defined at:
 18179 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18180 ;; Parameters:    Size  Location     Type
 18181 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18182 ;;		 -> f(6), NULL(0), 
 18183 ;;  d               8  [STACK] unsigned long long 
 18184 ;; Auto vars:     Size  Location     Type
 18185 ;;  n               8  [STACK] unsigned long long 
 18186 ;;  i               2  [STACK] int 
 18187 ;;  w               2  [STACK] int 
 18188 ;;  p               2  [STACK] int 
 18189 ;; Return value:  Size  Location     Type
 18190 ;;                  2  [STACK] int 
 18191 ;; Registers used:
 18192 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 18193 ;; Tracked objects:
 18194 ;;		On entry : 0/0
 18195 ;;		On exit  : 0/0
 18196 ;;		Unchanged: 0/0
 18197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18202 ;;Total ram usage:        0 bytes
 18203 ;; Hardware stack levels used:    1
 18204 ;; Hardware stack levels required when called:   20
 18205 ;; This function calls:
 18206 ;;		___lodiv
 18207 ;;		___lomod
 18208 ;;		_pad
 18209 ;; This function is called by:
 18210 ;;		_vfpfcnvrt
 18211 ;; This function uses a reentrant model
 18212 ;;
 18213                           
 18214                           	psect	text72
 18215  0171BA                     __ptext72:
 18216                           	opt callstack 0
 18217  0171BA                     _utoa:
 18218                           	opt callstack 0
 18219                           
 18220                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 18221  0171BA  0E0E               	movlw	14
 18222  0171BC  26E1               	addwf	fsr1l,f,c
 18223  0171BE  0E00               	movlw	0
 18224  0171C0  22E2               	addwfc	fsr1h,f,c
 18225                           
 18226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 18227                           
 18228                           ;incstack = 0
 18229 ;; hardware stack exceeded
 18230  0171C2  AE3D               	btfss	(_prec+1)^0,7,c
 18231                           
 18232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 18233  0171C4  923E               	bcf	_flags^0,1,c
 18234                           
 18235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 18236  0171C6  BE3D               	btfsc	(_prec+1)^0,7,c
 18237  0171C8  D005               	goto	u12880
 18238  0171CA  503D               	movf	(_prec+1)^0,w,c
 18239  0171CC  E110               	bnz	l13700
 18240  0171CE  043C               	decf	_prec^0,w,c
 18241  0171D0  B0D8               	btfsc	status,0,c
 18242  0171D2  D00D               	goto	l13700
 18243  0171D4                     u12880:
 18244  0171D4  0E01               	movlw	1
 18245  0171D6  6E0B               	movwf	(btemp+10)^0,c
 18246  0171D8  0E00               	movlw	0
 18247  0171DA  6E0C               	movwf	(btemp+11)^0,c
 18248                           
 18249                           ;stkvar	_p @ sp[(-14)+12]
 18250  0171DC  0EFE               	movlw	-2
 18251  0171DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18252  0171E4  0EFF               	movlw	-1
 18253  0171E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 18254  0171EC  D008               	goto	l2581
 18255  0171EE                     l13700:
 18256                           
 18257                           ;stkvar	_p @ sp[(-14)+12]
 18258  0171EE  0EFE               	movlw	-2
 18259  0171F0  0060  F0F3  FFE3   	movff	_prec,plusw1
 18260  0171F6  0EFF               	movlw	-1
 18261  0171F8  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 18262  0171FE                     l2581:
 18263                           
 18264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 18265                           ;stkvar	_w @ sp[(-14)+10]
 18266  0171FE  0EFC               	movlw	-4
 18267  017200  0060  F0EB  FFE3   	movff	_width,plusw1
 18268  017206  0EFD               	movlw	-3
 18269  017208  0060  F0EF  FFE3   	movff	_width+1,plusw1
 18270                           
 18271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 18272                           ;stkvar	_d @ sp[(-14)+-10]
 18273  01720E  0EE8               	movlw	232
 18274  017210  24E1               	addwf	fsr1l,w,c
 18275  017212  6ED9               	movwf	fsr2l,c
 18276  017214  0EFF               	movlw	255
 18277  017216  20E2               	addwfc	fsr1h,w,c
 18278  017218  6EDA               	movwf	fsr2h,c
 18279                           
 18280                           ;stkvar	_n @ sp[(-14)+0]
 18281  01721A  0E08               	movlw	8
 18282  01721C  6E01               	movwf	btemp^0,c
 18283  01721E  0EF2               	movlw	-14
 18284  017220                     us1289999:
 18285  017220  006F FF7B FFE3     	movff	postinc2,plusw1
 18286  017226  28E8               	incf	wreg,w,c
 18287  017228  2E01               	decfsz	btemp^0,f,c
 18288  01722A  D7FA               	bra	us1289999
 18289                           
 18290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 18291  01722C  0E4F               	movlw	79
 18292  01722E  6E0B               	movwf	(btemp+10)^0,c
 18293  017230  0E00               	movlw	0
 18294  017232  6E0C               	movwf	(btemp+11)^0,c
 18295                           
 18296                           ;stkvar	_i @ sp[(-14)+8]
 18297  017234  0EFA               	movlw	-6
 18298  017236  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18299  01723C  0EFB               	movlw	-5
 18300  01723E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18301                           
 18302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 18303  017244  0103               	movlb	3	; () banked
 18304  017246  6BE3               	clrf	(_dbuf+79)& (0+255),b
 18305                           
 18306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 18307  017248  D0FB               	goto	l13718
 18308  01724A                     l13708:
 18309                           
 18310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 18311                           ;stkvar	_i @ sp[(-14)+8]
 18312  01724A  50E1               	movf	fsr1l,w,c
 18313  01724C  0FFA               	addlw	-6
 18314  01724E  6ED9               	movwf	fsr2l,c
 18315  017250  50E2               	movf	fsr1h,w,c
 18316  017252  6EDA               	movwf	fsr2h,c
 18317  017254  0EFF               	movlw	255
 18318  017256  22DA               	addwfc	fsr2h,f,c
 18319  017258  06DE               	decf	postinc2,f,c
 18320  01725A  0E00               	movlw	0
 18321  01725C  5ADD               	subwfb	postdec2,f,c
 18322                           
 18323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 18324  01725E  0E0A               	movlw	10
 18325  017260  6EE6               	movwf	postinc1,c
 18326  017262  0E00               	movlw	0
 18327  017264  6EE6               	movwf	postinc1,c
 18328  017266  0E00               	movlw	0
 18329  017268  6EE6               	movwf	postinc1,c
 18330  01726A  0E00               	movlw	0
 18331  01726C  6EE6               	movwf	postinc1,c
 18332  01726E  0E00               	movlw	0
 18333  017270  6EE6               	movwf	postinc1,c
 18334  017272  0E00               	movlw	0
 18335  017274  6EE6               	movwf	postinc1,c
 18336  017276  0E00               	movlw	0
 18337  017278  6EE6               	movwf	postinc1,c
 18338  01727A  0E00               	movlw	0
 18339  01727C  6EE6               	movwf	postinc1,c
 18340                           
 18341                           ;stkvar	_n @ sp[(-22)+0]
 18342  01727E  50E1               	movf	fsr1l,w,c
 18343  017280  0FEA               	addlw	-22
 18344  017282  6ED9               	movwf	fsr2l,c
 18345  017284  50E2               	movf	fsr1h,w,c
 18346  017286  6EDA               	movwf	fsr2h,c
 18347  017288  0EFF               	movlw	255
 18348  01728A  22DA               	addwfc	fsr2h,f,c
 18349  01728C  006F FF7B FFE6     	movff	postinc2,postinc1
 18350  017292  006F FF7B FFE6     	movff	postinc2,postinc1
 18351  017298  006F FF7B FFE6     	movff	postinc2,postinc1
 18352  01729E  006F FF7B FFE6     	movff	postinc2,postinc1
 18353  0172A4  006F FF7B FFE6     	movff	postinc2,postinc1
 18354  0172AA  006F FF7B FFE6     	movff	postinc2,postinc1
 18355  0172B0  006F FF7B FFE6     	movff	postinc2,postinc1
 18356  0172B6  006F FF7B FFE6     	movff	postinc2,postinc1
 18357  0172BC  EC83  F0D0         	call	___lomod	;wreg free
 18358  0172C0  52E5               	movf	postdec1,f,c
 18359  0172C2  006F FF9C  F018    	movff	indf1,btemp+23
 18360  0172C8  52E5               	movf	postdec1,f,c
 18361  0172CA  006F FF9C  F017    	movff	indf1,btemp+22
 18362  0172D0  52E5               	movf	postdec1,f,c
 18363  0172D2  006F FF9C  F016    	movff	indf1,btemp+21
 18364  0172D8  52E5               	movf	postdec1,f,c
 18365  0172DA  006F FF9C  F015    	movff	indf1,btemp+20
 18366  0172E0  52E5               	movf	postdec1,f,c
 18367  0172E2  006F FF9C  F014    	movff	indf1,btemp+19
 18368  0172E8  52E5               	movf	postdec1,f,c
 18369  0172EA  006F FF9C  F013    	movff	indf1,btemp+18
 18370  0172F0  52E5               	movf	postdec1,f,c
 18371  0172F2  006F FF9C  F012    	movff	indf1,btemp+17
 18372  0172F8  52E5               	movf	postdec1,f,c
 18373  0172FA  006F FF9C  F011    	movff	indf1,btemp+16
 18374  017300  0EF8               	movlw	248
 18375  017302  26E1               	addwf	fsr1l,f,c
 18376  017304  0EFF               	movlw	255
 18377  017306  22E2               	addwfc	fsr1h,f,c
 18378  017308  0E30               	movlw	48
 18379  01730A  2611               	addwf	(btemp+16)^0,f,c
 18380                           
 18381                           ;stkvar	_i @ sp[(-14)+8]
 18382  01730C  0EFA               	movlw	-6
 18383  01730E  006F FF8C  F00B    	movff	plusw1,btemp+10
 18384  017314  0EFB               	movlw	-5
 18385  017316  006F FF8C  F00C    	movff	plusw1,btemp+11
 18386  01731C  0E94               	movlw	low _dbuf
 18387  01731E  240B               	addwf	(btemp+10)^0,w,c
 18388  017320  6ED9               	movwf	fsr2l,c
 18389  017322  0E03               	movlw	high _dbuf
 18390  017324  200C               	addwfc	(btemp+11)^0,w,c
 18391  017326  6EDA               	movwf	fsr2h,c
 18392  017328  0060  F047  FFDF   	movff	btemp+16,indf2
 18393                           
 18394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 18395                           ;stkvar	_p @ sp[(-14)+12]
 18396  01732E  50E1               	movf	fsr1l,w,c
 18397  017330  0FFE               	addlw	-2
 18398  017332  6ED9               	movwf	fsr2l,c
 18399  017334  50E2               	movf	fsr1h,w,c
 18400  017336  6EDA               	movwf	fsr2h,c
 18401  017338  0EFF               	movlw	255
 18402  01733A  22DA               	addwfc	fsr2h,f,c
 18403  01733C  06DE               	decf	postinc2,f,c
 18404  01733E  0E00               	movlw	0
 18405  017340  5ADD               	subwfb	postdec2,f,c
 18406                           
 18407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 18408                           ;stkvar	_w @ sp[(-14)+10]
 18409  017342  50E1               	movf	fsr1l,w,c
 18410  017344  0FFC               	addlw	-4
 18411  017346  6ED9               	movwf	fsr2l,c
 18412  017348  50E2               	movf	fsr1h,w,c
 18413  01734A  6EDA               	movwf	fsr2h,c
 18414  01734C  0EFF               	movlw	255
 18415  01734E  22DA               	addwfc	fsr2h,f,c
 18416  017350  06DE               	decf	postinc2,f,c
 18417  017352  0E00               	movlw	0
 18418  017354  5ADD               	subwfb	postdec2,f,c
 18419                           
 18420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 18421  017356  0E0A               	movlw	10
 18422  017358  6EE6               	movwf	postinc1,c
 18423  01735A  0E00               	movlw	0
 18424  01735C  6EE6               	movwf	postinc1,c
 18425  01735E  0E00               	movlw	0
 18426  017360  6EE6               	movwf	postinc1,c
 18427  017362  0E00               	movlw	0
 18428  017364  6EE6               	movwf	postinc1,c
 18429  017366  0E00               	movlw	0
 18430  017368  6EE6               	movwf	postinc1,c
 18431  01736A  0E00               	movlw	0
 18432  01736C  6EE6               	movwf	postinc1,c
 18433  01736E  0E00               	movlw	0
 18434  017370  6EE6               	movwf	postinc1,c
 18435  017372  0E00               	movlw	0
 18436  017374  6EE6               	movwf	postinc1,c
 18437                           
 18438                           ;stkvar	_n @ sp[(-22)+0]
 18439  017376  50E1               	movf	fsr1l,w,c
 18440  017378  0FEA               	addlw	-22
 18441  01737A  6ED9               	movwf	fsr2l,c
 18442  01737C  50E2               	movf	fsr1h,w,c
 18443  01737E  6EDA               	movwf	fsr2h,c
 18444  017380  0EFF               	movlw	255
 18445  017382  22DA               	addwfc	fsr2h,f,c
 18446  017384  006F FF7B FFE6     	movff	postinc2,postinc1
 18447  01738A  006F FF7B FFE6     	movff	postinc2,postinc1
 18448  017390  006F FF7B FFE6     	movff	postinc2,postinc1
 18449  017396  006F FF7B FFE6     	movff	postinc2,postinc1
 18450  01739C  006F FF7B FFE6     	movff	postinc2,postinc1
 18451  0173A2  006F FF7B FFE6     	movff	postinc2,postinc1
 18452  0173A8  006F FF7B FFE6     	movff	postinc2,postinc1
 18453  0173AE  006F FF7B FFE6     	movff	postinc2,postinc1
 18454  0173B4  ECFA  F0CA         	call	___lodiv	;wreg free
 18455  0173B8  52E5               	movf	postdec1,f,c
 18456  0173BA  006F FF9C  F018    	movff	indf1,btemp+23
 18457  0173C0  52E5               	movf	postdec1,f,c
 18458  0173C2  006F FF9C  F017    	movff	indf1,btemp+22
 18459  0173C8  52E5               	movf	postdec1,f,c
 18460  0173CA  006F FF9C  F016    	movff	indf1,btemp+21
 18461  0173D0  52E5               	movf	postdec1,f,c
 18462  0173D2  006F FF9C  F015    	movff	indf1,btemp+20
 18463  0173D8  52E5               	movf	postdec1,f,c
 18464  0173DA  006F FF9C  F014    	movff	indf1,btemp+19
 18465  0173E0  52E5               	movf	postdec1,f,c
 18466  0173E2  006F FF9C  F013    	movff	indf1,btemp+18
 18467  0173E8  52E5               	movf	postdec1,f,c
 18468  0173EA  006F FF9C  F012    	movff	indf1,btemp+17
 18469  0173F0  52E5               	movf	postdec1,f,c
 18470  0173F2  006F FF9C  F011    	movff	indf1,btemp+16
 18471  0173F8  0EF8               	movlw	248
 18472  0173FA  26E1               	addwf	fsr1l,f,c
 18473  0173FC  0EFF               	movlw	255
 18474  0173FE  22E2               	addwfc	fsr1h,f,c
 18475                           
 18476                           ;stkvar	_n @ sp[(-14)+0]
 18477  017400  0EF2               	movlw	-14
 18478  017402  0060  F047  FFE3   	movff	btemp+16,plusw1
 18479  017408  0EF3               	movlw	-13
 18480  01740A  0060  F04B  FFE3   	movff	btemp+17,plusw1
 18481  017410  0EF4               	movlw	-12
 18482  017412  0060  F04F  FFE3   	movff	btemp+18,plusw1
 18483  017418  0EF5               	movlw	-11
 18484  01741A  0060  F053  FFE3   	movff	btemp+19,plusw1
 18485  017420  0EF6               	movlw	-10
 18486  017422  0060  F057  FFE3   	movff	btemp+20,plusw1
 18487  017428  0EF7               	movlw	-9
 18488  01742A  0060  F05B  FFE3   	movff	btemp+21,plusw1
 18489  017430  0EF8               	movlw	-8
 18490  017432  0060  F05F  FFE3   	movff	btemp+22,plusw1
 18491  017438  0EF9               	movlw	-7
 18492  01743A  0060  F063  FFE3   	movff	btemp+23,plusw1
 18493  017440                     l13718:
 18494                           
 18495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 18496                           ;stkvar	_i @ sp[(-14)+8]
 18497  017440  0EFA               	movlw	-6
 18498  017442  006F FF8C  F001    	movff	plusw1,btemp
 18499  017448  0EFB               	movlw	-5
 18500  01744A  50E3               	movf	plusw1,w,c
 18501  01744C  1001               	iorwf	btemp^0,w,c
 18502  01744E  B4D8               	btfsc	status,2,c
 18503  017450  D02F               	goto	u12940
 18504                           
 18505                           ;stkvar	_n @ sp[(-14)+0]
 18506  017452  0EF2               	movlw	-14
 18507  017454  50E3               	movf	plusw1,w,c
 18508  017456  E115               	bnz	u12911
 18509  017458  0EF3               	movlw	-13
 18510  01745A  50E3               	movf	plusw1,w,c
 18511  01745C  E112               	bnz	u12911
 18512  01745E  0EF4               	movlw	-12
 18513  017460  50E3               	movf	plusw1,w,c
 18514  017462  E10F               	bnz	u12911
 18515  017464  0EF5               	movlw	-11
 18516  017466  50E3               	movf	plusw1,w,c
 18517  017468  E10C               	bnz	u12911
 18518  01746A  0EF6               	movlw	-10
 18519  01746C  50E3               	movf	plusw1,w,c
 18520  01746E  E109               	bnz	u12911
 18521  017470  0EF7               	movlw	-9
 18522  017472  50E3               	movf	plusw1,w,c
 18523  017474  E106               	bnz	u12911
 18524  017476  0EF8               	movlw	-8
 18525  017478  50E3               	movf	plusw1,w,c
 18526  01747A  E103               	bnz	u12911
 18527  01747C  0EF9               	movlw	-7
 18528  01747E  50E3               	movf	plusw1,w,c
 18529  017480  A4D8               	btfss	status,2,c
 18530  017482                     u12911:
 18531  017482  D6E3               	goto	l13708
 18532                           
 18533                           ;stkvar	_p @ sp[(-14)+12]
 18534  017484  0EFF               	movlw	-1
 18535  017486  BEE3               	btfsc	plusw1,7,c
 18536  017488  D007               	goto	u12920
 18537  01748A  0EFF               	movlw	-1
 18538  01748C  50E3               	movf	plusw1,w,c
 18539  01748E  E103               	bnz	u12921
 18540  017490  0EFE               	movlw	-2
 18541  017492  04E3               	decf	plusw1,w,c
 18542  017494  B0D8               	btfsc	status,0,c
 18543  017496                     u12921:
 18544  017496  D6D9               	goto	l13708
 18545  017498                     u12920:
 18546                           
 18547                           ;stkvar	_w @ sp[(-14)+10]
 18548  017498  0EFD               	movlw	-3
 18549  01749A  BEE3               	btfsc	plusw1,7,c
 18550  01749C  D009               	goto	u12940
 18551  01749E  0EFD               	movlw	-3
 18552  0174A0  50E3               	movf	plusw1,w,c
 18553  0174A2  E104               	bnz	u12930
 18554  0174A4  0EFC               	movlw	-4
 18555  0174A6  04E3               	decf	plusw1,w,c
 18556  0174A8  A0D8               	btfss	status,0,c
 18557  0174AA  D002               	goto	u12940
 18558  0174AC                     u12930:
 18559  0174AC  B23E               	btfsc	_flags^0,1,c
 18560  0174AE  D6CD               	goto	l13708
 18561  0174B0                     u12940:
 18562                           
 18563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 18564                           ;stkvar	_w @ sp[(-14)+10]
 18565  0174B0  0EFC               	movlw	-4
 18566  0174B2  006F FF8F FFE6     	movff	plusw1,postinc1
 18567  0174B8  006F FF8F FFE6     	movff	plusw1,postinc1
 18568                           
 18569                           ;stkvar	_i @ sp[(-16)+8]
 18570  0174BE  0E94               	movlw	low _dbuf
 18571  0174C0  6E0B               	movwf	(btemp+10)^0,c
 18572  0174C2  0E03               	movlw	high _dbuf
 18573  0174C4  6E0C               	movwf	(btemp+11)^0,c
 18574  0174C6  0EF8               	movlw	-8
 18575  0174C8  50E3               	movf	plusw1,w,c
 18576  0174CA  260B               	addwf	(btemp+10)^0,f,c
 18577  0174CC  0EF9               	movlw	-7
 18578  0174CE  50E3               	movf	plusw1,w,c
 18579  0174D0  220C               	addwfc	(btemp+11)^0,f,c
 18580  0174D2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18581  0174D8  0060  F033  FFE6   	movff	btemp+11,postinc1
 18582                           
 18583                           ;stkvar	_fp @ sp[(-18)+-2]
 18584  0174DE  0EEC               	movlw	-20
 18585  0174E0  006F FF8F FFE6     	movff	plusw1,postinc1
 18586  0174E6  006F FF8F FFE6     	movff	plusw1,postinc1
 18587  0174EC  EC82  F0D4         	call	_pad	;wreg free
 18588                           
 18589                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 18590  0174F0  0EE8               	movlw	232
 18591  0174F2  26E1               	addwf	fsr1l,f,c
 18592  0174F4  0EFF               	movlw	255
 18593  0174F6  22E2               	addwfc	fsr1h,f,c
 18594  0174F8  0012               	return		;funcret
 18595  0174FA                     __end_of_utoa:
 18596                           	opt callstack 0
 18597                           
 18598 ;; *************** function ___lomod *****************
 18599 ;; Defined at:
 18600 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 18601 ;; Parameters:    Size  Location     Type
 18602 ;;  dividend        8  [STACK] unsigned long long 
 18603 ;;  divisor         8  [STACK] unsigned long long 
 18604 ;; Auto vars:     Size  Location     Type
 18605 ;;  counter         1  [STACK] unsigned char 
 18606 ;; Return value:  Size  Location     Type
 18607 ;;                  8  [STACK] unsigned long long 
 18608 ;; Registers used:
 18609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18610 ;; Tracked objects:
 18611 ;;		On entry : 0/3
 18612 ;;		On exit  : 0/0
 18613 ;;		Unchanged: 0/0
 18614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18619 ;;Total ram usage:        0 bytes
 18620 ;; Hardware stack levels used:    1
 18621 ;; Hardware stack levels required when called:   15
 18622 ;; This function calls:
 18623 ;;		Nothing
 18624 ;; This function is called by:
 18625 ;;		_utoa
 18626 ;; This function uses a reentrant model
 18627 ;;
 18628                           
 18629                           	psect	text73
 18630  01A106                     __ptext73:
 18631                           	opt callstack 0
 18632  01A106                     ___lomod:
 18633                           	opt callstack 0
 18634                           
 18635                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18636  01A106  52E6               	movf	postinc1,f,c
 18637                           
 18638                           ;stkvar	_divisor @ sp[(-1)+-16]
 18639                           
 18640                           ;incstack = 0
 18641 ;; hardware stack exceeded
 18642  01A108  0EEF               	movlw	-17
 18643  01A10A  50E3               	movf	plusw1,w,c
 18644  01A10C  E116               	bnz	u7950
 18645  01A10E  0EF0               	movlw	-16
 18646  01A110  50E3               	movf	plusw1,w,c
 18647  01A112  E113               	bnz	u7950
 18648  01A114  0EF1               	movlw	-15
 18649  01A116  50E3               	movf	plusw1,w,c
 18650  01A118  E110               	bnz	u7950
 18651  01A11A  0EF2               	movlw	-14
 18652  01A11C  50E3               	movf	plusw1,w,c
 18653  01A11E  E10D               	bnz	u7950
 18654  01A120  0EF3               	movlw	-13
 18655  01A122  50E3               	movf	plusw1,w,c
 18656  01A124  E10A               	bnz	u7950
 18657  01A126  0EF4               	movlw	-12
 18658  01A128  50E3               	movf	plusw1,w,c
 18659  01A12A  E107               	bnz	u7950
 18660  01A12C  0EF5               	movlw	-11
 18661  01A12E  50E3               	movf	plusw1,w,c
 18662  01A130  E104               	bnz	u7950
 18663  01A132  0EF6               	movlw	-10
 18664  01A134  50E3               	movf	plusw1,w,c
 18665  01A136  B4D8               	btfsc	status,2,c
 18666  01A138  D075               	goto	u7980
 18667  01A13A                     u7950:
 18668                           
 18669                           ;stkvar	_counter @ sp[(-1)+0]
 18670  01A13A  0EFF               	movlw	-1
 18671  01A13C  6AE3               	clrf	plusw1,c
 18672  01A13E  D012               	goto	L19
 18673  01A140                     l9520:
 18674                           
 18675                           ;stkvar	_divisor @ sp[(-1)+-16]
 18676  01A140  90D8               	bcf	status,0,c
 18677  01A142  0EEF               	movlw	-17
 18678  01A144  36E3               	rlcf	plusw1,f,c
 18679  01A146  0EF0               	movlw	-16
 18680  01A148  36E3               	rlcf	plusw1,f,c
 18681  01A14A  0EF1               	movlw	-15
 18682  01A14C  36E3               	rlcf	plusw1,f,c
 18683  01A14E  0EF2               	movlw	-14
 18684  01A150  36E3               	rlcf	plusw1,f,c
 18685  01A152  0EF3               	movlw	-13
 18686  01A154  36E3               	rlcf	plusw1,f,c
 18687  01A156  0EF4               	movlw	-12
 18688  01A158  36E3               	rlcf	plusw1,f,c
 18689  01A15A  0EF5               	movlw	-11
 18690  01A15C  36E3               	rlcf	plusw1,f,c
 18691  01A15E  0EF6               	movlw	-10
 18692  01A160  36E3               	rlcf	plusw1,f,c
 18693                           
 18694                           ;stkvar	_counter @ sp[(-1)+0]
 18695  01A162  0EFF               	movlw	-1
 18696  01A164                     L19:
 18697  01A164  2AE3               	incf	plusw1,f,c
 18698                           
 18699                           ;stkvar	_divisor @ sp[(-1)+-16]
 18700  01A166  0EF6               	movlw	-10
 18701  01A168  AEE3               	btfss	plusw1,7,c
 18702  01A16A  D7EA               	goto	l9520
 18703  01A16C                     u7960:
 18704                           
 18705                           ;stkvar	_divisor @ sp[(-1)+-16]
 18706                           ;stkvar	_dividend @ sp[(-1)+-8]
 18707  01A16C  50E1               	movf	fsr1l,w,c
 18708  01A16E  0FF7               	addlw	-9
 18709  01A170  6ED9               	movwf	fsr2l,c
 18710  01A172  50E2               	movf	fsr1h,w,c
 18711  01A174  6EDA               	movwf	fsr2h,c
 18712  01A176  0EFF               	movlw	255
 18713  01A178  22DA               	addwfc	fsr2h,f,c
 18714  01A17A  0EEF               	movlw	-17
 18715  01A17C  50E3               	movf	plusw1,w,c
 18716  01A17E  5CDE               	subwf	postinc2,w,c
 18717  01A180  0EF0               	movlw	-16
 18718  01A182  50E3               	movf	plusw1,w,c
 18719  01A184  58DE               	subwfb	postinc2,w,c
 18720  01A186  0EF1               	movlw	-15
 18721  01A188  50E3               	movf	plusw1,w,c
 18722  01A18A  58DE               	subwfb	postinc2,w,c
 18723  01A18C  0EF2               	movlw	-14
 18724  01A18E  50E3               	movf	plusw1,w,c
 18725  01A190  58DE               	subwfb	postinc2,w,c
 18726  01A192  0EF3               	movlw	-13
 18727  01A194  50E3               	movf	plusw1,w,c
 18728  01A196  58DE               	subwfb	postinc2,w,c
 18729  01A198  0EF4               	movlw	-12
 18730  01A19A  50E3               	movf	plusw1,w,c
 18731  01A19C  58DE               	subwfb	postinc2,w,c
 18732  01A19E  0EF5               	movlw	-11
 18733  01A1A0  50E3               	movf	plusw1,w,c
 18734  01A1A2  58DE               	subwfb	postinc2,w,c
 18735  01A1A4  0EF6               	movlw	-10
 18736  01A1A6  50E3               	movf	plusw1,w,c
 18737  01A1A8  58DE               	subwfb	postinc2,w,c
 18738  01A1AA  A0D8               	btfss	status,0,c
 18739  01A1AC  D01F               	goto	l9528
 18740                           
 18741                           ;stkvar	_divisor @ sp[(-1)+-16]
 18742                           ;stkvar	_dividend @ sp[(-1)+-8]
 18743  01A1AE  50E1               	movf	fsr1l,w,c
 18744  01A1B0  0FF7               	addlw	-9
 18745  01A1B2  6ED9               	movwf	fsr2l,c
 18746  01A1B4  50E2               	movf	fsr1h,w,c
 18747  01A1B6  6EDA               	movwf	fsr2h,c
 18748  01A1B8  0EFF               	movlw	255
 18749  01A1BA  22DA               	addwfc	fsr2h,f,c
 18750  01A1BC  0EEF               	movlw	-17
 18751  01A1BE  50E3               	movf	plusw1,w,c
 18752  01A1C0  5EDE               	subwf	postinc2,f,c
 18753  01A1C2  0EF0               	movlw	-16
 18754  01A1C4  50E3               	movf	plusw1,w,c
 18755  01A1C6  5ADE               	subwfb	postinc2,f,c
 18756  01A1C8  0EF1               	movlw	-15
 18757  01A1CA  50E3               	movf	plusw1,w,c
 18758  01A1CC  5ADE               	subwfb	postinc2,f,c
 18759  01A1CE  0EF2               	movlw	-14
 18760  01A1D0  50E3               	movf	plusw1,w,c
 18761  01A1D2  5ADE               	subwfb	postinc2,f,c
 18762  01A1D4  0EF3               	movlw	-13
 18763  01A1D6  50E3               	movf	plusw1,w,c
 18764  01A1D8  5ADE               	subwfb	postinc2,f,c
 18765  01A1DA  0EF4               	movlw	-12
 18766  01A1DC  50E3               	movf	plusw1,w,c
 18767  01A1DE  5ADE               	subwfb	postinc2,f,c
 18768  01A1E0  0EF5               	movlw	-11
 18769  01A1E2  50E3               	movf	plusw1,w,c
 18770  01A1E4  5ADE               	subwfb	postinc2,f,c
 18771  01A1E6  0EF6               	movlw	-10
 18772  01A1E8  50E3               	movf	plusw1,w,c
 18773  01A1EA  5ADE               	subwfb	postinc2,f,c
 18774  01A1EC                     l9528:
 18775                           
 18776                           ;stkvar	_divisor @ sp[(-1)+-16]
 18777  01A1EC  90D8               	bcf	status,0,c
 18778  01A1EE  0EF6               	movlw	-10
 18779  01A1F0  32E3               	rrcf	plusw1,f,c
 18780  01A1F2  0EF5               	movlw	-11
 18781  01A1F4  32E3               	rrcf	plusw1,f,c
 18782  01A1F6  0EF4               	movlw	-12
 18783  01A1F8  32E3               	rrcf	plusw1,f,c
 18784  01A1FA  0EF3               	movlw	-13
 18785  01A1FC  32E3               	rrcf	plusw1,f,c
 18786  01A1FE  0EF2               	movlw	-14
 18787  01A200  32E3               	rrcf	plusw1,f,c
 18788  01A202  0EF1               	movlw	-15
 18789  01A204  32E3               	rrcf	plusw1,f,c
 18790  01A206  0EF0               	movlw	-16
 18791  01A208  32E3               	rrcf	plusw1,f,c
 18792  01A20A  0EEF               	movlw	-17
 18793  01A20C  32E3               	rrcf	plusw1,f,c
 18794                           
 18795                           ;stkvar	_counter @ sp[(-1)+0]
 18796  01A20E  0EFF               	movlw	-1
 18797  01A210  50E3               	movf	plusw1,w,c
 18798  01A212  6E01               	movwf	btemp^0,c
 18799  01A214  0E01               	movlw	1
 18800  01A216  5E01               	subwf	btemp^0,f,c
 18801  01A218  0EFF               	movlw	-1
 18802  01A21A  0060  F007  FFE3   	movff	btemp,plusw1
 18803  01A220  A4D8               	btfss	status,2,c
 18804  01A222  D7A4               	goto	u7960
 18805  01A224                     u7980:
 18806                           
 18807                           ;stkvar	_dividend @ sp[(-1)+-8]
 18808  01A224  0EF7               	movlw	247
 18809  01A226  24E1               	addwf	fsr1l,w,c
 18810  01A228  6ED9               	movwf	fsr2l,c
 18811  01A22A  0EFF               	movlw	255
 18812  01A22C  20E2               	addwfc	fsr1h,w,c
 18813  01A22E  6EDA               	movwf	fsr2h,c
 18814                           
 18815                           ;stkvar	?___lomod @ sp[(-1)+-8]
 18816  01A230  0E08               	movlw	8
 18817  01A232  6E01               	movwf	btemp^0,c
 18818  01A234  0EF7               	movlw	-9
 18819  01A236                     us799999:
 18820  01A236  006F FF7B FFE3     	movff	postinc2,plusw1
 18821  01A23C  28E8               	incf	wreg,w,c
 18822  01A23E  2E01               	decfsz	btemp^0,f,c
 18823  01A240  D7FA               	bra	us799999
 18824                           
 18825                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18826  01A242  52E5               	movf	postdec1,f,c
 18827  01A244  0012               	return		;funcret
 18828  01A246                     __end_of___lomod:
 18829                           	opt callstack 0
 18830                           
 18831 ;; *************** function ___lodiv *****************
 18832 ;; Defined at:
 18833 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 18834 ;; Parameters:    Size  Location     Type
 18835 ;;  dividend        8  [STACK] unsigned long long 
 18836 ;;  divisor         8  [STACK] unsigned long long 
 18837 ;; Auto vars:     Size  Location     Type
 18838 ;;  quotient        8  [STACK] unsigned long long 
 18839 ;;  counter         1  [STACK] unsigned char 
 18840 ;; Return value:  Size  Location     Type
 18841 ;;                  8  [STACK] unsigned long long 
 18842 ;; Registers used:
 18843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18844 ;; Tracked objects:
 18845 ;;		On entry : 0/3
 18846 ;;		On exit  : 0/0
 18847 ;;		Unchanged: 0/0
 18848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18853 ;;Total ram usage:        0 bytes
 18854 ;; Hardware stack levels used:    1
 18855 ;; Hardware stack levels required when called:   15
 18856 ;; This function calls:
 18857 ;;		Nothing
 18858 ;; This function is called by:
 18859 ;;		_utoa
 18860 ;; This function uses a reentrant model
 18861 ;;
 18862                           
 18863                           	psect	text74
 18864  0195F4                     __ptext74:
 18865                           	opt callstack 0
 18866  0195F4                     ___lodiv:
 18867                           	opt callstack 0
 18868                           
 18869                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18870  0195F4  0E09               	movlw	9
 18871  0195F6  26E1               	addwf	fsr1l,f,c
 18872  0195F8  0E00               	movlw	0
 18873  0195FA  22E2               	addwfc	fsr1h,f,c
 18874                           
 18875                           ;stkvar	_quotient @ sp[(-9)+0]
 18876                           
 18877                           ;incstack = 0
 18878 ;; hardware stack exceeded
 18879  0195FC  0E07               	movlw	7
 18880  0195FE  6E01               	movwf	btemp^0,c
 18881  019600  0EF7               	movlw	-9
 18882  019602                     u7891:
 18883  019602  6AE3               	clrf	plusw1,c
 18884  019604  2AE8               	incf	wreg,f,c
 18885  019606  0601               	decf	btemp^0,f,c
 18886  019608  E2FC               	bc	u7891
 18887                           
 18888                           ;stkvar	_divisor @ sp[(-9)+-16]
 18889  01960A  0EE7               	movlw	-25
 18890  01960C  50E3               	movf	plusw1,w,c
 18891  01960E  E116               	bnz	u7900
 18892  019610  0EE8               	movlw	-24
 18893  019612  50E3               	movf	plusw1,w,c
 18894  019614  E113               	bnz	u7900
 18895  019616  0EE9               	movlw	-23
 18896  019618  50E3               	movf	plusw1,w,c
 18897  01961A  E110               	bnz	u7900
 18898  01961C  0EEA               	movlw	-22
 18899  01961E  50E3               	movf	plusw1,w,c
 18900  019620  E10D               	bnz	u7900
 18901  019622  0EEB               	movlw	-21
 18902  019624  50E3               	movf	plusw1,w,c
 18903  019626  E10A               	bnz	u7900
 18904  019628  0EEC               	movlw	-20
 18905  01962A  50E3               	movf	plusw1,w,c
 18906  01962C  E107               	bnz	u7900
 18907  01962E  0EED               	movlw	-19
 18908  019630  50E3               	movf	plusw1,w,c
 18909  019632  E104               	bnz	u7900
 18910  019634  0EEE               	movlw	-18
 18911  019636  50E3               	movf	plusw1,w,c
 18912  019638  B4D8               	btfsc	status,2,c
 18913  01963A  D088               	goto	u7930
 18914  01963C                     u7900:
 18915                           
 18916                           ;stkvar	_counter @ sp[(-9)+8]
 18917  01963C  0EFF               	movlw	-1
 18918  01963E  6AE3               	clrf	plusw1,c
 18919  019640  D012               	goto	L20
 18920  019642                     l9496:
 18921                           
 18922                           ;stkvar	_divisor @ sp[(-9)+-16]
 18923  019642  90D8               	bcf	status,0,c
 18924  019644  0EE7               	movlw	-25
 18925  019646  36E3               	rlcf	plusw1,f,c
 18926  019648  0EE8               	movlw	-24
 18927  01964A  36E3               	rlcf	plusw1,f,c
 18928  01964C  0EE9               	movlw	-23
 18929  01964E  36E3               	rlcf	plusw1,f,c
 18930  019650  0EEA               	movlw	-22
 18931  019652  36E3               	rlcf	plusw1,f,c
 18932  019654  0EEB               	movlw	-21
 18933  019656  36E3               	rlcf	plusw1,f,c
 18934  019658  0EEC               	movlw	-20
 18935  01965A  36E3               	rlcf	plusw1,f,c
 18936  01965C  0EED               	movlw	-19
 18937  01965E  36E3               	rlcf	plusw1,f,c
 18938  019660  0EEE               	movlw	-18
 18939  019662  36E3               	rlcf	plusw1,f,c
 18940                           
 18941                           ;stkvar	_counter @ sp[(-9)+8]
 18942  019664  0EFF               	movlw	-1
 18943  019666                     L20:
 18944  019666  2AE3               	incf	plusw1,f,c
 18945                           
 18946                           ;stkvar	_divisor @ sp[(-9)+-16]
 18947  019668  0EEE               	movlw	-18
 18948  01966A  AEE3               	btfss	plusw1,7,c
 18949  01966C  D7EA               	goto	l9496
 18950  01966E                     u7910:
 18951                           
 18952                           ;stkvar	_quotient @ sp[(-9)+0]
 18953  01966E  90D8               	bcf	status,0,c
 18954  019670  0EF7               	movlw	-9
 18955  019672  36E3               	rlcf	plusw1,f,c
 18956  019674  0EF8               	movlw	-8
 18957  019676  36E3               	rlcf	plusw1,f,c
 18958  019678  0EF9               	movlw	-7
 18959  01967A  36E3               	rlcf	plusw1,f,c
 18960  01967C  0EFA               	movlw	-6
 18961  01967E  36E3               	rlcf	plusw1,f,c
 18962  019680  0EFB               	movlw	-5
 18963  019682  36E3               	rlcf	plusw1,f,c
 18964  019684  0EFC               	movlw	-4
 18965  019686  36E3               	rlcf	plusw1,f,c
 18966  019688  0EFD               	movlw	-3
 18967  01968A  36E3               	rlcf	plusw1,f,c
 18968  01968C  0EFE               	movlw	-2
 18969  01968E  36E3               	rlcf	plusw1,f,c
 18970                           
 18971                           ;stkvar	_divisor @ sp[(-9)+-16]
 18972                           ;stkvar	_dividend @ sp[(-9)+-8]
 18973  019690  50E1               	movf	fsr1l,w,c
 18974  019692  0FEF               	addlw	-17
 18975  019694  6ED9               	movwf	fsr2l,c
 18976  019696  50E2               	movf	fsr1h,w,c
 18977  019698  6EDA               	movwf	fsr2h,c
 18978  01969A  0EFF               	movlw	255
 18979  01969C  22DA               	addwfc	fsr2h,f,c
 18980  01969E  0EE7               	movlw	-25
 18981  0196A0  50E3               	movf	plusw1,w,c
 18982  0196A2  5CDE               	subwf	postinc2,w,c
 18983  0196A4  0EE8               	movlw	-24
 18984  0196A6  50E3               	movf	plusw1,w,c
 18985  0196A8  58DE               	subwfb	postinc2,w,c
 18986  0196AA  0EE9               	movlw	-23
 18987  0196AC  50E3               	movf	plusw1,w,c
 18988  0196AE  58DE               	subwfb	postinc2,w,c
 18989  0196B0  0EEA               	movlw	-22
 18990  0196B2  50E3               	movf	plusw1,w,c
 18991  0196B4  58DE               	subwfb	postinc2,w,c
 18992  0196B6  0EEB               	movlw	-21
 18993  0196B8  50E3               	movf	plusw1,w,c
 18994  0196BA  58DE               	subwfb	postinc2,w,c
 18995  0196BC  0EEC               	movlw	-20
 18996  0196BE  50E3               	movf	plusw1,w,c
 18997  0196C0  58DE               	subwfb	postinc2,w,c
 18998  0196C2  0EED               	movlw	-19
 18999  0196C4  50E3               	movf	plusw1,w,c
 19000  0196C6  58DE               	subwfb	postinc2,w,c
 19001  0196C8  0EEE               	movlw	-18
 19002  0196CA  50E3               	movf	plusw1,w,c
 19003  0196CC  58DE               	subwfb	postinc2,w,c
 19004  0196CE  A0D8               	btfss	status,0,c
 19005  0196D0  D021               	goto	l9508
 19006                           
 19007                           ;stkvar	_divisor @ sp[(-9)+-16]
 19008                           ;stkvar	_dividend @ sp[(-9)+-8]
 19009  0196D2  50E1               	movf	fsr1l,w,c
 19010  0196D4  0FEF               	addlw	-17
 19011  0196D6  6ED9               	movwf	fsr2l,c
 19012  0196D8  50E2               	movf	fsr1h,w,c
 19013  0196DA  6EDA               	movwf	fsr2h,c
 19014  0196DC  0EFF               	movlw	255
 19015  0196DE  22DA               	addwfc	fsr2h,f,c
 19016  0196E0  0EE7               	movlw	-25
 19017  0196E2  50E3               	movf	plusw1,w,c
 19018  0196E4  5EDE               	subwf	postinc2,f,c
 19019  0196E6  0EE8               	movlw	-24
 19020  0196E8  50E3               	movf	plusw1,w,c
 19021  0196EA  5ADE               	subwfb	postinc2,f,c
 19022  0196EC  0EE9               	movlw	-23
 19023  0196EE  50E3               	movf	plusw1,w,c
 19024  0196F0  5ADE               	subwfb	postinc2,f,c
 19025  0196F2  0EEA               	movlw	-22
 19026  0196F4  50E3               	movf	plusw1,w,c
 19027  0196F6  5ADE               	subwfb	postinc2,f,c
 19028  0196F8  0EEB               	movlw	-21
 19029  0196FA  50E3               	movf	plusw1,w,c
 19030  0196FC  5ADE               	subwfb	postinc2,f,c
 19031  0196FE  0EEC               	movlw	-20
 19032  019700  50E3               	movf	plusw1,w,c
 19033  019702  5ADE               	subwfb	postinc2,f,c
 19034  019704  0EED               	movlw	-19
 19035  019706  50E3               	movf	plusw1,w,c
 19036  019708  5ADE               	subwfb	postinc2,f,c
 19037  01970A  0EEE               	movlw	-18
 19038  01970C  50E3               	movf	plusw1,w,c
 19039  01970E  5ADE               	subwfb	postinc2,f,c
 19040                           
 19041                           ;stkvar	_quotient @ sp[(-9)+0]
 19042  019710  0EF7               	movlw	-9
 19043  019712  80E3               	bsf	plusw1,0,c
 19044  019714                     l9508:
 19045                           
 19046                           ;stkvar	_divisor @ sp[(-9)+-16]
 19047  019714  90D8               	bcf	status,0,c
 19048  019716  0EEE               	movlw	-18
 19049  019718  32E3               	rrcf	plusw1,f,c
 19050  01971A  0EED               	movlw	-19
 19051  01971C  32E3               	rrcf	plusw1,f,c
 19052  01971E  0EEC               	movlw	-20
 19053  019720  32E3               	rrcf	plusw1,f,c
 19054  019722  0EEB               	movlw	-21
 19055  019724  32E3               	rrcf	plusw1,f,c
 19056  019726  0EEA               	movlw	-22
 19057  019728  32E3               	rrcf	plusw1,f,c
 19058  01972A  0EE9               	movlw	-23
 19059  01972C  32E3               	rrcf	plusw1,f,c
 19060  01972E  0EE8               	movlw	-24
 19061  019730  32E3               	rrcf	plusw1,f,c
 19062  019732  0EE7               	movlw	-25
 19063  019734  32E3               	rrcf	plusw1,f,c
 19064                           
 19065                           ;stkvar	_counter @ sp[(-9)+8]
 19066  019736  0EFF               	movlw	-1
 19067  019738  50E3               	movf	plusw1,w,c
 19068  01973A  6E01               	movwf	btemp^0,c
 19069  01973C  0E01               	movlw	1
 19070  01973E  5E01               	subwf	btemp^0,f,c
 19071  019740  0EFF               	movlw	-1
 19072  019742  0060  F007  FFE3   	movff	btemp,plusw1
 19073  019748  A4D8               	btfss	status,2,c
 19074  01974A  D791               	goto	u7910
 19075  01974C                     u7930:
 19076                           
 19077                           ;stkvar	_quotient @ sp[(-9)+0]
 19078  01974C  0EF7               	movlw	247
 19079  01974E  24E1               	addwf	fsr1l,w,c
 19080  019750  6ED9               	movwf	fsr2l,c
 19081  019752  0EFF               	movlw	255
 19082  019754  20E2               	addwfc	fsr1h,w,c
 19083  019756  6EDA               	movwf	fsr2h,c
 19084                           
 19085                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 19086  019758  0E08               	movlw	8
 19087  01975A  6E01               	movwf	btemp^0,c
 19088  01975C  0EEF               	movlw	-17
 19089  01975E                     us794999:
 19090  01975E  006F FF7B FFE3     	movff	postinc2,plusw1
 19091  019764  28E8               	incf	wreg,w,c
 19092  019766  2E01               	decfsz	btemp^0,f,c
 19093  019768  D7FA               	bra	us794999
 19094                           
 19095                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 19096  01976A  0EF7               	movlw	247
 19097  01976C  26E1               	addwf	fsr1l,f,c
 19098  01976E  0EFF               	movlw	255
 19099  019770  22E2               	addwfc	fsr1h,f,c
 19100  019772  0012               	return		;funcret
 19101  019774                     __end_of___lodiv:
 19102                           	opt callstack 0
 19103                           
 19104 ;; *************** function _strncmp *****************
 19105 ;; Defined at:
 19106 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 19107 ;; Parameters:    Size  Location     Type
 19108 ;;  _l              2  [STACK] PTR const unsigned char 
 19109 ;;		 -> ct(3), STR_83(127), STR_81(3), STR_80(3), 
 19110 ;;		 -> STR_79(19), STR_78(19), STR_77(19), STR_76(19), 
 19111 ;;		 -> STR_75(19), STR_74(19), STR_73(24), STR_72(15), 
 19112 ;;		 -> STR_71(15), STR_70(15), STR_69(10), STR_68(10), 
 19113 ;;		 -> STR_67(19), STR_66(19), STR_63(3), STR_62(3), 
 19114 ;;		 -> STR_61(21), STR_60(21), STR_59(21), STR_58(21), 
 19115 ;;		 -> STR_57(21), STR_56(21), STR_55(21), STR_54(21), 
 19116 ;;		 -> STR_53(21), STR_52(20), STR_51(21), STR_50(21), 
 19117 ;;		 -> STR_49(21), STR_48(22), STR_47(22), STR_46(22), 
 19118 ;;		 -> STR_45(23), STR_44(23), STR_43(23), STR_42(29), 
 19119 ;;		 -> STR_41(23), STR_40(23), STR_39(22), STR_38(22), 
 19120 ;;		 -> STR_37(22), STR_36(22), STR_35(22), STR_34(22), 
 19121 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 19122 ;;		 -> STR_29(22), STR_28(22), STR_27(17), STR_26(16), 
 19123 ;;		 -> STR_25(16), STR_24(21), STR_23(21), STR_22(21), 
 19124 ;;		 -> STR_21(26), STR_20(26), STR_19(22), STR_18(21), 
 19125 ;;		 -> STR_17(21), STR_16(21), STR_15(21), STR_14(22), 
 19126 ;;		 -> STR_13(22), STR_12(22), STR_11(26), STR_10(21), 
 19127 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 19128 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 19129 ;;  _r              2  [STACK] PTR const unsigned char 
 19130 ;;		 -> STR_117(3), STR_113(3), STR_108(3), STR_103(3), 
 19131 ;;		 -> STR_98(3), STR_94(3), 
 19132 ;;  n               2  [STACK] unsigned int 
 19133 ;; Auto vars:     Size  Location     Type
 19134 ;;  r               2  [STACK] PTR const unsigned char 
 19135 ;;		 -> STR_117(3), STR_113(3), STR_108(3), STR_103(3), 
 19136 ;;		 -> STR_98(3), STR_94(3), 
 19137 ;;  l               2  [STACK] PTR const unsigned char 
 19138 ;;		 -> ct(3), STR_83(127), STR_81(3), STR_80(3), 
 19139 ;;		 -> STR_79(19), STR_78(19), STR_77(19), STR_76(19), 
 19140 ;;		 -> STR_75(19), STR_74(19), STR_73(24), STR_72(15), 
 19141 ;;		 -> STR_71(15), STR_70(15), STR_69(10), STR_68(10), 
 19142 ;;		 -> STR_67(19), STR_66(19), STR_63(3), STR_62(3), 
 19143 ;;		 -> STR_61(21), STR_60(21), STR_59(21), STR_58(21), 
 19144 ;;		 -> STR_57(21), STR_56(21), STR_55(21), STR_54(21), 
 19145 ;;		 -> STR_53(21), STR_52(20), STR_51(21), STR_50(21), 
 19146 ;;		 -> STR_49(21), STR_48(22), STR_47(22), STR_46(22), 
 19147 ;;		 -> STR_45(23), STR_44(23), STR_43(23), STR_42(29), 
 19148 ;;		 -> STR_41(23), STR_40(23), STR_39(22), STR_38(22), 
 19149 ;;		 -> STR_37(22), STR_36(22), STR_35(22), STR_34(22), 
 19150 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 19151 ;;		 -> STR_29(22), STR_28(22), STR_27(17), STR_26(16), 
 19152 ;;		 -> STR_25(16), STR_24(21), STR_23(21), STR_22(21), 
 19153 ;;		 -> STR_21(26), STR_20(26), STR_19(22), STR_18(21), 
 19154 ;;		 -> STR_17(21), STR_16(21), STR_15(21), STR_14(22), 
 19155 ;;		 -> STR_13(22), STR_12(22), STR_11(26), STR_10(21), 
 19156 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 19157 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 19158 ;; Return value:  Size  Location     Type
 19159 ;;                  2  [STACK] int 
 19160 ;; Registers used:
 19161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 19162 ;; Tracked objects:
 19163 ;;		On entry : 0/0
 19164 ;;		On exit  : 0/0
 19165 ;;		Unchanged: 0/0
 19166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19171 ;;Total ram usage:        0 bytes
 19172 ;; Hardware stack levels used:    1
 19173 ;; Hardware stack levels required when called:   15
 19174 ;; This function calls:
 19175 ;;		Nothing
 19176 ;; This function is called by:
 19177 ;;		_vfpfcnvrt
 19178 ;; This function uses a reentrant model
 19179 ;;
 19180                           
 19181                           	psect	text75
 19182  01891C                     __ptext75:
 19183                           	opt callstack 0
 19184  01891C                     _strncmp:
 19185                           	opt callstack 0
 19186                           
 19187                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19188  01891C  52E6               	movf	postinc1,f,c
 19189  01891E  52E6               	movf	postinc1,f,c
 19190  018920  52E6               	movf	postinc1,f,c
 19191  018922  52E6               	movf	postinc1,f,c
 19192                           
 19193                           ;stkvar	__l @ sp[(-4)+-2]
 19194                           
 19195                           ;incstack = 0
 19196 ;; hardware stack exceeded
 19197  018924  0EFA               	movlw	-6
 19198  018926  006F FF8C  F00B    	movff	plusw1,btemp+10
 19199  01892C  0EFB               	movlw	-5
 19200  01892E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19201                           
 19202                           ;stkvar	_l @ sp[(-4)+2]
 19203  018934  0EFF               	movlw	-1
 19204  018936  0060  F033  FFE3   	movff	btemp+11,plusw1
 19205  01893C  0EFE               	movlw	-2
 19206  01893E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19207                           
 19208                           ;stkvar	__r @ sp[(-4)+-4]
 19209  018944  0EF8               	movlw	-8
 19210  018946  006F FF8C  F00B    	movff	plusw1,btemp+10
 19211  01894C  0EF9               	movlw	-7
 19212  01894E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19213                           
 19214                           ;stkvar	_r @ sp[(-4)+0]
 19215  018954  0EFD               	movlw	-3
 19216  018956  0060  F033  FFE3   	movff	btemp+11,plusw1
 19217  01895C  0EFC               	movlw	-4
 19218  01895E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19219                           
 19220                           ;stkvar	_n @ sp[(-4)+-6]
 19221  018964  0EF6               	movlw	-10
 19222  018966  006F FF8C  F001    	movff	plusw1,btemp
 19223  01896C  0E01               	movlw	1
 19224  01896E  5E01               	subwf	btemp^0,f,c
 19225  018970  0EF6               	movlw	-10
 19226  018972  0060  F007  FFE3   	movff	btemp,plusw1
 19227  018978  0EF7               	movlw	-9
 19228  01897A  006F FF8C  F001    	movff	plusw1,btemp
 19229  018980  0E00               	movlw	0
 19230  018982  5A01               	subwfb	btemp^0,f,c
 19231  018984  0EF7               	movlw	-9
 19232  018986  0060  F007  FFE3   	movff	btemp,plusw1
 19233  01898C  0EF6               	movlw	-10
 19234  01898E  28E3               	incf	plusw1,w,c
 19235  018990  E13F               	bnz	l10178
 19236  018992  0EF7               	movlw	-9
 19237  018994  28E3               	incf	plusw1,w,c
 19238  018996  A4D8               	btfss	status,2,c
 19239  018998  D03B               	goto	l10178
 19240  01899A  0E00               	movlw	0
 19241  01899C  6E01               	movwf	btemp^0,c
 19242  01899E  0E00               	movlw	0
 19243  0189A0  6E02               	movwf	(btemp+1)^0,c
 19244  0189A2  D0C7               	goto	l3735
 19245  0189A4                     l10176:
 19246                           
 19247                           ;stkvar	_l @ sp[(-4)+2]
 19248  0189A4  0EFE               	movlw	-2
 19249  0189A6  50E3               	movf	plusw1,w,c
 19250  0189A8  0F01               	addlw	1
 19251  0189AA  6E01               	movwf	btemp^0,c
 19252  0189AC  0EFE               	movlw	-2
 19253  0189AE  0060  F007  FFE3   	movff	btemp,plusw1
 19254  0189B4  6A01               	clrf	btemp^0,c
 19255  0189B6  0EFF               	movlw	-1
 19256  0189B8  50E3               	movf	plusw1,w,c
 19257  0189BA  2001               	addwfc	btemp^0,w,c
 19258  0189BC  6E01               	movwf	btemp^0,c
 19259  0189BE  0EFF               	movlw	-1
 19260  0189C0  0060  F007  FFE3   	movff	btemp,plusw1
 19261                           
 19262                           ;stkvar	_r @ sp[(-4)+0]
 19263  0189C6  0EFC               	movlw	-4
 19264  0189C8  50E3               	movf	plusw1,w,c
 19265  0189CA  0F01               	addlw	1
 19266  0189CC  6E01               	movwf	btemp^0,c
 19267  0189CE  0EFC               	movlw	-4
 19268  0189D0  0060  F007  FFE3   	movff	btemp,plusw1
 19269  0189D6  6A01               	clrf	btemp^0,c
 19270  0189D8  0EFD               	movlw	-3
 19271  0189DA  50E3               	movf	plusw1,w,c
 19272  0189DC  2001               	addwfc	btemp^0,w,c
 19273  0189DE  6E01               	movwf	btemp^0,c
 19274  0189E0  0EFD               	movlw	-3
 19275  0189E2  0060  F007  FFE3   	movff	btemp,plusw1
 19276                           
 19277                           ;stkvar	_n @ sp[(-4)+-6]
 19278  0189E8  0EF6               	movlw	-10
 19279  0189EA  006F FF8C  F001    	movff	plusw1,btemp
 19280  0189F0  0E01               	movlw	1
 19281  0189F2  5E01               	subwf	btemp^0,f,c
 19282  0189F4  0EF6               	movlw	-10
 19283  0189F6  0060  F007  FFE3   	movff	btemp,plusw1
 19284  0189FC  0EF7               	movlw	-9
 19285  0189FE  006F FF8C  F001    	movff	plusw1,btemp
 19286  018A04  0E00               	movlw	0
 19287  018A06  5A01               	subwfb	btemp^0,f,c
 19288  018A08  0EF7               	movlw	-9
 19289  018A0A  0060  F007  FFE3   	movff	btemp,plusw1
 19290  018A10                     l10178:
 19291                           
 19292                           ;stkvar	_l @ sp[(-4)+2]
 19293  018A10  0EFE               	movlw	-2
 19294  018A12  006F FF8F FFF6     	movff	plusw1,tblptrl
 19295  018A18  0EFF               	movlw	-1
 19296  018A1A  006F FF8F FFF7     	movff	plusw1,tblptrh
 19297  018A20  0E00               	movlw	low (__mediumconst shr (0+16))
 19298  018A22  6EF8               	movwf	tblptru,c
 19299  018A24  0E1F               	movlw	(high __ramtop+-1)
 19300  018A26  64F7               	cpfsgt	tblptrh,c
 19301  018A28  D003               	bra	u9187
 19302  018A2A  0008               	tblrd		*
 19303  018A2C  50F5               	movf	tablat,w,c
 19304  018A2E  D007               	bra	u9180
 19305  018A30                     u9187:
 19306  018A30  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19307  018A36  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19308  018A3C  50EF               	movf	indf0,w,c
 19309  018A3E                     u9180:
 19310  018A3E  0900               	iorlw	0
 19311  018A40  B4D8               	btfsc	status,2,c
 19312  018A42  D04A               	goto	u9220
 19313                           
 19314                           ;stkvar	_r @ sp[(-4)+0]
 19315  018A44  50E1               	movf	fsr1l,w,c
 19316  018A46  0FFC               	addlw	-4
 19317  018A48  6ED9               	movwf	fsr2l,c
 19318  018A4A  50E2               	movf	fsr1h,w,c
 19319  018A4C  6EDA               	movwf	fsr2h,c
 19320  018A4E  0EFF               	movlw	255
 19321  018A50  22DA               	addwfc	fsr2h,f,c
 19322  018A52  006F FF7B FFF6     	movff	postinc2,tblptrl
 19323  018A58  006F FF77 FFF7     	movff	postdec2,tblptrh
 19324  018A5E                     	if	0	;tblptru may be non-zero
 19325  018A5E                     	endif
 19326  018A5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19327  018A5E  0E00               	movlw	low (__mediumconst shr (0+16))
 19328  018A60  6EF8               	movwf	tblptru,c
 19329  018A62                     	endif
 19330  018A62  0008               	tblrd		*
 19331  018A64  50F5               	movf	tablat,w,c
 19332  018A66  0900               	iorlw	0
 19333  018A68  B4D8               	btfsc	status,2,c
 19334  018A6A  D036               	goto	u9220
 19335                           
 19336                           ;stkvar	_n @ sp[(-4)+-6]
 19337  018A6C  0EF6               	movlw	-10
 19338  018A6E  006F FF8C  F001    	movff	plusw1,btemp
 19339  018A74  0EF7               	movlw	-9
 19340  018A76  50E3               	movf	plusw1,w,c
 19341  018A78  1001               	iorwf	btemp^0,w,c
 19342  018A7A  B4D8               	btfsc	status,2,c
 19343  018A7C  D02D               	goto	u9220
 19344                           
 19345                           ;stkvar	_r @ sp[(-4)+0]
 19346  018A7E  50E1               	movf	fsr1l,w,c
 19347  018A80  0FFC               	addlw	-4
 19348  018A82  6ED9               	movwf	fsr2l,c
 19349  018A84  50E2               	movf	fsr1h,w,c
 19350  018A86  6EDA               	movwf	fsr2h,c
 19351  018A88  0EFF               	movlw	255
 19352  018A8A  22DA               	addwfc	fsr2h,f,c
 19353  018A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
 19354  018A92  006F FF77 FFF7     	movff	postdec2,tblptrh
 19355  018A98                     	if	0	;tblptru may be non-zero
 19356  018A98                     	endif
 19357  018A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19358  018A98  0E00               	movlw	low (__mediumconst shr (0+16))
 19359  018A9A  6EF8               	movwf	tblptru,c
 19360  018A9C                     	endif
 19361  018A9C  0008               	tblrd		*
 19362  018A9E  006F FFD4  F00C    	movff	tablat,btemp+11
 19363                           
 19364                           ;stkvar	_l @ sp[(-4)+2]
 19365  018AA4  0EFE               	movlw	-2
 19366  018AA6  006F FF8F FFF6     	movff	plusw1,tblptrl
 19367  018AAC  0EFF               	movlw	-1
 19368  018AAE  006F FF8F FFF7     	movff	plusw1,tblptrh
 19369  018AB4  0E00               	movlw	low (__mediumconst shr (0+16))
 19370  018AB6  6EF8               	movwf	tblptru,c
 19371  018AB8  0E1F               	movlw	(high __ramtop+-1)
 19372  018ABA  64F7               	cpfsgt	tblptrh,c
 19373  018ABC  D003               	bra	u9227
 19374  018ABE  0008               	tblrd		*
 19375  018AC0  50F5               	movf	tablat,w,c
 19376  018AC2  D007               	bra	u9225
 19377  018AC4                     u9227:
 19378  018AC4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19379  018ACA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19380  018AD0  50EF               	movf	indf0,w,c
 19381  018AD2                     u9225:
 19382  018AD2  180C               	xorwf	(btemp+11)^0,w,c
 19383  018AD4  B4D8               	btfsc	status,2,c
 19384  018AD6  D766               	goto	l10176
 19385  018AD8                     u9220:
 19386                           
 19387                           ;stkvar	_l @ sp[(-4)+2]
 19388  018AD8  0EFE               	movlw	-2
 19389  018ADA  006F FF8F FFF6     	movff	plusw1,tblptrl
 19390  018AE0  0EFF               	movlw	-1
 19391  018AE2  006F FF8F FFF7     	movff	plusw1,tblptrh
 19392  018AE8  0E00               	movlw	low (__mediumconst shr (0+16))
 19393  018AEA  6EF8               	movwf	tblptru,c
 19394  018AEC  0E1F               	movlw	(high __ramtop+-1)
 19395  018AEE  64F7               	cpfsgt	tblptrh,c
 19396  018AF0  D003               	bra	u9237
 19397  018AF2  0008               	tblrd		*
 19398  018AF4  50F5               	movf	tablat,w,c
 19399  018AF6  D007               	bra	u9230
 19400  018AF8                     u9237:
 19401  018AF8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19402  018AFE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19403  018B04  50EF               	movf	indf0,w,c
 19404  018B06                     u9230:
 19405  018B06  6E01               	movwf	btemp^0,c
 19406  018B08  6A02               	clrf	(btemp+1)^0,c
 19407                           
 19408                           ;stkvar	_r @ sp[(-4)+0]
 19409  018B0A  50E1               	movf	fsr1l,w,c
 19410  018B0C  0FFC               	addlw	-4
 19411  018B0E  6ED9               	movwf	fsr2l,c
 19412  018B10  50E2               	movf	fsr1h,w,c
 19413  018B12  6EDA               	movwf	fsr2h,c
 19414  018B14  0EFF               	movlw	255
 19415  018B16  22DA               	addwfc	fsr2h,f,c
 19416  018B18  006F FF7B FFF6     	movff	postinc2,tblptrl
 19417  018B1E  006F FF77 FFF7     	movff	postdec2,tblptrh
 19418  018B24                     	if	0	;tblptru may be non-zero
 19419  018B24                     	endif
 19420  018B24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19421  018B24  0E00               	movlw	low (__mediumconst shr (0+16))
 19422  018B26  6EF8               	movwf	tblptru,c
 19423  018B28                     	endif
 19424  018B28  0008               	tblrd		*
 19425  018B2A  50F5               	movf	tablat,w,c
 19426  018B2C  5E01               	subwf	btemp^0,f,c
 19427  018B2E  0E00               	movlw	0
 19428  018B30  5A02               	subwfb	(btemp+1)^0,f,c
 19429  018B32                     l3735:
 19430                           
 19431                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 19432  018B32  0EF6               	movlw	246
 19433  018B34  26E1               	addwf	fsr1l,f,c
 19434  018B36  0EFF               	movlw	255
 19435  018B38  22E2               	addwfc	fsr1h,f,c
 19436  018B3A  0012               	return		;funcret
 19437  018B3C                     __end_of_strncmp:
 19438                           	opt callstack 0
 19439                           
 19440 ;; *************** function _stoa *****************
 19441 ;; Defined at:
 19442 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19443 ;; Parameters:    Size  Location     Type
 19444 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19445 ;;		 -> f(6), NULL(0), 
 19446 ;;  s               2  [STACK] PTR unsigned char 
 19447 ;;		 -> ?_printf(2), ?_sprintf(2), STR_65(9), STR_64(12), 
 19448 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 19449 ;;		 -> V(192), 
 19450 ;; Auto vars:     Size  Location     Type
 19451 ;;  nuls            7  [STACK] unsigned char [7]
 19452 ;;  l               2  [STACK] int 
 19453 ;;  p               2  [STACK] int 
 19454 ;;  cp              2  [STACK] PTR unsigned char 
 19455 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_65(9), 
 19456 ;;		 -> STR_64(12), D.lcd(480), D(482), T(144), 
 19457 ;;		 -> STR_3(5), V(192), 
 19458 ;;  w               2  [STACK] int 
 19459 ;;  i               2  [STACK] int 
 19460 ;; Return value:  Size  Location     Type
 19461 ;;                  2  [STACK] int 
 19462 ;; Registers used:
 19463 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19464 ;; Tracked objects:
 19465 ;;		On entry : 0/0
 19466 ;;		On exit  : 0/0
 19467 ;;		Unchanged: 0/0
 19468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19473 ;;Total ram usage:        0 bytes
 19474 ;; Hardware stack levels used:    1
 19475 ;; Hardware stack levels required when called:   18
 19476 ;; This function calls:
 19477 ;;		_fputc
 19478 ;;		_strlen
 19479 ;; This function is called by:
 19480 ;;		_vfpfcnvrt
 19481 ;; This function uses a reentrant model
 19482 ;;
 19483                           
 19484                           	psect	text76
 19485  017ABE                     __ptext76:
 19486                           	opt callstack 0
 19487  017ABE                     _stoa:
 19488                           	opt callstack 0
 19489                           
 19490                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 19491  017ABE  0E11               	movlw	17
 19492  017AC0  26E1               	addwf	fsr1l,f,c
 19493  017AC2  0E00               	movlw	0
 19494  017AC4  22E2               	addwfc	fsr1h,f,c
 19495                           
 19496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 19497                           
 19498                           ;incstack = 0
 19499 ;; hardware stack exceeded
 19500  017AC6  EE20  F100         	lfsr	2,stoa@F1166
 19501                           
 19502                           ;stkvar	_nuls @ sp[(-17)+0]
 19503  017ACA  0E07               	movlw	7
 19504  017ACC  6E01               	movwf	btemp^0,c
 19505  017ACE  0EEF               	movlw	-17
 19506  017AD0                     us1277999:
 19507  017AD0  006F FF7B FFE3     	movff	postinc2,plusw1
 19508  017AD6  28E8               	incf	wreg,w,c
 19509  017AD8  2E01               	decfsz	btemp^0,f,c
 19510  017ADA  D7FA               	bra	us1277999
 19511                           
 19512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 19513                           ;stkvar	_s @ sp[(-17)+-4]
 19514  017ADC  0EEB               	movlw	-21
 19515  017ADE  006F FF8C  F00B    	movff	plusw1,btemp+10
 19516  017AE4  0EEC               	movlw	-20
 19517  017AE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 19518                           
 19519                           ;stkvar	_cp @ sp[(-17)+11]
 19520  017AEC  0EFB               	movlw	-5
 19521  017AEE  0060  F033  FFE3   	movff	btemp+11,plusw1
 19522  017AF4  0EFA               	movlw	-6
 19523  017AF6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19524                           
 19525                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 19526                           ;stkvar	_cp @ sp[(-17)+11]
 19527  017AFC  0EFA               	movlw	-6
 19528  017AFE  006F FF8C  F001    	movff	plusw1,btemp
 19529  017B04  0EFB               	movlw	-5
 19530  017B06  50E3               	movf	plusw1,w,c
 19531  017B08  1001               	iorwf	btemp^0,w,c
 19532  017B0A  A4D8               	btfss	status,2,c
 19533  017B0C  D00E               	goto	l13648
 19534                           
 19535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 19536                           ;stkvar	_nuls @ sp[(-17)+0]
 19537  017B0E  0EEF               	movlw	239
 19538  017B10  24E1               	addwf	fsr1l,w,c
 19539  017B12  6E0B               	movwf	(btemp+10)^0,c
 19540  017B14  0EFF               	movlw	255
 19541  017B16  20E2               	addwfc	fsr1h,w,c
 19542  017B18  6E0C               	movwf	(btemp+11)^0,c
 19543                           
 19544                           ;stkvar	_cp @ sp[(-17)+11]
 19545  017B1A  0EFB               	movlw	-5
 19546  017B1C  0060  F033  FFE3   	movff	btemp+11,plusw1
 19547  017B22  0EFA               	movlw	-6
 19548  017B24  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19549  017B2A                     l13648:
 19550                           
 19551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 19552                           ;stkvar	_cp @ sp[(-17)+11]
 19553  017B2A  0EFA               	movlw	-6
 19554  017B2C  006F FF8F FFE6     	movff	plusw1,postinc1
 19555  017B32  006F FF8F FFE6     	movff	plusw1,postinc1
 19556  017B38  EC88  F0DC         	call	_strlen	;wreg free
 19557                           
 19558                           ;stkvar	_l @ sp[(-17)+7]
 19559  017B3C  0EF6               	movlw	-10
 19560  017B3E  0060  F007  FFE3   	movff	btemp,plusw1
 19561  017B44  0EF7               	movlw	-9
 19562  017B46  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19563                           
 19564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 19565                           ;stkvar	_p @ sp[(-17)+9]
 19566  017B4C  0EF8               	movlw	-8
 19567  017B4E  0060  F0F3  FFE3   	movff	_prec,plusw1
 19568  017B54  0EF9               	movlw	-7
 19569  017B56  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 19570                           
 19571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 19572                           ;stkvar	_p @ sp[(-17)+9]
 19573  017B5C  0EF9               	movlw	-7
 19574  017B5E  BEE3               	btfsc	plusw1,7,c
 19575  017B60  D023               	goto	l2560
 19576                           
 19577                           ;stkvar	_l @ sp[(-17)+7]
 19578                           ;stkvar	_p @ sp[(-17)+9]
 19579  017B62  50E1               	movf	fsr1l,w,c
 19580  017B64  0FF8               	addlw	-8
 19581  017B66  6ED9               	movwf	fsr2l,c
 19582  017B68  50E2               	movf	fsr1h,w,c
 19583  017B6A  6EDA               	movwf	fsr2h,c
 19584  017B6C  0EFF               	movlw	255
 19585  017B6E  22DA               	addwfc	fsr2h,f,c
 19586  017B70  0EF6               	movlw	-10
 19587  017B72  50E3               	movf	plusw1,w,c
 19588  017B74  5CDE               	subwf	postinc2,w,c
 19589  017B76  50DE               	movf	postinc2,w,c
 19590  017B78  0A80               	xorlw	128
 19591  017B7A  6E01               	movwf	btemp^0,c
 19592  017B7C  0EF7               	movlw	-9
 19593  017B7E  50E3               	movf	plusw1,w,c
 19594  017B80  0A80               	xorlw	128
 19595  017B82  5801               	subwfb	btemp^0,w,c
 19596  017B84  B0D8               	btfsc	status,0,c
 19597  017B86  D010               	goto	l2560
 19598                           
 19599                           ;stkvar	_p @ sp[(-17)+9]
 19600                           ;stkvar	_l @ sp[(-17)+7]
 19601  017B88  0EF8               	movlw	-8
 19602  017B8A  006F FF8C  F001    	movff	plusw1,btemp
 19603  017B90  0EF6               	movlw	-10
 19604  017B92  0060  F007  FFE3   	movff	btemp,plusw1
 19605  017B98  0EF9               	movlw	-7
 19606  017B9A  006F FF8C  F001    	movff	plusw1,btemp
 19607  017BA0  0EF7               	movlw	-9
 19608  017BA2  0060  F007  FFE3   	movff	btemp,plusw1
 19609  017BA8                     l2560:
 19610                           
 19611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 19612                           ;stkvar	_l @ sp[(-17)+7]
 19613                           ;stkvar	_p @ sp[(-17)+9]
 19614  017BA8  0EF6               	movlw	-10
 19615  017BAA  006F FF8C  F001    	movff	plusw1,btemp
 19616  017BB0  0EF8               	movlw	-8
 19617  017BB2  0060  F007  FFE3   	movff	btemp,plusw1
 19618  017BB8  0EF7               	movlw	-9
 19619  017BBA  006F FF8C  F001    	movff	plusw1,btemp
 19620  017BC0  0EF9               	movlw	-7
 19621  017BC2  0060  F007  FFE3   	movff	btemp,plusw1
 19622                           
 19623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 19624                           ;stkvar	_w @ sp[(-17)+13]
 19625  017BC8  0EFC               	movlw	-4
 19626  017BCA  0060  F0EB  FFE3   	movff	_width,plusw1
 19627  017BD0  0EFD               	movlw	-3
 19628  017BD2  0060  F0EF  FFE3   	movff	_width+1,plusw1
 19629                           
 19630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 19631  017BD8  A03E               	btfss	_flags^0,0,c
 19632  017BDA  D01F               	goto	l13668
 19633  017BDC  D031               	goto	u12820
 19634  017BDE                     l13664:
 19635                           
 19636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 19637                           ;stkvar	_fp @ sp[(-17)+-2]
 19638  017BDE  0EED               	movlw	-19
 19639  017BE0  006F FF8F FFE6     	movff	plusw1,postinc1
 19640  017BE6  006F FF8F FFE6     	movff	plusw1,postinc1
 19641  017BEC  0E20               	movlw	32
 19642  017BEE  6EE6               	movwf	postinc1,c
 19643  017BF0  0E00               	movlw	0
 19644  017BF2  6EE6               	movwf	postinc1,c
 19645  017BF4  ECBA  F0D1         	call	_fputc	;wreg free
 19646                           
 19647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 19648                           ;stkvar	_l @ sp[(-17)+7]
 19649  017BF8  0EF6               	movlw	-10
 19650  017BFA  50E3               	movf	plusw1,w,c
 19651  017BFC  0F01               	addlw	1
 19652  017BFE  6E01               	movwf	btemp^0,c
 19653  017C00  0EF6               	movlw	-10
 19654  017C02  0060  F007  FFE3   	movff	btemp,plusw1
 19655  017C08  6A01               	clrf	btemp^0,c
 19656  017C0A  0EF7               	movlw	-9
 19657  017C0C  50E3               	movf	plusw1,w,c
 19658  017C0E  2001               	addwfc	btemp^0,w,c
 19659  017C10  6E01               	movwf	btemp^0,c
 19660  017C12  0EF7               	movlw	-9
 19661  017C14  0060  F007  FFE3   	movff	btemp,plusw1
 19662  017C1A                     l13668:
 19663                           
 19664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 19665                           ;stkvar	_w @ sp[(-17)+13]
 19666                           ;stkvar	_l @ sp[(-17)+7]
 19667  017C1A  50E1               	movf	fsr1l,w,c
 19668  017C1C  0FF6               	addlw	-10
 19669  017C1E  6ED9               	movwf	fsr2l,c
 19670  017C20  50E2               	movf	fsr1h,w,c
 19671  017C22  6EDA               	movwf	fsr2h,c
 19672  017C24  0EFF               	movlw	255
 19673  017C26  22DA               	addwfc	fsr2h,f,c
 19674  017C28  0EFC               	movlw	-4
 19675  017C2A  50E3               	movf	plusw1,w,c
 19676  017C2C  5CDE               	subwf	postinc2,w,c
 19677  017C2E  50DE               	movf	postinc2,w,c
 19678  017C30  0A80               	xorlw	128
 19679  017C32  6E01               	movwf	btemp^0,c
 19680  017C34  0EFD               	movlw	-3
 19681  017C36  50E3               	movf	plusw1,w,c
 19682  017C38  0A80               	xorlw	128
 19683  017C3A  5801               	subwfb	btemp^0,w,c
 19684  017C3C  A0D8               	btfss	status,0,c
 19685  017C3E  D7CF               	goto	l13664
 19686  017C40                     u12820:
 19687                           
 19688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 19689                           ;stkvar	_i @ sp[(-17)+15]
 19690  017C40  0EFE               	movlw	-2
 19691  017C42  6AE3               	clrf	plusw1,c
 19692  017C44  0EFF               	movlw	-1
 19693  017C46  6AE3               	clrf	plusw1,c
 19694                           
 19695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 19696  017C48  D045               	goto	l13678
 19697  017C4A                     l13672:
 19698                           
 19699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 19700                           ;stkvar	_fp @ sp[(-17)+-2]
 19701  017C4A  0EED               	movlw	-19
 19702  017C4C  006F FF8F FFE6     	movff	plusw1,postinc1
 19703  017C52  006F FF8F FFE6     	movff	plusw1,postinc1
 19704                           
 19705                           ;stkvar	_cp @ sp[(-19)+11]
 19706  017C58  0EF8               	movlw	-8
 19707  017C5A  006F FF8F FFF6     	movff	plusw1,tblptrl
 19708  017C60  0EF9               	movlw	-7
 19709  017C62  006F FF8F FFF7     	movff	plusw1,tblptrh
 19710  017C68  0E00               	movlw	low (__mediumconst shr (0+16))
 19711  017C6A  6EF8               	movwf	tblptru,c
 19712  017C6C  0E1F               	movlw	(high __ramtop+-1)
 19713  017C6E  64F7               	cpfsgt	tblptrh,c
 19714  017C70  D003               	bra	u12837
 19715  017C72  0008               	tblrd		*
 19716  017C74  50F5               	movf	tablat,w,c
 19717  017C76  D007               	bra	u12830
 19718  017C78                     u12837:
 19719  017C78  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19720  017C7E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19721  017C84  50EF               	movf	indf0,w,c
 19722  017C86                     u12830:
 19723  017C86  6EE6               	movwf	postinc1,c
 19724  017C88  0E00               	movlw	0
 19725  017C8A  6EE6               	movwf	postinc1,c
 19726  017C8C  ECBA  F0D1         	call	_fputc	;wreg free
 19727                           
 19728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 19729                           ;stkvar	_cp @ sp[(-17)+11]
 19730  017C90  0EFA               	movlw	-6
 19731  017C92  50E3               	movf	plusw1,w,c
 19732  017C94  0F01               	addlw	1
 19733  017C96  6E01               	movwf	btemp^0,c
 19734  017C98  0EFA               	movlw	-6
 19735  017C9A  0060  F007  FFE3   	movff	btemp,plusw1
 19736  017CA0  6A01               	clrf	btemp^0,c
 19737  017CA2  0EFB               	movlw	-5
 19738  017CA4  50E3               	movf	plusw1,w,c
 19739  017CA6  2001               	addwfc	btemp^0,w,c
 19740  017CA8  6E01               	movwf	btemp^0,c
 19741  017CAA  0EFB               	movlw	-5
 19742  017CAC  0060  F007  FFE3   	movff	btemp,plusw1
 19743                           
 19744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 19745                           ;stkvar	_i @ sp[(-17)+15]
 19746  017CB2  0EFE               	movlw	-2
 19747  017CB4  50E3               	movf	plusw1,w,c
 19748  017CB6  0F01               	addlw	1
 19749  017CB8  6E01               	movwf	btemp^0,c
 19750  017CBA  0EFE               	movlw	-2
 19751  017CBC  0060  F007  FFE3   	movff	btemp,plusw1
 19752  017CC2  6A01               	clrf	btemp^0,c
 19753  017CC4  0EFF               	movlw	-1
 19754  017CC6  50E3               	movf	plusw1,w,c
 19755  017CC8  2001               	addwfc	btemp^0,w,c
 19756  017CCA  6E01               	movwf	btemp^0,c
 19757  017CCC  0EFF               	movlw	-1
 19758  017CCE  0060  F007  FFE3   	movff	btemp,plusw1
 19759  017CD4                     l13678:
 19760                           
 19761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 19762                           ;stkvar	_p @ sp[(-17)+9]
 19763                           ;stkvar	_i @ sp[(-17)+15]
 19764  017CD4  50E1               	movf	fsr1l,w,c
 19765  017CD6  0FFE               	addlw	-2
 19766  017CD8  6ED9               	movwf	fsr2l,c
 19767  017CDA  50E2               	movf	fsr1h,w,c
 19768  017CDC  6EDA               	movwf	fsr2h,c
 19769  017CDE  0EFF               	movlw	255
 19770  017CE0  22DA               	addwfc	fsr2h,f,c
 19771  017CE2  0EF8               	movlw	-8
 19772  017CE4  50E3               	movf	plusw1,w,c
 19773  017CE6  5CDE               	subwf	postinc2,w,c
 19774  017CE8  50DE               	movf	postinc2,w,c
 19775  017CEA  0A80               	xorlw	128
 19776  017CEC  6E01               	movwf	btemp^0,c
 19777  017CEE  0EF9               	movlw	-7
 19778  017CF0  50E3               	movf	plusw1,w,c
 19779  017CF2  0A80               	xorlw	128
 19780  017CF4  5801               	subwfb	btemp^0,w,c
 19781  017CF6  A0D8               	btfss	status,0,c
 19782  017CF8  D7A8               	goto	l13672
 19783                           
 19784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 19785  017CFA  B03E               	btfsc	_flags^0,0,c
 19786  017CFC  D01F               	goto	l13686
 19787  017CFE  D031               	goto	u12860
 19788  017D00                     l13682:
 19789                           
 19790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 19791                           ;stkvar	_fp @ sp[(-17)+-2]
 19792  017D00  0EED               	movlw	-19
 19793  017D02  006F FF8F FFE6     	movff	plusw1,postinc1
 19794  017D08  006F FF8F FFE6     	movff	plusw1,postinc1
 19795  017D0E  0E20               	movlw	32
 19796  017D10  6EE6               	movwf	postinc1,c
 19797  017D12  0E00               	movlw	0
 19798  017D14  6EE6               	movwf	postinc1,c
 19799  017D16  ECBA  F0D1         	call	_fputc	;wreg free
 19800                           
 19801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 19802                           ;stkvar	_l @ sp[(-17)+7]
 19803  017D1A  0EF6               	movlw	-10
 19804  017D1C  50E3               	movf	plusw1,w,c
 19805  017D1E  0F01               	addlw	1
 19806  017D20  6E01               	movwf	btemp^0,c
 19807  017D22  0EF6               	movlw	-10
 19808  017D24  0060  F007  FFE3   	movff	btemp,plusw1
 19809  017D2A  6A01               	clrf	btemp^0,c
 19810  017D2C  0EF7               	movlw	-9
 19811  017D2E  50E3               	movf	plusw1,w,c
 19812  017D30  2001               	addwfc	btemp^0,w,c
 19813  017D32  6E01               	movwf	btemp^0,c
 19814  017D34  0EF7               	movlw	-9
 19815  017D36  0060  F007  FFE3   	movff	btemp,plusw1
 19816  017D3C                     l13686:
 19817                           
 19818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 19819                           ;stkvar	_w @ sp[(-17)+13]
 19820                           ;stkvar	_l @ sp[(-17)+7]
 19821  017D3C  50E1               	movf	fsr1l,w,c
 19822  017D3E  0FF6               	addlw	-10
 19823  017D40  6ED9               	movwf	fsr2l,c
 19824  017D42  50E2               	movf	fsr1h,w,c
 19825  017D44  6EDA               	movwf	fsr2h,c
 19826  017D46  0EFF               	movlw	255
 19827  017D48  22DA               	addwfc	fsr2h,f,c
 19828  017D4A  0EFC               	movlw	-4
 19829  017D4C  50E3               	movf	plusw1,w,c
 19830  017D4E  5CDE               	subwf	postinc2,w,c
 19831  017D50  50DE               	movf	postinc2,w,c
 19832  017D52  0A80               	xorlw	128
 19833  017D54  6E01               	movwf	btemp^0,c
 19834  017D56  0EFD               	movlw	-3
 19835  017D58  50E3               	movf	plusw1,w,c
 19836  017D5A  0A80               	xorlw	128
 19837  017D5C  5801               	subwfb	btemp^0,w,c
 19838  017D5E  A0D8               	btfss	status,0,c
 19839  017D60  D7CF               	goto	l13682
 19840  017D62                     u12860:
 19841                           
 19842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 19843                           ;stkvar	_l @ sp[(-17)+7]
 19844  017D62  0EF6               	movlw	-10
 19845  017D64  006F FF8C  F001    	movff	plusw1,btemp
 19846  017D6A  0EF7               	movlw	-9
 19847  017D6C  006F FF8C  F002    	movff	plusw1,btemp+1
 19848                           
 19849                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19850  017D72  0EEB               	movlw	235
 19851  017D74  26E1               	addwf	fsr1l,f,c
 19852  017D76  0EFF               	movlw	255
 19853  017D78  22E2               	addwfc	fsr1h,f,c
 19854  017D7A  0012               	return		;funcret
 19855  017D7C                     __end_of_stoa:
 19856                           	opt callstack 0
 19857                           
 19858 ;; *************** function _efgtoa *****************
 19859 ;; Defined at:
 19860 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19861 ;; Parameters:    Size  Location     Type
 19862 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19863 ;;		 -> f(6), NULL(0), 
 19864 ;;  f               4  [STACK] PTR struct _IO_FILE
 19865 ;;  c               1  [STACK] unsigned char 
 19866 ;; Auto vars:     Size  Location     Type
 19867 ;;  u               4  [STACK] unsigned char 
 19868 ;;  g               4  [STACK] unsigned char 
 19869 ;;  l               4  [STACK] unsigned char 
 19870 ;;  h               4  [STACK] unsigned char 
 19871 ;;  ou              4  [STACK] unsigned char 
 19872 ;;  n               2  [STACK] int 
 19873 ;;  e               2  [STACK] int 
 19874 ;;  i               2  [STACK] int 
 19875 ;;  w               2  [STACK] int 
 19876 ;;  p               2  [STACK] int 
 19877 ;;  sign            2  [STACK] int 
 19878 ;;  d               2  [STACK] int 
 19879 ;;  ne              2  [STACK] int 
 19880 ;;  m               2  [STACK] int 
 19881 ;;  pp              2  [STACK] int 
 19882 ;;  t               2  [STACK] int 
 19883 ;;  mode            1  [STACK] unsigned char 
 19884 ;;  nmode           1  [STACK] unsigned char 
 19885 ;; Return value:  Size  Location     Type
 19886 ;;                  2  [STACK] int 
 19887 ;; Registers used:
 19888 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 19889 ;; Tracked objects:
 19890 ;;		On entry : 0/0
 19891 ;;		On exit  : 0/0
 19892 ;;		Unchanged: 0/0
 19893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19898 ;;Total ram usage:        0 bytes
 19899 ;; Hardware stack levels used:    1
 19900 ;; Hardware stack levels required when called:   20
 19901 ;; This function calls:
 19902 ;;		___awdiv
 19903 ;;		___awmod
 19904 ;;		___fladd
 19905 ;;		___fldiv
 19906 ;;		___fleq
 19907 ;;		___flge
 19908 ;;		___flmul
 19909 ;;		___flneg
 19910 ;;		___flsub
 19911 ;;		___fltol
 19912 ;;		___fpclassifyf
 19913 ;;		_floorf
 19914 ;;		_isupper
 19915 ;;		_pad
 19916 ;;		_strcpy
 19917 ;;		_tolower
 19918 ;; This function is called by:
 19919 ;;		_vfpfcnvrt
 19920 ;; This function uses a reentrant model
 19921 ;;
 19922                           
 19923                           	psect	text77
 19924  01137C                     __ptext77:
 19925                           	opt callstack 0
 19926  01137C                     _efgtoa:
 19927                           	opt callstack 0
 19928                           
 19929                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 19930  01137C  0E38               	movlw	56
 19931  01137E  26E1               	addwf	fsr1l,f,c
 19932  011380  0E00               	movlw	0
 19933  011382  22E2               	addwfc	fsr1h,f,c
 19934                           
 19935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 19936                           ;stkvar	_sign @ sp[(-56)+42]
 19937                           
 19938                           ;incstack = 0
 19939 ;; hardware stack exceeded
 19940  011384  0EF2               	movlw	-14
 19941  011386  6AE3               	clrf	plusw1,c
 19942  011388  0EF3               	movlw	-13
 19943  01138A  6AE3               	clrf	plusw1,c
 19944                           
 19945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 19946                           ;stkvar	_f @ sp[(-56)+-6]
 19947  01138C  0EC2               	movlw	-62
 19948  01138E  006F FF8C  F009    	movff	plusw1,btemp+8
 19949  011394  0EC3               	movlw	-61
 19950  011396  006F FF8C  F00A    	movff	plusw1,btemp+9
 19951  01139C  0EC4               	movlw	-60
 19952  01139E  006F FF8C  F00B    	movff	plusw1,btemp+10
 19953  0113A4  0EC5               	movlw	-59
 19954  0113A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 19955                           
 19956                           ;stkvar	_g @ sp[(-56)+16]
 19957  0113AC  0ED8               	movlw	-40
 19958  0113AE  0060  F027  FFE3   	movff	btemp+8,plusw1
 19959  0113B4  0ED9               	movlw	-39
 19960  0113B6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19961  0113BC  0EDA               	movlw	-38
 19962  0113BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19963  0113C4  0EDB               	movlw	-37
 19964  0113C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 19965                           
 19966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 19967                           ;stkvar	_g @ sp[(-56)+16]
 19968  0113CC  0EDB               	movlw	-37
 19969  0113CE  AEE3               	btfss	plusw1,7,c
 19970  0113D0  D02B               	goto	l13346
 19971                           
 19972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 19973  0113D2  0E01               	movlw	1
 19974  0113D4  6E0B               	movwf	(btemp+10)^0,c
 19975  0113D6  0E00               	movlw	0
 19976  0113D8  6E0C               	movwf	(btemp+11)^0,c
 19977                           
 19978                           ;stkvar	_sign @ sp[(-56)+42]
 19979  0113DA  0EF2               	movlw	-14
 19980  0113DC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19981  0113E2  0EF3               	movlw	-13
 19982  0113E4  0060  F033  FFE3   	movff	btemp+11,plusw1
 19983                           
 19984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 19985                           ;stkvar	_g @ sp[(-56)+16]
 19986  0113EA  0ED8               	movlw	-40
 19987  0113EC  006F FF8F FFE6     	movff	plusw1,postinc1
 19988  0113F2  006F FF8F FFE6     	movff	plusw1,postinc1
 19989  0113F8  006F FF8F FFE6     	movff	plusw1,postinc1
 19990  0113FE  006F FF8F FFE6     	movff	plusw1,postinc1
 19991  011404  EC83  F0E3         	call	___flneg	;wreg free
 19992                           
 19993                           ;stkvar	_g @ sp[(-56)+16]
 19994  011408  0ED8               	movlw	-40
 19995  01140A  0060  F007  FFE3   	movff	btemp,plusw1
 19996  011410  0ED9               	movlw	-39
 19997  011412  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19998  011418  0EDA               	movlw	-38
 19999  01141A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20000  011420  0EDB               	movlw	-37
 20001  011422  0060  F013  FFE3   	movff	btemp+3,plusw1
 20002  011428                     l13346:
 20003                           
 20004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 20005                           ;stkvar	_n @ sp[(-56)+32]
 20006  011428  0EE8               	movlw	-24
 20007  01142A  6AE3               	clrf	plusw1,c
 20008  01142C  0EE9               	movlw	-23
 20009  01142E  6AE3               	clrf	plusw1,c
 20010                           
 20011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 20012                           ;stkvar	_w @ sp[(-56)+38]
 20013  011430  0EEE               	movlw	-18
 20014  011432  0060  F0EB  FFE3   	movff	_width,plusw1
 20015  011438  0EEF               	movlw	-17
 20016  01143A  0060  F0EF  FFE3   	movff	_width+1,plusw1
 20017                           
 20018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 20019                           ;stkvar	_sign @ sp[(-56)+42]
 20020  011440  0EF2               	movlw	-14
 20021  011442  006F FF8C  F001    	movff	plusw1,btemp
 20022  011448  0EF3               	movlw	-13
 20023  01144A  50E3               	movf	plusw1,w,c
 20024  01144C  1001               	iorwf	btemp^0,w,c
 20025  01144E  A4D8               	btfss	status,2,c
 20026  011450  D002               	goto	u12270
 20027  011452  A43E               	btfss	_flags^0,2,c
 20028  011454  D036               	goto	l13366
 20029  011456                     u12270:
 20030                           
 20031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 20032                           ;stkvar	_sign @ sp[(-56)+42]
 20033  011456  0EF2               	movlw	-14
 20034  011458  006F FF8C  F001    	movff	plusw1,btemp
 20035  01145E  0EF3               	movlw	-13
 20036  011460  50E3               	movf	plusw1,w,c
 20037  011462  1001               	iorwf	btemp^0,w,c
 20038  011464  A4D8               	btfss	status,2,c
 20039  011466  D002               	goto	l13358
 20040  011468  0E2B               	movlw	43
 20041  01146A  D001               	goto	L21
 20042  01146C                     l13358:
 20043  01146C  0E2D               	movlw	45
 20044  01146E                     L21:
 20045  01146E  6E0B               	movwf	(btemp+10)^0,c
 20046  011470  0E00               	movlw	0
 20047  011472  6E0C               	movwf	(btemp+11)^0,c
 20048                           
 20049                           ;stkvar	_efgtoa$6793 @ sp[(-56)+10]
 20050  011474  0ED2               	movlw	-46
 20051  011476  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20052  01147C  0ED3               	movlw	-45
 20053  01147E  0060  F033  FFE3   	movff	btemp+11,plusw1
 20054                           
 20055                           ;stkvar	_efgtoa$6793 @ sp[(-56)+10]
 20056  011484  0ED2               	movlw	-46
 20057  011486  006F FF8C  F394    	movff	plusw1,_dbuf
 20058                           
 20059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 20060                           ;stkvar	_n @ sp[(-56)+32]
 20061  01148C  0EE8               	movlw	-24
 20062  01148E  50E3               	movf	plusw1,w,c
 20063  011490  0F01               	addlw	1
 20064  011492  6E01               	movwf	btemp^0,c
 20065  011494  0EE8               	movlw	-24
 20066  011496  0060  F007  FFE3   	movff	btemp,plusw1
 20067  01149C  6A01               	clrf	btemp^0,c
 20068  01149E  0EE9               	movlw	-23
 20069  0114A0  50E3               	movf	plusw1,w,c
 20070  0114A2  2001               	addwfc	btemp^0,w,c
 20071  0114A4  6E01               	movwf	btemp^0,c
 20072  0114A6  0EE9               	movlw	-23
 20073  0114A8  0060  F007  FFE3   	movff	btemp,plusw1
 20074                           
 20075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 20076                           ;stkvar	_w @ sp[(-56)+38]
 20077  0114AE  50E1               	movf	fsr1l,w,c
 20078  0114B0  0FEE               	addlw	-18
 20079  0114B2  6ED9               	movwf	fsr2l,c
 20080  0114B4  50E2               	movf	fsr1h,w,c
 20081  0114B6  6EDA               	movwf	fsr2h,c
 20082  0114B8  0EFF               	movlw	255
 20083  0114BA  22DA               	addwfc	fsr2h,f,c
 20084  0114BC  06DE               	decf	postinc2,f,c
 20085  0114BE  0E00               	movlw	0
 20086  0114C0  5ADD               	subwfb	postdec2,f,c
 20087  0114C2                     l13366:
 20088                           
 20089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 20090                           ;stkvar	_g @ sp[(-56)+16]
 20091  0114C2  0ED8               	movlw	-40
 20092  0114C4  006F FF8F FFE6     	movff	plusw1,postinc1
 20093  0114CA  006F FF8F FFE6     	movff	plusw1,postinc1
 20094  0114D0  006F FF8F FFE6     	movff	plusw1,postinc1
 20095  0114D6  006F FF8F FFE6     	movff	plusw1,postinc1
 20096  0114DC  EC6C  F0C9         	call	___fpclassifyf	;wreg free
 20097  0114E0  0401               	decf	btemp^0,w,c
 20098  0114E2  1002               	iorwf	(btemp+1)^0,w,c
 20099  0114E4  A4D8               	btfss	status,2,c
 20100  0114E6  D076               	goto	l13384
 20101  0114E8  0EBF               	movlw	191
 20102  0114EA  6E0B               	movwf	(btemp+10)^0,c
 20103  0114EC  0EFF               	movlw	255
 20104  0114EE  6E0C               	movwf	(btemp+11)^0,c
 20105                           
 20106                           ;stkvar	_c @ sp[(-56)+-7]
 20107  0114F0  0EC1               	movlw	-63
 20108  0114F2  50E3               	movf	plusw1,w,c
 20109  0114F4  6E09               	movwf	(btemp+8)^0,c
 20110  0114F6  6A0A               	clrf	(btemp+9)^0,c
 20111  0114F8  500B               	movf	(btemp+10)^0,w,c
 20112  0114FA  2609               	addwf	(btemp+8)^0,f,c
 20113  0114FC  500C               	movf	(btemp+11)^0,w,c
 20114  0114FE  220A               	addwfc	(btemp+9)^0,f,c
 20115  011500  500A               	movf	(btemp+9)^0,w,c
 20116  011502  E106               	bnz	u12300
 20117  011504  0E1A               	movlw	26
 20118  011506  5C09               	subwf	(btemp+8)^0,w,c
 20119  011508  B0D8               	btfsc	status,0,c
 20120  01150A  D002               	goto	u12300
 20121  01150C  0E01               	movlw	1
 20122  01150E  D001               	goto	u12310
 20123  011510                     u12300:
 20124  011510  0E00               	movlw	0
 20125  011512                     u12310:
 20126  011512  6E0B               	movwf	(btemp+10)^0,c
 20127  011514  6A0C               	clrf	(btemp+11)^0,c
 20128                           
 20129                           ;stkvar	_efgtoa$6794 @ sp[(-56)+8]
 20130  011516  0ED0               	movlw	-48
 20131  011518  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20132  01151E  0ED1               	movlw	-47
 20133  011520  0060  F033  FFE3   	movff	btemp+11,plusw1
 20134                           
 20135                           ;stkvar	_efgtoa$6794 @ sp[(-56)+8]
 20136  011526  0ED0               	movlw	-48
 20137  011528  006F FF8C  F001    	movff	plusw1,btemp
 20138  01152E  0ED1               	movlw	-47
 20139  011530  50E3               	movf	plusw1,w,c
 20140  011532  1001               	iorwf	btemp^0,w,c
 20141  011534  B4D8               	btfsc	status,2,c
 20142  011536  D017               	goto	l13376
 20143                           
 20144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 20145  011538  0ED6               	movlw	low STR_84
 20146  01153A  6EE6               	movwf	postinc1,c
 20147  01153C  0EFF               	movlw	high STR_84
 20148  01153E  6EE6               	movwf	postinc1,c
 20149                           
 20150                           ;stkvar	_n @ sp[(-58)+32]
 20151  011540  0E94               	movlw	low _dbuf
 20152  011542  6E0B               	movwf	(btemp+10)^0,c
 20153  011544  0E03               	movlw	high _dbuf
 20154  011546  6E0C               	movwf	(btemp+11)^0,c
 20155  011548  0EE6               	movlw	-26
 20156  01154A  50E3               	movf	plusw1,w,c
 20157  01154C  260B               	addwf	(btemp+10)^0,f,c
 20158  01154E  0EE7               	movlw	-25
 20159  011550  50E3               	movf	plusw1,w,c
 20160  011552  220C               	addwfc	(btemp+11)^0,f,c
 20161  011554  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20162  01155A  0060  F033  FFE6   	movff	btemp+11,postinc1
 20163  011560  ECDE  F0D7         	call	_strcpy	;wreg free
 20164                           
 20165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 20166  011564  D016               	goto	l13378
 20167  011566                     l13376:
 20168                           
 20169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 20170  011566  0EDE               	movlw	low STR_85
 20171  011568  6EE6               	movwf	postinc1,c
 20172  01156A  0EFF               	movlw	high STR_85
 20173  01156C  6EE6               	movwf	postinc1,c
 20174                           
 20175                           ;stkvar	_n @ sp[(-58)+32]
 20176  01156E  0E94               	movlw	low _dbuf
 20177  011570  6E0B               	movwf	(btemp+10)^0,c
 20178  011572  0E03               	movlw	high _dbuf
 20179  011574  6E0C               	movwf	(btemp+11)^0,c
 20180  011576  0EE6               	movlw	-26
 20181  011578  50E3               	movf	plusw1,w,c
 20182  01157A  260B               	addwf	(btemp+10)^0,f,c
 20183  01157C  0EE7               	movlw	-25
 20184  01157E  50E3               	movf	plusw1,w,c
 20185  011580  220C               	addwfc	(btemp+11)^0,f,c
 20186  011582  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20187  011588  0060  F033  FFE6   	movff	btemp+11,postinc1
 20188  01158E  ECDE  F0D7         	call	_strcpy	;wreg free
 20189  011592                     l13378:
 20190                           
 20191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 20192                           ;stkvar	_w @ sp[(-56)+38]
 20193  011592  50E1               	movf	fsr1l,w,c
 20194  011594  0FEE               	addlw	-18
 20195  011596  6ED9               	movwf	fsr2l,c
 20196  011598  50E2               	movf	fsr1h,w,c
 20197  01159A  6EDA               	movwf	fsr2h,c
 20198  01159C  0EFF               	movlw	255
 20199  01159E  22DA               	addwfc	fsr2h,f,c
 20200  0115A0  0EFD               	movlw	253
 20201  0115A2  26DE               	addwf	postinc2,f,c
 20202  0115A4  0EFF               	movlw	255
 20203  0115A6  22DD               	addwfc	postdec2,f,c
 20204  0115A8                     l13380:
 20205                           
 20206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 20207                           ;stkvar	_w @ sp[(-56)+38]
 20208  0115A8  0EEE               	movlw	-18
 20209  0115AA  006F FF8F FFE6     	movff	plusw1,postinc1
 20210  0115B0  006F FF8F FFE6     	movff	plusw1,postinc1
 20211  0115B6  0E94               	movlw	low _dbuf
 20212  0115B8  6EE6               	movwf	postinc1,c
 20213  0115BA  0E03               	movlw	high _dbuf
 20214  0115BC  6EE6               	movwf	postinc1,c
 20215                           
 20216                           ;stkvar	_fp @ sp[(-60)+-2]
 20217  0115BE  0EC2               	movlw	-62
 20218  0115C0  006F FF8F FFE6     	movff	plusw1,postinc1
 20219  0115C6  006F FF8F FFE6     	movff	plusw1,postinc1
 20220  0115CC  EC82  F0D4         	call	_pad	;wreg free
 20221  0115D0  EFDB  F092         	goto	l2478
 20222  0115D4                     l13384:
 20223                           
 20224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 20225                           ;stkvar	_g @ sp[(-56)+16]
 20226  0115D4  0ED8               	movlw	-40
 20227  0115D6  006F FF8F FFE6     	movff	plusw1,postinc1
 20228  0115DC  006F FF8F FFE6     	movff	plusw1,postinc1
 20229  0115E2  006F FF8F FFE6     	movff	plusw1,postinc1
 20230  0115E8  006F FF8F FFE6     	movff	plusw1,postinc1
 20231  0115EE  EC6C  F0C9         	call	___fpclassifyf	;wreg free
 20232  0115F2  5001               	movf	btemp^0,w,c
 20233  0115F4  1002               	iorwf	(btemp+1)^0,w,c
 20234  0115F6  A4D8               	btfss	status,2,c
 20235  0115F8  D056               	goto	l13402
 20236  0115FA  0EBF               	movlw	191
 20237  0115FC  6E0B               	movwf	(btemp+10)^0,c
 20238  0115FE  0EFF               	movlw	255
 20239  011600  6E0C               	movwf	(btemp+11)^0,c
 20240                           
 20241                           ;stkvar	_c @ sp[(-56)+-7]
 20242  011602  0EC1               	movlw	-63
 20243  011604  50E3               	movf	plusw1,w,c
 20244  011606  6E09               	movwf	(btemp+8)^0,c
 20245  011608  6A0A               	clrf	(btemp+9)^0,c
 20246  01160A  500B               	movf	(btemp+10)^0,w,c
 20247  01160C  2609               	addwf	(btemp+8)^0,f,c
 20248  01160E  500C               	movf	(btemp+11)^0,w,c
 20249  011610  220A               	addwfc	(btemp+9)^0,f,c
 20250  011612  500A               	movf	(btemp+9)^0,w,c
 20251  011614  E106               	bnz	u12340
 20252  011616  0E1A               	movlw	26
 20253  011618  5C09               	subwf	(btemp+8)^0,w,c
 20254  01161A  B0D8               	btfsc	status,0,c
 20255  01161C  D002               	goto	u12340
 20256  01161E  0E01               	movlw	1
 20257  011620  D001               	goto	u12350
 20258  011622                     u12340:
 20259  011622  0E00               	movlw	0
 20260  011624                     u12350:
 20261  011624  6E0B               	movwf	(btemp+10)^0,c
 20262  011626  6A0C               	clrf	(btemp+11)^0,c
 20263                           
 20264                           ;stkvar	_efgtoa$6798 @ sp[(-56)+6]
 20265  011628  0ECE               	movlw	-50
 20266  01162A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20267  011630  0ECF               	movlw	-49
 20268  011632  0060  F033  FFE3   	movff	btemp+11,plusw1
 20269                           
 20270                           ;stkvar	_efgtoa$6798 @ sp[(-56)+6]
 20271  011638  0ECE               	movlw	-50
 20272  01163A  006F FF8C  F001    	movff	plusw1,btemp
 20273  011640  0ECF               	movlw	-49
 20274  011642  50E3               	movf	plusw1,w,c
 20275  011644  1001               	iorwf	btemp^0,w,c
 20276  011646  B4D8               	btfsc	status,2,c
 20277  011648  D017               	goto	l13394
 20278                           
 20279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 20280  01164A  0EDA               	movlw	low STR_88
 20281  01164C  6EE6               	movwf	postinc1,c
 20282  01164E  0EFF               	movlw	high STR_88
 20283  011650  6EE6               	movwf	postinc1,c
 20284                           
 20285                           ;stkvar	_n @ sp[(-58)+32]
 20286  011652  0E94               	movlw	low _dbuf
 20287  011654  6E0B               	movwf	(btemp+10)^0,c
 20288  011656  0E03               	movlw	high _dbuf
 20289  011658  6E0C               	movwf	(btemp+11)^0,c
 20290  01165A  0EE6               	movlw	-26
 20291  01165C  50E3               	movf	plusw1,w,c
 20292  01165E  260B               	addwf	(btemp+10)^0,f,c
 20293  011660  0EE7               	movlw	-25
 20294  011662  50E3               	movf	plusw1,w,c
 20295  011664  220C               	addwfc	(btemp+11)^0,f,c
 20296  011666  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20297  01166C  0060  F033  FFE6   	movff	btemp+11,postinc1
 20298  011672  ECDE  F0D7         	call	_strcpy	;wreg free
 20299                           
 20300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 20301  011676  D78D               	goto	l13378
 20302  011678                     l13394:
 20303                           
 20304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 20305  011678  0EE2               	movlw	low STR_89
 20306  01167A  6EE6               	movwf	postinc1,c
 20307  01167C  0EFF               	movlw	high STR_89
 20308  01167E  6EE6               	movwf	postinc1,c
 20309                           
 20310                           ;stkvar	_n @ sp[(-58)+32]
 20311  011680  0E94               	movlw	low _dbuf
 20312  011682  6E0B               	movwf	(btemp+10)^0,c
 20313  011684  0E03               	movlw	high _dbuf
 20314  011686  6E0C               	movwf	(btemp+11)^0,c
 20315  011688  0EE6               	movlw	-26
 20316  01168A  50E3               	movf	plusw1,w,c
 20317  01168C  260B               	addwf	(btemp+10)^0,f,c
 20318  01168E  0EE7               	movlw	-25
 20319  011690  50E3               	movf	plusw1,w,c
 20320  011692  220C               	addwfc	(btemp+11)^0,f,c
 20321  011694  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20322  01169A  0060  F033  FFE6   	movff	btemp+11,postinc1
 20323  0116A0  ECDE  F0D7         	call	_strcpy	;wreg free
 20324  0116A4  D776               	goto	l13378
 20325  0116A6                     l13402:
 20326                           
 20327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 20328  0116A6  0E00               	movlw	0
 20329  0116A8  6E09               	movwf	(btemp+8)^0,c
 20330  0116AA  0E00               	movlw	0
 20331  0116AC  6E0A               	movwf	(btemp+9)^0,c
 20332  0116AE  0E80               	movlw	128
 20333  0116B0  6E0B               	movwf	(btemp+10)^0,c
 20334  0116B2  0E3F               	movlw	63
 20335  0116B4  6E0C               	movwf	(btemp+11)^0,c
 20336                           
 20337                           ;stkvar	_u @ sp[(-56)+12]
 20338  0116B6  0ED4               	movlw	-44
 20339  0116B8  0060  F027  FFE3   	movff	btemp+8,plusw1
 20340  0116BE  0ED5               	movlw	-43
 20341  0116C0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20342  0116C6  0ED6               	movlw	-42
 20343  0116C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20344  0116CE  0ED7               	movlw	-41
 20345  0116D0  0060  F033  FFE3   	movff	btemp+11,plusw1
 20346                           
 20347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 20348                           ;stkvar	_e @ sp[(-56)+34]
 20349  0116D6  0EEA               	movlw	-22
 20350  0116D8  6AE3               	clrf	plusw1,c
 20351  0116DA  0EEB               	movlw	-21
 20352  0116DC  6AE3               	clrf	plusw1,c
 20353                           
 20354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 20355  0116DE  0E00               	movlw	0
 20356  0116E0  6EE6               	movwf	postinc1,c
 20357  0116E2  0E00               	movlw	0
 20358  0116E4  6EE6               	movwf	postinc1,c
 20359  0116E6  0E00               	movlw	0
 20360  0116E8  6EE6               	movwf	postinc1,c
 20361  0116EA  0E00               	movlw	0
 20362  0116EC  6EE6               	movwf	postinc1,c
 20363                           
 20364                           ;stkvar	_g @ sp[(-60)+16]
 20365  0116EE  0ED4               	movlw	-44
 20366  0116F0  006F FF8F FFE6     	movff	plusw1,postinc1
 20367  0116F6  006F FF8F FFE6     	movff	plusw1,postinc1
 20368  0116FC  006F FF8F FFE6     	movff	plusw1,postinc1
 20369  011702  006F FF8F FFE6     	movff	plusw1,postinc1
 20370  011708  EC13  F0D9         	call	___fleq	;wreg free
 20371  01170C  A001               	btfss	btemp& (0+255),0,c
 20372  01170E  D039               	goto	l13414
 20373  011710  D0BC               	goto	u12390
 20374  011712                     l13410:
 20375                           
 20376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 20377  011712  0E00               	movlw	0
 20378  011714  6EE6               	movwf	postinc1,c
 20379  011716  0E00               	movlw	0
 20380  011718  6EE6               	movwf	postinc1,c
 20381  01171A  0E20               	movlw	32
 20382  01171C  6EE6               	movwf	postinc1,c
 20383  01171E  0E41               	movlw	65
 20384  011720  6EE6               	movwf	postinc1,c
 20385                           
 20386                           ;stkvar	_u @ sp[(-60)+12]
 20387  011722  0ED0               	movlw	-48
 20388  011724  006F FF8F FFE6     	movff	plusw1,postinc1
 20389  01172A  006F FF8F FFE6     	movff	plusw1,postinc1
 20390  011730  006F FF8F FFE6     	movff	plusw1,postinc1
 20391  011736  006F FF8F FFE6     	movff	plusw1,postinc1
 20392  01173C  ECED  F09F         	call	___flmul	;wreg free
 20393                           
 20394                           ;stkvar	_u @ sp[(-56)+12]
 20395  011740  0ED4               	movlw	-44
 20396  011742  0060  F007  FFE3   	movff	btemp,plusw1
 20397  011748  0ED5               	movlw	-43
 20398  01174A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20399  011750  0ED6               	movlw	-42
 20400  011752  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20401  011758  0ED7               	movlw	-41
 20402  01175A  0060  F013  FFE3   	movff	btemp+3,plusw1
 20403                           
 20404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 20405                           ;stkvar	_e @ sp[(-56)+34]
 20406  011760  0EEA               	movlw	-22
 20407  011762  50E3               	movf	plusw1,w,c
 20408  011764  0F01               	addlw	1
 20409  011766  6E01               	movwf	btemp^0,c
 20410  011768  0EEA               	movlw	-22
 20411  01176A  0060  F007  FFE3   	movff	btemp,plusw1
 20412  011770  6A01               	clrf	btemp^0,c
 20413  011772  0EEB               	movlw	-21
 20414  011774  50E3               	movf	plusw1,w,c
 20415  011776  2001               	addwfc	btemp^0,w,c
 20416  011778  6E01               	movwf	btemp^0,c
 20417  01177A  0EEB               	movlw	-21
 20418  01177C  0060  F007  FFE3   	movff	btemp,plusw1
 20419  011782                     l13414:
 20420                           
 20421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 20422  011782  0E00               	movlw	0
 20423  011784  6EE6               	movwf	postinc1,c
 20424  011786  0E00               	movlw	0
 20425  011788  6EE6               	movwf	postinc1,c
 20426  01178A  0E20               	movlw	32
 20427  01178C  6EE6               	movwf	postinc1,c
 20428  01178E  0E41               	movlw	65
 20429  011790  6EE6               	movwf	postinc1,c
 20430                           
 20431                           ;stkvar	_u @ sp[(-60)+12]
 20432  011792  0ED0               	movlw	-48
 20433  011794  006F FF8F FFE6     	movff	plusw1,postinc1
 20434  01179A  006F FF8F FFE6     	movff	plusw1,postinc1
 20435  0117A0  006F FF8F FFE6     	movff	plusw1,postinc1
 20436  0117A6  006F FF8F FFE6     	movff	plusw1,postinc1
 20437  0117AC  ECED  F09F         	call	___flmul	;wreg free
 20438  0117B0  0060  F007  FFE6   	movff	btemp,postinc1
 20439  0117B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20440  0117BC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20441  0117C2  0060  F013  FFE6   	movff	btemp+3,postinc1
 20442                           
 20443                           ;stkvar	_g @ sp[(-60)+16]
 20444  0117C8  0ED4               	movlw	-44
 20445  0117CA  006F FF8F FFE6     	movff	plusw1,postinc1
 20446  0117D0  006F FF8F FFE6     	movff	plusw1,postinc1
 20447  0117D6  006F FF8F FFE6     	movff	plusw1,postinc1
 20448  0117DC  006F FF8F FFE6     	movff	plusw1,postinc1
 20449  0117E2  EC2C  F0CD         	call	___flge	;wreg free
 20450  0117E6  A001               	btfss	btemp& (0+255),0,c
 20451  0117E8  D032               	goto	l13420
 20452  0117EA  D793               	goto	l13410
 20453  0117EC                     l13416:
 20454                           
 20455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 20456  0117EC  0E00               	movlw	0
 20457  0117EE  6EE6               	movwf	postinc1,c
 20458  0117F0  0E00               	movlw	0
 20459  0117F2  6EE6               	movwf	postinc1,c
 20460  0117F4  0E20               	movlw	32
 20461  0117F6  6EE6               	movwf	postinc1,c
 20462  0117F8  0E41               	movlw	65
 20463  0117FA  6EE6               	movwf	postinc1,c
 20464                           
 20465                           ;stkvar	_u @ sp[(-60)+12]
 20466  0117FC  0ED0               	movlw	-48
 20467  0117FE  006F FF8F FFE6     	movff	plusw1,postinc1
 20468  011804  006F FF8F FFE6     	movff	plusw1,postinc1
 20469  01180A  006F FF8F FFE6     	movff	plusw1,postinc1
 20470  011810  006F FF8F FFE6     	movff	plusw1,postinc1
 20471  011816  ECE0  F0A7         	call	___fldiv	;wreg free
 20472                           
 20473                           ;stkvar	_u @ sp[(-56)+12]
 20474  01181A  0ED4               	movlw	-44
 20475  01181C  0060  F007  FFE3   	movff	btemp,plusw1
 20476  011822  0ED5               	movlw	-43
 20477  011824  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20478  01182A  0ED6               	movlw	-42
 20479  01182C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20480  011832  0ED7               	movlw	-41
 20481  011834  0060  F013  FFE3   	movff	btemp+3,plusw1
 20482                           
 20483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 20484                           ;stkvar	_e @ sp[(-56)+34]
 20485  01183A  50E1               	movf	fsr1l,w,c
 20486  01183C  0FEA               	addlw	-22
 20487  01183E  6ED9               	movwf	fsr2l,c
 20488  011840  50E2               	movf	fsr1h,w,c
 20489  011842  6EDA               	movwf	fsr2h,c
 20490  011844  0EFF               	movlw	255
 20491  011846  22DA               	addwfc	fsr2h,f,c
 20492  011848  06DE               	decf	postinc2,f,c
 20493  01184A  0E00               	movlw	0
 20494  01184C  5ADD               	subwfb	postdec2,f,c
 20495  01184E                     l13420:
 20496                           
 20497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 20498                           ;stkvar	_u @ sp[(-56)+12]
 20499  01184E  0ED4               	movlw	-44
 20500  011850  006F FF8F FFE6     	movff	plusw1,postinc1
 20501  011856  006F FF8F FFE6     	movff	plusw1,postinc1
 20502  01185C  006F FF8F FFE6     	movff	plusw1,postinc1
 20503  011862  006F FF8F FFE6     	movff	plusw1,postinc1
 20504                           
 20505                           ;stkvar	_g @ sp[(-60)+16]
 20506  011868  0ED4               	movlw	-44
 20507  01186A  006F FF8F FFE6     	movff	plusw1,postinc1
 20508  011870  006F FF8F FFE6     	movff	plusw1,postinc1
 20509  011876  006F FF8F FFE6     	movff	plusw1,postinc1
 20510  01187C  006F FF8F FFE6     	movff	plusw1,postinc1
 20511  011882  EC2C  F0CD         	call	___flge	;wreg free
 20512  011886  A001               	btfss	btemp& (0+255),0,c
 20513  011888  D7B1               	goto	l13416
 20514  01188A                     u12390:
 20515                           
 20516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 20517                           ;stkvar	_c @ sp[(-56)+-7]
 20518  01188A  0EC1               	movlw	-63
 20519  01188C  50E3               	movf	plusw1,w,c
 20520  01188E  6EE6               	movwf	postinc1,c
 20521  011890  0E00               	movlw	0
 20522  011892  6EE6               	movwf	postinc1,c
 20523  011894  ECCF  F0DE         	call	_tolower	;wreg free
 20524                           
 20525                           ;stkvar	_mode @ sp[(-56)+54]
 20526  011898  0EFE               	movlw	-2
 20527  01189A  0060  F007  FFE3   	movff	btemp,plusw1
 20528                           
 20529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 20530                           ;stkvar	_mode @ sp[(-56)+54]
 20531                           ;stkvar	_nmode @ sp[(-56)+55]
 20532  0118A0  0EFE               	movlw	-2
 20533  0118A2  006F FF8C  F001    	movff	plusw1,btemp
 20534  0118A8  0EFF               	movlw	-1
 20535  0118AA  0060  F007  FFE3   	movff	btemp,plusw1
 20536                           
 20537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 20538                           ;stkvar	_mode @ sp[(-56)+54]
 20539  0118B0  0EFE               	movlw	-2
 20540  0118B2  006F FF8C  F001    	movff	plusw1,btemp
 20541  0118B8  0E67               	movlw	103
 20542  0118BA  1801               	xorwf	btemp^0,w,c
 20543  0118BC  A4D8               	btfss	status,2,c
 20544  0118BE  D025               	goto	l13438
 20545                           
 20546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 20547  0118C0  503C               	movf	_prec^0,w,c
 20548  0118C2  103D               	iorwf	(_prec+1)^0,w,c
 20549  0118C4  A4D8               	btfss	status,2,c
 20550  0118C6  D004               	goto	l13432
 20551                           
 20552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 20553  0118C8  0E00               	movlw	0
 20554  0118CA  6E3D               	movwf	(_prec+1)^0,c
 20555  0118CC  0E01               	movlw	1
 20556  0118CE  6E3C               	movwf	_prec^0,c
 20557  0118D0                     l13432:
 20558                           
 20559                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 20560  0118D0  BE3D               	btfsc	(_prec+1)^0,7,c
 20561  0118D2  D005               	goto	u12420
 20562  0118D4  503D               	movf	(_prec+1)^0,w,c
 20563  0118D6  E110               	bnz	l13436
 20564  0118D8  043C               	decf	_prec^0,w,c
 20565  0118DA  B0D8               	btfsc	status,0,c
 20566  0118DC  D00D               	goto	l13436
 20567  0118DE                     u12420:
 20568  0118DE  0E06               	movlw	6
 20569  0118E0  6E0B               	movwf	(btemp+10)^0,c
 20570  0118E2  0E00               	movlw	0
 20571  0118E4  6E0C               	movwf	(btemp+11)^0,c
 20572                           
 20573                           ;stkvar	_p @ sp[(-56)+40]
 20574  0118E6  0EF0               	movlw	-16
 20575  0118E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20576  0118EE  0EF1               	movlw	-15
 20577  0118F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 20578  0118F6  D00C               	goto	l13444
 20579  0118F8                     l13436:
 20580                           
 20581                           ;stkvar	_p @ sp[(-56)+40]
 20582  0118F8  0EF0               	movlw	-16
 20583  0118FA  0060  F0F3  FFE3   	movff	_prec,plusw1
 20584  011900  0EF1               	movlw	-15
 20585  011902  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 20586  011908  D003               	goto	l13444
 20587  01190A                     l13438:
 20588                           
 20589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 20590  01190A  AE3D               	btfss	(_prec+1)^0,7,c
 20591  01190C  D7F5               	goto	l13436
 20592  01190E  D7E7               	goto	u12420
 20593  011910                     l13444:
 20594                           
 20595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 20596                           ;stkvar	_mode @ sp[(-56)+54]
 20597  011910  0EFE               	movlw	-2
 20598  011912  006F FF8C  F001    	movff	plusw1,btemp
 20599  011918  0E67               	movlw	103
 20600  01191A  1801               	xorwf	btemp^0,w,c
 20601  01191C  A4D8               	btfss	status,2,c
 20602  01191E  D02F               	goto	l13454
 20603                           
 20604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 20605                           ;stkvar	_e @ sp[(-56)+34]
 20606  011920  0EEB               	movlw	-21
 20607  011922  AEE3               	btfss	plusw1,7,c
 20608  011924  D00E               	goto	u12450
 20609  011926  0EEA               	movlw	-22
 20610  011928  006F FF8C  F001    	movff	plusw1,btemp
 20611  01192E  0EFC               	movlw	252
 20612  011930  5E01               	subwf	btemp^0,f,c
 20613  011932  0EEB               	movlw	-21
 20614  011934  006F FF8C  F001    	movff	plusw1,btemp
 20615  01193A  0EFF               	movlw	255
 20616  01193C  5A01               	subwfb	btemp^0,f,c
 20617  01193E  A0D8               	btfss	status,0,c
 20618  011940  D018               	goto	l13452
 20619  011942                     u12450:
 20620                           
 20621                           ;stkvar	_e @ sp[(-56)+34]
 20622                           ;stkvar	_p @ sp[(-56)+40]
 20623  011942  0EF0               	movlw	-16
 20624  011944  50E3               	movf	plusw1,w,c
 20625  011946  0FFF               	addlw	255
 20626  011948  6E0B               	movwf	(btemp+10)^0,c
 20627  01194A  0EF1               	movlw	-15
 20628  01194C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20629  011952  0EFF               	movlw	255
 20630  011954  220C               	addwfc	(btemp+11)^0,f,c
 20631  011956  0EEA               	movlw	-22
 20632  011958  50E3               	movf	plusw1,w,c
 20633  01195A  5C0B               	subwf	(btemp+10)^0,w,c
 20634  01195C  500C               	movf	(btemp+11)^0,w,c
 20635  01195E  0A80               	xorlw	128
 20636  011960  6E01               	movwf	btemp^0,c
 20637  011962  0EEB               	movlw	-21
 20638  011964  50E3               	movf	plusw1,w,c
 20639  011966  0A80               	xorlw	128
 20640  011968  5801               	subwfb	btemp^0,w,c
 20641  01196A  A0D8               	btfss	status,0,c
 20642  01196C  D002               	goto	l13452
 20643                           
 20644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 20645  01196E  0E66               	movlw	102
 20646  011970  D001               	goto	L22
 20647  011972                     l13452:
 20648                           
 20649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 20650  011972  0E65               	movlw	101
 20651  011974                     L22:
 20652  011974  6E0C               	movwf	(btemp+11)^0,c
 20653                           
 20654                           ;stkvar	_nmode @ sp[(-56)+55]
 20655  011976  0EFF               	movlw	-1
 20656  011978  0060  F033  FFE3   	movff	btemp+11,plusw1
 20657  01197E                     l13454:
 20658                           
 20659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 20660                           ;stkvar	_p @ sp[(-56)+40]
 20661                           ;stkvar	_m @ sp[(-56)+48]
 20662  01197E  0EF0               	movlw	-16
 20663  011980  006F FF8C  F001    	movff	plusw1,btemp
 20664  011986  0EF8               	movlw	-8
 20665  011988  0060  F007  FFE3   	movff	btemp,plusw1
 20666  01198E  0EF1               	movlw	-15
 20667  011990  006F FF8C  F001    	movff	plusw1,btemp
 20668  011996  0EF9               	movlw	-7
 20669  011998  0060  F007  FFE3   	movff	btemp,plusw1
 20670                           
 20671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 20672                           ;stkvar	_mode @ sp[(-56)+54]
 20673  01199E  0EFE               	movlw	-2
 20674  0119A0  006F FF8C  F001    	movff	plusw1,btemp
 20675  0119A6  0E67               	movlw	103
 20676  0119A8  1801               	xorwf	btemp^0,w,c
 20677  0119AA  A4D8               	btfss	status,2,c
 20678  0119AC  D00B               	goto	u12490
 20679                           
 20680                           ;stkvar	_nmode @ sp[(-56)+55]
 20681  0119AE  0EFF               	movlw	-1
 20682  0119B0  006F FF8C  F001    	movff	plusw1,btemp
 20683  0119B6  0E66               	movlw	102
 20684  0119B8  1801               	xorwf	btemp^0,w,c
 20685  0119BA  A4D8               	btfss	status,2,c
 20686  0119BC  D014               	goto	l2507
 20687                           
 20688                           ;stkvar	_e @ sp[(-56)+34]
 20689  0119BE  0EEB               	movlw	-21
 20690  0119C0  AEE3               	btfss	plusw1,7,c
 20691  0119C2  D011               	goto	l2507
 20692  0119C4                     u12490:
 20693                           
 20694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 20695                           ;stkvar	_m @ sp[(-56)+48]
 20696  0119C4  0EF8               	movlw	-8
 20697  0119C6  50E3               	movf	plusw1,w,c
 20698  0119C8  0F01               	addlw	1
 20699  0119CA  6E01               	movwf	btemp^0,c
 20700  0119CC  0EF8               	movlw	-8
 20701  0119CE  0060  F007  FFE3   	movff	btemp,plusw1
 20702  0119D4  6A01               	clrf	btemp^0,c
 20703  0119D6  0EF9               	movlw	-7
 20704  0119D8  50E3               	movf	plusw1,w,c
 20705  0119DA  2001               	addwfc	btemp^0,w,c
 20706  0119DC  6E01               	movwf	btemp^0,c
 20707  0119DE  0EF9               	movlw	-7
 20708  0119E0  0060  F007  FFE3   	movff	btemp,plusw1
 20709  0119E6                     l2507:
 20710                           
 20711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 20712                           ;stkvar	_nmode @ sp[(-56)+55]
 20713  0119E6  0EFF               	movlw	-1
 20714  0119E8  006F FF8C  F001    	movff	plusw1,btemp
 20715  0119EE  0E66               	movlw	102
 20716  0119F0  1801               	xorwf	btemp^0,w,c
 20717  0119F2  A4D8               	btfss	status,2,c
 20718  0119F4  D03B               	goto	l13474
 20719                           
 20720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 20721                           ;stkvar	_e @ sp[(-56)+34]
 20722  0119F6  0EEB               	movlw	-21
 20723  0119F8  AEE3               	btfss	plusw1,7,c
 20724  0119FA  D01C               	goto	l13470
 20725                           
 20726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 20727  0119FC  0E00               	movlw	0
 20728  0119FE  6E09               	movwf	(btemp+8)^0,c
 20729  011A00  0E00               	movlw	0
 20730  011A02  6E0A               	movwf	(btemp+9)^0,c
 20731  011A04  0E80               	movlw	128
 20732  011A06  6E0B               	movwf	(btemp+10)^0,c
 20733  011A08  0E3F               	movlw	63
 20734  011A0A  6E0C               	movwf	(btemp+11)^0,c
 20735                           
 20736                           ;stkvar	_u @ sp[(-56)+12]
 20737  011A0C  0ED4               	movlw	-44
 20738  011A0E  0060  F027  FFE3   	movff	btemp+8,plusw1
 20739  011A14  0ED5               	movlw	-43
 20740  011A16  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20741  011A1C  0ED6               	movlw	-42
 20742  011A1E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20743  011A24  0ED7               	movlw	-41
 20744  011A26  0060  F033  FFE3   	movff	btemp+11,plusw1
 20745                           
 20746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 20747                           ;stkvar	_e @ sp[(-56)+34]
 20748  011A2C  0EEA               	movlw	-22
 20749  011A2E  6AE3               	clrf	plusw1,c
 20750  011A30  0EEB               	movlw	-21
 20751  011A32  6AE3               	clrf	plusw1,c
 20752  011A34                     l13470:
 20753                           
 20754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 20755                           ;stkvar	_mode @ sp[(-56)+54]
 20756  011A34  0EFE               	movlw	-2
 20757  011A36  006F FF8C  F001    	movff	plusw1,btemp
 20758  011A3C  0E67               	movlw	103
 20759  011A3E  1801               	xorwf	btemp^0,w,c
 20760  011A40  B4D8               	btfsc	status,2,c
 20761  011A42  D014               	goto	l13474
 20762                           
 20763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 20764                           ;stkvar	_e @ sp[(-56)+34]
 20765                           ;stkvar	_m @ sp[(-56)+48]
 20766  011A44  0EF8               	movlw	-8
 20767  011A46  50E3               	movf	plusw1,w,c
 20768  011A48  6E01               	movwf	btemp^0,c
 20769  011A4A  0EEA               	movlw	-22
 20770  011A4C  50E3               	movf	plusw1,w,c
 20771  011A4E  2601               	addwf	btemp^0,f,c
 20772  011A50  0EF8               	movlw	-8
 20773  011A52  0060  F007  FFE3   	movff	btemp,plusw1
 20774  011A58  0EF9               	movlw	-7
 20775  011A5A  50E3               	movf	plusw1,w,c
 20776  011A5C  6E01               	movwf	btemp^0,c
 20777  011A5E  0EEB               	movlw	-21
 20778  011A60  50E3               	movf	plusw1,w,c
 20779  011A62  2201               	addwfc	btemp^0,f,c
 20780  011A64  0EF9               	movlw	-7
 20781  011A66  0060  F007  FFE3   	movff	btemp,plusw1
 20782  011A6C                     l13474:
 20783                           
 20784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 20785                           ;stkvar	_i @ sp[(-56)+36]
 20786  011A6C  0EEC               	movlw	-20
 20787  011A6E  6AE3               	clrf	plusw1,c
 20788  011A70  0EED               	movlw	-19
 20789  011A72  6AE3               	clrf	plusw1,c
 20790                           
 20791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 20792                           ;stkvar	_g @ sp[(-56)+16]
 20793  011A74  0ED8               	movlw	-40
 20794  011A76  006F FF8C  F009    	movff	plusw1,btemp+8
 20795  011A7C  0ED9               	movlw	-39
 20796  011A7E  006F FF8C  F00A    	movff	plusw1,btemp+9
 20797  011A84  0EDA               	movlw	-38
 20798  011A86  006F FF8C  F00B    	movff	plusw1,btemp+10
 20799  011A8C  0EDB               	movlw	-37
 20800  011A8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 20801                           
 20802                           ;stkvar	_h @ sp[(-56)+24]
 20803  011A94  0EE0               	movlw	-32
 20804  011A96  0060  F027  FFE3   	movff	btemp+8,plusw1
 20805  011A9C  0EE1               	movlw	-31
 20806  011A9E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20807  011AA4  0EE2               	movlw	-30
 20808  011AA6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20809  011AAC  0EE3               	movlw	-29
 20810  011AAE  0060  F033  FFE3   	movff	btemp+11,plusw1
 20811                           
 20812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 20813                           ;stkvar	_u @ sp[(-56)+12]
 20814  011AB4  0ED4               	movlw	-44
 20815  011AB6  006F FF8C  F009    	movff	plusw1,btemp+8
 20816  011ABC  0ED5               	movlw	-43
 20817  011ABE  006F FF8C  F00A    	movff	plusw1,btemp+9
 20818  011AC4  0ED6               	movlw	-42
 20819  011AC6  006F FF8C  F00B    	movff	plusw1,btemp+10
 20820  011ACC  0ED7               	movlw	-41
 20821  011ACE  006F FF8C  F00C    	movff	plusw1,btemp+11
 20822                           
 20823                           ;stkvar	_ou @ sp[(-56)+28]
 20824  011AD4  0EE4               	movlw	-28
 20825  011AD6  0060  F027  FFE3   	movff	btemp+8,plusw1
 20826  011ADC  0EE5               	movlw	-27
 20827  011ADE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20828  011AE4  0EE6               	movlw	-26
 20829  011AE6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20830  011AEC  0EE7               	movlw	-25
 20831  011AEE  0060  F033  FFE3   	movff	btemp+11,plusw1
 20832                           
 20833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 20834  011AF4  D0D6               	goto	l13490
 20835  011AF6                     l13480:
 20836                           
 20837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 20838                           ;stkvar	_u @ sp[(-56)+12]
 20839  011AF6  0ED4               	movlw	-44
 20840  011AF8  006F FF8F FFE6     	movff	plusw1,postinc1
 20841  011AFE  006F FF8F FFE6     	movff	plusw1,postinc1
 20842  011B04  006F FF8F FFE6     	movff	plusw1,postinc1
 20843  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
 20844                           
 20845                           ;stkvar	_h @ sp[(-60)+24]
 20846  011B10  0EDC               	movlw	-36
 20847  011B12  006F FF8F FFE6     	movff	plusw1,postinc1
 20848  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
 20849  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
 20850  011B24  006F FF8F FFE6     	movff	plusw1,postinc1
 20851  011B2A  ECE0  F0A7         	call	___fldiv	;wreg free
 20852  011B2E  0060  F007  FFE6   	movff	btemp,postinc1
 20853  011B34  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20854  011B3A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20855  011B40  0060  F013  FFE6   	movff	btemp+3,postinc1
 20856  011B46  EC7F  F0B5         	call	_floorf	;wreg free
 20857                           
 20858                           ;stkvar	_l @ sp[(-56)+20]
 20859  011B4A  0EDC               	movlw	-36
 20860  011B4C  0060  F007  FFE3   	movff	btemp,plusw1
 20861  011B52  0EDD               	movlw	-35
 20862  011B54  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20863  011B5A  0EDE               	movlw	-34
 20864  011B5C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20865  011B62  0EDF               	movlw	-33
 20866  011B64  0060  F013  FFE3   	movff	btemp+3,plusw1
 20867                           
 20868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 20869                           ;stkvar	_l @ sp[(-56)+20]
 20870  011B6A  0EDC               	movlw	-36
 20871  011B6C  006F FF8F FFE6     	movff	plusw1,postinc1
 20872  011B72  006F FF8F FFE6     	movff	plusw1,postinc1
 20873  011B78  006F FF8F FFE6     	movff	plusw1,postinc1
 20874  011B7E  006F FF8F FFE6     	movff	plusw1,postinc1
 20875  011B84  EC73  F0CC         	call	___fltol	;wreg free
 20876  011B88  0060  F004  F00B   	movff	btemp,btemp+10
 20877  011B8E  0060  F008  F00C   	movff	btemp+1,btemp+11
 20878                           
 20879                           ;stkvar	_d @ sp[(-56)+44]
 20880  011B94  0EF4               	movlw	-12
 20881  011B96  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20882  011B9C  0EF5               	movlw	-11
 20883  011B9E  0060  F033  FFE3   	movff	btemp+11,plusw1
 20884                           
 20885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 20886                           ;stkvar	_u @ sp[(-56)+12]
 20887  011BA4  0ED4               	movlw	-44
 20888  011BA6  006F FF8F FFE6     	movff	plusw1,postinc1
 20889  011BAC  006F FF8F FFE6     	movff	plusw1,postinc1
 20890  011BB2  006F FF8F FFE6     	movff	plusw1,postinc1
 20891  011BB8  006F FF8F FFE6     	movff	plusw1,postinc1
 20892                           
 20893                           ;stkvar	_l @ sp[(-60)+20]
 20894  011BBE  0ED8               	movlw	-40
 20895  011BC0  006F FF8F FFE6     	movff	plusw1,postinc1
 20896  011BC6  006F FF8F FFE6     	movff	plusw1,postinc1
 20897  011BCC  006F FF8F FFE6     	movff	plusw1,postinc1
 20898  011BD2  006F FF8F FFE6     	movff	plusw1,postinc1
 20899  011BD8  ECED  F09F         	call	___flmul	;wreg free
 20900  011BDC  0060  F007  FFE6   	movff	btemp,postinc1
 20901  011BE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20902  011BE8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20903  011BEE  0060  F013  FFE6   	movff	btemp+3,postinc1
 20904                           
 20905                           ;stkvar	_h @ sp[(-60)+24]
 20906  011BF4  0EDC               	movlw	-36
 20907  011BF6  006F FF8F FFE6     	movff	plusw1,postinc1
 20908  011BFC  006F FF8F FFE6     	movff	plusw1,postinc1
 20909  011C02  006F FF8F FFE6     	movff	plusw1,postinc1
 20910  011C08  006F FF8F FFE6     	movff	plusw1,postinc1
 20911  011C0E  EC36  F0E4         	call	___flsub	;wreg free
 20912                           
 20913                           ;stkvar	_h @ sp[(-56)+24]
 20914  011C12  0EE0               	movlw	-32
 20915  011C14  0060  F007  FFE3   	movff	btemp,plusw1
 20916  011C1A  0EE1               	movlw	-31
 20917  011C1C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20918  011C22  0EE2               	movlw	-30
 20919  011C24  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20920  011C2A  0EE3               	movlw	-29
 20921  011C2C  0060  F013  FFE3   	movff	btemp+3,plusw1
 20922                           
 20923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 20924  011C32  0E00               	movlw	0
 20925  011C34  6EE6               	movwf	postinc1,c
 20926  011C36  0E00               	movlw	0
 20927  011C38  6EE6               	movwf	postinc1,c
 20928  011C3A  0E20               	movlw	32
 20929  011C3C  6EE6               	movwf	postinc1,c
 20930  011C3E  0E41               	movlw	65
 20931  011C40  6EE6               	movwf	postinc1,c
 20932                           
 20933                           ;stkvar	_u @ sp[(-60)+12]
 20934  011C42  0ED0               	movlw	-48
 20935  011C44  006F FF8F FFE6     	movff	plusw1,postinc1
 20936  011C4A  006F FF8F FFE6     	movff	plusw1,postinc1
 20937  011C50  006F FF8F FFE6     	movff	plusw1,postinc1
 20938  011C56  006F FF8F FFE6     	movff	plusw1,postinc1
 20939  011C5C  ECE0  F0A7         	call	___fldiv	;wreg free
 20940                           
 20941                           ;stkvar	_u @ sp[(-56)+12]
 20942  011C60  0ED4               	movlw	-44
 20943  011C62  0060  F007  FFE3   	movff	btemp,plusw1
 20944  011C68  0ED5               	movlw	-43
 20945  011C6A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20946  011C70  0ED6               	movlw	-42
 20947  011C72  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20948  011C78  0ED7               	movlw	-41
 20949  011C7A  0060  F013  FFE3   	movff	btemp+3,plusw1
 20950                           
 20951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 20952                           ;stkvar	_i @ sp[(-56)+36]
 20953  011C80  0EEC               	movlw	-20
 20954  011C82  50E3               	movf	plusw1,w,c
 20955  011C84  0F01               	addlw	1
 20956  011C86  6E01               	movwf	btemp^0,c
 20957  011C88  0EEC               	movlw	-20
 20958  011C8A  0060  F007  FFE3   	movff	btemp,plusw1
 20959  011C90  6A01               	clrf	btemp^0,c
 20960  011C92  0EED               	movlw	-19
 20961  011C94  50E3               	movf	plusw1,w,c
 20962  011C96  2001               	addwfc	btemp^0,w,c
 20963  011C98  6E01               	movwf	btemp^0,c
 20964  011C9A  0EED               	movlw	-19
 20965  011C9C  0060  F007  FFE3   	movff	btemp,plusw1
 20966  011CA2                     l13490:
 20967                           
 20968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 20969                           ;stkvar	_m @ sp[(-56)+48]
 20970                           ;stkvar	_i @ sp[(-56)+36]
 20971  011CA2  50E1               	movf	fsr1l,w,c
 20972  011CA4  0FEC               	addlw	-20
 20973  011CA6  6ED9               	movwf	fsr2l,c
 20974  011CA8  50E2               	movf	fsr1h,w,c
 20975  011CAA  6EDA               	movwf	fsr2h,c
 20976  011CAC  0EFF               	movlw	255
 20977  011CAE  22DA               	addwfc	fsr2h,f,c
 20978  011CB0  0EF8               	movlw	-8
 20979  011CB2  50E3               	movf	plusw1,w,c
 20980  011CB4  5CDE               	subwf	postinc2,w,c
 20981  011CB6  50DE               	movf	postinc2,w,c
 20982  011CB8  0A80               	xorlw	128
 20983  011CBA  6E01               	movwf	btemp^0,c
 20984  011CBC  0EF9               	movlw	-7
 20985  011CBE  50E3               	movf	plusw1,w,c
 20986  011CC0  0A80               	xorlw	128
 20987  011CC2  5801               	subwfb	btemp^0,w,c
 20988  011CC4  A0D8               	btfss	status,0,c
 20989  011CC6  D717               	goto	l13480
 20990                           
 20991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 20992  011CC8  0E00               	movlw	0
 20993  011CCA  6EE6               	movwf	postinc1,c
 20994  011CCC  0E00               	movlw	0
 20995  011CCE  6EE6               	movwf	postinc1,c
 20996  011CD0  0EA0               	movlw	160
 20997  011CD2  6EE6               	movwf	postinc1,c
 20998  011CD4  0E40               	movlw	64
 20999  011CD6  6EE6               	movwf	postinc1,c
 21000                           
 21001                           ;stkvar	_u @ sp[(-60)+12]
 21002  011CD8  0ED0               	movlw	-48
 21003  011CDA  006F FF8F FFE6     	movff	plusw1,postinc1
 21004  011CE0  006F FF8F FFE6     	movff	plusw1,postinc1
 21005  011CE6  006F FF8F FFE6     	movff	plusw1,postinc1
 21006  011CEC  006F FF8F FFE6     	movff	plusw1,postinc1
 21007  011CF2  ECED  F09F         	call	___flmul	;wreg free
 21008                           
 21009                           ;stkvar	_l @ sp[(-56)+20]
 21010  011CF6  0EDC               	movlw	-36
 21011  011CF8  0060  F007  FFE3   	movff	btemp,plusw1
 21012  011CFE  0EDD               	movlw	-35
 21013  011D00  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21014  011D06  0EDE               	movlw	-34
 21015  011D08  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21016  011D0E  0EDF               	movlw	-33
 21017  011D10  0060  F013  FFE3   	movff	btemp+3,plusw1
 21018                           
 21019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 21020                           ;stkvar	_l @ sp[(-56)+20]
 21021  011D16  0EDC               	movlw	-36
 21022  011D18  006F FF8F FFE6     	movff	plusw1,postinc1
 21023  011D1E  006F FF8F FFE6     	movff	plusw1,postinc1
 21024  011D24  006F FF8F FFE6     	movff	plusw1,postinc1
 21025  011D2A  006F FF8F FFE6     	movff	plusw1,postinc1
 21026                           
 21027                           ;stkvar	_h @ sp[(-60)+24]
 21028  011D30  0EDC               	movlw	-36
 21029  011D32  006F FF8F FFE6     	movff	plusw1,postinc1
 21030  011D38  006F FF8F FFE6     	movff	plusw1,postinc1
 21031  011D3E  006F FF8F FFE6     	movff	plusw1,postinc1
 21032  011D44  006F FF8F FFE6     	movff	plusw1,postinc1
 21033  011D4A  EC2C  F0CD         	call	___flge	;wreg free
 21034  011D4E  A001               	btfss	btemp& (0+255),0,c
 21035  011D50  D021               	goto	u12560
 21036                           
 21037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 21038                           ;stkvar	_l @ sp[(-56)+20]
 21039                           
 21040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 21041                           
 21042                           ;stkvar	_l @ sp[(-56)+20]
 21043                           
 21044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 21045  011D52  0EDC               	movlw	-36
 21046  011D54  006F FF8F FFE6     	movff	plusw1,postinc1
 21047  011D5A  006F FF8F FFE6     	movff	plusw1,postinc1
 21048  011D60  006F FF8F FFE6     	movff	plusw1,postinc1
 21049  011D66  006F FF8F FFE6     	movff	plusw1,postinc1
 21050                           
 21051                           ;stkvar	_h @ sp[(-60)+24]
 21052  011D6C  0EDC               	movlw	-36
 21053  011D6E  006F FF8F FFE6     	movff	plusw1,postinc1
 21054  011D74  006F FF8F FFE6     	movff	plusw1,postinc1
 21055  011D7A  006F FF8F FFE6     	movff	plusw1,postinc1
 21056  011D80  006F FF8F FFE6     	movff	plusw1,postinc1
 21057  011D86  EC13  F0D9         	call	___fleq	;wreg free
 21058  011D8A  A001               	btfss	btemp& (0+255),0,c
 21059  011D8C  D01B               	goto	l13504
 21060                           
 21061                           ;stkvar	_d @ sp[(-56)+44]
 21062  011D8E  0EF4               	movlw	-12
 21063  011D90  B0E3               	btfsc	plusw1,0,c
 21064  011D92  D018               	goto	l13504
 21065  011D94                     u12560:
 21066                           
 21067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 21068  011D94  0E00               	movlw	0
 21069  011D96  6E09               	movwf	(btemp+8)^0,c
 21070  011D98  0E00               	movlw	0
 21071  011D9A  6E0A               	movwf	(btemp+9)^0,c
 21072  011D9C  0E00               	movlw	0
 21073  011D9E  6E0B               	movwf	(btemp+10)^0,c
 21074  011DA0  0E00               	movlw	0
 21075  011DA2  6E0C               	movwf	(btemp+11)^0,c
 21076                           
 21077                           ;stkvar	_l @ sp[(-56)+20]
 21078  011DA4  0EDC               	movlw	-36
 21079  011DA6  0060  F027  FFE3   	movff	btemp+8,plusw1
 21080  011DAC  0EDD               	movlw	-35
 21081  011DAE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21082  011DB4  0EDE               	movlw	-34
 21083  011DB6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21084  011DBC  0EDF               	movlw	-33
 21085  011DBE  0060  F033  FFE3   	movff	btemp+11,plusw1
 21086  011DC4                     l13504:
 21087                           
 21088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 21089                           ;stkvar	_l @ sp[(-56)+20]
 21090  011DC4  0EDC               	movlw	-36
 21091  011DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 21092  011DCC  006F FF8F FFE6     	movff	plusw1,postinc1
 21093  011DD2  006F FF8F FFE6     	movff	plusw1,postinc1
 21094  011DD8  006F FF8F FFE6     	movff	plusw1,postinc1
 21095                           
 21096                           ;stkvar	_g @ sp[(-60)+16]
 21097  011DDE  0ED4               	movlw	-44
 21098  011DE0  006F FF8F FFE6     	movff	plusw1,postinc1
 21099  011DE6  006F FF8F FFE6     	movff	plusw1,postinc1
 21100  011DEC  006F FF8F FFE6     	movff	plusw1,postinc1
 21101  011DF2  006F FF8F FFE6     	movff	plusw1,postinc1
 21102  011DF8  EC02  F0A4         	call	___fladd	;wreg free
 21103                           
 21104                           ;stkvar	_h @ sp[(-56)+24]
 21105  011DFC  0EE0               	movlw	-32
 21106  011DFE  0060  F007  FFE3   	movff	btemp,plusw1
 21107  011E04  0EE1               	movlw	-31
 21108  011E06  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21109  011E0C  0EE2               	movlw	-30
 21110  011E0E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21111  011E14  0EE3               	movlw	-29
 21112  011E16  0060  F013  FFE3   	movff	btemp+3,plusw1
 21113                           
 21114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 21115                           ;stkvar	_ou @ sp[(-56)+28]
 21116  011E1C  0EE4               	movlw	-28
 21117  011E1E  006F FF8C  F009    	movff	plusw1,btemp+8
 21118  011E24  0EE5               	movlw	-27
 21119  011E26  006F FF8C  F00A    	movff	plusw1,btemp+9
 21120  011E2C  0EE6               	movlw	-26
 21121  011E2E  006F FF8C  F00B    	movff	plusw1,btemp+10
 21122  011E34  0EE7               	movlw	-25
 21123  011E36  006F FF8C  F00C    	movff	plusw1,btemp+11
 21124                           
 21125                           ;stkvar	_u @ sp[(-56)+12]
 21126  011E3C  0ED4               	movlw	-44
 21127  011E3E  0060  F027  FFE3   	movff	btemp+8,plusw1
 21128  011E44  0ED5               	movlw	-43
 21129  011E46  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21130  011E4C  0ED6               	movlw	-42
 21131  011E4E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21132  011E54  0ED7               	movlw	-41
 21133  011E56  0060  F033  FFE3   	movff	btemp+11,plusw1
 21134                           
 21135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 21136                           ;stkvar	_nmode @ sp[(-56)+55]
 21137  011E5C  0EFF               	movlw	-1
 21138  011E5E  006F FF8C  F001    	movff	plusw1,btemp
 21139  011E64  0E65               	movlw	101
 21140  011E66  1801               	xorwf	btemp^0,w,c
 21141  011E68  B4D8               	btfsc	status,2,c
 21142  011E6A  D011               	goto	l13512
 21143                           
 21144                           ;stkvar	_e @ sp[(-56)+34]
 21145                           ;stkvar	_ne @ sp[(-56)+46]
 21146  011E6C  0EEA               	movlw	-22
 21147  011E6E  006F FF8C  F001    	movff	plusw1,btemp
 21148  011E74  0EF6               	movlw	-10
 21149  011E76  0060  F007  FFE3   	movff	btemp,plusw1
 21150  011E7C  0EEB               	movlw	-21
 21151  011E7E  006F FF8C  F001    	movff	plusw1,btemp
 21152  011E84  0EF7               	movlw	-9
 21153  011E86  0060  F007  FFE3   	movff	btemp,plusw1
 21154  011E8C  D004               	goto	l2522
 21155  011E8E                     l13512:
 21156                           
 21157                           ;stkvar	_ne @ sp[(-56)+46]
 21158  011E8E  0EF6               	movlw	-10
 21159  011E90  6AE3               	clrf	plusw1,c
 21160  011E92  0EF7               	movlw	-9
 21161  011E94  6AE3               	clrf	plusw1,c
 21162  011E96                     l2522:
 21163                           
 21164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 21165                           ;stkvar	_pp @ sp[(-56)+50]
 21166  011E96  0EFA               	movlw	-6
 21167  011E98  6AE3               	clrf	plusw1,c
 21168  011E9A  0EFB               	movlw	-5
 21169  011E9C  6AE3               	clrf	plusw1,c
 21170                           
 21171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 21172                           ;stkvar	_t @ sp[(-56)+52]
 21173  011E9E  0EFC               	movlw	-4
 21174  011EA0  6AE3               	clrf	plusw1,c
 21175  011EA2  0EFD               	movlw	-3
 21176  011EA4  6AE3               	clrf	plusw1,c
 21177                           
 21178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 21179                           ;stkvar	_i @ sp[(-56)+36]
 21180  011EA6  0EEC               	movlw	-20
 21181  011EA8  6AE3               	clrf	plusw1,c
 21182  011EAA  0EED               	movlw	-19
 21183  011EAC  6AE3               	clrf	plusw1,c
 21184                           
 21185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 21186  011EAE  D1B7               	goto	l13564
 21187  011EB0                     l13514:
 21188                           
 21189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 21190                           ;stkvar	_u @ sp[(-56)+12]
 21191  011EB0  0ED4               	movlw	-44
 21192  011EB2  006F FF8F FFE6     	movff	plusw1,postinc1
 21193  011EB8  006F FF8F FFE6     	movff	plusw1,postinc1
 21194  011EBE  006F FF8F FFE6     	movff	plusw1,postinc1
 21195  011EC4  006F FF8F FFE6     	movff	plusw1,postinc1
 21196                           
 21197                           ;stkvar	_h @ sp[(-60)+24]
 21198  011ECA  0EDC               	movlw	-36
 21199  011ECC  006F FF8F FFE6     	movff	plusw1,postinc1
 21200  011ED2  006F FF8F FFE6     	movff	plusw1,postinc1
 21201  011ED8  006F FF8F FFE6     	movff	plusw1,postinc1
 21202  011EDE  006F FF8F FFE6     	movff	plusw1,postinc1
 21203  011EE4  ECE0  F0A7         	call	___fldiv	;wreg free
 21204  011EE8  0060  F007  FFE6   	movff	btemp,postinc1
 21205  011EEE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21206  011EF4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21207  011EFA  0060  F013  FFE6   	movff	btemp+3,postinc1
 21208  011F00  EC7F  F0B5         	call	_floorf	;wreg free
 21209                           
 21210                           ;stkvar	_l @ sp[(-56)+20]
 21211  011F04  0EDC               	movlw	-36
 21212  011F06  0060  F007  FFE3   	movff	btemp,plusw1
 21213  011F0C  0EDD               	movlw	-35
 21214  011F0E  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21215  011F14  0EDE               	movlw	-34
 21216  011F16  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21217  011F1C  0EDF               	movlw	-33
 21218  011F1E  0060  F013  FFE3   	movff	btemp+3,plusw1
 21219                           
 21220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 21221                           ;stkvar	_l @ sp[(-56)+20]
 21222  011F24  0EDC               	movlw	-36
 21223  011F26  006F FF8F FFE6     	movff	plusw1,postinc1
 21224  011F2C  006F FF8F FFE6     	movff	plusw1,postinc1
 21225  011F32  006F FF8F FFE6     	movff	plusw1,postinc1
 21226  011F38  006F FF8F FFE6     	movff	plusw1,postinc1
 21227  011F3E  EC73  F0CC         	call	___fltol	;wreg free
 21228  011F42  0060  F004  F00B   	movff	btemp,btemp+10
 21229  011F48  0060  F008  F00C   	movff	btemp+1,btemp+11
 21230                           
 21231                           ;stkvar	_d @ sp[(-56)+44]
 21232  011F4E  0EF4               	movlw	-12
 21233  011F50  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21234  011F56  0EF5               	movlw	-11
 21235  011F58  0060  F033  FFE3   	movff	btemp+11,plusw1
 21236                           
 21237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 21238  011F5E  B83E               	btfsc	_flags^0,4,c
 21239  011F60  D026               	goto	l13528
 21240                           
 21241                           ;stkvar	_d @ sp[(-56)+44]
 21242  011F62  0EF4               	movlw	-12
 21243  011F64  006F FF8C  F001    	movff	plusw1,btemp
 21244  011F6A  0EF5               	movlw	-11
 21245  011F6C  50E3               	movf	plusw1,w,c
 21246  011F6E  1001               	iorwf	btemp^0,w,c
 21247  011F70  A4D8               	btfss	status,2,c
 21248  011F72  D01D               	goto	l13528
 21249                           
 21250                           ;stkvar	_mode @ sp[(-56)+54]
 21251  011F74  0EFE               	movlw	-2
 21252  011F76  006F FF8C  F001    	movff	plusw1,btemp
 21253  011F7C  0E67               	movlw	103
 21254  011F7E  1801               	xorwf	btemp^0,w,c
 21255  011F80  A4D8               	btfss	status,2,c
 21256  011F82  D015               	goto	l13528
 21257                           
 21258                           ;stkvar	_ne @ sp[(-56)+46]
 21259  011F84  0EF7               	movlw	-9
 21260  011F86  AEE3               	btfss	plusw1,7,c
 21261  011F88  D012               	goto	l13528
 21262                           
 21263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 21264                           ;stkvar	_t @ sp[(-56)+52]
 21265  011F8A  0EFC               	movlw	-4
 21266  011F8C  50E3               	movf	plusw1,w,c
 21267  011F8E  0F01               	addlw	1
 21268  011F90  6E01               	movwf	btemp^0,c
 21269  011F92  0EFC               	movlw	-4
 21270  011F94  0060  F007  FFE3   	movff	btemp,plusw1
 21271  011F9A  6A01               	clrf	btemp^0,c
 21272  011F9C  0EFD               	movlw	-3
 21273  011F9E  50E3               	movf	plusw1,w,c
 21274  011FA0  2001               	addwfc	btemp^0,w,c
 21275  011FA2  6E01               	movwf	btemp^0,c
 21276  011FA4  0EFD               	movlw	-3
 21277  011FA6  0060  F007  FFE3   	movff	btemp,plusw1
 21278                           
 21279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 21280  011FAC  D0AF               	goto	l13556
 21281  011FAE                     l13528:
 21282                           
 21283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 21284                           ;stkvar	_pp @ sp[(-56)+50]
 21285  011FAE  0EFA               	movlw	-6
 21286  011FB0  006F FF8C  F001    	movff	plusw1,btemp
 21287  011FB6  0EFB               	movlw	-5
 21288  011FB8  50E3               	movf	plusw1,w,c
 21289  011FBA  1001               	iorwf	btemp^0,w,c
 21290  011FBC  A4D8               	btfss	status,2,c
 21291  011FBE  D070               	goto	l13548
 21292                           
 21293                           ;stkvar	_ne @ sp[(-56)+46]
 21294  011FC0  0EF7               	movlw	-9
 21295  011FC2  AEE3               	btfss	plusw1,7,c
 21296  011FC4  D06D               	goto	l13548
 21297                           
 21298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 21299                           ;stkvar	_n @ sp[(-56)+32]
 21300  011FC6  0EE8               	movlw	-24
 21301  011FC8  006F FF8C  F00B    	movff	plusw1,btemp+10
 21302  011FCE  0EE9               	movlw	-23
 21303  011FD0  006F FF8C  F00C    	movff	plusw1,btemp+11
 21304  011FD6  0E94               	movlw	low _dbuf
 21305  011FD8  240B               	addwf	(btemp+10)^0,w,c
 21306  011FDA  6ED9               	movwf	fsr2l,c
 21307  011FDC  0E03               	movlw	high _dbuf
 21308  011FDE  200C               	addwfc	(btemp+11)^0,w,c
 21309  011FE0  6EDA               	movwf	fsr2h,c
 21310  011FE2  0E2E               	movlw	46
 21311  011FE4  6EDF               	movwf	indf2,c
 21312                           
 21313                           ;stkvar	_n @ sp[(-56)+32]
 21314  011FE6  0EE8               	movlw	-24
 21315  011FE8  50E3               	movf	plusw1,w,c
 21316  011FEA  0F01               	addlw	1
 21317  011FEC  6E01               	movwf	btemp^0,c
 21318  011FEE  0EE8               	movlw	-24
 21319  011FF0  0060  F007  FFE3   	movff	btemp,plusw1
 21320  011FF6  6A01               	clrf	btemp^0,c
 21321  011FF8  0EE9               	movlw	-23
 21322  011FFA  50E3               	movf	plusw1,w,c
 21323  011FFC  2001               	addwfc	btemp^0,w,c
 21324  011FFE  6E01               	movwf	btemp^0,c
 21325  012000  0EE9               	movlw	-23
 21326  012002  0060  F007  FFE3   	movff	btemp,plusw1
 21327                           
 21328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 21329                           ;stkvar	_w @ sp[(-56)+38]
 21330  012008  50E1               	movf	fsr1l,w,c
 21331  01200A  0FEE               	addlw	-18
 21332  01200C  6ED9               	movwf	fsr2l,c
 21333  01200E  50E2               	movf	fsr1h,w,c
 21334  012010  6EDA               	movwf	fsr2h,c
 21335  012012  0EFF               	movlw	255
 21336  012014  22DA               	addwfc	fsr2h,f,c
 21337  012016  06DE               	decf	postinc2,f,c
 21338  012018  0E00               	movlw	0
 21339  01201A  5ADD               	subwfb	postdec2,f,c
 21340                           
 21341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 21342  01201C  0E01               	movlw	1
 21343  01201E  6E0B               	movwf	(btemp+10)^0,c
 21344  012020  0E00               	movlw	0
 21345  012022  6E0C               	movwf	(btemp+11)^0,c
 21346                           
 21347                           ;stkvar	_pp @ sp[(-56)+50]
 21348  012024  0EFA               	movlw	-6
 21349  012026  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21350  01202C  0EFB               	movlw	-5
 21351  01202E  0060  F033  FFE3   	movff	btemp+11,plusw1
 21352  012034  D035               	goto	l13548
 21353  012036                     l13540:
 21354                           
 21355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 21356                           ;stkvar	_n @ sp[(-56)+32]
 21357  012036  0EE8               	movlw	-24
 21358  012038  006F FF8C  F00B    	movff	plusw1,btemp+10
 21359  01203E  0EE9               	movlw	-23
 21360  012040  006F FF8C  F00C    	movff	plusw1,btemp+11
 21361  012046  0E94               	movlw	low _dbuf
 21362  012048  240B               	addwf	(btemp+10)^0,w,c
 21363  01204A  6ED9               	movwf	fsr2l,c
 21364  01204C  0E03               	movlw	high _dbuf
 21365  01204E  200C               	addwfc	(btemp+11)^0,w,c
 21366  012050  6EDA               	movwf	fsr2h,c
 21367  012052  0E30               	movlw	48
 21368  012054  6EDF               	movwf	indf2,c
 21369                           
 21370                           ;stkvar	_n @ sp[(-56)+32]
 21371  012056  0EE8               	movlw	-24
 21372  012058  50E3               	movf	plusw1,w,c
 21373  01205A  0F01               	addlw	1
 21374  01205C  6E01               	movwf	btemp^0,c
 21375  01205E  0EE8               	movlw	-24
 21376  012060  0060  F007  FFE3   	movff	btemp,plusw1
 21377  012066  6A01               	clrf	btemp^0,c
 21378  012068  0EE9               	movlw	-23
 21379  01206A  50E3               	movf	plusw1,w,c
 21380  01206C  2001               	addwfc	btemp^0,w,c
 21381  01206E  6E01               	movwf	btemp^0,c
 21382  012070  0EE9               	movlw	-23
 21383  012072  0060  F007  FFE3   	movff	btemp,plusw1
 21384                           
 21385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 21386                           ;stkvar	_w @ sp[(-56)+38]
 21387  012078  50E1               	movf	fsr1l,w,c
 21388  01207A  0FEE               	addlw	-18
 21389  01207C  6ED9               	movwf	fsr2l,c
 21390  01207E  50E2               	movf	fsr1h,w,c
 21391  012080  6EDA               	movwf	fsr2h,c
 21392  012082  0EFF               	movlw	255
 21393  012084  22DA               	addwfc	fsr2h,f,c
 21394  012086  06DE               	decf	postinc2,f,c
 21395  012088  0E00               	movlw	0
 21396  01208A  5ADD               	subwfb	postdec2,f,c
 21397                           
 21398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 21399                           ;stkvar	_t @ sp[(-56)+52]
 21400  01208C  50E1               	movf	fsr1l,w,c
 21401  01208E  0FFC               	addlw	-4
 21402  012090  6ED9               	movwf	fsr2l,c
 21403  012092  50E2               	movf	fsr1h,w,c
 21404  012094  6EDA               	movwf	fsr2h,c
 21405  012096  0EFF               	movlw	255
 21406  012098  22DA               	addwfc	fsr2h,f,c
 21407  01209A  06DE               	decf	postinc2,f,c
 21408  01209C  0E00               	movlw	0
 21409  01209E  5ADD               	subwfb	postdec2,f,c
 21410  0120A0                     l13548:
 21411                           
 21412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 21413                           ;stkvar	_t @ sp[(-56)+52]
 21414  0120A0  0EFC               	movlw	-4
 21415  0120A2  006F FF8C  F001    	movff	plusw1,btemp
 21416  0120A8  0EFD               	movlw	-3
 21417  0120AA  50E3               	movf	plusw1,w,c
 21418  0120AC  1001               	iorwf	btemp^0,w,c
 21419  0120AE  A4D8               	btfss	status,2,c
 21420  0120B0  D7C2               	goto	l13540
 21421                           
 21422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 21423                           ;stkvar	_n @ sp[(-56)+32]
 21424  0120B2  0EE8               	movlw	-24
 21425  0120B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 21426  0120BA  0EE9               	movlw	-23
 21427  0120BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 21428  0120C2  0E94               	movlw	low _dbuf
 21429  0120C4  240B               	addwf	(btemp+10)^0,w,c
 21430  0120C6  6ED9               	movwf	fsr2l,c
 21431  0120C8  0E03               	movlw	high _dbuf
 21432  0120CA  200C               	addwfc	(btemp+11)^0,w,c
 21433  0120CC  6EDA               	movwf	fsr2h,c
 21434                           
 21435                           ;stkvar	_d @ sp[(-56)+44]
 21436  0120CE  0EF4               	movlw	-12
 21437  0120D0  50E3               	movf	plusw1,w,c
 21438  0120D2  0F30               	addlw	48
 21439  0120D4  6EDF               	movwf	indf2,c
 21440                           
 21441                           ;stkvar	_n @ sp[(-56)+32]
 21442  0120D6  0EE8               	movlw	-24
 21443  0120D8  50E3               	movf	plusw1,w,c
 21444  0120DA  0F01               	addlw	1
 21445  0120DC  6E01               	movwf	btemp^0,c
 21446  0120DE  0EE8               	movlw	-24
 21447  0120E0  0060  F007  FFE3   	movff	btemp,plusw1
 21448  0120E6  6A01               	clrf	btemp^0,c
 21449  0120E8  0EE9               	movlw	-23
 21450  0120EA  50E3               	movf	plusw1,w,c
 21451  0120EC  2001               	addwfc	btemp^0,w,c
 21452  0120EE  6E01               	movwf	btemp^0,c
 21453  0120F0  0EE9               	movlw	-23
 21454  0120F2  0060  F007  FFE3   	movff	btemp,plusw1
 21455                           
 21456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 21457                           ;stkvar	_w @ sp[(-56)+38]
 21458  0120F8  50E1               	movf	fsr1l,w,c
 21459  0120FA  0FEE               	addlw	-18
 21460  0120FC  6ED9               	movwf	fsr2l,c
 21461  0120FE  50E2               	movf	fsr1h,w,c
 21462  012100  6EDA               	movwf	fsr2h,c
 21463  012102  0EFF               	movlw	255
 21464  012104  22DA               	addwfc	fsr2h,f,c
 21465  012106  06DE               	decf	postinc2,f,c
 21466  012108  0E00               	movlw	0
 21467  01210A  5ADD               	subwfb	postdec2,f,c
 21468  01210C                     l13556:
 21469                           
 21470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 21471                           ;stkvar	_u @ sp[(-56)+12]
 21472  01210C  0ED4               	movlw	-44
 21473  01210E  006F FF8F FFE6     	movff	plusw1,postinc1
 21474  012114  006F FF8F FFE6     	movff	plusw1,postinc1
 21475  01211A  006F FF8F FFE6     	movff	plusw1,postinc1
 21476  012120  006F FF8F FFE6     	movff	plusw1,postinc1
 21477                           
 21478                           ;stkvar	_l @ sp[(-60)+20]
 21479  012126  0ED8               	movlw	-40
 21480  012128  006F FF8F FFE6     	movff	plusw1,postinc1
 21481  01212E  006F FF8F FFE6     	movff	plusw1,postinc1
 21482  012134  006F FF8F FFE6     	movff	plusw1,postinc1
 21483  01213A  006F FF8F FFE6     	movff	plusw1,postinc1
 21484  012140  ECED  F09F         	call	___flmul	;wreg free
 21485  012144  0060  F007  FFE6   	movff	btemp,postinc1
 21486  01214A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21487  012150  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21488  012156  0060  F013  FFE6   	movff	btemp+3,postinc1
 21489                           
 21490                           ;stkvar	_h @ sp[(-60)+24]
 21491  01215C  0EDC               	movlw	-36
 21492  01215E  006F FF8F FFE6     	movff	plusw1,postinc1
 21493  012164  006F FF8F FFE6     	movff	plusw1,postinc1
 21494  01216A  006F FF8F FFE6     	movff	plusw1,postinc1
 21495  012170  006F FF8F FFE6     	movff	plusw1,postinc1
 21496  012176  EC36  F0E4         	call	___flsub	;wreg free
 21497                           
 21498                           ;stkvar	_h @ sp[(-56)+24]
 21499  01217A  0EE0               	movlw	-32
 21500  01217C  0060  F007  FFE3   	movff	btemp,plusw1
 21501  012182  0EE1               	movlw	-31
 21502  012184  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21503  01218A  0EE2               	movlw	-30
 21504  01218C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21505  012192  0EE3               	movlw	-29
 21506  012194  0060  F013  FFE3   	movff	btemp+3,plusw1
 21507                           
 21508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 21509  01219A  0E00               	movlw	0
 21510  01219C  6EE6               	movwf	postinc1,c
 21511  01219E  0E00               	movlw	0
 21512  0121A0  6EE6               	movwf	postinc1,c
 21513  0121A2  0E20               	movlw	32
 21514  0121A4  6EE6               	movwf	postinc1,c
 21515  0121A6  0E41               	movlw	65
 21516  0121A8  6EE6               	movwf	postinc1,c
 21517                           
 21518                           ;stkvar	_u @ sp[(-60)+12]
 21519  0121AA  0ED0               	movlw	-48
 21520  0121AC  006F FF8F FFE6     	movff	plusw1,postinc1
 21521  0121B2  006F FF8F FFE6     	movff	plusw1,postinc1
 21522  0121B8  006F FF8F FFE6     	movff	plusw1,postinc1
 21523  0121BE  006F FF8F FFE6     	movff	plusw1,postinc1
 21524  0121C4  ECE0  F0A7         	call	___fldiv	;wreg free
 21525                           
 21526                           ;stkvar	_u @ sp[(-56)+12]
 21527  0121C8  0ED4               	movlw	-44
 21528  0121CA  0060  F007  FFE3   	movff	btemp,plusw1
 21529  0121D0  0ED5               	movlw	-43
 21530  0121D2  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21531  0121D8  0ED6               	movlw	-42
 21532  0121DA  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21533  0121E0  0ED7               	movlw	-41
 21534  0121E2  0060  F013  FFE3   	movff	btemp+3,plusw1
 21535                           
 21536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 21537                           ;stkvar	_ne @ sp[(-56)+46]
 21538  0121E8  50E1               	movf	fsr1l,w,c
 21539  0121EA  0FF6               	addlw	-10
 21540  0121EC  6ED9               	movwf	fsr2l,c
 21541  0121EE  50E2               	movf	fsr1h,w,c
 21542  0121F0  6EDA               	movwf	fsr2h,c
 21543  0121F2  0EFF               	movlw	255
 21544  0121F4  22DA               	addwfc	fsr2h,f,c
 21545  0121F6  06DE               	decf	postinc2,f,c
 21546  0121F8  0E00               	movlw	0
 21547  0121FA  5ADD               	subwfb	postdec2,f,c
 21548                           
 21549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 21550                           ;stkvar	_i @ sp[(-56)+36]
 21551  0121FC  0EEC               	movlw	-20
 21552  0121FE  50E3               	movf	plusw1,w,c
 21553  012200  0F01               	addlw	1
 21554  012202  6E01               	movwf	btemp^0,c
 21555  012204  0EEC               	movlw	-20
 21556  012206  0060  F007  FFE3   	movff	btemp,plusw1
 21557  01220C  6A01               	clrf	btemp^0,c
 21558  01220E  0EED               	movlw	-19
 21559  012210  50E3               	movf	plusw1,w,c
 21560  012212  2001               	addwfc	btemp^0,w,c
 21561  012214  6E01               	movwf	btemp^0,c
 21562  012216  0EED               	movlw	-19
 21563  012218  0060  F007  FFE3   	movff	btemp,plusw1
 21564  01221E                     l13564:
 21565                           
 21566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 21567                           ;stkvar	_m @ sp[(-56)+48]
 21568                           ;stkvar	_i @ sp[(-56)+36]
 21569  01221E  50E1               	movf	fsr1l,w,c
 21570  012220  0FEC               	addlw	-20
 21571  012222  6ED9               	movwf	fsr2l,c
 21572  012224  50E2               	movf	fsr1h,w,c
 21573  012226  6EDA               	movwf	fsr2h,c
 21574  012228  0EFF               	movlw	255
 21575  01222A  22DA               	addwfc	fsr2h,f,c
 21576  01222C  0EF8               	movlw	-8
 21577  01222E  50E3               	movf	plusw1,w,c
 21578  012230  5CDE               	subwf	postinc2,w,c
 21579  012232  50DE               	movf	postinc2,w,c
 21580  012234  0A80               	xorlw	128
 21581  012236  6E01               	movwf	btemp^0,c
 21582  012238  0EF9               	movlw	-7
 21583  01223A  50E3               	movf	plusw1,w,c
 21584  01223C  0A80               	xorlw	128
 21585  01223E  5801               	subwfb	btemp^0,w,c
 21586  012240  B0D8               	btfsc	status,0,c
 21587  012242  D00E               	goto	u12660
 21588                           
 21589                           ;stkvar	_n @ sp[(-56)+32]
 21590  012244  0EE9               	movlw	-23
 21591  012246  BEE3               	btfsc	plusw1,7,c
 21592  012248  D633               	goto	l13514
 21593  01224A  0EE9               	movlw	-23
 21594  01224C  50E3               	movf	plusw1,w,c
 21595  01224E  E108               	bnz	u12660
 21596  012250  0EE8               	movlw	-24
 21597  012252  006F FF8C  F001    	movff	plusw1,btemp
 21598  012258  0E4B               	movlw	75
 21599  01225A  5E01               	subwf	btemp^0,f,c
 21600  01225C  A0D8               	btfss	status,0,c
 21601  01225E  D628               	goto	l13514
 21602  012260                     u12660:
 21603                           
 21604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 21605                           ;stkvar	_pp @ sp[(-56)+50]
 21606  012260  0EFA               	movlw	-6
 21607  012262  006F FF8C  F001    	movff	plusw1,btemp
 21608  012268  0EFB               	movlw	-5
 21609  01226A  50E3               	movf	plusw1,w,c
 21610  01226C  1001               	iorwf	btemp^0,w,c
 21611  01226E  B4D8               	btfsc	status,2,c
 21612  012270  A83E               	btfss	_flags^0,4,c
 21613  012272  D021               	goto	l13576
 21614                           
 21615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 21616                           ;stkvar	_n @ sp[(-56)+32]
 21617  012274  0EE8               	movlw	-24
 21618  012276  006F FF8C  F00B    	movff	plusw1,btemp+10
 21619  01227C  0EE9               	movlw	-23
 21620  01227E  006F FF8C  F00C    	movff	plusw1,btemp+11
 21621  012284  0E94               	movlw	low _dbuf
 21622  012286  240B               	addwf	(btemp+10)^0,w,c
 21623  012288  6ED9               	movwf	fsr2l,c
 21624  01228A  0E03               	movlw	high _dbuf
 21625  01228C  200C               	addwfc	(btemp+11)^0,w,c
 21626  01228E  6EDA               	movwf	fsr2h,c
 21627  012290  0E2E               	movlw	46
 21628  012292  6EDF               	movwf	indf2,c
 21629                           
 21630                           ;stkvar	_n @ sp[(-56)+32]
 21631  012294  0EE8               	movlw	-24
 21632  012296  50E3               	movf	plusw1,w,c
 21633  012298  0F01               	addlw	1
 21634  01229A  6E01               	movwf	btemp^0,c
 21635  01229C  0EE8               	movlw	-24
 21636  01229E  0060  F007  FFE3   	movff	btemp,plusw1
 21637  0122A4  6A01               	clrf	btemp^0,c
 21638  0122A6  0EE9               	movlw	-23
 21639  0122A8  50E3               	movf	plusw1,w,c
 21640  0122AA  2001               	addwfc	btemp^0,w,c
 21641  0122AC  6E01               	movwf	btemp^0,c
 21642  0122AE  0EE9               	movlw	-23
 21643  0122B0  0060  F007  FFE3   	movff	btemp,plusw1
 21644  0122B6                     l13576:
 21645                           
 21646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 21647                           ;stkvar	_n @ sp[(-56)+32]
 21648  0122B6  0EE8               	movlw	-24
 21649  0122B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 21650  0122BE  0EE9               	movlw	-23
 21651  0122C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 21652  0122C6  0E94               	movlw	low _dbuf
 21653  0122C8  240B               	addwf	(btemp+10)^0,w,c
 21654  0122CA  6ED9               	movwf	fsr2l,c
 21655  0122CC  0E03               	movlw	high _dbuf
 21656  0122CE  200C               	addwfc	(btemp+11)^0,w,c
 21657  0122D0  6EDA               	movwf	fsr2h,c
 21658  0122D2  0E00               	movlw	0
 21659  0122D4  6EDF               	movwf	indf2,c
 21660                           
 21661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 21662                           ;stkvar	_nmode @ sp[(-56)+55]
 21663  0122D6  0EFF               	movlw	-1
 21664  0122D8  006F FF8C  F001    	movff	plusw1,btemp
 21665  0122DE  0E65               	movlw	101
 21666  0122E0  1801               	xorwf	btemp^0,w,c
 21667  0122E2  A4D8               	btfss	status,2,c
 21668  0122E4  EFD4  F08A         	goto	l13380
 21669                           
 21670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 21671  0122E8  0E4F               	movlw	79
 21672  0122EA  6E0B               	movwf	(btemp+10)^0,c
 21673  0122EC  0E00               	movlw	0
 21674  0122EE  6E0C               	movwf	(btemp+11)^0,c
 21675                           
 21676                           ;stkvar	_i @ sp[(-56)+36]
 21677  0122F0  0EEC               	movlw	-20
 21678  0122F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21679  0122F8  0EED               	movlw	-19
 21680  0122FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 21681                           
 21682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 21683                           ;stkvar	_i @ sp[(-56)+36]
 21684  012300  0EEC               	movlw	-20
 21685  012302  006F FF8C  F00B    	movff	plusw1,btemp+10
 21686  012308  0EED               	movlw	-19
 21687  01230A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21688  012310  0E94               	movlw	low _dbuf
 21689  012312  240B               	addwf	(btemp+10)^0,w,c
 21690  012314  6ED9               	movwf	fsr2l,c
 21691  012316  0E03               	movlw	high _dbuf
 21692  012318  200C               	addwfc	(btemp+11)^0,w,c
 21693  01231A  6EDA               	movwf	fsr2h,c
 21694  01231C  0E00               	movlw	0
 21695  01231E  6EDF               	movwf	indf2,c
 21696                           
 21697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 21698                           ;stkvar	_sign @ sp[(-56)+42]
 21699  012320  0EF2               	movlw	-14
 21700  012322  6AE3               	clrf	plusw1,c
 21701  012324  0EF3               	movlw	-13
 21702  012326  6AE3               	clrf	plusw1,c
 21703                           
 21704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 21705                           ;stkvar	_e @ sp[(-56)+34]
 21706  012328  0EEB               	movlw	-21
 21707  01232A  AEE3               	btfss	plusw1,7,c
 21708  01232C  D012               	goto	l13590
 21709                           
 21710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 21711  01232E  0E01               	movlw	1
 21712  012330  6E0B               	movwf	(btemp+10)^0,c
 21713  012332  0E00               	movlw	0
 21714  012334  6E0C               	movwf	(btemp+11)^0,c
 21715                           
 21716                           ;stkvar	_sign @ sp[(-56)+42]
 21717  012336  0EF2               	movlw	-14
 21718  012338  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21719  01233E  0EF3               	movlw	-13
 21720  012340  0060  F033  FFE3   	movff	btemp+11,plusw1
 21721                           
 21722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 21723                           ;stkvar	_e @ sp[(-56)+34]
 21724                           ;stkvar	_e @ sp[(-56)+34]
 21725  012346  0EEA               	movlw	-22
 21726  012348  6CE3               	negf	plusw1,c
 21727  01234A  0EEB               	movlw	-21
 21728  01234C  1EE3               	comf	plusw1,f,c
 21729  01234E  B0D8               	btfsc	status,0,c
 21730  012350  2AE3               	incf	plusw1,f,c
 21731  012352                     l13590:
 21732                           
 21733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 21734  012352  0E02               	movlw	2
 21735  012354  6E0B               	movwf	(btemp+10)^0,c
 21736  012356  0E00               	movlw	0
 21737  012358  6E0C               	movwf	(btemp+11)^0,c
 21738                           
 21739                           ;stkvar	_p @ sp[(-56)+40]
 21740  01235A  0EF0               	movlw	-16
 21741  01235C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21742  012362  0EF1               	movlw	-15
 21743  012364  0060  F033  FFE3   	movff	btemp+11,plusw1
 21744                           
 21745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 21746  01236A  D051               	goto	l13602
 21747  01236C                     l13592:
 21748                           
 21749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 21750                           ;stkvar	_i @ sp[(-56)+36]
 21751  01236C  50E1               	movf	fsr1l,w,c
 21752  01236E  0FEC               	addlw	-20
 21753  012370  6ED9               	movwf	fsr2l,c
 21754  012372  50E2               	movf	fsr1h,w,c
 21755  012374  6EDA               	movwf	fsr2h,c
 21756  012376  0EFF               	movlw	255
 21757  012378  22DA               	addwfc	fsr2h,f,c
 21758  01237A  06DE               	decf	postinc2,f,c
 21759  01237C  0E00               	movlw	0
 21760  01237E  5ADD               	subwfb	postdec2,f,c
 21761                           
 21762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 21763                           ;stkvar	_i @ sp[(-56)+36]
 21764  012380  0EEC               	movlw	-20
 21765  012382  006F FF8C  F00B    	movff	plusw1,btemp+10
 21766  012388  0EED               	movlw	-19
 21767  01238A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21768  012390  0E94               	movlw	low _dbuf
 21769  012392  240B               	addwf	(btemp+10)^0,w,c
 21770  012394  6ED9               	movwf	fsr2l,c
 21771  012396  0E03               	movlw	high _dbuf
 21772  012398  200C               	addwfc	(btemp+11)^0,w,c
 21773  01239A  6EDA               	movwf	fsr2h,c
 21774  01239C  0E0A               	movlw	10
 21775  01239E  6EE6               	movwf	postinc1,c
 21776  0123A0  0E00               	movlw	0
 21777  0123A2  6EE6               	movwf	postinc1,c
 21778                           
 21779                           ;stkvar	_e @ sp[(-58)+34]
 21780  0123A4  0EE8               	movlw	-24
 21781  0123A6  006F FF8F FFE6     	movff	plusw1,postinc1
 21782  0123AC  006F FF8F FFE6     	movff	plusw1,postinc1
 21783  0123B2  ECF6  F0D3         	call	___awmod	;wreg free
 21784  0123B6  5001               	movf	btemp^0,w,c
 21785  0123B8  0F30               	addlw	48
 21786  0123BA  6EDF               	movwf	indf2,c
 21787                           
 21788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 21789  0123BC  0E0A               	movlw	10
 21790  0123BE  6EE6               	movwf	postinc1,c
 21791  0123C0  0E00               	movlw	0
 21792  0123C2  6EE6               	movwf	postinc1,c
 21793                           
 21794                           ;stkvar	_e @ sp[(-58)+34]
 21795  0123C4  0EE8               	movlw	-24
 21796  0123C6  006F FF8F FFE6     	movff	plusw1,postinc1
 21797  0123CC  006F FF8F FFE6     	movff	plusw1,postinc1
 21798  0123D2  EC3B  F0CF         	call	___awdiv	;wreg free
 21799                           
 21800                           ;stkvar	_e @ sp[(-56)+34]
 21801  0123D6  0EEA               	movlw	-22
 21802  0123D8  0060  F007  FFE3   	movff	btemp,plusw1
 21803  0123DE  0EEB               	movlw	-21
 21804  0123E0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21805                           
 21806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 21807                           ;stkvar	_p @ sp[(-56)+40]
 21808  0123E6  50E1               	movf	fsr1l,w,c
 21809  0123E8  0FF0               	addlw	-16
 21810  0123EA  6ED9               	movwf	fsr2l,c
 21811  0123EC  50E2               	movf	fsr1h,w,c
 21812  0123EE  6EDA               	movwf	fsr2h,c
 21813  0123F0  0EFF               	movlw	255
 21814  0123F2  22DA               	addwfc	fsr2h,f,c
 21815  0123F4  06DE               	decf	postinc2,f,c
 21816  0123F6  0E00               	movlw	0
 21817  0123F8  5ADD               	subwfb	postdec2,f,c
 21818                           
 21819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 21820                           ;stkvar	_w @ sp[(-56)+38]
 21821  0123FA  50E1               	movf	fsr1l,w,c
 21822  0123FC  0FEE               	addlw	-18
 21823  0123FE  6ED9               	movwf	fsr2l,c
 21824  012400  50E2               	movf	fsr1h,w,c
 21825  012402  6EDA               	movwf	fsr2h,c
 21826  012404  0EFF               	movlw	255
 21827  012406  22DA               	addwfc	fsr2h,f,c
 21828  012408  06DE               	decf	postinc2,f,c
 21829  01240A  0E00               	movlw	0
 21830  01240C  5ADD               	subwfb	postdec2,f,c
 21831  01240E                     l13602:
 21832                           
 21833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 21834                           ;stkvar	_e @ sp[(-56)+34]
 21835  01240E  0EEA               	movlw	-22
 21836  012410  006F FF8C  F001    	movff	plusw1,btemp
 21837  012416  0EEB               	movlw	-21
 21838  012418  50E3               	movf	plusw1,w,c
 21839  01241A  1001               	iorwf	btemp^0,w,c
 21840  01241C  A4D8               	btfss	status,2,c
 21841  01241E  D7A6               	goto	l13592
 21842                           
 21843                           ;stkvar	_p @ sp[(-56)+40]
 21844  012420  0EF1               	movlw	-15
 21845  012422  BEE3               	btfsc	plusw1,7,c
 21846  012424  D007               	goto	u12720
 21847  012426  0EF1               	movlw	-15
 21848  012428  50E3               	movf	plusw1,w,c
 21849  01242A  E1A0               	bnz	l13592
 21850  01242C  0EF0               	movlw	-16
 21851  01242E  04E3               	decf	plusw1,w,c
 21852  012430  B0D8               	btfsc	status,0,c
 21853  012432  D79C               	goto	l13592
 21854  012434                     u12720:
 21855                           
 21856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 21857                           ;stkvar	_i @ sp[(-56)+36]
 21858  012434  50E1               	movf	fsr1l,w,c
 21859  012436  0FEC               	addlw	-20
 21860  012438  6ED9               	movwf	fsr2l,c
 21861  01243A  50E2               	movf	fsr1h,w,c
 21862  01243C  6EDA               	movwf	fsr2h,c
 21863  01243E  0EFF               	movlw	255
 21864  012440  22DA               	addwfc	fsr2h,f,c
 21865  012442  06DE               	decf	postinc2,f,c
 21866  012444  0E00               	movlw	0
 21867  012446  5ADD               	subwfb	postdec2,f,c
 21868                           
 21869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 21870                           ;stkvar	_sign @ sp[(-56)+42]
 21871  012448  0EF2               	movlw	-14
 21872  01244A  006F FF8C  F001    	movff	plusw1,btemp
 21873  012450  0EF3               	movlw	-13
 21874  012452  50E3               	movf	plusw1,w,c
 21875  012454  1001               	iorwf	btemp^0,w,c
 21876  012456  A4D8               	btfss	status,2,c
 21877  012458  D002               	goto	l13612
 21878  01245A  0E2B               	movlw	43
 21879  01245C  D001               	goto	L23
 21880  01245E                     l13612:
 21881  01245E  0E2D               	movlw	45
 21882  012460                     L23:
 21883  012460  6E0B               	movwf	(btemp+10)^0,c
 21884  012462  0E00               	movlw	0
 21885  012464  6E0C               	movwf	(btemp+11)^0,c
 21886                           
 21887                           ;stkvar	_efgtoa$6802 @ sp[(-56)+4]
 21888  012466  0ECC               	movlw	-52
 21889  012468  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21890  01246E  0ECD               	movlw	-51
 21891  012470  0060  F033  FFE3   	movff	btemp+11,plusw1
 21892                           
 21893                           ;stkvar	_efgtoa$6802 @ sp[(-56)+4]
 21894                           ;stkvar	_i @ sp[(-56)+36]
 21895  012476  0EEC               	movlw	-20
 21896  012478  006F FF8C  F00B    	movff	plusw1,btemp+10
 21897  01247E  0EED               	movlw	-19
 21898  012480  006F FF8C  F00C    	movff	plusw1,btemp+11
 21899  012486  0E94               	movlw	low _dbuf
 21900  012488  240B               	addwf	(btemp+10)^0,w,c
 21901  01248A  6ED9               	movwf	fsr2l,c
 21902  01248C  0E03               	movlw	high _dbuf
 21903  01248E  200C               	addwfc	(btemp+11)^0,w,c
 21904  012490  6EDA               	movwf	fsr2h,c
 21905  012492  0ECC               	movlw	-52
 21906  012494  006F FF8F FFDF     	movff	plusw1,indf2
 21907                           
 21908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 21909                           ;stkvar	_w @ sp[(-56)+38]
 21910  01249A  50E1               	movf	fsr1l,w,c
 21911  01249C  0FEE               	addlw	-18
 21912  01249E  6ED9               	movwf	fsr2l,c
 21913  0124A0  50E2               	movf	fsr1h,w,c
 21914  0124A2  6EDA               	movwf	fsr2h,c
 21915  0124A4  0EFF               	movlw	255
 21916  0124A6  22DA               	addwfc	fsr2h,f,c
 21917  0124A8  06DE               	decf	postinc2,f,c
 21918  0124AA  0E00               	movlw	0
 21919  0124AC  5ADD               	subwfb	postdec2,f,c
 21920                           
 21921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 21922                           ;stkvar	_i @ sp[(-56)+36]
 21923  0124AE  50E1               	movf	fsr1l,w,c
 21924  0124B0  0FEC               	addlw	-20
 21925  0124B2  6ED9               	movwf	fsr2l,c
 21926  0124B4  50E2               	movf	fsr1h,w,c
 21927  0124B6  6EDA               	movwf	fsr2h,c
 21928  0124B8  0EFF               	movlw	255
 21929  0124BA  22DA               	addwfc	fsr2h,f,c
 21930  0124BC  06DE               	decf	postinc2,f,c
 21931  0124BE  0E00               	movlw	0
 21932  0124C0  5ADD               	subwfb	postdec2,f,c
 21933  0124C2  0EBF               	movlw	191
 21934  0124C4  6E0B               	movwf	(btemp+10)^0,c
 21935  0124C6  0EFF               	movlw	255
 21936  0124C8  6E0C               	movwf	(btemp+11)^0,c
 21937                           
 21938                           ;stkvar	_c @ sp[(-56)+-7]
 21939  0124CA  0EC1               	movlw	-63
 21940  0124CC  50E3               	movf	plusw1,w,c
 21941  0124CE  6E09               	movwf	(btemp+8)^0,c
 21942  0124D0  6A0A               	clrf	(btemp+9)^0,c
 21943  0124D2  500B               	movf	(btemp+10)^0,w,c
 21944  0124D4  2609               	addwf	(btemp+8)^0,f,c
 21945  0124D6  500C               	movf	(btemp+11)^0,w,c
 21946  0124D8  220A               	addwfc	(btemp+9)^0,f,c
 21947  0124DA  500A               	movf	(btemp+9)^0,w,c
 21948  0124DC  E106               	bnz	u12740
 21949  0124DE  0E1A               	movlw	26
 21950  0124E0  5C09               	subwf	(btemp+8)^0,w,c
 21951  0124E2  B0D8               	btfsc	status,0,c
 21952  0124E4  D002               	goto	u12740
 21953  0124E6  0E01               	movlw	1
 21954  0124E8  D001               	goto	u12750
 21955  0124EA                     u12740:
 21956  0124EA  0E00               	movlw	0
 21957  0124EC                     u12750:
 21958  0124EC  6E0B               	movwf	(btemp+10)^0,c
 21959  0124EE  6A0C               	clrf	(btemp+11)^0,c
 21960                           
 21961                           ;stkvar	_efgtoa$6804 @ sp[(-56)+0]
 21962  0124F0  0EC8               	movlw	-56
 21963  0124F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21964  0124F8  0EC9               	movlw	-55
 21965  0124FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 21966                           
 21967                           ;stkvar	_efgtoa$6804 @ sp[(-56)+0]
 21968  012500  0EC8               	movlw	-56
 21969  012502  006F FF8C  F001    	movff	plusw1,btemp
 21970  012508  0EC9               	movlw	-55
 21971  01250A  50E3               	movf	plusw1,w,c
 21972  01250C  1001               	iorwf	btemp^0,w,c
 21973  01250E  A4D8               	btfss	status,2,c
 21974  012510  D002               	goto	l13628
 21975  012512  0E65               	movlw	101
 21976  012514  D001               	goto	L24
 21977  012516                     l13628:
 21978  012516  0E45               	movlw	69
 21979  012518                     L24:
 21980  012518  6E0B               	movwf	(btemp+10)^0,c
 21981  01251A  0E00               	movlw	0
 21982  01251C  6E0C               	movwf	(btemp+11)^0,c
 21983                           
 21984                           ;stkvar	_efgtoa$6803 @ sp[(-56)+2]
 21985  01251E  0ECA               	movlw	-54
 21986  012520  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21987  012526  0ECB               	movlw	-53
 21988  012528  0060  F033  FFE3   	movff	btemp+11,plusw1
 21989                           
 21990                           ;stkvar	_efgtoa$6803 @ sp[(-56)+2]
 21991                           ;stkvar	_i @ sp[(-56)+36]
 21992  01252E  0EEC               	movlw	-20
 21993  012530  006F FF8C  F00B    	movff	plusw1,btemp+10
 21994  012536  0EED               	movlw	-19
 21995  012538  006F FF8C  F00C    	movff	plusw1,btemp+11
 21996  01253E  0E94               	movlw	low _dbuf
 21997  012540  240B               	addwf	(btemp+10)^0,w,c
 21998  012542  6ED9               	movwf	fsr2l,c
 21999  012544  0E03               	movlw	high _dbuf
 22000  012546  200C               	addwfc	(btemp+11)^0,w,c
 22001  012548  6EDA               	movwf	fsr2h,c
 22002  01254A  0ECA               	movlw	-54
 22003  01254C  006F FF8F FFDF     	movff	plusw1,indf2
 22004                           
 22005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 22006                           ;stkvar	_w @ sp[(-56)+38]
 22007  012552  50E1               	movf	fsr1l,w,c
 22008  012554  0FEE               	addlw	-18
 22009  012556  6ED9               	movwf	fsr2l,c
 22010  012558  50E2               	movf	fsr1h,w,c
 22011  01255A  6EDA               	movwf	fsr2h,c
 22012  01255C  0EFF               	movlw	255
 22013  01255E  22DA               	addwfc	fsr2h,f,c
 22014  012560  06DE               	decf	postinc2,f,c
 22015  012562  0E00               	movlw	0
 22016  012564  5ADD               	subwfb	postdec2,f,c
 22017                           
 22018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 22019                           ;stkvar	_i @ sp[(-56)+36]
 22020  012566  0EEC               	movlw	-20
 22021  012568  006F FF8C  F00B    	movff	plusw1,btemp+10
 22022  01256E  0EED               	movlw	-19
 22023  012570  006F FF8C  F00C    	movff	plusw1,btemp+11
 22024  012576  0E94               	movlw	low _dbuf
 22025  012578  240B               	addwf	(btemp+10)^0,w,c
 22026  01257A  6E09               	movwf	(btemp+8)^0,c
 22027  01257C  0E03               	movlw	high _dbuf
 22028  01257E  200C               	addwfc	(btemp+11)^0,w,c
 22029  012580  6E0A               	movwf	(btemp+9)^0,c
 22030  012582  0060  F027  FFE6   	movff	btemp+8,postinc1
 22031  012588  0060  F02B  FFE6   	movff	btemp+9,postinc1
 22032                           
 22033                           ;stkvar	_n @ sp[(-58)+32]
 22034  01258E  0E94               	movlw	low _dbuf
 22035  012590  6E0B               	movwf	(btemp+10)^0,c
 22036  012592  0E03               	movlw	high _dbuf
 22037  012594  6E0C               	movwf	(btemp+11)^0,c
 22038  012596  0EE6               	movlw	-26
 22039  012598  50E3               	movf	plusw1,w,c
 22040  01259A  260B               	addwf	(btemp+10)^0,f,c
 22041  01259C  0EE7               	movlw	-25
 22042  01259E  50E3               	movf	plusw1,w,c
 22043  0125A0  220C               	addwfc	(btemp+11)^0,f,c
 22044  0125A2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 22045  0125A8  0060  F033  FFE6   	movff	btemp+11,postinc1
 22046  0125AE  ECDE  F0D7         	call	_strcpy	;wreg free
 22047  0125B2  EFD4  F08A         	goto	l13380
 22048  0125B6                     l2478:
 22049                           
 22050                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 22051  0125B6  0EC1               	movlw	193
 22052  0125B8  26E1               	addwf	fsr1l,f,c
 22053  0125BA  0EFF               	movlw	255
 22054  0125BC  22E2               	addwfc	fsr1h,f,c
 22055  0125BE  0012               	return		;funcret
 22056  0125C0                     __end_of_efgtoa:
 22057                           	opt callstack 0
 22058                           
 22059 ;; *************** function _tolower *****************
 22060 ;; Defined at:
 22061 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 22062 ;; Parameters:    Size  Location     Type
 22063 ;;  c               2  [STACK] int 
 22064 ;; Auto vars:     Size  Location     Type
 22065 ;;		None
 22066 ;; Return value:  Size  Location     Type
 22067 ;;                  2  [STACK] int 
 22068 ;; Registers used:
 22069 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 22070 ;; Tracked objects:
 22071 ;;		On entry : 0/0
 22072 ;;		On exit  : 0/0
 22073 ;;		Unchanged: 0/0
 22074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22079 ;;Total ram usage:        0 bytes
 22080 ;; Hardware stack levels used:    1
 22081 ;; Hardware stack levels required when called:   16
 22082 ;; This function calls:
 22083 ;;		_isupper
 22084 ;; This function is called by:
 22085 ;;		_efgtoa
 22086 ;;		_vfpfcnvrt
 22087 ;; This function uses a reentrant model
 22088 ;;
 22089                           
 22090                           	psect	text78
 22091  01BD9E                     __ptext78:
 22092                           	opt callstack 0
 22093  01BD9E                     _tolower:
 22094                           	opt callstack 0
 22095                           
 22096                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22097  01BD9E  52E6               	movf	postinc1,f,c
 22098  01BDA0  52E6               	movf	postinc1,f,c
 22099                           
 22100                           ;stkvar	_c @ sp[(-2)+-2]
 22101                           
 22102                           ;incstack = 0
 22103 ;; hardware stack exceeded
 22104  01BDA2  0EFC               	movlw	-4
 22105  01BDA4  50E3               	movf	plusw1,w,c
 22106  01BDA6  0FBF               	addlw	191
 22107  01BDA8  6E0B               	movwf	(btemp+10)^0,c
 22108  01BDAA  0EFD               	movlw	-3
 22109  01BDAC  006F FF8C  F00C    	movff	plusw1,btemp+11
 22110  01BDB2  0EFF               	movlw	255
 22111  01BDB4  220C               	addwfc	(btemp+11)^0,f,c
 22112  01BDB6  500C               	movf	(btemp+11)^0,w,c
 22113  01BDB8  E106               	bnz	u6670
 22114  01BDBA  0E1A               	movlw	26
 22115  01BDBC  5C0B               	subwf	(btemp+10)^0,w,c
 22116  01BDBE  B0D8               	btfsc	status,0,c
 22117  01BDC0  D002               	goto	u6670
 22118  01BDC2  0E01               	movlw	1
 22119  01BDC4  D001               	goto	u6680
 22120  01BDC6                     u6670:
 22121  01BDC6  0E00               	movlw	0
 22122  01BDC8                     u6680:
 22123  01BDC8  6E0B               	movwf	(btemp+10)^0,c
 22124  01BDCA  6A0C               	clrf	(btemp+11)^0,c
 22125                           
 22126                           ;stkvar	_tolower$7623 @ sp[(-2)+0]
 22127  01BDCC  0EFE               	movlw	-2
 22128  01BDCE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22129  01BDD4  0EFF               	movlw	-1
 22130  01BDD6  0060  F033  FFE3   	movff	btemp+11,plusw1
 22131                           
 22132                           ;stkvar	_tolower$7623 @ sp[(-2)+0]
 22133  01BDDC  0EFE               	movlw	-2
 22134  01BDDE  006F FF8C  F001    	movff	plusw1,btemp
 22135  01BDE4  0EFF               	movlw	-1
 22136  01BDE6  50E3               	movf	plusw1,w,c
 22137  01BDE8  1001               	iorwf	btemp^0,w,c
 22138  01BDEA  B4D8               	btfsc	status,2,c
 22139  01BDEC  D00D               	goto	l8854
 22140                           
 22141                           ;stkvar	_c @ sp[(-2)+-2]
 22142  01BDEE  0EFC               	movlw	-4
 22143  01BDF0  006F FF8C  F001    	movff	plusw1,btemp
 22144  01BDF6  0EFD               	movlw	-3
 22145  01BDF8  006F FF8C  F002    	movff	plusw1,btemp+1
 22146  01BDFE  0E20               	movlw	32
 22147  01BE00  1201               	iorwf	btemp^0,f,c
 22148  01BE02  0E00               	movlw	0
 22149  01BE04  1202               	iorwf	(btemp+1)^0,f,c
 22150  01BE06  D008               	goto	l3750
 22151  01BE08                     l8854:
 22152                           
 22153                           ;stkvar	_c @ sp[(-2)+-2]
 22154  01BE08  0EFC               	movlw	-4
 22155  01BE0A  006F FF8C  F001    	movff	plusw1,btemp
 22156  01BE10  0EFD               	movlw	-3
 22157  01BE12  006F FF8C  F002    	movff	plusw1,btemp+1
 22158  01BE18                     l3750:
 22159                           
 22160                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22161  01BE18  52E5               	movf	postdec1,f,c
 22162  01BE1A  52E5               	movf	postdec1,f,c
 22163  01BE1C  52E5               	movf	postdec1,f,c
 22164  01BE1E  52E5               	movf	postdec1,f,c
 22165  01BE20  0012               	return		;funcret
 22166  01BE22                     __end_of_tolower:
 22167                           	opt callstack 0
 22168                           
 22169 ;; *************** function _isupper *****************
 22170 ;; Defined at:
 22171 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 22172 ;; Parameters:    Size  Location     Type
 22173 ;;  c               2  [STACK] int 
 22174 ;; Auto vars:     Size  Location     Type
 22175 ;;		None
 22176 ;; Return value:  Size  Location     Type
 22177 ;;                  2  [STACK] int 
 22178 ;; Registers used:
 22179 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22180 ;; Tracked objects:
 22181 ;;		On entry : 0/0
 22182 ;;		On exit  : 0/0
 22183 ;;		Unchanged: 0/0
 22184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22189 ;;Total ram usage:        0 bytes
 22190 ;; Hardware stack levels used:    1
 22191 ;; Hardware stack levels required when called:   15
 22192 ;; This function calls:
 22193 ;;		Nothing
 22194 ;; This function is called by:
 22195 ;;		_efgtoa
 22196 ;;		_xtoa
 22197 ;;		_vfpfcnvrt
 22198 ;;		_tolower
 22199 ;; This function uses a reentrant model
 22200 ;;
 22201                           
 22202                           	psect	text79
 22203  01CD6C                     __ptext79:
 22204                           	opt callstack 0
 22205  01CD6C                     _isupper:
 22206                           	opt callstack 0
 22207                           
 22208                           ;stkvar	_c @ sp[(0)+-2]
 22209                           
 22210                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22211                           ;incstack = 0
 22212 ;; hardware stack exceeded
 22213  01CD6C  0EFE               	movlw	-2
 22214  01CD6E  50E3               	movf	plusw1,w,c
 22215  01CD70  0FBF               	addlw	191
 22216  01CD72  6E0B               	movwf	(btemp+10)^0,c
 22217  01CD74  0EFF               	movlw	-1
 22218  01CD76  006F FF8C  F00C    	movff	plusw1,btemp+11
 22219  01CD7C  0EFF               	movlw	255
 22220  01CD7E  220C               	addwfc	(btemp+11)^0,f,c
 22221  01CD80  500C               	movf	(btemp+11)^0,w,c
 22222  01CD82  E106               	bnz	u6020
 22223  01CD84  0E1A               	movlw	26
 22224  01CD86  5C0B               	subwf	(btemp+10)^0,w,c
 22225  01CD88  B0D8               	btfsc	status,0,c
 22226  01CD8A  D002               	goto	u6020
 22227  01CD8C  0E01               	movlw	1
 22228  01CD8E  D001               	goto	u6030
 22229  01CD90                     u6020:
 22230  01CD90  0E00               	movlw	0
 22231  01CD92                     u6030:
 22232  01CD92  6E01               	movwf	btemp^0,c
 22233  01CD94  6A02               	clrf	(btemp+1)^0,c
 22234                           
 22235                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22236  01CD96  52E5               	movf	postdec1,f,c
 22237  01CD98  52E5               	movf	postdec1,f,c
 22238  01CD9A  0012               	return		;funcret
 22239  01CD9C                     __end_of_isupper:
 22240                           	opt callstack 0
 22241                           
 22242 ;; *************** function _strcpy *****************
 22243 ;; Defined at:
 22244 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 22245 ;; Parameters:    Size  Location     Type
 22246 ;;  dest            2  [STACK] PTR unsigned char 
 22247 ;;		 -> dbuf(80), 
 22248 ;;  src             2  [STACK] PTR const unsigned char 
 22249 ;;		 -> STR_89(4), STR_88(4), STR_85(4), STR_84(4), 
 22250 ;;		 -> dbuf(80), 
 22251 ;; Auto vars:     Size  Location     Type
 22252 ;;  d               2  [STACK] PTR unsigned char 
 22253 ;;		 -> dbuf(80), 
 22254 ;;  s               2  [STACK] PTR const unsigned char 
 22255 ;;		 -> STR_89(4), STR_88(4), STR_85(4), STR_84(4), 
 22256 ;;		 -> dbuf(80), 
 22257 ;; Return value:  Size  Location     Type
 22258 ;;                  2  [STACK] PTR unsigned char 
 22259 ;; Registers used:
 22260 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 22261 ;; Tracked objects:
 22262 ;;		On entry : 0/0
 22263 ;;		On exit  : 0/0
 22264 ;;		Unchanged: 0/0
 22265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22270 ;;Total ram usage:        0 bytes
 22271 ;; Hardware stack levels used:    1
 22272 ;; Hardware stack levels required when called:   15
 22273 ;; This function calls:
 22274 ;;		Nothing
 22275 ;; This function is called by:
 22276 ;;		_efgtoa
 22277 ;; This function uses a reentrant model
 22278 ;;
 22279                           
 22280                           	psect	text80
 22281  01AFBC                     __ptext80:
 22282                           	opt callstack 0
 22283  01AFBC                     _strcpy:
 22284                           	opt callstack 0
 22285                           
 22286                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22287  01AFBC  52E6               	movf	postinc1,f,c
 22288  01AFBE  52E6               	movf	postinc1,f,c
 22289  01AFC0  52E6               	movf	postinc1,f,c
 22290  01AFC2  52E6               	movf	postinc1,f,c
 22291                           
 22292                           ;stkvar	_src @ sp[(-4)+-4]
 22293                           
 22294                           ;incstack = 0
 22295 ;; hardware stack exceeded
 22296  01AFC4  0EF8               	movlw	-8
 22297  01AFC6  006F FF8C  F00B    	movff	plusw1,btemp+10
 22298  01AFCC  0EF9               	movlw	-7
 22299  01AFCE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22300                           
 22301                           ;stkvar	_s @ sp[(-4)+2]
 22302  01AFD4  0EFF               	movlw	-1
 22303  01AFD6  0060  F033  FFE3   	movff	btemp+11,plusw1
 22304  01AFDC  0EFE               	movlw	-2
 22305  01AFDE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22306                           
 22307                           ;stkvar	_dest @ sp[(-4)+-2]
 22308  01AFE4  0EFA               	movlw	-6
 22309  01AFE6  006F FF8C  F00B    	movff	plusw1,btemp+10
 22310  01AFEC  0EFB               	movlw	-5
 22311  01AFEE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22312                           
 22313                           ;stkvar	_d @ sp[(-4)+0]
 22314  01AFF4  0EFD               	movlw	-3
 22315  01AFF6  0060  F033  FFE3   	movff	btemp+11,plusw1
 22316  01AFFC  0EFC               	movlw	-4
 22317  01AFFE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22318  01B004                     l13242:
 22319                           
 22320                           ;stkvar	_s @ sp[(-4)+2]
 22321  01B004  50E1               	movf	fsr1l,w,c
 22322  01B006  0FFE               	addlw	-2
 22323  01B008  6ED9               	movwf	fsr2l,c
 22324  01B00A  50E2               	movf	fsr1h,w,c
 22325  01B00C  6EDA               	movwf	fsr2h,c
 22326  01B00E  0EFF               	movlw	255
 22327  01B010  22DA               	addwfc	fsr2h,f,c
 22328  01B012  006F FF7C  F00B    	movff	indf2,btemp+10
 22329  01B018  0E01               	movlw	1
 22330  01B01A  26DE               	addwf	postinc2,f,c
 22331  01B01C  006F FF7C  F00C    	movff	indf2,btemp+11
 22332  01B022  0E00               	movlw	0
 22333  01B024  22DD               	addwfc	postdec2,f,c
 22334  01B026  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 22335  01B02C  0060  F033  FFF7   	movff	btemp+11,tblptrh
 22336  01B032  0E00               	movlw	low (__mediumconst shr (0+16))
 22337  01B034  6EF8               	movwf	tblptru,c
 22338                           
 22339                           ;stkvar	_d @ sp[(-4)+0]
 22340  01B036  50E1               	movf	fsr1l,w,c
 22341  01B038  0FFC               	addlw	-4
 22342  01B03A  6ED9               	movwf	fsr2l,c
 22343  01B03C  50E2               	movf	fsr1h,w,c
 22344  01B03E  6EDA               	movwf	fsr2h,c
 22345  01B040  0EFF               	movlw	255
 22346  01B042  22DA               	addwfc	fsr2h,f,c
 22347  01B044  006F FF7C  F00B    	movff	indf2,btemp+10
 22348  01B04A  0E01               	movlw	1
 22349  01B04C  26DE               	addwf	postinc2,f,c
 22350  01B04E  006F FF7C  F00C    	movff	indf2,btemp+11
 22351  01B054  0E00               	movlw	0
 22352  01B056  22DD               	addwfc	postdec2,f,c
 22353  01B058  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 22354  01B05E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 22355  01B064  0E1F               	movlw	(high __ramtop+-1)
 22356  01B066  64F7               	cpfsgt	tblptrh,c
 22357  01B068  D003               	bra	u12047
 22358  01B06A  0008               	tblrd		*
 22359  01B06C  50F5               	movf	tablat,w,c
 22360  01B06E  D007               	bra	u12040
 22361  01B070                     u12047:
 22362  01B070  006F FFDB FFE9     	movff	tblptrl,fsr0l
 22363  01B076  006F FFDF FFEA     	movff	tblptrh,fsr0h
 22364  01B07C  50EF               	movf	indf0,w,c
 22365  01B07E                     u12040:
 22366  01B07E  6EDF               	movwf	indf2,c
 22367  01B080  50DF               	movf	indf2,w,c
 22368  01B082  A4D8               	btfss	status,2,c
 22369  01B084  D7BF               	goto	l13242
 22370                           
 22371                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 22372  01B086  0EF8               	movlw	248
 22373  01B088  26E1               	addwf	fsr1l,f,c
 22374  01B08A  0EFF               	movlw	255
 22375  01B08C  22E2               	addwfc	fsr1h,f,c
 22376  01B08E  0012               	return		;funcret
 22377  01B090                     __end_of_strcpy:
 22378                           	opt callstack 0
 22379                           
 22380 ;; *************** function _floorf *****************
 22381 ;; Defined at:
 22382 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 22383 ;; Parameters:    Size  Location     Type
 22384 ;;  x               4  [STACK] float 
 22385 ;; Auto vars:     Size  Location     Type
 22386 ;;  u               4  [STACK] struct .
 22387 ;;  m               4  [STACK] unsigned long 
 22388 ;;  e               2  [STACK] int 
 22389 ;; Return value:  Size  Location     Type
 22390 ;;                  4  [STACK] float 
 22391 ;; Registers used:
 22392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 22393 ;; Tracked objects:
 22394 ;;		On entry : 0/0
 22395 ;;		On exit  : 0/0
 22396 ;;		Unchanged: 0/0
 22397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22402 ;;Total ram usage:        0 bytes
 22403 ;; Hardware stack levels used:    1
 22404 ;; Hardware stack levels required when called:   15
 22405 ;; This function calls:
 22406 ;;		Nothing
 22407 ;; This function is called by:
 22408 ;;		_efgtoa
 22409 ;; This function uses a reentrant model
 22410 ;;
 22411                           
 22412                           	psect	text81
 22413  016AFE                     __ptext81:
 22414                           	opt callstack 0
 22415  016AFE                     _floorf:
 22416                           	opt callstack 0
 22417                           
 22418                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 22419  016AFE  0E0A               	movlw	10
 22420  016B00  26E1               	addwf	fsr1l,f,c
 22421  016B02  0E00               	movlw	0
 22422  016B04  22E2               	addwfc	fsr1h,f,c
 22423                           
 22424                           ;incstack = 0
 22425 ;; hardware stack exceeded
 22426  016B06  0060  F1E8  F009   	movff	floorf@F524,btemp+8
 22427  016B0C  0060  F1EC  F00A   	movff	floorf@F524+1,btemp+9
 22428  016B12  0060  F1F0  F00B   	movff	floorf@F524+2,btemp+10
 22429  016B18  0060  F1F4  F00C   	movff	floorf@F524+3,btemp+11
 22430                           
 22431                           ;stkvar	_u @ sp[(-10)+0]
 22432  016B1E  0EF6               	movlw	-10
 22433  016B20  0060  F027  FFE3   	movff	btemp+8,plusw1
 22434  016B26  0EF7               	movlw	-9
 22435  016B28  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22436  016B2E  0EF8               	movlw	-8
 22437  016B30  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22438  016B36  0EF9               	movlw	-7
 22439  016B38  0060  F033  FFE3   	movff	btemp+11,plusw1
 22440                           
 22441                           ;stkvar	_x @ sp[(-10)+-4]
 22442  016B3E  0EF2               	movlw	-14
 22443  016B40  006F FF8C  F009    	movff	plusw1,btemp+8
 22444  016B46  0EF3               	movlw	-13
 22445  016B48  006F FF8C  F00A    	movff	plusw1,btemp+9
 22446  016B4E  0EF4               	movlw	-12
 22447  016B50  006F FF8C  F00B    	movff	plusw1,btemp+10
 22448  016B56  0EF5               	movlw	-11
 22449  016B58  006F FF8C  F00C    	movff	plusw1,btemp+11
 22450                           
 22451                           ;stkvar	_u @ sp[(-10)+0]
 22452  016B5E  0EF6               	movlw	-10
 22453  016B60  0060  F027  FFE3   	movff	btemp+8,plusw1
 22454  016B66  0EF7               	movlw	-9
 22455  016B68  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22456  016B6E  0EF8               	movlw	-8
 22457  016B70  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22458  016B76  0EF9               	movlw	-7
 22459  016B78  0060  F033  FFE3   	movff	btemp+11,plusw1
 22460  016B7E  0E81               	movlw	129
 22461  016B80  6E0B               	movwf	(btemp+10)^0,c
 22462  016B82  0EFF               	movlw	255
 22463  016B84  6E0C               	movwf	(btemp+11)^0,c
 22464                           
 22465                           ;stkvar	_u @ sp[(-10)+0]
 22466  016B86  0EF6               	movlw	-10
 22467  016B88  006F FF8C  F005    	movff	plusw1,btemp+4
 22468  016B8E  0EF7               	movlw	-9
 22469  016B90  006F FF8C  F006    	movff	plusw1,btemp+5
 22470  016B96  0EF8               	movlw	-8
 22471  016B98  006F FF8C  F007    	movff	plusw1,btemp+6
 22472  016B9E  0EF9               	movlw	-7
 22473  016BA0  006F FF8C  F008    	movff	plusw1,btemp+7
 22474  016BA6  0E18               	movlw	24
 22475  016BA8  D005               	goto	u6700
 22476  016BAA                     u6705:
 22477  016BAA  90D8               	bcf	status,0,c
 22478  016BAC  3208               	rrcf	(btemp+7)^0,f,c
 22479  016BAE  3207               	rrcf	(btemp+6)^0,f,c
 22480  016BB0  3206               	rrcf	(btemp+5)^0,f,c
 22481  016BB2  3205               	rrcf	(btemp+4)^0,f,c
 22482  016BB4                     u6700:
 22483  016BB4  2EE8               	decfsz	wreg,f,c
 22484  016BB6  D7F9               	goto	u6705
 22485  016BB8  0060  F014  F009   	movff	btemp+4,btemp+8
 22486  016BBE  0060  F018  F00A   	movff	btemp+5,btemp+9
 22487  016BC4  0EFF               	movlw	255
 22488  016BC6  1609               	andwf	(btemp+8)^0,f,c
 22489  016BC8  0E00               	movlw	0
 22490  016BCA  160A               	andwf	(btemp+9)^0,f,c
 22491  016BCC  500B               	movf	(btemp+10)^0,w,c
 22492  016BCE  2609               	addwf	(btemp+8)^0,f,c
 22493  016BD0  500C               	movf	(btemp+11)^0,w,c
 22494  016BD2  220A               	addwfc	(btemp+9)^0,f,c
 22495                           
 22496                           ;stkvar	_e @ sp[(-10)+8]
 22497  016BD4  0EFE               	movlw	-2
 22498  016BD6  0060  F027  FFE3   	movff	btemp+8,plusw1
 22499  016BDC  0EFF               	movlw	-1
 22500  016BDE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22501                           
 22502                           ;stkvar	_e @ sp[(-10)+8]
 22503  016BE4  0EFF               	movlw	-1
 22504  016BE6  BEE3               	btfsc	plusw1,7,c
 22505  016BE8  D019               	goto	l8868
 22506  016BEA  0EFF               	movlw	-1
 22507  016BEC  50E3               	movf	plusw1,w,c
 22508  016BEE  E108               	bnz	u6710
 22509  016BF0  0EFE               	movlw	-2
 22510  016BF2  006F FF8C  F001    	movff	plusw1,btemp
 22511  016BF8  0E17               	movlw	23
 22512  016BFA  5E01               	subwf	btemp^0,f,c
 22513  016BFC  A0D8               	btfss	status,0,c
 22514  016BFE  D00E               	goto	l8868
 22515  016C00                     u6710:
 22516                           
 22517                           ;stkvar	_x @ sp[(-10)+-4]
 22518  016C00  0EF2               	movlw	-14
 22519  016C02  006F FF8C  F001    	movff	plusw1,btemp
 22520  016C08  0EF3               	movlw	-13
 22521  016C0A  006F FF8C  F002    	movff	plusw1,btemp+1
 22522  016C10  0EF4               	movlw	-12
 22523  016C12  006F FF8C  F003    	movff	plusw1,btemp+2
 22524  016C18  0EF5               	movlw	-11
 22525  016C1A  D11F               	goto	L25
 22526  016C1C                     l8868:
 22527                           
 22528                           ;stkvar	_e @ sp[(-10)+8]
 22529  016C1C  0EFF               	movlw	-1
 22530  016C1E  BEE3               	btfsc	plusw1,7,c
 22531  016C20  D0B4               	goto	l8884
 22532                           
 22533                           ;stkvar	_e @ sp[(-10)+8]
 22534  016C22  0EFE               	movlw	-2
 22535  016C24  006F FF8C  F00C    	movff	plusw1,btemp+11
 22536  016C2A  0EFF               	movlw	255
 22537  016C2C  6E05               	movwf	(btemp+4)^0,c
 22538  016C2E  0EFF               	movlw	255
 22539  016C30  6E06               	movwf	(btemp+5)^0,c
 22540  016C32  0E7F               	movlw	127
 22541  016C34  6E07               	movwf	(btemp+6)^0,c
 22542  016C36  0E00               	movlw	0
 22543  016C38  6E08               	movwf	(btemp+7)^0,c
 22544  016C3A                     u6735:
 22545  016C3A  660C               	tstfsz	(btemp+11)^0,c
 22546  016C3C  D001               	goto	u6736
 22547  016C3E  D007               	goto	u6737
 22548  016C40                     u6736:
 22549  016C40  3408               	rlcf	(btemp+7)^0,w,c
 22550  016C42  3208               	rrcf	(btemp+7)^0,f,c
 22551  016C44  3207               	rrcf	(btemp+6)^0,f,c
 22552  016C46  3206               	rrcf	(btemp+5)^0,f,c
 22553  016C48  3205               	rrcf	(btemp+4)^0,f,c
 22554  016C4A  2E0C               	decfsz	(btemp+11)^0,f,c
 22555  016C4C  D7F6               	goto	u6735
 22556  016C4E                     u6737:
 22557                           
 22558                           ;stkvar	_m @ sp[(-10)+4]
 22559  016C4E  0EFA               	movlw	-6
 22560  016C50  0060  F017  FFE3   	movff	btemp+4,plusw1
 22561  016C56  0EFB               	movlw	-5
 22562  016C58  0060  F01B  FFE3   	movff	btemp+5,plusw1
 22563  016C5E  0EFC               	movlw	-4
 22564  016C60  0060  F01F  FFE3   	movff	btemp+6,plusw1
 22565  016C66  0EFD               	movlw	-3
 22566  016C68  0060  F023  FFE3   	movff	btemp+7,plusw1
 22567                           
 22568                           ;stkvar	_m @ sp[(-10)+4]
 22569                           ;stkvar	_u @ sp[(-10)+0]
 22570  016C6E  0EF6               	movlw	-10
 22571  016C70  006F FF8C  F009    	movff	plusw1,btemp+8
 22572  016C76  0EF7               	movlw	-9
 22573  016C78  006F FF8C  F00A    	movff	plusw1,btemp+9
 22574  016C7E  0EF8               	movlw	-8
 22575  016C80  006F FF8C  F00B    	movff	plusw1,btemp+10
 22576  016C86  0EF9               	movlw	-7
 22577  016C88  006F FF8C  F00C    	movff	plusw1,btemp+11
 22578  016C8E  0EFA               	movlw	-6
 22579  016C90  50E3               	movf	plusw1,w,c
 22580  016C92  1609               	andwf	(btemp+8)^0,f,c
 22581  016C94  0EFB               	movlw	-5
 22582  016C96  50E3               	movf	plusw1,w,c
 22583  016C98  160A               	andwf	(btemp+9)^0,f,c
 22584  016C9A  0EFC               	movlw	-4
 22585  016C9C  50E3               	movf	plusw1,w,c
 22586  016C9E  160B               	andwf	(btemp+10)^0,f,c
 22587  016CA0  0EFD               	movlw	-3
 22588  016CA2  50E3               	movf	plusw1,w,c
 22589  016CA4  160C               	andwf	(btemp+11)^0,f,c
 22590  016CA6  5009               	movf	(btemp+8)^0,w,c
 22591  016CA8  100A               	iorwf	(btemp+9)^0,w,c
 22592  016CAA  100B               	iorwf	(btemp+10)^0,w,c
 22593  016CAC  100C               	iorwf	(btemp+11)^0,w,c
 22594  016CAE  B4D8               	btfsc	status,2,c
 22595  016CB0  D7A7               	goto	u6710
 22596                           
 22597                           ;stkvar	_u @ sp[(-10)+0]
 22598  016CB2  0EF6               	movlw	-10
 22599  016CB4  006F FF8C  F009    	movff	plusw1,btemp+8
 22600  016CBA  0EF7               	movlw	-9
 22601  016CBC  006F FF8C  F00A    	movff	plusw1,btemp+9
 22602  016CC2  0EF8               	movlw	-8
 22603  016CC4  006F FF8C  F00B    	movff	plusw1,btemp+10
 22604  016CCA  0EF9               	movlw	-7
 22605  016CCC  006F FF8C  F00C    	movff	plusw1,btemp+11
 22606  016CD2  0E20               	movlw	32
 22607  016CD4  D005               	goto	u6750
 22608  016CD6                     u6755:
 22609  016CD6  90D8               	bcf	status,0,c
 22610  016CD8  320C               	rrcf	(btemp+11)^0,f,c
 22611  016CDA  320B               	rrcf	(btemp+10)^0,f,c
 22612  016CDC  320A               	rrcf	(btemp+9)^0,f,c
 22613  016CDE  3209               	rrcf	(btemp+8)^0,f,c
 22614  016CE0                     u6750:
 22615  016CE0  2EE8               	decfsz	wreg,f,c
 22616  016CE2  D7F9               	goto	u6755
 22617  016CE4  5009               	movf	(btemp+8)^0,w,c
 22618  016CE6  B4D8               	btfsc	status,2,c
 22619  016CE8  D028               	goto	l8882
 22620                           
 22621                           ;stkvar	_m @ sp[(-10)+4]
 22622                           ;stkvar	_u @ sp[(-10)+0]
 22623  016CEA  0EF6               	movlw	-10
 22624  016CEC  50E3               	movf	plusw1,w,c
 22625  016CEE  6E01               	movwf	btemp^0,c
 22626  016CF0  0EFA               	movlw	-6
 22627  016CF2  50E3               	movf	plusw1,w,c
 22628  016CF4  2601               	addwf	btemp^0,f,c
 22629  016CF6  0EF6               	movlw	-10
 22630  016CF8  0060  F007  FFE3   	movff	btemp,plusw1
 22631  016CFE  0EF7               	movlw	-9
 22632  016D00  50E3               	movf	plusw1,w,c
 22633  016D02  6E01               	movwf	btemp^0,c
 22634  016D04  0EFB               	movlw	-5
 22635  016D06  50E3               	movf	plusw1,w,c
 22636  016D08  2201               	addwfc	btemp^0,f,c
 22637  016D0A  0EF7               	movlw	-9
 22638  016D0C  0060  F007  FFE3   	movff	btemp,plusw1
 22639  016D12  0EF8               	movlw	-8
 22640  016D14  50E3               	movf	plusw1,w,c
 22641  016D16  6E01               	movwf	btemp^0,c
 22642  016D18  0EFC               	movlw	-4
 22643  016D1A  50E3               	movf	plusw1,w,c
 22644  016D1C  2201               	addwfc	btemp^0,f,c
 22645  016D1E  0EF8               	movlw	-8
 22646  016D20  0060  F007  FFE3   	movff	btemp,plusw1
 22647  016D26  0EF9               	movlw	-7
 22648  016D28  50E3               	movf	plusw1,w,c
 22649  016D2A  6E01               	movwf	btemp^0,c
 22650  016D2C  0EFD               	movlw	-3
 22651  016D2E  50E3               	movf	plusw1,w,c
 22652  016D30  2201               	addwfc	btemp^0,f,c
 22653  016D32  0EF9               	movlw	-7
 22654  016D34  0060  F007  FFE3   	movff	btemp,plusw1
 22655  016D3A                     l8882:
 22656                           
 22657                           ;stkvar	_m @ sp[(-10)+4]
 22658  016D3A  0EFA               	movlw	-6
 22659  016D3C  006F FF8C  F009    	movff	plusw1,btemp+8
 22660  016D42  0EFB               	movlw	-5
 22661  016D44  006F FF8C  F00A    	movff	plusw1,btemp+9
 22662  016D4A  0EFC               	movlw	-4
 22663  016D4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 22664  016D52  0EFD               	movlw	-3
 22665  016D54  006F FF8C  F00C    	movff	plusw1,btemp+11
 22666  016D5A  1C09               	comf	(btemp+8)^0,w,c
 22667  016D5C  6E05               	movwf	(btemp+4)^0,c
 22668  016D5E  1C0A               	comf	(btemp+9)^0,w,c
 22669  016D60  6E06               	movwf	(btemp+5)^0,c
 22670  016D62  1C0B               	comf	(btemp+10)^0,w,c
 22671  016D64  6E07               	movwf	(btemp+6)^0,c
 22672  016D66  1C0C               	comf	(btemp+11)^0,w,c
 22673  016D68  6E08               	movwf	(btemp+7)^0,c
 22674                           
 22675                           ;stkvar	_u @ sp[(-10)+0]
 22676  016D6A  50E1               	movf	fsr1l,w,c
 22677  016D6C  0FF6               	addlw	-10
 22678  016D6E  6ED9               	movwf	fsr2l,c
 22679  016D70  50E2               	movf	fsr1h,w,c
 22680  016D72  6EDA               	movwf	fsr2h,c
 22681  016D74  0EFF               	movlw	255
 22682  016D76  22DA               	addwfc	fsr2h,f,c
 22683  016D78  5005               	movf	(btemp+4)^0,w,c
 22684  016D7A  16DE               	andwf	postinc2,f,c
 22685  016D7C  5006               	movf	(btemp+5)^0,w,c
 22686  016D7E  16DE               	andwf	postinc2,f,c
 22687  016D80  5007               	movf	(btemp+6)^0,w,c
 22688  016D82  16DE               	andwf	postinc2,f,c
 22689  016D84  5008               	movf	(btemp+7)^0,w,c
 22690  016D86  16DE               	andwf	postinc2,f,c
 22691  016D88  D05B               	goto	l8892
 22692  016D8A                     l8884:
 22693                           
 22694                           ;stkvar	_u @ sp[(-10)+0]
 22695  016D8A  0EF6               	movlw	-10
 22696  016D8C  006F FF8C  F009    	movff	plusw1,btemp+8
 22697  016D92  0EF7               	movlw	-9
 22698  016D94  006F FF8C  F00A    	movff	plusw1,btemp+9
 22699  016D9A  0EF8               	movlw	-8
 22700  016D9C  006F FF8C  F00B    	movff	plusw1,btemp+10
 22701  016DA2  0EF9               	movlw	-7
 22702  016DA4  006F FF8C  F00C    	movff	plusw1,btemp+11
 22703  016DAA  0E20               	movlw	32
 22704  016DAC  D005               	goto	u6770
 22705  016DAE                     u6775:
 22706  016DAE  90D8               	bcf	status,0,c
 22707  016DB0  320C               	rrcf	(btemp+11)^0,f,c
 22708  016DB2  320B               	rrcf	(btemp+10)^0,f,c
 22709  016DB4  320A               	rrcf	(btemp+9)^0,f,c
 22710  016DB6  3209               	rrcf	(btemp+8)^0,f,c
 22711  016DB8                     u6770:
 22712  016DB8  2EE8               	decfsz	wreg,f,c
 22713  016DBA  D7F9               	goto	u6775
 22714  016DBC  6609               	tstfsz	(btemp+8)^0,c
 22715  016DBE  D009               	goto	l8888
 22716                           
 22717                           ;stkvar	_u @ sp[(-10)+0]
 22718  016DC0  0EF6               	movlw	-10
 22719  016DC2  6AE3               	clrf	plusw1,c
 22720  016DC4  0EF7               	movlw	-9
 22721  016DC6  6AE3               	clrf	plusw1,c
 22722  016DC8  0EF8               	movlw	-8
 22723  016DCA  6AE3               	clrf	plusw1,c
 22724  016DCC  0EF9               	movlw	-7
 22725  016DCE  6AE3               	clrf	plusw1,c
 22726  016DD0  D037               	goto	l8892
 22727  016DD2                     l8888:
 22728                           
 22729                           ;stkvar	_u @ sp[(-10)+0]
 22730  016DD2  0EF6               	movlw	-10
 22731  016DD4  006F FF8C  F009    	movff	plusw1,btemp+8
 22732  016DDA  0EF7               	movlw	-9
 22733  016DDC  006F FF8C  F00A    	movff	plusw1,btemp+9
 22734  016DE2  0EF8               	movlw	-8
 22735  016DE4  006F FF8C  F00B    	movff	plusw1,btemp+10
 22736  016DEA  0EF9               	movlw	-7
 22737  016DEC  006F FF8C  F00C    	movff	plusw1,btemp+11
 22738  016DF2  90D8               	bcf	status,0,c
 22739  016DF4  3409               	rlcf	(btemp+8)^0,w,c
 22740  016DF6  6E05               	movwf	(btemp+4)^0,c
 22741  016DF8  340A               	rlcf	(btemp+9)^0,w,c
 22742  016DFA  6E06               	movwf	(btemp+5)^0,c
 22743  016DFC  340B               	rlcf	(btemp+10)^0,w,c
 22744  016DFE  6E07               	movwf	(btemp+6)^0,c
 22745  016E00  340C               	rlcf	(btemp+11)^0,w,c
 22746  016E02  6E08               	movwf	(btemp+7)^0,c
 22747  016E04  5005               	movf	(btemp+4)^0,w,c
 22748  016E06  1006               	iorwf	(btemp+5)^0,w,c
 22749  016E08  1007               	iorwf	(btemp+6)^0,w,c
 22750  016E0A  1008               	iorwf	(btemp+7)^0,w,c
 22751  016E0C  B4D8               	btfsc	status,2,c
 22752  016E0E  D018               	goto	l8892
 22753  016E10  0E00               	movlw	0
 22754  016E12  6E09               	movwf	(btemp+8)^0,c
 22755  016E14  0E00               	movlw	0
 22756  016E16  6E0A               	movwf	(btemp+9)^0,c
 22757  016E18  0E80               	movlw	128
 22758  016E1A  6E0B               	movwf	(btemp+10)^0,c
 22759  016E1C  0EBF               	movlw	191
 22760  016E1E  6E0C               	movwf	(btemp+11)^0,c
 22761                           
 22762                           ;stkvar	_u @ sp[(-10)+0]
 22763  016E20  0EF6               	movlw	-10
 22764  016E22  0060  F027  FFE3   	movff	btemp+8,plusw1
 22765  016E28  0EF7               	movlw	-9
 22766  016E2A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22767  016E30  0EF8               	movlw	-8
 22768  016E32  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22769  016E38  0EF9               	movlw	-7
 22770  016E3A  0060  F033  FFE3   	movff	btemp+11,plusw1
 22771  016E40                     l8892:
 22772                           
 22773                           ;stkvar	_u @ sp[(-10)+0]
 22774  016E40  0EF6               	movlw	-10
 22775  016E42  006F FF8C  F001    	movff	plusw1,btemp
 22776  016E48  0EF7               	movlw	-9
 22777  016E4A  006F FF8C  F002    	movff	plusw1,btemp+1
 22778  016E50  0EF8               	movlw	-8
 22779  016E52  006F FF8C  F003    	movff	plusw1,btemp+2
 22780  016E58  0EF9               	movlw	-7
 22781  016E5A                     L25:
 22782  016E5A  006F FF8C  F004    	movff	plusw1,btemp+3
 22783                           
 22784                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 22785  016E60  0EF2               	movlw	242
 22786  016E62  26E1               	addwf	fsr1l,f,c
 22787  016E64  0EFF               	movlw	255
 22788  016E66  22E2               	addwfc	fsr1h,f,c
 22789  016E68  0012               	return		;funcret
 22790  016E6A                     __end_of_floorf:
 22791                           	opt callstack 0
 22792                           
 22793 ;; *************** function ___fpclassifyf *****************
 22794 ;; Defined at:
 22795 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 22796 ;; Parameters:    Size  Location     Type
 22797 ;;  x               4  [STACK] float 
 22798 ;; Auto vars:     Size  Location     Type
 22799 ;;  u               4  [STACK] struct .
 22800 ;;  e               2  [STACK] int 
 22801 ;; Return value:  Size  Location     Type
 22802 ;;                  2  [STACK] int 
 22803 ;; Registers used:
 22804 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 22805 ;; Tracked objects:
 22806 ;;		On entry : 0/0
 22807 ;;		On exit  : 0/0
 22808 ;;		Unchanged: 0/0
 22809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22814 ;;Total ram usage:        0 bytes
 22815 ;; Hardware stack levels used:    1
 22816 ;; Hardware stack levels required when called:   15
 22817 ;; This function calls:
 22818 ;;		Nothing
 22819 ;; This function is called by:
 22820 ;;		_efgtoa
 22821 ;; This function uses a reentrant model
 22822 ;;
 22823                           
 22824                           	psect	text82
 22825  0192D8                     __ptext82:
 22826                           	opt callstack 0
 22827  0192D8                     ___fpclassifyf:
 22828                           	opt callstack 0
 22829                           
 22830                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22831  0192D8  0E06               	movlw	6
 22832  0192DA  26E1               	addwf	fsr1l,f,c
 22833  0192DC  0E00               	movlw	0
 22834  0192DE  22E2               	addwfc	fsr1h,f,c
 22835                           
 22836                           ;incstack = 0
 22837 ;; hardware stack exceeded
 22838  0192E0  0060  F208  F009   	movff	___fpclassifyf@F463,btemp+8
 22839  0192E6  0060  F20C  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 22840  0192EC  0060  F210  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 22841  0192F2  0060  F214  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 22842                           
 22843                           ;stkvar	_u @ sp[(-6)+0]
 22844  0192F8  0EFA               	movlw	-6
 22845  0192FA  0060  F027  FFE3   	movff	btemp+8,plusw1
 22846  019300  0EFB               	movlw	-5
 22847  019302  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22848  019308  0EFC               	movlw	-4
 22849  01930A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22850  019310  0EFD               	movlw	-3
 22851  019312  0060  F033  FFE3   	movff	btemp+11,plusw1
 22852                           
 22853                           ;stkvar	_x @ sp[(-6)+-4]
 22854  019318  0EF6               	movlw	-10
 22855  01931A  006F FF8C  F009    	movff	plusw1,btemp+8
 22856  019320  0EF7               	movlw	-9
 22857  019322  006F FF8C  F00A    	movff	plusw1,btemp+9
 22858  019328  0EF8               	movlw	-8
 22859  01932A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22860  019330  0EF9               	movlw	-7
 22861  019332  006F FF8C  F00C    	movff	plusw1,btemp+11
 22862                           
 22863                           ;stkvar	_u @ sp[(-6)+0]
 22864  019338  0EFA               	movlw	-6
 22865  01933A  0060  F027  FFE3   	movff	btemp+8,plusw1
 22866  019340  0EFB               	movlw	-5
 22867  019342  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22868  019348  0EFC               	movlw	-4
 22869  01934A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22870  019350  0EFD               	movlw	-3
 22871  019352  0060  F033  FFE3   	movff	btemp+11,plusw1
 22872                           
 22873                           ;stkvar	_u @ sp[(-6)+0]
 22874  019358  0EFA               	movlw	-6
 22875  01935A  006F FF8C  F009    	movff	plusw1,btemp+8
 22876  019360  0EFB               	movlw	-5
 22877  019362  006F FF8C  F00A    	movff	plusw1,btemp+9
 22878  019368  0EFC               	movlw	-4
 22879  01936A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22880  019370  0EFD               	movlw	-3
 22881  019372  006F FF8C  F00C    	movff	plusw1,btemp+11
 22882  019378  0E18               	movlw	24
 22883  01937A  D005               	goto	u6580
 22884  01937C                     u6585:
 22885  01937C  90D8               	bcf	status,0,c
 22886  01937E  320C               	rrcf	(btemp+11)^0,f,c
 22887  019380  320B               	rrcf	(btemp+10)^0,f,c
 22888  019382  320A               	rrcf	(btemp+9)^0,f,c
 22889  019384  3209               	rrcf	(btemp+8)^0,f,c
 22890  019386                     u6580:
 22891  019386  2EE8               	decfsz	wreg,f,c
 22892  019388  D7F9               	goto	u6585
 22893  01938A  0060  F024  F007   	movff	btemp+8,btemp+6
 22894  019390  0060  F028  F008   	movff	btemp+9,btemp+7
 22895  019396  0EFF               	movlw	255
 22896  019398  1607               	andwf	(btemp+6)^0,f,c
 22897  01939A  0E00               	movlw	0
 22898  01939C  1608               	andwf	(btemp+7)^0,f,c
 22899                           
 22900                           ;stkvar	_e @ sp[(-6)+4]
 22901  01939E  0EFE               	movlw	-2
 22902  0193A0  0060  F01F  FFE3   	movff	btemp+6,plusw1
 22903  0193A6  0EFF               	movlw	-1
 22904  0193A8  0060  F023  FFE3   	movff	btemp+7,plusw1
 22905                           
 22906                           ;stkvar	_e @ sp[(-6)+4]
 22907  0193AE  0EFE               	movlw	-2
 22908  0193B0  006F FF8C  F001    	movff	plusw1,btemp
 22909  0193B6  0EFF               	movlw	-1
 22910  0193B8  50E3               	movf	plusw1,w,c
 22911  0193BA  1001               	iorwf	btemp^0,w,c
 22912  0193BC  A4D8               	btfss	status,2,c
 22913  0193BE  D023               	goto	l8830
 22914                           
 22915                           ;stkvar	_u @ sp[(-6)+0]
 22916  0193C0  0EFA               	movlw	-6
 22917  0193C2  006F FF8C  F009    	movff	plusw1,btemp+8
 22918  0193C8  0EFB               	movlw	-5
 22919  0193CA  006F FF8C  F00A    	movff	plusw1,btemp+9
 22920  0193D0  0EFC               	movlw	-4
 22921  0193D2  006F FF8C  F00B    	movff	plusw1,btemp+10
 22922  0193D8  0EFD               	movlw	-3
 22923  0193DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 22924  0193E0  90D8               	bcf	status,0,c
 22925  0193E2  3409               	rlcf	(btemp+8)^0,w,c
 22926  0193E4  6E05               	movwf	(btemp+4)^0,c
 22927  0193E6  340A               	rlcf	(btemp+9)^0,w,c
 22928  0193E8  6E06               	movwf	(btemp+5)^0,c
 22929  0193EA  340B               	rlcf	(btemp+10)^0,w,c
 22930  0193EC  6E07               	movwf	(btemp+6)^0,c
 22931  0193EE  340C               	rlcf	(btemp+11)^0,w,c
 22932  0193F0  6E08               	movwf	(btemp+7)^0,c
 22933  0193F2  5005               	movf	(btemp+4)^0,w,c
 22934  0193F4  1006               	iorwf	(btemp+5)^0,w,c
 22935  0193F6  1007               	iorwf	(btemp+6)^0,w,c
 22936  0193F8  1008               	iorwf	(btemp+7)^0,w,c
 22937  0193FA  A4D8               	btfss	status,2,c
 22938  0193FC  D002               	goto	l8826
 22939  0193FE  0E02               	movlw	2
 22940  019400  D02E               	goto	L26
 22941  019402                     l8826:
 22942  019402  0E03               	movlw	3
 22943  019404  D02C               	goto	L26
 22944  019406                     l8830:
 22945                           
 22946                           ;stkvar	_e @ sp[(-6)+4]
 22947  019406  0EFE               	movlw	-2
 22948  019408  28E3               	incf	plusw1,w,c
 22949  01940A  E128               	bnz	l8836
 22950  01940C  0EFF               	movlw	-1
 22951  01940E  50E3               	movf	plusw1,w,c
 22952  019410  A4D8               	btfss	status,2,c
 22953  019412  D024               	goto	l8836
 22954                           
 22955                           ;stkvar	_u @ sp[(-6)+0]
 22956  019414  0EFA               	movlw	-6
 22957  019416  006F FF8C  F009    	movff	plusw1,btemp+8
 22958  01941C  0EFB               	movlw	-5
 22959  01941E  006F FF8C  F00A    	movff	plusw1,btemp+9
 22960  019424  0EFC               	movlw	-4
 22961  019426  006F FF8C  F00B    	movff	plusw1,btemp+10
 22962  01942C  0EFD               	movlw	-3
 22963  01942E  006F FF8C  F00C    	movff	plusw1,btemp+11
 22964  019434  0E09               	movlw	9
 22965  019436                     u6625:
 22966  019436  90D8               	bcf	status,0,c
 22967  019438  3609               	rlcf	(btemp+8)^0,f,c
 22968  01943A  360A               	rlcf	(btemp+9)^0,f,c
 22969  01943C  360B               	rlcf	(btemp+10)^0,f,c
 22970  01943E  360C               	rlcf	(btemp+11)^0,f,c
 22971  019440  2EE8               	decfsz	wreg,f,c
 22972  019442  D7F9               	goto	u6625
 22973  019444  5009               	movf	(btemp+8)^0,w,c
 22974  019446  100A               	iorwf	(btemp+9)^0,w,c
 22975  019448  100B               	iorwf	(btemp+10)^0,w,c
 22976  01944A  100C               	iorwf	(btemp+11)^0,w,c
 22977  01944C  A4D8               	btfss	status,2,c
 22978  01944E  D002               	goto	u6630
 22979  019450  0E01               	movlw	1
 22980  019452  D001               	goto	u6640
 22981  019454                     u6630:
 22982  019454  0E00               	movlw	0
 22983  019456                     u6640:
 22984  019456  6E01               	movwf	btemp^0,c
 22985  019458  6A02               	clrf	(btemp+1)^0,c
 22986  01945A  D004               	goto	l3360
 22987  01945C                     l8836:
 22988  01945C  0E04               	movlw	4
 22989  01945E                     L26:
 22990  01945E  6E01               	movwf	btemp^0,c
 22991  019460  0E00               	movlw	0
 22992  019462  6E02               	movwf	(btemp+1)^0,c
 22993  019464                     l3360:
 22994                           
 22995                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 22996  019464  0EF6               	movlw	246
 22997  019466  26E1               	addwf	fsr1l,f,c
 22998  019468  0EFF               	movlw	255
 22999  01946A  22E2               	addwfc	fsr1h,f,c
 23000  01946C  0012               	return		;funcret
 23001  01946E                     __end_of___fpclassifyf:
 23002                           	opt callstack 0
 23003                           
 23004 ;; *************** function ___fltol *****************
 23005 ;; Defined at:
 23006 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 23007 ;; Parameters:    Size  Location     Type
 23008 ;;  f1              4  [STACK] int 
 23009 ;; Auto vars:     Size  Location     Type
 23010 ;;  exp1            1  [STACK] unsigned char 
 23011 ;;  sign1           1  [STACK] unsigned char 
 23012 ;; Return value:  Size  Location     Type
 23013 ;;                  4  [STACK] long 
 23014 ;; Registers used:
 23015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 23016 ;; Tracked objects:
 23017 ;;		On entry : 0/0
 23018 ;;		On exit  : 0/0
 23019 ;;		Unchanged: 0/0
 23020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23025 ;;Total ram usage:        0 bytes
 23026 ;; Hardware stack levels used:    1
 23027 ;; Hardware stack levels required when called:   15
 23028 ;; This function calls:
 23029 ;;		Nothing
 23030 ;; This function is called by:
 23031 ;;		_main
 23032 ;;		_convert_dac_raw
 23033 ;;		_calc_bsoc
 23034 ;;		_init_bsoc
 23035 ;;		_efgtoa
 23036 ;; This function uses a reentrant model
 23037 ;;
 23038                           
 23039                           	psect	text83
 23040  0198E6                     __ptext83:
 23041                           	opt callstack 0
 23042  0198E6                     ___fltol:
 23043                           	opt callstack 0
 23044                           
 23045                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23046  0198E6  52E6               	movf	postinc1,f,c
 23047  0198E8  52E6               	movf	postinc1,f,c
 23048                           
 23049                           ;stkvar	_f1 @ sp[(-2)+-4]
 23050                           
 23051                           ;incstack = 0
 23052 ;; hardware stack exceeded
 23053  0198EA  0EFA               	movlw	-6
 23054  0198EC  006F FF8C  F009    	movff	plusw1,btemp+8
 23055  0198F2  0EFB               	movlw	-5
 23056  0198F4  006F FF8C  F00A    	movff	plusw1,btemp+9
 23057  0198FA  0EFC               	movlw	-4
 23058  0198FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 23059  019902  0EFD               	movlw	-3
 23060  019904  006F FF8C  F00C    	movff	plusw1,btemp+11
 23061  01990A  0E18               	movlw	24
 23062  01990C  D005               	goto	u7790
 23063  01990E                     u7795:
 23064  01990E  90D8               	bcf	status,0,c
 23065  019910  320C               	rrcf	(btemp+11)^0,f,c
 23066  019912  320B               	rrcf	(btemp+10)^0,f,c
 23067  019914  320A               	rrcf	(btemp+9)^0,f,c
 23068  019916  3209               	rrcf	(btemp+8)^0,f,c
 23069  019918                     u7790:
 23070  019918  2EE8               	decfsz	wreg,f,c
 23071  01991A  D7F9               	goto	u7795
 23072                           
 23073                           ;stkvar	_exp1 @ sp[(-2)+0]
 23074  01991C  0EFE               	movlw	-2
 23075  01991E  0060  F027  FFE3   	movff	btemp+8,plusw1
 23076  019924  0EFE               	movlw	-2
 23077  019926  50E3               	movf	plusw1,w,c
 23078  019928  A4D8               	btfss	status,2,c
 23079  01992A  D006               	goto	l9456
 23080  01992C                     u7800:
 23081  01992C  0E00               	movlw	0
 23082  01992E  6E01               	movwf	btemp^0,c
 23083  019930  6A02               	clrf	(btemp+1)^0,c
 23084  019932  6A03               	clrf	(btemp+2)^0,c
 23085  019934  6A04               	clrf	(btemp+3)^0,c
 23086  019936  D08B               	goto	l2976
 23087  019938                     l9456:
 23088                           
 23089                           ;stkvar	_f1 @ sp[(-2)+-4]
 23090  019938  0EFA               	movlw	-6
 23091  01993A  006F FF8C  F009    	movff	plusw1,btemp+8
 23092  019940  0EFB               	movlw	-5
 23093  019942  006F FF8C  F00A    	movff	plusw1,btemp+9
 23094  019948  0EFC               	movlw	-4
 23095  01994A  006F FF8C  F00B    	movff	plusw1,btemp+10
 23096  019950  0EFD               	movlw	-3
 23097  019952  006F FF8C  F00C    	movff	plusw1,btemp+11
 23098  019958  0E20               	movlw	32
 23099  01995A  D005               	goto	u7810
 23100  01995C                     u7815:
 23101  01995C  90D8               	bcf	status,0,c
 23102  01995E  320C               	rrcf	(btemp+11)^0,f,c
 23103  019960  320B               	rrcf	(btemp+10)^0,f,c
 23104  019962  320A               	rrcf	(btemp+9)^0,f,c
 23105  019964  3209               	rrcf	(btemp+8)^0,f,c
 23106  019966                     u7810:
 23107  019966  2EE8               	decfsz	wreg,f,c
 23108  019968  D7F9               	goto	u7815
 23109                           
 23110                           ;stkvar	_sign1 @ sp[(-2)+1]
 23111  01996A  0EFF               	movlw	-1
 23112  01996C  0060  F027  FFE3   	movff	btemp+8,plusw1
 23113                           
 23114                           ;stkvar	_f1 @ sp[(-2)+-4]
 23115  019972  0EFC               	movlw	-4
 23116  019974  8EE3               	bsf	plusw1,7,c
 23117                           
 23118                           ;stkvar	_f1 @ sp[(-2)+-4]
 23119  019976  50E1               	movf	fsr1l,w,c
 23120  019978  0FFA               	addlw	-6
 23121  01997A  6ED9               	movwf	fsr2l,c
 23122  01997C  50E2               	movf	fsr1h,w,c
 23123  01997E  6EDA               	movwf	fsr2h,c
 23124  019980  0EFF               	movlw	255
 23125  019982  22DA               	addwfc	fsr2h,f,c
 23126  019984  0EFF               	movlw	255
 23127  019986  16DE               	andwf	postinc2,f,c
 23128  019988  0EFF               	movlw	255
 23129  01998A  16DE               	andwf	postinc2,f,c
 23130  01998C  0EFF               	movlw	255
 23131  01998E  16DE               	andwf	postinc2,f,c
 23132  019990  0E00               	movlw	0
 23133  019992  16DE               	andwf	postinc2,f,c
 23134                           
 23135                           ;stkvar	_exp1 @ sp[(-2)+0]
 23136  019994  0EFE               	movlw	-2
 23137  019996  006F FF8C  F001    	movff	plusw1,btemp
 23138  01999C  0E96               	movlw	150
 23139  01999E  5E01               	subwf	btemp^0,f,c
 23140  0199A0  0EFE               	movlw	-2
 23141  0199A2  0060  F007  FFE3   	movff	btemp,plusw1
 23142                           
 23143                           ;stkvar	_exp1 @ sp[(-2)+0]
 23144  0199A8  0EFE               	movlw	-2
 23145  0199AA  AEE3               	btfss	plusw1,7,c
 23146  0199AC  D014               	goto	l9474
 23147                           
 23148                           ;stkvar	_exp1 @ sp[(-2)+0]
 23149  0199AE  0EFE               	movlw	-2
 23150  0199B0  50E3               	movf	plusw1,w,c
 23151  0199B2  0A80               	xorlw	128
 23152  0199B4  0F97               	addlw	151
 23153  0199B6  A0D8               	btfss	status,0,c
 23154  0199B8  D7B9               	goto	u7800
 23155  0199BA                     l9472:
 23156                           
 23157                           ;stkvar	_f1 @ sp[(-2)+-4]
 23158  0199BA  90D8               	bcf	status,0,c
 23159  0199BC  0EFD               	movlw	-3
 23160  0199BE  32E3               	rrcf	plusw1,f,c
 23161  0199C0  0EFC               	movlw	-4
 23162  0199C2  32E3               	rrcf	plusw1,f,c
 23163  0199C4  0EFB               	movlw	-5
 23164  0199C6  32E3               	rrcf	plusw1,f,c
 23165  0199C8  0EFA               	movlw	-6
 23166  0199CA  32E3               	rrcf	plusw1,f,c
 23167                           
 23168                           ;stkvar	_exp1 @ sp[(-2)+0]
 23169  0199CC  0EFE               	movlw	-2
 23170  0199CE  2AE3               	incf	plusw1,f,c
 23171  0199D0  B4D8               	btfsc	status,2,c
 23172  0199D2  D018               	goto	u7860
 23173  0199D4  D7F2               	goto	l9472
 23174  0199D6                     l9474:
 23175                           
 23176                           ;stkvar	_exp1 @ sp[(-2)+0]
 23177  0199D6  0EFE               	movlw	-2
 23178  0199D8  006F FF8C  F001    	movff	plusw1,btemp
 23179  0199DE  0E1F               	movlw	31
 23180  0199E0  6401               	cpfsgt	btemp^0,c
 23181  0199E2  D00C               	goto	l9482
 23182  0199E4  D7A3               	goto	u7800
 23183  0199E6                     l9480:
 23184                           
 23185                           ;stkvar	_f1 @ sp[(-2)+-4]
 23186  0199E6  90D8               	bcf	status,0,c
 23187  0199E8  0EFA               	movlw	-6
 23188  0199EA  36E3               	rlcf	plusw1,f,c
 23189  0199EC  0EFB               	movlw	-5
 23190  0199EE  36E3               	rlcf	plusw1,f,c
 23191  0199F0  0EFC               	movlw	-4
 23192  0199F2  36E3               	rlcf	plusw1,f,c
 23193  0199F4  0EFD               	movlw	-3
 23194  0199F6  36E3               	rlcf	plusw1,f,c
 23195                           
 23196                           ;stkvar	_exp1 @ sp[(-2)+0]
 23197  0199F8  0EFE               	movlw	-2
 23198  0199FA  06E3               	decf	plusw1,f,c
 23199  0199FC                     l9482:
 23200                           
 23201                           ;stkvar	_exp1 @ sp[(-2)+0]
 23202  0199FC  0EFE               	movlw	-2
 23203  0199FE  50E3               	movf	plusw1,w,c
 23204  019A00  A4D8               	btfss	status,2,c
 23205  019A02  D7F1               	goto	l9480
 23206  019A04                     u7860:
 23207                           
 23208                           ;stkvar	_sign1 @ sp[(-2)+1]
 23209  019A04  0EFF               	movlw	-1
 23210  019A06  50E3               	movf	plusw1,w,c
 23211  019A08  B4D8               	btfsc	status,2,c
 23212  019A0A  D011               	goto	u7880
 23213                           
 23214                           ;stkvar	_f1 @ sp[(-2)+-4]
 23215                           ;stkvar	_f1 @ sp[(-2)+-4]
 23216  019A0C  0EFA               	movlw	-6
 23217  019A0E  6CE3               	negf	plusw1,c
 23218  019A10  0EFB               	movlw	-5
 23219  019A12  1EE3               	comf	plusw1,f,c
 23220  019A14  0EFC               	movlw	-4
 23221  019A16  1EE3               	comf	plusw1,f,c
 23222  019A18  0EFD               	movlw	-3
 23223  019A1A  1EE3               	comf	plusw1,f,c
 23224  019A1C  E308               	bnc	u7880
 23225  019A1E  0EFB               	movlw	-5
 23226  019A20  2AE3               	incf	plusw1,f,c
 23227  019A22  E305               	bnc	u7880
 23228  019A24  0EFC               	movlw	-4
 23229  019A26  2AE3               	incf	plusw1,f,c
 23230  019A28  E302               	bnc	u7880
 23231  019A2A  0EFD               	movlw	-3
 23232  019A2C  2AE3               	incf	plusw1,f,c
 23233  019A2E                     u7880:
 23234                           
 23235                           ;stkvar	_f1 @ sp[(-2)+-4]
 23236  019A2E  0EFA               	movlw	-6
 23237  019A30  006F FF8C  F001    	movff	plusw1,btemp
 23238  019A36  0EFB               	movlw	-5
 23239  019A38  006F FF8C  F002    	movff	plusw1,btemp+1
 23240  019A3E  0EFC               	movlw	-4
 23241  019A40  006F FF8C  F003    	movff	plusw1,btemp+2
 23242  019A46  0EFD               	movlw	-3
 23243  019A48  006F FF8C  F004    	movff	plusw1,btemp+3
 23244  019A4E                     l2976:
 23245                           
 23246                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 23247  019A4E  0EFA               	movlw	250
 23248  019A50  26E1               	addwf	fsr1l,f,c
 23249  019A52  0EFF               	movlw	255
 23250  019A54  22E2               	addwfc	fsr1h,f,c
 23251  019A56  0012               	return		;funcret
 23252  019A58                     __end_of___fltol:
 23253                           	opt callstack 0
 23254                           
 23255 ;; *************** function ___flneg *****************
 23256 ;; Defined at:
 23257 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 23258 ;; Parameters:    Size  Location     Type
 23259 ;;  f1              4  [STACK] long 
 23260 ;; Auto vars:     Size  Location     Type
 23261 ;;		None
 23262 ;; Return value:  Size  Location     Type
 23263 ;;                  4  [STACK] long 
 23264 ;; Registers used:
 23265 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 23266 ;; Tracked objects:
 23267 ;;		On entry : 0/0
 23268 ;;		On exit  : 0/0
 23269 ;;		Unchanged: 0/0
 23270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23275 ;;Total ram usage:        0 bytes
 23276 ;; Hardware stack levels used:    1
 23277 ;; Hardware stack levels required when called:   15
 23278 ;; This function calls:
 23279 ;;		Nothing
 23280 ;; This function is called by:
 23281 ;;		_calc_bsoc
 23282 ;;		_efgtoa
 23283 ;; This function uses a reentrant model
 23284 ;;
 23285                           
 23286                           	psect	text84
 23287  01C706                     __ptext84:
 23288                           	opt callstack 0
 23289  01C706                     ___flneg:
 23290                           	opt callstack 0
 23291                           
 23292                           ;stkvar	_f1 @ sp[(0)+-4]
 23293                           
 23294                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23295                           ;incstack = 0
 23296 ;; hardware stack exceeded
 23297  01C706  0EFC               	movlw	-4
 23298  01C708  50E3               	movf	plusw1,w,c
 23299  01C70A  E10A               	bnz	u7780
 23300  01C70C  0EFD               	movlw	-3
 23301  01C70E  50E3               	movf	plusw1,w,c
 23302  01C710  E107               	bnz	u7780
 23303  01C712  0EFE               	movlw	-2
 23304  01C714  50E3               	movf	plusw1,w,c
 23305  01C716  E104               	bnz	u7780
 23306  01C718  0EFF               	movlw	-1
 23307  01C71A  50E3               	movf	plusw1,w,c
 23308  01C71C  B4D8               	btfsc	status,2,c
 23309  01C71E  D002               	goto	l9446
 23310  01C720                     u7780:
 23311                           
 23312                           ;stkvar	_f1 @ sp[(0)+-4]
 23313  01C720  0EFF               	movlw	-1
 23314  01C722  7EE3               	btg	plusw1,7,c
 23315  01C724                     l9446:
 23316                           
 23317                           ;stkvar	_f1 @ sp[(0)+-4]
 23318  01C724  0EFC               	movlw	-4
 23319  01C726  006F FF8C  F001    	movff	plusw1,btemp
 23320  01C72C  0EFD               	movlw	-3
 23321  01C72E  006F FF8C  F002    	movff	plusw1,btemp+1
 23322  01C734  0EFE               	movlw	-2
 23323  01C736  006F FF8C  F003    	movff	plusw1,btemp+2
 23324  01C73C  0EFF               	movlw	-1
 23325  01C73E  006F FF8C  F004    	movff	plusw1,btemp+3
 23326                           
 23327                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 23328  01C744  52E5               	movf	postdec1,f,c
 23329  01C746  52E5               	movf	postdec1,f,c
 23330  01C748  52E5               	movf	postdec1,f,c
 23331  01C74A  52E5               	movf	postdec1,f,c
 23332  01C74C  0012               	return		;funcret
 23333  01C74E                     __end_of___flneg:
 23334                           	opt callstack 0
 23335                           
 23336 ;; *************** function ___fleq *****************
 23337 ;; Defined at:
 23338 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 23339 ;; Parameters:    Size  Location     Type
 23340 ;;  ff1             4  [STACK] long 
 23341 ;;  ff2             4  [STACK] long 
 23342 ;; Auto vars:     Size  Location     Type
 23343 ;;		None
 23344 ;; Return value:  Size  Location     Type
 23345 ;;		None               void
 23346 ;; Registers used:
 23347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 23348 ;; Tracked objects:
 23349 ;;		On entry : 0/0
 23350 ;;		On exit  : 0/0
 23351 ;;		Unchanged: 0/0
 23352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23357 ;;Total ram usage:        0 bytes
 23358 ;; Hardware stack levels used:    1
 23359 ;; Hardware stack levels required when called:   15
 23360 ;; This function calls:
 23361 ;;		Nothing
 23362 ;; This function is called by:
 23363 ;;		_efgtoa
 23364 ;; This function uses a reentrant model
 23365 ;;
 23366                           
 23367                           	psect	text85
 23368  01B226                     __ptext85:
 23369                           	opt callstack 0
 23370  01B226                     ___fleq:
 23371                           	opt callstack 0
 23372                           
 23373                           ;stkvar	_ff1 @ sp[(0)+-4]
 23374                           
 23375                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23376                           ;incstack = 0
 23377 ;; hardware stack exceeded
 23378  01B226  50E1               	movf	fsr1l,w,c
 23379  01B228  0FFC               	addlw	-4
 23380  01B22A  6ED9               	movwf	fsr2l,c
 23381  01B22C  50E2               	movf	fsr1h,w,c
 23382  01B22E  6EDA               	movwf	fsr2h,c
 23383  01B230  0EFF               	movlw	255
 23384  01B232  22DA               	addwfc	fsr2h,f,c
 23385  01B234  0E00               	movlw	0
 23386  01B236  14DE               	andwf	postinc2,w,c
 23387  01B238  6E09               	movwf	(btemp+8)^0,c
 23388  01B23A  0E00               	movlw	0
 23389  01B23C  14DE               	andwf	postinc2,w,c
 23390  01B23E  6E0A               	movwf	(btemp+9)^0,c
 23391  01B240  0E80               	movlw	128
 23392  01B242  14DE               	andwf	postinc2,w,c
 23393  01B244  6E0B               	movwf	(btemp+10)^0,c
 23394  01B246  0E7F               	movlw	127
 23395  01B248  14DE               	andwf	postinc2,w,c
 23396  01B24A  6E0C               	movwf	(btemp+11)^0,c
 23397  01B24C  5009               	movf	(btemp+8)^0,w,c
 23398  01B24E  100A               	iorwf	(btemp+9)^0,w,c
 23399  01B250  100B               	iorwf	(btemp+10)^0,w,c
 23400  01B252  100C               	iorwf	(btemp+11)^0,w,c
 23401  01B254  A4D8               	btfss	status,2,c
 23402  01B256  D008               	goto	l9404
 23403                           
 23404                           ;stkvar	_ff1 @ sp[(0)+-4]
 23405  01B258  0EFC               	movlw	-4
 23406  01B25A  6AE3               	clrf	plusw1,c
 23407  01B25C  0EFD               	movlw	-3
 23408  01B25E  6AE3               	clrf	plusw1,c
 23409  01B260  0EFE               	movlw	-2
 23410  01B262  6AE3               	clrf	plusw1,c
 23411  01B264  0EFF               	movlw	-1
 23412  01B266  6AE3               	clrf	plusw1,c
 23413  01B268                     l9404:
 23414                           
 23415                           ;stkvar	_ff2 @ sp[(0)+-8]
 23416  01B268  50E1               	movf	fsr1l,w,c
 23417  01B26A  0FF8               	addlw	-8
 23418  01B26C  6ED9               	movwf	fsr2l,c
 23419  01B26E  50E2               	movf	fsr1h,w,c
 23420  01B270  6EDA               	movwf	fsr2h,c
 23421  01B272  0EFF               	movlw	255
 23422  01B274  22DA               	addwfc	fsr2h,f,c
 23423  01B276  0E00               	movlw	0
 23424  01B278  14DE               	andwf	postinc2,w,c
 23425  01B27A  6E09               	movwf	(btemp+8)^0,c
 23426  01B27C  0E00               	movlw	0
 23427  01B27E  14DE               	andwf	postinc2,w,c
 23428  01B280  6E0A               	movwf	(btemp+9)^0,c
 23429  01B282  0E80               	movlw	128
 23430  01B284  14DE               	andwf	postinc2,w,c
 23431  01B286  6E0B               	movwf	(btemp+10)^0,c
 23432  01B288  0E7F               	movlw	127
 23433  01B28A  14DE               	andwf	postinc2,w,c
 23434  01B28C  6E0C               	movwf	(btemp+11)^0,c
 23435  01B28E  5009               	movf	(btemp+8)^0,w,c
 23436  01B290  100A               	iorwf	(btemp+9)^0,w,c
 23437  01B292  100B               	iorwf	(btemp+10)^0,w,c
 23438  01B294  100C               	iorwf	(btemp+11)^0,w,c
 23439  01B296  A4D8               	btfss	status,2,c
 23440  01B298  D008               	goto	l9408
 23441                           
 23442                           ;stkvar	_ff2 @ sp[(0)+-8]
 23443  01B29A  0EF8               	movlw	-8
 23444  01B29C  6AE3               	clrf	plusw1,c
 23445  01B29E  0EF9               	movlw	-7
 23446  01B2A0  6AE3               	clrf	plusw1,c
 23447  01B2A2  0EFA               	movlw	-6
 23448  01B2A4  6AE3               	clrf	plusw1,c
 23449  01B2A6  0EFB               	movlw	-5
 23450  01B2A8  6AE3               	clrf	plusw1,c
 23451  01B2AA                     l9408:
 23452                           
 23453                           ;stkvar	_ff2 @ sp[(0)+-8]
 23454                           ;stkvar	_ff1 @ sp[(0)+-4]
 23455  01B2AA  50E1               	movf	fsr1l,w,c
 23456  01B2AC  0FFC               	addlw	-4
 23457  01B2AE  6ED9               	movwf	fsr2l,c
 23458  01B2B0  50E2               	movf	fsr1h,w,c
 23459  01B2B2  6EDA               	movwf	fsr2h,c
 23460  01B2B4  0EFF               	movlw	255
 23461  01B2B6  22DA               	addwfc	fsr2h,f,c
 23462  01B2B8  0EF8               	movlw	-8
 23463  01B2BA  50E3               	movf	plusw1,w,c
 23464  01B2BC  18DE               	xorwf	postinc2,w,c
 23465  01B2BE  E10D               	bnz	u7720
 23466  01B2C0  0EF9               	movlw	-7
 23467  01B2C2  50E3               	movf	plusw1,w,c
 23468  01B2C4  18DE               	xorwf	postinc2,w,c
 23469  01B2C6  E109               	bnz	u7720
 23470  01B2C8  0EFA               	movlw	-6
 23471  01B2CA  50E3               	movf	plusw1,w,c
 23472  01B2CC  18DE               	xorwf	postinc2,w,c
 23473  01B2CE  E105               	bnz	u7720
 23474  01B2D0  0EFB               	movlw	-5
 23475  01B2D2  50E3               	movf	plusw1,w,c
 23476  01B2D4  18DE               	xorwf	postinc2,w,c
 23477  01B2D6  B4D8               	btfsc	status,2,c
 23478  01B2D8  D002               	goto	l9412
 23479  01B2DA                     u7720:
 23480  01B2DA  9001               	bcf	btemp& (0+255),0,c
 23481  01B2DC  D001               	goto	l2938
 23482  01B2DE                     l9412:
 23483  01B2DE  8001               	bsf	btemp& (0+255),0,c
 23484  01B2E0                     l2938:
 23485                           
 23486                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 23487  01B2E0  0EF8               	movlw	248
 23488  01B2E2  26E1               	addwf	fsr1l,f,c
 23489  01B2E4  0EFF               	movlw	255
 23490  01B2E6  22E2               	addwfc	fsr1h,f,c
 23491  01B2E8  0012               	return		;funcret
 23492  01B2EA                     __end_of___fleq:
 23493                           	opt callstack 0
 23494                           
 23495 ;; *************** function ___awmod *****************
 23496 ;; Defined at:
 23497 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 23498 ;; Parameters:    Size  Location     Type
 23499 ;;  dividend        2  [STACK] int 
 23500 ;;  divisor         2  [STACK] int 
 23501 ;; Auto vars:     Size  Location     Type
 23502 ;;  sign            1  [STACK] unsigned char 
 23503 ;;  counter         1  [STACK] unsigned char 
 23504 ;; Return value:  Size  Location     Type
 23505 ;;                  2  [STACK] int 
 23506 ;; Registers used:
 23507 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 23508 ;; Tracked objects:
 23509 ;;		On entry : 0/0
 23510 ;;		On exit  : 0/0
 23511 ;;		Unchanged: 0/0
 23512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23517 ;;Total ram usage:        0 bytes
 23518 ;; Hardware stack levels used:    1
 23519 ;; Hardware stack levels required when called:   15
 23520 ;; This function calls:
 23521 ;;		Nothing
 23522 ;; This function is called by:
 23523 ;;		_efgtoa
 23524 ;; This function uses a reentrant model
 23525 ;;
 23526                           
 23527                           	psect	text86
 23528  01A7EC                     __ptext86:
 23529                           	opt callstack 0
 23530  01A7EC                     ___awmod:
 23531                           	opt callstack 0
 23532                           
 23533                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23534  01A7EC  52E6               	movf	postinc1,f,c
 23535  01A7EE  52E6               	movf	postinc1,f,c
 23536                           
 23537                           ;stkvar	_sign @ sp[(-2)+0]
 23538                           
 23539                           ;incstack = 0
 23540 ;; hardware stack exceeded
 23541  01A7F0  0EFE               	movlw	-2
 23542  01A7F2  6AE3               	clrf	plusw1,c
 23543                           
 23544                           ;stkvar	_dividend @ sp[(-2)+-2]
 23545  01A7F4  0EFD               	movlw	-3
 23546  01A7F6  AEE3               	btfss	plusw1,7,c
 23547  01A7F8  D009               	goto	l9370
 23548                           
 23549                           ;stkvar	_dividend @ sp[(-2)+-2]
 23550                           ;stkvar	_dividend @ sp[(-2)+-2]
 23551  01A7FA  0EFC               	movlw	-4
 23552  01A7FC  6CE3               	negf	plusw1,c
 23553  01A7FE  0EFD               	movlw	-3
 23554  01A800  1EE3               	comf	plusw1,f,c
 23555  01A802  B0D8               	btfsc	status,0,c
 23556  01A804  2AE3               	incf	plusw1,f,c
 23557                           
 23558                           ;stkvar	_sign @ sp[(-2)+0]
 23559  01A806  0EFE               	movlw	-2
 23560  01A808  6AE3               	clrf	plusw1,c
 23561  01A80A  2AE3               	incf	plusw1,f,c
 23562  01A80C                     l9370:
 23563                           
 23564                           ;stkvar	_divisor @ sp[(-2)+-4]
 23565  01A80C  0EFB               	movlw	-5
 23566  01A80E  AEE3               	btfss	plusw1,7,c
 23567  01A810  D006               	goto	l9374
 23568                           
 23569                           ;stkvar	_divisor @ sp[(-2)+-4]
 23570                           ;stkvar	_divisor @ sp[(-2)+-4]
 23571  01A812  0EFA               	movlw	-6
 23572  01A814  6CE3               	negf	plusw1,c
 23573  01A816  0EFB               	movlw	-5
 23574  01A818  1EE3               	comf	plusw1,f,c
 23575  01A81A  B0D8               	btfsc	status,0,c
 23576  01A81C  2AE3               	incf	plusw1,f,c
 23577  01A81E                     l9374:
 23578                           
 23579                           ;stkvar	_divisor @ sp[(-2)+-4]
 23580  01A81E  0EFA               	movlw	-6
 23581  01A820  006F FF8C  F001    	movff	plusw1,btemp
 23582  01A826  0EFB               	movlw	-5
 23583  01A828  50E3               	movf	plusw1,w,c
 23584  01A82A  1001               	iorwf	btemp^0,w,c
 23585  01A82C  B4D8               	btfsc	status,2,c
 23586  01A82E  D053               	goto	u7680
 23587                           
 23588                           ;stkvar	_counter @ sp[(-2)+1]
 23589  01A830  0EFF               	movlw	-1
 23590  01A832  6AE3               	clrf	plusw1,c
 23591  01A834  D012               	goto	L27
 23592  01A836                     l9378:
 23593                           
 23594                           ;stkvar	_divisor @ sp[(-2)+-4]
 23595  01A836  0EFA               	movlw	-6
 23596  01A838  50E3               	movf	plusw1,w,c
 23597  01A83A  90D8               	bcf	status,0,c
 23598  01A83C  34E8               	rlcf	wreg,w,c
 23599  01A83E  6E01               	movwf	btemp^0,c
 23600  01A840  0EFA               	movlw	-6
 23601  01A842  0060  F007  FFE3   	movff	btemp,plusw1
 23602  01A848  0EFB               	movlw	-5
 23603  01A84A  50E3               	movf	plusw1,w,c
 23604  01A84C  34E8               	rlcf	wreg,w,c
 23605  01A84E  6E01               	movwf	btemp^0,c
 23606  01A850  0EFB               	movlw	-5
 23607  01A852  0060  F007  FFE3   	movff	btemp,plusw1
 23608                           
 23609                           ;stkvar	_counter @ sp[(-2)+1]
 23610  01A858  0EFF               	movlw	-1
 23611  01A85A                     L27:
 23612  01A85A  2AE3               	incf	plusw1,f,c
 23613                           
 23614                           ;stkvar	_divisor @ sp[(-2)+-4]
 23615  01A85C  0EFB               	movlw	-5
 23616  01A85E  AEE3               	btfss	plusw1,7,c
 23617  01A860  D7EA               	goto	l9378
 23618  01A862                     u7660:
 23619                           
 23620                           ;stkvar	_divisor @ sp[(-2)+-4]
 23621  01A862  0EFA               	movlw	-6
 23622  01A864  006F FF8C  F00B    	movff	plusw1,btemp+10
 23623  01A86A  0EFB               	movlw	-5
 23624  01A86C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23625                           
 23626                           ;stkvar	_dividend @ sp[(-2)+-2]
 23627  01A872  0EFC               	movlw	-4
 23628  01A874  006F FF8C  F009    	movff	plusw1,btemp+8
 23629  01A87A  0EFD               	movlw	-3
 23630  01A87C  006F FF8C  F00A    	movff	plusw1,btemp+9
 23631  01A882  500B               	movf	(btemp+10)^0,w,c
 23632  01A884  5C09               	subwf	(btemp+8)^0,w,c
 23633  01A886  500C               	movf	(btemp+11)^0,w,c
 23634  01A888  580A               	subwfb	(btemp+9)^0,w,c
 23635  01A88A  A0D8               	btfss	status,0,c
 23636  01A88C  D014               	goto	l9388
 23637                           
 23638                           ;stkvar	_divisor @ sp[(-2)+-4]
 23639                           ;stkvar	_dividend @ sp[(-2)+-2]
 23640  01A88E  0EFC               	movlw	-4
 23641  01A890  50E3               	movf	plusw1,w,c
 23642  01A892  6E01               	movwf	btemp^0,c
 23643  01A894  0EFA               	movlw	-6
 23644  01A896  50E3               	movf	plusw1,w,c
 23645  01A898  5E01               	subwf	btemp^0,f,c
 23646  01A89A  0EFC               	movlw	-4
 23647  01A89C  0060  F007  FFE3   	movff	btemp,plusw1
 23648  01A8A2  0EFD               	movlw	-3
 23649  01A8A4  50E3               	movf	plusw1,w,c
 23650  01A8A6  6E01               	movwf	btemp^0,c
 23651  01A8A8  0EFB               	movlw	-5
 23652  01A8AA  50E3               	movf	plusw1,w,c
 23653  01A8AC  5A01               	subwfb	btemp^0,f,c
 23654  01A8AE  0EFD               	movlw	-3
 23655  01A8B0  0060  F007  FFE3   	movff	btemp,plusw1
 23656  01A8B6                     l9388:
 23657                           
 23658                           ;stkvar	_divisor @ sp[(-2)+-4]
 23659  01A8B6  90D8               	bcf	status,0,c
 23660  01A8B8  0EFB               	movlw	-5
 23661  01A8BA  32E3               	rrcf	plusw1,f,c
 23662  01A8BC  0EFA               	movlw	-6
 23663  01A8BE  32E3               	rrcf	plusw1,f,c
 23664                           
 23665                           ;stkvar	_counter @ sp[(-2)+1]
 23666  01A8C0  0EFF               	movlw	-1
 23667  01A8C2  50E3               	movf	plusw1,w,c
 23668  01A8C4  6E01               	movwf	btemp^0,c
 23669  01A8C6  0E01               	movlw	1
 23670  01A8C8  5E01               	subwf	btemp^0,f,c
 23671  01A8CA  0EFF               	movlw	-1
 23672  01A8CC  0060  F007  FFE3   	movff	btemp,plusw1
 23673  01A8D2  A4D8               	btfss	status,2,c
 23674  01A8D4  D7C6               	goto	u7660
 23675  01A8D6                     u7680:
 23676                           
 23677                           ;stkvar	_sign @ sp[(-2)+0]
 23678  01A8D6  0EFE               	movlw	-2
 23679  01A8D8  50E3               	movf	plusw1,w,c
 23680  01A8DA  B4D8               	btfsc	status,2,c
 23681  01A8DC  D006               	goto	l9396
 23682                           
 23683                           ;stkvar	_dividend @ sp[(-2)+-2]
 23684                           ;stkvar	_dividend @ sp[(-2)+-2]
 23685  01A8DE  0EFC               	movlw	-4
 23686  01A8E0  6CE3               	negf	plusw1,c
 23687  01A8E2  0EFD               	movlw	-3
 23688  01A8E4  1EE3               	comf	plusw1,f,c
 23689  01A8E6  B0D8               	btfsc	status,0,c
 23690  01A8E8  2AE3               	incf	plusw1,f,c
 23691  01A8EA                     l9396:
 23692                           
 23693                           ;stkvar	_dividend @ sp[(-2)+-2]
 23694  01A8EA  0EFC               	movlw	-4
 23695  01A8EC  006F FF8C  F001    	movff	plusw1,btemp
 23696  01A8F2  0EFD               	movlw	-3
 23697  01A8F4  006F FF8C  F002    	movff	plusw1,btemp+1
 23698                           
 23699                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 23700  01A8FA  0EFA               	movlw	250
 23701  01A8FC  26E1               	addwf	fsr1l,f,c
 23702  01A8FE  0EFF               	movlw	255
 23703  01A900  22E2               	addwfc	fsr1h,f,c
 23704  01A902  0012               	return		;funcret
 23705  01A904                     __end_of___awmod:
 23706                           	opt callstack 0
 23707                           
 23708 ;; *************** function ___awdiv *****************
 23709 ;; Defined at:
 23710 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 23711 ;; Parameters:    Size  Location     Type
 23712 ;;  dividend        2  [STACK] int 
 23713 ;;  divisor         2  [STACK] int 
 23714 ;; Auto vars:     Size  Location     Type
 23715 ;;  quotient        2  [STACK] int 
 23716 ;;  sign            1  [STACK] unsigned char 
 23717 ;;  counter         1  [STACK] unsigned char 
 23718 ;; Return value:  Size  Location     Type
 23719 ;;                  2  [STACK] int 
 23720 ;; Registers used:
 23721 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 23722 ;; Tracked objects:
 23723 ;;		On entry : 0/0
 23724 ;;		On exit  : 0/0
 23725 ;;		Unchanged: 0/0
 23726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23731 ;;Total ram usage:        0 bytes
 23732 ;; Hardware stack levels used:    1
 23733 ;; Hardware stack levels required when called:   15
 23734 ;; This function calls:
 23735 ;;		Nothing
 23736 ;; This function is called by:
 23737 ;;		_efgtoa
 23738 ;; This function uses a reentrant model
 23739 ;;
 23740                           
 23741                           	psect	text87
 23742  019E76                     __ptext87:
 23743                           	opt callstack 0
 23744  019E76                     ___awdiv:
 23745                           	opt callstack 0
 23746                           
 23747                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23748  019E76  52E6               	movf	postinc1,f,c
 23749  019E78  52E6               	movf	postinc1,f,c
 23750  019E7A  52E6               	movf	postinc1,f,c
 23751  019E7C  52E6               	movf	postinc1,f,c
 23752                           
 23753                           ;stkvar	_sign @ sp[(-4)+2]
 23754                           
 23755                           ;incstack = 0
 23756 ;; hardware stack exceeded
 23757  019E7E  0EFE               	movlw	-2
 23758  019E80  6AE3               	clrf	plusw1,c
 23759                           
 23760                           ;stkvar	_divisor @ sp[(-4)+-4]
 23761  019E82  0EF9               	movlw	-7
 23762  019E84  AEE3               	btfss	plusw1,7,c
 23763  019E86  D009               	goto	l9324
 23764                           
 23765                           ;stkvar	_divisor @ sp[(-4)+-4]
 23766                           ;stkvar	_divisor @ sp[(-4)+-4]
 23767  019E88  0EF8               	movlw	-8
 23768  019E8A  6CE3               	negf	plusw1,c
 23769  019E8C  0EF9               	movlw	-7
 23770  019E8E  1EE3               	comf	plusw1,f,c
 23771  019E90  B0D8               	btfsc	status,0,c
 23772  019E92  2AE3               	incf	plusw1,f,c
 23773                           
 23774                           ;stkvar	_sign @ sp[(-4)+2]
 23775  019E94  0EFE               	movlw	-2
 23776  019E96  6AE3               	clrf	plusw1,c
 23777  019E98  2AE3               	incf	plusw1,f,c
 23778  019E9A                     l9324:
 23779                           
 23780                           ;stkvar	_dividend @ sp[(-4)+-2]
 23781  019E9A  0EFB               	movlw	-5
 23782  019E9C  AEE3               	btfss	plusw1,7,c
 23783  019E9E  D008               	goto	l9330
 23784                           
 23785                           ;stkvar	_dividend @ sp[(-4)+-2]
 23786                           ;stkvar	_dividend @ sp[(-4)+-2]
 23787  019EA0  0EFA               	movlw	-6
 23788  019EA2  6CE3               	negf	plusw1,c
 23789  019EA4  0EFB               	movlw	-5
 23790  019EA6  1EE3               	comf	plusw1,f,c
 23791  019EA8  B0D8               	btfsc	status,0,c
 23792  019EAA  2AE3               	incf	plusw1,f,c
 23793                           
 23794                           ;stkvar	_sign @ sp[(-4)+2]
 23795  019EAC  0EFE               	movlw	-2
 23796  019EAE  70E3               	btg	plusw1,0,c
 23797  019EB0                     l9330:
 23798                           
 23799                           ;stkvar	_quotient @ sp[(-4)+0]
 23800  019EB0  0EFC               	movlw	-4
 23801  019EB2  6AE3               	clrf	plusw1,c
 23802  019EB4  0EFD               	movlw	-3
 23803  019EB6  6AE3               	clrf	plusw1,c
 23804                           
 23805                           ;stkvar	_divisor @ sp[(-4)+-4]
 23806  019EB8  0EF8               	movlw	-8
 23807  019EBA  006F FF8C  F001    	movff	plusw1,btemp
 23808  019EC0  0EF9               	movlw	-7
 23809  019EC2  50E3               	movf	plusw1,w,c
 23810  019EC4  1001               	iorwf	btemp^0,w,c
 23811  019EC6  B4D8               	btfsc	status,2,c
 23812  019EC8  D066               	goto	u7610
 23813                           
 23814                           ;stkvar	_counter @ sp[(-4)+3]
 23815  019ECA  0EFF               	movlw	-1
 23816  019ECC  6AE3               	clrf	plusw1,c
 23817  019ECE  D012               	goto	L28
 23818  019ED0                     l9336:
 23819                           
 23820                           ;stkvar	_divisor @ sp[(-4)+-4]
 23821  019ED0  0EF8               	movlw	-8
 23822  019ED2  50E3               	movf	plusw1,w,c
 23823  019ED4  90D8               	bcf	status,0,c
 23824  019ED6  34E8               	rlcf	wreg,w,c
 23825  019ED8  6E01               	movwf	btemp^0,c
 23826  019EDA  0EF8               	movlw	-8
 23827  019EDC  0060  F007  FFE3   	movff	btemp,plusw1
 23828  019EE2  0EF9               	movlw	-7
 23829  019EE4  50E3               	movf	plusw1,w,c
 23830  019EE6  34E8               	rlcf	wreg,w,c
 23831  019EE8  6E01               	movwf	btemp^0,c
 23832  019EEA  0EF9               	movlw	-7
 23833  019EEC  0060  F007  FFE3   	movff	btemp,plusw1
 23834                           
 23835                           ;stkvar	_counter @ sp[(-4)+3]
 23836  019EF2  0EFF               	movlw	-1
 23837  019EF4                     L28:
 23838  019EF4  2AE3               	incf	plusw1,f,c
 23839                           
 23840                           ;stkvar	_divisor @ sp[(-4)+-4]
 23841  019EF6  0EF9               	movlw	-7
 23842  019EF8  AEE3               	btfss	plusw1,7,c
 23843  019EFA  D7EA               	goto	l9336
 23844  019EFC                     u7590:
 23845                           
 23846                           ;stkvar	_quotient @ sp[(-4)+0]
 23847  019EFC  0EFC               	movlw	-4
 23848  019EFE  50E3               	movf	plusw1,w,c
 23849  019F00  90D8               	bcf	status,0,c
 23850  019F02  34E8               	rlcf	wreg,w,c
 23851  019F04  6E01               	movwf	btemp^0,c
 23852  019F06  0EFC               	movlw	-4
 23853  019F08  0060  F007  FFE3   	movff	btemp,plusw1
 23854  019F0E  0EFD               	movlw	-3
 23855  019F10  50E3               	movf	plusw1,w,c
 23856  019F12  34E8               	rlcf	wreg,w,c
 23857  019F14  6E01               	movwf	btemp^0,c
 23858  019F16  0EFD               	movlw	-3
 23859  019F18  0060  F007  FFE3   	movff	btemp,plusw1
 23860                           
 23861                           ;stkvar	_divisor @ sp[(-4)+-4]
 23862  019F1E  0EF8               	movlw	-8
 23863  019F20  006F FF8C  F00B    	movff	plusw1,btemp+10
 23864  019F26  0EF9               	movlw	-7
 23865  019F28  006F FF8C  F00C    	movff	plusw1,btemp+11
 23866                           
 23867                           ;stkvar	_dividend @ sp[(-4)+-2]
 23868  019F2E  0EFA               	movlw	-6
 23869  019F30  006F FF8C  F009    	movff	plusw1,btemp+8
 23870  019F36  0EFB               	movlw	-5
 23871  019F38  006F FF8C  F00A    	movff	plusw1,btemp+9
 23872  019F3E  500B               	movf	(btemp+10)^0,w,c
 23873  019F40  5C09               	subwf	(btemp+8)^0,w,c
 23874  019F42  500C               	movf	(btemp+11)^0,w,c
 23875  019F44  580A               	subwfb	(btemp+9)^0,w,c
 23876  019F46  A0D8               	btfss	status,0,c
 23877  019F48  D016               	goto	l9350
 23878                           
 23879                           ;stkvar	_divisor @ sp[(-4)+-4]
 23880                           ;stkvar	_dividend @ sp[(-4)+-2]
 23881  019F4A  0EFA               	movlw	-6
 23882  019F4C  50E3               	movf	plusw1,w,c
 23883  019F4E  6E01               	movwf	btemp^0,c
 23884  019F50  0EF8               	movlw	-8
 23885  019F52  50E3               	movf	plusw1,w,c
 23886  019F54  5E01               	subwf	btemp^0,f,c
 23887  019F56  0EFA               	movlw	-6
 23888  019F58  0060  F007  FFE3   	movff	btemp,plusw1
 23889  019F5E  0EFB               	movlw	-5
 23890  019F60  50E3               	movf	plusw1,w,c
 23891  019F62  6E01               	movwf	btemp^0,c
 23892  019F64  0EF9               	movlw	-7
 23893  019F66  50E3               	movf	plusw1,w,c
 23894  019F68  5A01               	subwfb	btemp^0,f,c
 23895  019F6A  0EFB               	movlw	-5
 23896  019F6C  0060  F007  FFE3   	movff	btemp,plusw1
 23897                           
 23898                           ;stkvar	_quotient @ sp[(-4)+0]
 23899  019F72  0EFC               	movlw	-4
 23900  019F74  80E3               	bsf	plusw1,0,c
 23901  019F76                     l9350:
 23902                           
 23903                           ;stkvar	_divisor @ sp[(-4)+-4]
 23904  019F76  90D8               	bcf	status,0,c
 23905  019F78  0EF9               	movlw	-7
 23906  019F7A  32E3               	rrcf	plusw1,f,c
 23907  019F7C  0EF8               	movlw	-8
 23908  019F7E  32E3               	rrcf	plusw1,f,c
 23909                           
 23910                           ;stkvar	_counter @ sp[(-4)+3]
 23911  019F80  0EFF               	movlw	-1
 23912  019F82  50E3               	movf	plusw1,w,c
 23913  019F84  6E01               	movwf	btemp^0,c
 23914  019F86  0E01               	movlw	1
 23915  019F88  5E01               	subwf	btemp^0,f,c
 23916  019F8A  0EFF               	movlw	-1
 23917  019F8C  0060  F007  FFE3   	movff	btemp,plusw1
 23918  019F92  A4D8               	btfss	status,2,c
 23919  019F94  D7B3               	goto	u7590
 23920  019F96                     u7610:
 23921                           
 23922                           ;stkvar	_sign @ sp[(-4)+2]
 23923  019F96  0EFE               	movlw	-2
 23924  019F98  50E3               	movf	plusw1,w,c
 23925  019F9A  B4D8               	btfsc	status,2,c
 23926  019F9C  D006               	goto	l9358
 23927                           
 23928                           ;stkvar	_quotient @ sp[(-4)+0]
 23929                           ;stkvar	_quotient @ sp[(-4)+0]
 23930  019F9E  0EFC               	movlw	-4
 23931  019FA0  6CE3               	negf	plusw1,c
 23932  019FA2  0EFD               	movlw	-3
 23933  019FA4  1EE3               	comf	plusw1,f,c
 23934  019FA6  B0D8               	btfsc	status,0,c
 23935  019FA8  2AE3               	incf	plusw1,f,c
 23936  019FAA                     l9358:
 23937                           
 23938                           ;stkvar	_quotient @ sp[(-4)+0]
 23939  019FAA  0EFC               	movlw	-4
 23940  019FAC  006F FF8C  F001    	movff	plusw1,btemp
 23941  019FB2  0EFD               	movlw	-3
 23942  019FB4  006F FF8C  F002    	movff	plusw1,btemp+1
 23943                           
 23944                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 23945  019FBA  0EF8               	movlw	248
 23946  019FBC  26E1               	addwf	fsr1l,f,c
 23947  019FBE  0EFF               	movlw	255
 23948  019FC0  22E2               	addwfc	fsr1h,f,c
 23949  019FC2  0012               	return		;funcret
 23950  019FC4                     __end_of___awdiv:
 23951                           	opt callstack 0
 23952                           
 23953 ;; *************** function _dtoa *****************
 23954 ;; Defined at:
 23955 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 23956 ;; Parameters:    Size  Location     Type
 23957 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23958 ;;		 -> f(6), NULL(0), 
 23959 ;;  d               8  [STACK] long long 
 23960 ;; Auto vars:     Size  Location     Type
 23961 ;;  n               8  [STACK] long long 
 23962 ;;  i               2  [STACK] int 
 23963 ;;  s               2  [STACK] int 
 23964 ;;  w               2  [STACK] int 
 23965 ;;  p               2  [STACK] int 
 23966 ;; Return value:  Size  Location     Type
 23967 ;;                  2  [STACK] int 
 23968 ;; Registers used:
 23969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 23970 ;; Tracked objects:
 23971 ;;		On entry : 0/0
 23972 ;;		On exit  : 0/0
 23973 ;;		Unchanged: 0/0
 23974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23979 ;;Total ram usage:        0 bytes
 23980 ;; Hardware stack levels used:    1
 23981 ;; Hardware stack levels required when called:   20
 23982 ;; This function calls:
 23983 ;;		___aodiv
 23984 ;;		___aomod
 23985 ;;		_abs
 23986 ;;		_pad
 23987 ;; This function is called by:
 23988 ;;		_vfpfcnvrt
 23989 ;; This function uses a reentrant model
 23990 ;;
 23991                           
 23992                           	psect	text88
 23993  0159F6                     __ptext88:
 23994                           	opt callstack 0
 23995  0159F6                     _dtoa:
 23996                           	opt callstack 0
 23997                           
 23998                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 23999  0159F6  0E12               	movlw	18
 24000  0159F8  26E1               	addwf	fsr1l,f,c
 24001  0159FA  0E00               	movlw	0
 24002  0159FC  22E2               	addwfc	fsr1h,f,c
 24003                           
 24004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 24005                           ;stkvar	_d @ sp[(-18)+-10]
 24006                           
 24007                           ;incstack = 0
 24008 ;; hardware stack exceeded
 24009  0159FE  0EE4               	movlw	228
 24010  015A00  24E1               	addwf	fsr1l,w,c
 24011  015A02  6ED9               	movwf	fsr2l,c
 24012  015A04  0EFF               	movlw	255
 24013  015A06  20E2               	addwfc	fsr1h,w,c
 24014  015A08  6EDA               	movwf	fsr2h,c
 24015                           
 24016                           ;stkvar	_n @ sp[(-18)+2]
 24017  015A0A  0E08               	movlw	8
 24018  015A0C  6E01               	movwf	btemp^0,c
 24019  015A0E  0EF0               	movlw	-16
 24020  015A10                     us1208999:
 24021  015A10  006F FF7B FFE3     	movff	postinc2,plusw1
 24022  015A16  28E8               	incf	wreg,w,c
 24023  015A18  2E01               	decfsz	btemp^0,f,c
 24024  015A1A  D7FA               	bra	us1208999
 24025                           
 24026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 24027                           ;stkvar	_n @ sp[(-18)+2]
 24028  015A1C  0EF7               	movlw	-9
 24029  015A1E  AEE3               	btfss	plusw1,7,c
 24030  015A20  D002               	goto	u12090
 24031  015A22  0E01               	movlw	1
 24032  015A24  D001               	goto	u12100
 24033  015A26                     u12090:
 24034  015A26  0E00               	movlw	0
 24035  015A28                     u12100:
 24036  015A28  6E0B               	movwf	(btemp+10)^0,c
 24037  015A2A  6A0C               	clrf	(btemp+11)^0,c
 24038                           
 24039                           ;stkvar	_s @ sp[(-18)+12]
 24040  015A2C  0EFA               	movlw	-6
 24041  015A2E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24042  015A34  0EFB               	movlw	-5
 24043  015A36  0060  F033  FFE3   	movff	btemp+11,plusw1
 24044                           
 24045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 24046                           ;stkvar	_s @ sp[(-18)+12]
 24047  015A3C  0EFA               	movlw	-6
 24048  015A3E  006F FF8C  F001    	movff	plusw1,btemp
 24049  015A44  0EFB               	movlw	-5
 24050  015A46  50E3               	movf	plusw1,w,c
 24051  015A48  1001               	iorwf	btemp^0,w,c
 24052  015A4A  B4D8               	btfsc	status,2,c
 24053  015A4C  D025               	goto	u12120
 24054                           
 24055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 24056                           ;stkvar	_n @ sp[(-18)+2]
 24057                           ;stkvar	_n @ sp[(-18)+2]
 24058  015A4E  0EF0               	movlw	-16
 24059  015A50  6CE3               	negf	plusw1,c
 24060  015A52  0EF1               	movlw	-15
 24061  015A54  1EE3               	comf	plusw1,f,c
 24062  015A56  0EF2               	movlw	-14
 24063  015A58  1EE3               	comf	plusw1,f,c
 24064  015A5A  0EF3               	movlw	-13
 24065  015A5C  1EE3               	comf	plusw1,f,c
 24066  015A5E  0EF4               	movlw	-12
 24067  015A60  1EE3               	comf	plusw1,f,c
 24068  015A62  0EF5               	movlw	-11
 24069  015A64  1EE3               	comf	plusw1,f,c
 24070  015A66  0EF6               	movlw	-10
 24071  015A68  1EE3               	comf	plusw1,f,c
 24072  015A6A  0EF7               	movlw	-9
 24073  015A6C  1EE3               	comf	plusw1,f,c
 24074  015A6E  E314               	bnc	u12120
 24075  015A70  0EF1               	movlw	-15
 24076  015A72  2AE3               	incf	plusw1,f,c
 24077  015A74  E311               	bnc	u12120
 24078  015A76  0EF2               	movlw	-14
 24079  015A78  2AE3               	incf	plusw1,f,c
 24080  015A7A  E30E               	bnc	u12120
 24081  015A7C  0EF3               	movlw	-13
 24082  015A7E  2AE3               	incf	plusw1,f,c
 24083  015A80  E30B               	bnc	u12120
 24084  015A82  0EF4               	movlw	-12
 24085  015A84  2AE3               	incf	plusw1,f,c
 24086  015A86  E308               	bnc	u12120
 24087  015A88  0EF5               	movlw	-11
 24088  015A8A  2AE3               	incf	plusw1,f,c
 24089  015A8C  E305               	bnc	u12120
 24090  015A8E  0EF6               	movlw	-10
 24091  015A90  2AE3               	incf	plusw1,f,c
 24092  015A92  E302               	bnc	u12120
 24093  015A94  0EF7               	movlw	-9
 24094  015A96  2AE3               	incf	plusw1,f,c
 24095  015A98                     u12120:
 24096                           
 24097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 24098  015A98  AE3D               	btfss	(_prec+1)^0,7,c
 24099                           
 24100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 24101  015A9A  923E               	bcf	_flags^0,1,c
 24102                           
 24103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 24104  015A9C  BE3D               	btfsc	(_prec+1)^0,7,c
 24105  015A9E  D005               	goto	u12140
 24106  015AA0  503D               	movf	(_prec+1)^0,w,c
 24107  015AA2  E110               	bnz	l13286
 24108  015AA4  043C               	decf	_prec^0,w,c
 24109  015AA6  B0D8               	btfsc	status,0,c
 24110  015AA8  D00D               	goto	l13286
 24111  015AAA                     u12140:
 24112  015AAA  0E01               	movlw	1
 24113  015AAC  6E0B               	movwf	(btemp+10)^0,c
 24114  015AAE  0E00               	movlw	0
 24115  015AB0  6E0C               	movwf	(btemp+11)^0,c
 24116                           
 24117                           ;stkvar	_p @ sp[(-18)+16]
 24118  015AB2  0EFE               	movlw	-2
 24119  015AB4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24120  015ABA  0EFF               	movlw	-1
 24121  015ABC  0060  F033  FFE3   	movff	btemp+11,plusw1
 24122  015AC2  D008               	goto	l2442
 24123  015AC4                     l13286:
 24124                           
 24125                           ;stkvar	_p @ sp[(-18)+16]
 24126  015AC4  0EFE               	movlw	-2
 24127  015AC6  0060  F0F3  FFE3   	movff	_prec,plusw1
 24128  015ACC  0EFF               	movlw	-1
 24129  015ACE  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 24130  015AD4                     l2442:
 24131                           
 24132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 24133                           ;stkvar	_w @ sp[(-18)+14]
 24134  015AD4  0EFC               	movlw	-4
 24135  015AD6  0060  F0EB  FFE3   	movff	_width,plusw1
 24136  015ADC  0EFD               	movlw	-3
 24137  015ADE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 24138                           
 24139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 24140                           ;stkvar	_s @ sp[(-18)+12]
 24141  015AE4  0EFA               	movlw	-6
 24142  015AE6  006F FF8C  F001    	movff	plusw1,btemp
 24143  015AEC  0EFB               	movlw	-5
 24144  015AEE  50E3               	movf	plusw1,w,c
 24145  015AF0  1001               	iorwf	btemp^0,w,c
 24146  015AF2  A4D8               	btfss	status,2,c
 24147  015AF4  D002               	goto	u12160
 24148  015AF6  A43E               	btfss	_flags^0,2,c
 24149  015AF8  D00A               	goto	l13294
 24150  015AFA                     u12160:
 24151                           
 24152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 24153                           ;stkvar	_w @ sp[(-18)+14]
 24154  015AFA  50E1               	movf	fsr1l,w,c
 24155  015AFC  0FFC               	addlw	-4
 24156  015AFE  6ED9               	movwf	fsr2l,c
 24157  015B00  50E2               	movf	fsr1h,w,c
 24158  015B02  6EDA               	movwf	fsr2h,c
 24159  015B04  0EFF               	movlw	255
 24160  015B06  22DA               	addwfc	fsr2h,f,c
 24161  015B08  06DE               	decf	postinc2,f,c
 24162  015B0A  0E00               	movlw	0
 24163  015B0C  5ADD               	subwfb	postdec2,f,c
 24164  015B0E                     l13294:
 24165                           
 24166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 24167  015B0E  0E4F               	movlw	79
 24168  015B10  6E0B               	movwf	(btemp+10)^0,c
 24169  015B12  0E00               	movlw	0
 24170  015B14  6E0C               	movwf	(btemp+11)^0,c
 24171                           
 24172                           ;stkvar	_i @ sp[(-18)+10]
 24173  015B16  0EF8               	movlw	-8
 24174  015B18  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24175  015B1E  0EF9               	movlw	-7
 24176  015B20  0060  F033  FFE3   	movff	btemp+11,plusw1
 24177                           
 24178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 24179  015B26  0103               	movlb	3	; () banked
 24180  015B28  6BE3               	clrf	(_dbuf+79)& (0+255),b
 24181                           
 24182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 24183  015B2A  D109               	goto	l13308
 24184  015B2C                     l13298:
 24185                           
 24186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 24187                           ;stkvar	_i @ sp[(-18)+10]
 24188  015B2C  50E1               	movf	fsr1l,w,c
 24189  015B2E  0FF8               	addlw	-8
 24190  015B30  6ED9               	movwf	fsr2l,c
 24191  015B32  50E2               	movf	fsr1h,w,c
 24192  015B34  6EDA               	movwf	fsr2h,c
 24193  015B36  0EFF               	movlw	255
 24194  015B38  22DA               	addwfc	fsr2h,f,c
 24195  015B3A  06DE               	decf	postinc2,f,c
 24196  015B3C  0E00               	movlw	0
 24197  015B3E  5ADD               	subwfb	postdec2,f,c
 24198                           
 24199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 24200  015B40  0E0A               	movlw	10
 24201  015B42  6EE6               	movwf	postinc1,c
 24202  015B44  0E00               	movlw	0
 24203  015B46  6EE6               	movwf	postinc1,c
 24204  015B48  0E00               	movlw	0
 24205  015B4A  6EE6               	movwf	postinc1,c
 24206  015B4C  0E00               	movlw	0
 24207  015B4E  6EE6               	movwf	postinc1,c
 24208  015B50  0E00               	movlw	0
 24209  015B52  6EE6               	movwf	postinc1,c
 24210  015B54  0E00               	movlw	0
 24211  015B56  6EE6               	movwf	postinc1,c
 24212  015B58  0E00               	movlw	0
 24213  015B5A  6EE6               	movwf	postinc1,c
 24214  015B5C  0E00               	movlw	0
 24215  015B5E  6EE6               	movwf	postinc1,c
 24216                           
 24217                           ;stkvar	_n @ sp[(-26)+2]
 24218  015B60  50E1               	movf	fsr1l,w,c
 24219  015B62  0FE8               	addlw	-24
 24220  015B64  6ED9               	movwf	fsr2l,c
 24221  015B66  50E2               	movf	fsr1h,w,c
 24222  015B68  6EDA               	movwf	fsr2h,c
 24223  015B6A  0EFF               	movlw	255
 24224  015B6C  22DA               	addwfc	fsr2h,f,c
 24225  015B6E  006F FF7B FFE6     	movff	postinc2,postinc1
 24226  015B74  006F FF7B FFE6     	movff	postinc2,postinc1
 24227  015B7A  006F FF7B FFE6     	movff	postinc2,postinc1
 24228  015B80  006F FF7B FFE6     	movff	postinc2,postinc1
 24229  015B86  006F FF7B FFE6     	movff	postinc2,postinc1
 24230  015B8C  006F FF7B FFE6     	movff	postinc2,postinc1
 24231  015B92  006F FF7B FFE6     	movff	postinc2,postinc1
 24232  015B98  006F FF7B FFE6     	movff	postinc2,postinc1
 24233  015B9E  EC5B  F0C2         	call	___aomod	;wreg free
 24234  015BA2  52E5               	movf	postdec1,f,c
 24235  015BA4  006F FF9C  F018    	movff	indf1,btemp+23
 24236  015BAA  52E5               	movf	postdec1,f,c
 24237  015BAC  006F FF9C  F017    	movff	indf1,btemp+22
 24238  015BB2  52E5               	movf	postdec1,f,c
 24239  015BB4  006F FF9C  F016    	movff	indf1,btemp+21
 24240  015BBA  52E5               	movf	postdec1,f,c
 24241  015BBC  006F FF9C  F015    	movff	indf1,btemp+20
 24242  015BC2  52E5               	movf	postdec1,f,c
 24243  015BC4  006F FF9C  F014    	movff	indf1,btemp+19
 24244  015BCA  52E5               	movf	postdec1,f,c
 24245  015BCC  006F FF9C  F013    	movff	indf1,btemp+18
 24246  015BD2  52E5               	movf	postdec1,f,c
 24247  015BD4  006F FF9C  F012    	movff	indf1,btemp+17
 24248  015BDA  52E5               	movf	postdec1,f,c
 24249  015BDC  006F FF9C  F011    	movff	indf1,btemp+16
 24250  015BE2  0EF8               	movlw	248
 24251  015BE4  26E1               	addwf	fsr1l,f,c
 24252  015BE6  0EFF               	movlw	255
 24253  015BE8  22E2               	addwfc	fsr1h,f,c
 24254  015BEA  0060  F044  F00B   	movff	btemp+16,btemp+10
 24255  015BF0  0060  F048  F00C   	movff	btemp+17,btemp+11
 24256  015BF6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24257  015BFC  0060  F033  FFE6   	movff	btemp+11,postinc1
 24258  015C02  EC13  F0E4         	call	_abs	;wreg free
 24259  015C06  0E30               	movlw	48
 24260  015C08  2601               	addwf	btemp^0,f,c
 24261                           
 24262                           ;stkvar	_i @ sp[(-18)+10]
 24263  015C0A  0EF8               	movlw	-8
 24264  015C0C  006F FF8C  F00B    	movff	plusw1,btemp+10
 24265  015C12  0EF9               	movlw	-7
 24266  015C14  006F FF8C  F00C    	movff	plusw1,btemp+11
 24267  015C1A  0E94               	movlw	low _dbuf
 24268  015C1C  240B               	addwf	(btemp+10)^0,w,c
 24269  015C1E  6ED9               	movwf	fsr2l,c
 24270  015C20  0E03               	movlw	high _dbuf
 24271  015C22  200C               	addwfc	(btemp+11)^0,w,c
 24272  015C24  6EDA               	movwf	fsr2h,c
 24273  015C26  0060  F007  FFDF   	movff	btemp,indf2
 24274                           
 24275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 24276                           ;stkvar	_p @ sp[(-18)+16]
 24277  015C2C  50E1               	movf	fsr1l,w,c
 24278  015C2E  0FFE               	addlw	-2
 24279  015C30  6ED9               	movwf	fsr2l,c
 24280  015C32  50E2               	movf	fsr1h,w,c
 24281  015C34  6EDA               	movwf	fsr2h,c
 24282  015C36  0EFF               	movlw	255
 24283  015C38  22DA               	addwfc	fsr2h,f,c
 24284  015C3A  06DE               	decf	postinc2,f,c
 24285  015C3C  0E00               	movlw	0
 24286  015C3E  5ADD               	subwfb	postdec2,f,c
 24287                           
 24288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 24289                           ;stkvar	_w @ sp[(-18)+14]
 24290  015C40  50E1               	movf	fsr1l,w,c
 24291  015C42  0FFC               	addlw	-4
 24292  015C44  6ED9               	movwf	fsr2l,c
 24293  015C46  50E2               	movf	fsr1h,w,c
 24294  015C48  6EDA               	movwf	fsr2h,c
 24295  015C4A  0EFF               	movlw	255
 24296  015C4C  22DA               	addwfc	fsr2h,f,c
 24297  015C4E  06DE               	decf	postinc2,f,c
 24298  015C50  0E00               	movlw	0
 24299  015C52  5ADD               	subwfb	postdec2,f,c
 24300                           
 24301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 24302  015C54  0E0A               	movlw	10
 24303  015C56  6EE6               	movwf	postinc1,c
 24304  015C58  0E00               	movlw	0
 24305  015C5A  6EE6               	movwf	postinc1,c
 24306  015C5C  0E00               	movlw	0
 24307  015C5E  6EE6               	movwf	postinc1,c
 24308  015C60  0E00               	movlw	0
 24309  015C62  6EE6               	movwf	postinc1,c
 24310  015C64  0E00               	movlw	0
 24311  015C66  6EE6               	movwf	postinc1,c
 24312  015C68  0E00               	movlw	0
 24313  015C6A  6EE6               	movwf	postinc1,c
 24314  015C6C  0E00               	movlw	0
 24315  015C6E  6EE6               	movwf	postinc1,c
 24316  015C70  0E00               	movlw	0
 24317  015C72  6EE6               	movwf	postinc1,c
 24318                           
 24319                           ;stkvar	_n @ sp[(-26)+2]
 24320  015C74  50E1               	movf	fsr1l,w,c
 24321  015C76  0FE8               	addlw	-24
 24322  015C78  6ED9               	movwf	fsr2l,c
 24323  015C7A  50E2               	movf	fsr1h,w,c
 24324  015C7C  6EDA               	movwf	fsr2h,c
 24325  015C7E  0EFF               	movlw	255
 24326  015C80  22DA               	addwfc	fsr2h,f,c
 24327  015C82  006F FF7B FFE6     	movff	postinc2,postinc1
 24328  015C88  006F FF7B FFE6     	movff	postinc2,postinc1
 24329  015C8E  006F FF7B FFE6     	movff	postinc2,postinc1
 24330  015C94  006F FF7B FFE6     	movff	postinc2,postinc1
 24331  015C9A  006F FF7B FFE6     	movff	postinc2,postinc1
 24332  015CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 24333  015CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 24334  015CAC  006F FF7B FFE6     	movff	postinc2,postinc1
 24335  015CB2  ECBE  F0BE         	call	___aodiv	;wreg free
 24336  015CB6  52E5               	movf	postdec1,f,c
 24337  015CB8  006F FF9C  F018    	movff	indf1,btemp+23
 24338  015CBE  52E5               	movf	postdec1,f,c
 24339  015CC0  006F FF9C  F017    	movff	indf1,btemp+22
 24340  015CC6  52E5               	movf	postdec1,f,c
 24341  015CC8  006F FF9C  F016    	movff	indf1,btemp+21
 24342  015CCE  52E5               	movf	postdec1,f,c
 24343  015CD0  006F FF9C  F015    	movff	indf1,btemp+20
 24344  015CD6  52E5               	movf	postdec1,f,c
 24345  015CD8  006F FF9C  F014    	movff	indf1,btemp+19
 24346  015CDE  52E5               	movf	postdec1,f,c
 24347  015CE0  006F FF9C  F013    	movff	indf1,btemp+18
 24348  015CE6  52E5               	movf	postdec1,f,c
 24349  015CE8  006F FF9C  F012    	movff	indf1,btemp+17
 24350  015CEE  52E5               	movf	postdec1,f,c
 24351  015CF0  006F FF9C  F011    	movff	indf1,btemp+16
 24352  015CF6  0EF8               	movlw	248
 24353  015CF8  26E1               	addwf	fsr1l,f,c
 24354  015CFA  0EFF               	movlw	255
 24355  015CFC  22E2               	addwfc	fsr1h,f,c
 24356                           
 24357                           ;stkvar	_n @ sp[(-18)+2]
 24358  015CFE  0EF0               	movlw	-16
 24359  015D00  0060  F047  FFE3   	movff	btemp+16,plusw1
 24360  015D06  0EF1               	movlw	-15
 24361  015D08  0060  F04B  FFE3   	movff	btemp+17,plusw1
 24362  015D0E  0EF2               	movlw	-14
 24363  015D10  0060  F04F  FFE3   	movff	btemp+18,plusw1
 24364  015D16  0EF3               	movlw	-13
 24365  015D18  0060  F053  FFE3   	movff	btemp+19,plusw1
 24366  015D1E  0EF4               	movlw	-12
 24367  015D20  0060  F057  FFE3   	movff	btemp+20,plusw1
 24368  015D26  0EF5               	movlw	-11
 24369  015D28  0060  F05B  FFE3   	movff	btemp+21,plusw1
 24370  015D2E  0EF6               	movlw	-10
 24371  015D30  0060  F05F  FFE3   	movff	btemp+22,plusw1
 24372  015D36  0EF7               	movlw	-9
 24373  015D38  0060  F063  FFE3   	movff	btemp+23,plusw1
 24374  015D3E                     l13308:
 24375                           
 24376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 24377                           ;stkvar	_i @ sp[(-18)+10]
 24378  015D3E  0EF9               	movlw	-7
 24379  015D40  BEE3               	btfsc	plusw1,7,c
 24380  015D42  D036               	goto	u12210
 24381  015D44  0EF9               	movlw	-7
 24382  015D46  50E3               	movf	plusw1,w,c
 24383  015D48  E104               	bnz	u12170
 24384  015D4A  0EF8               	movlw	-8
 24385  015D4C  04E3               	decf	plusw1,w,c
 24386  015D4E  A0D8               	btfss	status,0,c
 24387  015D50  D02F               	goto	u12210
 24388  015D52                     u12170:
 24389                           
 24390                           ;stkvar	_n @ sp[(-18)+2]
 24391  015D52  0EF0               	movlw	-16
 24392  015D54  50E3               	movf	plusw1,w,c
 24393  015D56  E115               	bnz	u12181
 24394  015D58  0EF1               	movlw	-15
 24395  015D5A  50E3               	movf	plusw1,w,c
 24396  015D5C  E112               	bnz	u12181
 24397  015D5E  0EF2               	movlw	-14
 24398  015D60  50E3               	movf	plusw1,w,c
 24399  015D62  E10F               	bnz	u12181
 24400  015D64  0EF3               	movlw	-13
 24401  015D66  50E3               	movf	plusw1,w,c
 24402  015D68  E10C               	bnz	u12181
 24403  015D6A  0EF4               	movlw	-12
 24404  015D6C  50E3               	movf	plusw1,w,c
 24405  015D6E  E109               	bnz	u12181
 24406  015D70  0EF5               	movlw	-11
 24407  015D72  50E3               	movf	plusw1,w,c
 24408  015D74  E106               	bnz	u12181
 24409  015D76  0EF6               	movlw	-10
 24410  015D78  50E3               	movf	plusw1,w,c
 24411  015D7A  E103               	bnz	u12181
 24412  015D7C  0EF7               	movlw	-9
 24413  015D7E  50E3               	movf	plusw1,w,c
 24414  015D80  A4D8               	btfss	status,2,c
 24415  015D82                     u12181:
 24416  015D82  D6D4               	goto	l13298
 24417                           
 24418                           ;stkvar	_p @ sp[(-18)+16]
 24419  015D84  0EFF               	movlw	-1
 24420  015D86  BEE3               	btfsc	plusw1,7,c
 24421  015D88  D007               	goto	u12190
 24422  015D8A  0EFF               	movlw	-1
 24423  015D8C  50E3               	movf	plusw1,w,c
 24424  015D8E  E103               	bnz	u12191
 24425  015D90  0EFE               	movlw	-2
 24426  015D92  04E3               	decf	plusw1,w,c
 24427  015D94  B0D8               	btfsc	status,0,c
 24428  015D96                     u12191:
 24429  015D96  D6CA               	goto	l13298
 24430  015D98                     u12190:
 24431                           
 24432                           ;stkvar	_w @ sp[(-18)+14]
 24433  015D98  0EFD               	movlw	-3
 24434  015D9A  BEE3               	btfsc	plusw1,7,c
 24435  015D9C  D009               	goto	u12210
 24436  015D9E  0EFD               	movlw	-3
 24437  015DA0  50E3               	movf	plusw1,w,c
 24438  015DA2  E104               	bnz	u12200
 24439  015DA4  0EFC               	movlw	-4
 24440  015DA6  04E3               	decf	plusw1,w,c
 24441  015DA8  A0D8               	btfss	status,0,c
 24442  015DAA  D002               	goto	u12210
 24443  015DAC                     u12200:
 24444  015DAC  B23E               	btfsc	_flags^0,1,c
 24445  015DAE  D6BE               	goto	l13298
 24446  015DB0                     u12210:
 24447                           
 24448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 24449                           ;stkvar	_s @ sp[(-18)+12]
 24450  015DB0  0EFA               	movlw	-6
 24451  015DB2  006F FF8C  F001    	movff	plusw1,btemp
 24452  015DB8  0EFB               	movlw	-5
 24453  015DBA  50E3               	movf	plusw1,w,c
 24454  015DBC  1001               	iorwf	btemp^0,w,c
 24455  015DBE  A4D8               	btfss	status,2,c
 24456  015DC0  D002               	goto	u12230
 24457  015DC2  A43E               	btfss	_flags^0,2,c
 24458  015DC4  D033               	goto	l13332
 24459  015DC6                     u12230:
 24460                           
 24461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 24462                           ;stkvar	_i @ sp[(-18)+10]
 24463  015DC6  50E1               	movf	fsr1l,w,c
 24464  015DC8  0FF8               	addlw	-8
 24465  015DCA  6ED9               	movwf	fsr2l,c
 24466  015DCC  50E2               	movf	fsr1h,w,c
 24467  015DCE  6EDA               	movwf	fsr2h,c
 24468  015DD0  0EFF               	movlw	255
 24469  015DD2  22DA               	addwfc	fsr2h,f,c
 24470  015DD4  06DE               	decf	postinc2,f,c
 24471  015DD6  0E00               	movlw	0
 24472  015DD8  5ADD               	subwfb	postdec2,f,c
 24473                           
 24474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 24475                           ;stkvar	_s @ sp[(-18)+12]
 24476  015DDA  0EFA               	movlw	-6
 24477  015DDC  006F FF8C  F001    	movff	plusw1,btemp
 24478  015DE2  0EFB               	movlw	-5
 24479  015DE4  50E3               	movf	plusw1,w,c
 24480  015DE6  1001               	iorwf	btemp^0,w,c
 24481  015DE8  A4D8               	btfss	status,2,c
 24482  015DEA  D002               	goto	l13328
 24483  015DEC  0E2B               	movlw	43
 24484  015DEE  D001               	goto	L29
 24485  015DF0                     l13328:
 24486  015DF0  0E2D               	movlw	45
 24487  015DF2                     L29:
 24488  015DF2  6E0B               	movwf	(btemp+10)^0,c
 24489  015DF4  0E00               	movlw	0
 24490  015DF6  6E0C               	movwf	(btemp+11)^0,c
 24491                           
 24492                           ;stkvar	_dtoa$6770 @ sp[(-18)+0]
 24493  015DF8  0EEE               	movlw	-18
 24494  015DFA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24495  015E00  0EEF               	movlw	-17
 24496  015E02  0060  F033  FFE3   	movff	btemp+11,plusw1
 24497                           
 24498                           ;stkvar	_dtoa$6770 @ sp[(-18)+0]
 24499                           ;stkvar	_i @ sp[(-18)+10]
 24500  015E08  0EF8               	movlw	-8
 24501  015E0A  006F FF8C  F00B    	movff	plusw1,btemp+10
 24502  015E10  0EF9               	movlw	-7
 24503  015E12  006F FF8C  F00C    	movff	plusw1,btemp+11
 24504  015E18  0E94               	movlw	low _dbuf
 24505  015E1A  240B               	addwf	(btemp+10)^0,w,c
 24506  015E1C  6ED9               	movwf	fsr2l,c
 24507  015E1E  0E03               	movlw	high _dbuf
 24508  015E20  200C               	addwfc	(btemp+11)^0,w,c
 24509  015E22  6EDA               	movwf	fsr2h,c
 24510  015E24  0EEE               	movlw	-18
 24511  015E26  006F FF8F FFDF     	movff	plusw1,indf2
 24512  015E2C                     l13332:
 24513                           
 24514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 24515                           ;stkvar	_w @ sp[(-18)+14]
 24516  015E2C  0EFC               	movlw	-4
 24517  015E2E  006F FF8F FFE6     	movff	plusw1,postinc1
 24518  015E34  006F FF8F FFE6     	movff	plusw1,postinc1
 24519                           
 24520                           ;stkvar	_i @ sp[(-20)+10]
 24521  015E3A  0E94               	movlw	low _dbuf
 24522  015E3C  6E0B               	movwf	(btemp+10)^0,c
 24523  015E3E  0E03               	movlw	high _dbuf
 24524  015E40  6E0C               	movwf	(btemp+11)^0,c
 24525  015E42  0EF6               	movlw	-10
 24526  015E44  50E3               	movf	plusw1,w,c
 24527  015E46  260B               	addwf	(btemp+10)^0,f,c
 24528  015E48  0EF7               	movlw	-9
 24529  015E4A  50E3               	movf	plusw1,w,c
 24530  015E4C  220C               	addwfc	(btemp+11)^0,f,c
 24531  015E4E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24532  015E54  0060  F033  FFE6   	movff	btemp+11,postinc1
 24533                           
 24534                           ;stkvar	_fp @ sp[(-22)+-2]
 24535  015E5A  0EE8               	movlw	-24
 24536  015E5C  006F FF8F FFE6     	movff	plusw1,postinc1
 24537  015E62  006F FF8F FFE6     	movff	plusw1,postinc1
 24538  015E68  EC82  F0D4         	call	_pad	;wreg free
 24539                           
 24540                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 24541  015E6C  0EE4               	movlw	228
 24542  015E6E  26E1               	addwf	fsr1l,f,c
 24543  015E70  0EFF               	movlw	255
 24544  015E72  22E2               	addwfc	fsr1h,f,c
 24545  015E74  0012               	return		;funcret
 24546  015E76                     __end_of_dtoa:
 24547                           	opt callstack 0
 24548                           
 24549 ;; *************** function _abs *****************
 24550 ;; Defined at:
 24551 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 24552 ;; Parameters:    Size  Location     Type
 24553 ;;  a               2  [STACK] int 
 24554 ;; Auto vars:     Size  Location     Type
 24555 ;;		None
 24556 ;; Return value:  Size  Location     Type
 24557 ;;                  2  [STACK] int 
 24558 ;; Registers used:
 24559 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 24560 ;; Tracked objects:
 24561 ;;		On entry : 0/3
 24562 ;;		On exit  : 0/0
 24563 ;;		Unchanged: 0/0
 24564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24569 ;;Total ram usage:        0 bytes
 24570 ;; Hardware stack levels used:    1
 24571 ;; Hardware stack levels required when called:   15
 24572 ;; This function calls:
 24573 ;;		Nothing
 24574 ;; This function is called by:
 24575 ;;		_dtoa
 24576 ;; This function uses a reentrant model
 24577 ;;
 24578                           
 24579                           	psect	text89
 24580  01C826                     __ptext89:
 24581                           	opt callstack 0
 24582  01C826                     _abs:
 24583                           	opt callstack 0
 24584                           
 24585                           ;stkvar	_a @ sp[(0)+-2]
 24586                           
 24587                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24588                           ;incstack = 0
 24589 ;; hardware stack exceeded
 24590  01C826  0EFF               	movlw	-1
 24591  01C828  BEE3               	btfsc	plusw1,7,c
 24592  01C82A  D007               	goto	u6570
 24593  01C82C  0EFF               	movlw	-1
 24594  01C82E  50E3               	movf	plusw1,w,c
 24595  01C830  E112               	bnz	l8812
 24596  01C832  0EFE               	movlw	-2
 24597  01C834  04E3               	decf	plusw1,w,c
 24598  01C836  B0D8               	btfsc	status,0,c
 24599  01C838  D00E               	goto	l8812
 24600  01C83A                     u6570:
 24601                           
 24602                           ;stkvar	_a @ sp[(0)+-2]
 24603  01C83A  0EFE               	movlw	-2
 24604  01C83C  006F FF8C  F001    	movff	plusw1,btemp
 24605  01C842  1E01               	comf	btemp^0,f,c
 24606  01C844  0EFF               	movlw	-1
 24607  01C846  006F FF8C  F002    	movff	plusw1,btemp+1
 24608  01C84C  1E02               	comf	(btemp+1)^0,f,c
 24609  01C84E  2A01               	incf	btemp^0,f,c
 24610  01C850  B4D8               	btfsc	status,2,c
 24611  01C852  2A02               	incf	(btemp+1)^0,f,c
 24612  01C854  D008               	goto	l3368
 24613  01C856                     l8812:
 24614                           
 24615                           ;stkvar	_a @ sp[(0)+-2]
 24616  01C856  0EFE               	movlw	-2
 24617  01C858  006F FF8C  F001    	movff	plusw1,btemp
 24618  01C85E  0EFF               	movlw	-1
 24619  01C860  006F FF8C  F002    	movff	plusw1,btemp+1
 24620  01C866                     l3368:
 24621                           
 24622                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 24623  01C866  52E5               	movf	postdec1,f,c
 24624  01C868  52E5               	movf	postdec1,f,c
 24625  01C86A  0012               	return		;funcret
 24626  01C86C                     __end_of_abs:
 24627                           	opt callstack 0
 24628                           
 24629 ;; *************** function ___aomod *****************
 24630 ;; Defined at:
 24631 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 24632 ;; Parameters:    Size  Location     Type
 24633 ;;  dividend        8  [STACK] long long 
 24634 ;;  divisor         8  [STACK] long long 
 24635 ;; Auto vars:     Size  Location     Type
 24636 ;;  sign            1  [STACK] unsigned char 
 24637 ;;  counter         1  [STACK] unsigned char 
 24638 ;; Return value:  Size  Location     Type
 24639 ;;                  8  [STACK] long long 
 24640 ;; Registers used:
 24641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 24642 ;; Tracked objects:
 24643 ;;		On entry : 0/3
 24644 ;;		On exit  : 0/0
 24645 ;;		Unchanged: 0/0
 24646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24651 ;;Total ram usage:        0 bytes
 24652 ;; Hardware stack levels used:    1
 24653 ;; Hardware stack levels required when called:   15
 24654 ;; This function calls:
 24655 ;;		Nothing
 24656 ;; This function is called by:
 24657 ;;		_dtoa
 24658 ;; This function uses a reentrant model
 24659 ;;
 24660                           
 24661                           	psect	text90
 24662  0184B6                     __ptext90:
 24663                           	opt callstack 0
 24664  0184B6                     ___aomod:
 24665                           	opt callstack 0
 24666                           
 24667                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 24668  0184B6  52E6               	movf	postinc1,f,c
 24669  0184B8  52E6               	movf	postinc1,f,c
 24670                           
 24671                           ;stkvar	_sign @ sp[(-2)+0]
 24672                           
 24673                           ;incstack = 0
 24674 ;; hardware stack exceeded
 24675  0184BA  0EFE               	movlw	-2
 24676  0184BC  6AE3               	clrf	plusw1,c
 24677                           
 24678                           ;stkvar	_dividend @ sp[(-2)+-8]
 24679  0184BE  0EFD               	movlw	-3
 24680  0184C0  AEE3               	btfss	plusw1,7,c
 24681  0184C2  D028               	goto	l8970
 24682                           
 24683                           ;stkvar	_dividend @ sp[(-2)+-8]
 24684                           ;stkvar	_dividend @ sp[(-2)+-8]
 24685  0184C4  0EF6               	movlw	-10
 24686  0184C6  6CE3               	negf	plusw1,c
 24687  0184C8  0EF7               	movlw	-9
 24688  0184CA  1EE3               	comf	plusw1,f,c
 24689  0184CC  0EF8               	movlw	-8
 24690  0184CE  1EE3               	comf	plusw1,f,c
 24691  0184D0  0EF9               	movlw	-7
 24692  0184D2  1EE3               	comf	plusw1,f,c
 24693  0184D4  0EFA               	movlw	-6
 24694  0184D6  1EE3               	comf	plusw1,f,c
 24695  0184D8  0EFB               	movlw	-5
 24696  0184DA  1EE3               	comf	plusw1,f,c
 24697  0184DC  0EFC               	movlw	-4
 24698  0184DE  1EE3               	comf	plusw1,f,c
 24699  0184E0  0EFD               	movlw	-3
 24700  0184E2  1EE3               	comf	plusw1,f,c
 24701  0184E4  E314               	bnc	u7000
 24702  0184E6  0EF7               	movlw	-9
 24703  0184E8  2AE3               	incf	plusw1,f,c
 24704  0184EA  E311               	bnc	u7000
 24705  0184EC  0EF8               	movlw	-8
 24706  0184EE  2AE3               	incf	plusw1,f,c
 24707  0184F0  E30E               	bnc	u7000
 24708  0184F2  0EF9               	movlw	-7
 24709  0184F4  2AE3               	incf	plusw1,f,c
 24710  0184F6  E30B               	bnc	u7000
 24711  0184F8  0EFA               	movlw	-6
 24712  0184FA  2AE3               	incf	plusw1,f,c
 24713  0184FC  E308               	bnc	u7000
 24714  0184FE  0EFB               	movlw	-5
 24715  018500  2AE3               	incf	plusw1,f,c
 24716  018502  E305               	bnc	u7000
 24717  018504  0EFC               	movlw	-4
 24718  018506  2AE3               	incf	plusw1,f,c
 24719  018508  E302               	bnc	u7000
 24720  01850A  0EFD               	movlw	-3
 24721  01850C  2AE3               	incf	plusw1,f,c
 24722  01850E                     u7000:
 24723                           
 24724                           ;stkvar	_sign @ sp[(-2)+0]
 24725  01850E  0EFE               	movlw	-2
 24726  018510  6AE3               	clrf	plusw1,c
 24727  018512  2AE3               	incf	plusw1,f,c
 24728  018514                     l8970:
 24729                           
 24730                           ;stkvar	_divisor @ sp[(-2)+-16]
 24731  018514  0EF5               	movlw	-11
 24732  018516  AEE3               	btfss	plusw1,7,c
 24733  018518  D025               	goto	u7020
 24734                           
 24735                           ;stkvar	_divisor @ sp[(-2)+-16]
 24736                           ;stkvar	_divisor @ sp[(-2)+-16]
 24737  01851A  0EEE               	movlw	-18
 24738  01851C  6CE3               	negf	plusw1,c
 24739  01851E  0EEF               	movlw	-17
 24740  018520  1EE3               	comf	plusw1,f,c
 24741  018522  0EF0               	movlw	-16
 24742  018524  1EE3               	comf	plusw1,f,c
 24743  018526  0EF1               	movlw	-15
 24744  018528  1EE3               	comf	plusw1,f,c
 24745  01852A  0EF2               	movlw	-14
 24746  01852C  1EE3               	comf	plusw1,f,c
 24747  01852E  0EF3               	movlw	-13
 24748  018530  1EE3               	comf	plusw1,f,c
 24749  018532  0EF4               	movlw	-12
 24750  018534  1EE3               	comf	plusw1,f,c
 24751  018536  0EF5               	movlw	-11
 24752  018538  1EE3               	comf	plusw1,f,c
 24753  01853A  E314               	bnc	u7020
 24754  01853C  0EEF               	movlw	-17
 24755  01853E  2AE3               	incf	plusw1,f,c
 24756  018540  E311               	bnc	u7020
 24757  018542  0EF0               	movlw	-16
 24758  018544  2AE3               	incf	plusw1,f,c
 24759  018546  E30E               	bnc	u7020
 24760  018548  0EF1               	movlw	-15
 24761  01854A  2AE3               	incf	plusw1,f,c
 24762  01854C  E30B               	bnc	u7020
 24763  01854E  0EF2               	movlw	-14
 24764  018550  2AE3               	incf	plusw1,f,c
 24765  018552  E308               	bnc	u7020
 24766  018554  0EF3               	movlw	-13
 24767  018556  2AE3               	incf	plusw1,f,c
 24768  018558  E305               	bnc	u7020
 24769  01855A  0EF4               	movlw	-12
 24770  01855C  2AE3               	incf	plusw1,f,c
 24771  01855E  E302               	bnc	u7020
 24772  018560  0EF5               	movlw	-11
 24773  018562  2AE3               	incf	plusw1,f,c
 24774  018564                     u7020:
 24775                           
 24776                           ;stkvar	_divisor @ sp[(-2)+-16]
 24777  018564  0EEE               	movlw	-18
 24778  018566  50E3               	movf	plusw1,w,c
 24779  018568  E116               	bnz	u7030
 24780  01856A  0EEF               	movlw	-17
 24781  01856C  50E3               	movf	plusw1,w,c
 24782  01856E  E113               	bnz	u7030
 24783  018570  0EF0               	movlw	-16
 24784  018572  50E3               	movf	plusw1,w,c
 24785  018574  E110               	bnz	u7030
 24786  018576  0EF1               	movlw	-15
 24787  018578  50E3               	movf	plusw1,w,c
 24788  01857A  E10D               	bnz	u7030
 24789  01857C  0EF2               	movlw	-14
 24790  01857E  50E3               	movf	plusw1,w,c
 24791  018580  E10A               	bnz	u7030
 24792  018582  0EF3               	movlw	-13
 24793  018584  50E3               	movf	plusw1,w,c
 24794  018586  E107               	bnz	u7030
 24795  018588  0EF4               	movlw	-12
 24796  01858A  50E3               	movf	plusw1,w,c
 24797  01858C  E104               	bnz	u7030
 24798  01858E  0EF5               	movlw	-11
 24799  018590  50E3               	movf	plusw1,w,c
 24800  018592  B4D8               	btfsc	status,2,c
 24801  018594  D075               	goto	u7060
 24802  018596                     u7030:
 24803                           
 24804                           ;stkvar	_counter @ sp[(-2)+1]
 24805  018596  0EFF               	movlw	-1
 24806  018598  6AE3               	clrf	plusw1,c
 24807  01859A  D012               	goto	L30
 24808  01859C                     l8978:
 24809                           
 24810                           ;stkvar	_divisor @ sp[(-2)+-16]
 24811  01859C  90D8               	bcf	status,0,c
 24812  01859E  0EEE               	movlw	-18
 24813  0185A0  36E3               	rlcf	plusw1,f,c
 24814  0185A2  0EEF               	movlw	-17
 24815  0185A4  36E3               	rlcf	plusw1,f,c
 24816  0185A6  0EF0               	movlw	-16
 24817  0185A8  36E3               	rlcf	plusw1,f,c
 24818  0185AA  0EF1               	movlw	-15
 24819  0185AC  36E3               	rlcf	plusw1,f,c
 24820  0185AE  0EF2               	movlw	-14
 24821  0185B0  36E3               	rlcf	plusw1,f,c
 24822  0185B2  0EF3               	movlw	-13
 24823  0185B4  36E3               	rlcf	plusw1,f,c
 24824  0185B6  0EF4               	movlw	-12
 24825  0185B8  36E3               	rlcf	plusw1,f,c
 24826  0185BA  0EF5               	movlw	-11
 24827  0185BC  36E3               	rlcf	plusw1,f,c
 24828                           
 24829                           ;stkvar	_counter @ sp[(-2)+1]
 24830  0185BE  0EFF               	movlw	-1
 24831  0185C0                     L30:
 24832  0185C0  2AE3               	incf	plusw1,f,c
 24833                           
 24834                           ;stkvar	_divisor @ sp[(-2)+-16]
 24835  0185C2  0EF5               	movlw	-11
 24836  0185C4  AEE3               	btfss	plusw1,7,c
 24837  0185C6  D7EA               	goto	l8978
 24838  0185C8                     u7040:
 24839                           
 24840                           ;stkvar	_divisor @ sp[(-2)+-16]
 24841                           ;stkvar	_dividend @ sp[(-2)+-8]
 24842  0185C8  50E1               	movf	fsr1l,w,c
 24843  0185CA  0FF6               	addlw	-10
 24844  0185CC  6ED9               	movwf	fsr2l,c
 24845  0185CE  50E2               	movf	fsr1h,w,c
 24846  0185D0  6EDA               	movwf	fsr2h,c
 24847  0185D2  0EFF               	movlw	255
 24848  0185D4  22DA               	addwfc	fsr2h,f,c
 24849  0185D6  0EEE               	movlw	-18
 24850  0185D8  50E3               	movf	plusw1,w,c
 24851  0185DA  5CDE               	subwf	postinc2,w,c
 24852  0185DC  0EEF               	movlw	-17
 24853  0185DE  50E3               	movf	plusw1,w,c
 24854  0185E0  58DE               	subwfb	postinc2,w,c
 24855  0185E2  0EF0               	movlw	-16
 24856  0185E4  50E3               	movf	plusw1,w,c
 24857  0185E6  58DE               	subwfb	postinc2,w,c
 24858  0185E8  0EF1               	movlw	-15
 24859  0185EA  50E3               	movf	plusw1,w,c
 24860  0185EC  58DE               	subwfb	postinc2,w,c
 24861  0185EE  0EF2               	movlw	-14
 24862  0185F0  50E3               	movf	plusw1,w,c
 24863  0185F2  58DE               	subwfb	postinc2,w,c
 24864  0185F4  0EF3               	movlw	-13
 24865  0185F6  50E3               	movf	plusw1,w,c
 24866  0185F8  58DE               	subwfb	postinc2,w,c
 24867  0185FA  0EF4               	movlw	-12
 24868  0185FC  50E3               	movf	plusw1,w,c
 24869  0185FE  58DE               	subwfb	postinc2,w,c
 24870  018600  0EF5               	movlw	-11
 24871  018602  50E3               	movf	plusw1,w,c
 24872  018604  58DE               	subwfb	postinc2,w,c
 24873  018606  A0D8               	btfss	status,0,c
 24874  018608  D01F               	goto	l8986
 24875                           
 24876                           ;stkvar	_divisor @ sp[(-2)+-16]
 24877                           ;stkvar	_dividend @ sp[(-2)+-8]
 24878  01860A  50E1               	movf	fsr1l,w,c
 24879  01860C  0FF6               	addlw	-10
 24880  01860E  6ED9               	movwf	fsr2l,c
 24881  018610  50E2               	movf	fsr1h,w,c
 24882  018612  6EDA               	movwf	fsr2h,c
 24883  018614  0EFF               	movlw	255
 24884  018616  22DA               	addwfc	fsr2h,f,c
 24885  018618  0EEE               	movlw	-18
 24886  01861A  50E3               	movf	plusw1,w,c
 24887  01861C  5EDE               	subwf	postinc2,f,c
 24888  01861E  0EEF               	movlw	-17
 24889  018620  50E3               	movf	plusw1,w,c
 24890  018622  5ADE               	subwfb	postinc2,f,c
 24891  018624  0EF0               	movlw	-16
 24892  018626  50E3               	movf	plusw1,w,c
 24893  018628  5ADE               	subwfb	postinc2,f,c
 24894  01862A  0EF1               	movlw	-15
 24895  01862C  50E3               	movf	plusw1,w,c
 24896  01862E  5ADE               	subwfb	postinc2,f,c
 24897  018630  0EF2               	movlw	-14
 24898  018632  50E3               	movf	plusw1,w,c
 24899  018634  5ADE               	subwfb	postinc2,f,c
 24900  018636  0EF3               	movlw	-13
 24901  018638  50E3               	movf	plusw1,w,c
 24902  01863A  5ADE               	subwfb	postinc2,f,c
 24903  01863C  0EF4               	movlw	-12
 24904  01863E  50E3               	movf	plusw1,w,c
 24905  018640  5ADE               	subwfb	postinc2,f,c
 24906  018642  0EF5               	movlw	-11
 24907  018644  50E3               	movf	plusw1,w,c
 24908  018646  5ADE               	subwfb	postinc2,f,c
 24909  018648                     l8986:
 24910                           
 24911                           ;stkvar	_divisor @ sp[(-2)+-16]
 24912  018648  90D8               	bcf	status,0,c
 24913  01864A  0EF5               	movlw	-11
 24914  01864C  32E3               	rrcf	plusw1,f,c
 24915  01864E  0EF4               	movlw	-12
 24916  018650  32E3               	rrcf	plusw1,f,c
 24917  018652  0EF3               	movlw	-13
 24918  018654  32E3               	rrcf	plusw1,f,c
 24919  018656  0EF2               	movlw	-14
 24920  018658  32E3               	rrcf	plusw1,f,c
 24921  01865A  0EF1               	movlw	-15
 24922  01865C  32E3               	rrcf	plusw1,f,c
 24923  01865E  0EF0               	movlw	-16
 24924  018660  32E3               	rrcf	plusw1,f,c
 24925  018662  0EEF               	movlw	-17
 24926  018664  32E3               	rrcf	plusw1,f,c
 24927  018666  0EEE               	movlw	-18
 24928  018668  32E3               	rrcf	plusw1,f,c
 24929                           
 24930                           ;stkvar	_counter @ sp[(-2)+1]
 24931  01866A  0EFF               	movlw	-1
 24932  01866C  50E3               	movf	plusw1,w,c
 24933  01866E  6E01               	movwf	btemp^0,c
 24934  018670  0E01               	movlw	1
 24935  018672  5E01               	subwf	btemp^0,f,c
 24936  018674  0EFF               	movlw	-1
 24937  018676  0060  F007  FFE3   	movff	btemp,plusw1
 24938  01867C  A4D8               	btfss	status,2,c
 24939  01867E  D7A4               	goto	u7040
 24940  018680                     u7060:
 24941                           
 24942                           ;stkvar	_sign @ sp[(-2)+0]
 24943  018680  0EFE               	movlw	-2
 24944  018682  50E3               	movf	plusw1,w,c
 24945  018684  B4D8               	btfsc	status,2,c
 24946  018686  D025               	goto	u7080
 24947                           
 24948                           ;stkvar	_dividend @ sp[(-2)+-8]
 24949                           ;stkvar	_dividend @ sp[(-2)+-8]
 24950  018688  0EF6               	movlw	-10
 24951  01868A  6CE3               	negf	plusw1,c
 24952  01868C  0EF7               	movlw	-9
 24953  01868E  1EE3               	comf	plusw1,f,c
 24954  018690  0EF8               	movlw	-8
 24955  018692  1EE3               	comf	plusw1,f,c
 24956  018694  0EF9               	movlw	-7
 24957  018696  1EE3               	comf	plusw1,f,c
 24958  018698  0EFA               	movlw	-6
 24959  01869A  1EE3               	comf	plusw1,f,c
 24960  01869C  0EFB               	movlw	-5
 24961  01869E  1EE3               	comf	plusw1,f,c
 24962  0186A0  0EFC               	movlw	-4
 24963  0186A2  1EE3               	comf	plusw1,f,c
 24964  0186A4  0EFD               	movlw	-3
 24965  0186A6  1EE3               	comf	plusw1,f,c
 24966  0186A8  E314               	bnc	u7080
 24967  0186AA  0EF7               	movlw	-9
 24968  0186AC  2AE3               	incf	plusw1,f,c
 24969  0186AE  E311               	bnc	u7080
 24970  0186B0  0EF8               	movlw	-8
 24971  0186B2  2AE3               	incf	plusw1,f,c
 24972  0186B4  E30E               	bnc	u7080
 24973  0186B6  0EF9               	movlw	-7
 24974  0186B8  2AE3               	incf	plusw1,f,c
 24975  0186BA  E30B               	bnc	u7080
 24976  0186BC  0EFA               	movlw	-6
 24977  0186BE  2AE3               	incf	plusw1,f,c
 24978  0186C0  E308               	bnc	u7080
 24979  0186C2  0EFB               	movlw	-5
 24980  0186C4  2AE3               	incf	plusw1,f,c
 24981  0186C6  E305               	bnc	u7080
 24982  0186C8  0EFC               	movlw	-4
 24983  0186CA  2AE3               	incf	plusw1,f,c
 24984  0186CC  E302               	bnc	u7080
 24985  0186CE  0EFD               	movlw	-3
 24986  0186D0  2AE3               	incf	plusw1,f,c
 24987  0186D2                     u7080:
 24988                           
 24989                           ;stkvar	_dividend @ sp[(-2)+-8]
 24990  0186D2  0EF6               	movlw	246
 24991  0186D4  24E1               	addwf	fsr1l,w,c
 24992  0186D6  6ED9               	movwf	fsr2l,c
 24993  0186D8  0EFF               	movlw	255
 24994  0186DA  20E2               	addwfc	fsr1h,w,c
 24995  0186DC  6EDA               	movwf	fsr2h,c
 24996                           
 24997                           ;stkvar	?___aomod @ sp[(-2)+-8]
 24998  0186DE  0E08               	movlw	8
 24999  0186E0  6E01               	movwf	btemp^0,c
 25000  0186E2  0EF6               	movlw	-10
 25001  0186E4                     us709999:
 25002  0186E4  006F FF7B FFE3     	movff	postinc2,plusw1
 25003  0186EA  28E8               	incf	wreg,w,c
 25004  0186EC  2E01               	decfsz	btemp^0,f,c
 25005  0186EE  D7FA               	bra	us709999
 25006                           
 25007                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 25008  0186F0  52E5               	movf	postdec1,f,c
 25009  0186F2  52E5               	movf	postdec1,f,c
 25010  0186F4  0012               	return		;funcret
 25011  0186F6                     __end_of___aomod:
 25012                           	opt callstack 0
 25013                           
 25014 ;; *************** function ___aodiv *****************
 25015 ;; Defined at:
 25016 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 25017 ;; Parameters:    Size  Location     Type
 25018 ;;  dividend        8  [STACK] long long 
 25019 ;;  divisor         8  [STACK] long long 
 25020 ;; Auto vars:     Size  Location     Type
 25021 ;;  quotient        8  [STACK] long long 
 25022 ;;  sign            1  [STACK] unsigned char 
 25023 ;;  counter         1  [STACK] unsigned char 
 25024 ;; Return value:  Size  Location     Type
 25025 ;;                  8  [STACK] long long 
 25026 ;; Registers used:
 25027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 25028 ;; Tracked objects:
 25029 ;;		On entry : 0/3
 25030 ;;		On exit  : 0/0
 25031 ;;		Unchanged: 0/0
 25032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25037 ;;Total ram usage:        0 bytes
 25038 ;; Hardware stack levels used:    1
 25039 ;; Hardware stack levels required when called:   15
 25040 ;; This function calls:
 25041 ;;		Nothing
 25042 ;; This function is called by:
 25043 ;;		_dtoa
 25044 ;; This function uses a reentrant model
 25045 ;;
 25046                           
 25047                           	psect	text91
 25048  017D7C                     __ptext91:
 25049                           	opt callstack 0
 25050  017D7C                     ___aodiv:
 25051                           	opt callstack 0
 25052                           
 25053                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 25054  017D7C  0E0A               	movlw	10
 25055  017D7E  26E1               	addwf	fsr1l,f,c
 25056  017D80  0E00               	movlw	0
 25057  017D82  22E2               	addwfc	fsr1h,f,c
 25058                           
 25059                           ;stkvar	_sign @ sp[(-10)+8]
 25060                           
 25061                           ;incstack = 0
 25062 ;; hardware stack exceeded
 25063  017D84  0EFE               	movlw	-2
 25064  017D86  6AE3               	clrf	plusw1,c
 25065                           
 25066                           ;stkvar	_divisor @ sp[(-10)+-16]
 25067  017D88  0EED               	movlw	-19
 25068  017D8A  AEE3               	btfss	plusw1,7,c
 25069  017D8C  D028               	goto	l8926
 25070                           
 25071                           ;stkvar	_divisor @ sp[(-10)+-16]
 25072                           ;stkvar	_divisor @ sp[(-10)+-16]
 25073  017D8E  0EE6               	movlw	-26
 25074  017D90  6CE3               	negf	plusw1,c
 25075  017D92  0EE7               	movlw	-25
 25076  017D94  1EE3               	comf	plusw1,f,c
 25077  017D96  0EE8               	movlw	-24
 25078  017D98  1EE3               	comf	plusw1,f,c
 25079  017D9A  0EE9               	movlw	-23
 25080  017D9C  1EE3               	comf	plusw1,f,c
 25081  017D9E  0EEA               	movlw	-22
 25082  017DA0  1EE3               	comf	plusw1,f,c
 25083  017DA2  0EEB               	movlw	-21
 25084  017DA4  1EE3               	comf	plusw1,f,c
 25085  017DA6  0EEC               	movlw	-20
 25086  017DA8  1EE3               	comf	plusw1,f,c
 25087  017DAA  0EED               	movlw	-19
 25088  017DAC  1EE3               	comf	plusw1,f,c
 25089  017DAE  E314               	bnc	u6880
 25090  017DB0  0EE7               	movlw	-25
 25091  017DB2  2AE3               	incf	plusw1,f,c
 25092  017DB4  E311               	bnc	u6880
 25093  017DB6  0EE8               	movlw	-24
 25094  017DB8  2AE3               	incf	plusw1,f,c
 25095  017DBA  E30E               	bnc	u6880
 25096  017DBC  0EE9               	movlw	-23
 25097  017DBE  2AE3               	incf	plusw1,f,c
 25098  017DC0  E30B               	bnc	u6880
 25099  017DC2  0EEA               	movlw	-22
 25100  017DC4  2AE3               	incf	plusw1,f,c
 25101  017DC6  E308               	bnc	u6880
 25102  017DC8  0EEB               	movlw	-21
 25103  017DCA  2AE3               	incf	plusw1,f,c
 25104  017DCC  E305               	bnc	u6880
 25105  017DCE  0EEC               	movlw	-20
 25106  017DD0  2AE3               	incf	plusw1,f,c
 25107  017DD2  E302               	bnc	u6880
 25108  017DD4  0EED               	movlw	-19
 25109  017DD6  2AE3               	incf	plusw1,f,c
 25110  017DD8                     u6880:
 25111                           
 25112                           ;stkvar	_sign @ sp[(-10)+8]
 25113  017DD8  0EFE               	movlw	-2
 25114  017DDA  6AE3               	clrf	plusw1,c
 25115  017DDC  2AE3               	incf	plusw1,f,c
 25116  017DDE                     l8926:
 25117                           
 25118                           ;stkvar	_dividend @ sp[(-10)+-8]
 25119  017DDE  0EF5               	movlw	-11
 25120  017DE0  AEE3               	btfss	plusw1,7,c
 25121  017DE2  D027               	goto	l8932
 25122                           
 25123                           ;stkvar	_dividend @ sp[(-10)+-8]
 25124                           ;stkvar	_dividend @ sp[(-10)+-8]
 25125  017DE4  0EEE               	movlw	-18
 25126  017DE6  6CE3               	negf	plusw1,c
 25127  017DE8  0EEF               	movlw	-17
 25128  017DEA  1EE3               	comf	plusw1,f,c
 25129  017DEC  0EF0               	movlw	-16
 25130  017DEE  1EE3               	comf	plusw1,f,c
 25131  017DF0  0EF1               	movlw	-15
 25132  017DF2  1EE3               	comf	plusw1,f,c
 25133  017DF4  0EF2               	movlw	-14
 25134  017DF6  1EE3               	comf	plusw1,f,c
 25135  017DF8  0EF3               	movlw	-13
 25136  017DFA  1EE3               	comf	plusw1,f,c
 25137  017DFC  0EF4               	movlw	-12
 25138  017DFE  1EE3               	comf	plusw1,f,c
 25139  017E00  0EF5               	movlw	-11
 25140  017E02  1EE3               	comf	plusw1,f,c
 25141  017E04  E314               	bnc	u6900
 25142  017E06  0EEF               	movlw	-17
 25143  017E08  2AE3               	incf	plusw1,f,c
 25144  017E0A  E311               	bnc	u6900
 25145  017E0C  0EF0               	movlw	-16
 25146  017E0E  2AE3               	incf	plusw1,f,c
 25147  017E10  E30E               	bnc	u6900
 25148  017E12  0EF1               	movlw	-15
 25149  017E14  2AE3               	incf	plusw1,f,c
 25150  017E16  E30B               	bnc	u6900
 25151  017E18  0EF2               	movlw	-14
 25152  017E1A  2AE3               	incf	plusw1,f,c
 25153  017E1C  E308               	bnc	u6900
 25154  017E1E  0EF3               	movlw	-13
 25155  017E20  2AE3               	incf	plusw1,f,c
 25156  017E22  E305               	bnc	u6900
 25157  017E24  0EF4               	movlw	-12
 25158  017E26  2AE3               	incf	plusw1,f,c
 25159  017E28  E302               	bnc	u6900
 25160  017E2A  0EF5               	movlw	-11
 25161  017E2C  2AE3               	incf	plusw1,f,c
 25162  017E2E                     u6900:
 25163                           
 25164                           ;stkvar	_sign @ sp[(-10)+8]
 25165  017E2E  0EFE               	movlw	-2
 25166  017E30  70E3               	btg	plusw1,0,c
 25167  017E32                     l8932:
 25168                           
 25169                           ;stkvar	_quotient @ sp[(-10)+0]
 25170  017E32  0E07               	movlw	7
 25171  017E34  6E01               	movwf	btemp^0,c
 25172  017E36  0EF6               	movlw	-10
 25173  017E38                     u6911:
 25174  017E38  6AE3               	clrf	plusw1,c
 25175  017E3A  2AE8               	incf	wreg,f,c
 25176  017E3C  0601               	decf	btemp^0,f,c
 25177  017E3E  E2FC               	bc	u6911
 25178                           
 25179                           ;stkvar	_divisor @ sp[(-10)+-16]
 25180  017E40  0EE6               	movlw	-26
 25181  017E42  50E3               	movf	plusw1,w,c
 25182  017E44  E116               	bnz	u6920
 25183  017E46  0EE7               	movlw	-25
 25184  017E48  50E3               	movf	plusw1,w,c
 25185  017E4A  E113               	bnz	u6920
 25186  017E4C  0EE8               	movlw	-24
 25187  017E4E  50E3               	movf	plusw1,w,c
 25188  017E50  E110               	bnz	u6920
 25189  017E52  0EE9               	movlw	-23
 25190  017E54  50E3               	movf	plusw1,w,c
 25191  017E56  E10D               	bnz	u6920
 25192  017E58  0EEA               	movlw	-22
 25193  017E5A  50E3               	movf	plusw1,w,c
 25194  017E5C  E10A               	bnz	u6920
 25195  017E5E  0EEB               	movlw	-21
 25196  017E60  50E3               	movf	plusw1,w,c
 25197  017E62  E107               	bnz	u6920
 25198  017E64  0EEC               	movlw	-20
 25199  017E66  50E3               	movf	plusw1,w,c
 25200  017E68  E104               	bnz	u6920
 25201  017E6A  0EED               	movlw	-19
 25202  017E6C  50E3               	movf	plusw1,w,c
 25203  017E6E  B4D8               	btfsc	status,2,c
 25204  017E70  D088               	goto	u6950
 25205  017E72                     u6920:
 25206                           
 25207                           ;stkvar	_counter @ sp[(-10)+9]
 25208  017E72  0EFF               	movlw	-1
 25209  017E74  6AE3               	clrf	plusw1,c
 25210  017E76  D012               	goto	L31
 25211  017E78                     l8938:
 25212                           
 25213                           ;stkvar	_divisor @ sp[(-10)+-16]
 25214  017E78  90D8               	bcf	status,0,c
 25215  017E7A  0EE6               	movlw	-26
 25216  017E7C  36E3               	rlcf	plusw1,f,c
 25217  017E7E  0EE7               	movlw	-25
 25218  017E80  36E3               	rlcf	plusw1,f,c
 25219  017E82  0EE8               	movlw	-24
 25220  017E84  36E3               	rlcf	plusw1,f,c
 25221  017E86  0EE9               	movlw	-23
 25222  017E88  36E3               	rlcf	plusw1,f,c
 25223  017E8A  0EEA               	movlw	-22
 25224  017E8C  36E3               	rlcf	plusw1,f,c
 25225  017E8E  0EEB               	movlw	-21
 25226  017E90  36E3               	rlcf	plusw1,f,c
 25227  017E92  0EEC               	movlw	-20
 25228  017E94  36E3               	rlcf	plusw1,f,c
 25229  017E96  0EED               	movlw	-19
 25230  017E98  36E3               	rlcf	plusw1,f,c
 25231                           
 25232                           ;stkvar	_counter @ sp[(-10)+9]
 25233  017E9A  0EFF               	movlw	-1
 25234  017E9C                     L31:
 25235  017E9C  2AE3               	incf	plusw1,f,c
 25236                           
 25237                           ;stkvar	_divisor @ sp[(-10)+-16]
 25238  017E9E  0EED               	movlw	-19
 25239  017EA0  AEE3               	btfss	plusw1,7,c
 25240  017EA2  D7EA               	goto	l8938
 25241  017EA4                     u6930:
 25242                           
 25243                           ;stkvar	_quotient @ sp[(-10)+0]
 25244  017EA4  90D8               	bcf	status,0,c
 25245  017EA6  0EF6               	movlw	-10
 25246  017EA8  36E3               	rlcf	plusw1,f,c
 25247  017EAA  0EF7               	movlw	-9
 25248  017EAC  36E3               	rlcf	plusw1,f,c
 25249  017EAE  0EF8               	movlw	-8
 25250  017EB0  36E3               	rlcf	plusw1,f,c
 25251  017EB2  0EF9               	movlw	-7
 25252  017EB4  36E3               	rlcf	plusw1,f,c
 25253  017EB6  0EFA               	movlw	-6
 25254  017EB8  36E3               	rlcf	plusw1,f,c
 25255  017EBA  0EFB               	movlw	-5
 25256  017EBC  36E3               	rlcf	plusw1,f,c
 25257  017EBE  0EFC               	movlw	-4
 25258  017EC0  36E3               	rlcf	plusw1,f,c
 25259  017EC2  0EFD               	movlw	-3
 25260  017EC4  36E3               	rlcf	plusw1,f,c
 25261                           
 25262                           ;stkvar	_divisor @ sp[(-10)+-16]
 25263                           ;stkvar	_dividend @ sp[(-10)+-8]
 25264  017EC6  50E1               	movf	fsr1l,w,c
 25265  017EC8  0FEE               	addlw	-18
 25266  017ECA  6ED9               	movwf	fsr2l,c
 25267  017ECC  50E2               	movf	fsr1h,w,c
 25268  017ECE  6EDA               	movwf	fsr2h,c
 25269  017ED0  0EFF               	movlw	255
 25270  017ED2  22DA               	addwfc	fsr2h,f,c
 25271  017ED4  0EE6               	movlw	-26
 25272  017ED6  50E3               	movf	plusw1,w,c
 25273  017ED8  5CDE               	subwf	postinc2,w,c
 25274  017EDA  0EE7               	movlw	-25
 25275  017EDC  50E3               	movf	plusw1,w,c
 25276  017EDE  58DE               	subwfb	postinc2,w,c
 25277  017EE0  0EE8               	movlw	-24
 25278  017EE2  50E3               	movf	plusw1,w,c
 25279  017EE4  58DE               	subwfb	postinc2,w,c
 25280  017EE6  0EE9               	movlw	-23
 25281  017EE8  50E3               	movf	plusw1,w,c
 25282  017EEA  58DE               	subwfb	postinc2,w,c
 25283  017EEC  0EEA               	movlw	-22
 25284  017EEE  50E3               	movf	plusw1,w,c
 25285  017EF0  58DE               	subwfb	postinc2,w,c
 25286  017EF2  0EEB               	movlw	-21
 25287  017EF4  50E3               	movf	plusw1,w,c
 25288  017EF6  58DE               	subwfb	postinc2,w,c
 25289  017EF8  0EEC               	movlw	-20
 25290  017EFA  50E3               	movf	plusw1,w,c
 25291  017EFC  58DE               	subwfb	postinc2,w,c
 25292  017EFE  0EED               	movlw	-19
 25293  017F00  50E3               	movf	plusw1,w,c
 25294  017F02  58DE               	subwfb	postinc2,w,c
 25295  017F04  A0D8               	btfss	status,0,c
 25296  017F06  D021               	goto	l8950
 25297                           
 25298                           ;stkvar	_divisor @ sp[(-10)+-16]
 25299                           ;stkvar	_dividend @ sp[(-10)+-8]
 25300  017F08  50E1               	movf	fsr1l,w,c
 25301  017F0A  0FEE               	addlw	-18
 25302  017F0C  6ED9               	movwf	fsr2l,c
 25303  017F0E  50E2               	movf	fsr1h,w,c
 25304  017F10  6EDA               	movwf	fsr2h,c
 25305  017F12  0EFF               	movlw	255
 25306  017F14  22DA               	addwfc	fsr2h,f,c
 25307  017F16  0EE6               	movlw	-26
 25308  017F18  50E3               	movf	plusw1,w,c
 25309  017F1A  5EDE               	subwf	postinc2,f,c
 25310  017F1C  0EE7               	movlw	-25
 25311  017F1E  50E3               	movf	plusw1,w,c
 25312  017F20  5ADE               	subwfb	postinc2,f,c
 25313  017F22  0EE8               	movlw	-24
 25314  017F24  50E3               	movf	plusw1,w,c
 25315  017F26  5ADE               	subwfb	postinc2,f,c
 25316  017F28  0EE9               	movlw	-23
 25317  017F2A  50E3               	movf	plusw1,w,c
 25318  017F2C  5ADE               	subwfb	postinc2,f,c
 25319  017F2E  0EEA               	movlw	-22
 25320  017F30  50E3               	movf	plusw1,w,c
 25321  017F32  5ADE               	subwfb	postinc2,f,c
 25322  017F34  0EEB               	movlw	-21
 25323  017F36  50E3               	movf	plusw1,w,c
 25324  017F38  5ADE               	subwfb	postinc2,f,c
 25325  017F3A  0EEC               	movlw	-20
 25326  017F3C  50E3               	movf	plusw1,w,c
 25327  017F3E  5ADE               	subwfb	postinc2,f,c
 25328  017F40  0EED               	movlw	-19
 25329  017F42  50E3               	movf	plusw1,w,c
 25330  017F44  5ADE               	subwfb	postinc2,f,c
 25331                           
 25332                           ;stkvar	_quotient @ sp[(-10)+0]
 25333  017F46  0EF6               	movlw	-10
 25334  017F48  80E3               	bsf	plusw1,0,c
 25335  017F4A                     l8950:
 25336                           
 25337                           ;stkvar	_divisor @ sp[(-10)+-16]
 25338  017F4A  90D8               	bcf	status,0,c
 25339  017F4C  0EED               	movlw	-19
 25340  017F4E  32E3               	rrcf	plusw1,f,c
 25341  017F50  0EEC               	movlw	-20
 25342  017F52  32E3               	rrcf	plusw1,f,c
 25343  017F54  0EEB               	movlw	-21
 25344  017F56  32E3               	rrcf	plusw1,f,c
 25345  017F58  0EEA               	movlw	-22
 25346  017F5A  32E3               	rrcf	plusw1,f,c
 25347  017F5C  0EE9               	movlw	-23
 25348  017F5E  32E3               	rrcf	plusw1,f,c
 25349  017F60  0EE8               	movlw	-24
 25350  017F62  32E3               	rrcf	plusw1,f,c
 25351  017F64  0EE7               	movlw	-25
 25352  017F66  32E3               	rrcf	plusw1,f,c
 25353  017F68  0EE6               	movlw	-26
 25354  017F6A  32E3               	rrcf	plusw1,f,c
 25355                           
 25356                           ;stkvar	_counter @ sp[(-10)+9]
 25357  017F6C  0EFF               	movlw	-1
 25358  017F6E  50E3               	movf	plusw1,w,c
 25359  017F70  6E01               	movwf	btemp^0,c
 25360  017F72  0E01               	movlw	1
 25361  017F74  5E01               	subwf	btemp^0,f,c
 25362  017F76  0EFF               	movlw	-1
 25363  017F78  0060  F007  FFE3   	movff	btemp,plusw1
 25364  017F7E  A4D8               	btfss	status,2,c
 25365  017F80  D791               	goto	u6930
 25366  017F82                     u6950:
 25367                           
 25368                           ;stkvar	_sign @ sp[(-10)+8]
 25369  017F82  0EFE               	movlw	-2
 25370  017F84  50E3               	movf	plusw1,w,c
 25371  017F86  B4D8               	btfsc	status,2,c
 25372  017F88  D025               	goto	u6970
 25373                           
 25374                           ;stkvar	_quotient @ sp[(-10)+0]
 25375                           ;stkvar	_quotient @ sp[(-10)+0]
 25376  017F8A  0EF6               	movlw	-10
 25377  017F8C  6CE3               	negf	plusw1,c
 25378  017F8E  0EF7               	movlw	-9
 25379  017F90  1EE3               	comf	plusw1,f,c
 25380  017F92  0EF8               	movlw	-8
 25381  017F94  1EE3               	comf	plusw1,f,c
 25382  017F96  0EF9               	movlw	-7
 25383  017F98  1EE3               	comf	plusw1,f,c
 25384  017F9A  0EFA               	movlw	-6
 25385  017F9C  1EE3               	comf	plusw1,f,c
 25386  017F9E  0EFB               	movlw	-5
 25387  017FA0  1EE3               	comf	plusw1,f,c
 25388  017FA2  0EFC               	movlw	-4
 25389  017FA4  1EE3               	comf	plusw1,f,c
 25390  017FA6  0EFD               	movlw	-3
 25391  017FA8  1EE3               	comf	plusw1,f,c
 25392  017FAA  E314               	bnc	u6970
 25393  017FAC  0EF7               	movlw	-9
 25394  017FAE  2AE3               	incf	plusw1,f,c
 25395  017FB0  E311               	bnc	u6970
 25396  017FB2  0EF8               	movlw	-8
 25397  017FB4  2AE3               	incf	plusw1,f,c
 25398  017FB6  E30E               	bnc	u6970
 25399  017FB8  0EF9               	movlw	-7
 25400  017FBA  2AE3               	incf	plusw1,f,c
 25401  017FBC  E30B               	bnc	u6970
 25402  017FBE  0EFA               	movlw	-6
 25403  017FC0  2AE3               	incf	plusw1,f,c
 25404  017FC2  E308               	bnc	u6970
 25405  017FC4  0EFB               	movlw	-5
 25406  017FC6  2AE3               	incf	plusw1,f,c
 25407  017FC8  E305               	bnc	u6970
 25408  017FCA  0EFC               	movlw	-4
 25409  017FCC  2AE3               	incf	plusw1,f,c
 25410  017FCE  E302               	bnc	u6970
 25411  017FD0  0EFD               	movlw	-3
 25412  017FD2  2AE3               	incf	plusw1,f,c
 25413  017FD4                     u6970:
 25414                           
 25415                           ;stkvar	_quotient @ sp[(-10)+0]
 25416  017FD4  0EF6               	movlw	246
 25417  017FD6  24E1               	addwf	fsr1l,w,c
 25418  017FD8  6ED9               	movwf	fsr2l,c
 25419  017FDA  0EFF               	movlw	255
 25420  017FDC  20E2               	addwfc	fsr1h,w,c
 25421  017FDE  6EDA               	movwf	fsr2h,c
 25422                           
 25423                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 25424  017FE0  0E08               	movlw	8
 25425  017FE2  6E01               	movwf	btemp^0,c
 25426  017FE4  0EEE               	movlw	-18
 25427  017FE6                     us698999:
 25428  017FE6  006F FF7B FFE3     	movff	postinc2,plusw1
 25429  017FEC  28E8               	incf	wreg,w,c
 25430  017FEE  2E01               	decfsz	btemp^0,f,c
 25431  017FF0  D7FA               	bra	us698999
 25432                           
 25433                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 25434  017FF2  0EF6               	movlw	246
 25435  017FF4  26E1               	addwf	fsr1l,f,c
 25436  017FF6  0EFF               	movlw	255
 25437  017FF8  22E2               	addwfc	fsr1h,f,c
 25438  017FFA  0012               	return		;funcret
 25439  017FFC                     __end_of___aodiv:
 25440                           	opt callstack 0
 25441                           
 25442 ;; *************** function _ctoa *****************
 25443 ;; Defined at:
 25444 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25445 ;; Parameters:    Size  Location     Type
 25446 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25447 ;;		 -> f(6), NULL(0), 
 25448 ;;  c               1  [STACK] unsigned char 
 25449 ;; Auto vars:     Size  Location     Type
 25450 ;;  w               2  [STACK] int 
 25451 ;;  l               2    0        int 
 25452 ;; Return value:  Size  Location     Type
 25453 ;;                  2  [STACK] int 
 25454 ;; Registers used:
 25455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 25456 ;; Tracked objects:
 25457 ;;		On entry : 0/0
 25458 ;;		On exit  : 0/0
 25459 ;;		Unchanged: 0/0
 25460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25465 ;;Total ram usage:        0 bytes
 25466 ;; Hardware stack levels used:    1
 25467 ;; Hardware stack levels required when called:   20
 25468 ;; This function calls:
 25469 ;;		_pad
 25470 ;; This function is called by:
 25471 ;;		_vfpfcnvrt
 25472 ;; This function uses a reentrant model
 25473 ;;
 25474                           
 25475                           	psect	text92
 25476  01BC92                     __ptext92:
 25477                           	opt callstack 0
 25478  01BC92                     _ctoa:
 25479                           	opt callstack 0
 25480                           
 25481                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25482  01BC92  52E6               	movf	postinc1,f,c
 25483  01BC94  52E6               	movf	postinc1,f,c
 25484                           
 25485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 25486                           
 25487                           ;incstack = 0
 25488 ;; hardware stack exceeded
 25489  01BC96  503A               	movf	_width^0,w,c
 25490  01BC98  103B               	iorwf	(_width+1)^0,w,c
 25491  01BC9A  A4D8               	btfss	status,2,c
 25492  01BC9C  D009               	goto	l13260
 25493                           
 25494                           ;stkvar	_w @ sp[(-2)+0]
 25495  01BC9E  0EFE               	movlw	-2
 25496  01BCA0  0060  F0EB  FFE3   	movff	_width,plusw1
 25497  01BCA6  0EFF               	movlw	-1
 25498  01BCA8  0060  F0EF  FFE3   	movff	_width+1,plusw1
 25499  01BCAE  D016               	goto	l13262
 25500  01BCB0                     l13260:
 25501  01BCB0  0EFF               	movlw	255
 25502  01BCB2  6E0B               	movwf	(btemp+10)^0,c
 25503  01BCB4  0EFF               	movlw	255
 25504  01BCB6  6E0C               	movwf	(btemp+11)^0,c
 25505  01BCB8  0060  F0E8  F009   	movff	_width,btemp+8
 25506  01BCBE  0060  F0EC  F00A   	movff	_width+1,btemp+9
 25507  01BCC4  500B               	movf	(btemp+10)^0,w,c
 25508  01BCC6  2609               	addwf	(btemp+8)^0,f,c
 25509  01BCC8  500C               	movf	(btemp+11)^0,w,c
 25510  01BCCA  220A               	addwfc	(btemp+9)^0,f,c
 25511                           
 25512                           ;stkvar	_w @ sp[(-2)+0]
 25513  01BCCC  0EFE               	movlw	-2
 25514  01BCCE  0060  F027  FFE3   	movff	btemp+8,plusw1
 25515  01BCD4  0EFF               	movlw	-1
 25516  01BCD6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25517  01BCDC                     l13262:
 25518                           
 25519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 25520                           ;stkvar	_c @ sp[(-2)+-3]
 25521  01BCDC  0EFB               	movlw	-5
 25522  01BCDE  006F FF8C  F394    	movff	plusw1,_dbuf
 25523                           
 25524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 25525  01BCE4  0103               	movlb	3	; () banked
 25526  01BCE6  6B95               	clrf	(_dbuf+1)& (0+255),b
 25527                           
 25528                           ; BSR set to: 3
 25529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 25530                           ;stkvar	_w @ sp[(-2)+0]
 25531  01BCE8  0EFE               	movlw	-2
 25532  01BCEA  006F FF8F FFE6     	movff	plusw1,postinc1
 25533  01BCF0  006F FF8F FFE6     	movff	plusw1,postinc1
 25534  01BCF6  0E94               	movlw	low _dbuf
 25535  01BCF8  6EE6               	movwf	postinc1,c
 25536  01BCFA  0E03               	movlw	high _dbuf
 25537  01BCFC  6EE6               	movwf	postinc1,c
 25538                           
 25539                           ;stkvar	_fp @ sp[(-6)+-2]
 25540  01BCFE  0EF8               	movlw	-8
 25541  01BD00  006F FF8F FFE6     	movff	plusw1,postinc1
 25542  01BD06  006F FF8F FFE6     	movff	plusw1,postinc1
 25543  01BD0C  EC82  F0D4         	call	_pad	;wreg free
 25544                           
 25545                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 25546  01BD10  0EFB               	movlw	251
 25547  01BD12  26E1               	addwf	fsr1l,f,c
 25548  01BD14  0EFF               	movlw	255
 25549  01BD16  22E2               	addwfc	fsr1h,f,c
 25550  01BD18  0012               	return		;funcret
 25551  01BD1A                     __end_of_ctoa:
 25552                           	opt callstack 0
 25553                           
 25554 ;; *************** function _pad *****************
 25555 ;; Defined at:
 25556 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25557 ;; Parameters:    Size  Location     Type
 25558 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25559 ;;		 -> f(6), NULL(0), 
 25560 ;;  buf             2  [STACK] PTR unsigned char 
 25561 ;;		 -> dbuf(80), 
 25562 ;;  p               2  [STACK] int 
 25563 ;; Auto vars:     Size  Location     Type
 25564 ;;  w               2  [STACK] int 
 25565 ;;  i               2  [STACK] int 
 25566 ;; Return value:  Size  Location     Type
 25567 ;;                  2  [STACK] int 
 25568 ;; Registers used:
 25569 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 25570 ;; Tracked objects:
 25571 ;;		On entry : 0/3
 25572 ;;		On exit  : 0/0
 25573 ;;		Unchanged: 0/0
 25574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25579 ;;Total ram usage:        0 bytes
 25580 ;; Hardware stack levels used:    1
 25581 ;; Hardware stack levels required when called:   19
 25582 ;; This function calls:
 25583 ;;		_fputc
 25584 ;;		_fputs
 25585 ;;		_strlen
 25586 ;; This function is called by:
 25587 ;;		_ctoa
 25588 ;;		_dtoa
 25589 ;;		_efgtoa
 25590 ;;		_utoa
 25591 ;;		_xtoa
 25592 ;; This function uses a reentrant model
 25593 ;;
 25594                           
 25595                           	psect	text93
 25596  01A904                     __ptext93:
 25597                           	opt callstack 0
 25598  01A904                     _pad:
 25599                           	opt callstack 0
 25600                           
 25601                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25602  01A904  52E6               	movf	postinc1,f,c
 25603  01A906  52E6               	movf	postinc1,f,c
 25604  01A908  52E6               	movf	postinc1,f,c
 25605  01A90A  52E6               	movf	postinc1,f,c
 25606                           
 25607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 25608                           
 25609                           ;incstack = 0
 25610 ;; hardware stack exceeded
 25611  01A90C  A03E               	btfss	_flags^0,0,c
 25612  01A90E  D010               	goto	l13222
 25613                           
 25614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 25615                           ;stkvar	_fp @ sp[(-4)+-2]
 25616  01A910  0EFA               	movlw	-6
 25617  01A912  006F FF8F FFE6     	movff	plusw1,postinc1
 25618  01A918  006F FF8F FFE6     	movff	plusw1,postinc1
 25619                           
 25620                           ;stkvar	_buf @ sp[(-6)+-4]
 25621  01A91E  0EF6               	movlw	-10
 25622  01A920  006F FF8F FFE6     	movff	plusw1,postinc1
 25623  01A926  006F FF8F FFE6     	movff	plusw1,postinc1
 25624  01A92C  ECD9  F0DC         	call	_fputs	;wreg free
 25625  01A930                     l13222:
 25626                           
 25627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 25628                           ;stkvar	_p @ sp[(-4)+-6]
 25629  01A930  0EF7               	movlw	-9
 25630  01A932  BEE3               	btfsc	plusw1,7,c
 25631  01A934  D011               	goto	l13226
 25632                           
 25633                           ;stkvar	_p @ sp[(-4)+-6]
 25634                           ;stkvar	_w @ sp[(-4)+0]
 25635  01A936  0EF6               	movlw	-10
 25636  01A938  006F FF8C  F001    	movff	plusw1,btemp
 25637  01A93E  0EFC               	movlw	-4
 25638  01A940  0060  F007  FFE3   	movff	btemp,plusw1
 25639  01A946  0EF7               	movlw	-9
 25640  01A948  006F FF8C  F001    	movff	plusw1,btemp
 25641  01A94E  0EFD               	movlw	-3
 25642  01A950  0060  F007  FFE3   	movff	btemp,plusw1
 25643  01A956  D004               	goto	l2422
 25644  01A958                     l13226:
 25645                           
 25646                           ;stkvar	_w @ sp[(-4)+0]
 25647  01A958  0EFC               	movlw	-4
 25648  01A95A  6AE3               	clrf	plusw1,c
 25649  01A95C  0EFD               	movlw	-3
 25650  01A95E  6AE3               	clrf	plusw1,c
 25651  01A960                     l2422:
 25652                           
 25653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 25654                           ;stkvar	_i @ sp[(-4)+2]
 25655  01A960  0EFE               	movlw	-2
 25656  01A962  6AE3               	clrf	plusw1,c
 25657  01A964  0EFF               	movlw	-1
 25658  01A966  6AE3               	clrf	plusw1,c
 25659                           
 25660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 25661  01A968  D01E               	goto	l13232
 25662  01A96A                     l13228:
 25663                           
 25664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 25665                           ;stkvar	_fp @ sp[(-4)+-2]
 25666  01A96A  0EFA               	movlw	-6
 25667  01A96C  006F FF8F FFE6     	movff	plusw1,postinc1
 25668  01A972  006F FF8F FFE6     	movff	plusw1,postinc1
 25669  01A978  0E20               	movlw	32
 25670  01A97A  6EE6               	movwf	postinc1,c
 25671  01A97C  0E00               	movlw	0
 25672  01A97E  6EE6               	movwf	postinc1,c
 25673  01A980  ECBA  F0D1         	call	_fputc	;wreg free
 25674                           
 25675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 25676                           ;stkvar	_i @ sp[(-4)+2]
 25677  01A984  0EFE               	movlw	-2
 25678  01A986  50E3               	movf	plusw1,w,c
 25679  01A988  0F01               	addlw	1
 25680  01A98A  6E01               	movwf	btemp^0,c
 25681  01A98C  0EFE               	movlw	-2
 25682  01A98E  0060  F007  FFE3   	movff	btemp,plusw1
 25683  01A994  6A01               	clrf	btemp^0,c
 25684  01A996  0EFF               	movlw	-1
 25685  01A998  50E3               	movf	plusw1,w,c
 25686  01A99A  2001               	addwfc	btemp^0,w,c
 25687  01A99C  6E01               	movwf	btemp^0,c
 25688  01A99E  0EFF               	movlw	-1
 25689  01A9A0  0060  F007  FFE3   	movff	btemp,plusw1
 25690  01A9A6                     l13232:
 25691                           
 25692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 25693                           ;stkvar	_w @ sp[(-4)+0]
 25694                           ;stkvar	_i @ sp[(-4)+2]
 25695  01A9A6  50E1               	movf	fsr1l,w,c
 25696  01A9A8  0FFE               	addlw	-2
 25697  01A9AA  6ED9               	movwf	fsr2l,c
 25698  01A9AC  50E2               	movf	fsr1h,w,c
 25699  01A9AE  6EDA               	movwf	fsr2h,c
 25700  01A9B0  0EFF               	movlw	255
 25701  01A9B2  22DA               	addwfc	fsr2h,f,c
 25702  01A9B4  0EFC               	movlw	-4
 25703  01A9B6  50E3               	movf	plusw1,w,c
 25704  01A9B8  5CDE               	subwf	postinc2,w,c
 25705  01A9BA  50DE               	movf	postinc2,w,c
 25706  01A9BC  0A80               	xorlw	128
 25707  01A9BE  6E01               	movwf	btemp^0,c
 25708  01A9C0  0EFD               	movlw	-3
 25709  01A9C2  50E3               	movf	plusw1,w,c
 25710  01A9C4  0A80               	xorlw	128
 25711  01A9C6  5801               	subwfb	btemp^0,w,c
 25712  01A9C8  A0D8               	btfss	status,0,c
 25713  01A9CA  D7CF               	goto	l13228
 25714                           
 25715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 25716  01A9CC  B03E               	btfsc	_flags^0,0,c
 25717  01A9CE  D010               	goto	l13236
 25718                           
 25719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 25720                           ;stkvar	_fp @ sp[(-4)+-2]
 25721  01A9D0  0EFA               	movlw	-6
 25722  01A9D2  006F FF8F FFE6     	movff	plusw1,postinc1
 25723  01A9D8  006F FF8F FFE6     	movff	plusw1,postinc1
 25724                           
 25725                           ;stkvar	_buf @ sp[(-6)+-4]
 25726  01A9DE  0EF6               	movlw	-10
 25727  01A9E0  006F FF8F FFE6     	movff	plusw1,postinc1
 25728  01A9E6  006F FF8F FFE6     	movff	plusw1,postinc1
 25729  01A9EC  ECD9  F0DC         	call	_fputs	;wreg free
 25730  01A9F0                     l13236:
 25731                           
 25732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 25733                           ;stkvar	_w @ sp[(-4)+0]
 25734                           ;stkvar	_buf @ sp[(-4)+-4]
 25735  01A9F0  0EF8               	movlw	-8
 25736  01A9F2  006F FF8F FFE6     	movff	plusw1,postinc1
 25737  01A9F8  006F FF8F FFE6     	movff	plusw1,postinc1
 25738  01A9FE  EC88  F0DC         	call	_strlen	;wreg free
 25739  01AA02  0EFC               	movlw	-4
 25740  01AA04  50E3               	movf	plusw1,w,c
 25741  01AA06  2601               	addwf	btemp^0,f,c
 25742  01AA08  0EFD               	movlw	-3
 25743  01AA0A  50E3               	movf	plusw1,w,c
 25744  01AA0C  2202               	addwfc	(btemp+1)^0,f,c
 25745                           
 25746                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 25747  01AA0E  0EF6               	movlw	246
 25748  01AA10  26E1               	addwf	fsr1l,f,c
 25749  01AA12  0EFF               	movlw	255
 25750  01AA14  22E2               	addwfc	fsr1h,f,c
 25751  01AA16  0012               	return		;funcret
 25752  01AA18                     __end_of_pad:
 25753                           	opt callstack 0
 25754                           
 25755 ;; *************** function _strlen *****************
 25756 ;; Defined at:
 25757 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 25758 ;; Parameters:    Size  Location     Type
 25759 ;;  s               2  [STACK] PTR const unsigned char 
 25760 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 25761 ;;		 -> spin(120), STR_65(9), STR_64(12), D.lcd(480), 
 25762 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 25763 ;;		 -> V(192), 
 25764 ;; Auto vars:     Size  Location     Type
 25765 ;;  a               2  [STACK] PTR const unsigned char 
 25766 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 25767 ;;		 -> spin(120), STR_65(9), STR_64(12), D.lcd(480), 
 25768 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 25769 ;;		 -> V(192), 
 25770 ;; Return value:  Size  Location     Type
 25771 ;;                  2  [STACK] unsigned int 
 25772 ;; Registers used:
 25773 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 25774 ;; Tracked objects:
 25775 ;;		On entry : 0/0
 25776 ;;		On exit  : 0/0
 25777 ;;		Unchanged: 0/0
 25778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25783 ;;Total ram usage:        0 bytes
 25784 ;; Hardware stack levels used:    1
 25785 ;; Hardware stack levels required when called:   15
 25786 ;; This function calls:
 25787 ;;		Nothing
 25788 ;; This function is called by:
 25789 ;;		_eaDogM_WriteString
 25790 ;;		_spinners
 25791 ;;		_calc_bsoc
 25792 ;;		_pad
 25793 ;;		_stoa
 25794 ;; This function uses a reentrant model
 25795 ;;
 25796                           
 25797                           	psect	text94
 25798  01B910                     __ptext94:
 25799                           	opt callstack 0
 25800  01B910                     _strlen:
 25801                           	opt callstack 0
 25802                           
 25803                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25804  01B910  52E6               	movf	postinc1,f,c
 25805  01B912  52E6               	movf	postinc1,f,c
 25806                           
 25807                           ;stkvar	_s @ sp[(-2)+-2]
 25808                           
 25809                           ;incstack = 0
 25810 ;; hardware stack exceeded
 25811  01B914  0EFC               	movlw	-4
 25812  01B916  006F FF8C  F00B    	movff	plusw1,btemp+10
 25813  01B91C  0EFD               	movlw	-3
 25814  01B91E  006F FF8C  F00C    	movff	plusw1,btemp+11
 25815                           
 25816                           ;stkvar	_a @ sp[(-2)+0]
 25817  01B924  0EFF               	movlw	-1
 25818  01B926  0060  F033  FFE3   	movff	btemp+11,plusw1
 25819  01B92C  0EFE               	movlw	-2
 25820  01B92E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25821  01B934  D011               	goto	l13162
 25822  01B936                     l13160:
 25823                           
 25824                           ;stkvar	_s @ sp[(-2)+-2]
 25825  01B936  0EFC               	movlw	-4
 25826  01B938  50E3               	movf	plusw1,w,c
 25827  01B93A  0F01               	addlw	1
 25828  01B93C  6E01               	movwf	btemp^0,c
 25829  01B93E  0EFC               	movlw	-4
 25830  01B940  0060  F007  FFE3   	movff	btemp,plusw1
 25831  01B946  6A01               	clrf	btemp^0,c
 25832  01B948  0EFD               	movlw	-3
 25833  01B94A  50E3               	movf	plusw1,w,c
 25834  01B94C  2001               	addwfc	btemp^0,w,c
 25835  01B94E  6E01               	movwf	btemp^0,c
 25836  01B950  0EFD               	movlw	-3
 25837  01B952  0060  F007  FFE3   	movff	btemp,plusw1
 25838  01B958                     l13162:
 25839                           
 25840                           ;stkvar	_s @ sp[(-2)+-2]
 25841  01B958  0EFC               	movlw	-4
 25842  01B95A  006F FF8F FFF6     	movff	plusw1,tblptrl
 25843  01B960  0EFD               	movlw	-3
 25844  01B962  006F FF8F FFF7     	movff	plusw1,tblptrh
 25845  01B968  0E00               	movlw	low (__mediumconst shr (0+16))
 25846  01B96A  6EF8               	movwf	tblptru,c
 25847  01B96C  0E1F               	movlw	(high __ramtop+-1)
 25848  01B96E  64F7               	cpfsgt	tblptrh,c
 25849  01B970  D003               	bra	u11927
 25850  01B972  0008               	tblrd		*
 25851  01B974  50F5               	movf	tablat,w,c
 25852  01B976  D007               	bra	u11920
 25853  01B978                     u11927:
 25854  01B978  006F FFDB FFE9     	movff	tblptrl,fsr0l
 25855  01B97E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 25856  01B984  50EF               	movf	indf0,w,c
 25857  01B986                     u11920:
 25858  01B986  0900               	iorlw	0
 25859  01B988  A4D8               	btfss	status,2,c
 25860  01B98A  D7D5               	goto	l13160
 25861                           
 25862                           ;stkvar	_a @ sp[(-2)+0]
 25863                           ;stkvar	_s @ sp[(-2)+-2]
 25864  01B98C  0EFC               	movlw	-4
 25865  01B98E  006F FF8C  F001    	movff	plusw1,btemp
 25866  01B994  0EFD               	movlw	-3
 25867  01B996  006F FF8C  F002    	movff	plusw1,btemp+1
 25868  01B99C  0EFE               	movlw	-2
 25869  01B99E  50E3               	movf	plusw1,w,c
 25870  01B9A0  5E01               	subwf	btemp^0,f,c
 25871  01B9A2  0EFF               	movlw	-1
 25872  01B9A4  50E3               	movf	plusw1,w,c
 25873  01B9A6  5A02               	subwfb	(btemp+1)^0,f,c
 25874                           
 25875                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 25876  01B9A8  52E5               	movf	postdec1,f,c
 25877  01B9AA  52E5               	movf	postdec1,f,c
 25878  01B9AC  52E5               	movf	postdec1,f,c
 25879  01B9AE  52E5               	movf	postdec1,f,c
 25880  01B9B0  0012               	return		;funcret
 25881  01B9B2                     __end_of_strlen:
 25882                           	opt callstack 0
 25883                           
 25884 ;; *************** function _fputs *****************
 25885 ;; Defined at:
 25886 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 25887 ;; Parameters:    Size  Location     Type
 25888 ;;  s               2  [STACK] PTR const unsigned char 
 25889 ;;		 -> dbuf(80), 
 25890 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25891 ;;		 -> f(6), NULL(0), 
 25892 ;; Auto vars:     Size  Location     Type
 25893 ;;  i               2  [STACK] int 
 25894 ;;  c               1  [STACK] unsigned char 
 25895 ;; Return value:  Size  Location     Type
 25896 ;;                  2  [STACK] int 
 25897 ;; Registers used:
 25898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 25899 ;; Tracked objects:
 25900 ;;		On entry : 0/3
 25901 ;;		On exit  : 0/0
 25902 ;;		Unchanged: 0/0
 25903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25908 ;;Total ram usage:        0 bytes
 25909 ;; Hardware stack levels used:    1
 25910 ;; Hardware stack levels required when called:   18
 25911 ;; This function calls:
 25912 ;;		_fputc
 25913 ;; This function is called by:
 25914 ;;		_pad
 25915 ;; This function uses a reentrant model
 25916 ;;
 25917                           
 25918                           	psect	text95
 25919  01B9B2                     __ptext95:
 25920                           	opt callstack 0
 25921  01B9B2                     _fputs:
 25922                           	opt callstack 0
 25923                           
 25924                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25925  01B9B2  52E6               	movf	postinc1,f,c
 25926  01B9B4  52E6               	movf	postinc1,f,c
 25927  01B9B6  52E6               	movf	postinc1,f,c
 25928                           
 25929                           ;stkvar	_i @ sp[(-3)+0]
 25930                           
 25931                           ;incstack = 0
 25932 ;; hardware stack exceeded
 25933  01B9B8  0EFD               	movlw	-3
 25934  01B9BA  6AE3               	clrf	plusw1,c
 25935  01B9BC  0EFE               	movlw	-2
 25936  01B9BE  6AE3               	clrf	plusw1,c
 25937  01B9C0  D01F               	goto	l13174
 25938  01B9C2                     l13170:
 25939                           
 25940                           ;stkvar	_fp @ sp[(-3)+-4]
 25941  01B9C2  0EF9               	movlw	-7
 25942  01B9C4  006F FF8F FFE6     	movff	plusw1,postinc1
 25943  01B9CA  006F FF8F FFE6     	movff	plusw1,postinc1
 25944                           
 25945                           ;stkvar	_c @ sp[(-5)+2]
 25946  01B9D0  0EFD               	movlw	-3
 25947  01B9D2  50E3               	movf	plusw1,w,c
 25948  01B9D4  6EE6               	movwf	postinc1,c
 25949  01B9D6  0E00               	movlw	0
 25950  01B9D8  6EE6               	movwf	postinc1,c
 25951  01B9DA  ECBA  F0D1         	call	_fputc	;wreg free
 25952                           
 25953                           ;stkvar	_i @ sp[(-3)+0]
 25954  01B9DE  0EFD               	movlw	-3
 25955  01B9E0  50E3               	movf	plusw1,w,c
 25956  01B9E2  0F01               	addlw	1
 25957  01B9E4  6E01               	movwf	btemp^0,c
 25958  01B9E6  0EFD               	movlw	-3
 25959  01B9E8  0060  F007  FFE3   	movff	btemp,plusw1
 25960  01B9EE  6A01               	clrf	btemp^0,c
 25961  01B9F0  0EFE               	movlw	-2
 25962  01B9F2  50E3               	movf	plusw1,w,c
 25963  01B9F4  2001               	addwfc	btemp^0,w,c
 25964  01B9F6  6E01               	movwf	btemp^0,c
 25965  01B9F8  0EFE               	movlw	-2
 25966  01B9FA  0060  F007  FFE3   	movff	btemp,plusw1
 25967  01BA00                     l13174:
 25968                           
 25969                           ;stkvar	_i @ sp[(-3)+0]
 25970  01BA00  0EFD               	movlw	-3
 25971  01BA02  006F FF8C  F00B    	movff	plusw1,btemp+10
 25972  01BA08  0EFE               	movlw	-2
 25973  01BA0A  006F FF8C  F00C    	movff	plusw1,btemp+11
 25974                           
 25975                           ;stkvar	_s @ sp[(-3)+-2]
 25976  01BA10  0EFB               	movlw	-5
 25977  01BA12  006F FF8C  F009    	movff	plusw1,btemp+8
 25978  01BA18  0EFC               	movlw	-4
 25979  01BA1A  006F FF8C  F00A    	movff	plusw1,btemp+9
 25980  01BA20  500B               	movf	(btemp+10)^0,w,c
 25981  01BA22  2409               	addwf	(btemp+8)^0,w,c
 25982  01BA24  6ED9               	movwf	fsr2l,c
 25983  01BA26  500C               	movf	(btemp+11)^0,w,c
 25984  01BA28  200A               	addwfc	(btemp+9)^0,w,c
 25985  01BA2A  6EDA               	movwf	fsr2h,c
 25986  01BA2C  50DF               	movf	indf2,w,c
 25987  01BA2E  6E0C               	movwf	(btemp+11)^0,c
 25988                           
 25989                           ;stkvar	_c @ sp[(-3)+2]
 25990  01BA30  0EFF               	movlw	-1
 25991  01BA32  0060  F033  FFE3   	movff	btemp+11,plusw1
 25992  01BA38  0EFF               	movlw	-1
 25993  01BA3A  50E3               	movf	plusw1,w,c
 25994  01BA3C  A4D8               	btfss	status,2,c
 25995  01BA3E  D7C1               	goto	l13170
 25996                           
 25997                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 25998  01BA40  0EF9               	movlw	249
 25999  01BA42  26E1               	addwf	fsr1l,f,c
 26000  01BA44  0EFF               	movlw	255
 26001  01BA46  22E2               	addwfc	fsr1h,f,c
 26002  01BA48  0012               	return		;funcret
 26003  01BA4A                     __end_of_fputs:
 26004                           	opt callstack 0
 26005                           
 26006 ;; *************** function _fputc *****************
 26007 ;; Defined at:
 26008 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 26009 ;; Parameters:    Size  Location     Type
 26010 ;;  c               2  [STACK] int 
 26011 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26012 ;;		 -> f(6), NULL(0), 
 26013 ;; Auto vars:     Size  Location     Type
 26014 ;;		None
 26015 ;; Return value:  Size  Location     Type
 26016 ;;                  2  [STACK] int 
 26017 ;; Registers used:
 26018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 26019 ;; Tracked objects:
 26020 ;;		On entry : 0/0
 26021 ;;		On exit  : 0/0
 26022 ;;		Unchanged: 0/0
 26023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26028 ;;Total ram usage:        0 bytes
 26029 ;; Hardware stack levels used:    1
 26030 ;; Hardware stack levels required when called:   17
 26031 ;; This function calls:
 26032 ;;		_putch
 26033 ;; This function is called by:
 26034 ;;		_pad
 26035 ;;		_stoa
 26036 ;;		_vfpfcnvrt
 26037 ;;		_fputs
 26038 ;; This function uses a reentrant model
 26039 ;;
 26040                           
 26041                           	psect	text96
 26042  01A374                     __ptext96:
 26043                           	opt callstack 0
 26044  01A374                     _fputc:
 26045                           	opt callstack 0
 26046                           
 26047                           ;stkvar	_fp @ sp[(0)+-4]
 26048                           
 26049                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26050                           ;incstack = 0
 26051 ;; hardware stack exceeded
 26052  01A374  0EFC               	movlw	-4
 26053  01A376  006F FF8C  F001    	movff	plusw1,btemp
 26054  01A37C  0EFD               	movlw	-3
 26055  01A37E  50E3               	movf	plusw1,w,c
 26056  01A380  1001               	iorwf	btemp^0,w,c
 26057  01A382  B4D8               	btfsc	status,2,c
 26058  01A384  D009               	goto	u11890
 26059                           
 26060                           ;stkvar	_fp @ sp[(0)+-4]
 26061  01A386  0EFC               	movlw	-4
 26062  01A388  006F FF8C  F001    	movff	plusw1,btemp
 26063  01A38E  0EFD               	movlw	-3
 26064  01A390  50E3               	movf	plusw1,w,c
 26065  01A392  1001               	iorwf	btemp^0,w,c
 26066  01A394  A4D8               	btfss	status,2,c
 26067  01A396  D006               	goto	l13148
 26068  01A398                     u11890:
 26069                           
 26070                           ;stkvar	_c @ sp[(0)+-2]
 26071  01A398  0EFE               	movlw	-2
 26072  01A39A  50E3               	movf	plusw1,w,c
 26073  01A39C  6EE6               	movwf	postinc1,c
 26074  01A39E  EC8C  F0E9         	call	_putch	;wreg free
 26075  01A3A2  D075               	goto	l3468
 26076  01A3A4                     l13148:
 26077                           
 26078                           ;stkvar	_fp @ sp[(0)+-4]
 26079  01A3A4  0EFC               	movlw	-4
 26080  01A3A6  006F FF8C  F00B    	movff	plusw1,btemp+10
 26081  01A3AC  0EFD               	movlw	-3
 26082  01A3AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 26083  01A3B4  0E04               	movlw	4
 26084  01A3B6  240B               	addwf	(btemp+10)^0,w,c
 26085  01A3B8  6ED9               	movwf	fsr2l,c
 26086  01A3BA  0E00               	movlw	0
 26087  01A3BC  200C               	addwfc	(btemp+11)^0,w,c
 26088  01A3BE  6EDA               	movwf	fsr2h,c
 26089  01A3C0  50DE               	movf	postinc2,w,c
 26090  01A3C2  10DE               	iorwf	postinc2,w,c
 26091  01A3C4  B4D8               	btfsc	status,2,c
 26092  01A3C6  D026               	goto	u11910
 26093                           
 26094                           ;stkvar	_fp @ sp[(0)+-4]
 26095  01A3C8  0EFC               	movlw	-4
 26096  01A3CA  006F FF8C  F00B    	movff	plusw1,btemp+10
 26097  01A3D0  0EFD               	movlw	-3
 26098  01A3D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 26099  01A3D8  0E04               	movlw	4
 26100  01A3DA  240B               	addwf	(btemp+10)^0,w,c
 26101  01A3DC  6ED9               	movwf	fsr2l,c
 26102  01A3DE  0E00               	movlw	0
 26103  01A3E0  200C               	addwfc	(btemp+11)^0,w,c
 26104  01A3E2  6EDA               	movwf	fsr2h,c
 26105                           
 26106                           ;stkvar	_fp @ sp[(0)+-4]
 26107  01A3E4  0EFC               	movlw	-4
 26108  01A3E6  006F FF8C  F00B    	movff	plusw1,btemp+10
 26109  01A3EC  0EFD               	movlw	-3
 26110  01A3EE  006F FF8C  F00C    	movff	plusw1,btemp+11
 26111  01A3F4  0E02               	movlw	2
 26112  01A3F6  240B               	addwf	(btemp+10)^0,w,c
 26113  01A3F8  6EE9               	movwf	fsr0l,c
 26114  01A3FA  0E00               	movlw	0
 26115  01A3FC  200C               	addwfc	(btemp+11)^0,w,c
 26116  01A3FE  6EEA               	movwf	fsr0h,c
 26117  01A400  50DE               	movf	postinc2,w,c
 26118  01A402  5CEE               	subwf	postinc0,w,c
 26119  01A404  50EE               	movf	postinc0,w,c
 26120  01A406  0A80               	xorlw	128
 26121  01A408  6E01               	movwf	btemp^0,c
 26122  01A40A  50DE               	movf	postinc2,w,c
 26123  01A40C  0A80               	xorlw	128
 26124  01A40E  5801               	subwfb	btemp^0,w,c
 26125  01A410  B0D8               	btfsc	status,0,c
 26126  01A412  D03D               	goto	l3468
 26127  01A414                     u11910:
 26128                           
 26129                           ;stkvar	_c @ sp[(0)+-2]
 26130                           ;stkvar	_fp @ sp[(0)+-4]
 26131  01A414  0EFC               	movlw	-4
 26132  01A416  006F FF8C  F00B    	movff	plusw1,btemp+10
 26133  01A41C  0EFD               	movlw	-3
 26134  01A41E  006F FF8C  F00C    	movff	plusw1,btemp+11
 26135  01A424  0E02               	movlw	2
 26136  01A426  240B               	addwf	(btemp+10)^0,w,c
 26137  01A428  6ED9               	movwf	fsr2l,c
 26138  01A42A  0E00               	movlw	0
 26139  01A42C  200C               	addwfc	(btemp+11)^0,w,c
 26140  01A42E  6EDA               	movwf	fsr2h,c
 26141  01A430  006F FF78  F00B    	movff	postinc2,btemp+10
 26142  01A436  006F FF74  F00C    	movff	postdec2,btemp+11
 26143                           
 26144                           ;stkvar	_fp @ sp[(0)+-4]
 26145  01A43C  0EFC               	movlw	-4
 26146  01A43E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26147  01A444  0EFD               	movlw	-3
 26148  01A446  006F FF8F FFDA     	movff	plusw1,fsr2h
 26149  01A44C  006F FF78  F009    	movff	postinc2,btemp+8
 26150  01A452  006F FF74  F00A    	movff	postdec2,btemp+9
 26151  01A458  500B               	movf	(btemp+10)^0,w,c
 26152  01A45A  2409               	addwf	(btemp+8)^0,w,c
 26153  01A45C  6ED9               	movwf	fsr2l,c
 26154  01A45E  500C               	movf	(btemp+11)^0,w,c
 26155  01A460  200A               	addwfc	(btemp+9)^0,w,c
 26156  01A462  6EDA               	movwf	fsr2h,c
 26157  01A464  0EFE               	movlw	-2
 26158  01A466  006F FF8F FFDF     	movff	plusw1,indf2
 26159                           
 26160                           ;stkvar	_fp @ sp[(0)+-4]
 26161  01A46C  0EFC               	movlw	-4
 26162  01A46E  006F FF8C  F00B    	movff	plusw1,btemp+10
 26163  01A474  0EFD               	movlw	-3
 26164  01A476  006F FF8C  F00C    	movff	plusw1,btemp+11
 26165  01A47C  0E02               	movlw	2
 26166  01A47E  240B               	addwf	(btemp+10)^0,w,c
 26167  01A480  6ED9               	movwf	fsr2l,c
 26168  01A482  0E00               	movlw	0
 26169  01A484  200C               	addwfc	(btemp+11)^0,w,c
 26170  01A486  6EDA               	movwf	fsr2h,c
 26171  01A488  2ADE               	incf	postinc2,f,c
 26172  01A48A  0E00               	movlw	0
 26173  01A48C  22DD               	addwfc	postdec2,f,c
 26174  01A48E                     l3468:
 26175                           
 26176                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 26177  01A48E  52E5               	movf	postdec1,f,c
 26178  01A490  52E5               	movf	postdec1,f,c
 26179  01A492  52E5               	movf	postdec1,f,c
 26180  01A494  52E5               	movf	postdec1,f,c
 26181  01A496  0012               	return		;funcret
 26182  01A498                     __end_of_fputc:
 26183                           	opt callstack 0
 26184                           
 26185 ;; *************** function _putch *****************
 26186 ;; Defined at:
 26187 ;;		line 421 in file "eadog.c"
 26188 ;; Parameters:    Size  Location     Type
 26189 ;;  c               1  [STACK] unsigned char 
 26190 ;; Auto vars:     Size  Location     Type
 26191 ;;		None
 26192 ;; Return value:  Size  Location     Type
 26193 ;;                  1  [STACK] void 
 26194 ;; Registers used:
 26195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 26196 ;; Tracked objects:
 26197 ;;		On entry : 0/0
 26198 ;;		On exit  : 0/0
 26199 ;;		Unchanged: 0/0
 26200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26205 ;;Total ram usage:        0 bytes
 26206 ;; Hardware stack levels used:    1
 26207 ;; Hardware stack levels required when called:   16
 26208 ;; This function calls:
 26209 ;;		_ringBufS_put_dma
 26210 ;; This function is called by:
 26211 ;;		_fputc
 26212 ;; This function uses a reentrant model
 26213 ;;
 26214                           
 26215                           	psect	text97
 26216  01D318                     __ptext97:
 26217                           	opt callstack 0
 26218  01D318                     _putch:
 26219                           	opt callstack 0
 26220                           
 26221                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 26222                           ;stkvar	_c @ sp[(0)+-1]
 26223                           
 26224                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26225                           ;incstack = 0
 26226 ;; hardware stack exceeded
 26227  01D318  0EFF               	movlw	-1
 26228  01D31A  50E3               	movf	plusw1,w,c
 26229  01D31C  6EE6               	movwf	postinc1,c
 26230  01D31E  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 26231  01D324  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 26232  01D32A  EC8C  F0DB         	call	_ringBufS_put_dma	;wreg free
 26233                           
 26234                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 26235  01D32E  52E5               	movf	postdec1,f,c
 26236  01D330  0012               	return		;funcret
 26237  01D332                     __end_of_putch:
 26238                           	opt callstack 0
 26239                           
 26240 ;; *************** function _ringBufS_put_dma *****************
 26241 ;; Defined at:
 26242 ;;		line 67 in file "ringbufs.c"
 26243 ;; Parameters:    Size  Location     Type
 26244 ;;  _this           2  [STACK] PTR struct ringBufS_t
 26245 ;;		 -> ring_buf1(67), 
 26246 ;;  c               1  [STACK] const unsigned char 
 26247 ;; Auto vars:     Size  Location     Type
 26248 ;;		None
 26249 ;; Return value:  Size  Location     Type
 26250 ;;                  1  [STACK] void 
 26251 ;; Registers used:
 26252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 26253 ;; Tracked objects:
 26254 ;;		On entry : 0/0
 26255 ;;		On exit  : 0/0
 26256 ;;		Unchanged: 0/0
 26257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26262 ;;Total ram usage:        0 bytes
 26263 ;; Hardware stack levels used:    1
 26264 ;; Hardware stack levels required when called:   15
 26265 ;; This function calls:
 26266 ;;		Nothing
 26267 ;; This function is called by:
 26268 ;;		_putch
 26269 ;; This function uses a reentrant model
 26270 ;;
 26271                           
 26272                           	psect	text98
 26273  01B718                     __ptext98:
 26274                           	opt callstack 0
 26275  01B718                     _ringBufS_put_dma:
 26276                           	opt callstack 0
 26277                           
 26278                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 26279                           ;stkvar	__this @ sp[(0)+-2]
 26280                           
 26281                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26282                           ;incstack = 0
 26283 ;; hardware stack exceeded
 26284  01B718  0EFE               	movlw	-2
 26285  01B71A  006F FF8C  F00B    	movff	plusw1,btemp+10
 26286  01B720  0EFF               	movlw	-1
 26287  01B722  006F FF8C  F00C    	movff	plusw1,btemp+11
 26288  01B728  0E42               	movlw	66
 26289  01B72A  240B               	addwf	(btemp+10)^0,w,c
 26290  01B72C  6ED9               	movwf	fsr2l,c
 26291  01B72E  0E00               	movlw	0
 26292  01B730  200C               	addwfc	(btemp+11)^0,w,c
 26293  01B732  6EDA               	movwf	fsr2h,c
 26294  01B734  0E40               	movlw	64
 26295  01B736  60DF               	cpfslt	indf2,c
 26296  01B738  D040               	goto	l1718
 26297                           
 26298                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 26299                           ;stkvar	_c @ sp[(0)+-3]
 26300                           ;stkvar	__this @ sp[(0)+-2]
 26301  01B73A  0EFE               	movlw	-2
 26302  01B73C  006F FF8C  F00B    	movff	plusw1,btemp+10
 26303  01B742  0EFF               	movlw	-1
 26304  01B744  006F FF8C  F00C    	movff	plusw1,btemp+11
 26305  01B74A  0E40               	movlw	64
 26306  01B74C  240B               	addwf	(btemp+10)^0,w,c
 26307  01B74E  6ED9               	movwf	fsr2l,c
 26308  01B750  0E00               	movlw	0
 26309  01B752  200C               	addwfc	(btemp+11)^0,w,c
 26310  01B754  6EDA               	movwf	fsr2h,c
 26311  01B756  50DF               	movf	indf2,w,c
 26312  01B758  6E0C               	movwf	(btemp+11)^0,c
 26313                           
 26314                           ;stkvar	__this @ sp[(0)+-2]
 26315  01B75A  0EFE               	movlw	-2
 26316  01B75C  006F FF8C  F009    	movff	plusw1,btemp+8
 26317  01B762  0EFF               	movlw	-1
 26318  01B764  006F FF8C  F00A    	movff	plusw1,btemp+9
 26319  01B76A  500C               	movf	(btemp+11)^0,w,c
 26320  01B76C  2409               	addwf	(btemp+8)^0,w,c
 26321  01B76E  6ED9               	movwf	fsr2l,c
 26322  01B770  0E00               	movlw	0
 26323  01B772  200A               	addwfc	(btemp+9)^0,w,c
 26324  01B774  6EDA               	movwf	fsr2h,c
 26325  01B776  0EFD               	movlw	-3
 26326  01B778  006F FF8F FFDF     	movff	plusw1,indf2
 26327                           
 26328                           ;ringbufs.c: 71:   ++_this->head;
 26329                           ;stkvar	__this @ sp[(0)+-2]
 26330  01B77E  0EFE               	movlw	-2
 26331  01B780  006F FF8C  F00B    	movff	plusw1,btemp+10
 26332  01B786  0EFF               	movlw	-1
 26333  01B788  006F FF8C  F00C    	movff	plusw1,btemp+11
 26334  01B78E  0E40               	movlw	64
 26335  01B790  240B               	addwf	(btemp+10)^0,w,c
 26336  01B792  6ED9               	movwf	fsr2l,c
 26337  01B794  0E00               	movlw	0
 26338  01B796  200C               	addwfc	(btemp+11)^0,w,c
 26339  01B798  6EDA               	movwf	fsr2h,c
 26340  01B79A  2ADF               	incf	indf2,f,c
 26341                           
 26342                           ;ringbufs.c: 72:   ++_this->count;
 26343                           ;stkvar	__this @ sp[(0)+-2]
 26344  01B79C  0EFE               	movlw	-2
 26345  01B79E  006F FF8C  F00B    	movff	plusw1,btemp+10
 26346  01B7A4  0EFF               	movlw	-1
 26347  01B7A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 26348  01B7AC  0E42               	movlw	66
 26349  01B7AE  240B               	addwf	(btemp+10)^0,w,c
 26350  01B7B0  6ED9               	movwf	fsr2l,c
 26351  01B7B2  0E00               	movlw	0
 26352  01B7B4  200C               	addwfc	(btemp+11)^0,w,c
 26353  01B7B6  6EDA               	movwf	fsr2h,c
 26354  01B7B8  2ADF               	incf	indf2,f,c
 26355  01B7BA                     l1718:
 26356                           
 26357                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 26358  01B7BA  52E5               	movf	postdec1,f,c
 26359  01B7BC  52E5               	movf	postdec1,f,c
 26360  01B7BE  52E5               	movf	postdec1,f,c
 26361  01B7C0  0012               	return		;funcret
 26362  01B7C2                     __end_of_ringBufS_put_dma:
 26363                           	opt callstack 0
 26364                           
 26365 ;; *************** function _atoi *****************
 26366 ;; Defined at:
 26367 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 26368 ;; Parameters:    Size  Location     Type
 26369 ;;  s               2  [STACK] PTR const unsigned char 
 26370 ;;		 -> STR_83(127), STR_81(3), STR_80(3), STR_79(19), 
 26371 ;;		 -> STR_78(19), STR_77(19), STR_76(19), STR_75(19), 
 26372 ;;		 -> STR_74(19), STR_73(24), STR_72(15), STR_71(15), 
 26373 ;;		 -> STR_70(15), STR_69(10), STR_68(10), STR_67(19), 
 26374 ;;		 -> STR_66(19), STR_63(3), STR_62(3), STR_61(21), 
 26375 ;;		 -> STR_60(21), STR_59(21), STR_58(21), STR_57(21), 
 26376 ;;		 -> STR_56(21), STR_55(21), STR_54(21), STR_53(21), 
 26377 ;;		 -> STR_52(20), STR_51(21), STR_50(21), STR_49(21), 
 26378 ;;		 -> STR_48(22), STR_47(22), STR_46(22), STR_45(23), 
 26379 ;;		 -> STR_44(23), STR_43(23), STR_42(29), STR_41(23), 
 26380 ;;		 -> STR_40(23), STR_39(22), STR_38(22), STR_37(22), 
 26381 ;;		 -> STR_36(22), STR_35(22), STR_34(22), STR_33(22), 
 26382 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 26383 ;;		 -> STR_28(22), STR_27(17), STR_26(16), STR_25(16), 
 26384 ;;		 -> STR_24(21), STR_23(21), STR_22(21), STR_21(26), 
 26385 ;;		 -> STR_20(26), STR_19(22), STR_18(21), STR_17(21), 
 26386 ;;		 -> STR_16(21), STR_15(21), STR_14(22), STR_13(22), 
 26387 ;;		 -> STR_12(22), STR_11(26), STR_10(21), STR_9(21), 
 26388 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 26389 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 26390 ;; Auto vars:     Size  Location     Type
 26391 ;;  n               2  [STACK] int 
 26392 ;;  neg             2  [STACK] int 
 26393 ;; Return value:  Size  Location     Type
 26394 ;;                  2  [STACK] int 
 26395 ;; Registers used:
 26396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 26397 ;; Tracked objects:
 26398 ;;		On entry : 0/0
 26399 ;;		On exit  : 0/0
 26400 ;;		Unchanged: 0/0
 26401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26406 ;;Total ram usage:        0 bytes
 26407 ;; Hardware stack levels used:    1
 26408 ;; Hardware stack levels required when called:   16
 26409 ;; This function calls:
 26410 ;;		_isdigit
 26411 ;;		_isspace
 26412 ;; This function is called by:
 26413 ;;		_vfpfcnvrt
 26414 ;; This function uses a reentrant model
 26415 ;;
 26416                           
 26417                           	psect	text99
 26418  017FFC                     __ptext99:
 26419                           	opt callstack 0
 26420  017FFC                     _atoi:
 26421                           	opt callstack 0
 26422                           
 26423                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26424  017FFC  0E09               	movlw	9
 26425  017FFE  26E1               	addwf	fsr1l,f,c
 26426  018000  0E00               	movlw	0
 26427  018002  22E2               	addwfc	fsr1h,f,c
 26428                           
 26429                           ;stkvar	_n @ sp[(-9)+5]
 26430                           
 26431                           ;incstack = 0
 26432 ;; hardware stack exceeded
 26433  018004  0EFC               	movlw	-4
 26434  018006  6AE3               	clrf	plusw1,c
 26435  018008  0EFD               	movlw	-3
 26436  01800A  6AE3               	clrf	plusw1,c
 26437                           
 26438                           ;stkvar	_neg @ sp[(-9)+7]
 26439  01800C  0EFE               	movlw	-2
 26440  01800E  6AE3               	clrf	plusw1,c
 26441  018010  0EFF               	movlw	-1
 26442  018012  6AE3               	clrf	plusw1,c
 26443  018014  D011               	goto	l10126
 26444  018016                     l10124:
 26445                           
 26446                           ;stkvar	_s @ sp[(-9)+-2]
 26447  018016  0EF5               	movlw	-11
 26448  018018  50E3               	movf	plusw1,w,c
 26449  01801A  0F01               	addlw	1
 26450  01801C  6E01               	movwf	btemp^0,c
 26451  01801E  0EF5               	movlw	-11
 26452  018020  0060  F007  FFE3   	movff	btemp,plusw1
 26453  018026  6A01               	clrf	btemp^0,c
 26454  018028  0EF6               	movlw	-10
 26455  01802A  50E3               	movf	plusw1,w,c
 26456  01802C  2001               	addwfc	btemp^0,w,c
 26457  01802E  6E01               	movwf	btemp^0,c
 26458  018030  0EF6               	movlw	-10
 26459  018032  0060  F007  FFE3   	movff	btemp,plusw1
 26460  018038                     l10126:
 26461                           
 26462                           ;stkvar	_atoi$7353 @ sp[(-9)+4]
 26463  018038  0EFB               	movlw	-5
 26464  01803A  6AE3               	clrf	plusw1,c
 26465  01803C  2AE3               	incf	plusw1,f,c
 26466                           
 26467                           ;stkvar	_s @ sp[(-9)+-2]
 26468  01803E  50E1               	movf	fsr1l,w,c
 26469  018040  0FF5               	addlw	-11
 26470  018042  6ED9               	movwf	fsr2l,c
 26471  018044  50E2               	movf	fsr1h,w,c
 26472  018046  6EDA               	movwf	fsr2h,c
 26473  018048  0EFF               	movlw	255
 26474  01804A  22DA               	addwfc	fsr2h,f,c
 26475  01804C  006F FF7B FFF6     	movff	postinc2,tblptrl
 26476  018052  006F FF77 FFF7     	movff	postdec2,tblptrh
 26477  018058                     	if	0	;tblptru may be non-zero
 26478  018058                     	endif
 26479  018058                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26480  018058  0E00               	movlw	low (__mediumconst shr (0+16))
 26481  01805A  6EF8               	movwf	tblptru,c
 26482  01805C                     	endif
 26483  01805C  0008               	tblrd		*
 26484  01805E  50F5               	movf	tablat,w,c
 26485  018060  0A20               	xorlw	32
 26486  018062  B4D8               	btfsc	status,2,c
 26487  018064  D023               	goto	l10134
 26488  018066  0EF7               	movlw	247
 26489  018068  6E0B               	movwf	(btemp+10)^0,c
 26490  01806A  0EFF               	movlw	255
 26491  01806C  6E0C               	movwf	(btemp+11)^0,c
 26492                           
 26493                           ;stkvar	_s @ sp[(-9)+-2]
 26494  01806E  50E1               	movf	fsr1l,w,c
 26495  018070  0FF5               	addlw	-11
 26496  018072  6ED9               	movwf	fsr2l,c
 26497  018074  50E2               	movf	fsr1h,w,c
 26498  018076  6EDA               	movwf	fsr2h,c
 26499  018078  0EFF               	movlw	255
 26500  01807A  22DA               	addwfc	fsr2h,f,c
 26501  01807C  006F FF7B FFF6     	movff	postinc2,tblptrl
 26502  018082  006F FF77 FFF7     	movff	postdec2,tblptrh
 26503  018088                     	if	0	;tblptru may be non-zero
 26504  018088                     	endif
 26505  018088                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26506  018088  0E00               	movlw	low (__mediumconst shr (0+16))
 26507  01808A  6EF8               	movwf	tblptru,c
 26508  01808C                     	endif
 26509  01808C  0008               	tblrd		*
 26510  01808E  50F5               	movf	tablat,w,c
 26511  018090  6E09               	movwf	(btemp+8)^0,c
 26512  018092  6A0A               	clrf	(btemp+9)^0,c
 26513  018094  500B               	movf	(btemp+10)^0,w,c
 26514  018096  2609               	addwf	(btemp+8)^0,f,c
 26515  018098  500C               	movf	(btemp+11)^0,w,c
 26516  01809A  220A               	addwfc	(btemp+9)^0,f,c
 26517  01809C  500A               	movf	(btemp+9)^0,w,c
 26518  01809E  E104               	bnz	u9110
 26519  0180A0  0E05               	movlw	5
 26520  0180A2  5C09               	subwf	(btemp+8)^0,w,c
 26521  0180A4  A0D8               	btfss	status,0,c
 26522  0180A6  D002               	goto	l10134
 26523  0180A8                     u9110:
 26524                           
 26525                           ;stkvar	_atoi$7353 @ sp[(-9)+4]
 26526  0180A8  0EFB               	movlw	-5
 26527  0180AA  6AE3               	clrf	plusw1,c
 26528  0180AC                     l10134:
 26529                           
 26530                           ;stkvar	_atoi$7353 @ sp[(-9)+4]
 26531  0180AC  0EFB               	movlw	-5
 26532  0180AE  50E3               	movf	plusw1,w,c
 26533  0180B0  6E0B               	movwf	(btemp+10)^0,c
 26534  0180B2  6A0C               	clrf	(btemp+11)^0,c
 26535                           
 26536                           ;stkvar	_atoi$7352 @ sp[(-9)+2]
 26537  0180B4  0EF9               	movlw	-7
 26538  0180B6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26539  0180BC  0EFA               	movlw	-6
 26540  0180BE  0060  F033  FFE3   	movff	btemp+11,plusw1
 26541                           
 26542                           ;stkvar	_atoi$7352 @ sp[(-9)+2]
 26543  0180C4  0EF9               	movlw	-7
 26544  0180C6  006F FF8C  F001    	movff	plusw1,btemp
 26545  0180CC  0EFA               	movlw	-6
 26546  0180CE  50E3               	movf	plusw1,w,c
 26547  0180D0  1001               	iorwf	btemp^0,w,c
 26548  0180D2  B4D8               	btfsc	status,2,c
 26549  0180D4  D01F               	goto	l10144
 26550  0180D6  D79F               	goto	l10124
 26551  0180D8                     l10140:
 26552  0180D8  0E01               	movlw	1
 26553  0180DA  6E0B               	movwf	(btemp+10)^0,c
 26554  0180DC  0E00               	movlw	0
 26555  0180DE  6E0C               	movwf	(btemp+11)^0,c
 26556                           
 26557                           ;stkvar	_neg @ sp[(-9)+7]
 26558  0180E0  0EFE               	movlw	-2
 26559  0180E2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26560  0180E8  0EFF               	movlw	-1
 26561  0180EA  0060  F033  FFE3   	movff	btemp+11,plusw1
 26562  0180F0                     l10142:
 26563                           
 26564                           ;stkvar	_s @ sp[(-9)+-2]
 26565  0180F0  0EF5               	movlw	-11
 26566  0180F2  50E3               	movf	plusw1,w,c
 26567  0180F4  0F01               	addlw	1
 26568  0180F6  6E01               	movwf	btemp^0,c
 26569  0180F8  0EF5               	movlw	-11
 26570  0180FA  0060  F007  FFE3   	movff	btemp,plusw1
 26571  018100  6A01               	clrf	btemp^0,c
 26572  018102  0EF6               	movlw	-10
 26573  018104  50E3               	movf	plusw1,w,c
 26574  018106  2001               	addwfc	btemp^0,w,c
 26575  018108  6E01               	movwf	btemp^0,c
 26576  01810A  0EF6               	movlw	-10
 26577  01810C  0060  F007  FFE3   	movff	btemp,plusw1
 26578  018112  D053               	goto	l10150
 26579  018114                     l10144:
 26580                           
 26581                           ;stkvar	_s @ sp[(-9)+-2]
 26582  018114  50E1               	movf	fsr1l,w,c
 26583  018116  0FF5               	addlw	-11
 26584  018118  6ED9               	movwf	fsr2l,c
 26585  01811A  50E2               	movf	fsr1h,w,c
 26586  01811C  6EDA               	movwf	fsr2h,c
 26587  01811E  0EFF               	movlw	255
 26588  018120  22DA               	addwfc	fsr2h,f,c
 26589  018122  006F FF7B FFF6     	movff	postinc2,tblptrl
 26590  018128  006F FF77 FFF7     	movff	postdec2,tblptrh
 26591  01812E                     	if	0	;tblptru may be non-zero
 26592  01812E                     	endif
 26593  01812E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26594  01812E  0E00               	movlw	low (__mediumconst shr (0+16))
 26595  018130  6EF8               	movwf	tblptru,c
 26596  018132                     	endif
 26597  018132  0008               	tblrd		*
 26598  018134  50F5               	movf	tablat,w,c
 26599  018136  6E0B               	movwf	(btemp+10)^0,c
 26600  018138  6A0C               	clrf	(btemp+11)^0,c
 26601                           
 26602                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26603                           ; Switch size 1, requested type "simple"
 26604                           ; Number of cases is 1, Range of values is 0 to 0
 26605                           ; switch strategies available:
 26606                           ; Name         Instructions Cycles
 26607                           ; simple_byte            4     3 (average)
 26608                           ;	Chosen strategy is simple_byte
 26609  01813A  500C               	movf	(btemp+11)^0,w,c
 26610  01813C  0A00               	xorlw	0	; case 0
 26611  01813E  A4D8               	btfss	status,2,c
 26612  018140  D03C               	goto	l10150
 26613                           
 26614                           ; Switch size 1, requested type "simple"
 26615                           ; Number of cases is 2, Range of values is 43 to 45
 26616                           ; switch strategies available:
 26617                           ; Name         Instructions Cycles
 26618                           ; simple_byte            7     4 (average)
 26619                           ;	Chosen strategy is simple_byte
 26620  018142  500B               	movf	(btemp+10)^0,w,c
 26621  018144  0A2B               	xorlw	43	; case 43
 26622  018146  B4D8               	btfsc	status,2,c
 26623  018148  D7D3               	goto	l10142
 26624  01814A  0A06               	xorlw	6	; case 45
 26625  01814C  B4D8               	btfsc	status,2,c
 26626  01814E  D7C4               	goto	l10140
 26627  018150  D034               	goto	l10150
 26628  018152                     l10146:
 26629                           
 26630                           ;stkvar	_n @ sp[(-9)+5]
 26631  018152  0EFC               	movlw	-4
 26632  018154  006F FF8C  F00B    	movff	plusw1,btemp+10
 26633  01815A  0EFD               	movlw	-3
 26634  01815C  006F FF8C  F00C    	movff	plusw1,btemp+11
 26635  018162  0E0A               	movlw	10
 26636  018164  020B               	mulwf	(btemp+10)^0,c
 26637  018166  006F FFCC  F009    	movff	prodl,btemp+8
 26638  01816C  006F FFD0  F00A    	movff	prodh,btemp+9
 26639  018172  020C               	mulwf	(btemp+11)^0,c
 26640  018174  50F3               	movf	prodl,w,c
 26641  018176  260A               	addwf	(btemp+9)^0,f,c
 26642                           
 26643                           ;stkvar	_s @ sp[(-9)+-2]
 26644  018178  50E1               	movf	fsr1l,w,c
 26645  01817A  0FF5               	addlw	-11
 26646  01817C  6ED9               	movwf	fsr2l,c
 26647  01817E  50E2               	movf	fsr1h,w,c
 26648  018180  6EDA               	movwf	fsr2h,c
 26649  018182  0EFF               	movlw	255
 26650  018184  22DA               	addwfc	fsr2h,f,c
 26651  018186  006F FF7B FFF6     	movff	postinc2,tblptrl
 26652  01818C  006F FF77 FFF7     	movff	postdec2,tblptrh
 26653  018192                     	if	0	;tblptru may be non-zero
 26654  018192                     	endif
 26655  018192                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26656  018192  0E00               	movlw	low (__mediumconst shr (0+16))
 26657  018194  6EF8               	movwf	tblptru,c
 26658  018196                     	endif
 26659  018196  0008               	tblrd		*
 26660  018198  50F5               	movf	tablat,w,c
 26661  01819A  5E09               	subwf	(btemp+8)^0,f,c
 26662  01819C  0E00               	movlw	0
 26663  01819E  5A0A               	subwfb	(btemp+9)^0,f,c
 26664  0181A0  0E30               	movlw	48
 26665  0181A2  2609               	addwf	(btemp+8)^0,f,c
 26666  0181A4  0E00               	movlw	0
 26667  0181A6  220A               	addwfc	(btemp+9)^0,f,c
 26668                           
 26669                           ;stkvar	_n @ sp[(-9)+5]
 26670  0181A8  0EFC               	movlw	-4
 26671  0181AA  0060  F027  FFE3   	movff	btemp+8,plusw1
 26672  0181B0  0EFD               	movlw	-3
 26673  0181B2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26674  0181B8  D79B               	goto	l10142
 26675  0181BA                     l10150:
 26676  0181BA  0ED0               	movlw	208
 26677  0181BC  6E0B               	movwf	(btemp+10)^0,c
 26678  0181BE  0EFF               	movlw	255
 26679  0181C0  6E0C               	movwf	(btemp+11)^0,c
 26680                           
 26681                           ;stkvar	_s @ sp[(-9)+-2]
 26682  0181C2  50E1               	movf	fsr1l,w,c
 26683  0181C4  0FF5               	addlw	-11
 26684  0181C6  6ED9               	movwf	fsr2l,c
 26685  0181C8  50E2               	movf	fsr1h,w,c
 26686  0181CA  6EDA               	movwf	fsr2h,c
 26687  0181CC  0EFF               	movlw	255
 26688  0181CE  22DA               	addwfc	fsr2h,f,c
 26689  0181D0  006F FF7B FFF6     	movff	postinc2,tblptrl
 26690  0181D6  006F FF77 FFF7     	movff	postdec2,tblptrh
 26691  0181DC                     	if	0	;tblptru may be non-zero
 26692  0181DC                     	endif
 26693  0181DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26694  0181DC  0E00               	movlw	low (__mediumconst shr (0+16))
 26695  0181DE  6EF8               	movwf	tblptru,c
 26696  0181E0                     	endif
 26697  0181E0  0008               	tblrd		*
 26698  0181E2  50F5               	movf	tablat,w,c
 26699  0181E4  6E09               	movwf	(btemp+8)^0,c
 26700  0181E6  6A0A               	clrf	(btemp+9)^0,c
 26701  0181E8  500B               	movf	(btemp+10)^0,w,c
 26702  0181EA  2609               	addwf	(btemp+8)^0,f,c
 26703  0181EC  500C               	movf	(btemp+11)^0,w,c
 26704  0181EE  220A               	addwfc	(btemp+9)^0,f,c
 26705  0181F0  500A               	movf	(btemp+9)^0,w,c
 26706  0181F2  E106               	bnz	u9130
 26707  0181F4  0E0A               	movlw	10
 26708  0181F6  5C09               	subwf	(btemp+8)^0,w,c
 26709  0181F8  B0D8               	btfsc	status,0,c
 26710  0181FA  D002               	goto	u9130
 26711  0181FC  0E01               	movlw	1
 26712  0181FE  D001               	goto	u9140
 26713  018200                     u9130:
 26714  018200  0E00               	movlw	0
 26715  018202                     u9140:
 26716  018202  6E0B               	movwf	(btemp+10)^0,c
 26717  018204  6A0C               	clrf	(btemp+11)^0,c
 26718                           
 26719                           ;stkvar	_atoi$7354 @ sp[(-9)+0]
 26720  018206  0EF7               	movlw	-9
 26721  018208  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26722  01820E  0EF8               	movlw	-8
 26723  018210  0060  F033  FFE3   	movff	btemp+11,plusw1
 26724                           
 26725                           ;stkvar	_atoi$7354 @ sp[(-9)+0]
 26726  018216  0EF7               	movlw	-9
 26727  018218  006F FF8C  F001    	movff	plusw1,btemp
 26728  01821E  0EF8               	movlw	-8
 26729  018220  50E3               	movf	plusw1,w,c
 26730  018222  1001               	iorwf	btemp^0,w,c
 26731  018224  A4D8               	btfss	status,2,c
 26732  018226  D795               	goto	l10146
 26733                           
 26734                           ;stkvar	_neg @ sp[(-9)+7]
 26735  018228  0EFE               	movlw	-2
 26736  01822A  006F FF8C  F001    	movff	plusw1,btemp
 26737  018230  0EFF               	movlw	-1
 26738  018232  50E3               	movf	plusw1,w,c
 26739  018234  1001               	iorwf	btemp^0,w,c
 26740  018236  A4D8               	btfss	status,2,c
 26741  018238  D00E               	goto	l10160
 26742                           
 26743                           ;stkvar	_n @ sp[(-9)+5]
 26744  01823A  0EFC               	movlw	-4
 26745  01823C  006F FF8C  F001    	movff	plusw1,btemp
 26746  018242  1E01               	comf	btemp^0,f,c
 26747  018244  0EFD               	movlw	-3
 26748  018246  006F FF8C  F002    	movff	plusw1,btemp+1
 26749  01824C  1E02               	comf	(btemp+1)^0,f,c
 26750  01824E  2A01               	incf	btemp^0,f,c
 26751  018250  B4D8               	btfsc	status,2,c
 26752  018252  2A02               	incf	(btemp+1)^0,f,c
 26753  018254  D008               	goto	l3399
 26754  018256                     l10160:
 26755                           
 26756                           ;stkvar	_n @ sp[(-9)+5]
 26757  018256  0EFC               	movlw	-4
 26758  018258  006F FF8C  F001    	movff	plusw1,btemp
 26759  01825E  0EFD               	movlw	-3
 26760  018260  006F FF8C  F002    	movff	plusw1,btemp+1
 26761  018266                     l3399:
 26762                           
 26763                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 26764  018266  0EF5               	movlw	245
 26765  018268  26E1               	addwf	fsr1l,f,c
 26766  01826A  0EFF               	movlw	255
 26767  01826C  22E2               	addwfc	fsr1h,f,c
 26768  01826E  0012               	return		;funcret
 26769  018270                     __end_of_atoi:
 26770                           	opt callstack 0
 26771                           
 26772 ;; *************** function _isspace *****************
 26773 ;; Defined at:
 26774 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 26775 ;; Parameters:    Size  Location     Type
 26776 ;;  c               2  [STACK] int 
 26777 ;; Auto vars:     Size  Location     Type
 26778 ;;		None
 26779 ;; Return value:  Size  Location     Type
 26780 ;;                  2  [STACK] int 
 26781 ;; Registers used:
 26782 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 26783 ;; Tracked objects:
 26784 ;;		On entry : 0/0
 26785 ;;		On exit  : 0/0
 26786 ;;		Unchanged: 0/0
 26787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26792 ;;Total ram usage:        0 bytes
 26793 ;; Hardware stack levels used:    1
 26794 ;; Hardware stack levels required when called:   15
 26795 ;; This function calls:
 26796 ;;		Nothing
 26797 ;; This function is called by:
 26798 ;;		_atoi
 26799 ;; This function uses a reentrant model
 26800 ;;
 26801                           
 26802                           	psect	text100
 26803  01C57C                     __ptext100:
 26804                           	opt callstack 0
 26805  01C57C                     _isspace:
 26806                           	opt callstack 0
 26807                           
 26808                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26809  01C57C  52E6               	movf	postinc1,f,c
 26810                           
 26811                           ;stkvar	_isspace$7403 @ sp[(-1)+0]
 26812                           
 26813                           ;incstack = 0
 26814 ;; hardware stack exceeded
 26815  01C57E  0EFF               	movlw	-1
 26816  01C580  6AE3               	clrf	plusw1,c
 26817  01C582  2AE3               	incf	plusw1,f,c
 26818                           
 26819                           ;stkvar	_c @ sp[(-1)+-2]
 26820  01C584  0EFD               	movlw	-3
 26821  01C586  006F FF8C  F001    	movff	plusw1,btemp
 26822  01C58C  0E20               	movlw	32
 26823  01C58E  1801               	xorwf	btemp^0,w,c
 26824  01C590  E104               	bnz	u8000
 26825  01C592  0EFE               	movlw	-2
 26826  01C594  50E3               	movf	plusw1,w,c
 26827  01C596  B4D8               	btfsc	status,2,c
 26828  01C598  D012               	goto	l9544
 26829  01C59A                     u8000:
 26830                           
 26831                           ;stkvar	_c @ sp[(-1)+-2]
 26832  01C59A  0EFD               	movlw	-3
 26833  01C59C  50E3               	movf	plusw1,w,c
 26834  01C59E  0FF7               	addlw	247
 26835  01C5A0  6E0B               	movwf	(btemp+10)^0,c
 26836  01C5A2  0EFE               	movlw	-2
 26837  01C5A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 26838  01C5AA  0EFF               	movlw	255
 26839  01C5AC  220C               	addwfc	(btemp+11)^0,f,c
 26840  01C5AE  500C               	movf	(btemp+11)^0,w,c
 26841  01C5B0  E104               	bnz	u8010
 26842  01C5B2  0E05               	movlw	5
 26843  01C5B4  5C0B               	subwf	(btemp+10)^0,w,c
 26844  01C5B6  A0D8               	btfss	status,0,c
 26845  01C5B8  D002               	goto	l9544
 26846  01C5BA                     u8010:
 26847                           
 26848                           ;stkvar	_isspace$7403 @ sp[(-1)+0]
 26849  01C5BA  0EFF               	movlw	-1
 26850  01C5BC  6AE3               	clrf	plusw1,c
 26851  01C5BE                     l9544:
 26852                           
 26853                           ;stkvar	_isspace$7403 @ sp[(-1)+0]
 26854  01C5BE  0EFF               	movlw	-1
 26855  01C5C0  50E3               	movf	plusw1,w,c
 26856  01C5C2  6E01               	movwf	btemp^0,c
 26857  01C5C4  6A02               	clrf	(btemp+1)^0,c
 26858                           
 26859                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 26860  01C5C6  52E5               	movf	postdec1,f,c
 26861  01C5C8  52E5               	movf	postdec1,f,c
 26862  01C5CA  52E5               	movf	postdec1,f,c
 26863  01C5CC  0012               	return		;funcret
 26864  01C5CE                     __end_of_isspace:
 26865                           	opt callstack 0
 26866                           
 26867 ;; *************** function _isdigit *****************
 26868 ;; Defined at:
 26869 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 26870 ;; Parameters:    Size  Location     Type
 26871 ;;  c               2  [STACK] int 
 26872 ;; Auto vars:     Size  Location     Type
 26873 ;;		None
 26874 ;; Return value:  Size  Location     Type
 26875 ;;                  2  [STACK] int 
 26876 ;; Registers used:
 26877 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 26878 ;; Tracked objects:
 26879 ;;		On entry : 0/0
 26880 ;;		On exit  : 0/0
 26881 ;;		Unchanged: 0/0
 26882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26887 ;;Total ram usage:        0 bytes
 26888 ;; Hardware stack levels used:    1
 26889 ;; Hardware stack levels required when called:   15
 26890 ;; This function calls:
 26891 ;;		Nothing
 26892 ;; This function is called by:
 26893 ;;		_vfpfcnvrt
 26894 ;;		_atoi
 26895 ;; This function uses a reentrant model
 26896 ;;
 26897                           
 26898                           	psect	text101
 26899  01CD9C                     __ptext101:
 26900                           	opt callstack 0
 26901  01CD9C                     _isdigit:
 26902                           	opt callstack 0
 26903                           
 26904                           ;stkvar	_c @ sp[(0)+-2]
 26905                           
 26906                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26907                           ;incstack = 0
 26908 ;; hardware stack exceeded
 26909  01CD9C  0EFE               	movlw	-2
 26910  01CD9E  50E3               	movf	plusw1,w,c
 26911  01CDA0  0FD0               	addlw	208
 26912  01CDA2  6E0B               	movwf	(btemp+10)^0,c
 26913  01CDA4  0EFF               	movlw	-1
 26914  01CDA6  006F FF8C  F00C    	movff	plusw1,btemp+11
 26915  01CDAC  0EFF               	movlw	255
 26916  01CDAE  220C               	addwfc	(btemp+11)^0,f,c
 26917  01CDB0  500C               	movf	(btemp+11)^0,w,c
 26918  01CDB2  E106               	bnz	u6850
 26919  01CDB4  0E0A               	movlw	10
 26920  01CDB6  5C0B               	subwf	(btemp+10)^0,w,c
 26921  01CDB8  B0D8               	btfsc	status,0,c
 26922  01CDBA  D002               	goto	u6850
 26923  01CDBC  0E01               	movlw	1
 26924  01CDBE  D001               	goto	u6860
 26925  01CDC0                     u6850:
 26926  01CDC0  0E00               	movlw	0
 26927  01CDC2                     u6860:
 26928  01CDC2  6E01               	movwf	btemp^0,c
 26929  01CDC4  6A02               	clrf	(btemp+1)^0,c
 26930                           
 26931                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 26932  01CDC6  52E5               	movf	postdec1,f,c
 26933  01CDC8  52E5               	movf	postdec1,f,c
 26934  01CDCA  0012               	return		;funcret
 26935  01CDCC                     __end_of_isdigit:
 26936                           	opt callstack 0
 26937                           
 26938 ;; *************** function _set_vterm *****************
 26939 ;; Defined at:
 26940 ;;		line 107 in file "mconfig.c"
 26941 ;; Parameters:    Size  Location     Type
 26942 ;;  vterm           1  [STACK] const unsigned char 
 26943 ;; Auto vars:     Size  Location     Type
 26944 ;;		None
 26945 ;; Return value:  Size  Location     Type
 26946 ;;                  1  [STACK] unsigned char 
 26947 ;; Registers used:
 26948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 26949 ;; Tracked objects:
 26950 ;;		On entry : 0/1
 26951 ;;		On exit  : 0/0
 26952 ;;		Unchanged: 0/0
 26953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26958 ;;Total ram usage:        0 bytes
 26959 ;; Hardware stack levels used:    1
 26960 ;; Hardware stack levels required when called:   15
 26961 ;; This function calls:
 26962 ;;		Nothing
 26963 ;; This function is called by:
 26964 ;;		_main
 26965 ;;		_check_help
 26966 ;; This function uses a reentrant model
 26967 ;;
 26968                           
 26969                           	psect	text102
 26970  01D2BE                     __ptext102:
 26971                           	opt callstack 0
 26972  01D2BE                     _set_vterm:
 26973                           	opt callstack 15
 26974                           
 26975                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 26976                           ;stkvar	_vterm @ sp[(0)+-1]
 26977                           
 26978                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26979                           ;incstack = 0
 26980  01D2BE  0EFF               	movlw	-1
 26981  01D2C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 26982  01D2C6  0E03               	movlw	3
 26983  01D2C8  160C               	andwf	(btemp+11)^0,f,c
 26984  01D2CA  EE23  F02F         	lfsr	2,_D+480
 26985  01D2CE  50DF               	movf	223,w,c
 26986  01D2D0  180C               	xorwf	(btemp+11)^0,w,c
 26987  01D2D2  0BFE               	andlw	-2
 26988  01D2D4  180C               	xorwf	(btemp+11)^0,w,c
 26989  01D2D6  6EDF               	movwf	223,c
 26990                           
 26991                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 26992  01D2D8  52E5               	movf	postdec1,f,c
 26993  01D2DA  0012               	return		;funcret
 26994  01D2DC                     __end_of_set_vterm:
 26995                           	opt callstack 0
 26996                           
 26997 ;; *************** function _set_temp_display_help *****************
 26998 ;; Defined at:
 26999 ;;		line 211 in file "mconfig.c"
 27000 ;; Parameters:    Size  Location     Type
 27001 ;;  new_response    1  [STACK] const enum E16677
 27002 ;; Auto vars:     Size  Location     Type
 27003 ;;		None
 27004 ;; Return value:  Size  Location     Type
 27005 ;;                  1  [STACK] enum E16677
 27006 ;; Registers used:
 27007 ;;		wreg, fsr1l, fsr1h
 27008 ;; Tracked objects:
 27009 ;;		On entry : 0/1
 27010 ;;		On exit  : 3F/1
 27011 ;;		Unchanged: 0/0
 27012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27017 ;;Total ram usage:        0 bytes
 27018 ;; Hardware stack levels used:    1
 27019 ;; Hardware stack levels required when called:   15
 27020 ;; This function calls:
 27021 ;;		Nothing
 27022 ;; This function is called by:
 27023 ;;		_check_help
 27024 ;; This function uses a reentrant model
 27025 ;;
 27026                           
 27027                           	psect	text103
 27028  01D440                     __ptext103:
 27029                           	opt callstack 0
 27030  01D440                     _set_temp_display_help:
 27031                           	opt callstack 14
 27032                           
 27033                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 27034                           
 27035                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27036                           ;incstack = 0
 27037  01D440  0101               	movlb	1	; () banked
 27038  01D442  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 27039                           
 27040                           ; BSR set to: 1
 27041                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 27042                           ;stkvar	_new_response_info @ sp[(0)+-1]
 27043  01D444  0EFF               	movlw	-1
 27044  01D446  006F FF8C  F1AC    	movff	plusw1,_V+165	;volatile
 27045                           
 27046                           ; BSR set to: 1
 27047                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 27048  01D44C  52E5               	movf	postdec1,f,c
 27049  01D44E  0012               	return		;funcret
 27050  01D450                     __end_of_set_temp_display_help:
 27051                           	opt callstack 0
 27052                           
 27053 ;; *************** function _set_display_info *****************
 27054 ;; Defined at:
 27055 ;;		line 200 in file "mconfig.c"
 27056 ;; Parameters:    Size  Location     Type
 27057 ;;  new_response    1  [STACK] const enum E16677
 27058 ;; Auto vars:     Size  Location     Type
 27059 ;;		None
 27060 ;; Return value:  Size  Location     Type
 27061 ;;                  1  [STACK] enum E17160
 27062 ;; Registers used:
 27063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 27064 ;; Tracked objects:
 27065 ;;		On entry : 0/1
 27066 ;;		On exit  : 0/0
 27067 ;;		Unchanged: 0/0
 27068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27073 ;;Total ram usage:        0 bytes
 27074 ;; Hardware stack levels used:    1
 27075 ;; Hardware stack levels required when called:   16
 27076 ;; This function calls:
 27077 ;;		_TimerDone
 27078 ;; This function is called by:
 27079 ;;		_main
 27080 ;;		_check_help
 27081 ;; This function uses a reentrant model
 27082 ;;
 27083                           
 27084                           	psect	text104
 27085  01D2DC                     __ptext104:
 27086                           	opt callstack 0
 27087  01D2DC                     _set_display_info:
 27088                           	opt callstack 14
 27089                           
 27090                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 27091                           
 27092                           ; BSR set to: 1
 27093                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27094                           ;incstack = 0
 27095  01D2DC  0E07               	movlw	7
 27096  01D2DE  6EE6               	movwf	postinc1,c
 27097  01D2E0  EC69  F0E7         	call	_TimerDone	;wreg free
 27098  01D2E4  5001               	movf	btemp^0,w,c
 27099  01D2E6  B4D8               	btfsc	status,2,c
 27100  01D2E8  D006               	goto	l1853
 27101                           
 27102                           ;mconfig.c: 205:   old_info = V.response.info;
 27103  01D2EA  0101               	movlb	1	; () banked
 27104  01D2EC  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 27105                           
 27106                           ; BSR set to: 1
 27107                           ;mconfig.c: 206:   V.response.info = new_response_info;
 27108                           ;stkvar	_new_response_info @ sp[(0)+-1]
 27109  01D2EE  0EFF               	movlw	-1
 27110  01D2F0  006F FF8C  F1AB    	movff	plusw1,_V+164	;volatile
 27111  01D2F6                     l1853:
 27112                           
 27113                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 27114  01D2F6  52E5               	movf	postdec1,f,c
 27115  01D2F8  0012               	return		;funcret
 27116  01D2FA                     __end_of_set_display_info:
 27117                           	opt callstack 0
 27118                           
 27119 ;; *************** function _mode_lamp_dim *****************
 27120 ;; Defined at:
 27121 ;;		line 13 in file "mconfig.c"
 27122 ;; Parameters:    Size  Location     Type
 27123 ;;  level           2  [STACK] const unsigned short 
 27124 ;; Auto vars:     Size  Location     Type
 27125 ;;		None
 27126 ;; Return value:  Size  Location     Type
 27127 ;;                  1  [STACK] void 
 27128 ;; Registers used:
 27129 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 27130 ;; Tracked objects:
 27131 ;;		On entry : 0/1
 27132 ;;		On exit  : 0/0
 27133 ;;		Unchanged: 0/0
 27134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27139 ;;Total ram usage:        0 bytes
 27140 ;; Hardware stack levels used:    1
 27141 ;; Hardware stack levels required when called:   16
 27142 ;; This function calls:
 27143 ;;		_PWM8_LoadDutyValue
 27144 ;; This function is called by:
 27145 ;;		_main
 27146 ;;		_check_help
 27147 ;; This function uses a reentrant model
 27148 ;;
 27149                           
 27150                           	psect	text105
 27151  01D366                     __ptext105:
 27152                           	opt callstack 0
 27153  01D366                     _mode_lamp_dim:
 27154                           	opt callstack 14
 27155                           
 27156                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 27157                           ;stkvar	_level @ sp[(0)+-2]
 27158                           
 27159                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27160                           ;incstack = 0
 27161  01D366  0EFE               	movlw	-2
 27162  01D368  006F FF8F FFE6     	movff	plusw1,postinc1
 27163  01D36E  006F FF8F FFE6     	movff	plusw1,postinc1
 27164  01D374  EC7B  F0E4         	call	_PWM8_LoadDutyValue	;wreg free
 27165                           
 27166                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 27167  01D378  52E5               	movf	postdec1,f,c
 27168  01D37A  52E5               	movf	postdec1,f,c
 27169  01D37C  0012               	return		;funcret
 27170  01D37E                     __end_of_mode_lamp_dim:
 27171                           	opt callstack 0
 27172                           
 27173 ;; *************** function _mode_lamp_bright *****************
 27174 ;; Defined at:
 27175 ;;		line 18 in file "mconfig.c"
 27176 ;; Parameters:    Size  Location     Type
 27177 ;;		None
 27178 ;; Auto vars:     Size  Location     Type
 27179 ;;		None
 27180 ;; Return value:  Size  Location     Type
 27181 ;;                  1  [STACK] void 
 27182 ;; Registers used:
 27183 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 27184 ;; Tracked objects:
 27185 ;;		On entry : 0/0
 27186 ;;		On exit  : 0/0
 27187 ;;		Unchanged: 0/0
 27188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27193 ;;Total ram usage:        0 bytes
 27194 ;; Hardware stack levels used:    1
 27195 ;; Hardware stack levels required when called:   16
 27196 ;; This function calls:
 27197 ;;		_PWM8_LoadDutyValue
 27198 ;; This function is called by:
 27199 ;;		_check_help
 27200 ;; This function uses a reentrant model
 27201 ;;
 27202                           
 27203                           	psect	text106
 27204  01D46E                     __ptext106:
 27205                           	opt callstack 0
 27206  01D46E                     _mode_lamp_bright:
 27207                           	opt callstack 13
 27208                           
 27209                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 27210                           
 27211                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27212                           ;incstack = 0
 27213  01D46E  0E2C               	movlw	44
 27214  01D470  6EE6               	movwf	postinc1,c
 27215  01D472  0E01               	movlw	1
 27216  01D474  6EE6               	movwf	postinc1,c
 27217  01D476  EC7B  F0E4         	call	_PWM8_LoadDutyValue	;wreg free
 27218                           
 27219                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 27220  01D47A  0012               	return		;funcret
 27221  01D47C                     __end_of_mode_lamp_bright:
 27222                           	opt callstack 0
 27223                           
 27224 ;; *************** function _PWM8_LoadDutyValue *****************
 27225 ;; Defined at:
 27226 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 27227 ;; Parameters:    Size  Location     Type
 27228 ;;  dutyValue       2  [STACK] unsigned short 
 27229 ;; Auto vars:     Size  Location     Type
 27230 ;;		None
 27231 ;; Return value:  Size  Location     Type
 27232 ;;                  1  [STACK] void 
 27233 ;; Registers used:
 27234 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 27235 ;; Tracked objects:
 27236 ;;		On entry : 0/1
 27237 ;;		On exit  : 0/0
 27238 ;;		Unchanged: 0/0
 27239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27244 ;;Total ram usage:        0 bytes
 27245 ;; Hardware stack levels used:    1
 27246 ;; Hardware stack levels required when called:   15
 27247 ;; This function calls:
 27248 ;;		Nothing
 27249 ;; This function is called by:
 27250 ;;		_mode_lamp_dim
 27251 ;;		_mode_lamp_bright
 27252 ;; This function uses a reentrant model
 27253 ;;
 27254                           
 27255                           	psect	text107
 27256  01C8F6                     __ptext107:
 27257                           	opt callstack 0
 27258  01C8F6                     _PWM8_LoadDutyValue:
 27259                           	opt callstack 14
 27260                           
 27261                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 27262                           ;stkvar	_dutyValue @ sp[(0)+-2]
 27263                           
 27264                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27265                           ;incstack = 0
 27266  01C8F6  0EFE               	movlw	-2
 27267  01C8F8  006F FF8C  F00B    	movff	plusw1,btemp+10
 27268  01C8FE  0EFF               	movlw	-1
 27269  01C900  006F FF8C  F00C    	movff	plusw1,btemp+11
 27270  01C906  90D8               	bcf	status,0,c
 27271  01C908  320C               	rrcf	(btemp+11)^0,f,c
 27272  01C90A  320B               	rrcf	(btemp+10)^0,f,c
 27273  01C90C  90D8               	bcf	status,0,c
 27274  01C90E  320C               	rrcf	(btemp+11)^0,f,c
 27275  01C910  320B               	rrcf	(btemp+10)^0,f,c
 27276  01C912  500B               	movf	(btemp+10)^0,w,c
 27277  01C914  6E61               	movwf	97,c	;volatile
 27278                           
 27279                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 27280                           ;stkvar	_dutyValue @ sp[(0)+-2]
 27281  01C916  0EFE               	movlw	-2
 27282  01C918  006F FF8C  F00C    	movff	plusw1,btemp+11
 27283  01C91E  0E03               	movlw	3
 27284  01C920  160C               	andwf	(btemp+11)^0,f,c
 27285  01C922  0E06               	movlw	6
 27286  01C924  6E01               	movwf	btemp^0,c
 27287  01C926                     u10035:
 27288  01C926  90D8               	bcf	status,0,c
 27289  01C928  360C               	rlcf	(btemp+11)^0,f,c
 27290  01C92A  2E01               	decfsz	btemp^0,f,c
 27291  01C92C  D7FC               	goto	u10035
 27292  01C92E  500C               	movf	(btemp+11)^0,w,c
 27293  01C930  6E60               	movwf	96,c	;volatile
 27294                           
 27295                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 27296  01C932  52E5               	movf	postdec1,f,c
 27297  01C934  52E5               	movf	postdec1,f,c
 27298  01C936  0012               	return		;funcret
 27299  01C938                     __end_of_PWM8_LoadDutyValue:
 27300                           	opt callstack 0
 27301                           
 27302 ;; *************** function _help_button *****************
 27303 ;; Defined at:
 27304 ;;		line 26 in file "mconfig.c"
 27305 ;; Parameters:    Size  Location     Type
 27306 ;;		None
 27307 ;; Auto vars:     Size  Location     Type
 27308 ;;		None
 27309 ;; Return value:  Size  Location     Type
 27310 ;;                  1  [STACK] _Bool 
 27311 ;; Registers used:
 27312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27313 ;; Tracked objects:
 27314 ;;		On entry : 0/1
 27315 ;;		On exit  : 0/0
 27316 ;;		Unchanged: 0/0
 27317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27322 ;;Total ram usage:        0 bytes
 27323 ;; Hardware stack levels used:    1
 27324 ;; Hardware stack levels required when called:   16
 27325 ;; This function calls:
 27326 ;;		_StartTimer
 27327 ;;		_TimerDone
 27328 ;; This function is called by:
 27329 ;;		_check_help
 27330 ;; This function uses a reentrant model
 27331 ;;
 27332                           
 27333                           	psect	text108
 27334  01CB30                     __ptext108:
 27335                           	opt callstack 0
 27336  01CB30                     _help_button:
 27337                           	opt callstack 13
 27338                           
 27339                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 27340                           
 27341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27342                           ;incstack = 0
 27343  01CB30  B0CB               	btfsc	203,0,c	;volatile
 27344  01CB32  D00C               	goto	l1796
 27345                           
 27346                           ;mconfig.c: 29:   V.help = 1;
 27347  01CB34  0101               	movlb	1	; () banked
 27348  01CB36  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 27349                           
 27350                           ; BSR set to: 1
 27351                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 27352  01CB38  0E08               	movlw	8
 27353  01CB3A  6EE6               	movwf	postinc1,c
 27354  01CB3C  EC69  F0E7         	call	_TimerDone	;wreg free
 27355  01CB40  5001               	movf	btemp^0,w,c
 27356  01CB42  B4D8               	btfsc	status,2,c
 27357  01CB44  D003               	goto	l1796
 27358                           
 27359                           ;mconfig.c: 31:    return 1;
 27360  01CB46  0E01               	movlw	1
 27361  01CB48  6E01               	movwf	btemp^0,c
 27362  01CB4A  0012               	return	
 27363  01CB4C                     l1796:
 27364                           
 27365                           ;mconfig.c: 34:  if (!V.help)
 27366  01CB4C  0101               	movlb	1	; () banked
 27367  01CB4E  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 27368  01CB50  D008               	goto	l11500
 27369                           
 27370                           ; BSR set to: 1
 27371                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 27372  01CB52  0E2C               	movlw	44
 27373  01CB54  6EE6               	movwf	postinc1,c
 27374  01CB56  0E01               	movlw	1
 27375  01CB58  6EE6               	movwf	postinc1,c
 27376  01CB5A  0E08               	movlw	8
 27377  01CB5C  6EE6               	movwf	postinc1,c
 27378  01CB5E  ECDC  F0E4         	call	_StartTimer	;wreg free
 27379  01CB62                     l11500:
 27380                           
 27381                           ;mconfig.c: 37:  return 0;
 27382  01CB62  0E00               	movlw	0
 27383  01CB64  6E01               	movwf	btemp^0,c
 27384                           
 27385                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 27386  01CB66  0012               	return		;funcret
 27387  01CB68                     __end_of_help_button:
 27388                           	opt callstack 0
 27389                           
 27390 ;; *************** function _TimerDone *****************
 27391 ;; Defined at:
 27392 ;;		line 20 in file "timers.c"
 27393 ;; Parameters:    Size  Location     Type
 27394 ;;  timer           1  [STACK] const unsigned char 
 27395 ;; Auto vars:     Size  Location     Type
 27396 ;;		None
 27397 ;; Return value:  Size  Location     Type
 27398 ;;                  1  [STACK] _Bool 
 27399 ;; Registers used:
 27400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 27401 ;; Tracked objects:
 27402 ;;		On entry : 0/1
 27403 ;;		On exit  : 0/0
 27404 ;;		Unchanged: 0/0
 27405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27410 ;;Total ram usage:        0 bytes
 27411 ;; Hardware stack levels used:    1
 27412 ;; Hardware stack levels required when called:   15
 27413 ;; This function calls:
 27414 ;;		Nothing
 27415 ;; This function is called by:
 27416 ;;		_main
 27417 ;;		_WaitMs
 27418 ;;		_help_button
 27419 ;;		_check_help
 27420 ;;		_set_display_info
 27421 ;;		_update_adc_result
 27422 ;;		_esr_check
 27423 ;; This function uses a reentrant model
 27424 ;;
 27425                           
 27426                           	psect	text109
 27427  01CED2                     __ptext109:
 27428                           	opt callstack 0
 27429  01CED2                     _TimerDone:
 27430                           	opt callstack 14
 27431                           
 27432                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27433                           ;incstack = 0
 27434  01CED2  0004               	clrwdt		;# 
 27435                           
 27436                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 27437                           ;stkvar	_timer @ sp[(0)+-1]
 27438  01CED4  0EFF               	movlw	-1
 27439  01CED6  50E3               	movf	plusw1,w,c
 27440  01CED8  0D02               	mullw	2
 27441  01CEDA  0EAB               	movlw	low _tickCount
 27442  01CEDC  24F3               	addwf	243,w,c
 27443  01CEDE  6ED9               	movwf	fsr2l,c
 27444  01CEE0  0E02               	movlw	high _tickCount
 27445  01CEE2  20F4               	addwfc	prodh,w,c
 27446  01CEE4  6EDA               	movwf	fsr2h,c
 27447  01CEE6  50DE               	movf	postinc2,w,c
 27448  01CEE8  10DE               	iorwf	postinc2,w,c
 27449  01CEEA  A4D8               	btfss	status,2,c
 27450  01CEEC  D002               	goto	l10578
 27451                           
 27452                           ;timers.c: 24:   return 1;
 27453  01CEEE  0E01               	movlw	1
 27454  01CEF0  D001               	goto	L32
 27455  01CEF2                     l10578:
 27456                           
 27457                           ;timers.c: 26:  return 0;
 27458  01CEF2  0E00               	movlw	0
 27459  01CEF4                     L32:
 27460  01CEF4  6E01               	movwf	btemp^0,c
 27461                           
 27462                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 27463  01CEF6  52E5               	movf	postdec1,f,c
 27464  01CEF8  0012               	return		;funcret
 27465  01CEFA                     __end_of_TimerDone:
 27466                           	opt callstack 0
 27467                           
 27468 ;; *************** function _StartTimer *****************
 27469 ;; Defined at:
 27470 ;;		line 12 in file "timers.c"
 27471 ;; Parameters:    Size  Location     Type
 27472 ;;  timer           1  [STACK] const unsigned char 
 27473 ;;  count           2  [STACK] const unsigned short 
 27474 ;; Auto vars:     Size  Location     Type
 27475 ;;		None
 27476 ;; Return value:  Size  Location     Type
 27477 ;;                  1  [STACK] void 
 27478 ;; Registers used:
 27479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27480 ;; Tracked objects:
 27481 ;;		On entry : 0/0
 27482 ;;		On exit  : 0/0
 27483 ;;		Unchanged: 0/0
 27484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27489 ;;Total ram usage:        0 bytes
 27490 ;; Hardware stack levels used:    1
 27491 ;; Hardware stack levels required when called:   15
 27492 ;; This function calls:
 27493 ;;		Nothing
 27494 ;; This function is called by:
 27495 ;;		_main
 27496 ;;		_WaitMs
 27497 ;;		_help_button
 27498 ;;		_check_help
 27499 ;;		_update_adc_result
 27500 ;;		_calc_bsoc
 27501 ;;		_esr_check
 27502 ;; This function uses a reentrant model
 27503 ;;
 27504                           
 27505                           	psect	text110
 27506  01C9B8                     __ptext110:
 27507                           	opt callstack 0
 27508  01C9B8                     _StartTimer:
 27509                           	opt callstack 0
 27510                           
 27511                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 27512                           ;stkvar	_count @ sp[(0)+-3]
 27513                           
 27514                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27515                           ;incstack = 0
 27516 ;; hardware stack exceeded
 27517  01C9B8  0EFD               	movlw	-3
 27518  01C9BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 27519  01C9C0  0EFE               	movlw	-2
 27520  01C9C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 27521  01C9C8  90D8               	bcf	status,0,c
 27522  01C9CA  340B               	rlcf	(btemp+10)^0,w,c
 27523  01C9CC  6E09               	movwf	(btemp+8)^0,c
 27524  01C9CE  340C               	rlcf	(btemp+11)^0,w,c
 27525  01C9D0  6E0A               	movwf	(btemp+9)^0,c
 27526                           
 27527                           ;stkvar	_timer @ sp[(0)+-1]
 27528  01C9D2  0EFF               	movlw	-1
 27529  01C9D4  50E3               	movf	plusw1,w,c
 27530  01C9D6  0D02               	mullw	2
 27531  01C9D8  0EAB               	movlw	low _tickCount
 27532  01C9DA  24F3               	addwf	243,w,c
 27533  01C9DC  6ED9               	movwf	fsr2l,c
 27534  01C9DE  0E02               	movlw	high _tickCount
 27535  01C9E0  20F4               	addwfc	prodh,w,c
 27536  01C9E2  6EDA               	movwf	fsr2h,c
 27537  01C9E4  0060  F027  FFDE   	movff	btemp+8,postinc2
 27538  01C9EA  0060  F02B  FFDD   	movff	btemp+9,postdec2
 27539                           
 27540                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 27541  01C9F0  52E5               	movf	postdec1,f,c
 27542  01C9F2  52E5               	movf	postdec1,f,c
 27543  01C9F4  52E5               	movf	postdec1,f,c
 27544  01C9F6  0012               	return		;funcret
 27545  01C9F8                     __end_of_StartTimer:
 27546                           	opt callstack 0
 27547                           
 27548 ;; *************** function _display_info *****************
 27549 ;; Defined at:
 27550 ;;		line 190 in file "mconfig.c"
 27551 ;; Parameters:    Size  Location     Type
 27552 ;;		None
 27553 ;; Auto vars:     Size  Location     Type
 27554 ;;		None
 27555 ;; Return value:  Size  Location     Type
 27556 ;;                  1  [STACK] enum E16677
 27557 ;; Registers used:
 27558 ;;		btemp
 27559 ;; Tracked objects:
 27560 ;;		On entry : 0/1
 27561 ;;		On exit  : 0/0
 27562 ;;		Unchanged: 0/0
 27563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27568 ;;Total ram usage:        0 bytes
 27569 ;; Hardware stack levels used:    1
 27570 ;; Hardware stack levels required when called:   15
 27571 ;; This function calls:
 27572 ;;		Nothing
 27573 ;; This function is called by:
 27574 ;;		_check_help
 27575 ;; This function uses a reentrant model
 27576 ;;
 27577                           
 27578                           	psect	text111
 27579  01D4FC                     __ptext111:
 27580                           	opt callstack 0
 27581  01D4FC                     _display_info:
 27582                           	opt callstack 14
 27583                           
 27584                           ;mconfig.c: 192:  return V.response.info;
 27585                           
 27586                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27587                           ;incstack = 0
 27588  01D4FC  0060  F6AC  F001   	movff	_V+164,btemp	;volatile
 27589                           
 27590                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 27591  01D502  0012               	return		;funcret
 27592  01D504                     __end_of_display_info:
 27593                           	opt callstack 0
 27594                           
 27595 ;; *************** function _display_help *****************
 27596 ;; Defined at:
 27597 ;;		line 195 in file "mconfig.c"
 27598 ;; Parameters:    Size  Location     Type
 27599 ;;		None
 27600 ;; Auto vars:     Size  Location     Type
 27601 ;;		None
 27602 ;; Return value:  Size  Location     Type
 27603 ;;                  1  [STACK] enum E16677
 27604 ;; Registers used:
 27605 ;;		btemp
 27606 ;; Tracked objects:
 27607 ;;		On entry : 3F/1
 27608 ;;		On exit  : 0/0
 27609 ;;		Unchanged: 0/0
 27610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27615 ;;Total ram usage:        0 bytes
 27616 ;; Hardware stack levels used:    1
 27617 ;; Hardware stack levels required when called:   15
 27618 ;; This function calls:
 27619 ;;		Nothing
 27620 ;; This function is called by:
 27621 ;;		_check_help
 27622 ;; This function uses a reentrant model
 27623 ;;
 27624                           
 27625                           	psect	text112
 27626  01D504                     __ptext112:
 27627                           	opt callstack 0
 27628  01D504                     _display_help:
 27629                           	opt callstack 14
 27630                           
 27631                           ;mconfig.c: 197:  return V.response.help_temp;
 27632                           
 27633                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27634                           ;incstack = 0
 27635  01D504  0060  F6B0  F001   	movff	_V+165,btemp	;volatile
 27636                           
 27637                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 27638  01D50A  0012               	return		;funcret
 27639  01D50C                     __end_of_display_help:
 27640                           	opt callstack 0
 27641                           
 27642 ;; *************** function _check_enter_button *****************
 27643 ;; Defined at:
 27644 ;;		line 49 in file "hid.c"
 27645 ;; Parameters:    Size  Location     Type
 27646 ;;  h               1  [STACK] PTR struct H_data
 27647 ;;		 -> H(9), 
 27648 ;; Auto vars:     Size  Location     Type
 27649 ;;		None
 27650 ;; Return value:  Size  Location     Type
 27651 ;;                  1  [STACK] _Bool 
 27652 ;; Registers used:
 27653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 27654 ;; Tracked objects:
 27655 ;;		On entry : 0/0
 27656 ;;		On exit  : 0/0
 27657 ;;		Unchanged: 0/0
 27658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27663 ;;Total ram usage:        0 bytes
 27664 ;; Hardware stack levels used:    1
 27665 ;; Hardware stack levels required when called:   15
 27666 ;; This function calls:
 27667 ;;		Nothing
 27668 ;; This function is called by:
 27669 ;;		_main
 27670 ;; This function uses a reentrant model
 27671 ;;
 27672                           
 27673                           	psect	text113
 27674  01C9F8                     __ptext113:
 27675                           	opt callstack 0
 27676  01C9F8                     _check_enter_button:
 27677                           	opt callstack 15
 27678                           
 27679                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 27680                           ;stkvar	_h @ sp[(0)+-1]
 27681                           
 27682                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27683                           ;incstack = 0
 27684  01C9F8  0EFF               	movlw	-1
 27685  01C9FA  50E3               	movf	plusw1,w,c
 27686  01C9FC  6ED9               	movwf	fsr2l,c
 27687  01C9FE  6ADA               	clrf	fsr2h,c
 27688  01CA00  0E04               	movlw	4
 27689  01CA02  26D9               	addwf	fsr2l,f,c
 27690  01CA04  50DF               	movf	indf2,w,c
 27691  01CA06  A4D8               	btfss	status,2,c
 27692  01CA08  D013               	goto	l12356
 27693                           
 27694                           ;stkvar	_h @ sp[(0)+-1]
 27695  01CA0A  0EFF               	movlw	-1
 27696  01CA0C  50E3               	movf	plusw1,w,c
 27697  01CA0E  6ED9               	movwf	fsr2l,c
 27698  01CA10  6ADA               	clrf	fsr2h,c
 27699  01CA12  0E05               	movlw	5
 27700  01CA14  26D9               	addwf	fsr2l,f,c
 27701  01CA16  50DF               	movf	indf2,w,c
 27702  01CA18  A4D8               	btfss	status,2,c
 27703  01CA1A  D00A               	goto	l12356
 27704                           
 27705                           ;hid.c: 52:   h->wait_enter = 1;
 27706                           ;stkvar	_h @ sp[(0)+-1]
 27707  01CA1C  0EFF               	movlw	-1
 27708  01CA1E  50E3               	movf	plusw1,w,c
 27709  01CA20  6ED9               	movwf	fsr2l,c
 27710  01CA22  6ADA               	clrf	fsr2h,c
 27711  01CA24  0E04               	movlw	4
 27712  01CA26  26D9               	addwf	fsr2l,f,c
 27713  01CA28  0E01               	movlw	1
 27714  01CA2A  6EDF               	movwf	indf2,c
 27715                           
 27716                           ;hid.c: 53:   return 1;
 27717  01CA2C  0E01               	movlw	1
 27718  01CA2E  D001               	goto	L33
 27719  01CA30                     l12356:
 27720                           
 27721                           ;hid.c: 55:  return 0;
 27722  01CA30  0E00               	movlw	0
 27723  01CA32                     L33:
 27724  01CA32  6E01               	movwf	btemp^0,c
 27725                           
 27726                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 27727  01CA34  52E5               	movf	postdec1,f,c
 27728  01CA36  0012               	return		;funcret
 27729  01CA38                     __end_of_check_enter_button:
 27730                           	opt callstack 0
 27731                           
 27732 ;; *************** function _calc_ror_data *****************
 27733 ;; Defined at:
 27734 ;;		line 103 in file "mbmc.c"
 27735 ;; Parameters:    Size  Location     Type
 27736 ;;		None
 27737 ;; Auto vars:     Size  Location     Type
 27738 ;;		None
 27739 ;; Return value:  Size  Location     Type
 27740 ;;                  1  [STACK] void 
 27741 ;; Registers used:
 27742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27743 ;; Tracked objects:
 27744 ;;		On entry : 0/0
 27745 ;;		On exit  : 0/0
 27746 ;;		Unchanged: 0/0
 27747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27752 ;;Total ram usage:        0 bytes
 27753 ;; Hardware stack levels used:    1
 27754 ;; Hardware stack levels required when called:   18
 27755 ;; This function calls:
 27756 ;;		___flge
 27757 ;;		___flsub
 27758 ;;		_conv_raw_result
 27759 ;;		_fabsf
 27760 ;; This function is called by:
 27761 ;;		_main
 27762 ;; This function uses a reentrant model
 27763 ;;
 27764                           
 27765                           	psect	text114
 27766  01946E                     __ptext114:
 27767                           	opt callstack 0
 27768  01946E                     _calc_ror_data:
 27769                           	opt callstack 12
 27770                           
 27771                           ;mbmc.c: 105:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 107:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 27772                           
 27773                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27774                           ;incstack = 0
 27775  01946E  0060  F21B  FFE6   	movff	calc_ror_data@bcror,postinc1
 27776  019474  0060  F21F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 27777  01947A  0060  F223  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 27778  019480  0060  F227  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 27779  019486  0E00               	movlw	0
 27780  019488  6EE6               	movwf	postinc1,c
 27781  01948A  0E00               	movlw	0
 27782  01948C  6EE6               	movwf	postinc1,c
 27783  01948E  EC9D  F0AA         	call	_conv_raw_result	;wreg free
 27784  019492  0060  F007  FFE6   	movff	btemp,postinc1
 27785  019498  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27786  01949E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27787  0194A4  0060  F013  FFE6   	movff	btemp+3,postinc1
 27788  0194AA  EC36  F0E4         	call	___flsub	;wreg free
 27789  0194AE  0060  F007  FFE6   	movff	btemp,postinc1
 27790  0194B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27791  0194BA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27792  0194C0  0060  F013  FFE6   	movff	btemp+3,postinc1
 27793  0194C6  EC89  F0DA         	call	_fabsf	;wreg free
 27794  0194CA  0060  F004  F96F   	movff	btemp,_C+112	;volatile
 27795  0194D0  0060  F008  F970   	movff	btemp+1,_C+113	;volatile
 27796  0194D6  0060  F00C  F971   	movff	btemp+2,_C+114	;volatile
 27797  0194DC  0060  F010  F972   	movff	btemp+3,_C+115	;volatile
 27798                           
 27799                           ;mbmc.c: 108:  bcror = conv_raw_result(C_BATT, CONV);
 27800  0194E2  0E00               	movlw	0
 27801  0194E4  6EE6               	movwf	postinc1,c
 27802  0194E6  0E00               	movlw	0
 27803  0194E8  6EE6               	movwf	postinc1,c
 27804  0194EA  EC9D  F0AA         	call	_conv_raw_result	;wreg free
 27805  0194EE  0060  F004  F086   	movff	btemp,calc_ror_data@bcror
 27806  0194F4  0060  F008  F087   	movff	btemp+1,calc_ror_data@bcror+1
 27807  0194FA  0060  F00C  F088   	movff	btemp+2,calc_ror_data@bcror+2
 27808  019500  0060  F010  F089   	movff	btemp+3,calc_ror_data@bcror+3
 27809                           
 27810                           ;mbmc.c: 109:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 27811  019506  0060  F22B  FFE6   	movff	calc_ror_data@bvror,postinc1
 27812  01950C  0060  F22F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 27813  019512  0060  F233  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 27814  019518  0060  F237  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 27815  01951E  0E00               	movlw	0
 27816  019520  6EE6               	movwf	postinc1,c
 27817  019522  0E04               	movlw	4
 27818  019524  6EE6               	movwf	postinc1,c
 27819  019526  EC9D  F0AA         	call	_conv_raw_result	;wreg free
 27820  01952A  0060  F007  FFE6   	movff	btemp,postinc1
 27821  019530  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27822  019536  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27823  01953C  0060  F013  FFE6   	movff	btemp+3,postinc1
 27824  019542  EC36  F0E4         	call	___flsub	;wreg free
 27825  019546  0060  F007  FFE6   	movff	btemp,postinc1
 27826  01954C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27827  019552  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27828  019558  0060  F013  FFE6   	movff	btemp+3,postinc1
 27829  01955E  EC89  F0DA         	call	_fabsf	;wreg free
 27830  019562  0060  F004  F96B   	movff	btemp,_C+108	;volatile
 27831  019568  0060  F008  F96C   	movff	btemp+1,_C+109	;volatile
 27832  01956E  0060  F00C  F96D   	movff	btemp+2,_C+110	;volatile
 27833  019574  0060  F010  F96E   	movff	btemp+3,_C+111	;volatile
 27834                           
 27835                           ;mbmc.c: 110:  if (C.bv_ror < 0.0051)
 27836  01957A  0EE7               	movlw	231
 27837  01957C  6EE6               	movwf	postinc1,c
 27838  01957E  0E1D               	movlw	29
 27839  019580  6EE6               	movwf	postinc1,c
 27840  019582  0EA7               	movlw	167
 27841  019584  6EE6               	movwf	postinc1,c
 27842  019586  0E3B               	movlw	59
 27843  019588  6EE6               	movwf	postinc1,c
 27844  01958A  EE22  F16B         	lfsr	2,_C+108	;volatile
 27845  01958E  006F FF7B FFE6     	movff	postinc2,postinc1
 27846  019594  006F FF7B FFE6     	movff	postinc2,postinc1
 27847  01959A  006F FF7B FFE6     	movff	postinc2,postinc1
 27848  0195A0  006F FF7B FFE6     	movff	postinc2,postinc1
 27849  0195A6  EC2C  F0CD         	call	___flge	;wreg free
 27850  0195AA  B001               	btfsc	btemp& (0+255),0,c
 27851  0195AC  D010               	goto	l12076
 27852                           
 27853                           ;mbmc.c: 111:   C.bv_ror = 0.0140 + 0.0001;
 27854  0195AE  0EB0               	movlw	176
 27855  0195B0  006F FFA0  F96B    	movff	wreg,_C+108	;volatile
 27856  0195B6  0E03               	movlw	3
 27857  0195B8  006F FFA0  F96C    	movff	wreg,_C+109	;volatile
 27858  0195BE  0E67               	movlw	103
 27859  0195C0  006F FFA0  F96D    	movff	wreg,_C+110	;volatile
 27860  0195C6  0E3C               	movlw	60
 27861  0195C8  006F FFA0  F96E    	movff	wreg,_C+111	;volatile
 27862  0195CE                     l12076:
 27863                           
 27864                           ;mbmc.c: 112:  bvror = conv_raw_result(V_BAT, CONV);
 27865  0195CE  0E00               	movlw	0
 27866  0195D0  6EE6               	movwf	postinc1,c
 27867  0195D2  0E04               	movlw	4
 27868  0195D4  6EE6               	movwf	postinc1,c
 27869  0195D6  EC9D  F0AA         	call	_conv_raw_result	;wreg free
 27870  0195DA  0060  F004  F08A   	movff	btemp,calc_ror_data@bvror
 27871  0195E0  0060  F008  F08B   	movff	btemp+1,calc_ror_data@bvror+1
 27872  0195E6  0060  F00C  F08C   	movff	btemp+2,calc_ror_data@bvror+2
 27873  0195EC  0060  F010  F08D   	movff	btemp+3,calc_ror_data@bvror+3
 27874                           
 27875                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 27876  0195F2  0012               	return		;funcret
 27877  0195F4                     __end_of_calc_ror_data:
 27878                           	opt callstack 0
 27879                           
 27880 ;; *************** function _fabsf *****************
 27881 ;; Defined at:
 27882 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 27883 ;; Parameters:    Size  Location     Type
 27884 ;;  x               4  [STACK] float 
 27885 ;; Auto vars:     Size  Location     Type
 27886 ;;  u               4  [STACK] struct .
 27887 ;; Return value:  Size  Location     Type
 27888 ;;                  4  [STACK] float 
 27889 ;; Registers used:
 27890 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 27891 ;; Tracked objects:
 27892 ;;		On entry : 0/0
 27893 ;;		On exit  : 0/0
 27894 ;;		Unchanged: 0/0
 27895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27900 ;;Total ram usage:        0 bytes
 27901 ;; Hardware stack levels used:    1
 27902 ;; Hardware stack levels required when called:   15
 27903 ;; This function calls:
 27904 ;;		Nothing
 27905 ;; This function is called by:
 27906 ;;		_main
 27907 ;;		_calc_ror_data
 27908 ;;		_calc_bsoc
 27909 ;;		_esr_check
 27910 ;; This function uses a reentrant model
 27911 ;;
 27912                           
 27913                           	psect	text115
 27914  01B512                     __ptext115:
 27915                           	opt callstack 0
 27916  01B512                     _fabsf:
 27917                           	opt callstack 0
 27918                           
 27919                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27920  01B512  52E6               	movf	postinc1,f,c
 27921  01B514  52E6               	movf	postinc1,f,c
 27922  01B516  52E6               	movf	postinc1,f,c
 27923  01B518  52E6               	movf	postinc1,f,c
 27924                           
 27925                           ;incstack = 0
 27926 ;; hardware stack exceeded
 27927  01B51A  0060  F1F8  F009   	movff	fabsf@F463,btemp+8
 27928  01B520  0060  F1FC  F00A   	movff	fabsf@F463+1,btemp+9
 27929  01B526  0060  F200  F00B   	movff	fabsf@F463+2,btemp+10
 27930  01B52C  0060  F204  F00C   	movff	fabsf@F463+3,btemp+11
 27931                           
 27932                           ;stkvar	_u @ sp[(-4)+0]
 27933  01B532  0EFC               	movlw	-4
 27934  01B534  0060  F027  FFE3   	movff	btemp+8,plusw1
 27935  01B53A  0EFD               	movlw	-3
 27936  01B53C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27937  01B542  0EFE               	movlw	-2
 27938  01B544  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27939  01B54A  0EFF               	movlw	-1
 27940  01B54C  0060  F033  FFE3   	movff	btemp+11,plusw1
 27941                           
 27942                           ;stkvar	_x @ sp[(-4)+-4]
 27943  01B552  0EF8               	movlw	-8
 27944  01B554  006F FF8C  F009    	movff	plusw1,btemp+8
 27945  01B55A  0EF9               	movlw	-7
 27946  01B55C  006F FF8C  F00A    	movff	plusw1,btemp+9
 27947  01B562  0EFA               	movlw	-6
 27948  01B564  006F FF8C  F00B    	movff	plusw1,btemp+10
 27949  01B56A  0EFB               	movlw	-5
 27950  01B56C  006F FF8C  F00C    	movff	plusw1,btemp+11
 27951                           
 27952                           ;stkvar	_u @ sp[(-4)+0]
 27953  01B572  0EFC               	movlw	-4
 27954  01B574  0060  F027  FFE3   	movff	btemp+8,plusw1
 27955  01B57A  0EFD               	movlw	-3
 27956  01B57C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27957  01B582  0EFE               	movlw	-2
 27958  01B584  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27959  01B58A  0EFF               	movlw	-1
 27960  01B58C  0060  F033  FFE3   	movff	btemp+11,plusw1
 27961                           
 27962                           ;stkvar	_u @ sp[(-4)+0]
 27963  01B592  0EFF               	movlw	-1
 27964  01B594  9EE3               	bcf	plusw1,7,c
 27965                           
 27966                           ;stkvar	_u @ sp[(-4)+0]
 27967  01B596  0EFC               	movlw	-4
 27968  01B598  006F FF8C  F001    	movff	plusw1,btemp
 27969  01B59E  0EFD               	movlw	-3
 27970  01B5A0  006F FF8C  F002    	movff	plusw1,btemp+1
 27971  01B5A6  0EFE               	movlw	-2
 27972  01B5A8  006F FF8C  F003    	movff	plusw1,btemp+2
 27973  01B5AE  0EFF               	movlw	-1
 27974  01B5B0  006F FF8C  F004    	movff	plusw1,btemp+3
 27975                           
 27976                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 27977  01B5B6  0EF8               	movlw	248
 27978  01B5B8  26E1               	addwf	fsr1l,f,c
 27979  01B5BA  0EFF               	movlw	255
 27980  01B5BC  22E2               	addwfc	fsr1h,f,c
 27981  01B5BE  0012               	return		;funcret
 27982  01B5C0                     __end_of_fabsf:
 27983                           	opt callstack 0
 27984                           
 27985 ;; *************** function _conv_raw_result *****************
 27986 ;; Defined at:
 27987 ;;		line 133 in file "daq.c"
 27988 ;; Parameters:    Size  Location     Type
 27989 ;;  chan            1  [STACK] const enum E16605
 27990 ;;  to_what         1  [STACK] const enum E16998
 27991 ;; Auto vars:     Size  Location     Type
 27992 ;;		None
 27993 ;; Return value:  Size  Location     Type
 27994 ;;                  4  [STACK] float 
 27995 ;; Registers used:
 27996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27997 ;; Tracked objects:
 27998 ;;		On entry : 0/0
 27999 ;;		On exit  : 0/0
 28000 ;;		Unchanged: 0/0
 28001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28006 ;;Total ram usage:        0 bytes
 28007 ;; Hardware stack levels used:    1
 28008 ;; Hardware stack levels required when called:   17
 28009 ;; This function calls:
 28010 ;;		___fldiv
 28011 ;;		___flmul
 28012 ;;		___flsub
 28013 ;;		___xxtofl
 28014 ;;		_get_raw_result
 28015 ;;		_nanf
 28016 ;; This function is called by:
 28017 ;;		_main
 28018 ;;		_convert_adc_data
 28019 ;;		_calc_ror_data
 28020 ;;		_check_day_time
 28021 ;;		_init_bsoc
 28022 ;;		_esr_check
 28023 ;; This function uses a reentrant model
 28024 ;;
 28025                           
 28026                           	psect	text116
 28027  01553A                     __ptext116:
 28028                           	opt callstack 0
 28029  01553A                     _conv_raw_result:
 28030                           	opt callstack 0
 28031                           
 28032                           ;daq.c: 133: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 134: {;daq.c: 136:  switch (to_what) {
 28033                           
 28034                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28035                           ;incstack = 0
 28036 ;; hardware stack exceeded
 28037  01553A  D24A               	goto	l10560
 28038  01553C                     l10506:
 28039                           
 28040                           ;daq.c: 138:   if (!(0b0011110001110111 >> chan & 0x1))
 28041                           ;stkvar	_chan @ sp[(0)+-1]
 28042  01553C  0EFF               	movlw	-1
 28043  01553E  006F FF8C  F00C    	movff	plusw1,btemp+11
 28044  015544  0E77               	movlw	119
 28045  015546  6E09               	movwf	(btemp+8)^0,c
 28046  015548  0E3C               	movlw	60
 28047  01554A  6E0A               	movwf	(btemp+9)^0,c
 28048  01554C  2A0C               	incf	(btemp+11)^0,f,c
 28049  01554E  D003               	goto	u9704
 28050  015550                     u9705:
 28051  015550  340A               	rlcf	(btemp+9)^0,w,c
 28052  015552  320A               	rrcf	(btemp+9)^0,f,c
 28053  015554  3209               	rrcf	(btemp+8)^0,f,c
 28054  015556                     u9704:
 28055  015556  2E0C               	decfsz	(btemp+11)^0,f,c
 28056  015558  D7FB               	goto	u9705
 28057  01555A  B009               	btfsc	(btemp+8)^0,0,c
 28058  01555C  D007               	goto	l10512
 28059                           
 28060                           ;daq.c: 139:    return nanf("");
 28061  01555E  0E0D               	movlw	low (STR_83+126)
 28062  015560  6EE6               	movwf	postinc1,c
 28063  015562  0EFB               	movlw	high (STR_83+126)
 28064  015564  6EE6               	movwf	postinc1,c
 28065  015566  ECAB  F0E1         	call	_nanf	;wreg free
 28066  01556A  D242               	goto	l1953
 28067  01556C                     l10512:
 28068                           
 28069                           ;daq.c: 141:   if (0b0000000000000011 >> chan & 0x1) {
 28070                           ;stkvar	_chan @ sp[(0)+-1]
 28071  01556C  0EFF               	movlw	-1
 28072  01556E  006F FF8C  F00C    	movff	plusw1,btemp+11
 28073  015574  0E03               	movlw	3
 28074  015576  6E09               	movwf	(btemp+8)^0,c
 28075  015578  0E00               	movlw	0
 28076  01557A  6E0A               	movwf	(btemp+9)^0,c
 28077  01557C  2A0C               	incf	(btemp+11)^0,f,c
 28078  01557E  D003               	goto	u9724
 28079  015580                     u9725:
 28080  015580  340A               	rlcf	(btemp+9)^0,w,c
 28081  015582  320A               	rrcf	(btemp+9)^0,f,c
 28082  015584  3209               	rrcf	(btemp+8)^0,f,c
 28083  015586                     u9724:
 28084  015586  2E0C               	decfsz	(btemp+11)^0,f,c
 28085  015588  D7FB               	goto	u9725
 28086  01558A  A009               	btfss	(btemp+8)^0,0,c
 28087  01558C  D0F3               	goto	l10526
 28088                           
 28089                           ;daq.c: 142:    if (0b0000000000000001 >> chan & 0x1) {
 28090                           ;stkvar	_chan @ sp[(0)+-1]
 28091  01558E  0EFF               	movlw	-1
 28092  015590  006F FF8C  F00C    	movff	plusw1,btemp+11
 28093  015596  0E01               	movlw	1
 28094  015598  6E09               	movwf	(btemp+8)^0,c
 28095  01559A  0E00               	movlw	0
 28096  01559C  6E0A               	movwf	(btemp+9)^0,c
 28097  01559E  2A0C               	incf	(btemp+11)^0,f,c
 28098  0155A0  D003               	goto	u9744
 28099  0155A2                     u9745:
 28100  0155A2  340A               	rlcf	(btemp+9)^0,w,c
 28101  0155A4  320A               	rrcf	(btemp+9)^0,f,c
 28102  0155A6  3209               	rrcf	(btemp+8)^0,f,c
 28103  0155A8                     u9744:
 28104  0155A8  2E0C               	decfsz	(btemp+11)^0,f,c
 28105  0155AA  D7FB               	goto	u9745
 28106  0155AC  A009               	btfss	(btemp+8)^0,0,c
 28107  0155AE  D071               	goto	l10522
 28108                           
 28109                           ;daq.c: 143:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 28110  0155B0  0060  F8AB  FFE6   	movff	_R+42,postinc1
 28111  0155B6  0060  F8AF  FFE6   	movff	_R+43,postinc1
 28112  0155BC  0060  F8B3  FFE6   	movff	_R+44,postinc1
 28113  0155C2  0060  F8B7  FFE6   	movff	_R+45,postinc1
 28114  0155C8  0060  F898  F009   	movff	_R+38,btemp+8	;volatile
 28115  0155CE  0060  F89C  F00A   	movff	_R+39,btemp+9	;volatile
 28116  0155D4  0E00               	movlw	0
 28117  0155D6  BE0A               	btfsc	(btemp+9)^0,7,c
 28118  0155D8  0EFF               	movlw	255
 28119  0155DA  6E0B               	movwf	(btemp+10)^0,c
 28120  0155DC  6E0C               	movwf	(btemp+11)^0,c
 28121  0155DE  0060  F027  FFE6   	movff	btemp+8,postinc1
 28122  0155E4  0060  F02B  FFE6   	movff	btemp+9,postinc1
 28123  0155EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 28124  0155F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 28125  0155F6  0E01               	movlw	1
 28126  0155F8  6EE6               	movwf	postinc1,c
 28127  0155FA  ECA7  F0C6         	call	___xxtofl	;wreg free
 28128  0155FE  0060  F007  FFE6   	movff	btemp,postinc1
 28129  015604  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28130  01560A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28131  015610  0060  F013  FFE6   	movff	btemp+3,postinc1
 28132                           
 28133                           ;stkvar	_chan @ sp[(-8)+-1]
 28134  015616  0EF7               	movlw	-9
 28135  015618  50E3               	movf	plusw1,w,c
 28136  01561A  6EE6               	movwf	postinc1,c
 28137  01561C  ECFF  F0E8         	call	_get_raw_result	;wreg free
 28138  015620  0060  F004  F00B   	movff	btemp,btemp+10
 28139  015626  0060  F008  F00C   	movff	btemp+1,btemp+11
 28140  01562C  500B               	movf	(btemp+10)^0,w,c
 28141  01562E  6E05               	movwf	(btemp+4)^0,c
 28142  015630  500C               	movf	(btemp+11)^0,w,c
 28143  015632  6E06               	movwf	(btemp+5)^0,c
 28144  015634  6A07               	clrf	(btemp+6)^0,c
 28145  015636  6A08               	clrf	(btemp+7)^0,c
 28146  015638  0060  F017  FFE6   	movff	btemp+4,postinc1
 28147  01563E  0060  F01B  FFE6   	movff	btemp+5,postinc1
 28148  015644  0060  F01F  FFE6   	movff	btemp+6,postinc1
 28149  01564A  0060  F023  FFE6   	movff	btemp+7,postinc1
 28150  015650  0E00               	movlw	0
 28151  015652  6EE6               	movwf	postinc1,c
 28152  015654  ECA7  F0C6         	call	___xxtofl	;wreg free
 28153  015658  0060  F007  FFE6   	movff	btemp,postinc1
 28154  01565E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28155  015664  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28156  01566A  0060  F013  FFE6   	movff	btemp+3,postinc1
 28157  015670  EC36  F0E4         	call	___flsub	;wreg free
 28158  015674  0060  F007  FFE6   	movff	btemp,postinc1
 28159  01567A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28160  015680  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28161  015686  0060  F013  FFE6   	movff	btemp+3,postinc1
 28162  01568C  ECED  F09F         	call	___flmul	;wreg free
 28163  015690  D1AF               	goto	l1953
 28164  015692                     l10522:
 28165                           
 28166                           ;daq.c: 145:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 28167  015692  0060  F8BB  FFE6   	movff	_R+46,postinc1
 28168  015698  0060  F8BF  FFE6   	movff	_R+47,postinc1
 28169  01569E  0060  F8C3  FFE6   	movff	_R+48,postinc1
 28170  0156A4  0060  F8C7  FFE6   	movff	_R+49,postinc1
 28171  0156AA  0060  F8A0  F009   	movff	_R+40,btemp+8	;volatile
 28172  0156B0  0060  F8A4  F00A   	movff	_R+41,btemp+9	;volatile
 28173  0156B6  0E00               	movlw	0
 28174  0156B8  BE0A               	btfsc	(btemp+9)^0,7,c
 28175  0156BA  0EFF               	movlw	255
 28176  0156BC  6E0B               	movwf	(btemp+10)^0,c
 28177  0156BE  6E0C               	movwf	(btemp+11)^0,c
 28178  0156C0  0060  F027  FFE6   	movff	btemp+8,postinc1
 28179  0156C6  0060  F02B  FFE6   	movff	btemp+9,postinc1
 28180  0156CC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 28181  0156D2  0060  F033  FFE6   	movff	btemp+11,postinc1
 28182  0156D8  0E01               	movlw	1
 28183  0156DA  6EE6               	movwf	postinc1,c
 28184  0156DC  ECA7  F0C6         	call	___xxtofl	;wreg free
 28185  0156E0  0060  F007  FFE6   	movff	btemp,postinc1
 28186  0156E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28187  0156EC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28188  0156F2  0060  F013  FFE6   	movff	btemp+3,postinc1
 28189                           
 28190                           ;stkvar	_chan @ sp[(-8)+-1]
 28191  0156F8  0EF7               	movlw	-9
 28192  0156FA  50E3               	movf	plusw1,w,c
 28193  0156FC  6EE6               	movwf	postinc1,c
 28194  0156FE  ECFF  F0E8         	call	_get_raw_result	;wreg free
 28195  015702  0060  F004  F00B   	movff	btemp,btemp+10
 28196  015708  0060  F008  F00C   	movff	btemp+1,btemp+11
 28197  01570E  500B               	movf	(btemp+10)^0,w,c
 28198  015710  6E05               	movwf	(btemp+4)^0,c
 28199  015712  500C               	movf	(btemp+11)^0,w,c
 28200  015714  6E06               	movwf	(btemp+5)^0,c
 28201  015716  6A07               	clrf	(btemp+6)^0,c
 28202  015718  6A08               	clrf	(btemp+7)^0,c
 28203  01571A  0060  F017  FFE6   	movff	btemp+4,postinc1
 28204  015720  0060  F01B  FFE6   	movff	btemp+5,postinc1
 28205  015726  0060  F01F  FFE6   	movff	btemp+6,postinc1
 28206  01572C  0060  F023  FFE6   	movff	btemp+7,postinc1
 28207  015732  0E00               	movlw	0
 28208  015734  6EE6               	movwf	postinc1,c
 28209  015736  ECA7  F0C6         	call	___xxtofl	;wreg free
 28210  01573A  0060  F007  FFE6   	movff	btemp,postinc1
 28211  015740  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28212  015746  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28213  01574C  0060  F013  FFE6   	movff	btemp+3,postinc1
 28214  015752  EC36  F0E4         	call	___flsub	;wreg free
 28215  015756  0060  F007  FFE6   	movff	btemp,postinc1
 28216  01575C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28217  015762  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28218  015768  0060  F013  FFE6   	movff	btemp+3,postinc1
 28219  01576E  ECED  F09F         	call	___flmul	;wreg free
 28220  015772  D13E               	goto	l1953
 28221  015774                     l10526:
 28222                           
 28223                           ;daq.c: 148:    if (0b0000100000000000 >> chan & 0x1) {
 28224                           ;stkvar	_chan @ sp[(0)+-1]
 28225  015774  0EFF               	movlw	-1
 28226  015776  006F FF8C  F00C    	movff	plusw1,btemp+11
 28227  01577C  0E00               	movlw	0
 28228  01577E  6E09               	movwf	(btemp+8)^0,c
 28229  015780  0E08               	movlw	8
 28230  015782  6E0A               	movwf	(btemp+9)^0,c
 28231  015784  2A0C               	incf	(btemp+11)^0,f,c
 28232  015786  D003               	goto	u9764
 28233  015788                     u9765:
 28234  015788  340A               	rlcf	(btemp+9)^0,w,c
 28235  01578A  320A               	rrcf	(btemp+9)^0,f,c
 28236  01578C  3209               	rrcf	(btemp+8)^0,f,c
 28237  01578E                     u9764:
 28238  01578E  2E0C               	decfsz	(btemp+11)^0,f,c
 28239  015790  D7FB               	goto	u9765
 28240  015792  A009               	btfss	(btemp+8)^0,0,c
 28241  015794  D008               	goto	l10534
 28242                           
 28243                           ;daq.c: 149:     return 25.0;
 28244  015796  0E00               	movlw	0
 28245  015798  6E01               	movwf	btemp^0,c
 28246  01579A  0E00               	movlw	0
 28247  01579C  6E02               	movwf	(btemp+1)^0,c
 28248  01579E  0EC8               	movlw	200
 28249  0157A0  6E03               	movwf	(btemp+2)^0,c
 28250  0157A2  0E41               	movlw	65
 28251  0157A4  D113               	goto	L34
 28252  0157A6                     l10534:
 28253                           
 28254                           ;daq.c: 151:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 28255  0157A6  0E00               	movlw	0
 28256  0157A8  6EE6               	movwf	postinc1,c
 28257  0157AA  0E00               	movlw	0
 28258  0157AC  6EE6               	movwf	postinc1,c
 28259  0157AE  0E7A               	movlw	122
 28260  0157B0  6EE6               	movwf	postinc1,c
 28261  0157B2  0E44               	movlw	68
 28262  0157B4  6EE6               	movwf	postinc1,c
 28263  0157B6  0E61               	movlw	97
 28264  0157B8  6EE6               	movwf	postinc1,c
 28265  0157BA  0E03               	movlw	3
 28266  0157BC  6EE6               	movwf	postinc1,c
 28267  0157BE  0E84               	movlw	132
 28268  0157C0  6EE6               	movwf	postinc1,c
 28269  0157C2  0E40               	movlw	64
 28270  0157C4  6EE6               	movwf	postinc1,c
 28271                           
 28272                           ;stkvar	_chan @ sp[(-8)+-1]
 28273  0157C6  0EF7               	movlw	-9
 28274  0157C8  50E3               	movf	plusw1,w,c
 28275  0157CA  6EE6               	movwf	postinc1,c
 28276  0157CC  ECFF  F0E8         	call	_get_raw_result	;wreg free
 28277  0157D0  0060  F004  F00B   	movff	btemp,btemp+10
 28278  0157D6  0060  F008  F00C   	movff	btemp+1,btemp+11
 28279  0157DC  500B               	movf	(btemp+10)^0,w,c
 28280  0157DE  6E05               	movwf	(btemp+4)^0,c
 28281  0157E0  500C               	movf	(btemp+11)^0,w,c
 28282  0157E2  6E06               	movwf	(btemp+5)^0,c
 28283  0157E4  6A07               	clrf	(btemp+6)^0,c
 28284  0157E6  6A08               	clrf	(btemp+7)^0,c
 28285  0157E8  0060  F017  FFE6   	movff	btemp+4,postinc1
 28286  0157EE  0060  F01B  FFE6   	movff	btemp+5,postinc1
 28287  0157F4  0060  F01F  FFE6   	movff	btemp+6,postinc1
 28288  0157FA  0060  F023  FFE6   	movff	btemp+7,postinc1
 28289  015800  0E00               	movlw	0
 28290  015802  6EE6               	movwf	postinc1,c
 28291  015804  ECA7  F0C6         	call	___xxtofl	;wreg free
 28292  015808  0060  F007  FFE6   	movff	btemp,postinc1
 28293  01580E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28294  015814  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28295  01581A  0060  F013  FFE6   	movff	btemp+3,postinc1
 28296  015820  ECED  F09F         	call	___flmul	;wreg free
 28297  015824  0060  F007  FFE6   	movff	btemp,postinc1
 28298  01582A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28299  015830  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28300  015836  0060  F013  FFE6   	movff	btemp+3,postinc1
 28301  01583C  ECE0  F0A7         	call	___fldiv	;wreg free
 28302  015840  D0D7               	goto	l1953
 28303  015842                     l10538:
 28304                           
 28305                           ;daq.c: 156:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 28306                           ;stkvar	_chan @ sp[(0)+-1]
 28307  015842  0EFF               	movlw	-1
 28308  015844  006F FF8C  F00C    	movff	plusw1,btemp+11
 28309  01584A  0E03               	movlw	3
 28310  01584C  6E09               	movwf	(btemp+8)^0,c
 28311  01584E  0E00               	movlw	0
 28312  015850  6E0A               	movwf	(btemp+9)^0,c
 28313  015852  2A0C               	incf	(btemp+11)^0,f,c
 28314  015854  D003               	goto	u9784
 28315  015856                     u9785:
 28316  015856  340A               	rlcf	(btemp+9)^0,w,c
 28317  015858  320A               	rrcf	(btemp+9)^0,f,c
 28318  01585A  3209               	rrcf	(btemp+8)^0,f,c
 28319  01585C                     u9784:
 28320  01585C  2E0C               	decfsz	(btemp+11)^0,f,c
 28321  01585E  D7FB               	goto	u9785
 28322  015860  B009               	btfsc	(btemp+8)^0,0,c
 28323  015862  D011               	goto	u9810
 28324                           
 28325                           ;stkvar	_chan @ sp[(0)+-1]
 28326  015864  0EFF               	movlw	-1
 28327  015866  006F FF8C  F00C    	movff	plusw1,btemp+11
 28328  01586C  0E00               	movlw	0
 28329  01586E  6E09               	movwf	(btemp+8)^0,c
 28330  015870  0E08               	movlw	8
 28331  015872  6E0A               	movwf	(btemp+9)^0,c
 28332  015874  2A0C               	incf	(btemp+11)^0,f,c
 28333  015876  D003               	goto	u9804
 28334  015878                     u9805:
 28335  015878  340A               	rlcf	(btemp+9)^0,w,c
 28336  01587A  320A               	rrcf	(btemp+9)^0,f,c
 28337  01587C  3209               	rrcf	(btemp+8)^0,f,c
 28338  01587E                     u9804:
 28339  01587E  2E0C               	decfsz	(btemp+11)^0,f,c
 28340  015880  D7FB               	goto	u9805
 28341  015882  A009               	btfss	(btemp+8)^0,0,c
 28342  015884  D04E               	goto	l10546
 28343  015886                     u9810:
 28344                           
 28345                           ;daq.c: 157:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 28346  015886  0E00               	movlw	0
 28347  015888  6EE6               	movwf	postinc1,c
 28348  01588A  0E00               	movlw	0
 28349  01588C  6EE6               	movwf	postinc1,c
 28350  01588E  0E7A               	movlw	122
 28351  015890  6EE6               	movwf	postinc1,c
 28352  015892  0E44               	movlw	68
 28353  015894  6EE6               	movwf	postinc1,c
 28354  015896  0E00               	movlw	0
 28355  015898  6EE6               	movwf	postinc1,c
 28356  01589A  0E00               	movlw	0
 28357  01589C  6EE6               	movwf	postinc1,c
 28358  01589E  0E20               	movlw	32
 28359  0158A0  6EE6               	movwf	postinc1,c
 28360  0158A2  0E3F               	movlw	63
 28361  0158A4  6EE6               	movwf	postinc1,c
 28362                           
 28363                           ;stkvar	_chan @ sp[(-8)+-1]
 28364  0158A6  0EF7               	movlw	-9
 28365  0158A8  50E3               	movf	plusw1,w,c
 28366  0158AA  6EE6               	movwf	postinc1,c
 28367  0158AC  ECFF  F0E8         	call	_get_raw_result	;wreg free
 28368  0158B0  0060  F004  F00B   	movff	btemp,btemp+10
 28369  0158B6  0060  F008  F00C   	movff	btemp+1,btemp+11
 28370  0158BC  500B               	movf	(btemp+10)^0,w,c
 28371  0158BE  6E05               	movwf	(btemp+4)^0,c
 28372  0158C0  500C               	movf	(btemp+11)^0,w,c
 28373  0158C2  6E06               	movwf	(btemp+5)^0,c
 28374  0158C4  6A07               	clrf	(btemp+6)^0,c
 28375  0158C6  6A08               	clrf	(btemp+7)^0,c
 28376  0158C8  0060  F017  FFE6   	movff	btemp+4,postinc1
 28377  0158CE  0060  F01B  FFE6   	movff	btemp+5,postinc1
 28378  0158D4  0060  F01F  FFE6   	movff	btemp+6,postinc1
 28379  0158DA  0060  F023  FFE6   	movff	btemp+7,postinc1
 28380  0158E0  0E00               	movlw	0
 28381  0158E2  6EE6               	movwf	postinc1,c
 28382  0158E4  ECA7  F0C6         	call	___xxtofl	;wreg free
 28383  0158E8  0060  F007  FFE6   	movff	btemp,postinc1
 28384  0158EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28385  0158F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28386  0158FA  0060  F013  FFE6   	movff	btemp+3,postinc1
 28387  015900  ECED  F09F         	call	___flmul	;wreg free
 28388  015904  0060  F007  FFE6   	movff	btemp,postinc1
 28389  01590A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28390  015910  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28391  015916  0060  F013  FFE6   	movff	btemp+3,postinc1
 28392  01591C  ECE0  F0A7         	call	___fldiv	;wreg free
 28393  015920  D067               	goto	l1953
 28394  015922                     l10546:
 28395                           
 28396                           ;daq.c: 159:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 28397  015922  0E00               	movlw	0
 28398  015924  6EE6               	movwf	postinc1,c
 28399  015926  0E00               	movlw	0
 28400  015928  6EE6               	movwf	postinc1,c
 28401  01592A  0E7A               	movlw	122
 28402  01592C  6EE6               	movwf	postinc1,c
 28403  01592E  0E44               	movlw	68
 28404  015930  6EE6               	movwf	postinc1,c
 28405  015932  0E61               	movlw	97
 28406  015934  6EE6               	movwf	postinc1,c
 28407  015936  0E03               	movlw	3
 28408  015938  6EE6               	movwf	postinc1,c
 28409  01593A  0E84               	movlw	132
 28410  01593C  6EE6               	movwf	postinc1,c
 28411  01593E  0E40               	movlw	64
 28412  015940  6EE6               	movwf	postinc1,c
 28413                           
 28414                           ;stkvar	_chan @ sp[(-8)+-1]
 28415  015942  0EF7               	movlw	-9
 28416  015944  50E3               	movf	plusw1,w,c
 28417  015946  6EE6               	movwf	postinc1,c
 28418  015948  ECFF  F0E8         	call	_get_raw_result	;wreg free
 28419  01594C  0060  F004  F00B   	movff	btemp,btemp+10
 28420  015952  0060  F008  F00C   	movff	btemp+1,btemp+11
 28421  015958  500B               	movf	(btemp+10)^0,w,c
 28422  01595A  6E05               	movwf	(btemp+4)^0,c
 28423  01595C  500C               	movf	(btemp+11)^0,w,c
 28424  01595E  6E06               	movwf	(btemp+5)^0,c
 28425  015960  6A07               	clrf	(btemp+6)^0,c
 28426  015962  6A08               	clrf	(btemp+7)^0,c
 28427  015964  0060  F017  FFE6   	movff	btemp+4,postinc1
 28428  01596A  0060  F01B  FFE6   	movff	btemp+5,postinc1
 28429  015970  0060  F01F  FFE6   	movff	btemp+6,postinc1
 28430  015976  0060  F023  FFE6   	movff	btemp+7,postinc1
 28431  01597C  0E00               	movlw	0
 28432  01597E  6EE6               	movwf	postinc1,c
 28433  015980  ECA7  F0C6         	call	___xxtofl	;wreg free
 28434  015984  0060  F007  FFE6   	movff	btemp,postinc1
 28435  01598A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28436  015990  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28437  015996  0060  F013  FFE6   	movff	btemp+3,postinc1
 28438  01599C  ECED  F09F         	call	___flmul	;wreg free
 28439  0159A0  0060  F007  FFE6   	movff	btemp,postinc1
 28440  0159A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28441  0159AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28442  0159B2  0060  F013  FFE6   	movff	btemp+3,postinc1
 28443  0159B8  ECE0  F0A7         	call	___fldiv	;wreg free
 28444  0159BC  D019               	goto	l1953
 28445  0159BE                     l10552:
 28446                           
 28447                           ;daq.c: 162:   return 0.0;
 28448  0159BE  0E00               	movlw	0
 28449  0159C0  6E01               	movwf	btemp^0,c
 28450  0159C2  0E00               	movlw	0
 28451  0159C4  6E02               	movwf	(btemp+1)^0,c
 28452  0159C6  0E00               	movlw	0
 28453  0159C8  6E03               	movwf	(btemp+2)^0,c
 28454  0159CA  0E00               	movlw	0
 28455  0159CC                     L34:
 28456  0159CC  6E04               	movwf	(btemp+3)^0,c
 28457  0159CE  D010               	goto	l1953
 28458  0159D0                     l10560:
 28459                           
 28460                           ;stkvar	_to_what @ sp[(0)+-2]
 28461  0159D0  0EFE               	movlw	-2
 28462  0159D2  50E3               	movf	plusw1,w,c
 28463  0159D4  6E0B               	movwf	(btemp+10)^0,c
 28464  0159D6  6A0C               	clrf	(btemp+11)^0,c
 28465                           
 28466                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28467                           ; Switch size 1, requested type "simple"
 28468                           ; Number of cases is 1, Range of values is 0 to 0
 28469                           ; switch strategies available:
 28470                           ; Name         Instructions Cycles
 28471                           ; simple_byte            4     3 (average)
 28472                           ;	Chosen strategy is simple_byte
 28473  0159D8  500C               	movf	(btemp+11)^0,w,c
 28474  0159DA  0A00               	xorlw	0	; case 0
 28475  0159DC  A4D8               	btfss	status,2,c
 28476  0159DE  D7EF               	goto	l10552
 28477                           
 28478                           ; Switch size 1, requested type "simple"
 28479                           ; Number of cases is 2, Range of values is 0 to 1
 28480                           ; switch strategies available:
 28481                           ; Name         Instructions Cycles
 28482                           ; simple_byte            7     4 (average)
 28483                           ;	Chosen strategy is simple_byte
 28484  0159E0  500B               	movf	(btemp+10)^0,w,c
 28485  0159E2  0A00               	xorlw	0	; case 0
 28486  0159E4  B4D8               	btfsc	status,2,c
 28487  0159E6  D5AA               	goto	l10506
 28488  0159E8  0A01               	xorlw	1	; case 1
 28489  0159EA  B4D8               	btfsc	status,2,c
 28490  0159EC  D72A               	goto	l10538
 28491  0159EE  D7E7               	goto	l10552
 28492  0159F0                     l1953:
 28493                           
 28494                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 28495  0159F0  52E5               	movf	postdec1,f,c
 28496  0159F2  52E5               	movf	postdec1,f,c
 28497  0159F4  0012               	return		;funcret
 28498  0159F6                     __end_of_conv_raw_result:
 28499                           	opt callstack 0
 28500                           
 28501 ;; *************** function _nanf *****************
 28502 ;; Defined at:
 28503 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 28504 ;; Parameters:    Size  Location     Type
 28505 ;;  s               2  [STACK] PTR const unsigned char 
 28506 ;;		 -> STR_120(1), STR_82(1), 
 28507 ;; Auto vars:     Size  Location     Type
 28508 ;;  u               4  [STACK] struct .
 28509 ;; Return value:  Size  Location     Type
 28510 ;;                  4  [STACK] float 
 28511 ;; Registers used:
 28512 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 28513 ;; Tracked objects:
 28514 ;;		On entry : 0/0
 28515 ;;		On exit  : 0/0
 28516 ;;		Unchanged: 0/0
 28517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28522 ;;Total ram usage:        0 bytes
 28523 ;; Hardware stack levels used:    1
 28524 ;; Hardware stack levels required when called:   15
 28525 ;; This function calls:
 28526 ;;		Nothing
 28527 ;; This function is called by:
 28528 ;;		_conv_raw_result
 28529 ;; This function uses a reentrant model
 28530 ;;
 28531                           
 28532                           	psect	text117
 28533  01C356                     __ptext117:
 28534                           	opt callstack 0
 28535  01C356                     _nanf:
 28536                           	opt callstack 0
 28537                           
 28538                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28539  01C356  52E6               	movf	postinc1,f,c
 28540  01C358  52E6               	movf	postinc1,f,c
 28541  01C35A  52E6               	movf	postinc1,f,c
 28542  01C35C  52E6               	movf	postinc1,f,c
 28543                           
 28544                           ;incstack = 0
 28545 ;; hardware stack exceeded
 28546  01C35E  0EFF               	movlw	255
 28547  01C360  6E09               	movwf	(btemp+8)^0,c
 28548  01C362  0EFF               	movlw	255
 28549  01C364  6E0A               	movwf	(btemp+9)^0,c
 28550  01C366  0EFF               	movlw	255
 28551  01C368  6E0B               	movwf	(btemp+10)^0,c
 28552  01C36A  0E7F               	movlw	127
 28553  01C36C  6E0C               	movwf	(btemp+11)^0,c
 28554                           
 28555                           ;stkvar	_u @ sp[(-4)+0]
 28556  01C36E  0EFC               	movlw	-4
 28557  01C370  0060  F027  FFE3   	movff	btemp+8,plusw1
 28558  01C376  0EFD               	movlw	-3
 28559  01C378  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28560  01C37E  0EFE               	movlw	-2
 28561  01C380  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28562  01C386  0EFF               	movlw	-1
 28563  01C388  0060  F033  FFE3   	movff	btemp+11,plusw1
 28564                           
 28565                           ;stkvar	_u @ sp[(-4)+0]
 28566  01C38E  0EFC               	movlw	-4
 28567  01C390  006F FF8C  F001    	movff	plusw1,btemp
 28568  01C396  0EFD               	movlw	-3
 28569  01C398  006F FF8C  F002    	movff	plusw1,btemp+1
 28570  01C39E  0EFE               	movlw	-2
 28571  01C3A0  006F FF8C  F003    	movff	plusw1,btemp+2
 28572  01C3A6  0EFF               	movlw	-1
 28573  01C3A8  006F FF8C  F004    	movff	plusw1,btemp+3
 28574                           
 28575                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 28576  01C3AE  0EFA               	movlw	250
 28577  01C3B0  26E1               	addwf	fsr1l,f,c
 28578  01C3B2  0EFF               	movlw	255
 28579  01C3B4  22E2               	addwfc	fsr1h,f,c
 28580  01C3B6  0012               	return		;funcret
 28581  01C3B8                     __end_of_nanf:
 28582                           	opt callstack 0
 28583                           
 28584 ;; *************** function _get_raw_result *****************
 28585 ;; Defined at:
 28586 ;;		line 125 in file "daq.c"
 28587 ;; Parameters:    Size  Location     Type
 28588 ;;  index           1  [STACK] const enum E16605
 28589 ;; Auto vars:     Size  Location     Type
 28590 ;;		None
 28591 ;; Return value:  Size  Location     Type
 28592 ;;                  2  [STACK] unsigned short 
 28593 ;; Registers used:
 28594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 28595 ;; Tracked objects:
 28596 ;;		On entry : 0/1
 28597 ;;		On exit  : 0/0
 28598 ;;		Unchanged: 0/0
 28599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28604 ;;Total ram usage:        0 bytes
 28605 ;; Hardware stack levels used:    1
 28606 ;; Hardware stack levels required when called:   15
 28607 ;; This function calls:
 28608 ;;		Nothing
 28609 ;; This function is called by:
 28610 ;;		_main
 28611 ;;		_current_sensor_cal
 28612 ;;		_conv_raw_result
 28613 ;; This function uses a reentrant model
 28614 ;;
 28615                           
 28616                           	psect	text118
 28617  01D1FE                     __ptext118:
 28618                           	opt callstack 0
 28619  01D1FE                     _get_raw_result:
 28620                           	opt callstack 0
 28621                           
 28622                           ;daq.c: 125: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 126: {;daq.c
      +                          : 127:  return R.raw_adc[index];
 28623                           ;stkvar	_index @ sp[(0)+-1]
 28624                           
 28625                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28626                           ;incstack = 0
 28627 ;; hardware stack exceeded
 28628  01D1FE  0EFF               	movlw	-1
 28629  01D200  50E3               	movf	plusw1,w,c
 28630  01D202  0D02               	mullw	2
 28631  01D204  0E00               	movlw	low _R
 28632  01D206  24F3               	addwf	243,w,c
 28633  01D208  6ED9               	movwf	fsr2l,c
 28634  01D20A  0E02               	movlw	high _R
 28635  01D20C  20F4               	addwfc	prodh,w,c
 28636  01D20E  6EDA               	movwf	fsr2h,c
 28637  01D210  006F FF78  F001    	movff	postinc2,btemp
 28638  01D216  006F FF74  F002    	movff	postdec2,btemp+1
 28639                           
 28640                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 28641  01D21C  52E5               	movf	postdec1,f,c
 28642  01D21E  0012               	return		;funcret
 28643  01D220                     __end_of_get_raw_result:
 28644                           	opt callstack 0
 28645                           
 28646 ;; *************** function ___xxtofl *****************
 28647 ;; Defined at:
 28648 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 28649 ;; Parameters:    Size  Location     Type
 28650 ;;  sign            1  [STACK] unsigned char 
 28651 ;;  val             4  [STACK] long 
 28652 ;; Auto vars:     Size  Location     Type
 28653 ;;  arg             4  [STACK] unsigned long 
 28654 ;;  exp             1  [STACK] unsigned char 
 28655 ;; Return value:  Size  Location     Type
 28656 ;;                  4  [STACK] unsigned char 
 28657 ;; Registers used:
 28658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 28659 ;; Tracked objects:
 28660 ;;		On entry : 0/2
 28661 ;;		On exit  : 0/0
 28662 ;;		Unchanged: 0/0
 28663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28668 ;;Total ram usage:        0 bytes
 28669 ;; Hardware stack levels used:    1
 28670 ;; Hardware stack levels required when called:   15
 28671 ;; This function calls:
 28672 ;;		Nothing
 28673 ;; This function is called by:
 28674 ;;		_conv_raw_result
 28675 ;;		_init_bsoc
 28676 ;; This function uses a reentrant model
 28677 ;;
 28678                           
 28679                           	psect	text119
 28680  018D4E                     __ptext119:
 28681                           	opt callstack 0
 28682  018D4E                     ___xxtofl:
 28683                           	opt callstack 0
 28684                           
 28685                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28686  018D4E  0E05               	movlw	5
 28687  018D50  26E1               	addwf	fsr1l,f,c
 28688  018D52  0E00               	movlw	0
 28689  018D54  22E2               	addwfc	fsr1h,f,c
 28690                           
 28691                           ;stkvar	_sign @ sp[(-5)+-1]
 28692                           
 28693                           ;incstack = 0
 28694 ;; hardware stack exceeded
 28695  018D56  0EFA               	movlw	-6
 28696  018D58  50E3               	movf	plusw1,w,c
 28697  018D5A  B4D8               	btfsc	status,2,c
 28698  018D5C  D01D               	goto	l10434
 28699                           
 28700                           ;stkvar	_val @ sp[(-5)+-5]
 28701  018D5E  0EF9               	movlw	-7
 28702  018D60  AEE3               	btfss	plusw1,7,c
 28703  018D62  D01A               	goto	l10434
 28704                           
 28705                           ;stkvar	_val @ sp[(-5)+-5]
 28706  018D64  0EF6               	movlw	-10
 28707  018D66  006F FF8C  F009    	movff	plusw1,btemp+8
 28708  018D6C  0EF7               	movlw	-9
 28709  018D6E  006F FF8C  F00A    	movff	plusw1,btemp+9
 28710  018D74  0EF8               	movlw	-8
 28711  018D76  006F FF8C  F00B    	movff	plusw1,btemp+10
 28712  018D7C  0EF9               	movlw	-7
 28713  018D7E  006F FF8C  F00C    	movff	plusw1,btemp+11
 28714  018D84  1E09               	comf	(btemp+8)^0,f,c
 28715  018D86  1E0A               	comf	(btemp+9)^0,f,c
 28716  018D88  1E0B               	comf	(btemp+10)^0,f,c
 28717  018D8A  1E0C               	comf	(btemp+11)^0,f,c
 28718  018D8C  2A09               	incf	(btemp+8)^0,f,c
 28719  018D8E  0E00               	movlw	0
 28720  018D90  220A               	addwfc	(btemp+9)^0,f,c
 28721  018D92  220B               	addwfc	(btemp+10)^0,f,c
 28722  018D94  220C               	addwfc	(btemp+11)^0,f,c
 28723  018D96  D010               	goto	L35
 28724  018D98                     l10434:
 28725                           
 28726                           ;stkvar	_val @ sp[(-5)+-5]
 28727  018D98  0EF6               	movlw	-10
 28728  018D9A  006F FF8C  F009    	movff	plusw1,btemp+8
 28729  018DA0  0EF7               	movlw	-9
 28730  018DA2  006F FF8C  F00A    	movff	plusw1,btemp+9
 28731  018DA8  0EF8               	movlw	-8
 28732  018DAA  006F FF8C  F00B    	movff	plusw1,btemp+10
 28733  018DB0  0EF9               	movlw	-7
 28734  018DB2  006F FF8C  F00C    	movff	plusw1,btemp+11
 28735  018DB8                     L35:
 28736                           
 28737                           ;stkvar	_arg @ sp[(-5)+0]
 28738  018DB8  0EFB               	movlw	-5
 28739  018DBA  0060  F027  FFE3   	movff	btemp+8,plusw1
 28740  018DC0  0EFC               	movlw	-4
 28741  018DC2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28742  018DC8  0EFD               	movlw	-3
 28743  018DCA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28744  018DD0  0EFE               	movlw	-2
 28745  018DD2  0060  F033  FFE3   	movff	btemp+11,plusw1
 28746                           
 28747                           ;stkvar	_val @ sp[(-5)+-5]
 28748  018DD8  0EF6               	movlw	-10
 28749  018DDA  50E3               	movf	plusw1,w,c
 28750  018DDC  E113               	bnz	l10442
 28751  018DDE  0EF7               	movlw	-9
 28752  018DE0  50E3               	movf	plusw1,w,c
 28753  018DE2  E110               	bnz	l10442
 28754  018DE4  0EF8               	movlw	-8
 28755  018DE6  50E3               	movf	plusw1,w,c
 28756  018DE8  E10D               	bnz	l10442
 28757  018DEA  0EF9               	movlw	-7
 28758  018DEC  50E3               	movf	plusw1,w,c
 28759  018DEE  A4D8               	btfss	status,2,c
 28760  018DF0  D009               	goto	l10442
 28761  018DF2  0E00               	movlw	0
 28762  018DF4  6E01               	movwf	btemp^0,c
 28763  018DF6  0E00               	movlw	0
 28764  018DF8  6E02               	movwf	(btemp+1)^0,c
 28765  018DFA  0E00               	movlw	0
 28766  018DFC  6E03               	movwf	(btemp+2)^0,c
 28767  018DFE  0E00               	movlw	0
 28768  018E00  6E04               	movwf	(btemp+3)^0,c
 28769  018E02  D0A2               	goto	l3337
 28770  018E04                     l10442:
 28771  018E04  0E96               	movlw	150
 28772  018E06  6E0C               	movwf	(btemp+11)^0,c
 28773                           
 28774                           ;stkvar	_exp @ sp[(-5)+4]
 28775  018E08  0EFF               	movlw	-1
 28776  018E0A  0060  F033  FFE3   	movff	btemp+11,plusw1
 28777  018E10  D00B               	goto	l10446
 28778  018E12                     l10444:
 28779                           
 28780                           ;stkvar	_exp @ sp[(-5)+4]
 28781  018E12  0EFF               	movlw	-1
 28782  018E14  2AE3               	incf	plusw1,f,c
 28783                           
 28784                           ;stkvar	_arg @ sp[(-5)+0]
 28785  018E16  90D8               	bcf	status,0,c
 28786  018E18  0EFE               	movlw	-2
 28787  018E1A  32E3               	rrcf	plusw1,f,c
 28788  018E1C  0EFD               	movlw	-3
 28789  018E1E  32E3               	rrcf	plusw1,f,c
 28790  018E20  0EFC               	movlw	-4
 28791  018E22  32E3               	rrcf	plusw1,f,c
 28792  018E24  0EFB               	movlw	-5
 28793  018E26  32E3               	rrcf	plusw1,f,c
 28794  018E28                     l10446:
 28795                           
 28796                           ;stkvar	_arg @ sp[(-5)+0]
 28797  018E28  50E1               	movf	fsr1l,w,c
 28798  018E2A  0FFB               	addlw	-5
 28799  018E2C  6ED9               	movwf	fsr2l,c
 28800  018E2E  50E2               	movf	fsr1h,w,c
 28801  018E30  6EDA               	movwf	fsr2h,c
 28802  018E32  0EFF               	movlw	255
 28803  018E34  22DA               	addwfc	fsr2h,f,c
 28804  018E36  52DE               	movf	postinc2,f,c
 28805  018E38  52DE               	movf	postinc2,f,c
 28806  018E3A  52DE               	movf	postinc2,f,c
 28807  018E3C  0EFE               	movlw	254
 28808  018E3E  14DD               	andwf	postdec2,w,c
 28809  018E40  B4D8               	btfsc	status,2,c
 28810  018E42  D018               	goto	l10454
 28811  018E44  D7E6               	goto	l10444
 28812  018E46                     l10448:
 28813                           
 28814                           ;stkvar	_exp @ sp[(-5)+4]
 28815  018E46  0EFF               	movlw	-1
 28816  018E48  2AE3               	incf	plusw1,f,c
 28817                           
 28818                           ;stkvar	_arg @ sp[(-5)+0]
 28819  018E4A  50E1               	movf	fsr1l,w,c
 28820  018E4C  0FFB               	addlw	-5
 28821  018E4E  6ED9               	movwf	fsr2l,c
 28822  018E50  50E2               	movf	fsr1h,w,c
 28823  018E52  6EDA               	movwf	fsr2h,c
 28824  018E54  0EFF               	movlw	255
 28825  018E56  22DA               	addwfc	fsr2h,f,c
 28826  018E58  2ADE               	incf	postinc2,f,c
 28827  018E5A  0E00               	movlw	0
 28828  018E5C  22DE               	addwfc	postinc2,f,c
 28829  018E5E  22DE               	addwfc	postinc2,f,c
 28830  018E60  22DE               	addwfc	postinc2,f,c
 28831                           
 28832                           ;stkvar	_arg @ sp[(-5)+0]
 28833  018E62  90D8               	bcf	status,0,c
 28834  018E64  0EFE               	movlw	-2
 28835  018E66  32E3               	rrcf	plusw1,f,c
 28836  018E68  0EFD               	movlw	-3
 28837  018E6A  32E3               	rrcf	plusw1,f,c
 28838  018E6C  0EFC               	movlw	-4
 28839  018E6E  32E3               	rrcf	plusw1,f,c
 28840  018E70  0EFB               	movlw	-5
 28841  018E72  32E3               	rrcf	plusw1,f,c
 28842  018E74                     l10454:
 28843                           
 28844                           ;stkvar	_arg @ sp[(-5)+0]
 28845  018E74  50E1               	movf	fsr1l,w,c
 28846  018E76  0FFB               	addlw	-5
 28847  018E78  6ED9               	movwf	fsr2l,c
 28848  018E7A  50E2               	movf	fsr1h,w,c
 28849  018E7C  6EDA               	movwf	fsr2h,c
 28850  018E7E  0EFF               	movlw	255
 28851  018E80  22DA               	addwfc	fsr2h,f,c
 28852  018E82  52DE               	movf	postinc2,f,c
 28853  018E84  52DE               	movf	postinc2,f,c
 28854  018E86  52DE               	movf	postinc2,f,c
 28855  018E88  0EFF               	movlw	255
 28856  018E8A  14DD               	andwf	postdec2,w,c
 28857  018E8C  B4D8               	btfsc	status,2,c
 28858  018E8E  D00C               	goto	l10458
 28859  018E90  D7DA               	goto	l10448
 28860  018E92                     l10456:
 28861                           
 28862                           ;stkvar	_exp @ sp[(-5)+4]
 28863  018E92  0EFF               	movlw	-1
 28864  018E94  06E3               	decf	plusw1,f,c
 28865                           
 28866                           ;stkvar	_arg @ sp[(-5)+0]
 28867  018E96  90D8               	bcf	status,0,c
 28868  018E98  0EFB               	movlw	-5
 28869  018E9A  36E3               	rlcf	plusw1,f,c
 28870  018E9C  0EFC               	movlw	-4
 28871  018E9E  36E3               	rlcf	plusw1,f,c
 28872  018EA0  0EFD               	movlw	-3
 28873  018EA2  36E3               	rlcf	plusw1,f,c
 28874  018EA4  0EFE               	movlw	-2
 28875  018EA6  36E3               	rlcf	plusw1,f,c
 28876  018EA8                     l10458:
 28877                           
 28878                           ;stkvar	_arg @ sp[(-5)+0]
 28879  018EA8  0EFD               	movlw	-3
 28880  018EAA  BEE3               	btfsc	plusw1,7,c
 28881  018EAC  D007               	goto	u9630
 28882                           
 28883                           ;stkvar	_exp @ sp[(-5)+4]
 28884  018EAE  0EFF               	movlw	-1
 28885  018EB0  006F FF8C  F001    	movff	plusw1,btemp
 28886  018EB6  0E02               	movlw	2
 28887  018EB8  6001               	cpfslt	btemp^0,c
 28888  018EBA  D7EB               	goto	l10456
 28889  018EBC                     u9630:
 28890                           
 28891                           ;stkvar	_exp @ sp[(-5)+4]
 28892  018EBC  0EFF               	movlw	-1
 28893  018EBE  B0E3               	btfsc	plusw1,0,c
 28894  018EC0  D002               	goto	l10466
 28895                           
 28896                           ;stkvar	_arg @ sp[(-5)+0]
 28897  018EC2  0EFD               	movlw	-3
 28898  018EC4  9EE3               	bcf	plusw1,7,c
 28899  018EC6                     l10466:
 28900                           
 28901                           ;stkvar	_exp @ sp[(-5)+4]
 28902  018EC6  50E1               	movf	fsr1l,w,c
 28903  018EC8  0FFF               	addlw	-1
 28904  018ECA  6ED9               	movwf	fsr2l,c
 28905  018ECC  50E2               	movf	fsr1h,w,c
 28906  018ECE  6EDA               	movwf	fsr2h,c
 28907  018ED0  0EFF               	movlw	255
 28908  018ED2  22DA               	addwfc	fsr2h,f,c
 28909  018ED4  90D8               	bcf	status,0,c
 28910  018ED6  32DF               	rrcf	indf2,f,c
 28911                           
 28912                           ;stkvar	_exp @ sp[(-5)+4]
 28913  018ED8  0EFF               	movlw	-1
 28914  018EDA  006F FF8C  F00C    	movff	plusw1,btemp+11
 28915  018EE0  0060  F030  F005   	movff	btemp+11,btemp+4
 28916  018EE6  6A06               	clrf	(btemp+5)^0,c
 28917  018EE8  6A07               	clrf	(btemp+6)^0,c
 28918  018EEA  6A08               	clrf	(btemp+7)^0,c
 28919  018EEC  0060  F014  F008   	movff	btemp+4,btemp+7
 28920  018EF2  6A07               	clrf	(btemp+6)^0,c
 28921  018EF4  6A06               	clrf	(btemp+5)^0,c
 28922  018EF6  6A05               	clrf	(btemp+4)^0,c
 28923                           
 28924                           ;stkvar	_arg @ sp[(-5)+0]
 28925  018EF8  50E1               	movf	fsr1l,w,c
 28926  018EFA  0FFB               	addlw	-5
 28927  018EFC  6ED9               	movwf	fsr2l,c
 28928  018EFE  50E2               	movf	fsr1h,w,c
 28929  018F00  6EDA               	movwf	fsr2h,c
 28930  018F02  0EFF               	movlw	255
 28931  018F04  22DA               	addwfc	fsr2h,f,c
 28932  018F06  5005               	movf	(btemp+4)^0,w,c
 28933  018F08  12DE               	iorwf	postinc2,f,c
 28934  018F0A  5006               	movf	(btemp+5)^0,w,c
 28935  018F0C  12DE               	iorwf	postinc2,f,c
 28936  018F0E  5007               	movf	(btemp+6)^0,w,c
 28937  018F10  12DE               	iorwf	postinc2,f,c
 28938  018F12  5008               	movf	(btemp+7)^0,w,c
 28939  018F14  12DE               	iorwf	postinc2,f,c
 28940                           
 28941                           ;stkvar	_sign @ sp[(-5)+-1]
 28942  018F16  0EFA               	movlw	-6
 28943  018F18  50E3               	movf	plusw1,w,c
 28944  018F1A  B4D8               	btfsc	status,2,c
 28945  018F1C  D005               	goto	l10476
 28946                           
 28947                           ;stkvar	_val @ sp[(-5)+-5]
 28948  018F1E  0EF9               	movlw	-7
 28949  018F20  AEE3               	btfss	plusw1,7,c
 28950  018F22  D002               	goto	l10476
 28951                           
 28952                           ;stkvar	_arg @ sp[(-5)+0]
 28953  018F24  0EFE               	movlw	-2
 28954  018F26  8EE3               	bsf	plusw1,7,c
 28955  018F28                     l10476:
 28956                           
 28957                           ;stkvar	_arg @ sp[(-5)+0]
 28958  018F28  0EFB               	movlw	-5
 28959  018F2A  006F FF8C  F001    	movff	plusw1,btemp
 28960  018F30  0EFC               	movlw	-4
 28961  018F32  006F FF8C  F002    	movff	plusw1,btemp+1
 28962  018F38  0EFD               	movlw	-3
 28963  018F3A  006F FF8C  F003    	movff	plusw1,btemp+2
 28964  018F40  0EFE               	movlw	-2
 28965  018F42  006F FF8C  F004    	movff	plusw1,btemp+3
 28966  018F48                     l3337:
 28967                           
 28968                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 28969  018F48  0EF6               	movlw	246
 28970  018F4A  26E1               	addwf	fsr1l,f,c
 28971  018F4C  0EFF               	movlw	255
 28972  018F4E  22E2               	addwfc	fsr1h,f,c
 28973  018F50  0012               	return		;funcret
 28974  018F52                     __end_of___xxtofl:
 28975                           	opt callstack 0
 28976                           
 28977 ;; *************** function ___fldiv *****************
 28978 ;; Defined at:
 28979 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 28980 ;; Parameters:    Size  Location     Type
 28981 ;;  b               4  [STACK] unsigned char 
 28982 ;;  a               4  [STACK] unsigned char 
 28983 ;; Auto vars:     Size  Location     Type
 28984 ;;  grs             4  [STACK] unsigned long 
 28985 ;;  rem             4  [STACK] unsigned long 
 28986 ;;  new_exp         2  [STACK] short 
 28987 ;;  aexp            1  [STACK] unsigned char 
 28988 ;;  bexp            1  [STACK] unsigned char 
 28989 ;;  sign            1  [STACK] unsigned char 
 28990 ;; Return value:  Size  Location     Type
 28991 ;;                  4  [STACK] unsigned char 
 28992 ;; Registers used:
 28993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 28994 ;; Tracked objects:
 28995 ;;		On entry : 0/0
 28996 ;;		On exit  : 0/0
 28997 ;;		Unchanged: 0/0
 28998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29003 ;;Total ram usage:        0 bytes
 29004 ;; Hardware stack levels used:    1
 29005 ;; Hardware stack levels required when called:   15
 29006 ;; This function calls:
 29007 ;;		Nothing
 29008 ;; This function is called by:
 29009 ;;		_conv_raw_result
 29010 ;;		_convert_dac_raw
 29011 ;;		_calc_bsoc
 29012 ;;		_init_bsoc
 29013 ;;		_esr_check
 29014 ;;		_efgtoa
 29015 ;; This function uses a reentrant model
 29016 ;;
 29017                           
 29018                           	psect	text120
 29019  014FC0                     __ptext120:
 29020                           	opt callstack 0
 29021  014FC0                     ___fldiv:
 29022                           	opt callstack 0
 29023                           
 29024                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 29025  014FC0  0E0D               	movlw	13
 29026  014FC2  26E1               	addwf	fsr1l,f,c
 29027  014FC4  0E00               	movlw	0
 29028  014FC6  22E2               	addwfc	fsr1h,f,c
 29029                           
 29030                           ;stkvar	_b @ sp[(-13)+-4]
 29031                           
 29032                           ;incstack = 0
 29033 ;; hardware stack exceeded
 29034  014FC8  0EF2               	movlw	242
 29035  014FCA  24E1               	addwf	fsr1l,w,c
 29036  014FCC  6ED9               	movwf	fsr2l,c
 29037  014FCE  0EFF               	movlw	255
 29038  014FD0  20E2               	addwfc	fsr1h,w,c
 29039  014FD2  6EDA               	movwf	fsr2h,c
 29040  014FD4  50DF               	movf	indf2,w,c
 29041  014FD6  6E0C               	movwf	(btemp+11)^0,c
 29042  014FD8  0E80               	movlw	128
 29043  014FDA  160C               	andwf	(btemp+11)^0,f,c
 29044                           
 29045                           ;stkvar	_sign @ sp[(-13)+12]
 29046  014FDC  0EFF               	movlw	-1
 29047  014FDE  0060  F033  FFE3   	movff	btemp+11,plusw1
 29048                           
 29049                           ;stkvar	_b @ sp[(-13)+-4]
 29050  014FE4  0EF2               	movlw	242
 29051  014FE6  24E1               	addwf	fsr1l,w,c
 29052  014FE8  6ED9               	movwf	fsr2l,c
 29053  014FEA  0EFF               	movlw	255
 29054  014FEC  20E2               	addwfc	fsr1h,w,c
 29055  014FEE  6EDA               	movwf	fsr2h,c
 29056  014FF0  50DF               	movf	indf2,w,c
 29057  014FF2  6E0C               	movwf	(btemp+11)^0,c
 29058  014FF4  90D8               	bcf	status,0,c
 29059  014FF6  340C               	rlcf	(btemp+11)^0,w,c
 29060  014FF8  6E0B               	movwf	(btemp+10)^0,c
 29061                           
 29062                           ;stkvar	_bexp @ sp[(-13)+11]
 29063  014FFA  0EFE               	movlw	-2
 29064  014FFC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29065                           
 29066                           ;stkvar	_b @ sp[(-13)+-4]
 29067  015002  0EF1               	movlw	241
 29068  015004  24E1               	addwf	fsr1l,w,c
 29069  015006  6ED9               	movwf	fsr2l,c
 29070  015008  0EFF               	movlw	255
 29071  01500A  20E2               	addwfc	fsr1h,w,c
 29072  01500C  6EDA               	movwf	fsr2h,c
 29073  01500E  AEDF               	btfss	indf2,7,c
 29074  015010  D002               	goto	l9006
 29075                           
 29076                           ;stkvar	_bexp @ sp[(-13)+11]
 29077  015012  0EFE               	movlw	-2
 29078  015014  80E3               	bsf	plusw1,0,c
 29079  015016                     l9006:
 29080                           
 29081                           ;stkvar	_bexp @ sp[(-13)+11]
 29082  015016  0EFE               	movlw	-2
 29083  015018  50E3               	movf	plusw1,w,c
 29084  01501A  B4D8               	btfsc	status,2,c
 29085  01501C  D027               	goto	l9016
 29086                           
 29087                           ;stkvar	_bexp @ sp[(-13)+11]
 29088  01501E  0EFE               	movlw	-2
 29089  015020  28E3               	incf	plusw1,w,c
 29090  015022  A4D8               	btfss	status,2,c
 29091  015024  D018               	goto	l9012
 29092  015026  0E00               	movlw	0
 29093  015028  6E09               	movwf	(btemp+8)^0,c
 29094  01502A  0E00               	movlw	0
 29095  01502C  6E0A               	movwf	(btemp+9)^0,c
 29096  01502E  0E00               	movlw	0
 29097  015030  6E0B               	movwf	(btemp+10)^0,c
 29098  015032  0E00               	movlw	0
 29099  015034  6E0C               	movwf	(btemp+11)^0,c
 29100                           
 29101                           ;stkvar	_b @ sp[(-13)+-4]
 29102  015036  0EEF               	movlw	-17
 29103  015038  0060  F027  FFE3   	movff	btemp+8,plusw1
 29104  01503E  0EF0               	movlw	-16
 29105  015040  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29106  015046  0EF1               	movlw	-15
 29107  015048  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29108  01504E  0EF2               	movlw	-14
 29109  015050  0060  F033  FFE3   	movff	btemp+11,plusw1
 29110  015056                     l9012:
 29111                           
 29112                           ;stkvar	_b @ sp[(-13)+-4]
 29113  015056  0EF1               	movlw	-15
 29114  015058  8EE3               	bsf	plusw1,7,c
 29115                           
 29116                           ;stkvar	_b @ sp[(-13)+-4]
 29117  01505A  0EF2               	movlw	242
 29118  01505C  24E1               	addwf	fsr1l,w,c
 29119  01505E  6ED9               	movwf	fsr2l,c
 29120  015060  0EFF               	movlw	255
 29121  015062  20E2               	addwfc	fsr1h,w,c
 29122  015064  6EDA               	movwf	fsr2h,c
 29123  015066  0E00               	movlw	0
 29124  015068  6EDF               	movwf	indf2,c
 29125  01506A  D018               	goto	l9018
 29126  01506C                     l9016:
 29127  01506C  0E00               	movlw	0
 29128  01506E  6E09               	movwf	(btemp+8)^0,c
 29129  015070  0E00               	movlw	0
 29130  015072  6E0A               	movwf	(btemp+9)^0,c
 29131  015074  0E00               	movlw	0
 29132  015076  6E0B               	movwf	(btemp+10)^0,c
 29133  015078  0E00               	movlw	0
 29134  01507A  6E0C               	movwf	(btemp+11)^0,c
 29135                           
 29136                           ;stkvar	_b @ sp[(-13)+-4]
 29137  01507C  0EEF               	movlw	-17
 29138  01507E  0060  F027  FFE3   	movff	btemp+8,plusw1
 29139  015084  0EF0               	movlw	-16
 29140  015086  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29141  01508C  0EF1               	movlw	-15
 29142  01508E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29143  015094  0EF2               	movlw	-14
 29144  015096  0060  F033  FFE3   	movff	btemp+11,plusw1
 29145  01509C                     l9018:
 29146                           
 29147                           ;stkvar	_a @ sp[(-13)+-8]
 29148  01509C  0EEE               	movlw	238
 29149  01509E  24E1               	addwf	fsr1l,w,c
 29150  0150A0  6ED9               	movwf	fsr2l,c
 29151  0150A2  0EFF               	movlw	255
 29152  0150A4  20E2               	addwfc	fsr1h,w,c
 29153  0150A6  6EDA               	movwf	fsr2h,c
 29154  0150A8  50DF               	movf	indf2,w,c
 29155  0150AA  6E0C               	movwf	(btemp+11)^0,c
 29156  0150AC  0E80               	movlw	128
 29157  0150AE  160C               	andwf	(btemp+11)^0,f,c
 29158                           
 29159                           ;stkvar	_sign @ sp[(-13)+12]
 29160  0150B0  50E1               	movf	fsr1l,w,c
 29161  0150B2  0FFF               	addlw	-1
 29162  0150B4  6ED9               	movwf	fsr2l,c
 29163  0150B6  50E2               	movf	fsr1h,w,c
 29164  0150B8  6EDA               	movwf	fsr2h,c
 29165  0150BA  0EFF               	movlw	255
 29166  0150BC  22DA               	addwfc	fsr2h,f,c
 29167  0150BE  500C               	movf	(btemp+11)^0,w,c
 29168  0150C0  1ADF               	xorwf	indf2,f,c
 29169                           
 29170                           ;stkvar	_a @ sp[(-13)+-8]
 29171  0150C2  0EEE               	movlw	238
 29172  0150C4  24E1               	addwf	fsr1l,w,c
 29173  0150C6  6ED9               	movwf	fsr2l,c
 29174  0150C8  0EFF               	movlw	255
 29175  0150CA  20E2               	addwfc	fsr1h,w,c
 29176  0150CC  6EDA               	movwf	fsr2h,c
 29177  0150CE  50DF               	movf	indf2,w,c
 29178  0150D0  6E0C               	movwf	(btemp+11)^0,c
 29179  0150D2  90D8               	bcf	status,0,c
 29180  0150D4  340C               	rlcf	(btemp+11)^0,w,c
 29181  0150D6  6E0B               	movwf	(btemp+10)^0,c
 29182                           
 29183                           ;stkvar	_aexp @ sp[(-13)+10]
 29184  0150D8  0EFD               	movlw	-3
 29185  0150DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29186                           
 29187                           ;stkvar	_a @ sp[(-13)+-8]
 29188  0150E0  0EED               	movlw	237
 29189  0150E2  24E1               	addwf	fsr1l,w,c
 29190  0150E4  6ED9               	movwf	fsr2l,c
 29191  0150E6  0EFF               	movlw	255
 29192  0150E8  20E2               	addwfc	fsr1h,w,c
 29193  0150EA  6EDA               	movwf	fsr2h,c
 29194  0150EC  AEDF               	btfss	indf2,7,c
 29195  0150EE  D002               	goto	l9026
 29196                           
 29197                           ;stkvar	_aexp @ sp[(-13)+10]
 29198  0150F0  0EFD               	movlw	-3
 29199  0150F2  80E3               	bsf	plusw1,0,c
 29200  0150F4                     l9026:
 29201                           
 29202                           ;stkvar	_aexp @ sp[(-13)+10]
 29203  0150F4  0EFD               	movlw	-3
 29204  0150F6  50E3               	movf	plusw1,w,c
 29205  0150F8  B4D8               	btfsc	status,2,c
 29206  0150FA  D027               	goto	l9036
 29207                           
 29208                           ;stkvar	_aexp @ sp[(-13)+10]
 29209  0150FC  0EFD               	movlw	-3
 29210  0150FE  28E3               	incf	plusw1,w,c
 29211  015100  A4D8               	btfss	status,2,c
 29212  015102  D018               	goto	l9032
 29213  015104  0E00               	movlw	0
 29214  015106  6E09               	movwf	(btemp+8)^0,c
 29215  015108  0E00               	movlw	0
 29216  01510A  6E0A               	movwf	(btemp+9)^0,c
 29217  01510C  0E00               	movlw	0
 29218  01510E  6E0B               	movwf	(btemp+10)^0,c
 29219  015110  0E00               	movlw	0
 29220  015112  6E0C               	movwf	(btemp+11)^0,c
 29221                           
 29222                           ;stkvar	_a @ sp[(-13)+-8]
 29223  015114  0EEB               	movlw	-21
 29224  015116  0060  F027  FFE3   	movff	btemp+8,plusw1
 29225  01511C  0EEC               	movlw	-20
 29226  01511E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29227  015124  0EED               	movlw	-19
 29228  015126  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29229  01512C  0EEE               	movlw	-18
 29230  01512E  0060  F033  FFE3   	movff	btemp+11,plusw1
 29231  015134                     l9032:
 29232                           
 29233                           ;stkvar	_a @ sp[(-13)+-8]
 29234  015134  0EED               	movlw	-19
 29235  015136  8EE3               	bsf	plusw1,7,c
 29236                           
 29237                           ;stkvar	_a @ sp[(-13)+-8]
 29238  015138  0EEE               	movlw	238
 29239  01513A  24E1               	addwf	fsr1l,w,c
 29240  01513C  6ED9               	movwf	fsr2l,c
 29241  01513E  0EFF               	movlw	255
 29242  015140  20E2               	addwfc	fsr1h,w,c
 29243  015142  6EDA               	movwf	fsr2h,c
 29244  015144  0E00               	movlw	0
 29245  015146  6EDF               	movwf	indf2,c
 29246  015148  D018               	goto	l9038
 29247  01514A                     l9036:
 29248  01514A  0E00               	movlw	0
 29249  01514C  6E09               	movwf	(btemp+8)^0,c
 29250  01514E  0E00               	movlw	0
 29251  015150  6E0A               	movwf	(btemp+9)^0,c
 29252  015152  0E00               	movlw	0
 29253  015154  6E0B               	movwf	(btemp+10)^0,c
 29254  015156  0E00               	movlw	0
 29255  015158  6E0C               	movwf	(btemp+11)^0,c
 29256                           
 29257                           ;stkvar	_a @ sp[(-13)+-8]
 29258  01515A  0EEB               	movlw	-21
 29259  01515C  0060  F027  FFE3   	movff	btemp+8,plusw1
 29260  015162  0EEC               	movlw	-20
 29261  015164  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29262  01516A  0EED               	movlw	-19
 29263  01516C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29264  015172  0EEE               	movlw	-18
 29265  015174  0060  F033  FFE3   	movff	btemp+11,plusw1
 29266  01517A                     l9038:
 29267                           
 29268                           ;stkvar	_a @ sp[(-13)+-8]
 29269  01517A  0EEB               	movlw	-21
 29270  01517C  50E3               	movf	plusw1,w,c
 29271  01517E  E139               	bnz	l9050
 29272  015180  0EEC               	movlw	-20
 29273  015182  50E3               	movf	plusw1,w,c
 29274  015184  E136               	bnz	l9050
 29275  015186  0EED               	movlw	-19
 29276  015188  50E3               	movf	plusw1,w,c
 29277  01518A  E133               	bnz	l9050
 29278  01518C  0EEE               	movlw	-18
 29279  01518E  50E3               	movf	plusw1,w,c
 29280  015190  A4D8               	btfss	status,2,c
 29281  015192  D02F               	goto	l9050
 29282                           
 29283                           ;stkvar	_b @ sp[(-13)+-4]
 29284  015194  0EEF               	movlw	-17
 29285  015196  6AE3               	clrf	plusw1,c
 29286  015198  0EF0               	movlw	-16
 29287  01519A  6AE3               	clrf	plusw1,c
 29288  01519C  0EF1               	movlw	-15
 29289  01519E  6AE3               	clrf	plusw1,c
 29290  0151A0  0EF2               	movlw	-14
 29291  0151A2  6AE3               	clrf	plusw1,c
 29292                           
 29293                           ;stkvar	_b @ sp[(-13)+-4]
 29294  0151A4  0EF1               	movlw	241
 29295  0151A6  24E1               	addwf	fsr1l,w,c
 29296  0151A8  6ED9               	movwf	fsr2l,c
 29297  0151AA  0EFF               	movlw	255
 29298  0151AC  20E2               	addwfc	fsr1h,w,c
 29299  0151AE  6EDA               	movwf	fsr2h,c
 29300  0151B0  0E80               	movlw	128
 29301  0151B2  12DE               	iorwf	postinc2,f,c
 29302  0151B4  0E7F               	movlw	127
 29303  0151B6  12DD               	iorwf	postdec2,f,c
 29304  0151B8                     l9044:
 29305                           
 29306                           ;stkvar	_sign @ sp[(-13)+12]
 29307  0151B8  0EFF               	movlw	-1
 29308  0151BA  006F FF8C  F00C    	movff	plusw1,btemp+11
 29309                           
 29310                           ;stkvar	_b @ sp[(-13)+-4]
 29311  0151C0  0EF2               	movlw	242
 29312  0151C2  24E1               	addwf	fsr1l,w,c
 29313  0151C4  6ED9               	movwf	fsr2l,c
 29314  0151C6  0EFF               	movlw	255
 29315  0151C8  20E2               	addwfc	fsr1h,w,c
 29316  0151CA  6EDA               	movwf	fsr2h,c
 29317  0151CC  500C               	movf	(btemp+11)^0,w,c
 29318  0151CE  12DF               	iorwf	indf2,f,c
 29319                           
 29320                           ;stkvar	_b @ sp[(-13)+-4]
 29321  0151D0  0EEF               	movlw	-17
 29322  0151D2  006F FF8C  F001    	movff	plusw1,btemp
 29323  0151D8  0EF0               	movlw	-16
 29324  0151DA  006F FF8C  F002    	movff	plusw1,btemp+1
 29325  0151E0  0EF1               	movlw	-15
 29326  0151E2  006F FF8C  F003    	movff	plusw1,btemp+2
 29327  0151E8  0EF2               	movlw	-14
 29328  0151EA  006F FF8C  F004    	movff	plusw1,btemp+3
 29329  0151F0  D19F               	goto	l3261
 29330  0151F2                     l9050:
 29331                           
 29332                           ;stkvar	_bexp @ sp[(-13)+11]
 29333  0151F2  0EFE               	movlw	-2
 29334  0151F4  50E3               	movf	plusw1,w,c
 29335  0151F6  A4D8               	btfss	status,2,c
 29336  0151F8  D009               	goto	l9058
 29337  0151FA  0E00               	movlw	0
 29338  0151FC  6E01               	movwf	btemp^0,c
 29339  0151FE  0E00               	movlw	0
 29340  015200  6E02               	movwf	(btemp+1)^0,c
 29341  015202  0E00               	movlw	0
 29342  015204  6E03               	movwf	(btemp+2)^0,c
 29343  015206  0E00               	movlw	0
 29344  015208  6E04               	movwf	(btemp+3)^0,c
 29345  01520A  D192               	goto	l3261
 29346  01520C                     l9058:
 29347                           
 29348                           ;stkvar	_bexp @ sp[(-13)+11]
 29349  01520C  0EFE               	movlw	-2
 29350  01520E  50E3               	movf	plusw1,w,c
 29351  015210  6E0B               	movwf	(btemp+10)^0,c
 29352  015212  6A0C               	clrf	(btemp+11)^0,c
 29353                           
 29354                           ;stkvar	_aexp @ sp[(-13)+10]
 29355  015214  0EFD               	movlw	-3
 29356  015216  50E3               	movf	plusw1,w,c
 29357  015218  5E0B               	subwf	(btemp+10)^0,f,c
 29358  01521A  0E00               	movlw	0
 29359  01521C  5A0C               	subwfb	(btemp+11)^0,f,c
 29360  01521E  0E7F               	movlw	127
 29361  015220  260B               	addwf	(btemp+10)^0,f,c
 29362  015222  0E00               	movlw	0
 29363  015224  220C               	addwfc	(btemp+11)^0,f,c
 29364                           
 29365                           ;stkvar	_new_exp @ sp[(-13)+8]
 29366  015226  0EFB               	movlw	-5
 29367  015228  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29368  01522E  0EFC               	movlw	-4
 29369  015230  0060  F033  FFE3   	movff	btemp+11,plusw1
 29370                           
 29371                           ;stkvar	_b @ sp[(-13)+-4]
 29372  015236  0EEF               	movlw	-17
 29373  015238  006F FF8C  F009    	movff	plusw1,btemp+8
 29374  01523E  0EF0               	movlw	-16
 29375  015240  006F FF8C  F00A    	movff	plusw1,btemp+9
 29376  015246  0EF1               	movlw	-15
 29377  015248  006F FF8C  F00B    	movff	plusw1,btemp+10
 29378  01524E  0EF2               	movlw	-14
 29379  015250  006F FF8C  F00C    	movff	plusw1,btemp+11
 29380                           
 29381                           ;stkvar	_rem @ sp[(-13)+4]
 29382  015256  0EF7               	movlw	-9
 29383  015258  0060  F027  FFE3   	movff	btemp+8,plusw1
 29384  01525E  0EF8               	movlw	-8
 29385  015260  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29386  015266  0EF9               	movlw	-7
 29387  015268  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29388  01526E  0EFA               	movlw	-6
 29389  015270  0060  F033  FFE3   	movff	btemp+11,plusw1
 29390                           
 29391                           ;stkvar	_b @ sp[(-13)+-4]
 29392  015276  0EEF               	movlw	-17
 29393  015278  6AE3               	clrf	plusw1,c
 29394  01527A  0EF0               	movlw	-16
 29395  01527C  6AE3               	clrf	plusw1,c
 29396  01527E  0EF1               	movlw	-15
 29397  015280  6AE3               	clrf	plusw1,c
 29398  015282  0EF2               	movlw	-14
 29399  015284  6AE3               	clrf	plusw1,c
 29400                           
 29401                           ;stkvar	_grs @ sp[(-13)+0]
 29402  015286  0EF3               	movlw	-13
 29403  015288  6AE3               	clrf	plusw1,c
 29404  01528A  0EF4               	movlw	-12
 29405  01528C  6AE3               	clrf	plusw1,c
 29406  01528E  0EF5               	movlw	-11
 29407  015290  6AE3               	clrf	plusw1,c
 29408  015292  0EF6               	movlw	-10
 29409  015294  6AE3               	clrf	plusw1,c
 29410                           
 29411                           ;stkvar	_aexp @ sp[(-13)+10]
 29412  015296  0EFD               	movlw	-3
 29413  015298  6AE3               	clrf	plusw1,c
 29414  01529A  D050               	goto	l9086
 29415  01529C                     l9068:
 29416                           
 29417                           ;stkvar	_aexp @ sp[(-13)+10]
 29418  01529C  0EFD               	movlw	-3
 29419  01529E  50E3               	movf	plusw1,w,c
 29420  0152A0  B4D8               	btfsc	status,2,c
 29421  0152A2  D020               	goto	l9078
 29422                           
 29423                           ;stkvar	_rem @ sp[(-13)+4]
 29424  0152A4  90D8               	bcf	status,0,c
 29425  0152A6  0EF7               	movlw	-9
 29426  0152A8  36E3               	rlcf	plusw1,f,c
 29427  0152AA  0EF8               	movlw	-8
 29428  0152AC  36E3               	rlcf	plusw1,f,c
 29429  0152AE  0EF9               	movlw	-7
 29430  0152B0  36E3               	rlcf	plusw1,f,c
 29431  0152B2  0EFA               	movlw	-6
 29432  0152B4  36E3               	rlcf	plusw1,f,c
 29433                           
 29434                           ;stkvar	_b @ sp[(-13)+-4]
 29435  0152B6  90D8               	bcf	status,0,c
 29436  0152B8  0EEF               	movlw	-17
 29437  0152BA  36E3               	rlcf	plusw1,f,c
 29438  0152BC  0EF0               	movlw	-16
 29439  0152BE  36E3               	rlcf	plusw1,f,c
 29440  0152C0  0EF1               	movlw	-15
 29441  0152C2  36E3               	rlcf	plusw1,f,c
 29442  0152C4  0EF2               	movlw	-14
 29443  0152C6  36E3               	rlcf	plusw1,f,c
 29444                           
 29445                           ;stkvar	_grs @ sp[(-13)+0]
 29446  0152C8  0EF6               	movlw	-10
 29447  0152CA  AEE3               	btfss	plusw1,7,c
 29448  0152CC  D002               	goto	l9076
 29449                           
 29450                           ;stkvar	_b @ sp[(-13)+-4]
 29451  0152CE  0EEF               	movlw	-17
 29452  0152D0  80E3               	bsf	plusw1,0,c
 29453  0152D2                     l9076:
 29454                           
 29455                           ;stkvar	_grs @ sp[(-13)+0]
 29456  0152D2  90D8               	bcf	status,0,c
 29457  0152D4  0EF3               	movlw	-13
 29458  0152D6  36E3               	rlcf	plusw1,f,c
 29459  0152D8  0EF4               	movlw	-12
 29460  0152DA  36E3               	rlcf	plusw1,f,c
 29461  0152DC  0EF5               	movlw	-11
 29462  0152DE  36E3               	rlcf	plusw1,f,c
 29463  0152E0  0EF6               	movlw	-10
 29464  0152E2  36E3               	rlcf	plusw1,f,c
 29465  0152E4                     l9078:
 29466                           
 29467                           ;stkvar	_a @ sp[(-13)+-8]
 29468                           ;stkvar	_rem @ sp[(-13)+4]
 29469  0152E4  50E1               	movf	fsr1l,w,c
 29470  0152E6  0FF7               	addlw	-9
 29471  0152E8  6ED9               	movwf	fsr2l,c
 29472  0152EA  50E2               	movf	fsr1h,w,c
 29473  0152EC  6EDA               	movwf	fsr2h,c
 29474  0152EE  0EFF               	movlw	255
 29475  0152F0  22DA               	addwfc	fsr2h,f,c
 29476  0152F2  0EEB               	movlw	-21
 29477  0152F4  50E3               	movf	plusw1,w,c
 29478  0152F6  5CDE               	subwf	postinc2,w,c
 29479  0152F8  0EEC               	movlw	-20
 29480  0152FA  50E3               	movf	plusw1,w,c
 29481  0152FC  58DE               	subwfb	postinc2,w,c
 29482  0152FE  0EED               	movlw	-19
 29483  015300  50E3               	movf	plusw1,w,c
 29484  015302  58DE               	subwfb	postinc2,w,c
 29485  015304  0EEE               	movlw	-18
 29486  015306  50E3               	movf	plusw1,w,c
 29487  015308  58DE               	subwfb	postinc2,w,c
 29488  01530A  A0D8               	btfss	status,0,c
 29489  01530C  D015               	goto	l9084
 29490                           
 29491                           ;stkvar	_grs @ sp[(-13)+0]
 29492  01530E  0EF6               	movlw	-10
 29493  015310  8CE3               	bsf	plusw1,6,c
 29494                           
 29495                           ;stkvar	_a @ sp[(-13)+-8]
 29496                           ;stkvar	_rem @ sp[(-13)+4]
 29497  015312  50E1               	movf	fsr1l,w,c
 29498  015314  0FF7               	addlw	-9
 29499  015316  6ED9               	movwf	fsr2l,c
 29500  015318  50E2               	movf	fsr1h,w,c
 29501  01531A  6EDA               	movwf	fsr2h,c
 29502  01531C  0EFF               	movlw	255
 29503  01531E  22DA               	addwfc	fsr2h,f,c
 29504  015320  0EEB               	movlw	-21
 29505  015322  50E3               	movf	plusw1,w,c
 29506  015324  5EDE               	subwf	postinc2,f,c
 29507  015326  0EEC               	movlw	-20
 29508  015328  50E3               	movf	plusw1,w,c
 29509  01532A  5ADE               	subwfb	postinc2,f,c
 29510  01532C  0EED               	movlw	-19
 29511  01532E  50E3               	movf	plusw1,w,c
 29512  015330  5ADE               	subwfb	postinc2,f,c
 29513  015332  0EEE               	movlw	-18
 29514  015334  50E3               	movf	plusw1,w,c
 29515  015336  5ADE               	subwfb	postinc2,f,c
 29516  015338                     l9084:
 29517                           
 29518                           ;stkvar	_aexp @ sp[(-13)+10]
 29519  015338  0EFD               	movlw	-3
 29520  01533A  2AE3               	incf	plusw1,f,c
 29521  01533C                     l9086:
 29522                           
 29523                           ;stkvar	_aexp @ sp[(-13)+10]
 29524  01533C  0EFD               	movlw	-3
 29525  01533E  006F FF8C  F001    	movff	plusw1,btemp
 29526  015344  0E19               	movlw	25
 29527  015346  6401               	cpfsgt	btemp^0,c
 29528  015348  D7A9               	goto	l9068
 29529                           
 29530                           ;stkvar	_rem @ sp[(-13)+4]
 29531  01534A  0EF7               	movlw	-9
 29532  01534C  50E3               	movf	plusw1,w,c
 29533  01534E  E10A               	bnz	u7220
 29534  015350  0EF8               	movlw	-8
 29535  015352  50E3               	movf	plusw1,w,c
 29536  015354  E107               	bnz	u7220
 29537  015356  0EF9               	movlw	-7
 29538  015358  50E3               	movf	plusw1,w,c
 29539  01535A  E104               	bnz	u7220
 29540  01535C  0EFA               	movlw	-6
 29541  01535E  50E3               	movf	plusw1,w,c
 29542  015360  B4D8               	btfsc	status,2,c
 29543  015362  D024               	goto	l9102
 29544  015364                     u7220:
 29545                           
 29546                           ;stkvar	_grs @ sp[(-13)+0]
 29547  015364  0EF3               	movlw	-13
 29548  015366  80E3               	bsf	plusw1,0,c
 29549  015368  D021               	goto	l9102
 29550  01536A                     l9092:
 29551                           
 29552                           ;stkvar	_b @ sp[(-13)+-4]
 29553  01536A  90D8               	bcf	status,0,c
 29554  01536C  0EEF               	movlw	-17
 29555  01536E  36E3               	rlcf	plusw1,f,c
 29556  015370  0EF0               	movlw	-16
 29557  015372  36E3               	rlcf	plusw1,f,c
 29558  015374  0EF1               	movlw	-15
 29559  015376  36E3               	rlcf	plusw1,f,c
 29560  015378  0EF2               	movlw	-14
 29561  01537A  36E3               	rlcf	plusw1,f,c
 29562                           
 29563                           ;stkvar	_grs @ sp[(-13)+0]
 29564  01537C  0EF6               	movlw	-10
 29565  01537E  AEE3               	btfss	plusw1,7,c
 29566  015380  D002               	goto	l9098
 29567                           
 29568                           ;stkvar	_b @ sp[(-13)+-4]
 29569  015382  0EEF               	movlw	-17
 29570  015384  80E3               	bsf	plusw1,0,c
 29571  015386                     l9098:
 29572                           
 29573                           ;stkvar	_grs @ sp[(-13)+0]
 29574  015386  90D8               	bcf	status,0,c
 29575  015388  0EF3               	movlw	-13
 29576  01538A  36E3               	rlcf	plusw1,f,c
 29577  01538C  0EF4               	movlw	-12
 29578  01538E  36E3               	rlcf	plusw1,f,c
 29579  015390  0EF5               	movlw	-11
 29580  015392  36E3               	rlcf	plusw1,f,c
 29581  015394  0EF6               	movlw	-10
 29582  015396  36E3               	rlcf	plusw1,f,c
 29583                           
 29584                           ;stkvar	_new_exp @ sp[(-13)+8]
 29585  015398  50E1               	movf	fsr1l,w,c
 29586  01539A  0FFB               	addlw	-5
 29587  01539C  6ED9               	movwf	fsr2l,c
 29588  01539E  50E2               	movf	fsr1h,w,c
 29589  0153A0  6EDA               	movwf	fsr2h,c
 29590  0153A2  0EFF               	movlw	255
 29591  0153A4  22DA               	addwfc	fsr2h,f,c
 29592  0153A6  06DE               	decf	postinc2,f,c
 29593  0153A8  0E00               	movlw	0
 29594  0153AA  5ADD               	subwfb	postdec2,f,c
 29595  0153AC                     l9102:
 29596                           
 29597                           ;stkvar	_b @ sp[(-13)+-4]
 29598  0153AC  0EF1               	movlw	-15
 29599  0153AE  AEE3               	btfss	plusw1,7,c
 29600  0153B0  D7DC               	goto	l9092
 29601                           
 29602                           ;stkvar	_aexp @ sp[(-13)+10]
 29603  0153B2  0EFD               	movlw	-3
 29604  0153B4  6AE3               	clrf	plusw1,c
 29605                           
 29606                           ;stkvar	_grs @ sp[(-13)+0]
 29607  0153B6  0EF6               	movlw	-10
 29608  0153B8  AEE3               	btfss	plusw1,7,c
 29609  0153BA  D020               	goto	l9116
 29610                           
 29611                           ;stkvar	_grs @ sp[(-13)+0]
 29612  0153BC  50E1               	movf	fsr1l,w,c
 29613  0153BE  0FF3               	addlw	-13
 29614  0153C0  6ED9               	movwf	fsr2l,c
 29615  0153C2  50E2               	movf	fsr1h,w,c
 29616  0153C4  6EDA               	movwf	fsr2h,c
 29617  0153C6  0EFF               	movlw	255
 29618  0153C8  22DA               	addwfc	fsr2h,f,c
 29619  0153CA  0EFF               	movlw	255
 29620  0153CC  14DE               	andwf	postinc2,w,c
 29621  0153CE  6E09               	movwf	(btemp+8)^0,c
 29622  0153D0  0EFF               	movlw	255
 29623  0153D2  14DE               	andwf	postinc2,w,c
 29624  0153D4  6E0A               	movwf	(btemp+9)^0,c
 29625  0153D6  0EFF               	movlw	255
 29626  0153D8  14DE               	andwf	postinc2,w,c
 29627  0153DA  6E0B               	movwf	(btemp+10)^0,c
 29628  0153DC  0E7F               	movlw	127
 29629  0153DE  14DE               	andwf	postinc2,w,c
 29630  0153E0  6E0C               	movwf	(btemp+11)^0,c
 29631  0153E2  5009               	movf	(btemp+8)^0,w,c
 29632  0153E4  100A               	iorwf	(btemp+9)^0,w,c
 29633  0153E6  100B               	iorwf	(btemp+10)^0,w,c
 29634  0153E8  100C               	iorwf	(btemp+11)^0,w,c
 29635  0153EA  B4D8               	btfsc	status,2,c
 29636  0153EC  D004               	goto	l9112
 29637  0153EE                     u7260:
 29638                           
 29639                           ;stkvar	_aexp @ sp[(-13)+10]
 29640  0153EE  0EFD               	movlw	-3
 29641  0153F0  6AE3               	clrf	plusw1,c
 29642  0153F2  2AE3               	incf	plusw1,f,c
 29643  0153F4  D003               	goto	l9116
 29644  0153F6                     l9112:
 29645                           
 29646                           ;stkvar	_b @ sp[(-13)+-4]
 29647  0153F6  0EEF               	movlw	-17
 29648  0153F8  B0E3               	btfsc	plusw1,0,c
 29649  0153FA  D7F9               	goto	u7260
 29650  0153FC                     l9116:
 29651                           
 29652                           ;stkvar	_aexp @ sp[(-13)+10]
 29653  0153FC  0EFD               	movlw	-3
 29654  0153FE  50E3               	movf	plusw1,w,c
 29655  015400  B4D8               	btfsc	status,2,c
 29656  015402  D036               	goto	l9126
 29657                           
 29658                           ;stkvar	_b @ sp[(-13)+-4]
 29659  015404  50E1               	movf	fsr1l,w,c
 29660  015406  0FEF               	addlw	-17
 29661  015408  6ED9               	movwf	fsr2l,c
 29662  01540A  50E2               	movf	fsr1h,w,c
 29663  01540C  6EDA               	movwf	fsr2h,c
 29664  01540E  0EFF               	movlw	255
 29665  015410  22DA               	addwfc	fsr2h,f,c
 29666  015412  2ADE               	incf	postinc2,f,c
 29667  015414  0E00               	movlw	0
 29668  015416  22DE               	addwfc	postinc2,f,c
 29669  015418  22DE               	addwfc	postinc2,f,c
 29670  01541A  22DE               	addwfc	postinc2,f,c
 29671                           
 29672                           ;stkvar	_b @ sp[(-13)+-4]
 29673  01541C  0EF2               	movlw	-14
 29674  01541E  A0E3               	btfss	plusw1,0,c
 29675  015420  D027               	goto	l9126
 29676  015422  0E01               	movlw	1
 29677  015424  6E0C               	movwf	(btemp+11)^0,c
 29678                           
 29679                           ;stkvar	_b @ sp[(-13)+-4]
 29680  015426  50E1               	movf	fsr1l,w,c
 29681  015428  0FEF               	addlw	-17
 29682  01542A  6ED9               	movwf	fsr2l,c
 29683  01542C  50E2               	movf	fsr1h,w,c
 29684  01542E  6EDA               	movwf	fsr2h,c
 29685  015430  0EFF               	movlw	255
 29686  015432  22DA               	addwfc	fsr2h,f,c
 29687  015434  280C               	incf	(btemp+11)^0,w,c
 29688  015436  52DE               	movf	postinc2,f,c
 29689  015438  D008               	goto	u7300
 29690  01543A                     u7305:
 29691  01543A  52DE               	movf	postinc2,f,c
 29692  01543C  90D8               	bcf	status,0,c
 29693  01543E  BEDC               	btfsc	preinc2,7,c
 29694  015440  80D8               	bsf	status,0,c
 29695  015442  32DD               	rrcf	postdec2,f,c
 29696  015444  32DD               	rrcf	postdec2,f,c
 29697  015446  32DD               	rrcf	postdec2,f,c
 29698  015448  32DE               	rrcf	postinc2,f,c
 29699  01544A                     u7300:
 29700  01544A  2EE8               	decfsz	wreg,f,c
 29701  01544C  D7F6               	goto	u7305
 29702                           
 29703                           ;stkvar	_new_exp @ sp[(-13)+8]
 29704  01544E  0EFB               	movlw	-5
 29705  015450  50E3               	movf	plusw1,w,c
 29706  015452  0F01               	addlw	1
 29707  015454  6E01               	movwf	btemp^0,c
 29708  015456  0EFB               	movlw	-5
 29709  015458  0060  F007  FFE3   	movff	btemp,plusw1
 29710  01545E  6A01               	clrf	btemp^0,c
 29711  015460  0EFC               	movlw	-4
 29712  015462  50E3               	movf	plusw1,w,c
 29713  015464  2001               	addwfc	btemp^0,w,c
 29714  015466  6E01               	movwf	btemp^0,c
 29715  015468  0EFC               	movlw	-4
 29716  01546A  0060  F007  FFE3   	movff	btemp,plusw1
 29717  015470                     l9126:
 29718                           
 29719                           ;stkvar	_new_exp @ sp[(-13)+8]
 29720  015470  0EFC               	movlw	-4
 29721  015472  BEE3               	btfsc	plusw1,7,c
 29722  015474  D01B               	goto	l9132
 29723  015476  0EFC               	movlw	-4
 29724  015478  50E3               	movf	plusw1,w,c
 29725  01547A  E104               	bnz	u7310
 29726  01547C  0EFB               	movlw	-5
 29727  01547E  28E3               	incf	plusw1,w,c
 29728  015480  A0D8               	btfss	status,0,c
 29729  015482  D014               	goto	l9132
 29730  015484                     u7310:
 29731  015484  0EFF               	movlw	255
 29732  015486  6E0B               	movwf	(btemp+10)^0,c
 29733  015488  0E00               	movlw	0
 29734  01548A  6E0C               	movwf	(btemp+11)^0,c
 29735                           
 29736                           ;stkvar	_new_exp @ sp[(-13)+8]
 29737  01548C  0EFB               	movlw	-5
 29738  01548E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29739  015494  0EFC               	movlw	-4
 29740  015496  0060  F033  FFE3   	movff	btemp+11,plusw1
 29741                           
 29742                           ;stkvar	_b @ sp[(-13)+-4]
 29743  01549C  0EEF               	movlw	-17
 29744  01549E  6AE3               	clrf	plusw1,c
 29745  0154A0  0EF0               	movlw	-16
 29746  0154A2  6AE3               	clrf	plusw1,c
 29747  0154A4  0EF1               	movlw	-15
 29748  0154A6  6AE3               	clrf	plusw1,c
 29749  0154A8  0EF2               	movlw	-14
 29750  0154AA  6AE3               	clrf	plusw1,c
 29751  0154AC                     l9132:
 29752                           
 29753                           ;stkvar	_new_exp @ sp[(-13)+8]
 29754  0154AC  0EFC               	movlw	-4
 29755  0154AE  BEE3               	btfsc	plusw1,7,c
 29756  0154B0  D007               	goto	u7320
 29757  0154B2  0EFC               	movlw	-4
 29758  0154B4  50E3               	movf	plusw1,w,c
 29759  0154B6  E112               	bnz	l9138
 29760  0154B8  0EFB               	movlw	-5
 29761  0154BA  04E3               	decf	plusw1,w,c
 29762  0154BC  B0D8               	btfsc	status,0,c
 29763  0154BE  D00E               	goto	l9138
 29764  0154C0                     u7320:
 29765                           
 29766                           ;stkvar	_new_exp @ sp[(-13)+8]
 29767  0154C0  0EFB               	movlw	-5
 29768  0154C2  6AE3               	clrf	plusw1,c
 29769  0154C4  0EFC               	movlw	-4
 29770  0154C6  6AE3               	clrf	plusw1,c
 29771                           
 29772                           ;stkvar	_b @ sp[(-13)+-4]
 29773  0154C8  0EEF               	movlw	-17
 29774  0154CA  6AE3               	clrf	plusw1,c
 29775  0154CC  0EF0               	movlw	-16
 29776  0154CE  6AE3               	clrf	plusw1,c
 29777  0154D0  0EF1               	movlw	-15
 29778  0154D2  6AE3               	clrf	plusw1,c
 29779  0154D4  0EF2               	movlw	-14
 29780  0154D6  6AE3               	clrf	plusw1,c
 29781                           
 29782                           ;stkvar	_sign @ sp[(-13)+12]
 29783  0154D8  0EFF               	movlw	-1
 29784  0154DA  6AE3               	clrf	plusw1,c
 29785  0154DC                     l9138:
 29786                           
 29787                           ;stkvar	_new_exp @ sp[(-13)+8]
 29788                           ;stkvar	_bexp @ sp[(-13)+11]
 29789  0154DC  0EFB               	movlw	-5
 29790  0154DE  006F FF8C  F001    	movff	plusw1,btemp
 29791  0154E4  0EFE               	movlw	-2
 29792  0154E6  0060  F007  FFE3   	movff	btemp,plusw1
 29793                           
 29794                           ;stkvar	_bexp @ sp[(-13)+11]
 29795  0154EC  0EFE               	movlw	-2
 29796  0154EE  A0E3               	btfss	plusw1,0,c
 29797  0154F0  D009               	goto	l9144
 29798                           
 29799                           ;stkvar	_b @ sp[(-13)+-4]
 29800  0154F2  0EF1               	movlw	241
 29801  0154F4  24E1               	addwf	fsr1l,w,c
 29802  0154F6  6ED9               	movwf	fsr2l,c
 29803  0154F8  0EFF               	movlw	255
 29804  0154FA  20E2               	addwfc	fsr1h,w,c
 29805  0154FC  6EDA               	movwf	fsr2h,c
 29806  0154FE  0E00               	movlw	0
 29807  015500  8EDB               	bsf	plusw2,7,c
 29808  015502  D008               	goto	l9146
 29809  015504                     l9144:
 29810                           
 29811                           ;stkvar	_b @ sp[(-13)+-4]
 29812  015504  0EF1               	movlw	241
 29813  015506  24E1               	addwf	fsr1l,w,c
 29814  015508  6ED9               	movwf	fsr2l,c
 29815  01550A  0EFF               	movlw	255
 29816  01550C  20E2               	addwfc	fsr1h,w,c
 29817  01550E  6EDA               	movwf	fsr2h,c
 29818  015510  0E7F               	movlw	127
 29819  015512  16DF               	andwf	indf2,f,c
 29820  015514                     l9146:
 29821                           
 29822                           ;stkvar	_b @ sp[(-13)+-4]
 29823  015514  0EF2               	movlw	242
 29824  015516  24E1               	addwf	fsr1l,w,c
 29825  015518  6ED9               	movwf	fsr2l,c
 29826  01551A  0EFF               	movlw	255
 29827  01551C  20E2               	addwfc	fsr1h,w,c
 29828  01551E  6EDA               	movwf	fsr2h,c
 29829                           
 29830                           ;stkvar	_bexp @ sp[(-13)+11]
 29831  015520  0EFE               	movlw	-2
 29832  015522  006F FF8C  F00C    	movff	plusw1,btemp+11
 29833  015528  90D8               	bcf	status,0,c
 29834  01552A  300C               	rrcf	(btemp+11)^0,w,c
 29835  01552C  6EDF               	movwf	indf2,c
 29836  01552E  D644               	goto	l9044
 29837  015530                     l3261:
 29838                           
 29839                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 29840  015530  0EEB               	movlw	235
 29841  015532  26E1               	addwf	fsr1l,f,c
 29842  015534  0EFF               	movlw	255
 29843  015536  22E2               	addwfc	fsr1h,f,c
 29844  015538  0012               	return		;funcret
 29845  01553A                     __end_of___fldiv:
 29846                           	opt callstack 0
 29847                           
 29848 ;; *************** function ___flge *****************
 29849 ;; Defined at:
 29850 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 29851 ;; Parameters:    Size  Location     Type
 29852 ;;  ff1             4  [STACK] unsigned char 
 29853 ;;  ff2             4  [STACK] unsigned char 
 29854 ;; Auto vars:     Size  Location     Type
 29855 ;;		None
 29856 ;; Return value:  Size  Location     Type
 29857 ;;		None               void
 29858 ;; Registers used:
 29859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 29860 ;; Tracked objects:
 29861 ;;		On entry : 0/2
 29862 ;;		On exit  : 0/0
 29863 ;;		Unchanged: 0/0
 29864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29869 ;;Total ram usage:        0 bytes
 29870 ;; Hardware stack levels used:    1
 29871 ;; Hardware stack levels required when called:   15
 29872 ;; This function calls:
 29873 ;;		Nothing
 29874 ;; This function is called by:
 29875 ;;		_main
 29876 ;;		_convert_dac_raw
 29877 ;;		_calc_ror_data
 29878 ;;		_check_day_time
 29879 ;;		_calc_bsoc
 29880 ;;		_efgtoa
 29881 ;; This function uses a reentrant model
 29882 ;;
 29883                           
 29884                           	psect	text121
 29885  019A58                     __ptext121:
 29886                           	opt callstack 0
 29887  019A58                     ___flge:
 29888                           	opt callstack 0
 29889                           
 29890                           ;stkvar	_ff1 @ sp[(0)+-4]
 29891                           
 29892                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29893                           ;incstack = 0
 29894 ;; hardware stack exceeded
 29895  019A58  50E1               	movf	fsr1l,w,c
 29896  019A5A  0FFC               	addlw	-4
 29897  019A5C  6ED9               	movwf	fsr2l,c
 29898  019A5E  50E2               	movf	fsr1h,w,c
 29899  019A60  6EDA               	movwf	fsr2h,c
 29900  019A62  0EFF               	movlw	255
 29901  019A64  22DA               	addwfc	fsr2h,f,c
 29902  019A66  0E00               	movlw	0
 29903  019A68  14DE               	andwf	postinc2,w,c
 29904  019A6A  6E09               	movwf	(btemp+8)^0,c
 29905  019A6C  0E00               	movlw	0
 29906  019A6E  14DE               	andwf	postinc2,w,c
 29907  019A70  6E0A               	movwf	(btemp+9)^0,c
 29908  019A72  0E80               	movlw	128
 29909  019A74  14DE               	andwf	postinc2,w,c
 29910  019A76  6E0B               	movwf	(btemp+10)^0,c
 29911  019A78  0E7F               	movlw	127
 29912  019A7A  14DE               	andwf	postinc2,w,c
 29913  019A7C  6E0C               	movwf	(btemp+11)^0,c
 29914  019A7E  5009               	movf	(btemp+8)^0,w,c
 29915  019A80  100A               	iorwf	(btemp+9)^0,w,c
 29916  019A82  100B               	iorwf	(btemp+10)^0,w,c
 29917  019A84  100C               	iorwf	(btemp+11)^0,w,c
 29918  019A86  A4D8               	btfss	status,2,c
 29919  019A88  D008               	goto	l9420
 29920                           
 29921                           ;stkvar	_ff1 @ sp[(0)+-4]
 29922  019A8A  0EFC               	movlw	-4
 29923  019A8C  6AE3               	clrf	plusw1,c
 29924  019A8E  0EFD               	movlw	-3
 29925  019A90  6AE3               	clrf	plusw1,c
 29926  019A92  0EFE               	movlw	-2
 29927  019A94  6AE3               	clrf	plusw1,c
 29928  019A96  0EFF               	movlw	-1
 29929  019A98  6AE3               	clrf	plusw1,c
 29930  019A9A                     l9420:
 29931                           
 29932                           ;stkvar	_ff2 @ sp[(0)+-8]
 29933  019A9A  50E1               	movf	fsr1l,w,c
 29934  019A9C  0FF8               	addlw	-8
 29935  019A9E  6ED9               	movwf	fsr2l,c
 29936  019AA0  50E2               	movf	fsr1h,w,c
 29937  019AA2  6EDA               	movwf	fsr2h,c
 29938  019AA4  0EFF               	movlw	255
 29939  019AA6  22DA               	addwfc	fsr2h,f,c
 29940  019AA8  0E00               	movlw	0
 29941  019AAA  14DE               	andwf	postinc2,w,c
 29942  019AAC  6E09               	movwf	(btemp+8)^0,c
 29943  019AAE  0E00               	movlw	0
 29944  019AB0  14DE               	andwf	postinc2,w,c
 29945  019AB2  6E0A               	movwf	(btemp+9)^0,c
 29946  019AB4  0E80               	movlw	128
 29947  019AB6  14DE               	andwf	postinc2,w,c
 29948  019AB8  6E0B               	movwf	(btemp+10)^0,c
 29949  019ABA  0E7F               	movlw	127
 29950  019ABC  14DE               	andwf	postinc2,w,c
 29951  019ABE  6E0C               	movwf	(btemp+11)^0,c
 29952  019AC0  5009               	movf	(btemp+8)^0,w,c
 29953  019AC2  100A               	iorwf	(btemp+9)^0,w,c
 29954  019AC4  100B               	iorwf	(btemp+10)^0,w,c
 29955  019AC6  100C               	iorwf	(btemp+11)^0,w,c
 29956  019AC8  A4D8               	btfss	status,2,c
 29957  019ACA  D008               	goto	l2942
 29958                           
 29959                           ;stkvar	_ff2 @ sp[(0)+-8]
 29960  019ACC  0EF8               	movlw	-8
 29961  019ACE  6AE3               	clrf	plusw1,c
 29962  019AD0  0EF9               	movlw	-7
 29963  019AD2  6AE3               	clrf	plusw1,c
 29964  019AD4  0EFA               	movlw	-6
 29965  019AD6  6AE3               	clrf	plusw1,c
 29966  019AD8  0EFB               	movlw	-5
 29967  019ADA  6AE3               	clrf	plusw1,c
 29968  019ADC                     l2942:
 29969                           
 29970                           ;stkvar	_ff1 @ sp[(0)+-4]
 29971  019ADC  0EFF               	movlw	-1
 29972  019ADE  AEE3               	btfss	plusw1,7,c
 29973  019AE0  D024               	goto	l9426
 29974                           
 29975                           ;stkvar	_ff1 @ sp[(0)+-4]
 29976  019AE2  0E00               	movlw	0
 29977  019AE4  6E09               	movwf	(btemp+8)^0,c
 29978  019AE6  0E00               	movlw	0
 29979  019AE8  6E0A               	movwf	(btemp+9)^0,c
 29980  019AEA  0E00               	movlw	0
 29981  019AEC  6E0B               	movwf	(btemp+10)^0,c
 29982  019AEE  0E80               	movlw	128
 29983  019AF0  6E0C               	movwf	(btemp+11)^0,c
 29984  019AF2  0EFC               	movlw	-4
 29985  019AF4  50E3               	movf	plusw1,w,c
 29986  019AF6  5E09               	subwf	(btemp+8)^0,f,c
 29987  019AF8  0EFD               	movlw	-3
 29988  019AFA  50E3               	movf	plusw1,w,c
 29989  019AFC  5A0A               	subwfb	(btemp+9)^0,f,c
 29990  019AFE  0EFE               	movlw	-2
 29991  019B00  50E3               	movf	plusw1,w,c
 29992  019B02  5A0B               	subwfb	(btemp+10)^0,f,c
 29993  019B04  0EFF               	movlw	-1
 29994  019B06  50E3               	movf	plusw1,w,c
 29995  019B08  5A0C               	subwfb	(btemp+11)^0,f,c
 29996                           
 29997                           ;stkvar	_ff1 @ sp[(0)+-4]
 29998  019B0A  0EFC               	movlw	-4
 29999  019B0C  0060  F027  FFE3   	movff	btemp+8,plusw1
 30000  019B12  0EFD               	movlw	-3
 30001  019B14  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30002  019B1A  0EFE               	movlw	-2
 30003  019B1C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30004  019B22  0EFF               	movlw	-1
 30005  019B24  0060  F033  FFE3   	movff	btemp+11,plusw1
 30006  019B2A                     l9426:
 30007                           
 30008                           ;stkvar	_ff2 @ sp[(0)+-8]
 30009  019B2A  0EFB               	movlw	-5
 30010  019B2C  AEE3               	btfss	plusw1,7,c
 30011  019B2E  D024               	goto	l9430
 30012                           
 30013                           ;stkvar	_ff2 @ sp[(0)+-8]
 30014  019B30  0E00               	movlw	0
 30015  019B32  6E09               	movwf	(btemp+8)^0,c
 30016  019B34  0E00               	movlw	0
 30017  019B36  6E0A               	movwf	(btemp+9)^0,c
 30018  019B38  0E00               	movlw	0
 30019  019B3A  6E0B               	movwf	(btemp+10)^0,c
 30020  019B3C  0E80               	movlw	128
 30021  019B3E  6E0C               	movwf	(btemp+11)^0,c
 30022  019B40  0EF8               	movlw	-8
 30023  019B42  50E3               	movf	plusw1,w,c
 30024  019B44  5E09               	subwf	(btemp+8)^0,f,c
 30025  019B46  0EF9               	movlw	-7
 30026  019B48  50E3               	movf	plusw1,w,c
 30027  019B4A  5A0A               	subwfb	(btemp+9)^0,f,c
 30028  019B4C  0EFA               	movlw	-6
 30029  019B4E  50E3               	movf	plusw1,w,c
 30030  019B50  5A0B               	subwfb	(btemp+10)^0,f,c
 30031  019B52  0EFB               	movlw	-5
 30032  019B54  50E3               	movf	plusw1,w,c
 30033  019B56  5A0C               	subwfb	(btemp+11)^0,f,c
 30034                           
 30035                           ;stkvar	_ff2 @ sp[(0)+-8]
 30036  019B58  0EF8               	movlw	-8
 30037  019B5A  0060  F027  FFE3   	movff	btemp+8,plusw1
 30038  019B60  0EF9               	movlw	-7
 30039  019B62  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30040  019B68  0EFA               	movlw	-6
 30041  019B6A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30042  019B70  0EFB               	movlw	-5
 30043  019B72  0060  F033  FFE3   	movff	btemp+11,plusw1
 30044  019B78                     l9430:
 30045                           
 30046                           ;stkvar	_ff1 @ sp[(0)+-4]
 30047  019B78  0EFF               	movlw	-1
 30048  019B7A  7EE3               	btg	plusw1,7,c
 30049                           
 30050                           ;stkvar	_ff2 @ sp[(0)+-8]
 30051  019B7C  0EFB               	movlw	-5
 30052  019B7E  7EE3               	btg	plusw1,7,c
 30053                           
 30054                           ;stkvar	_ff2 @ sp[(0)+-8]
 30055                           ;stkvar	_ff1 @ sp[(0)+-4]
 30056  019B80  50E1               	movf	fsr1l,w,c
 30057  019B82  0FFC               	addlw	-4
 30058  019B84  6ED9               	movwf	fsr2l,c
 30059  019B86  50E2               	movf	fsr1h,w,c
 30060  019B88  6EDA               	movwf	fsr2h,c
 30061  019B8A  0EFF               	movlw	255
 30062  019B8C  22DA               	addwfc	fsr2h,f,c
 30063  019B8E  0EF8               	movlw	-8
 30064  019B90  50E3               	movf	plusw1,w,c
 30065  019B92  5CDE               	subwf	postinc2,w,c
 30066  019B94  0EF9               	movlw	-7
 30067  019B96  50E3               	movf	plusw1,w,c
 30068  019B98  58DE               	subwfb	postinc2,w,c
 30069  019B9A  0EFA               	movlw	-6
 30070  019B9C  50E3               	movf	plusw1,w,c
 30071  019B9E  58DE               	subwfb	postinc2,w,c
 30072  019BA0  0EFB               	movlw	-5
 30073  019BA2  50E3               	movf	plusw1,w,c
 30074  019BA4  58DE               	subwfb	postinc2,w,c
 30075  019BA6  B0D8               	btfsc	status,0,c
 30076  019BA8  D002               	goto	l9438
 30077  019BAA  9001               	bcf	btemp& (0+255),0,c
 30078  019BAC  D001               	goto	l2949
 30079  019BAE                     l9438:
 30080  019BAE  8001               	bsf	btemp& (0+255),0,c
 30081  019BB0                     l2949:
 30082                           
 30083                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 30084  019BB0  0EF8               	movlw	248
 30085  019BB2  26E1               	addwf	fsr1l,f,c
 30086  019BB4  0EFF               	movlw	255
 30087  019BB6  22E2               	addwfc	fsr1h,f,c
 30088  019BB8  0012               	return		;funcret
 30089  019BBA                     __end_of___flge:
 30090                           	opt callstack 0
 30091                           
 30092 ;; *************** function _calc_model_data *****************
 30093 ;; Defined at:
 30094 ;;		line 67 in file "mbmc.c"
 30095 ;; Parameters:    Size  Location     Type
 30096 ;;		None
 30097 ;; Auto vars:     Size  Location     Type
 30098 ;;		None
 30099 ;; Return value:  Size  Location     Type
 30100 ;;                  1  [STACK] void 
 30101 ;; Registers used:
 30102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 30103 ;; Tracked objects:
 30104 ;;		On entry : 0/1
 30105 ;;		On exit  : 3F/39
 30106 ;;		Unchanged: 0/0
 30107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30112 ;;Total ram usage:        0 bytes
 30113 ;; Hardware stack levels used:    1
 30114 ;; Hardware stack levels required when called:   18
 30115 ;; This function calls:
 30116 ;;		___fladd
 30117 ;;		___flmul
 30118 ;;		___flsub
 30119 ;;		_lp_filter
 30120 ;;		_start_bsoc
 30121 ;;		_stop_bsoc
 30122 ;; This function is called by:
 30123 ;;		_main
 30124 ;; This function uses a reentrant model
 30125 ;;
 30126                           
 30127                           	psect	text122
 30128  0162EA                     __ptext122:
 30129                           	opt callstack 0
 30130  0162EA                     _calc_model_data:
 30131                           	opt callstack 12
 30132                           
 30133                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 30134                           
 30135                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30136                           ;incstack = 0
 30137  0162EA  EC96  F0EA         	call	_stop_bsoc	;wreg free
 30138                           
 30139                           ; BSR set to: 57
 30140                           ;mbmc.c: 72:  if (!V.calib) {
 30141  0162EE  0101               	movlb	1	; () banked
 30142  0162F0  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 30143  0162F2  A4D8               	btfss	status,2,c
 30144  0162F4  D220               	goto	l12300
 30145                           
 30146                           ; BSR set to: 1
 30147                           ;mbmc.c: 73:   C.updates++;
 30148  0162F6  EE22  F24B         	lfsr	2,_C+332	;volatile
 30149  0162FA  2ADE               	incf	postinc2,f,c
 30150  0162FC  0E00               	movlw	0
 30151  0162FE  22DE               	addwfc	postinc2,f,c
 30152  016300  22DE               	addwfc	postinc2,f,c
 30153  016302  22DE               	addwfc	postinc2,f,c
 30154                           
 30155                           ; BSR set to: 1
 30156                           ;mbmc.c: 74:   C.c_bat = C.calc[C_BATT];
 30157  016304  EE22  F0FF         	lfsr	2,_C
 30158  016308  006F FF78  F943    	movff	postinc2,_C+68	;volatile
 30159  01630E  006F FF78  F944    	movff	postinc2,_C+69	;volatile
 30160  016314  006F FF78  F945    	movff	postinc2,_C+70	;volatile
 30161  01631A  006F FF74  F946    	movff	postdec2,_C+71	;volatile
 30162                           
 30163                           ; BSR set to: 1
 30164                           ;mbmc.c: 75:   C.bc_ror = C.c_bat - bcror;
 30165  016320  0060  F23B  FFE6   	movff	calc_model_data@bcror,postinc1
 30166  016326  0060  F23F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 30167  01632C  0060  F243  FFE6   	movff	calc_model_data@bcror+2,postinc1
 30168  016332  0060  F247  FFE6   	movff	calc_model_data@bcror+3,postinc1
 30169  016338  EE22  F143         	lfsr	2,_C+68	;volatile
 30170  01633C  006F FF7B FFE6     	movff	postinc2,postinc1
 30171  016342  006F FF7B FFE6     	movff	postinc2,postinc1
 30172  016348  006F FF7B FFE6     	movff	postinc2,postinc1
 30173  01634E  006F FF7B FFE6     	movff	postinc2,postinc1
 30174  016354  EC36  F0E4         	call	___flsub	;wreg free
 30175  016358  0060  F004  F96F   	movff	btemp,_C+112	;volatile
 30176  01635E  0060  F008  F970   	movff	btemp+1,_C+113	;volatile
 30177  016364  0060  F00C  F971   	movff	btemp+2,_C+114	;volatile
 30178  01636A  0060  F010  F972   	movff	btemp+3,_C+115	;volatile
 30179                           
 30180                           ;mbmc.c: 76:   bcror = C.c_bat;
 30181  016370  C943  F08E         	movff	_C+68,calc_model_data@bcror	;volatile
 30182  016374  C944  F08F         	movff	_C+69,calc_model_data@bcror+1	;volatile
 30183  016378  C945  F090         	movff	_C+70,calc_model_data@bcror+2	;volatile
 30184  01637C  C946  F091         	movff	_C+71,calc_model_data@bcror+3	;volatile
 30185                           
 30186                           ;mbmc.c: 77:   C.c_pv = C.calc[C_PV];
 30187  016380  EE22  F103         	lfsr	2,_C+4	;volatile
 30188  016384  006F FF78  F947    	movff	postinc2,_C+72	;volatile
 30189  01638A  006F FF78  F948    	movff	postinc2,_C+73	;volatile
 30190  016390  006F FF78  F949    	movff	postinc2,_C+74	;volatile
 30191  016396  006F FF74  F94A    	movff	postdec2,_C+75	;volatile
 30192                           
 30193                           ;mbmc.c: 78:   C.v_bat = C.calc[V_BAT];
 30194  01639C  EE22  F10F         	lfsr	2,_C+16	;volatile
 30195  0163A0  006F FF78  F953    	movff	postinc2,_C+84	;volatile
 30196  0163A6  006F FF78  F954    	movff	postinc2,_C+85	;volatile
 30197  0163AC  006F FF78  F955    	movff	postinc2,_C+86	;volatile
 30198  0163B2  006F FF74  F956    	movff	postdec2,_C+87	;volatile
 30199                           
 30200                           ;mbmc.c: 79:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 30201  0163B8  EE22  F133         	lfsr	2,_C+52	;volatile
 30202  0163BC  006F FF78  F967    	movff	postinc2,_C+104	;volatile
 30203  0163C2  006F FF78  F968    	movff	postinc2,_C+105	;volatile
 30204  0163C8  006F FF78  F969    	movff	postinc2,_C+106	;volatile
 30205  0163CE  006F FF74  F96A    	movff	postdec2,_C+107	;volatile
 30206                           
 30207                           ;mbmc.c: 80:   C.bv_ror = C.v_bat - bvror;
 30208  0163D4  0060  F24B  FFE6   	movff	calc_model_data@bvror,postinc1
 30209  0163DA  0060  F24F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 30210  0163E0  0060  F253  FFE6   	movff	calc_model_data@bvror+2,postinc1
 30211  0163E6  0060  F257  FFE6   	movff	calc_model_data@bvror+3,postinc1
 30212  0163EC  EE22  F153         	lfsr	2,_C+84	;volatile
 30213  0163F0  006F FF7B FFE6     	movff	postinc2,postinc1
 30214  0163F6  006F FF7B FFE6     	movff	postinc2,postinc1
 30215  0163FC  006F FF7B FFE6     	movff	postinc2,postinc1
 30216  016402  006F FF7B FFE6     	movff	postinc2,postinc1
 30217  016408  EC36  F0E4         	call	___flsub	;wreg free
 30218  01640C  0060  F004  F96B   	movff	btemp,_C+108	;volatile
 30219  016412  0060  F008  F96C   	movff	btemp+1,_C+109	;volatile
 30220  016418  0060  F00C  F96D   	movff	btemp+2,_C+110	;volatile
 30221  01641E  0060  F010  F96E   	movff	btemp+3,_C+111	;volatile
 30222                           
 30223                           ;mbmc.c: 81:   bvror = C.v_bat;
 30224  016424  C953  F092         	movff	_C+84,calc_model_data@bvror	;volatile
 30225  016428  C954  F093         	movff	_C+85,calc_model_data@bvror+1	;volatile
 30226  01642C  C955  F094         	movff	_C+86,calc_model_data@bvror+2	;volatile
 30227  016430  C956  F095         	movff	_C+87,calc_model_data@bvror+3	;volatile
 30228                           
 30229                           ;mbmc.c: 82:   C.v_pv = C.calc[V_PV];
 30230  016434  EE22  F113         	lfsr	2,_C+20	;volatile
 30231  016438  006F FF78  F94F    	movff	postinc2,_C+80	;volatile
 30232  01643E  006F FF78  F950    	movff	postinc2,_C+81	;volatile
 30233  016444  006F FF78  F951    	movff	postinc2,_C+82	;volatile
 30234  01644A  006F FF74  F952    	movff	postdec2,_C+83	;volatile
 30235                           
 30236                           ;mbmc.c: 83:   C.v_cc = C.calc[V_CC];
 30237  016450  EE22  F107         	lfsr	2,_C+8	;volatile
 30238  016454  006F FF78  F94B    	movff	postinc2,_C+76	;volatile
 30239  01645A  006F FF78  F94C    	movff	postinc2,_C+77	;volatile
 30240  016460  006F FF78  F94D    	movff	postinc2,_C+78	;volatile
 30241  016466  006F FF74  F94E    	movff	postdec2,_C+79	;volatile
 30242                           
 30243                           ;mbmc.c: 84:   C.v_inverter = C.calc[V_INVERTER];
 30244  01646C  EE22  F12F         	lfsr	2,_C+48	;volatile
 30245  016470  006F FF78  F963    	movff	postinc2,_C+100	;volatile
 30246  016476  006F FF78  F964    	movff	postinc2,_C+101	;volatile
 30247  01647C  006F FF78  F965    	movff	postinc2,_C+102	;volatile
 30248  016482  006F FF74  F966    	movff	postdec2,_C+103	;volatile
 30249                           
 30250                           ;mbmc.c: 85:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 30251  016488  0E01               	movlw	1
 30252  01648A  6EE6               	movwf	postinc1,c
 30253  01648C  0E10               	movlw	16
 30254  01648E  6EE6               	movwf	postinc1,c
 30255  016490  EE22  F0FF         	lfsr	2,_C
 30256  016494  006F FF7B FFE6     	movff	postinc2,postinc1
 30257  01649A  006F FF7B FFE6     	movff	postinc2,postinc1
 30258  0164A0  006F FF7B FFE6     	movff	postinc2,postinc1
 30259  0164A6  006F FF7B FFE6     	movff	postinc2,postinc1
 30260  0164AC  EE22  F103         	lfsr	2,_C+4	;volatile
 30261  0164B0  006F FF7B FFE6     	movff	postinc2,postinc1
 30262  0164B6  006F FF7B FFE6     	movff	postinc2,postinc1
 30263  0164BC  006F FF7B FFE6     	movff	postinc2,postinc1
 30264  0164C2  006F FF7B FFE6     	movff	postinc2,postinc1
 30265  0164C8  EC36  F0E4         	call	___flsub	;wreg free
 30266  0164CC  0060  F007  FFE6   	movff	btemp,postinc1
 30267  0164D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30268  0164D8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30269  0164DE  0060  F013  FFE6   	movff	btemp+3,postinc1
 30270  0164E4  EC8E  F0C8         	call	_lp_filter	;wreg free
 30271  0164E8  0060  F004  F93F   	movff	btemp,_C+64	;volatile
 30272  0164EE  0060  F008  F940   	movff	btemp+1,_C+65	;volatile
 30273  0164F4  0060  F00C  F941   	movff	btemp+2,_C+66	;volatile
 30274  0164FA  0060  F010  F942   	movff	btemp+3,_C+67	;volatile
 30275                           
 30276                           ;mbmc.c: 86:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 30277  016500  0E01               	movlw	1
 30278  016502  6EE6               	movwf	postinc1,c
 30279  016504  0E11               	movlw	17
 30280  016506  6EE6               	movwf	postinc1,c
 30281  016508  EE22  F153         	lfsr	2,_C+84	;volatile
 30282  01650C  006F FF7B FFE6     	movff	postinc2,postinc1
 30283  016512  006F FF7B FFE6     	movff	postinc2,postinc1
 30284  016518  006F FF7B FFE6     	movff	postinc2,postinc1
 30285  01651E  006F FF7B FFE6     	movff	postinc2,postinc1
 30286  016524  EE22  F13F         	lfsr	2,_C+64	;volatile
 30287  016528  006F FF7B FFE6     	movff	postinc2,postinc1
 30288  01652E  006F FF7B FFE6     	movff	postinc2,postinc1
 30289  016534  006F FF7B FFE6     	movff	postinc2,postinc1
 30290  01653A  006F FF7B FFE6     	movff	postinc2,postinc1
 30291  016540  ECED  F09F         	call	___flmul	;wreg free
 30292  016544  0060  F007  FFE6   	movff	btemp,postinc1
 30293  01654A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30294  016550  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30295  016556  0060  F013  FFE6   	movff	btemp+3,postinc1
 30296  01655C  EC8E  F0C8         	call	_lp_filter	;wreg free
 30297  016560  0060  F004  F973   	movff	btemp,_C+116	;volatile
 30298  016566  0060  F008  F974   	movff	btemp+1,_C+117	;volatile
 30299  01656C  0060  F00C  F975   	movff	btemp+2,_C+118	;volatile
 30300  016572  0060  F010  F976   	movff	btemp+3,_C+119	;volatile
 30301                           
 30302                           ;mbmc.c: 87:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 30303  016578  0E01               	movlw	1
 30304  01657A  6EE6               	movwf	postinc1,c
 30305  01657C  0E12               	movlw	18
 30306  01657E  6EE6               	movwf	postinc1,c
 30307  016580  EE22  F14F         	lfsr	2,_C+80	;volatile
 30308  016584  006F FF7B FFE6     	movff	postinc2,postinc1
 30309  01658A  006F FF7B FFE6     	movff	postinc2,postinc1
 30310  016590  006F FF7B FFE6     	movff	postinc2,postinc1
 30311  016596  006F FF7B FFE6     	movff	postinc2,postinc1
 30312  01659C  EE22  F147         	lfsr	2,_C+72	;volatile
 30313  0165A0  006F FF7B FFE6     	movff	postinc2,postinc1
 30314  0165A6  006F FF7B FFE6     	movff	postinc2,postinc1
 30315  0165AC  006F FF7B FFE6     	movff	postinc2,postinc1
 30316  0165B2  006F FF7B FFE6     	movff	postinc2,postinc1
 30317  0165B8  ECED  F09F         	call	___flmul	;wreg free
 30318  0165BC  0060  F007  FFE6   	movff	btemp,postinc1
 30319  0165C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30320  0165C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30321  0165CE  0060  F013  FFE6   	movff	btemp+3,postinc1
 30322  0165D4  EC8E  F0C8         	call	_lp_filter	;wreg free
 30323  0165D8  0060  F004  F97B   	movff	btemp,_C+124	;volatile
 30324  0165DE  0060  F008  F97C   	movff	btemp+1,_C+125	;volatile
 30325  0165E4  0060  F00C  F97D   	movff	btemp+2,_C+126	;volatile
 30326  0165EA  0060  F010  F97E   	movff	btemp+3,_C+127	;volatile
 30327                           
 30328                           ;mbmc.c: 88:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 30329  0165F0  0E01               	movlw	1
 30330  0165F2  6EE6               	movwf	postinc1,c
 30331  0165F4  0E13               	movlw	19
 30332  0165F6  6EE6               	movwf	postinc1,c
 30333  0165F8  0E00               	movlw	0
 30334  0165FA  6EE6               	movwf	postinc1,c
 30335  0165FC  0E00               	movlw	0
 30336  0165FE  6EE6               	movwf	postinc1,c
 30337  016600  0E60               	movlw	96
 30338  016602  6EE6               	movwf	postinc1,c
 30339  016604  0EC1               	movlw	193
 30340  016606  6EE6               	movwf	postinc1,c
 30341  016608  EE22  F163         	lfsr	2,_C+100	;volatile
 30342  01660C  006F FF7B FFE6     	movff	postinc2,postinc1
 30343  016612  006F FF7B FFE6     	movff	postinc2,postinc1
 30344  016618  006F FF7B FFE6     	movff	postinc2,postinc1
 30345  01661E  006F FF7B FFE6     	movff	postinc2,postinc1
 30346  016624  EE22  F13F         	lfsr	2,_C+64	;volatile
 30347  016628  006F FF7B FFE6     	movff	postinc2,postinc1
 30348  01662E  006F FF7B FFE6     	movff	postinc2,postinc1
 30349  016634  006F FF7B FFE6     	movff	postinc2,postinc1
 30350  01663A  006F FF7B FFE6     	movff	postinc2,postinc1
 30351  016640  ECED  F09F         	call	___flmul	;wreg free
 30352  016644  0060  F007  FFE6   	movff	btemp,postinc1
 30353  01664A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30354  016650  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30355  016656  0060  F013  FFE6   	movff	btemp+3,postinc1
 30356  01665C  EC02  F0A4         	call	___fladd	;wreg free
 30357  016660  0060  F007  FFE6   	movff	btemp,postinc1
 30358  016666  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30359  01666C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30360  016672  0060  F013  FFE6   	movff	btemp+3,postinc1
 30361  016678  EC8E  F0C8         	call	_lp_filter	;wreg free
 30362  01667C  0060  F004  F977   	movff	btemp,_C+120	;volatile
 30363  016682  0060  F008  F978   	movff	btemp+1,_C+121	;volatile
 30364  016688  0060  F00C  F979   	movff	btemp+2,_C+122	;volatile
 30365  01668E  0060  F010  F97A   	movff	btemp+3,_C+123	;volatile
 30366                           
 30367                           ;mbmc.c: 89:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 30368  016694  0E01               	movlw	1
 30369  016696  6EE6               	movwf	postinc1,c
 30370  016698  0E14               	movlw	20
 30371  01669A  6EE6               	movwf	postinc1,c
 30372  01669C  EE22  F153         	lfsr	2,_C+84	;volatile
 30373  0166A0  006F FF7B FFE6     	movff	postinc2,postinc1
 30374  0166A6  006F FF7B FFE6     	movff	postinc2,postinc1
 30375  0166AC  006F FF7B FFE6     	movff	postinc2,postinc1
 30376  0166B2  006F FF7B FFE6     	movff	postinc2,postinc1
 30377  0166B8  EE22  F143         	lfsr	2,_C+68	;volatile
 30378  0166BC  006F FF7B FFE6     	movff	postinc2,postinc1
 30379  0166C2  006F FF7B FFE6     	movff	postinc2,postinc1
 30380  0166C8  006F FF7B FFE6     	movff	postinc2,postinc1
 30381  0166CE  006F FF7B FFE6     	movff	postinc2,postinc1
 30382  0166D4  ECED  F09F         	call	___flmul	;wreg free
 30383  0166D8  0060  F007  FFE6   	movff	btemp,postinc1
 30384  0166DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30385  0166E4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30386  0166EA  0060  F013  FFE6   	movff	btemp+3,postinc1
 30387  0166F0  EC8E  F0C8         	call	_lp_filter	;wreg free
 30388  0166F4  0060  F004  F97F   	movff	btemp,_C+128	;volatile
 30389  0166FA  0060  F008  F980   	movff	btemp+1,_C+129	;volatile
 30390  016700  0060  F00C  F981   	movff	btemp+2,_C+130	;volatile
 30391  016706  0060  F010  F982   	movff	btemp+3,_C+131	;volatile
 30392                           
 30393                           ;mbmc.c: 93:   if (C.p_inverter < 0.0)
 30394  01670C  EE22  F177         	lfsr	2,_C+120	;volatile
 30395  016710  0E03               	movlw	3
 30396  016712  AEDB               	btfss	plusw2,7,c
 30397  016714  D010               	goto	l12300
 30398                           
 30399                           ;mbmc.c: 94:    C.p_inverter = 0.0001;
 30400  016716  0E17               	movlw	23
 30401  016718  006F FFA0  F977    	movff	wreg,_C+120	;volatile
 30402  01671E  0EB7               	movlw	183
 30403  016720  006F FFA0  F978    	movff	wreg,_C+121	;volatile
 30404  016726  0ED1               	movlw	209
 30405  016728  006F FFA0  F979    	movff	wreg,_C+122	;volatile
 30406  01672E  0E38               	movlw	56
 30407  016730  006F FFA0  F97A    	movff	wreg,_C+123	;volatile
 30408  016736                     l12300:
 30409                           
 30410                           ;mbmc.c: 96:  start_bsoc();
 30411  016736  EC10  F0E9         	call	_start_bsoc	;wreg free
 30412                           
 30413                           ; BSR set to: 57
 30414                           ;mbmc.c: 97:  C.update = 1;
 30415  01673A  0E01               	movlw	1
 30416  01673C  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 30417                           
 30418                           ; BSR set to: 57
 30419                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30420  016742  0012               	return		;funcret
 30421  016744                     __end_of_calc_model_data:
 30422                           	opt callstack 0
 30423                           
 30424 ;; *************** function _stop_bsoc *****************
 30425 ;; Defined at:
 30426 ;;		line 130 in file "bsoc.c"
 30427 ;; Parameters:    Size  Location     Type
 30428 ;;		None
 30429 ;; Auto vars:     Size  Location     Type
 30430 ;;		None
 30431 ;; Return value:  Size  Location     Type
 30432 ;;                  1  [STACK] void 
 30433 ;; Registers used:
 30434 ;;		None
 30435 ;; Tracked objects:
 30436 ;;		On entry : 0/39
 30437 ;;		On exit  : 3F/39
 30438 ;;		Unchanged: 0/0
 30439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30444 ;;Total ram usage:        0 bytes
 30445 ;; Hardware stack levels used:    1
 30446 ;; Hardware stack levels required when called:   15
 30447 ;; This function calls:
 30448 ;;		Nothing
 30449 ;; This function is called by:
 30450 ;;		_calc_model_data
 30451 ;;		_load_hist_data
 30452 ;; This function uses a reentrant model
 30453 ;;
 30454                           
 30455                           	psect	text123
 30456  01D52C                     __ptext123:
 30457                           	opt callstack 0
 30458  01D52C                     _stop_bsoc:
 30459                           	opt callstack 14
 30460                           
 30461                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 30462                           
 30463                           ; BSR set to: 57
 30464                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30465                           ;incstack = 0
 30466  01D52C  0139               	movlb	57	; () banked
 30467  01D52E  9D96               	bcf	150,6,b	;volatile
 30468                           
 30469                           ; BSR set to: 57
 30470                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 30471  01D530  0012               	return		;funcret
 30472  01D532                     __end_of_stop_bsoc:
 30473                           	opt callstack 0
 30474                           
 30475 ;; *************** function _start_bsoc *****************
 30476 ;; Defined at:
 30477 ;;		line 121 in file "bsoc.c"
 30478 ;; Parameters:    Size  Location     Type
 30479 ;;		None
 30480 ;; Auto vars:     Size  Location     Type
 30481 ;;		None
 30482 ;; Return value:  Size  Location     Type
 30483 ;;                  1  [STACK] void 
 30484 ;; Registers used:
 30485 ;;		wreg, status,2, status,0, btemp+11
 30486 ;; Tracked objects:
 30487 ;;		On entry : 0/39
 30488 ;;		On exit  : 3F/39
 30489 ;;		Unchanged: 0/0
 30490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30495 ;;Total ram usage:        0 bytes
 30496 ;; Hardware stack levels used:    1
 30497 ;; Hardware stack levels required when called:   15
 30498 ;; This function calls:
 30499 ;;		Nothing
 30500 ;; This function is called by:
 30501 ;;		_calc_model_data
 30502 ;;		_load_hist_data
 30503 ;; This function uses a reentrant model
 30504 ;;
 30505                           
 30506                           	psect	text124
 30507  01D220                     __ptext124:
 30508                           	opt callstack 0
 30509  01D220                     _start_bsoc:
 30510                           	opt callstack 14
 30511                           
 30512                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 30513                           
 30514                           ; BSR set to: 57
 30515                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30516                           ;incstack = 0
 30517  01D220  0139               	movlb	57	; () banked
 30518  01D222  8D96               	bsf	150,6,b	;volatile
 30519                           
 30520                           ; BSR set to: 57
 30521  01D224  A4BE               	btfss	190,2,c	;volatile
 30522  01D226  D002               	goto	u10520
 30523  01D228  0E01               	movlw	1
 30524  01D22A  D001               	goto	u10526
 30525  01D22C                     u10520:
 30526  01D22C  0E00               	movlw	0
 30527  01D22E                     u10526:
 30528  01D22E  0AFF               	xorlw	255
 30529  01D230  6E0C               	movwf	(btemp+11)^0,c
 30530  01D232  460C               	rlncf	(btemp+11)^0,f,c
 30531  01D234  460C               	rlncf	(btemp+11)^0,f,c
 30532  01D236  50BE               	movf	190,w,c	;volatile
 30533  01D238  180C               	xorwf	(btemp+11)^0,w,c
 30534  01D23A  0BFB               	andlw	-5
 30535  01D23C  180C               	xorwf	(btemp+11)^0,w,c
 30536  01D23E  6EBE               	movwf	190,c	;volatile
 30537                           
 30538                           ; BSR set to: 57
 30539                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 30540  01D240  0012               	return		;funcret
 30541  01D242                     __end_of_start_bsoc:
 30542                           	opt callstack 0
 30543                           
 30544 ;; *************** function _lp_filter *****************
 30545 ;; Defined at:
 30546 ;;		line 29 in file "mbmc.c"
 30547 ;; Parameters:    Size  Location     Type
 30548 ;;  new             4  [STACK] const float 
 30549 ;;  bn              1  [STACK] const unsigned char 
 30550 ;;  slow            1  [STACK] const char 
 30551 ;; Auto vars:     Size  Location     Type
 30552 ;;  lp_speed        4  [STACK] float 
 30553 ;; Return value:  Size  Location     Type
 30554 ;;                  4  [STACK] float 
 30555 ;; Registers used:
 30556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 30557 ;; Tracked objects:
 30558 ;;		On entry : 0/1
 30559 ;;		On exit  : 0/0
 30560 ;;		Unchanged: 0/0
 30561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30566 ;;Total ram usage:        0 bytes
 30567 ;; Hardware stack levels used:    1
 30568 ;; Hardware stack levels required when called:   17
 30569 ;; This function calls:
 30570 ;;		___fladd
 30571 ;;		___flmul
 30572 ;;		___flsub
 30573 ;; This function is called by:
 30574 ;;		_main
 30575 ;;		_convert_adc_data
 30576 ;;		_calc_model_data
 30577 ;; This function uses a reentrant model
 30578 ;;
 30579                           
 30580                           	psect	text125
 30581  01911C                     __ptext125:
 30582                           	opt callstack 0
 30583  01911C                     _lp_filter:
 30584                           	opt callstack 0
 30585                           
 30586                           ; BSR set to: 57
 30587                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30588  01911C  52E6               	movf	postinc1,f,c
 30589  01911E  52E6               	movf	postinc1,f,c
 30590  019120  52E6               	movf	postinc1,f,c
 30591  019122  52E6               	movf	postinc1,f,c
 30592                           
 30593                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 30594                           ;stkvar	_bn @ sp[(-4)+-5]
 30595                           
 30596                           ;incstack = 0
 30597  019124  0EF7               	movlw	-9
 30598  019126  006F FF8C  F001    	movff	plusw1,btemp
 30599  01912C  0E14               	movlw	20
 30600  01912E  6401               	cpfsgt	btemp^0,c
 30601  019130  D011               	goto	l11424
 30602  019132                     u10350:
 30603                           
 30604                           ;mbmc.c: 35:   return new;
 30605                           ;stkvar	_new @ sp[(-4)+-4]
 30606  019132  0EF8               	movlw	-8
 30607  019134  006F FF8C  F001    	movff	plusw1,btemp
 30608  01913A  0EF9               	movlw	-7
 30609  01913C  006F FF8C  F002    	movff	plusw1,btemp+1
 30610  019142  0EFA               	movlw	-6
 30611  019144  006F FF8C  F003    	movff	plusw1,btemp+2
 30612  01914A  0EFB               	movlw	-5
 30613  01914C  006F FF8C  F004    	movff	plusw1,btemp+3
 30614  019152  D0BD               	goto	l2103
 30615  019154                     l11424:
 30616                           
 30617                           ;mbmc.c: 37:  if (slow == (-1)) {
 30618                           ;stkvar	_slow @ sp[(-4)+-6]
 30619  019154  0EF6               	movlw	-10
 30620  019156  28E3               	incf	plusw1,w,c
 30621  019158  A4D8               	btfss	status,2,c
 30622  01915A  D012               	goto	l11432
 30623                           
 30624                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 30625                           ;stkvar	_bn @ sp[(-4)+-5]
 30626  01915C  0EF7               	movlw	-9
 30627  01915E  50E3               	movf	plusw1,w,c
 30628  019160  0D04               	mullw	4
 30629  019162  0E00               	movlw	low lp_filter@smooth
 30630  019164  24F3               	addwf	243,w,c
 30631  019166  6ED9               	movwf	fsr2l,c
 30632  019168  0E03               	movlw	high lp_filter@smooth
 30633  01916A  20F4               	addwfc	prodh,w,c
 30634  01916C  6EDA               	movwf	fsr2h,c
 30635  01916E  0E00               	movlw	0
 30636  019170  6EDE               	movwf	postinc2,c
 30637  019172  0E00               	movlw	0
 30638  019174  6EDE               	movwf	postinc2,c
 30639  019176  0E00               	movlw	0
 30640  019178  6EDE               	movwf	postinc2,c
 30641  01917A  0E00               	movlw	0
 30642  01917C  6EDD               	movwf	postdec2,c
 30643  01917E  D7D9               	goto	u10350
 30644  019180                     l11432:
 30645                           
 30646                           ;mbmc.c: 42:  if (slow) {
 30647                           ;stkvar	_slow @ sp[(-4)+-6]
 30648  019180  0EF6               	movlw	-10
 30649  019182  50E3               	movf	plusw1,w,c
 30650  019184  B4D8               	btfsc	status,2,c
 30651  019186  D006               	goto	l11436
 30652                           
 30653                           ;mbmc.c: 43:   lp_speed = 0.033;
 30654  019188  0E02               	movlw	2
 30655  01918A  6E09               	movwf	(btemp+8)^0,c
 30656  01918C  0E2B               	movlw	43
 30657  01918E  6E0A               	movwf	(btemp+9)^0,c
 30658  019190  0E07               	movlw	7
 30659  019192  D005               	goto	L36
 30660  019194                     l11436:
 30661                           
 30662                           ;mbmc.c: 45:   lp_speed = 0.066;
 30663  019194  0E02               	movlw	2
 30664  019196  6E09               	movwf	(btemp+8)^0,c
 30665  019198  0E2B               	movlw	43
 30666  01919A  6E0A               	movwf	(btemp+9)^0,c
 30667  01919C  0E87               	movlw	135
 30668  01919E                     L36:
 30669  01919E  6E0B               	movwf	(btemp+10)^0,c
 30670  0191A0  0E3D               	movlw	61
 30671  0191A2  6E0C               	movwf	(btemp+11)^0,c
 30672                           
 30673                           ;stkvar	_lp_speed @ sp[(-4)+0]
 30674  0191A4  0EFC               	movlw	-4
 30675  0191A6  0060  F027  FFE3   	movff	btemp+8,plusw1
 30676  0191AC  0EFD               	movlw	-3
 30677  0191AE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30678  0191B4  0EFE               	movlw	-2
 30679  0191B6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30680  0191BC  0EFF               	movlw	-1
 30681  0191BE  0060  F033  FFE3   	movff	btemp+11,plusw1
 30682                           
 30683                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 30684                           ;stkvar	_bn @ sp[(-4)+-5]
 30685  0191C4  0EF7               	movlw	-9
 30686  0191C6  50E3               	movf	plusw1,w,c
 30687  0191C8  0D04               	mullw	4
 30688  0191CA  0E00               	movlw	low lp_filter@smooth
 30689  0191CC  24F3               	addwf	243,w,c
 30690  0191CE  6ED9               	movwf	fsr2l,c
 30691  0191D0  0E03               	movlw	high lp_filter@smooth
 30692  0191D2  20F4               	addwfc	prodh,w,c
 30693  0191D4  6EDA               	movwf	fsr2h,c
 30694  0191D6  006F FF7B FFE6     	movff	postinc2,postinc1
 30695  0191DC  006F FF7B FFE6     	movff	postinc2,postinc1
 30696  0191E2  006F FF7B FFE6     	movff	postinc2,postinc1
 30697  0191E8  006F FF7B FFE6     	movff	postinc2,postinc1
 30698                           
 30699                           ;stkvar	_lp_speed @ sp[(-8)+0]
 30700  0191EE  0EF8               	movlw	-8
 30701  0191F0  006F FF8F FFE6     	movff	plusw1,postinc1
 30702  0191F6  006F FF8F FFE6     	movff	plusw1,postinc1
 30703  0191FC  006F FF8F FFE6     	movff	plusw1,postinc1
 30704  019202  006F FF8F FFE6     	movff	plusw1,postinc1
 30705                           
 30706                           ;stkvar	_bn @ sp[(-12)+-5]
 30707  019208  0EEF               	movlw	-17
 30708  01920A  50E3               	movf	plusw1,w,c
 30709  01920C  0D04               	mullw	4
 30710  01920E  0E00               	movlw	low lp_filter@smooth
 30711  019210  24F3               	addwf	243,w,c
 30712  019212  6ED9               	movwf	fsr2l,c
 30713  019214  0E03               	movlw	high lp_filter@smooth
 30714  019216  20F4               	addwfc	prodh,w,c
 30715  019218  6EDA               	movwf	fsr2h,c
 30716  01921A  006F FF7B FFE6     	movff	postinc2,postinc1
 30717  019220  006F FF7B FFE6     	movff	postinc2,postinc1
 30718  019226  006F FF7B FFE6     	movff	postinc2,postinc1
 30719  01922C  006F FF7B FFE6     	movff	postinc2,postinc1
 30720                           
 30721                           ;stkvar	_new @ sp[(-16)+-4]
 30722  019232  0EEC               	movlw	-20
 30723  019234  006F FF8F FFE6     	movff	plusw1,postinc1
 30724  01923A  006F FF8F FFE6     	movff	plusw1,postinc1
 30725  019240  006F FF8F FFE6     	movff	plusw1,postinc1
 30726  019246  006F FF8F FFE6     	movff	plusw1,postinc1
 30727  01924C  EC36  F0E4         	call	___flsub	;wreg free
 30728  019250  0060  F007  FFE6   	movff	btemp,postinc1
 30729  019256  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30730  01925C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30731  019262  0060  F013  FFE6   	movff	btemp+3,postinc1
 30732  019268  ECED  F09F         	call	___flmul	;wreg free
 30733  01926C  0060  F007  FFE6   	movff	btemp,postinc1
 30734  019272  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30735  019278  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30736  01927E  0060  F013  FFE6   	movff	btemp+3,postinc1
 30737  019284  EC02  F0A4         	call	___fladd	;wreg free
 30738                           
 30739                           ;stkvar	_bn @ sp[(-4)+-5]
 30740  019288  0EF7               	movlw	-9
 30741  01928A  50E3               	movf	plusw1,w,c
 30742  01928C  0D04               	mullw	4
 30743  01928E  0E00               	movlw	low lp_filter@smooth
 30744  019290  24F3               	addwf	243,w,c
 30745  019292  6ED9               	movwf	fsr2l,c
 30746  019294  0E03               	movlw	high lp_filter@smooth
 30747  019296  20F4               	addwfc	prodh,w,c
 30748  019298  6EDA               	movwf	fsr2h,c
 30749  01929A  0060  F007  FFDE   	movff	btemp,postinc2
 30750  0192A0  0060  F00B  FFDE   	movff	btemp+1,postinc2
 30751  0192A6  0060  F00F  FFDE   	movff	btemp+2,postinc2
 30752  0192AC  0060  F013  FFDD   	movff	btemp+3,postdec2
 30753  0192B2  52DD               	movf	postdec2,f,c
 30754  0192B4  52DD               	movf	postdec2,f,c
 30755  0192B6  006F FF78  F001    	movff	postinc2,btemp
 30756  0192BC  006F FF78  F002    	movff	postinc2,btemp+1
 30757  0192C2  006F FF78  F003    	movff	postinc2,btemp+2
 30758  0192C8  006F FF78  F004    	movff	postinc2,btemp+3
 30759  0192CE                     l2103:
 30760                           
 30761                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 30762  0192CE  0EF6               	movlw	246
 30763  0192D0  26E1               	addwf	fsr1l,f,c
 30764  0192D2  0EFF               	movlw	255
 30765  0192D4  22E2               	addwfc	fsr1h,f,c
 30766  0192D6  0012               	return		;funcret
 30767  0192D8                     __end_of_lp_filter:
 30768                           	opt callstack 0
 30769                           
 30770 ;; *************** function ___flsub *****************
 30771 ;; Defined at:
 30772 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 30773 ;; Parameters:    Size  Location     Type
 30774 ;;  b               4  [STACK] float 
 30775 ;;  a               4  [STACK] float 
 30776 ;; Auto vars:     Size  Location     Type
 30777 ;;		None
 30778 ;; Return value:  Size  Location     Type
 30779 ;;                  4  [STACK] float 
 30780 ;; Registers used:
 30781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 30782 ;; Tracked objects:
 30783 ;;		On entry : 0/0
 30784 ;;		On exit  : 0/0
 30785 ;;		Unchanged: 0/0
 30786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30791 ;;Total ram usage:        0 bytes
 30792 ;; Hardware stack levels used:    1
 30793 ;; Hardware stack levels required when called:   16
 30794 ;; This function calls:
 30795 ;;		___fladd
 30796 ;; This function is called by:
 30797 ;;		_conv_raw_result
 30798 ;;		_lp_filter
 30799 ;;		_calc_model_data
 30800 ;;		_calc_ror_data
 30801 ;;		_esr_check
 30802 ;;		_efgtoa
 30803 ;; This function uses a reentrant model
 30804 ;;
 30805                           
 30806                           	psect	text126
 30807  01C86C                     __ptext126:
 30808                           	opt callstack 0
 30809  01C86C                     ___flsub:
 30810                           	opt callstack 0
 30811                           
 30812                           ;stkvar	_a @ sp[(0)+-8]
 30813                           
 30814                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30815                           ;incstack = 0
 30816 ;; hardware stack exceeded
 30817  01C86C  0EFB               	movlw	-5
 30818  01C86E  7EE3               	btg	plusw1,7,c
 30819                           
 30820                           ;stkvar	_a @ sp[(0)+-8]
 30821  01C870  0EF8               	movlw	-8
 30822  01C872  006F FF8F FFE6     	movff	plusw1,postinc1
 30823  01C878  006F FF8F FFE6     	movff	plusw1,postinc1
 30824  01C87E  006F FF8F FFE6     	movff	plusw1,postinc1
 30825  01C884  006F FF8F FFE6     	movff	plusw1,postinc1
 30826                           
 30827                           ;stkvar	_b @ sp[(-4)+-4]
 30828  01C88A  0EF8               	movlw	-8
 30829  01C88C  006F FF8F FFE6     	movff	plusw1,postinc1
 30830  01C892  006F FF8F FFE6     	movff	plusw1,postinc1
 30831  01C898  006F FF8F FFE6     	movff	plusw1,postinc1
 30832  01C89E  006F FF8F FFE6     	movff	plusw1,postinc1
 30833  01C8A4  EC02  F0A4         	call	___fladd	;wreg free
 30834                           
 30835                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 30836  01C8A8  0EF8               	movlw	248
 30837  01C8AA  26E1               	addwf	fsr1l,f,c
 30838  01C8AC  0EFF               	movlw	255
 30839  01C8AE  22E2               	addwfc	fsr1h,f,c
 30840  01C8B0  0012               	return		;funcret
 30841  01C8B2                     __end_of___flsub:
 30842                           	opt callstack 0
 30843                           
 30844 ;; *************** function ___fladd *****************
 30845 ;; Defined at:
 30846 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 30847 ;; Parameters:    Size  Location     Type
 30848 ;;  b               4  [STACK] float 
 30849 ;;  a               4  [STACK] float 
 30850 ;; Auto vars:     Size  Location     Type
 30851 ;;  grs             1  [STACK] unsigned char 
 30852 ;;  bexp            1  [STACK] unsigned char 
 30853 ;;  aexp            1  [STACK] unsigned char 
 30854 ;;  signs           1  [STACK] unsigned char 
 30855 ;; Return value:  Size  Location     Type
 30856 ;;                  4  [STACK] unsigned char 
 30857 ;; Registers used:
 30858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 30859 ;; Tracked objects:
 30860 ;;		On entry : 0/0
 30861 ;;		On exit  : 0/0
 30862 ;;		Unchanged: 0/0
 30863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30868 ;;Total ram usage:        0 bytes
 30869 ;; Hardware stack levels used:    1
 30870 ;; Hardware stack levels required when called:   15
 30871 ;; This function calls:
 30872 ;;		Nothing
 30873 ;; This function is called by:
 30874 ;;		_main
 30875 ;;		_lp_filter
 30876 ;;		_calc_model_data
 30877 ;;		_efgtoa
 30878 ;;		___asfladd
 30879 ;;		___flsub
 30880 ;; This function uses a reentrant model
 30881 ;;
 30882                           
 30883                           	psect	text127
 30884  014804                     __ptext127:
 30885                           	opt callstack 0
 30886  014804                     ___fladd:
 30887                           	opt callstack 0
 30888                           
 30889                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30890  014804  52E6               	movf	postinc1,f,c
 30891  014806  52E6               	movf	postinc1,f,c
 30892  014808  52E6               	movf	postinc1,f,c
 30893  01480A  52E6               	movf	postinc1,f,c
 30894                           
 30895                           ;stkvar	_b @ sp[(-4)+-4]
 30896                           
 30897                           ;incstack = 0
 30898 ;; hardware stack exceeded
 30899  01480C  0EFB               	movlw	251
 30900  01480E  24E1               	addwf	fsr1l,w,c
 30901  014810  6ED9               	movwf	fsr2l,c
 30902  014812  0EFF               	movlw	255
 30903  014814  20E2               	addwfc	fsr1h,w,c
 30904  014816  6EDA               	movwf	fsr2h,c
 30905  014818  50DF               	movf	indf2,w,c
 30906  01481A  6E0C               	movwf	(btemp+11)^0,c
 30907  01481C  0E80               	movlw	128
 30908  01481E  160C               	andwf	(btemp+11)^0,f,c
 30909                           
 30910                           ;stkvar	_signs @ sp[(-4)+3]
 30911  014820  0EFF               	movlw	-1
 30912  014822  0060  F033  FFE3   	movff	btemp+11,plusw1
 30913                           
 30914                           ;stkvar	_b @ sp[(-4)+-4]
 30915  014828  0EFB               	movlw	251
 30916  01482A  24E1               	addwf	fsr1l,w,c
 30917  01482C  6ED9               	movwf	fsr2l,c
 30918  01482E  0EFF               	movlw	255
 30919  014830  20E2               	addwfc	fsr1h,w,c
 30920  014832  6EDA               	movwf	fsr2h,c
 30921  014834  50DF               	movf	indf2,w,c
 30922  014836  6E0C               	movwf	(btemp+11)^0,c
 30923  014838  90D8               	bcf	status,0,c
 30924  01483A  340C               	rlcf	(btemp+11)^0,w,c
 30925  01483C  6E0B               	movwf	(btemp+10)^0,c
 30926                           
 30927                           ;stkvar	_bexp @ sp[(-4)+1]
 30928  01483E  0EFD               	movlw	-3
 30929  014840  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30930                           
 30931                           ;stkvar	_b @ sp[(-4)+-4]
 30932  014846  0EFA               	movlw	250
 30933  014848  24E1               	addwf	fsr1l,w,c
 30934  01484A  6ED9               	movwf	fsr2l,c
 30935  01484C  0EFF               	movlw	255
 30936  01484E  20E2               	addwfc	fsr1h,w,c
 30937  014850  6EDA               	movwf	fsr2h,c
 30938  014852  AEDF               	btfss	indf2,7,c
 30939  014854  D002               	goto	l8528
 30940                           
 30941                           ;stkvar	_bexp @ sp[(-4)+1]
 30942  014856  0EFD               	movlw	-3
 30943  014858  80E3               	bsf	plusw1,0,c
 30944  01485A                     l8528:
 30945                           
 30946                           ;stkvar	_bexp @ sp[(-4)+1]
 30947  01485A  0EFD               	movlw	-3
 30948  01485C  50E3               	movf	plusw1,w,c
 30949  01485E  B4D8               	btfsc	status,2,c
 30950  014860  D027               	goto	l8538
 30951                           
 30952                           ;stkvar	_bexp @ sp[(-4)+1]
 30953  014862  0EFD               	movlw	-3
 30954  014864  28E3               	incf	plusw1,w,c
 30955  014866  A4D8               	btfss	status,2,c
 30956  014868  D018               	goto	l8534
 30957  01486A  0E00               	movlw	0
 30958  01486C  6E09               	movwf	(btemp+8)^0,c
 30959  01486E  0E00               	movlw	0
 30960  014870  6E0A               	movwf	(btemp+9)^0,c
 30961  014872  0E00               	movlw	0
 30962  014874  6E0B               	movwf	(btemp+10)^0,c
 30963  014876  0E00               	movlw	0
 30964  014878  6E0C               	movwf	(btemp+11)^0,c
 30965                           
 30966                           ;stkvar	_b @ sp[(-4)+-4]
 30967  01487A  0EF8               	movlw	-8
 30968  01487C  0060  F027  FFE3   	movff	btemp+8,plusw1
 30969  014882  0EF9               	movlw	-7
 30970  014884  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30971  01488A  0EFA               	movlw	-6
 30972  01488C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30973  014892  0EFB               	movlw	-5
 30974  014894  0060  F033  FFE3   	movff	btemp+11,plusw1
 30975  01489A                     l8534:
 30976                           
 30977                           ;stkvar	_b @ sp[(-4)+-4]
 30978  01489A  0EFA               	movlw	-6
 30979  01489C  8EE3               	bsf	plusw1,7,c
 30980                           
 30981                           ;stkvar	_b @ sp[(-4)+-4]
 30982  01489E  0EFB               	movlw	251
 30983  0148A0  24E1               	addwf	fsr1l,w,c
 30984  0148A2  6ED9               	movwf	fsr2l,c
 30985  0148A4  0EFF               	movlw	255
 30986  0148A6  20E2               	addwfc	fsr1h,w,c
 30987  0148A8  6EDA               	movwf	fsr2h,c
 30988  0148AA  0E00               	movlw	0
 30989  0148AC  6EDF               	movwf	indf2,c
 30990  0148AE  D018               	goto	l8540
 30991  0148B0                     l8538:
 30992  0148B0  0E00               	movlw	0
 30993  0148B2  6E09               	movwf	(btemp+8)^0,c
 30994  0148B4  0E00               	movlw	0
 30995  0148B6  6E0A               	movwf	(btemp+9)^0,c
 30996  0148B8  0E00               	movlw	0
 30997  0148BA  6E0B               	movwf	(btemp+10)^0,c
 30998  0148BC  0E00               	movlw	0
 30999  0148BE  6E0C               	movwf	(btemp+11)^0,c
 31000                           
 31001                           ;stkvar	_b @ sp[(-4)+-4]
 31002  0148C0  0EF8               	movlw	-8
 31003  0148C2  0060  F027  FFE3   	movff	btemp+8,plusw1
 31004  0148C8  0EF9               	movlw	-7
 31005  0148CA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31006  0148D0  0EFA               	movlw	-6
 31007  0148D2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31008  0148D8  0EFB               	movlw	-5
 31009  0148DA  0060  F033  FFE3   	movff	btemp+11,plusw1
 31010  0148E0                     l8540:
 31011                           
 31012                           ;stkvar	_a @ sp[(-4)+-8]
 31013  0148E0  0EF7               	movlw	247
 31014  0148E2  24E1               	addwf	fsr1l,w,c
 31015  0148E4  6ED9               	movwf	fsr2l,c
 31016  0148E6  0EFF               	movlw	255
 31017  0148E8  20E2               	addwfc	fsr1h,w,c
 31018  0148EA  6EDA               	movwf	fsr2h,c
 31019  0148EC  50DF               	movf	indf2,w,c
 31020  0148EE  6E0C               	movwf	(btemp+11)^0,c
 31021  0148F0  0E80               	movlw	128
 31022  0148F2  160C               	andwf	(btemp+11)^0,f,c
 31023                           
 31024                           ;stkvar	_aexp @ sp[(-4)+2]
 31025  0148F4  0EFE               	movlw	-2
 31026  0148F6  0060  F033  FFE3   	movff	btemp+11,plusw1
 31027                           
 31028                           ;stkvar	_signs @ sp[(-4)+3]
 31029                           ;stkvar	_aexp @ sp[(-4)+2]
 31030  0148FC  50E1               	movf	fsr1l,w,c
 31031  0148FE  0FFE               	addlw	-2
 31032  014900  6ED9               	movwf	fsr2l,c
 31033  014902  50E2               	movf	fsr1h,w,c
 31034  014904  6EDA               	movwf	fsr2h,c
 31035  014906  0EFF               	movlw	255
 31036  014908  22DA               	addwfc	fsr2h,f,c
 31037  01490A  0EFF               	movlw	-1
 31038  01490C  50E3               	movf	plusw1,w,c
 31039  01490E  18DE               	xorwf	postinc2,w,c
 31040  014910  B4D8               	btfsc	status,2,c
 31041  014912  D002               	goto	l8546
 31042                           
 31043                           ;stkvar	_signs @ sp[(-4)+3]
 31044  014914  0EFF               	movlw	-1
 31045  014916  8CE3               	bsf	plusw1,6,c
 31046  014918                     l8546:
 31047                           
 31048                           ;stkvar	_a @ sp[(-4)+-8]
 31049  014918  0EF7               	movlw	247
 31050  01491A  24E1               	addwf	fsr1l,w,c
 31051  01491C  6ED9               	movwf	fsr2l,c
 31052  01491E  0EFF               	movlw	255
 31053  014920  20E2               	addwfc	fsr1h,w,c
 31054  014922  6EDA               	movwf	fsr2h,c
 31055  014924  50DF               	movf	indf2,w,c
 31056  014926  6E0C               	movwf	(btemp+11)^0,c
 31057  014928  90D8               	bcf	status,0,c
 31058  01492A  340C               	rlcf	(btemp+11)^0,w,c
 31059  01492C  6E0B               	movwf	(btemp+10)^0,c
 31060                           
 31061                           ;stkvar	_aexp @ sp[(-4)+2]
 31062  01492E  0EFE               	movlw	-2
 31063  014930  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31064                           
 31065                           ;stkvar	_a @ sp[(-4)+-8]
 31066  014936  0EF6               	movlw	246
 31067  014938  24E1               	addwf	fsr1l,w,c
 31068  01493A  6ED9               	movwf	fsr2l,c
 31069  01493C  0EFF               	movlw	255
 31070  01493E  20E2               	addwfc	fsr1h,w,c
 31071  014940  6EDA               	movwf	fsr2h,c
 31072  014942  AEDF               	btfss	indf2,7,c
 31073  014944  D002               	goto	l8552
 31074                           
 31075                           ;stkvar	_aexp @ sp[(-4)+2]
 31076  014946  0EFE               	movlw	-2
 31077  014948  80E3               	bsf	plusw1,0,c
 31078  01494A                     l8552:
 31079                           
 31080                           ;stkvar	_aexp @ sp[(-4)+2]
 31081  01494A  0EFE               	movlw	-2
 31082  01494C  50E3               	movf	plusw1,w,c
 31083  01494E  B4D8               	btfsc	status,2,c
 31084  014950  D027               	goto	l8562
 31085                           
 31086                           ;stkvar	_aexp @ sp[(-4)+2]
 31087  014952  0EFE               	movlw	-2
 31088  014954  28E3               	incf	plusw1,w,c
 31089  014956  A4D8               	btfss	status,2,c
 31090  014958  D018               	goto	l8558
 31091  01495A  0E00               	movlw	0
 31092  01495C  6E09               	movwf	(btemp+8)^0,c
 31093  01495E  0E00               	movlw	0
 31094  014960  6E0A               	movwf	(btemp+9)^0,c
 31095  014962  0E00               	movlw	0
 31096  014964  6E0B               	movwf	(btemp+10)^0,c
 31097  014966  0E00               	movlw	0
 31098  014968  6E0C               	movwf	(btemp+11)^0,c
 31099                           
 31100                           ;stkvar	_a @ sp[(-4)+-8]
 31101  01496A  0EF4               	movlw	-12
 31102  01496C  0060  F027  FFE3   	movff	btemp+8,plusw1
 31103  014972  0EF5               	movlw	-11
 31104  014974  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31105  01497A  0EF6               	movlw	-10
 31106  01497C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31107  014982  0EF7               	movlw	-9
 31108  014984  0060  F033  FFE3   	movff	btemp+11,plusw1
 31109  01498A                     l8558:
 31110                           
 31111                           ;stkvar	_a @ sp[(-4)+-8]
 31112  01498A  0EF6               	movlw	-10
 31113  01498C  8EE3               	bsf	plusw1,7,c
 31114                           
 31115                           ;stkvar	_a @ sp[(-4)+-8]
 31116  01498E  0EF7               	movlw	247
 31117  014990  24E1               	addwf	fsr1l,w,c
 31118  014992  6ED9               	movwf	fsr2l,c
 31119  014994  0EFF               	movlw	255
 31120  014996  20E2               	addwfc	fsr1h,w,c
 31121  014998  6EDA               	movwf	fsr2h,c
 31122  01499A  0E00               	movlw	0
 31123  01499C  6EDF               	movwf	indf2,c
 31124  01499E  D018               	goto	l8564
 31125  0149A0                     l8562:
 31126  0149A0  0E00               	movlw	0
 31127  0149A2  6E09               	movwf	(btemp+8)^0,c
 31128  0149A4  0E00               	movlw	0
 31129  0149A6  6E0A               	movwf	(btemp+9)^0,c
 31130  0149A8  0E00               	movlw	0
 31131  0149AA  6E0B               	movwf	(btemp+10)^0,c
 31132  0149AC  0E00               	movlw	0
 31133  0149AE  6E0C               	movwf	(btemp+11)^0,c
 31134                           
 31135                           ;stkvar	_a @ sp[(-4)+-8]
 31136  0149B0  0EF4               	movlw	-12
 31137  0149B2  0060  F027  FFE3   	movff	btemp+8,plusw1
 31138  0149B8  0EF5               	movlw	-11
 31139  0149BA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31140  0149C0  0EF6               	movlw	-10
 31141  0149C2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31142  0149C8  0EF7               	movlw	-9
 31143  0149CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 31144  0149D0                     l8564:
 31145                           
 31146                           ;stkvar	_bexp @ sp[(-4)+1]
 31147                           ;stkvar	_aexp @ sp[(-4)+2]
 31148  0149D0  50E1               	movf	fsr1l,w,c
 31149  0149D2  0FFE               	addlw	-2
 31150  0149D4  6ED9               	movwf	fsr2l,c
 31151  0149D6  50E2               	movf	fsr1h,w,c
 31152  0149D8  6EDA               	movwf	fsr2h,c
 31153  0149DA  0EFF               	movlw	255
 31154  0149DC  22DA               	addwfc	fsr2h,f,c
 31155  0149DE  0EFD               	movlw	-3
 31156  0149E0  50E3               	movf	plusw1,w,c
 31157  0149E2  5CDE               	subwf	postinc2,w,c
 31158  0149E4  B0D8               	btfsc	status,0,c
 31159  0149E6  D0A4               	goto	l8600
 31160                           
 31161                           ;stkvar	_signs @ sp[(-4)+3]
 31162  0149E8  0EFF               	movlw	-1
 31163  0149EA  ACE3               	btfss	plusw1,6,c
 31164  0149EC  D002               	goto	l8570
 31165                           
 31166                           ;stkvar	_signs @ sp[(-4)+3]
 31167  0149EE  0EFF               	movlw	-1
 31168  0149F0  7EE3               	btg	plusw1,7,c
 31169  0149F2                     l8570:
 31170                           
 31171                           ;stkvar	_bexp @ sp[(-4)+1]
 31172                           ;stkvar	_grs @ sp[(-4)+0]
 31173  0149F2  0EFD               	movlw	-3
 31174  0149F4  006F FF8C  F001    	movff	plusw1,btemp
 31175  0149FA  0EFC               	movlw	-4
 31176  0149FC  0060  F007  FFE3   	movff	btemp,plusw1
 31177                           
 31178                           ;stkvar	_aexp @ sp[(-4)+2]
 31179                           ;stkvar	_bexp @ sp[(-4)+1]
 31180  014A02  0EFE               	movlw	-2
 31181  014A04  006F FF8C  F001    	movff	plusw1,btemp
 31182  014A0A  0EFD               	movlw	-3
 31183  014A0C  0060  F007  FFE3   	movff	btemp,plusw1
 31184                           
 31185                           ;stkvar	_grs @ sp[(-4)+0]
 31186                           ;stkvar	_aexp @ sp[(-4)+2]
 31187  014A12  0EFC               	movlw	-4
 31188  014A14  006F FF8C  F001    	movff	plusw1,btemp
 31189  014A1A  0EFE               	movlw	-2
 31190  014A1C  0060  F007  FFE3   	movff	btemp,plusw1
 31191                           
 31192                           ;stkvar	_b @ sp[(-4)+-4]
 31193                           ;stkvar	_grs @ sp[(-4)+0]
 31194  014A22  0EF8               	movlw	-8
 31195  014A24  006F FF8C  F001    	movff	plusw1,btemp
 31196  014A2A  0EFC               	movlw	-4
 31197  014A2C  0060  F007  FFE3   	movff	btemp,plusw1
 31198                           
 31199                           ;stkvar	_a @ sp[(-4)+-8]
 31200                           ;stkvar	_b @ sp[(-4)+-4]
 31201  014A32  0EF4               	movlw	-12
 31202  014A34  006F FF8C  F001    	movff	plusw1,btemp
 31203  014A3A  0EF8               	movlw	-8
 31204  014A3C  0060  F007  FFE3   	movff	btemp,plusw1
 31205                           
 31206                           ;stkvar	_grs @ sp[(-4)+0]
 31207                           ;stkvar	_a @ sp[(-4)+-8]
 31208  014A42  0EFC               	movlw	-4
 31209  014A44  006F FF8C  F001    	movff	plusw1,btemp
 31210  014A4A  0EF4               	movlw	-12
 31211  014A4C  0060  F007  FFE3   	movff	btemp,plusw1
 31212                           
 31213                           ;stkvar	_b @ sp[(-4)+-4]
 31214  014A52  0EF9               	movlw	249
 31215  014A54  24E1               	addwf	fsr1l,w,c
 31216  014A56  6ED9               	movwf	fsr2l,c
 31217  014A58  0EFF               	movlw	255
 31218  014A5A  20E2               	addwfc	fsr1h,w,c
 31219  014A5C  6EDA               	movwf	fsr2h,c
 31220  014A5E  50DF               	movf	indf2,w,c
 31221  014A60  6E0C               	movwf	(btemp+11)^0,c
 31222                           
 31223                           ;stkvar	_grs @ sp[(-4)+0]
 31224  014A62  0EFC               	movlw	-4
 31225  014A64  0060  F033  FFE3   	movff	btemp+11,plusw1
 31226                           
 31227                           ;stkvar	_a @ sp[(-4)+-8]
 31228  014A6A  0EF5               	movlw	245
 31229  014A6C  24E1               	addwf	fsr1l,w,c
 31230  014A6E  6ED9               	movwf	fsr2l,c
 31231  014A70  0EFF               	movlw	255
 31232  014A72  20E2               	addwfc	fsr1h,w,c
 31233  014A74  6EDA               	movwf	fsr2h,c
 31234                           
 31235                           ;stkvar	_b @ sp[(-4)+-4]
 31236  014A76  0EF9               	movlw	249
 31237  014A78  24E1               	addwf	fsr1l,w,c
 31238  014A7A  6EE9               	movwf	fsr0l,c
 31239  014A7C  0EFF               	movlw	255
 31240  014A7E  20E2               	addwfc	fsr1h,w,c
 31241  014A80  6EEA               	movwf	fsr0h,c
 31242  014A82  006F FF7F FFEF     	movff	indf2,indf0
 31243                           
 31244                           ;stkvar	_grs @ sp[(-4)+0]
 31245                           ;stkvar	_a @ sp[(-4)+-8]
 31246  014A88  0EF5               	movlw	245
 31247  014A8A  24E1               	addwf	fsr1l,w,c
 31248  014A8C  6ED9               	movwf	fsr2l,c
 31249  014A8E  0EFF               	movlw	255
 31250  014A90  20E2               	addwfc	fsr1h,w,c
 31251  014A92  6EDA               	movwf	fsr2h,c
 31252  014A94  0EFC               	movlw	-4
 31253  014A96  006F FF8F FFDF     	movff	plusw1,indf2
 31254                           
 31255                           ;stkvar	_b @ sp[(-4)+-4]
 31256  014A9C  0EFA               	movlw	250
 31257  014A9E  24E1               	addwf	fsr1l,w,c
 31258  014AA0  6ED9               	movwf	fsr2l,c
 31259  014AA2  0EFF               	movlw	255
 31260  014AA4  20E2               	addwfc	fsr1h,w,c
 31261  014AA6  6EDA               	movwf	fsr2h,c
 31262  014AA8  50DF               	movf	indf2,w,c
 31263  014AAA  6E0C               	movwf	(btemp+11)^0,c
 31264                           
 31265                           ;stkvar	_grs @ sp[(-4)+0]
 31266  014AAC  0EFC               	movlw	-4
 31267  014AAE  0060  F033  FFE3   	movff	btemp+11,plusw1
 31268                           
 31269                           ;stkvar	_a @ sp[(-4)+-8]
 31270  014AB4  0EF6               	movlw	246
 31271  014AB6  24E1               	addwf	fsr1l,w,c
 31272  014AB8  6ED9               	movwf	fsr2l,c
 31273  014ABA  0EFF               	movlw	255
 31274  014ABC  20E2               	addwfc	fsr1h,w,c
 31275  014ABE  6EDA               	movwf	fsr2h,c
 31276                           
 31277                           ;stkvar	_b @ sp[(-4)+-4]
 31278  014AC0  0EFA               	movlw	250
 31279  014AC2  24E1               	addwf	fsr1l,w,c
 31280  014AC4  6EE9               	movwf	fsr0l,c
 31281  014AC6  0EFF               	movlw	255
 31282  014AC8  20E2               	addwfc	fsr1h,w,c
 31283  014ACA  6EEA               	movwf	fsr0h,c
 31284  014ACC  006F FF7F FFEF     	movff	indf2,indf0
 31285                           
 31286                           ;stkvar	_grs @ sp[(-4)+0]
 31287                           ;stkvar	_a @ sp[(-4)+-8]
 31288  014AD2  0EF6               	movlw	246
 31289  014AD4  24E1               	addwf	fsr1l,w,c
 31290  014AD6  6ED9               	movwf	fsr2l,c
 31291  014AD8  0EFF               	movlw	255
 31292  014ADA  20E2               	addwfc	fsr1h,w,c
 31293  014ADC  6EDA               	movwf	fsr2h,c
 31294  014ADE  0EFC               	movlw	-4
 31295  014AE0  006F FF8F FFDF     	movff	plusw1,indf2
 31296                           
 31297                           ;stkvar	_b @ sp[(-4)+-4]
 31298  014AE6  0EFB               	movlw	251
 31299  014AE8  24E1               	addwf	fsr1l,w,c
 31300  014AEA  6ED9               	movwf	fsr2l,c
 31301  014AEC  0EFF               	movlw	255
 31302  014AEE  20E2               	addwfc	fsr1h,w,c
 31303  014AF0  6EDA               	movwf	fsr2h,c
 31304  014AF2  50DF               	movf	indf2,w,c
 31305  014AF4  6E0C               	movwf	(btemp+11)^0,c
 31306                           
 31307                           ;stkvar	_grs @ sp[(-4)+0]
 31308  014AF6  0EFC               	movlw	-4
 31309  014AF8  0060  F033  FFE3   	movff	btemp+11,plusw1
 31310                           
 31311                           ;stkvar	_a @ sp[(-4)+-8]
 31312  014AFE  0EF7               	movlw	247
 31313  014B00  24E1               	addwf	fsr1l,w,c
 31314  014B02  6ED9               	movwf	fsr2l,c
 31315  014B04  0EFF               	movlw	255
 31316  014B06  20E2               	addwfc	fsr1h,w,c
 31317  014B08  6EDA               	movwf	fsr2h,c
 31318                           
 31319                           ;stkvar	_b @ sp[(-4)+-4]
 31320  014B0A  0EFB               	movlw	251
 31321  014B0C  24E1               	addwf	fsr1l,w,c
 31322  014B0E  6EE9               	movwf	fsr0l,c
 31323  014B10  0EFF               	movlw	255
 31324  014B12  20E2               	addwfc	fsr1h,w,c
 31325  014B14  6EEA               	movwf	fsr0h,c
 31326  014B16  006F FF7F FFEF     	movff	indf2,indf0
 31327                           
 31328                           ;stkvar	_grs @ sp[(-4)+0]
 31329                           ;stkvar	_a @ sp[(-4)+-8]
 31330  014B1C  0EF7               	movlw	247
 31331  014B1E  24E1               	addwf	fsr1l,w,c
 31332  014B20  6ED9               	movwf	fsr2l,c
 31333  014B22  0EFF               	movlw	255
 31334  014B24  20E2               	addwfc	fsr1h,w,c
 31335  014B26  6EDA               	movwf	fsr2h,c
 31336  014B28  0EFC               	movlw	-4
 31337  014B2A  006F FF8F FFDF     	movff	plusw1,indf2
 31338  014B30                     l8600:
 31339                           
 31340                           ;stkvar	_grs @ sp[(-4)+0]
 31341  014B30  0EFC               	movlw	-4
 31342  014B32  6AE3               	clrf	plusw1,c
 31343                           
 31344                           ;stkvar	_aexp @ sp[(-4)+2]
 31345  014B34  0EFE               	movlw	-2
 31346  014B36  50E3               	movf	plusw1,w,c
 31347  014B38  6E0B               	movwf	(btemp+10)^0,c
 31348  014B3A  6A0C               	clrf	(btemp+11)^0,c
 31349                           
 31350                           ;stkvar	_bexp @ sp[(-4)+1]
 31351  014B3C  0EFD               	movlw	-3
 31352  014B3E  50E3               	movf	plusw1,w,c
 31353  014B40  5E0B               	subwf	(btemp+10)^0,f,c
 31354  014B42  0E00               	movlw	0
 31355  014B44  5A0C               	subwfb	(btemp+11)^0,f,c
 31356  014B46  BE0C               	btfsc	(btemp+11)^0,7,c
 31357  014B48  D062               	goto	l8624
 31358  014B4A  500C               	movf	(btemp+11)^0,w,c
 31359  014B4C  E104               	bnz	u6130
 31360  014B4E  0E1A               	movlw	26
 31361  014B50  5C0B               	subwf	(btemp+10)^0,w,c
 31362  014B52  A0D8               	btfss	status,0,c
 31363  014B54  D05C               	goto	l8624
 31364  014B56                     u6130:
 31365                           
 31366                           ;stkvar	_b @ sp[(-4)+-4]
 31367  014B56  0EF8               	movlw	-8
 31368  014B58  50E3               	movf	plusw1,w,c
 31369  014B5A  E10A               	bnz	u6141
 31370  014B5C  0EF9               	movlw	-7
 31371  014B5E  50E3               	movf	plusw1,w,c
 31372  014B60  E107               	bnz	u6141
 31373  014B62  0EFA               	movlw	-6
 31374  014B64  50E3               	movf	plusw1,w,c
 31375  014B66  E104               	bnz	u6141
 31376  014B68  0EFB               	movlw	-5
 31377  014B6A  50E3               	movf	plusw1,w,c
 31378  014B6C  B4D8               	btfsc	status,2,c
 31379  014B6E  D003               	goto	u6140
 31380  014B70                     u6141:
 31381  014B70  6A0C               	clrf	(btemp+11)^0,c
 31382  014B72  2A0C               	incf	(btemp+11)^0,f,c
 31383  014B74  D001               	goto	u6158
 31384  014B76                     u6140:
 31385  014B76  6A0C               	clrf	(btemp+11)^0,c
 31386  014B78                     u6158:
 31387                           
 31388                           ;stkvar	_grs @ sp[(-4)+0]
 31389  014B78  0EFC               	movlw	-4
 31390  014B7A  0060  F033  FFE3   	movff	btemp+11,plusw1
 31391                           
 31392                           ;stkvar	_b @ sp[(-4)+-4]
 31393  014B80  0EF8               	movlw	-8
 31394  014B82  6AE3               	clrf	plusw1,c
 31395  014B84  0EF9               	movlw	-7
 31396  014B86  6AE3               	clrf	plusw1,c
 31397  014B88  0EFA               	movlw	-6
 31398  014B8A  6AE3               	clrf	plusw1,c
 31399  014B8C  0EFB               	movlw	-5
 31400  014B8E  6AE3               	clrf	plusw1,c
 31401                           
 31402                           ;stkvar	_aexp @ sp[(-4)+2]
 31403                           ;stkvar	_bexp @ sp[(-4)+1]
 31404  014B90  0EFE               	movlw	-2
 31405  014B92  006F FF8C  F001    	movff	plusw1,btemp
 31406  014B98  0EFD               	movlw	-3
 31407  014B9A  0060  F007  FFE3   	movff	btemp,plusw1
 31408  014BA0  D042               	goto	u6190
 31409  014BA2                     l8610:
 31410                           
 31411                           ;stkvar	_grs @ sp[(-4)+0]
 31412  014BA2  0EFC               	movlw	-4
 31413  014BA4  A0E3               	btfss	plusw1,0,c
 31414  014BA6  D00D               	goto	l8614
 31415                           
 31416                           ;stkvar	_grs @ sp[(-4)+0]
 31417  014BA8  0EFC               	movlw	-4
 31418  014BAA  006F FF8C  F00C    	movff	plusw1,btemp+11
 31419  014BB0  90D8               	bcf	status,0,c
 31420  014BB2  320C               	rrcf	(btemp+11)^0,f,c
 31421  014BB4  0E01               	movlw	1
 31422  014BB6  120C               	iorwf	(btemp+11)^0,f,c
 31423                           
 31424                           ;stkvar	_grs @ sp[(-4)+0]
 31425  014BB8  0EFC               	movlw	-4
 31426  014BBA  0060  F033  FFE3   	movff	btemp+11,plusw1
 31427  014BC0  D009               	goto	l8616
 31428  014BC2                     l8614:
 31429                           
 31430                           ;stkvar	_grs @ sp[(-4)+0]
 31431  014BC2  50E1               	movf	fsr1l,w,c
 31432  014BC4  0FFC               	addlw	-4
 31433  014BC6  6ED9               	movwf	fsr2l,c
 31434  014BC8  50E2               	movf	fsr1h,w,c
 31435  014BCA  6EDA               	movwf	fsr2h,c
 31436  014BCC  0EFF               	movlw	255
 31437  014BCE  22DA               	addwfc	fsr2h,f,c
 31438  014BD0  90D8               	bcf	status,0,c
 31439  014BD2  32DF               	rrcf	indf2,f,c
 31440  014BD4                     l8616:
 31441                           
 31442                           ;stkvar	_b @ sp[(-4)+-4]
 31443  014BD4  0EF8               	movlw	-8
 31444  014BD6  A0E3               	btfss	plusw1,0,c
 31445  014BD8  D002               	goto	l8620
 31446                           
 31447                           ;stkvar	_grs @ sp[(-4)+0]
 31448  014BDA  0EFC               	movlw	-4
 31449  014BDC  8EE3               	bsf	plusw1,7,c
 31450  014BDE                     l8620:
 31451  014BDE  0E01               	movlw	1
 31452  014BE0  6E0C               	movwf	(btemp+11)^0,c
 31453                           
 31454                           ;stkvar	_b @ sp[(-4)+-4]
 31455  014BE2  50E1               	movf	fsr1l,w,c
 31456  014BE4  0FF8               	addlw	-8
 31457  014BE6  6ED9               	movwf	fsr2l,c
 31458  014BE8  50E2               	movf	fsr1h,w,c
 31459  014BEA  6EDA               	movwf	fsr2h,c
 31460  014BEC  0EFF               	movlw	255
 31461  014BEE  22DA               	addwfc	fsr2h,f,c
 31462  014BF0  280C               	incf	(btemp+11)^0,w,c
 31463  014BF2  52DE               	movf	postinc2,f,c
 31464  014BF4  D008               	goto	u6180
 31465  014BF6                     u6185:
 31466  014BF6  52DE               	movf	postinc2,f,c
 31467  014BF8  90D8               	bcf	status,0,c
 31468  014BFA  BEDC               	btfsc	preinc2,7,c
 31469  014BFC  80D8               	bsf	status,0,c
 31470  014BFE  32DD               	rrcf	postdec2,f,c
 31471  014C00  32DD               	rrcf	postdec2,f,c
 31472  014C02  32DD               	rrcf	postdec2,f,c
 31473  014C04  32DE               	rrcf	postinc2,f,c
 31474  014C06                     u6180:
 31475  014C06  2EE8               	decfsz	wreg,f,c
 31476  014C08  D7F6               	goto	u6185
 31477                           
 31478                           ;stkvar	_bexp @ sp[(-4)+1]
 31479  014C0A  0EFD               	movlw	-3
 31480  014C0C  2AE3               	incf	plusw1,f,c
 31481  014C0E                     l8624:
 31482                           
 31483                           ;stkvar	_aexp @ sp[(-4)+2]
 31484                           ;stkvar	_bexp @ sp[(-4)+1]
 31485  014C0E  50E1               	movf	fsr1l,w,c
 31486  014C10  0FFD               	addlw	-3
 31487  014C12  6ED9               	movwf	fsr2l,c
 31488  014C14  50E2               	movf	fsr1h,w,c
 31489  014C16  6EDA               	movwf	fsr2h,c
 31490  014C18  0EFF               	movlw	255
 31491  014C1A  22DA               	addwfc	fsr2h,f,c
 31492  014C1C  0EFE               	movlw	-2
 31493  014C1E  50E3               	movf	plusw1,w,c
 31494  014C20  5CDE               	subwf	postinc2,w,c
 31495  014C22  A0D8               	btfss	status,0,c
 31496  014C24  D7BE               	goto	l8610
 31497  014C26                     u6190:
 31498                           
 31499                           ;stkvar	_signs @ sp[(-4)+3]
 31500  014C26  0EFF               	movlw	-1
 31501  014C28  BCE3               	btfsc	plusw1,6,c
 31502  014C2A  D066               	goto	l8652
 31503                           
 31504                           ;stkvar	_bexp @ sp[(-4)+1]
 31505  014C2C  0EFD               	movlw	-3
 31506  014C2E  50E3               	movf	plusw1,w,c
 31507  014C30  B4D8               	btfsc	status,2,c
 31508  014C32  D0F2               	goto	u6290
 31509                           
 31510                           ;stkvar	_a @ sp[(-4)+-8]
 31511                           ;stkvar	_b @ sp[(-4)+-4]
 31512  014C34  0EF8               	movlw	-8
 31513  014C36  50E3               	movf	plusw1,w,c
 31514  014C38  6E01               	movwf	btemp^0,c
 31515  014C3A  0EF4               	movlw	-12
 31516  014C3C  50E3               	movf	plusw1,w,c
 31517  014C3E  2601               	addwf	btemp^0,f,c
 31518  014C40  0EF8               	movlw	-8
 31519  014C42  0060  F007  FFE3   	movff	btemp,plusw1
 31520  014C48  0EF9               	movlw	-7
 31521  014C4A  50E3               	movf	plusw1,w,c
 31522  014C4C  6E01               	movwf	btemp^0,c
 31523  014C4E  0EF5               	movlw	-11
 31524  014C50  50E3               	movf	plusw1,w,c
 31525  014C52  2201               	addwfc	btemp^0,f,c
 31526  014C54  0EF9               	movlw	-7
 31527  014C56  0060  F007  FFE3   	movff	btemp,plusw1
 31528  014C5C  0EFA               	movlw	-6
 31529  014C5E  50E3               	movf	plusw1,w,c
 31530  014C60  6E01               	movwf	btemp^0,c
 31531  014C62  0EF6               	movlw	-10
 31532  014C64  50E3               	movf	plusw1,w,c
 31533  014C66  2201               	addwfc	btemp^0,f,c
 31534  014C68  0EFA               	movlw	-6
 31535  014C6A  0060  F007  FFE3   	movff	btemp,plusw1
 31536  014C70  0EFB               	movlw	-5
 31537  014C72  50E3               	movf	plusw1,w,c
 31538  014C74  6E01               	movwf	btemp^0,c
 31539  014C76  0EF7               	movlw	-9
 31540  014C78  50E3               	movf	plusw1,w,c
 31541  014C7A  2201               	addwfc	btemp^0,f,c
 31542  014C7C  0EFB               	movlw	-5
 31543  014C7E  0060  F007  FFE3   	movff	btemp,plusw1
 31544                           
 31545                           ;stkvar	_b @ sp[(-4)+-4]
 31546  014C84  0EFB               	movlw	-5
 31547  014C86  A0E3               	btfss	plusw1,0,c
 31548  014C88  D101               	goto	u6330
 31549                           
 31550                           ;stkvar	_grs @ sp[(-4)+0]
 31551  014C8A  0EFC               	movlw	-4
 31552  014C8C  A0E3               	btfss	plusw1,0,c
 31553  014C8E  D00D               	goto	l8642
 31554                           
 31555                           ;stkvar	_grs @ sp[(-4)+0]
 31556  014C90  0EFC               	movlw	-4
 31557  014C92  006F FF8C  F00C    	movff	plusw1,btemp+11
 31558  014C98  90D8               	bcf	status,0,c
 31559  014C9A  320C               	rrcf	(btemp+11)^0,f,c
 31560  014C9C  0E01               	movlw	1
 31561  014C9E  120C               	iorwf	(btemp+11)^0,f,c
 31562                           
 31563                           ;stkvar	_grs @ sp[(-4)+0]
 31564  014CA0  0EFC               	movlw	-4
 31565  014CA2  0060  F033  FFE3   	movff	btemp+11,plusw1
 31566  014CA8  D009               	goto	l8644
 31567  014CAA                     l8642:
 31568                           
 31569                           ;stkvar	_grs @ sp[(-4)+0]
 31570  014CAA  50E1               	movf	fsr1l,w,c
 31571  014CAC  0FFC               	addlw	-4
 31572  014CAE  6ED9               	movwf	fsr2l,c
 31573  014CB0  50E2               	movf	fsr1h,w,c
 31574  014CB2  6EDA               	movwf	fsr2h,c
 31575  014CB4  0EFF               	movlw	255
 31576  014CB6  22DA               	addwfc	fsr2h,f,c
 31577  014CB8  90D8               	bcf	status,0,c
 31578  014CBA  32DF               	rrcf	indf2,f,c
 31579  014CBC                     l8644:
 31580                           
 31581                           ;stkvar	_b @ sp[(-4)+-4]
 31582  014CBC  0EF8               	movlw	-8
 31583  014CBE  A0E3               	btfss	plusw1,0,c
 31584  014CC0  D002               	goto	l8648
 31585                           
 31586                           ;stkvar	_grs @ sp[(-4)+0]
 31587  014CC2  0EFC               	movlw	-4
 31588  014CC4  8EE3               	bsf	plusw1,7,c
 31589  014CC6                     l8648:
 31590  014CC6  0E01               	movlw	1
 31591  014CC8  6E0C               	movwf	(btemp+11)^0,c
 31592                           
 31593                           ;stkvar	_b @ sp[(-4)+-4]
 31594  014CCA  50E1               	movf	fsr1l,w,c
 31595  014CCC  0FF8               	addlw	-8
 31596  014CCE  6ED9               	movwf	fsr2l,c
 31597  014CD0  50E2               	movf	fsr1h,w,c
 31598  014CD2  6EDA               	movwf	fsr2h,c
 31599  014CD4  0EFF               	movlw	255
 31600  014CD6  22DA               	addwfc	fsr2h,f,c
 31601  014CD8  280C               	incf	(btemp+11)^0,w,c
 31602  014CDA  52DE               	movf	postinc2,f,c
 31603  014CDC  D008               	goto	u6250
 31604  014CDE                     u6255:
 31605  014CDE  52DE               	movf	postinc2,f,c
 31606  014CE0  90D8               	bcf	status,0,c
 31607  014CE2  BEDC               	btfsc	preinc2,7,c
 31608  014CE4  80D8               	bsf	status,0,c
 31609  014CE6  32DD               	rrcf	postdec2,f,c
 31610  014CE8  32DD               	rrcf	postdec2,f,c
 31611  014CEA  32DD               	rrcf	postdec2,f,c
 31612  014CEC  32DE               	rrcf	postinc2,f,c
 31613  014CEE                     u6250:
 31614  014CEE  2EE8               	decfsz	wreg,f,c
 31615  014CF0  D7F6               	goto	u6255
 31616                           
 31617                           ;stkvar	_bexp @ sp[(-4)+1]
 31618  014CF2  0EFD               	movlw	-3
 31619  014CF4  2AE3               	incf	plusw1,f,c
 31620  014CF6  D0CA               	goto	u6330
 31621  014CF8                     l8652:
 31622                           
 31623                           ;stkvar	_a @ sp[(-4)+-8]
 31624                           ;stkvar	_b @ sp[(-4)+-4]
 31625  014CF8  50E1               	movf	fsr1l,w,c
 31626  014CFA  0FF8               	addlw	-8
 31627  014CFC  6ED9               	movwf	fsr2l,c
 31628  014CFE  50E2               	movf	fsr1h,w,c
 31629  014D00  6EDA               	movwf	fsr2h,c
 31630  014D02  0EFF               	movlw	255
 31631  014D04  22DA               	addwfc	fsr2h,f,c
 31632  014D06  0EF4               	movlw	-12
 31633  014D08  50E3               	movf	plusw1,w,c
 31634  014D0A  5CDE               	subwf	postinc2,w,c
 31635  014D0C  0EF5               	movlw	-11
 31636  014D0E  50E3               	movf	plusw1,w,c
 31637  014D10  58DE               	subwfb	postinc2,w,c
 31638  014D12  0EF6               	movlw	-10
 31639  014D14  50E3               	movf	plusw1,w,c
 31640  014D16  58DE               	subwfb	postinc2,w,c
 31641  014D18  50DE               	movf	postinc2,w,c
 31642  014D1A  0A80               	xorlw	128
 31643  014D1C  6E01               	movwf	btemp^0,c
 31644  014D1E  0EF7               	movlw	-9
 31645  014D20  50E3               	movf	plusw1,w,c
 31646  014D22  0A80               	xorlw	128
 31647  014D24  5801               	subwfb	btemp^0,w,c
 31648  014D26  B0D8               	btfsc	status,0,c
 31649  014D28  D053               	goto	l8664
 31650                           
 31651                           ;stkvar	_b @ sp[(-4)+-4]
 31652                           ;stkvar	_a @ sp[(-4)+-8]
 31653  014D2A  0EF4               	movlw	-12
 31654  014D2C  006F FF8C  F009    	movff	plusw1,btemp+8
 31655  014D32  0EF5               	movlw	-11
 31656  014D34  006F FF8C  F00A    	movff	plusw1,btemp+9
 31657  014D3A  0EF6               	movlw	-10
 31658  014D3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 31659  014D42  0EF7               	movlw	-9
 31660  014D44  006F FF8C  F00C    	movff	plusw1,btemp+11
 31661  014D4A  0EF8               	movlw	-8
 31662  014D4C  50E3               	movf	plusw1,w,c
 31663  014D4E  5E09               	subwf	(btemp+8)^0,f,c
 31664  014D50  0EF9               	movlw	-7
 31665  014D52  50E3               	movf	plusw1,w,c
 31666  014D54  5A0A               	subwfb	(btemp+9)^0,f,c
 31667  014D56  0EFA               	movlw	-6
 31668  014D58  50E3               	movf	plusw1,w,c
 31669  014D5A  5A0B               	subwfb	(btemp+10)^0,f,c
 31670  014D5C  0EFB               	movlw	-5
 31671  014D5E  50E3               	movf	plusw1,w,c
 31672  014D60  5A0C               	subwfb	(btemp+11)^0,f,c
 31673  014D62  0EFF               	movlw	255
 31674  014D64  2409               	addwf	(btemp+8)^0,w,c
 31675  014D66  6E05               	movwf	(btemp+4)^0,c
 31676  014D68  0EFF               	movlw	255
 31677  014D6A  200A               	addwfc	(btemp+9)^0,w,c
 31678  014D6C  6E06               	movwf	(btemp+5)^0,c
 31679  014D6E  0EFF               	movlw	255
 31680  014D70  200B               	addwfc	(btemp+10)^0,w,c
 31681  014D72  6E07               	movwf	(btemp+6)^0,c
 31682  014D74  0EFF               	movlw	255
 31683  014D76  200C               	addwfc	(btemp+11)^0,w,c
 31684  014D78  6E08               	movwf	(btemp+7)^0,c
 31685                           
 31686                           ;stkvar	_b @ sp[(-4)+-4]
 31687  014D7A  0EF8               	movlw	-8
 31688  014D7C  0060  F017  FFE3   	movff	btemp+4,plusw1
 31689  014D82  0EF9               	movlw	-7
 31690  014D84  0060  F01B  FFE3   	movff	btemp+5,plusw1
 31691  014D8A  0EFA               	movlw	-6
 31692  014D8C  0060  F01F  FFE3   	movff	btemp+6,plusw1
 31693  014D92  0EFB               	movlw	-5
 31694  014D94  0060  F023  FFE3   	movff	btemp+7,plusw1
 31695                           
 31696                           ;stkvar	_signs @ sp[(-4)+3]
 31697  014D9A  0EFF               	movlw	-1
 31698  014D9C  7EE3               	btg	plusw1,7,c
 31699                           
 31700                           ;stkvar	_grs @ sp[(-4)+0]
 31701  014D9E  0EFC               	movlw	-4
 31702  014DA0  50E3               	movf	plusw1,w,c
 31703  014DA2  0800               	sublw	0
 31704  014DA4  6E0C               	movwf	(btemp+11)^0,c
 31705                           
 31706                           ;stkvar	_grs @ sp[(-4)+0]
 31707  014DA6  0EFC               	movlw	-4
 31708  014DA8  0060  F033  FFE3   	movff	btemp+11,plusw1
 31709                           
 31710                           ;stkvar	_grs @ sp[(-4)+0]
 31711  014DAE  0EFC               	movlw	-4
 31712  014DB0  50E3               	movf	plusw1,w,c
 31713  014DB2  A4D8               	btfss	status,2,c
 31714  014DB4  D020               	goto	l8666
 31715                           
 31716                           ;stkvar	_b @ sp[(-4)+-4]
 31717  014DB6  50E1               	movf	fsr1l,w,c
 31718  014DB8  0FF8               	addlw	-8
 31719  014DBA  6ED9               	movwf	fsr2l,c
 31720  014DBC  50E2               	movf	fsr1h,w,c
 31721  014DBE  6EDA               	movwf	fsr2h,c
 31722  014DC0  0EFF               	movlw	255
 31723  014DC2  22DA               	addwfc	fsr2h,f,c
 31724  014DC4  2ADE               	incf	postinc2,f,c
 31725  014DC6  0E00               	movlw	0
 31726  014DC8  22DE               	addwfc	postinc2,f,c
 31727  014DCA  22DE               	addwfc	postinc2,f,c
 31728  014DCC  22DE               	addwfc	postinc2,f,c
 31729  014DCE  D013               	goto	l8666
 31730  014DD0                     l8664:
 31731                           
 31732                           ;stkvar	_a @ sp[(-4)+-8]
 31733                           ;stkvar	_b @ sp[(-4)+-4]
 31734  014DD0  50E1               	movf	fsr1l,w,c
 31735  014DD2  0FF8               	addlw	-8
 31736  014DD4  6ED9               	movwf	fsr2l,c
 31737  014DD6  50E2               	movf	fsr1h,w,c
 31738  014DD8  6EDA               	movwf	fsr2h,c
 31739  014DDA  0EFF               	movlw	255
 31740  014DDC  22DA               	addwfc	fsr2h,f,c
 31741  014DDE  0EF4               	movlw	-12
 31742  014DE0  50E3               	movf	plusw1,w,c
 31743  014DE2  5EDE               	subwf	postinc2,f,c
 31744  014DE4  0EF5               	movlw	-11
 31745  014DE6  50E3               	movf	plusw1,w,c
 31746  014DE8  5ADE               	subwfb	postinc2,f,c
 31747  014DEA  0EF6               	movlw	-10
 31748  014DEC  50E3               	movf	plusw1,w,c
 31749  014DEE  5ADE               	subwfb	postinc2,f,c
 31750  014DF0  0EF7               	movlw	-9
 31751  014DF2  50E3               	movf	plusw1,w,c
 31752  014DF4  5ADE               	subwfb	postinc2,f,c
 31753  014DF6                     l8666:
 31754                           
 31755                           ;stkvar	_b @ sp[(-4)+-4]
 31756  014DF6  0EF8               	movlw	-8
 31757  014DF8  50E3               	movf	plusw1,w,c
 31758  014DFA  E145               	bnz	l8688
 31759  014DFC  0EF9               	movlw	-7
 31760  014DFE  50E3               	movf	plusw1,w,c
 31761  014E00  E142               	bnz	l8688
 31762  014E02  0EFA               	movlw	-6
 31763  014E04  50E3               	movf	plusw1,w,c
 31764  014E06  E13F               	bnz	l8688
 31765  014E08  0EFB               	movlw	-5
 31766  014E0A  50E3               	movf	plusw1,w,c
 31767  014E0C  A4D8               	btfss	status,2,c
 31768  014E0E  D03B               	goto	l8688
 31769                           
 31770                           ;stkvar	_grs @ sp[(-4)+0]
 31771  014E10  0EFC               	movlw	-4
 31772  014E12  50E3               	movf	plusw1,w,c
 31773  014E14  A4D8               	btfss	status,2,c
 31774  014E16  D037               	goto	l8688
 31775  014E18                     u6290:
 31776  014E18  0E00               	movlw	0
 31777  014E1A  6E01               	movwf	btemp^0,c
 31778  014E1C  0E00               	movlw	0
 31779  014E1E  6E02               	movwf	(btemp+1)^0,c
 31780  014E20  0E00               	movlw	0
 31781  014E22  6E03               	movwf	(btemp+2)^0,c
 31782  014E24  0E00               	movlw	0
 31783  014E26  6E04               	movwf	(btemp+3)^0,c
 31784  014E28  D0C6               	goto	l3216
 31785  014E2A                     l8674:
 31786                           
 31787                           ;stkvar	_b @ sp[(-4)+-4]
 31788  014E2A  90D8               	bcf	status,0,c
 31789  014E2C  0EF8               	movlw	-8
 31790  014E2E  36E3               	rlcf	plusw1,f,c
 31791  014E30  0EF9               	movlw	-7
 31792  014E32  36E3               	rlcf	plusw1,f,c
 31793  014E34  0EFA               	movlw	-6
 31794  014E36  36E3               	rlcf	plusw1,f,c
 31795  014E38  0EFB               	movlw	-5
 31796  014E3A  36E3               	rlcf	plusw1,f,c
 31797                           
 31798                           ;stkvar	_grs @ sp[(-4)+0]
 31799  014E3C  0EFC               	movlw	-4
 31800  014E3E  AEE3               	btfss	plusw1,7,c
 31801  014E40  D002               	goto	l3228
 31802                           
 31803                           ;stkvar	_b @ sp[(-4)+-4]
 31804  014E42  0EF8               	movlw	-8
 31805  014E44  80E3               	bsf	plusw1,0,c
 31806  014E46                     l3228:
 31807                           
 31808                           ;stkvar	_grs @ sp[(-4)+0]
 31809  014E46  0EFC               	movlw	-4
 31810  014E48  A0E3               	btfss	plusw1,0,c
 31811  014E4A  D00E               	goto	l8682
 31812                           
 31813                           ;stkvar	_grs @ sp[(-4)+0]
 31814  014E4C  0EFC               	movlw	-4
 31815  014E4E  006F FF8C  F00C    	movff	plusw1,btemp+11
 31816  014E54  90D8               	bcf	status,0,c
 31817  014E56  340C               	rlcf	(btemp+11)^0,w,c
 31818  014E58  6E0B               	movwf	(btemp+10)^0,c
 31819  014E5A  0E01               	movlw	1
 31820  014E5C  120B               	iorwf	(btemp+10)^0,f,c
 31821                           
 31822                           ;stkvar	_grs @ sp[(-4)+0]
 31823  014E5E  0EFC               	movlw	-4
 31824  014E60  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31825  014E66  D009               	goto	l8684
 31826  014E68                     l8682:
 31827                           
 31828                           ;stkvar	_grs @ sp[(-4)+0]
 31829  014E68  50E1               	movf	fsr1l,w,c
 31830  014E6A  0FFC               	addlw	-4
 31831  014E6C  6ED9               	movwf	fsr2l,c
 31832  014E6E  50E2               	movf	fsr1h,w,c
 31833  014E70  6EDA               	movwf	fsr2h,c
 31834  014E72  0EFF               	movlw	255
 31835  014E74  22DA               	addwfc	fsr2h,f,c
 31836  014E76  90D8               	bcf	status,0,c
 31837  014E78  36DF               	rlcf	indf2,f,c
 31838  014E7A                     l8684:
 31839                           
 31840                           ;stkvar	_bexp @ sp[(-4)+1]
 31841  014E7A  0EFD               	movlw	-3
 31842  014E7C  50E3               	movf	plusw1,w,c
 31843  014E7E  B4D8               	btfsc	status,2,c
 31844  014E80  D002               	goto	l8688
 31845                           
 31846                           ;stkvar	_bexp @ sp[(-4)+1]
 31847  014E82  0EFD               	movlw	-3
 31848  014E84  06E3               	decf	plusw1,f,c
 31849  014E86                     l8688:
 31850                           
 31851                           ;stkvar	_b @ sp[(-4)+-4]
 31852  014E86  0EFA               	movlw	-6
 31853  014E88  AEE3               	btfss	plusw1,7,c
 31854  014E8A  D7CF               	goto	l8674
 31855  014E8C                     u6330:
 31856                           
 31857                           ;stkvar	_aexp @ sp[(-4)+2]
 31858  014E8C  0EFE               	movlw	-2
 31859  014E8E  6AE3               	clrf	plusw1,c
 31860                           
 31861                           ;stkvar	_grs @ sp[(-4)+0]
 31862  014E90  0EFC               	movlw	-4
 31863  014E92  AEE3               	btfss	plusw1,7,c
 31864  014E94  D00F               	goto	l8702
 31865                           
 31866                           ;stkvar	_grs @ sp[(-4)+0]
 31867  014E96  0EFC               	movlw	-4
 31868  014E98  006F FF8C  F00C    	movff	plusw1,btemp+11
 31869  014E9E  0E7F               	movlw	127
 31870  014EA0  160C               	andwf	(btemp+11)^0,f,c
 31871  014EA2  B4D8               	btfsc	status,2,c
 31872  014EA4  D004               	goto	l8698
 31873  014EA6                     u6350:
 31874                           
 31875                           ;stkvar	_aexp @ sp[(-4)+2]
 31876  014EA6  0EFE               	movlw	-2
 31877  014EA8  6AE3               	clrf	plusw1,c
 31878  014EAA  2AE3               	incf	plusw1,f,c
 31879  014EAC  D003               	goto	l8702
 31880  014EAE                     l8698:
 31881                           
 31882                           ;stkvar	_b @ sp[(-4)+-4]
 31883  014EAE  0EF8               	movlw	-8
 31884  014EB0  B0E3               	btfsc	plusw1,0,c
 31885  014EB2  D7F9               	goto	u6350
 31886  014EB4                     l8702:
 31887                           
 31888                           ;stkvar	_aexp @ sp[(-4)+2]
 31889  014EB4  0EFE               	movlw	-2
 31890  014EB6  50E3               	movf	plusw1,w,c
 31891  014EB8  B4D8               	btfsc	status,2,c
 31892  014EBA  D02B               	goto	l8714
 31893                           
 31894                           ;stkvar	_b @ sp[(-4)+-4]
 31895  014EBC  50E1               	movf	fsr1l,w,c
 31896  014EBE  0FF8               	addlw	-8
 31897  014EC0  6ED9               	movwf	fsr2l,c
 31898  014EC2  50E2               	movf	fsr1h,w,c
 31899  014EC4  6EDA               	movwf	fsr2h,c
 31900  014EC6  0EFF               	movlw	255
 31901  014EC8  22DA               	addwfc	fsr2h,f,c
 31902  014ECA  2ADE               	incf	postinc2,f,c
 31903  014ECC  0E00               	movlw	0
 31904  014ECE  22DE               	addwfc	postinc2,f,c
 31905  014ED0  22DE               	addwfc	postinc2,f,c
 31906  014ED2  22DE               	addwfc	postinc2,f,c
 31907                           
 31908                           ;stkvar	_b @ sp[(-4)+-4]
 31909  014ED4  0EFB               	movlw	-5
 31910  014ED6  A0E3               	btfss	plusw1,0,c
 31911  014ED8  D01C               	goto	l8714
 31912  014EDA  0E01               	movlw	1
 31913  014EDC  6E0C               	movwf	(btemp+11)^0,c
 31914                           
 31915                           ;stkvar	_b @ sp[(-4)+-4]
 31916  014EDE  50E1               	movf	fsr1l,w,c
 31917  014EE0  0FF8               	addlw	-8
 31918  014EE2  6ED9               	movwf	fsr2l,c
 31919  014EE4  50E2               	movf	fsr1h,w,c
 31920  014EE6  6EDA               	movwf	fsr2h,c
 31921  014EE8  0EFF               	movlw	255
 31922  014EEA  22DA               	addwfc	fsr2h,f,c
 31923  014EEC  280C               	incf	(btemp+11)^0,w,c
 31924  014EEE  52DE               	movf	postinc2,f,c
 31925  014EF0  D008               	goto	u6390
 31926  014EF2                     u6395:
 31927  014EF2  52DE               	movf	postinc2,f,c
 31928  014EF4  90D8               	bcf	status,0,c
 31929  014EF6  BEDC               	btfsc	preinc2,7,c
 31930  014EF8  80D8               	bsf	status,0,c
 31931  014EFA  32DD               	rrcf	postdec2,f,c
 31932  014EFC  32DD               	rrcf	postdec2,f,c
 31933  014EFE  32DD               	rrcf	postdec2,f,c
 31934  014F00  32DE               	rrcf	postinc2,f,c
 31935  014F02                     u6390:
 31936  014F02  2EE8               	decfsz	wreg,f,c
 31937  014F04  D7F6               	goto	u6395
 31938                           
 31939                           ;stkvar	_bexp @ sp[(-4)+1]
 31940  014F06  0EFD               	movlw	-3
 31941  014F08  28E3               	incf	plusw1,w,c
 31942  014F0A  B4D8               	btfsc	status,2,c
 31943  014F0C  D002               	goto	l8714
 31944                           
 31945                           ;stkvar	_bexp @ sp[(-4)+1]
 31946  014F0E  0EFD               	movlw	-3
 31947  014F10  2AE3               	incf	plusw1,f,c
 31948  014F12                     l8714:
 31949                           
 31950                           ;stkvar	_bexp @ sp[(-4)+1]
 31951  014F12  0EFD               	movlw	-3
 31952  014F14  28E3               	incf	plusw1,w,c
 31953  014F16  B4D8               	btfsc	status,2,c
 31954  014F18  D004               	goto	u6420
 31955                           
 31956                           ;stkvar	_bexp @ sp[(-4)+1]
 31957  014F1A  0EFD               	movlw	-3
 31958  014F1C  50E3               	movf	plusw1,w,c
 31959  014F1E  A4D8               	btfss	status,2,c
 31960  014F20  D00E               	goto	l8724
 31961  014F22                     u6420:
 31962                           
 31963                           ;stkvar	_b @ sp[(-4)+-4]
 31964  014F22  0EF8               	movlw	-8
 31965  014F24  6AE3               	clrf	plusw1,c
 31966  014F26  0EF9               	movlw	-7
 31967  014F28  6AE3               	clrf	plusw1,c
 31968  014F2A  0EFA               	movlw	-6
 31969  014F2C  6AE3               	clrf	plusw1,c
 31970  014F2E  0EFB               	movlw	-5
 31971  014F30  6AE3               	clrf	plusw1,c
 31972                           
 31973                           ;stkvar	_bexp @ sp[(-4)+1]
 31974  014F32  0EFD               	movlw	-3
 31975  014F34  50E3               	movf	plusw1,w,c
 31976  014F36  A4D8               	btfss	status,2,c
 31977  014F38  D002               	goto	l8724
 31978                           
 31979                           ;stkvar	_signs @ sp[(-4)+3]
 31980  014F3A  0EFF               	movlw	-1
 31981  014F3C  6AE3               	clrf	plusw1,c
 31982  014F3E                     l8724:
 31983                           
 31984                           ;stkvar	_bexp @ sp[(-4)+1]
 31985  014F3E  0EFD               	movlw	-3
 31986  014F40  A0E3               	btfss	plusw1,0,c
 31987  014F42  D009               	goto	l8728
 31988                           
 31989                           ;stkvar	_b @ sp[(-4)+-4]
 31990  014F44  0EFA               	movlw	250
 31991  014F46  24E1               	addwf	fsr1l,w,c
 31992  014F48  6ED9               	movwf	fsr2l,c
 31993  014F4A  0EFF               	movlw	255
 31994  014F4C  20E2               	addwfc	fsr1h,w,c
 31995  014F4E  6EDA               	movwf	fsr2h,c
 31996  014F50  0E00               	movlw	0
 31997  014F52  8EDB               	bsf	plusw2,7,c
 31998  014F54  D008               	goto	l8730
 31999  014F56                     l8728:
 32000                           
 32001                           ;stkvar	_b @ sp[(-4)+-4]
 32002  014F56  0EFA               	movlw	250
 32003  014F58  24E1               	addwf	fsr1l,w,c
 32004  014F5A  6ED9               	movwf	fsr2l,c
 32005  014F5C  0EFF               	movlw	255
 32006  014F5E  20E2               	addwfc	fsr1h,w,c
 32007  014F60  6EDA               	movwf	fsr2h,c
 32008  014F62  0E7F               	movlw	127
 32009  014F64  16DF               	andwf	indf2,f,c
 32010  014F66                     l8730:
 32011                           
 32012                           ;stkvar	_b @ sp[(-4)+-4]
 32013  014F66  0EFB               	movlw	251
 32014  014F68  24E1               	addwf	fsr1l,w,c
 32015  014F6A  6ED9               	movwf	fsr2l,c
 32016  014F6C  0EFF               	movlw	255
 32017  014F6E  20E2               	addwfc	fsr1h,w,c
 32018  014F70  6EDA               	movwf	fsr2h,c
 32019                           
 32020                           ;stkvar	_bexp @ sp[(-4)+1]
 32021  014F72  0EFD               	movlw	-3
 32022  014F74  006F FF8C  F00C    	movff	plusw1,btemp+11
 32023  014F7A  90D8               	bcf	status,0,c
 32024  014F7C  300C               	rrcf	(btemp+11)^0,w,c
 32025  014F7E  6EDF               	movwf	indf2,c
 32026                           
 32027                           ;stkvar	_signs @ sp[(-4)+3]
 32028  014F80  0EFF               	movlw	-1
 32029  014F82  AEE3               	btfss	plusw1,7,c
 32030  014F84  D008               	goto	l8736
 32031                           
 32032                           ;stkvar	_b @ sp[(-4)+-4]
 32033  014F86  0EFB               	movlw	251
 32034  014F88  24E1               	addwf	fsr1l,w,c
 32035  014F8A  6ED9               	movwf	fsr2l,c
 32036  014F8C  0EFF               	movlw	255
 32037  014F8E  20E2               	addwfc	fsr1h,w,c
 32038  014F90  6EDA               	movwf	fsr2h,c
 32039  014F92  0E00               	movlw	0
 32040  014F94  8EDB               	bsf	plusw2,7,c
 32041  014F96                     l8736:
 32042                           
 32043                           ;stkvar	_b @ sp[(-4)+-4]
 32044  014F96  0EF8               	movlw	-8
 32045  014F98  006F FF8C  F001    	movff	plusw1,btemp
 32046  014F9E  0EF9               	movlw	-7
 32047  014FA0  006F FF8C  F002    	movff	plusw1,btemp+1
 32048  014FA6  0EFA               	movlw	-6
 32049  014FA8  006F FF8C  F003    	movff	plusw1,btemp+2
 32050  014FAE  0EFB               	movlw	-5
 32051  014FB0  006F FF8C  F004    	movff	plusw1,btemp+3
 32052  014FB6                     l3216:
 32053                           
 32054                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 32055  014FB6  0EF4               	movlw	244
 32056  014FB8  26E1               	addwf	fsr1l,f,c
 32057  014FBA  0EFF               	movlw	255
 32058  014FBC  22E2               	addwfc	fsr1h,f,c
 32059  014FBE  0012               	return		;funcret
 32060  014FC0                     __end_of___fladd:
 32061                           	opt callstack 0
 32062                           
 32063 ;; *************** function ___flmul *****************
 32064 ;; Defined at:
 32065 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 32066 ;; Parameters:    Size  Location     Type
 32067 ;;  b               4  [STACK] unsigned char 
 32068 ;;  a               4  [STACK] unsigned char 
 32069 ;; Auto vars:     Size  Location     Type
 32070 ;;  prod            4  [STACK] struct .
 32071 ;;  grs             4  [STACK] unsigned long 
 32072 ;;  temp            2  [STACK] struct .
 32073 ;;  bexp            1  [STACK] unsigned char 
 32074 ;;  aexp            1  [STACK] unsigned char 
 32075 ;;  sign            1  [STACK] unsigned char 
 32076 ;; Return value:  Size  Location     Type
 32077 ;;                  4  [STACK] unsigned char 
 32078 ;; Registers used:
 32079 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32080 ;; Tracked objects:
 32081 ;;		On entry : 0/2
 32082 ;;		On exit  : 0/0
 32083 ;;		Unchanged: 0/0
 32084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32089 ;;Total ram usage:        0 bytes
 32090 ;; Hardware stack levels used:    1
 32091 ;; Hardware stack levels required when called:   15
 32092 ;; This function calls:
 32093 ;;		Nothing
 32094 ;; This function is called by:
 32095 ;;		_conv_raw_result
 32096 ;;		_lp_filter
 32097 ;;		_calc_model_data
 32098 ;;		_calc_bsoc
 32099 ;;		_init_bsoc
 32100 ;;		_efgtoa
 32101 ;; This function uses a reentrant model
 32102 ;;
 32103                           
 32104                           	psect	text128
 32105  013FDA                     __ptext128:
 32106                           	opt callstack 0
 32107  013FDA                     ___flmul:
 32108                           	opt callstack 0
 32109                           
 32110                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 32111  013FDA  0E0D               	movlw	13
 32112  013FDC  26E1               	addwf	fsr1l,f,c
 32113  013FDE  0E00               	movlw	0
 32114  013FE0  22E2               	addwfc	fsr1h,f,c
 32115                           
 32116                           ;stkvar	_b @ sp[(-13)+-4]
 32117                           
 32118                           ;incstack = 0
 32119 ;; hardware stack exceeded
 32120  013FE2  0EF2               	movlw	242
 32121  013FE4  24E1               	addwf	fsr1l,w,c
 32122  013FE6  6ED9               	movwf	fsr2l,c
 32123  013FE8  0EFF               	movlw	255
 32124  013FEA  20E2               	addwfc	fsr1h,w,c
 32125  013FEC  6EDA               	movwf	fsr2h,c
 32126  013FEE  50DF               	movf	indf2,w,c
 32127  013FF0  6E0C               	movwf	(btemp+11)^0,c
 32128  013FF2  0E80               	movlw	128
 32129  013FF4  160C               	andwf	(btemp+11)^0,f,c
 32130                           
 32131                           ;stkvar	_sign @ sp[(-13)+12]
 32132  013FF6  0EFF               	movlw	-1
 32133  013FF8  0060  F033  FFE3   	movff	btemp+11,plusw1
 32134                           
 32135                           ;stkvar	_b @ sp[(-13)+-4]
 32136  013FFE  0EF2               	movlw	242
 32137  014000  24E1               	addwf	fsr1l,w,c
 32138  014002  6ED9               	movwf	fsr2l,c
 32139  014004  0EFF               	movlw	255
 32140  014006  20E2               	addwfc	fsr1h,w,c
 32141  014008  6EDA               	movwf	fsr2h,c
 32142  01400A  50DF               	movf	indf2,w,c
 32143  01400C  6E0C               	movwf	(btemp+11)^0,c
 32144  01400E  90D8               	bcf	status,0,c
 32145  014010  340C               	rlcf	(btemp+11)^0,w,c
 32146  014012  6E0B               	movwf	(btemp+10)^0,c
 32147                           
 32148                           ;stkvar	_bexp @ sp[(-13)+10]
 32149  014014  0EFD               	movlw	-3
 32150  014016  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32151                           
 32152                           ;stkvar	_b @ sp[(-13)+-4]
 32153  01401C  0EF1               	movlw	241
 32154  01401E  24E1               	addwf	fsr1l,w,c
 32155  014020  6ED9               	movwf	fsr2l,c
 32156  014022  0EFF               	movlw	255
 32157  014024  20E2               	addwfc	fsr1h,w,c
 32158  014026  6EDA               	movwf	fsr2h,c
 32159  014028  AEDF               	btfss	indf2,7,c
 32160  01402A  D002               	goto	l9162
 32161                           
 32162                           ;stkvar	_bexp @ sp[(-13)+10]
 32163  01402C  0EFD               	movlw	-3
 32164  01402E  80E3               	bsf	plusw1,0,c
 32165  014030                     l9162:
 32166                           
 32167                           ;stkvar	_bexp @ sp[(-13)+10]
 32168  014030  0EFD               	movlw	-3
 32169  014032  50E3               	movf	plusw1,w,c
 32170  014034  B4D8               	btfsc	status,2,c
 32171  014036  D01F               	goto	l9170
 32172                           
 32173                           ;stkvar	_bexp @ sp[(-13)+10]
 32174  014038  0EFD               	movlw	-3
 32175  01403A  28E3               	incf	plusw1,w,c
 32176  01403C  A4D8               	btfss	status,2,c
 32177  01403E  D018               	goto	l9168
 32178  014040  0E00               	movlw	0
 32179  014042  6E09               	movwf	(btemp+8)^0,c
 32180  014044  0E00               	movlw	0
 32181  014046  6E0A               	movwf	(btemp+9)^0,c
 32182  014048  0E00               	movlw	0
 32183  01404A  6E0B               	movwf	(btemp+10)^0,c
 32184  01404C  0E00               	movlw	0
 32185  01404E  6E0C               	movwf	(btemp+11)^0,c
 32186                           
 32187                           ;stkvar	_b @ sp[(-13)+-4]
 32188  014050  0EEF               	movlw	-17
 32189  014052  0060  F027  FFE3   	movff	btemp+8,plusw1
 32190  014058  0EF0               	movlw	-16
 32191  01405A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 32192  014060  0EF1               	movlw	-15
 32193  014062  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32194  014068  0EF2               	movlw	-14
 32195  01406A  0060  F033  FFE3   	movff	btemp+11,plusw1
 32196  014070                     l9168:
 32197                           
 32198                           ;stkvar	_b @ sp[(-13)+-4]
 32199  014070  0EF1               	movlw	-15
 32200  014072  8EE3               	bsf	plusw1,7,c
 32201  014074  D018               	goto	l9172
 32202  014076                     l9170:
 32203  014076  0E00               	movlw	0
 32204  014078  6E09               	movwf	(btemp+8)^0,c
 32205  01407A  0E00               	movlw	0
 32206  01407C  6E0A               	movwf	(btemp+9)^0,c
 32207  01407E  0E00               	movlw	0
 32208  014080  6E0B               	movwf	(btemp+10)^0,c
 32209  014082  0E00               	movlw	0
 32210  014084  6E0C               	movwf	(btemp+11)^0,c
 32211                           
 32212                           ;stkvar	_b @ sp[(-13)+-4]
 32213  014086  0EEF               	movlw	-17
 32214  014088  0060  F027  FFE3   	movff	btemp+8,plusw1
 32215  01408E  0EF0               	movlw	-16
 32216  014090  0060  F02B  FFE3   	movff	btemp+9,plusw1
 32217  014096  0EF1               	movlw	-15
 32218  014098  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32219  01409E  0EF2               	movlw	-14
 32220  0140A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 32221  0140A6                     l9172:
 32222                           
 32223                           ;stkvar	_a @ sp[(-13)+-8]
 32224  0140A6  0EEE               	movlw	238
 32225  0140A8  24E1               	addwf	fsr1l,w,c
 32226  0140AA  6ED9               	movwf	fsr2l,c
 32227  0140AC  0EFF               	movlw	255
 32228  0140AE  20E2               	addwfc	fsr1h,w,c
 32229  0140B0  6EDA               	movwf	fsr2h,c
 32230  0140B2  50DF               	movf	indf2,w,c
 32231  0140B4  6E0C               	movwf	(btemp+11)^0,c
 32232  0140B6  0E80               	movlw	128
 32233  0140B8  160C               	andwf	(btemp+11)^0,f,c
 32234                           
 32235                           ;stkvar	_sign @ sp[(-13)+12]
 32236  0140BA  50E1               	movf	fsr1l,w,c
 32237  0140BC  0FFF               	addlw	-1
 32238  0140BE  6ED9               	movwf	fsr2l,c
 32239  0140C0  50E2               	movf	fsr1h,w,c
 32240  0140C2  6EDA               	movwf	fsr2h,c
 32241  0140C4  0EFF               	movlw	255
 32242  0140C6  22DA               	addwfc	fsr2h,f,c
 32243  0140C8  500C               	movf	(btemp+11)^0,w,c
 32244  0140CA  1ADF               	xorwf	indf2,f,c
 32245                           
 32246                           ;stkvar	_a @ sp[(-13)+-8]
 32247  0140CC  0EEE               	movlw	238
 32248  0140CE  24E1               	addwf	fsr1l,w,c
 32249  0140D0  6ED9               	movwf	fsr2l,c
 32250  0140D2  0EFF               	movlw	255
 32251  0140D4  20E2               	addwfc	fsr1h,w,c
 32252  0140D6  6EDA               	movwf	fsr2h,c
 32253  0140D8  50DF               	movf	indf2,w,c
 32254  0140DA  6E0C               	movwf	(btemp+11)^0,c
 32255  0140DC  90D8               	bcf	status,0,c
 32256  0140DE  340C               	rlcf	(btemp+11)^0,w,c
 32257  0140E0  6E0B               	movwf	(btemp+10)^0,c
 32258                           
 32259                           ;stkvar	_aexp @ sp[(-13)+11]
 32260  0140E2  0EFE               	movlw	-2
 32261  0140E4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32262                           
 32263                           ;stkvar	_a @ sp[(-13)+-8]
 32264  0140EA  0EED               	movlw	237
 32265  0140EC  24E1               	addwf	fsr1l,w,c
 32266  0140EE  6ED9               	movwf	fsr2l,c
 32267  0140F0  0EFF               	movlw	255
 32268  0140F2  20E2               	addwfc	fsr1h,w,c
 32269  0140F4  6EDA               	movwf	fsr2h,c
 32270  0140F6  AEDF               	btfss	indf2,7,c
 32271  0140F8  D002               	goto	l9180
 32272                           
 32273                           ;stkvar	_aexp @ sp[(-13)+11]
 32274  0140FA  0EFE               	movlw	-2
 32275  0140FC  80E3               	bsf	plusw1,0,c
 32276  0140FE                     l9180:
 32277                           
 32278                           ;stkvar	_aexp @ sp[(-13)+11]
 32279  0140FE  0EFE               	movlw	-2
 32280  014100  50E3               	movf	plusw1,w,c
 32281  014102  B4D8               	btfsc	status,2,c
 32282  014104  D01F               	goto	l9188
 32283                           
 32284                           ;stkvar	_aexp @ sp[(-13)+11]
 32285  014106  0EFE               	movlw	-2
 32286  014108  28E3               	incf	plusw1,w,c
 32287  01410A  A4D8               	btfss	status,2,c
 32288  01410C  D018               	goto	l9186
 32289  01410E  0E00               	movlw	0
 32290  014110  6E09               	movwf	(btemp+8)^0,c
 32291  014112  0E00               	movlw	0
 32292  014114  6E0A               	movwf	(btemp+9)^0,c
 32293  014116  0E00               	movlw	0
 32294  014118  6E0B               	movwf	(btemp+10)^0,c
 32295  01411A  0E00               	movlw	0
 32296  01411C  6E0C               	movwf	(btemp+11)^0,c
 32297                           
 32298                           ;stkvar	_a @ sp[(-13)+-8]
 32299  01411E  0EEB               	movlw	-21
 32300  014120  0060  F027  FFE3   	movff	btemp+8,plusw1
 32301  014126  0EEC               	movlw	-20
 32302  014128  0060  F02B  FFE3   	movff	btemp+9,plusw1
 32303  01412E  0EED               	movlw	-19
 32304  014130  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32305  014136  0EEE               	movlw	-18
 32306  014138  0060  F033  FFE3   	movff	btemp+11,plusw1
 32307  01413E                     l9186:
 32308                           
 32309                           ;stkvar	_a @ sp[(-13)+-8]
 32310  01413E  0EED               	movlw	-19
 32311  014140  8EE3               	bsf	plusw1,7,c
 32312  014142  D018               	goto	l9190
 32313  014144                     l9188:
 32314  014144  0E00               	movlw	0
 32315  014146  6E09               	movwf	(btemp+8)^0,c
 32316  014148  0E00               	movlw	0
 32317  01414A  6E0A               	movwf	(btemp+9)^0,c
 32318  01414C  0E00               	movlw	0
 32319  01414E  6E0B               	movwf	(btemp+10)^0,c
 32320  014150  0E00               	movlw	0
 32321  014152  6E0C               	movwf	(btemp+11)^0,c
 32322                           
 32323                           ;stkvar	_a @ sp[(-13)+-8]
 32324  014154  0EEB               	movlw	-21
 32325  014156  0060  F027  FFE3   	movff	btemp+8,plusw1
 32326  01415C  0EEC               	movlw	-20
 32327  01415E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 32328  014164  0EED               	movlw	-19
 32329  014166  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32330  01416C  0EEE               	movlw	-18
 32331  01416E  0060  F033  FFE3   	movff	btemp+11,plusw1
 32332  014174                     l9190:
 32333                           
 32334                           ;stkvar	_aexp @ sp[(-13)+11]
 32335  014174  0EFE               	movlw	-2
 32336  014176  50E3               	movf	plusw1,w,c
 32337  014178  B4D8               	btfsc	status,2,c
 32338  01417A  D004               	goto	u7410
 32339                           
 32340                           ;stkvar	_bexp @ sp[(-13)+10]
 32341  01417C  0EFD               	movlw	-3
 32342  01417E  50E3               	movf	plusw1,w,c
 32343  014180  A4D8               	btfss	status,2,c
 32344  014182  D009               	goto	l9198
 32345  014184                     u7410:
 32346  014184  0E00               	movlw	0
 32347  014186  6E01               	movwf	btemp^0,c
 32348  014188  0E00               	movlw	0
 32349  01418A  6E02               	movwf	(btemp+1)^0,c
 32350  01418C  0E00               	movlw	0
 32351  01418E  6E03               	movwf	(btemp+2)^0,c
 32352  014190  0E00               	movlw	0
 32353  014192  6E04               	movwf	(btemp+3)^0,c
 32354  014194  D332               	goto	l3297
 32355  014196                     l9198:
 32356                           
 32357                           ;stkvar	_b @ sp[(-13)+-4]
 32358  014196  0EEF               	movlw	-17
 32359  014198  006F FF8C  F00C    	movff	plusw1,btemp+11
 32360                           
 32361                           ;stkvar	_a @ sp[(-13)+-8]
 32362  01419E  0EED               	movlw	237
 32363  0141A0  24E1               	addwf	fsr1l,w,c
 32364  0141A2  6ED9               	movwf	fsr2l,c
 32365  0141A4  0EFF               	movlw	255
 32366  0141A6  20E2               	addwfc	fsr1h,w,c
 32367  0141A8  6EDA               	movwf	fsr2h,c
 32368  0141AA  50DF               	movf	indf2,w,c
 32369  0141AC  020C               	mulwf	(btemp+11)^0,c
 32370                           
 32371                           ;stkvar	_temp @ sp[(-13)+8]
 32372  0141AE  0EFB               	movlw	-5
 32373  0141B0  006F FFCF FFE3     	movff	prodl,plusw1
 32374  0141B6  0EFC               	movlw	-4
 32375  0141B8  006F FFD3 FFE3     	movff	prodh,plusw1
 32376                           
 32377                           ;stkvar	_temp @ sp[(-13)+8]
 32378  0141BE  0EFB               	movlw	-5
 32379  0141C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 32380  0141C6  0060  F030  F005   	movff	btemp+11,btemp+4
 32381  0141CC  6A06               	clrf	(btemp+5)^0,c
 32382  0141CE  6A07               	clrf	(btemp+6)^0,c
 32383  0141D0  6A08               	clrf	(btemp+7)^0,c
 32384                           
 32385                           ;stkvar	_grs @ sp[(-13)+4]
 32386  0141D2  0EF7               	movlw	-9
 32387  0141D4  0060  F017  FFE3   	movff	btemp+4,plusw1
 32388  0141DA  0EF8               	movlw	-8
 32389  0141DC  0060  F01B  FFE3   	movff	btemp+5,plusw1
 32390  0141E2  0EF9               	movlw	-7
 32391  0141E4  0060  F01F  FFE3   	movff	btemp+6,plusw1
 32392  0141EA  0EFA               	movlw	-6
 32393  0141EC  0060  F023  FFE3   	movff	btemp+7,plusw1
 32394                           
 32395                           ;stkvar	_temp @ sp[(-13)+8]
 32396  0141F2  0EFC               	movlw	252
 32397  0141F4  24E1               	addwf	fsr1l,w,c
 32398  0141F6  6ED9               	movwf	fsr2l,c
 32399  0141F8  0EFF               	movlw	255
 32400  0141FA  20E2               	addwfc	fsr1h,w,c
 32401  0141FC  6EDA               	movwf	fsr2h,c
 32402  0141FE  50DF               	movf	indf2,w,c
 32403  014200  6E0C               	movwf	(btemp+11)^0,c
 32404  014202  0060  F030  F005   	movff	btemp+11,btemp+4
 32405  014208  6A06               	clrf	(btemp+5)^0,c
 32406  01420A  6A07               	clrf	(btemp+6)^0,c
 32407  01420C  6A08               	clrf	(btemp+7)^0,c
 32408                           
 32409                           ;stkvar	_prod @ sp[(-13)+0]
 32410  01420E  0EF3               	movlw	-13
 32411  014210  0060  F017  FFE3   	movff	btemp+4,plusw1
 32412  014216  0EF4               	movlw	-12
 32413  014218  0060  F01B  FFE3   	movff	btemp+5,plusw1
 32414  01421E  0EF5               	movlw	-11
 32415  014220  0060  F01F  FFE3   	movff	btemp+6,plusw1
 32416  014226  0EF6               	movlw	-10
 32417  014228  0060  F023  FFE3   	movff	btemp+7,plusw1
 32418                           
 32419                           ;stkvar	_b @ sp[(-13)+-4]
 32420  01422E  0EF0               	movlw	240
 32421  014230  24E1               	addwf	fsr1l,w,c
 32422  014232  6ED9               	movwf	fsr2l,c
 32423  014234  0EFF               	movlw	255
 32424  014236  20E2               	addwfc	fsr1h,w,c
 32425  014238  6EDA               	movwf	fsr2h,c
 32426  01423A  50DF               	movf	indf2,w,c
 32427  01423C  6E0C               	movwf	(btemp+11)^0,c
 32428                           
 32429                           ;stkvar	_a @ sp[(-13)+-8]
 32430  01423E  0EEC               	movlw	236
 32431  014240  24E1               	addwf	fsr1l,w,c
 32432  014242  6ED9               	movwf	fsr2l,c
 32433  014244  0EFF               	movlw	255
 32434  014246  20E2               	addwfc	fsr1h,w,c
 32435  014248  6EDA               	movwf	fsr2h,c
 32436  01424A  50DF               	movf	indf2,w,c
 32437  01424C  020C               	mulwf	(btemp+11)^0,c
 32438                           
 32439                           ;stkvar	_temp @ sp[(-13)+8]
 32440  01424E  0EFB               	movlw	-5
 32441  014250  006F FFCF FFE3     	movff	prodl,plusw1
 32442  014256  0EFC               	movlw	-4
 32443  014258  006F FFD3 FFE3     	movff	prodh,plusw1
 32444                           
 32445                           ;stkvar	_grs @ sp[(-13)+4]
 32446  01425E  50E1               	movf	fsr1l,w,c
 32447  014260  0FF7               	addlw	-9
 32448  014262  6ED9               	movwf	fsr2l,c
 32449  014264  50E2               	movf	fsr1h,w,c
 32450  014266  6EDA               	movwf	fsr2h,c
 32451  014268  0EFF               	movlw	255
 32452  01426A  22DA               	addwfc	fsr2h,f,c
 32453                           
 32454                           ;stkvar	_temp @ sp[(-13)+8]
 32455  01426C  0EFB               	movlw	-5
 32456  01426E  50E3               	movf	plusw1,w,c
 32457  014270  26DE               	addwf	postinc2,f,c
 32458  014272  0E00               	movlw	0
 32459  014274  22DE               	addwfc	postinc2,f,c
 32460  014276  22DE               	addwfc	postinc2,f,c
 32461  014278  22DE               	addwfc	postinc2,f,c
 32462                           
 32463                           ;stkvar	_prod @ sp[(-13)+0]
 32464  01427A  50E1               	movf	fsr1l,w,c
 32465  01427C  0FF3               	addlw	-13
 32466  01427E  6ED9               	movwf	fsr2l,c
 32467  014280  50E2               	movf	fsr1h,w,c
 32468  014282  6EDA               	movwf	fsr2h,c
 32469  014284  0EFF               	movlw	255
 32470  014286  22DA               	addwfc	fsr2h,f,c
 32471                           
 32472                           ;stkvar	_temp @ sp[(-13)+8]
 32473  014288  0EFC               	movlw	252
 32474  01428A  24E1               	addwf	fsr1l,w,c
 32475  01428C  6EE9               	movwf	fsr0l,c
 32476  01428E  0EFF               	movlw	255
 32477  014290  20E2               	addwfc	fsr1h,w,c
 32478  014292  6EEA               	movwf	fsr0h,c
 32479  014294  50EF               	movf	indf0,w,c
 32480  014296  26DE               	addwf	postinc2,f,c
 32481  014298  0E00               	movlw	0
 32482  01429A  22DE               	addwfc	postinc2,f,c
 32483  01429C  22DE               	addwfc	postinc2,f,c
 32484  01429E  22DE               	addwfc	postinc2,f,c
 32485                           
 32486                           ;stkvar	_b @ sp[(-13)+-4]
 32487  0142A0  0EF1               	movlw	241
 32488  0142A2  24E1               	addwf	fsr1l,w,c
 32489  0142A4  6ED9               	movwf	fsr2l,c
 32490  0142A6  0EFF               	movlw	255
 32491  0142A8  20E2               	addwfc	fsr1h,w,c
 32492  0142AA  6EDA               	movwf	fsr2h,c
 32493  0142AC  50DF               	movf	indf2,w,c
 32494  0142AE  6E0C               	movwf	(btemp+11)^0,c
 32495                           
 32496                           ;stkvar	_a @ sp[(-13)+-8]
 32497  0142B0  0EEB               	movlw	-21
 32498  0142B2  50E3               	movf	plusw1,w,c
 32499  0142B4  020C               	mulwf	(btemp+11)^0,c
 32500                           
 32501                           ;stkvar	_temp @ sp[(-13)+8]
 32502  0142B6  0EFB               	movlw	-5
 32503  0142B8  006F FFCF FFE3     	movff	prodl,plusw1
 32504  0142BE  0EFC               	movlw	-4
 32505  0142C0  006F FFD3 FFE3     	movff	prodh,plusw1
 32506                           
 32507                           ;stkvar	_grs @ sp[(-13)+4]
 32508  0142C6  50E1               	movf	fsr1l,w,c
 32509  0142C8  0FF7               	addlw	-9
 32510  0142CA  6ED9               	movwf	fsr2l,c
 32511  0142CC  50E2               	movf	fsr1h,w,c
 32512  0142CE  6EDA               	movwf	fsr2h,c
 32513  0142D0  0EFF               	movlw	255
 32514  0142D2  22DA               	addwfc	fsr2h,f,c
 32515                           
 32516                           ;stkvar	_temp @ sp[(-13)+8]
 32517  0142D4  0EFB               	movlw	-5
 32518  0142D6  50E3               	movf	plusw1,w,c
 32519  0142D8  26DE               	addwf	postinc2,f,c
 32520  0142DA  0E00               	movlw	0
 32521  0142DC  22DE               	addwfc	postinc2,f,c
 32522  0142DE  22DE               	addwfc	postinc2,f,c
 32523  0142E0  22DE               	addwfc	postinc2,f,c
 32524                           
 32525                           ;stkvar	_prod @ sp[(-13)+0]
 32526  0142E2  50E1               	movf	fsr1l,w,c
 32527  0142E4  0FF3               	addlw	-13
 32528  0142E6  6ED9               	movwf	fsr2l,c
 32529  0142E8  50E2               	movf	fsr1h,w,c
 32530  0142EA  6EDA               	movwf	fsr2h,c
 32531  0142EC  0EFF               	movlw	255
 32532  0142EE  22DA               	addwfc	fsr2h,f,c
 32533                           
 32534                           ;stkvar	_temp @ sp[(-13)+8]
 32535  0142F0  0EFC               	movlw	252
 32536  0142F2  24E1               	addwf	fsr1l,w,c
 32537  0142F4  6EE9               	movwf	fsr0l,c
 32538  0142F6  0EFF               	movlw	255
 32539  0142F8  20E2               	addwfc	fsr1h,w,c
 32540  0142FA  6EEA               	movwf	fsr0h,c
 32541  0142FC  50EF               	movf	indf0,w,c
 32542  0142FE  26DE               	addwf	postinc2,f,c
 32543  014300  0E00               	movlw	0
 32544  014302  22DE               	addwfc	postinc2,f,c
 32545  014304  22DE               	addwfc	postinc2,f,c
 32546  014306  22DE               	addwfc	postinc2,f,c
 32547                           
 32548                           ;stkvar	_grs @ sp[(-13)+4]
 32549  014308  50E1               	movf	fsr1l,w,c
 32550  01430A  0FF7               	addlw	-9
 32551  01430C  6ED9               	movwf	fsr2l,c
 32552  01430E  50E2               	movf	fsr1h,w,c
 32553  014310  6EDA               	movwf	fsr2h,c
 32554  014312  0EFF               	movlw	255
 32555  014314  22DA               	addwfc	fsr2h,f,c
 32556  014316  0E08               	movlw	8
 32557  014318                     u7425:
 32558  014318  90D8               	bcf	status,0,c
 32559  01431A  36DE               	rlcf	postinc2,f,c
 32560  01431C  36DE               	rlcf	postinc2,f,c
 32561  01431E  36DE               	rlcf	postinc2,f,c
 32562  014320  36DD               	rlcf	postdec2,f,c
 32563  014322  52DD               	movf	postdec2,f,c
 32564  014324  52DD               	movf	postdec2,f,c
 32565  014326  2EE8               	decfsz	wreg,f,c
 32566  014328  D7F7               	goto	u7425
 32567                           
 32568                           ;stkvar	_b @ sp[(-13)+-4]
 32569  01432A  0EF0               	movlw	240
 32570  01432C  24E1               	addwf	fsr1l,w,c
 32571  01432E  6ED9               	movwf	fsr2l,c
 32572  014330  0EFF               	movlw	255
 32573  014332  20E2               	addwfc	fsr1h,w,c
 32574  014334  6EDA               	movwf	fsr2h,c
 32575  014336  50DF               	movf	indf2,w,c
 32576  014338  6E0C               	movwf	(btemp+11)^0,c
 32577                           
 32578                           ;stkvar	_a @ sp[(-13)+-8]
 32579  01433A  0EEB               	movlw	-21
 32580  01433C  50E3               	movf	plusw1,w,c
 32581  01433E  020C               	mulwf	(btemp+11)^0,c
 32582                           
 32583                           ;stkvar	_temp @ sp[(-13)+8]
 32584  014340  0EFB               	movlw	-5
 32585  014342  006F FFCF FFE3     	movff	prodl,plusw1
 32586  014348  0EFC               	movlw	-4
 32587  01434A  006F FFD3 FFE3     	movff	prodh,plusw1
 32588                           
 32589                           ;stkvar	_temp @ sp[(-13)+8]
 32590  014350  0EFB               	movlw	-5
 32591  014352  006F FF8C  F00B    	movff	plusw1,btemp+10
 32592  014358  0EFC               	movlw	-4
 32593  01435A  006F FF8C  F00C    	movff	plusw1,btemp+11
 32594                           
 32595                           ;stkvar	_grs @ sp[(-13)+4]
 32596  014360  50E1               	movf	fsr1l,w,c
 32597  014362  0FF7               	addlw	-9
 32598  014364  6ED9               	movwf	fsr2l,c
 32599  014366  50E2               	movf	fsr1h,w,c
 32600  014368  6EDA               	movwf	fsr2h,c
 32601  01436A  0EFF               	movlw	255
 32602  01436C  22DA               	addwfc	fsr2h,f,c
 32603  01436E  500B               	movf	(btemp+10)^0,w,c
 32604  014370  26DE               	addwf	postinc2,f,c
 32605  014372  500C               	movf	(btemp+11)^0,w,c
 32606  014374  22DE               	addwfc	postinc2,f,c
 32607  014376  0E00               	movlw	0
 32608  014378  22DE               	addwfc	postinc2,f,c
 32609  01437A  22DE               	addwfc	postinc2,f,c
 32610                           
 32611                           ;stkvar	_b @ sp[(-13)+-4]
 32612  01437C  0EEF               	movlw	-17
 32613  01437E  006F FF8C  F00C    	movff	plusw1,btemp+11
 32614                           
 32615                           ;stkvar	_a @ sp[(-13)+-8]
 32616  014384  0EEC               	movlw	236
 32617  014386  24E1               	addwf	fsr1l,w,c
 32618  014388  6ED9               	movwf	fsr2l,c
 32619  01438A  0EFF               	movlw	255
 32620  01438C  20E2               	addwfc	fsr1h,w,c
 32621  01438E  6EDA               	movwf	fsr2h,c
 32622  014390  50DF               	movf	indf2,w,c
 32623  014392  020C               	mulwf	(btemp+11)^0,c
 32624                           
 32625                           ;stkvar	_temp @ sp[(-13)+8]
 32626  014394  0EFB               	movlw	-5
 32627  014396  006F FFCF FFE3     	movff	prodl,plusw1
 32628  01439C  0EFC               	movlw	-4
 32629  01439E  006F FFD3 FFE3     	movff	prodh,plusw1
 32630                           
 32631                           ;stkvar	_temp @ sp[(-13)+8]
 32632  0143A4  0EFB               	movlw	-5
 32633  0143A6  006F FF8C  F00B    	movff	plusw1,btemp+10
 32634  0143AC  0EFC               	movlw	-4
 32635  0143AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 32636                           
 32637                           ;stkvar	_grs @ sp[(-13)+4]
 32638  0143B4  50E1               	movf	fsr1l,w,c
 32639  0143B6  0FF7               	addlw	-9
 32640  0143B8  6ED9               	movwf	fsr2l,c
 32641  0143BA  50E2               	movf	fsr1h,w,c
 32642  0143BC  6EDA               	movwf	fsr2h,c
 32643  0143BE  0EFF               	movlw	255
 32644  0143C0  22DA               	addwfc	fsr2h,f,c
 32645  0143C2  500B               	movf	(btemp+10)^0,w,c
 32646  0143C4  26DE               	addwf	postinc2,f,c
 32647  0143C6  500C               	movf	(btemp+11)^0,w,c
 32648  0143C8  22DE               	addwfc	postinc2,f,c
 32649  0143CA  0E00               	movlw	0
 32650  0143CC  22DE               	addwfc	postinc2,f,c
 32651  0143CE  22DE               	addwfc	postinc2,f,c
 32652                           
 32653                           ;stkvar	_grs @ sp[(-13)+4]
 32654  0143D0  50E1               	movf	fsr1l,w,c
 32655  0143D2  0FF7               	addlw	-9
 32656  0143D4  6ED9               	movwf	fsr2l,c
 32657  0143D6  50E2               	movf	fsr1h,w,c
 32658  0143D8  6EDA               	movwf	fsr2h,c
 32659  0143DA  0EFF               	movlw	255
 32660  0143DC  22DA               	addwfc	fsr2h,f,c
 32661  0143DE  0E08               	movlw	8
 32662  0143E0                     u7435:
 32663  0143E0  90D8               	bcf	status,0,c
 32664  0143E2  36DE               	rlcf	postinc2,f,c
 32665  0143E4  36DE               	rlcf	postinc2,f,c
 32666  0143E6  36DE               	rlcf	postinc2,f,c
 32667  0143E8  36DD               	rlcf	postdec2,f,c
 32668  0143EA  52DD               	movf	postdec2,f,c
 32669  0143EC  52DD               	movf	postdec2,f,c
 32670  0143EE  2EE8               	decfsz	wreg,f,c
 32671  0143F0  D7F7               	goto	u7435
 32672                           
 32673                           ;stkvar	_b @ sp[(-13)+-4]
 32674  0143F2  0EEF               	movlw	-17
 32675  0143F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 32676                           
 32677                           ;stkvar	_a @ sp[(-13)+-8]
 32678  0143FA  0EEB               	movlw	-21
 32679  0143FC  50E3               	movf	plusw1,w,c
 32680  0143FE  020C               	mulwf	(btemp+11)^0,c
 32681                           
 32682                           ;stkvar	_temp @ sp[(-13)+8]
 32683  014400  0EFB               	movlw	-5
 32684  014402  006F FFCF FFE3     	movff	prodl,plusw1
 32685  014408  0EFC               	movlw	-4
 32686  01440A  006F FFD3 FFE3     	movff	prodh,plusw1
 32687                           
 32688                           ;stkvar	_temp @ sp[(-13)+8]
 32689  014410  0EFB               	movlw	-5
 32690  014412  006F FF8C  F00B    	movff	plusw1,btemp+10
 32691  014418  0EFC               	movlw	-4
 32692  01441A  006F FF8C  F00C    	movff	plusw1,btemp+11
 32693                           
 32694                           ;stkvar	_grs @ sp[(-13)+4]
 32695  014420  50E1               	movf	fsr1l,w,c
 32696  014422  0FF7               	addlw	-9
 32697  014424  6ED9               	movwf	fsr2l,c
 32698  014426  50E2               	movf	fsr1h,w,c
 32699  014428  6EDA               	movwf	fsr2h,c
 32700  01442A  0EFF               	movlw	255
 32701  01442C  22DA               	addwfc	fsr2h,f,c
 32702  01442E  500B               	movf	(btemp+10)^0,w,c
 32703  014430  26DE               	addwf	postinc2,f,c
 32704  014432  500C               	movf	(btemp+11)^0,w,c
 32705  014434  22DE               	addwfc	postinc2,f,c
 32706  014436  0E00               	movlw	0
 32707  014438  22DE               	addwfc	postinc2,f,c
 32708  01443A  22DE               	addwfc	postinc2,f,c
 32709                           
 32710                           ;stkvar	_b @ sp[(-13)+-4]
 32711  01443C  0EF0               	movlw	240
 32712  01443E  24E1               	addwf	fsr1l,w,c
 32713  014440  6ED9               	movwf	fsr2l,c
 32714  014442  0EFF               	movlw	255
 32715  014444  20E2               	addwfc	fsr1h,w,c
 32716  014446  6EDA               	movwf	fsr2h,c
 32717  014448  50DF               	movf	indf2,w,c
 32718  01444A  6E0C               	movwf	(btemp+11)^0,c
 32719                           
 32720                           ;stkvar	_a @ sp[(-13)+-8]
 32721  01444C  0EED               	movlw	237
 32722  01444E  24E1               	addwf	fsr1l,w,c
 32723  014450  6ED9               	movwf	fsr2l,c
 32724  014452  0EFF               	movlw	255
 32725  014454  20E2               	addwfc	fsr1h,w,c
 32726  014456  6EDA               	movwf	fsr2h,c
 32727  014458  50DF               	movf	indf2,w,c
 32728  01445A  020C               	mulwf	(btemp+11)^0,c
 32729                           
 32730                           ;stkvar	_temp @ sp[(-13)+8]
 32731  01445C  0EFB               	movlw	-5
 32732  01445E  006F FFCF FFE3     	movff	prodl,plusw1
 32733  014464  0EFC               	movlw	-4
 32734  014466  006F FFD3 FFE3     	movff	prodh,plusw1
 32735                           
 32736                           ;stkvar	_temp @ sp[(-13)+8]
 32737  01446C  0EFB               	movlw	-5
 32738  01446E  006F FF8C  F00B    	movff	plusw1,btemp+10
 32739  014474  0EFC               	movlw	-4
 32740  014476  006F FF8C  F00C    	movff	plusw1,btemp+11
 32741                           
 32742                           ;stkvar	_prod @ sp[(-13)+0]
 32743  01447C  50E1               	movf	fsr1l,w,c
 32744  01447E  0FF3               	addlw	-13
 32745  014480  6ED9               	movwf	fsr2l,c
 32746  014482  50E2               	movf	fsr1h,w,c
 32747  014484  6EDA               	movwf	fsr2h,c
 32748  014486  0EFF               	movlw	255
 32749  014488  22DA               	addwfc	fsr2h,f,c
 32750  01448A  500B               	movf	(btemp+10)^0,w,c
 32751  01448C  26DE               	addwf	postinc2,f,c
 32752  01448E  500C               	movf	(btemp+11)^0,w,c
 32753  014490  22DE               	addwfc	postinc2,f,c
 32754  014492  0E00               	movlw	0
 32755  014494  22DE               	addwfc	postinc2,f,c
 32756  014496  22DE               	addwfc	postinc2,f,c
 32757                           
 32758                           ;stkvar	_b @ sp[(-13)+-4]
 32759  014498  0EF1               	movlw	241
 32760  01449A  24E1               	addwf	fsr1l,w,c
 32761  01449C  6ED9               	movwf	fsr2l,c
 32762  01449E  0EFF               	movlw	255
 32763  0144A0  20E2               	addwfc	fsr1h,w,c
 32764  0144A2  6EDA               	movwf	fsr2h,c
 32765  0144A4  50DF               	movf	indf2,w,c
 32766  0144A6  6E0C               	movwf	(btemp+11)^0,c
 32767                           
 32768                           ;stkvar	_a @ sp[(-13)+-8]
 32769  0144A8  0EEC               	movlw	236
 32770  0144AA  24E1               	addwf	fsr1l,w,c
 32771  0144AC  6ED9               	movwf	fsr2l,c
 32772  0144AE  0EFF               	movlw	255
 32773  0144B0  20E2               	addwfc	fsr1h,w,c
 32774  0144B2  6EDA               	movwf	fsr2h,c
 32775  0144B4  50DF               	movf	indf2,w,c
 32776  0144B6  020C               	mulwf	(btemp+11)^0,c
 32777                           
 32778                           ;stkvar	_temp @ sp[(-13)+8]
 32779  0144B8  0EFB               	movlw	-5
 32780  0144BA  006F FFCF FFE3     	movff	prodl,plusw1
 32781  0144C0  0EFC               	movlw	-4
 32782  0144C2  006F FFD3 FFE3     	movff	prodh,plusw1
 32783                           
 32784                           ;stkvar	_temp @ sp[(-13)+8]
 32785  0144C8  0EFB               	movlw	-5
 32786  0144CA  006F FF8C  F00B    	movff	plusw1,btemp+10
 32787  0144D0  0EFC               	movlw	-4
 32788  0144D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 32789                           
 32790                           ;stkvar	_prod @ sp[(-13)+0]
 32791  0144D8  50E1               	movf	fsr1l,w,c
 32792  0144DA  0FF3               	addlw	-13
 32793  0144DC  6ED9               	movwf	fsr2l,c
 32794  0144DE  50E2               	movf	fsr1h,w,c
 32795  0144E0  6EDA               	movwf	fsr2h,c
 32796  0144E2  0EFF               	movlw	255
 32797  0144E4  22DA               	addwfc	fsr2h,f,c
 32798  0144E6  500B               	movf	(btemp+10)^0,w,c
 32799  0144E8  26DE               	addwf	postinc2,f,c
 32800  0144EA  500C               	movf	(btemp+11)^0,w,c
 32801  0144EC  22DE               	addwfc	postinc2,f,c
 32802  0144EE  0E00               	movlw	0
 32803  0144F0  22DE               	addwfc	postinc2,f,c
 32804  0144F2  22DE               	addwfc	postinc2,f,c
 32805                           
 32806                           ;stkvar	_b @ sp[(-13)+-4]
 32807  0144F4  0EF1               	movlw	241
 32808  0144F6  24E1               	addwf	fsr1l,w,c
 32809  0144F8  6ED9               	movwf	fsr2l,c
 32810  0144FA  0EFF               	movlw	255
 32811  0144FC  20E2               	addwfc	fsr1h,w,c
 32812  0144FE  6EDA               	movwf	fsr2h,c
 32813  014500  50DF               	movf	indf2,w,c
 32814  014502  6E0C               	movwf	(btemp+11)^0,c
 32815                           
 32816                           ;stkvar	_a @ sp[(-13)+-8]
 32817  014504  0EED               	movlw	237
 32818  014506  24E1               	addwf	fsr1l,w,c
 32819  014508  6ED9               	movwf	fsr2l,c
 32820  01450A  0EFF               	movlw	255
 32821  01450C  20E2               	addwfc	fsr1h,w,c
 32822  01450E  6EDA               	movwf	fsr2h,c
 32823  014510  50DF               	movf	indf2,w,c
 32824  014512  020C               	mulwf	(btemp+11)^0,c
 32825                           
 32826                           ;stkvar	_temp @ sp[(-13)+8]
 32827  014514  0EFB               	movlw	-5
 32828  014516  006F FFCF FFE3     	movff	prodl,plusw1
 32829  01451C  0EFC               	movlw	-4
 32830  01451E  006F FFD3 FFE3     	movff	prodh,plusw1
 32831                           
 32832                           ;stkvar	_temp @ sp[(-13)+8]
 32833  014524  0EFB               	movlw	-5
 32834  014526  006F FF8C  F00B    	movff	plusw1,btemp+10
 32835  01452C  0EFC               	movlw	-4
 32836  01452E  006F FF8C  F00C    	movff	plusw1,btemp+11
 32837  014534  500B               	movf	(btemp+10)^0,w,c
 32838  014536  6E05               	movwf	(btemp+4)^0,c
 32839  014538  500C               	movf	(btemp+11)^0,w,c
 32840  01453A  6E06               	movwf	(btemp+5)^0,c
 32841  01453C  6A07               	clrf	(btemp+6)^0,c
 32842  01453E  6A08               	clrf	(btemp+7)^0,c
 32843  014540  0060  F01C  F008   	movff	btemp+6,btemp+7
 32844  014546  0060  F018  F007   	movff	btemp+5,btemp+6
 32845  01454C  0060  F014  F006   	movff	btemp+4,btemp+5
 32846  014552  6A05               	clrf	(btemp+4)^0,c
 32847                           
 32848                           ;stkvar	_prod @ sp[(-13)+0]
 32849  014554  50E1               	movf	fsr1l,w,c
 32850  014556  0FF3               	addlw	-13
 32851  014558  6ED9               	movwf	fsr2l,c
 32852  01455A  50E2               	movf	fsr1h,w,c
 32853  01455C  6EDA               	movwf	fsr2h,c
 32854  01455E  0EFF               	movlw	255
 32855  014560  22DA               	addwfc	fsr2h,f,c
 32856  014562  5005               	movf	(btemp+4)^0,w,c
 32857  014564  26DE               	addwf	postinc2,f,c
 32858  014566  5006               	movf	(btemp+5)^0,w,c
 32859  014568  22DE               	addwfc	postinc2,f,c
 32860  01456A  5007               	movf	(btemp+6)^0,w,c
 32861  01456C  22DE               	addwfc	postinc2,f,c
 32862  01456E  5008               	movf	(btemp+7)^0,w,c
 32863  014570  22DE               	addwfc	postinc2,f,c
 32864                           
 32865                           ;stkvar	_prod @ sp[(-13)+0]
 32866  014572  50E1               	movf	fsr1l,w,c
 32867  014574  0FF3               	addlw	-13
 32868  014576  6ED9               	movwf	fsr2l,c
 32869  014578  50E2               	movf	fsr1h,w,c
 32870  01457A  6EDA               	movwf	fsr2h,c
 32871  01457C  0EFF               	movlw	255
 32872  01457E  22DA               	addwfc	fsr2h,f,c
 32873                           
 32874                           ;stkvar	_grs @ sp[(-13)+4]
 32875  014580  0EFA               	movlw	250
 32876  014582  24E1               	addwf	fsr1l,w,c
 32877  014584  6EE9               	movwf	fsr0l,c
 32878  014586  0EFF               	movlw	255
 32879  014588  20E2               	addwfc	fsr1h,w,c
 32880  01458A  6EEA               	movwf	fsr0h,c
 32881  01458C  50EF               	movf	indf0,w,c
 32882  01458E  26DE               	addwf	postinc2,f,c
 32883  014590  0E00               	movlw	0
 32884  014592  22DE               	addwfc	postinc2,f,c
 32885  014594  22DE               	addwfc	postinc2,f,c
 32886  014596  22DE               	addwfc	postinc2,f,c
 32887                           
 32888                           ;stkvar	_grs @ sp[(-13)+4]
 32889  014598  50E1               	movf	fsr1l,w,c
 32890  01459A  0FF7               	addlw	-9
 32891  01459C  6ED9               	movwf	fsr2l,c
 32892  01459E  50E2               	movf	fsr1h,w,c
 32893  0145A0  6EDA               	movwf	fsr2h,c
 32894  0145A2  0EFF               	movlw	255
 32895  0145A4  22DA               	addwfc	fsr2h,f,c
 32896  0145A6  0E08               	movlw	8
 32897  0145A8                     u7445:
 32898  0145A8  90D8               	bcf	status,0,c
 32899  0145AA  36DE               	rlcf	postinc2,f,c
 32900  0145AC  36DE               	rlcf	postinc2,f,c
 32901  0145AE  36DE               	rlcf	postinc2,f,c
 32902  0145B0  36DD               	rlcf	postdec2,f,c
 32903  0145B2  52DD               	movf	postdec2,f,c
 32904  0145B4  52DD               	movf	postdec2,f,c
 32905  0145B6  2EE8               	decfsz	wreg,f,c
 32906  0145B8  D7F7               	goto	u7445
 32907  0145BA  0E82               	movlw	130
 32908  0145BC  6E0B               	movwf	(btemp+10)^0,c
 32909  0145BE  0EFF               	movlw	255
 32910  0145C0  6E0C               	movwf	(btemp+11)^0,c
 32911                           
 32912                           ;stkvar	_bexp @ sp[(-13)+10]
 32913  0145C2  0EFD               	movlw	-3
 32914  0145C4  50E3               	movf	plusw1,w,c
 32915  0145C6  6E09               	movwf	(btemp+8)^0,c
 32916  0145C8  6A0A               	clrf	(btemp+9)^0,c
 32917                           
 32918                           ;stkvar	_aexp @ sp[(-13)+11]
 32919  0145CA  0EFE               	movlw	-2
 32920  0145CC  50E3               	movf	plusw1,w,c
 32921  0145CE  2609               	addwf	(btemp+8)^0,f,c
 32922  0145D0  0E00               	movlw	0
 32923  0145D2  220A               	addwfc	(btemp+9)^0,f,c
 32924  0145D4  500B               	movf	(btemp+10)^0,w,c
 32925  0145D6  2609               	addwf	(btemp+8)^0,f,c
 32926  0145D8  500C               	movf	(btemp+11)^0,w,c
 32927  0145DA  220A               	addwfc	(btemp+9)^0,f,c
 32928                           
 32929                           ;stkvar	_temp @ sp[(-13)+8]
 32930  0145DC  0EFB               	movlw	-5
 32931  0145DE  0060  F027  FFE3   	movff	btemp+8,plusw1
 32932  0145E4  0EFC               	movlw	-4
 32933  0145E6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 32934  0145EC  D021               	goto	l9260
 32935  0145EE                     l9250:
 32936                           
 32937                           ;stkvar	_prod @ sp[(-13)+0]
 32938  0145EE  90D8               	bcf	status,0,c
 32939  0145F0  0EF3               	movlw	-13
 32940  0145F2  36E3               	rlcf	plusw1,f,c
 32941  0145F4  0EF4               	movlw	-12
 32942  0145F6  36E3               	rlcf	plusw1,f,c
 32943  0145F8  0EF5               	movlw	-11
 32944  0145FA  36E3               	rlcf	plusw1,f,c
 32945  0145FC  0EF6               	movlw	-10
 32946  0145FE  36E3               	rlcf	plusw1,f,c
 32947                           
 32948                           ;stkvar	_grs @ sp[(-13)+4]
 32949  014600  0EFA               	movlw	-6
 32950  014602  AEE3               	btfss	plusw1,7,c
 32951  014604  D002               	goto	l9256
 32952                           
 32953                           ;stkvar	_prod @ sp[(-13)+0]
 32954  014606  0EF3               	movlw	-13
 32955  014608  80E3               	bsf	plusw1,0,c
 32956  01460A                     l9256:
 32957                           
 32958                           ;stkvar	_grs @ sp[(-13)+4]
 32959  01460A  90D8               	bcf	status,0,c
 32960  01460C  0EF7               	movlw	-9
 32961  01460E  36E3               	rlcf	plusw1,f,c
 32962  014610  0EF8               	movlw	-8
 32963  014612  36E3               	rlcf	plusw1,f,c
 32964  014614  0EF9               	movlw	-7
 32965  014616  36E3               	rlcf	plusw1,f,c
 32966  014618  0EFA               	movlw	-6
 32967  01461A  36E3               	rlcf	plusw1,f,c
 32968                           
 32969                           ;stkvar	_temp @ sp[(-13)+8]
 32970  01461C  50E1               	movf	fsr1l,w,c
 32971  01461E  0FFB               	addlw	-5
 32972  014620  6ED9               	movwf	fsr2l,c
 32973  014622  50E2               	movf	fsr1h,w,c
 32974  014624  6EDA               	movwf	fsr2h,c
 32975  014626  0EFF               	movlw	255
 32976  014628  22DA               	addwfc	fsr2h,f,c
 32977  01462A  06DE               	decf	postinc2,f,c
 32978  01462C  0E00               	movlw	0
 32979  01462E  5ADD               	subwfb	postdec2,f,c
 32980  014630                     l9260:
 32981                           
 32982                           ;stkvar	_prod @ sp[(-13)+0]
 32983  014630  0EF5               	movlw	-11
 32984  014632  AEE3               	btfss	plusw1,7,c
 32985  014634  D7DC               	goto	l9250
 32986                           
 32987                           ;stkvar	_aexp @ sp[(-13)+11]
 32988  014636  0EFE               	movlw	-2
 32989  014638  6AE3               	clrf	plusw1,c
 32990                           
 32991                           ;stkvar	_grs @ sp[(-13)+4]
 32992  01463A  0EFA               	movlw	-6
 32993  01463C  AEE3               	btfss	plusw1,7,c
 32994  01463E  D020               	goto	l9274
 32995                           
 32996                           ;stkvar	_grs @ sp[(-13)+4]
 32997  014640  50E1               	movf	fsr1l,w,c
 32998  014642  0FF7               	addlw	-9
 32999  014644  6ED9               	movwf	fsr2l,c
 33000  014646  50E2               	movf	fsr1h,w,c
 33001  014648  6EDA               	movwf	fsr2h,c
 33002  01464A  0EFF               	movlw	255
 33003  01464C  22DA               	addwfc	fsr2h,f,c
 33004  01464E  0EFF               	movlw	255
 33005  014650  14DE               	andwf	postinc2,w,c
 33006  014652  6E09               	movwf	(btemp+8)^0,c
 33007  014654  0EFF               	movlw	255
 33008  014656  14DE               	andwf	postinc2,w,c
 33009  014658  6E0A               	movwf	(btemp+9)^0,c
 33010  01465A  0EFF               	movlw	255
 33011  01465C  14DE               	andwf	postinc2,w,c
 33012  01465E  6E0B               	movwf	(btemp+10)^0,c
 33013  014660  0E7F               	movlw	127
 33014  014662  14DE               	andwf	postinc2,w,c
 33015  014664  6E0C               	movwf	(btemp+11)^0,c
 33016  014666  5009               	movf	(btemp+8)^0,w,c
 33017  014668  100A               	iorwf	(btemp+9)^0,w,c
 33018  01466A  100B               	iorwf	(btemp+10)^0,w,c
 33019  01466C  100C               	iorwf	(btemp+11)^0,w,c
 33020  01466E  B4D8               	btfsc	status,2,c
 33021  014670  D004               	goto	l9270
 33022  014672                     u7480:
 33023                           
 33024                           ;stkvar	_aexp @ sp[(-13)+11]
 33025  014672  0EFE               	movlw	-2
 33026  014674  6AE3               	clrf	plusw1,c
 33027  014676  2AE3               	incf	plusw1,f,c
 33028  014678  D003               	goto	l9274
 33029  01467A                     l9270:
 33030                           
 33031                           ;stkvar	_prod @ sp[(-13)+0]
 33032  01467A  0EF3               	movlw	-13
 33033  01467C  B0E3               	btfsc	plusw1,0,c
 33034  01467E  D7F9               	goto	u7480
 33035  014680                     l9274:
 33036                           
 33037                           ;stkvar	_aexp @ sp[(-13)+11]
 33038  014680  0EFE               	movlw	-2
 33039  014682  50E3               	movf	plusw1,w,c
 33040  014684  B4D8               	btfsc	status,2,c
 33041  014686  D036               	goto	l9284
 33042                           
 33043                           ;stkvar	_prod @ sp[(-13)+0]
 33044  014688  50E1               	movf	fsr1l,w,c
 33045  01468A  0FF3               	addlw	-13
 33046  01468C  6ED9               	movwf	fsr2l,c
 33047  01468E  50E2               	movf	fsr1h,w,c
 33048  014690  6EDA               	movwf	fsr2h,c
 33049  014692  0EFF               	movlw	255
 33050  014694  22DA               	addwfc	fsr2h,f,c
 33051  014696  2ADE               	incf	postinc2,f,c
 33052  014698  0E00               	movlw	0
 33053  01469A  22DE               	addwfc	postinc2,f,c
 33054  01469C  22DE               	addwfc	postinc2,f,c
 33055  01469E  22DE               	addwfc	postinc2,f,c
 33056                           
 33057                           ;stkvar	_prod @ sp[(-13)+0]
 33058  0146A0  0EF6               	movlw	-10
 33059  0146A2  A0E3               	btfss	plusw1,0,c
 33060  0146A4  D027               	goto	l9284
 33061  0146A6  0E01               	movlw	1
 33062  0146A8  6E0C               	movwf	(btemp+11)^0,c
 33063                           
 33064                           ;stkvar	_prod @ sp[(-13)+0]
 33065  0146AA  50E1               	movf	fsr1l,w,c
 33066  0146AC  0FF3               	addlw	-13
 33067  0146AE  6ED9               	movwf	fsr2l,c
 33068  0146B0  50E2               	movf	fsr1h,w,c
 33069  0146B2  6EDA               	movwf	fsr2h,c
 33070  0146B4  0EFF               	movlw	255
 33071  0146B6  22DA               	addwfc	fsr2h,f,c
 33072  0146B8  280C               	incf	(btemp+11)^0,w,c
 33073  0146BA  52DE               	movf	postinc2,f,c
 33074  0146BC  D008               	goto	u7520
 33075  0146BE                     u7525:
 33076  0146BE  52DE               	movf	postinc2,f,c
 33077  0146C0  90D8               	bcf	status,0,c
 33078  0146C2  BEDC               	btfsc	preinc2,7,c
 33079  0146C4  80D8               	bsf	status,0,c
 33080  0146C6  32DD               	rrcf	postdec2,f,c
 33081  0146C8  32DD               	rrcf	postdec2,f,c
 33082  0146CA  32DD               	rrcf	postdec2,f,c
 33083  0146CC  32DE               	rrcf	postinc2,f,c
 33084  0146CE                     u7520:
 33085  0146CE  2EE8               	decfsz	wreg,f,c
 33086  0146D0  D7F6               	goto	u7525
 33087                           
 33088                           ;stkvar	_temp @ sp[(-13)+8]
 33089  0146D2  0EFB               	movlw	-5
 33090  0146D4  50E3               	movf	plusw1,w,c
 33091  0146D6  0F01               	addlw	1
 33092  0146D8  6E01               	movwf	btemp^0,c
 33093  0146DA  0EFB               	movlw	-5
 33094  0146DC  0060  F007  FFE3   	movff	btemp,plusw1
 33095  0146E2  6A01               	clrf	btemp^0,c
 33096  0146E4  0EFC               	movlw	-4
 33097  0146E6  50E3               	movf	plusw1,w,c
 33098  0146E8  2001               	addwfc	btemp^0,w,c
 33099  0146EA  6E01               	movwf	btemp^0,c
 33100  0146EC  0EFC               	movlw	-4
 33101  0146EE  0060  F007  FFE3   	movff	btemp,plusw1
 33102  0146F4                     l9284:
 33103                           
 33104                           ;stkvar	_temp @ sp[(-13)+8]
 33105  0146F4  0EFC               	movlw	-4
 33106  0146F6  BEE3               	btfsc	plusw1,7,c
 33107  0146F8  D020               	goto	l9288
 33108  0146FA  0EFC               	movlw	-4
 33109  0146FC  50E3               	movf	plusw1,w,c
 33110  0146FE  E104               	bnz	u7530
 33111  014700  0EFB               	movlw	-5
 33112  014702  28E3               	incf	plusw1,w,c
 33113  014704  A0D8               	btfss	status,0,c
 33114  014706  D019               	goto	l9288
 33115  014708                     u7530:
 33116  014708  0E00               	movlw	0
 33117  01470A  6E09               	movwf	(btemp+8)^0,c
 33118  01470C  0E00               	movlw	0
 33119  01470E  6E0A               	movwf	(btemp+9)^0,c
 33120  014710  0E80               	movlw	128
 33121  014712  6E0B               	movwf	(btemp+10)^0,c
 33122  014714  0E7F               	movlw	127
 33123  014716  6E0C               	movwf	(btemp+11)^0,c
 33124                           
 33125                           ;stkvar	_prod @ sp[(-13)+0]
 33126  014718  0EF3               	movlw	-13
 33127  01471A  0060  F027  FFE3   	movff	btemp+8,plusw1
 33128  014720  0EF4               	movlw	-12
 33129  014722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33130  014728  0EF5               	movlw	-11
 33131  01472A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33132  014730  0EF6               	movlw	-10
 33133  014732  0060  F033  FFE3   	movff	btemp+11,plusw1
 33134  014738  D044               	goto	l9304
 33135  01473A                     l9288:
 33136                           
 33137                           ;stkvar	_temp @ sp[(-13)+8]
 33138  01473A  0EFC               	movlw	-4
 33139  01473C  BEE3               	btfsc	plusw1,7,c
 33140  01473E  D007               	goto	u7540
 33141  014740  0EFC               	movlw	-4
 33142  014742  50E3               	movf	plusw1,w,c
 33143  014744  E10F               	bnz	l9294
 33144  014746  0EFB               	movlw	-5
 33145  014748  04E3               	decf	plusw1,w,c
 33146  01474A  B0D8               	btfsc	status,0,c
 33147  01474C  D00B               	goto	l9294
 33148  01474E                     u7540:
 33149                           
 33150                           ;stkvar	_prod @ sp[(-13)+0]
 33151  01474E  0EF3               	movlw	-13
 33152  014750  6AE3               	clrf	plusw1,c
 33153  014752  0EF4               	movlw	-12
 33154  014754  6AE3               	clrf	plusw1,c
 33155  014756  0EF5               	movlw	-11
 33156  014758  6AE3               	clrf	plusw1,c
 33157  01475A  0EF6               	movlw	-10
 33158  01475C  6AE3               	clrf	plusw1,c
 33159                           
 33160                           ;stkvar	_sign @ sp[(-13)+12]
 33161  01475E  0EFF               	movlw	-1
 33162  014760  6AE3               	clrf	plusw1,c
 33163  014762  D02F               	goto	l9304
 33164  014764                     l9294:
 33165                           
 33166                           ;stkvar	_temp @ sp[(-13)+8]
 33167                           ;stkvar	_bexp @ sp[(-13)+10]
 33168  014764  0EFB               	movlw	-5
 33169  014766  006F FF8C  F001    	movff	plusw1,btemp
 33170  01476C  0EFD               	movlw	-3
 33171  01476E  0060  F007  FFE3   	movff	btemp,plusw1
 33172                           
 33173                           ;stkvar	_prod @ sp[(-13)+0]
 33174  014774  50E1               	movf	fsr1l,w,c
 33175  014776  0FF3               	addlw	-13
 33176  014778  6ED9               	movwf	fsr2l,c
 33177  01477A  50E2               	movf	fsr1h,w,c
 33178  01477C  6EDA               	movwf	fsr2h,c
 33179  01477E  0EFF               	movlw	255
 33180  014780  22DA               	addwfc	fsr2h,f,c
 33181  014782  0EFF               	movlw	255
 33182  014784  16DE               	andwf	postinc2,f,c
 33183  014786  0EFF               	movlw	255
 33184  014788  16DE               	andwf	postinc2,f,c
 33185  01478A  0E7F               	movlw	127
 33186  01478C  16DE               	andwf	postinc2,f,c
 33187  01478E  0E00               	movlw	0
 33188  014790  16DE               	andwf	postinc2,f,c
 33189                           
 33190                           ;stkvar	_bexp @ sp[(-13)+10]
 33191  014792  0EFD               	movlw	-3
 33192  014794  A0E3               	btfss	plusw1,0,c
 33193  014796  D008               	goto	l9302
 33194                           
 33195                           ;stkvar	_prod @ sp[(-13)+0]
 33196  014798  0EF5               	movlw	245
 33197  01479A  24E1               	addwf	fsr1l,w,c
 33198  01479C  6ED9               	movwf	fsr2l,c
 33199  01479E  0EFF               	movlw	255
 33200  0147A0  20E2               	addwfc	fsr1h,w,c
 33201  0147A2  6EDA               	movwf	fsr2h,c
 33202  0147A4  0E00               	movlw	0
 33203  0147A6  8EDB               	bsf	plusw2,7,c
 33204  0147A8                     l9302:
 33205                           
 33206                           ;stkvar	_prod @ sp[(-13)+0]
 33207  0147A8  0EF6               	movlw	246
 33208  0147AA  24E1               	addwf	fsr1l,w,c
 33209  0147AC  6ED9               	movwf	fsr2l,c
 33210  0147AE  0EFF               	movlw	255
 33211  0147B0  20E2               	addwfc	fsr1h,w,c
 33212  0147B2  6EDA               	movwf	fsr2h,c
 33213                           
 33214                           ;stkvar	_bexp @ sp[(-13)+10]
 33215  0147B4  0EFD               	movlw	-3
 33216  0147B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 33217  0147BC  90D8               	bcf	status,0,c
 33218  0147BE  300C               	rrcf	(btemp+11)^0,w,c
 33219  0147C0  6EDF               	movwf	indf2,c
 33220  0147C2                     l9304:
 33221                           
 33222                           ;stkvar	_sign @ sp[(-13)+12]
 33223  0147C2  0EFF               	movlw	-1
 33224  0147C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 33225                           
 33226                           ;stkvar	_prod @ sp[(-13)+0]
 33227  0147CA  0EF6               	movlw	246
 33228  0147CC  24E1               	addwf	fsr1l,w,c
 33229  0147CE  6ED9               	movwf	fsr2l,c
 33230  0147D0  0EFF               	movlw	255
 33231  0147D2  20E2               	addwfc	fsr1h,w,c
 33232  0147D4  6EDA               	movwf	fsr2h,c
 33233  0147D6  500C               	movf	(btemp+11)^0,w,c
 33234  0147D8  12DF               	iorwf	indf2,f,c
 33235                           
 33236                           ;stkvar	_prod @ sp[(-13)+0]
 33237  0147DA  0EF3               	movlw	-13
 33238  0147DC  006F FF8C  F001    	movff	plusw1,btemp
 33239  0147E2  0EF4               	movlw	-12
 33240  0147E4  006F FF8C  F002    	movff	plusw1,btemp+1
 33241  0147EA  0EF5               	movlw	-11
 33242  0147EC  006F FF8C  F003    	movff	plusw1,btemp+2
 33243  0147F2  0EF6               	movlw	-10
 33244  0147F4  006F FF8C  F004    	movff	plusw1,btemp+3
 33245  0147FA                     l3297:
 33246                           
 33247                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 33248  0147FA  0EEB               	movlw	235
 33249  0147FC  26E1               	addwf	fsr1l,f,c
 33250  0147FE  0EFF               	movlw	255
 33251  014800  22E2               	addwfc	fsr1h,f,c
 33252  014802  0012               	return		;funcret
 33253  014804                     __end_of___flmul:
 33254                           	opt callstack 0
 33255                           
 33256 ;; *************** function _SYSTEM_Initialize *****************
 33257 ;; Defined at:
 33258 ;;		line 50 in file "mcc_generated_files/mcc.c"
 33259 ;; Parameters:    Size  Location     Type
 33260 ;;		None
 33261 ;; Auto vars:     Size  Location     Type
 33262 ;;		None
 33263 ;; Return value:  Size  Location     Type
 33264 ;;                  1  [STACK] void 
 33265 ;; Registers used:
 33266 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 33267 ;; Tracked objects:
 33268 ;;		On entry : 0/0
 33269 ;;		On exit  : 3F/3C
 33270 ;;		Unchanged: 0/0
 33271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33276 ;;Total ram usage:        0 bytes
 33277 ;; Hardware stack levels used:    1
 33278 ;; Hardware stack levels required when called:   17
 33279 ;; This function calls:
 33280 ;;		_ADCC_Initialize
 33281 ;;		_CLKREF_Initialize
 33282 ;;		_CRC_Initialize
 33283 ;;		_DMA1_Initialize
 33284 ;;		_DMA2_Initialize
 33285 ;;		_EXT_INT_Initialize
 33286 ;;		_FVR_Initialize
 33287 ;;		_INTERRUPT_Initialize
 33288 ;;		_OSCILLATOR_Initialize
 33289 ;;		_PIN_MANAGER_Initialize
 33290 ;;		_PMD_Initialize
 33291 ;;		_PWM8_Initialize
 33292 ;;		_SPI1_Initialize
 33293 ;;		_TMR2_Initialize
 33294 ;;		_TMR3_Initialize
 33295 ;;		_TMR5_Initialize
 33296 ;;		_TMR6_Initialize
 33297 ;;		_UART1_Initialize
 33298 ;;		_UART2_Initialize
 33299 ;; This function is called by:
 33300 ;;		_main
 33301 ;; This function uses a reentrant model
 33302 ;;
 33303                           
 33304                           	psect	text129
 33305  01C620                     __ptext129:
 33306                           	opt callstack 0
 33307  01C620                     _SYSTEM_Initialize:
 33308                           	opt callstack 13
 33309                           
 33310                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 33311                           
 33312                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33313                           ;incstack = 0
 33314  01C620  EC15  F0E1         	call	_INTERRUPT_Initialize	;wreg free
 33315                           
 33316                           ; BSR set to: 57
 33317                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 33318  01C624  ECEC  F0E9         	call	_PMD_Initialize	;wreg free
 33319                           
 33320                           ; BSR set to: 57
 33321                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 33322  01C628  ECB7  F0DD         	call	_PIN_MANAGER_Initialize	;wreg free
 33323                           
 33324                           ; BSR set to: 58
 33325                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 33326  01C62C  ECE1  F0E9         	call	_OSCILLATOR_Initialize	;wreg free
 33327                           
 33328                           ; BSR set to: 57
 33329                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 33330  01C630  EC86  F0EA         	call	_FVR_Initialize	;wreg free
 33331                           
 33332                           ; BSR set to: 62
 33333                           ;mcc_generated_files/mcc.c: 57:     CRC_Initialize();
 33334  01C634  EC00  F0DE         	call	_CRC_Initialize	;wreg free
 33335                           
 33336                           ; BSR set to: 0
 33337                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 33338  01C638  EC77  F0E0         	call	_ADCC_Initialize	;wreg free
 33339                           
 33340                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 33341  01C63C  ECD6  F0E9         	call	_PWM8_Initialize	;wreg free
 33342                           
 33343                           ; BSR set to: 63
 33344                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
 33345  01C640  ECBF  F0E9         	call	_TMR2_Initialize	;wreg free
 33346                           
 33347                           ; BSR set to: 57
 33348                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
 33349  01C644  EC53  F0E6         	call	_EXT_INT_Initialize	;wreg free
 33350                           
 33351                           ; BSR set to: 57
 33352                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
 33353  01C648  EC40  F0E7         	call	_TMR6_Initialize	;wreg free
 33354                           
 33355                           ;mcc_generated_files/mcc.c: 63:     TMR3_Initialize();
 33356  01C64C  ECEF  F0E3         	call	_TMR3_Initialize	;wreg free
 33357                           
 33358                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
 33359  01C650  ECCB  F0E3         	call	_TMR5_Initialize	;wreg free
 33360                           
 33361                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 33362  01C654  ECA7  F0E3         	call	_UART1_Initialize	;wreg free
 33363                           
 33364                           ; BSR set to: 57
 33365                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 33366  01C658  ECDC  F0E1         	call	_UART2_Initialize	;wreg free
 33367                           
 33368                           ; BSR set to: 57
 33369                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 33370  01C65C  ECCB  F0E9         	call	_SPI1_Initialize	;wreg free
 33371                           
 33372                           ; BSR set to: 61
 33373                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 33374  01C660  EC66  F0E2         	call	_DMA2_Initialize	;wreg free
 33375                           
 33376                           ; BSR set to: 59
 33377                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 33378  01C664  EC42  F0E0         	call	_DMA1_Initialize	;wreg free
 33379                           
 33380                           ; BSR set to: 59
 33381                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 33382  01C668  EC55  F0EA         	call	_CLKREF_Initialize	;wreg free
 33383                           
 33384                           ; BSR set to: 60
 33385                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33386  01C66C  0012               	return		;funcret
 33387  01C66E                     __end_of_SYSTEM_Initialize:
 33388                           	opt callstack 0
 33389                           
 33390 ;; *************** function _UART2_Initialize *****************
 33391 ;; Defined at:
 33392 ;;		line 78 in file "mcc_generated_files/uart2.c"
 33393 ;; Parameters:    Size  Location     Type
 33394 ;;		None
 33395 ;; Auto vars:     Size  Location     Type
 33396 ;;		None
 33397 ;; Return value:  Size  Location     Type
 33398 ;;                  1  [STACK] void 
 33399 ;; Registers used:
 33400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 33401 ;; Tracked objects:
 33402 ;;		On entry : 3F/39
 33403 ;;		On exit  : 3F/39
 33404 ;;		Unchanged: 0/0
 33405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33410 ;;Total ram usage:        0 bytes
 33411 ;; Hardware stack levels used:    1
 33412 ;; Hardware stack levels required when called:   16
 33413 ;; This function calls:
 33414 ;;		_UART2_SetRxInterruptHandler
 33415 ;;		_UART2_SetTxInterruptHandler
 33416 ;; This function is called by:
 33417 ;;		_SYSTEM_Initialize
 33418 ;; This function uses a reentrant model
 33419 ;;
 33420                           
 33421                           	psect	text130
 33422  01C3B8                     __ptext130:
 33423                           	opt callstack 0
 33424  01C3B8                     _UART2_Initialize:
 33425                           	opt callstack 13
 33426                           
 33427                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 33428                           
 33429                           ; BSR set to: 60
 33430                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33431                           ;incstack = 0
 33432  01C3B8  0139               	movlb	57	; () banked
 33433  01C3BA  9596               	bcf	150,2,b	;volatile
 33434                           
 33435                           ; BSR set to: 57
 33436                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 33437  01C3BC  0E62               	movlw	low _UART2_Receive_ISR
 33438  01C3BE  6EE6               	movwf	postinc1,c
 33439  01C3C0  0ED2               	movlw	high _UART2_Receive_ISR
 33440  01C3C2  6EE6               	movwf	postinc1,c
 33441  01C3C4  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 33442  01C3C6  6EE6               	movwf	postinc1,c
 33443  01C3C8  EC91  F0E7         	call	_UART2_SetRxInterruptHandler	;wreg free
 33444                           
 33445                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 33446  01C3CC  0139               	movlb	57	; () banked
 33447  01C3CE  9796               	bcf	150,3,b	;volatile
 33448                           
 33449                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 33450  01C3D0  0E54               	movlw	low _UART2_Transmit_ISR
 33451  01C3D2  6EE6               	movwf	postinc1,c
 33452  01C3D4  0ECE               	movlw	high _UART2_Transmit_ISR
 33453  01C3D6  6EE6               	movwf	postinc1,c
 33454  01C3D8  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 33455  01C3DA  6EE6               	movwf	postinc1,c
 33456  01C3DC  EC7D  F0E7         	call	_UART2_SetTxInterruptHandler	;wreg free
 33457                           
 33458                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 33459  01C3E0  013D               	movlb	61	; () banked
 33460  01C3E2  6BD4               	clrf	212,b	;volatile
 33461                           
 33462                           ; BSR set to: 61
 33463                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 33464  01C3E4  6BD6               	clrf	214,b	;volatile
 33465                           
 33466                           ; BSR set to: 61
 33467                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 33468  01C3E6  6BD8               	clrf	216,b	;volatile
 33469                           
 33470                           ; BSR set to: 61
 33471                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 33472  01C3E8  0EB0               	movlw	176
 33473  01C3EA  6FDA               	movwf	218,b	;volatile
 33474                           
 33475                           ; BSR set to: 61
 33476                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 33477  01C3EC  0E80               	movlw	128
 33478  01C3EE  6FDB               	movwf	219,b	;volatile
 33479                           
 33480                           ; BSR set to: 61
 33481                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 33482  01C3F0  6BDC               	clrf	220,b	;volatile
 33483                           
 33484                           ; BSR set to: 61
 33485                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 33486  01C3F2  0E82               	movlw	130
 33487  01C3F4  6FDD               	movwf	221,b	;volatile
 33488                           
 33489                           ; BSR set to: 61
 33490                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 33491  01C3F6  0E06               	movlw	6
 33492  01C3F8  6FDE               	movwf	222,b	;volatile
 33493                           
 33494                           ; BSR set to: 61
 33495                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 33496  01C3FA  6BDF               	clrf	223,b	;volatile
 33497                           
 33498                           ; BSR set to: 61
 33499                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 33500  01C3FC  6BE0               	clrf	224,b	;volatile
 33501                           
 33502                           ; BSR set to: 61
 33503                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 33504  01C3FE  6BE1               	clrf	225,b	;volatile
 33505                           
 33506                           ; BSR set to: 61
 33507                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 33508  01C400  6BE2               	clrf	226,b	;volatile
 33509                           
 33510                           ; BSR set to: 61
 33511                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 33512  01C402  0100               	movlb	0	; () banked
 33513  01C404  6BD2               	clrf	_uart2TxHead& (0+255),b	;volatile
 33514                           
 33515                           ; BSR set to: 0
 33516                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 33517  01C406  6A46               	clrf	_uart2TxTail^0,c	;volatile
 33518                           
 33519                           ; BSR set to: 0
 33520                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 33521  01C408  0E40               	movlw	64
 33522  01C40A  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 33523                           
 33524                           ; BSR set to: 0
 33525                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 33526  01C40C  6A44               	clrf	_uart2RxHead^0,c	;volatile
 33527                           
 33528                           ; BSR set to: 0
 33529                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 33530  01C40E  6BD1               	clrf	_uart2RxTail& (0+255),b	;volatile
 33531                           
 33532                           ; BSR set to: 0
 33533                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 33534  01C410  6BD0               	clrf	_uart2RxCount& (0+255),b	;volatile
 33535                           
 33536                           ; BSR set to: 0
 33537                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 33538  01C412  0139               	movlb	57	; () banked
 33539  01C414  8596               	bsf	150,2,b	;volatile
 33540                           
 33541                           ; BSR set to: 57
 33542                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 33543  01C416  0012               	return		;funcret
 33544  01C418                     __end_of_UART2_Initialize:
 33545                           	opt callstack 0
 33546                           
 33547 ;; *************** function _UART2_SetTxInterruptHandler *****************
 33548 ;; Defined at:
 33549 ;;		line 252 in file "mcc_generated_files/uart2.c"
 33550 ;; Parameters:    Size  Location     Type
 33551 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33552 ;;		 -> UART2_Transmit_ISR(1), 
 33553 ;; Auto vars:     Size  Location     Type
 33554 ;;		None
 33555 ;; Return value:  Size  Location     Type
 33556 ;;                  1  [STACK] void 
 33557 ;; Registers used:
 33558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33559 ;; Tracked objects:
 33560 ;;		On entry : 3F/39
 33561 ;;		On exit  : 0/0
 33562 ;;		Unchanged: 0/0
 33563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33568 ;;Total ram usage:        0 bytes
 33569 ;; Hardware stack levels used:    1
 33570 ;; Hardware stack levels required when called:   15
 33571 ;; This function calls:
 33572 ;;		Nothing
 33573 ;; This function is called by:
 33574 ;;		_UART2_Initialize
 33575 ;; This function uses a reentrant model
 33576 ;;
 33577                           
 33578                           	psect	text131
 33579  01CEFA                     __ptext131:
 33580                           	opt callstack 0
 33581  01CEFA                     _UART2_SetTxInterruptHandler:
 33582                           	opt callstack 13
 33583                           
 33584                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 33585                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33586                           
 33587                           ; BSR set to: 57
 33588                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33589                           ;incstack = 0
 33590  01CEFA  50E1               	movf	fsr1l,w,c
 33591  01CEFC  0FFD               	addlw	-3
 33592  01CEFE  6ED9               	movwf	fsr2l,c
 33593  01CF00  50E2               	movf	fsr1h,w,c
 33594  01CF02  6EDA               	movwf	fsr2h,c
 33595  01CF04  0EFF               	movlw	255
 33596  01CF06  22DA               	addwfc	fsr2h,f,c
 33597  01CF08  006F FF78  F0B4    	movff	postinc2,_UART2_TxInterruptHandler
 33598  01CF0E  006F FF78  F0B5    	movff	postinc2,_UART2_TxInterruptHandler+1
 33599  01CF14  006F FF74  F0B6    	movff	postdec2,_UART2_TxInterruptHandler+2
 33600                           
 33601                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 33602  01CF1A  52E5               	movf	postdec1,f,c
 33603  01CF1C  52E5               	movf	postdec1,f,c
 33604  01CF1E  52E5               	movf	postdec1,f,c
 33605  01CF20  0012               	return		;funcret
 33606  01CF22                     __end_of_UART2_SetTxInterruptHandler:
 33607                           	opt callstack 0
 33608                           
 33609 ;; *************** function _UART2_SetRxInterruptHandler *****************
 33610 ;; Defined at:
 33611 ;;		line 248 in file "mcc_generated_files/uart2.c"
 33612 ;; Parameters:    Size  Location     Type
 33613 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33614 ;;		 -> UART2_Receive_ISR(1), 
 33615 ;; Auto vars:     Size  Location     Type
 33616 ;;		None
 33617 ;; Return value:  Size  Location     Type
 33618 ;;                  1  [STACK] void 
 33619 ;; Registers used:
 33620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33621 ;; Tracked objects:
 33622 ;;		On entry : 3F/39
 33623 ;;		On exit  : 0/0
 33624 ;;		Unchanged: 0/0
 33625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33630 ;;Total ram usage:        0 bytes
 33631 ;; Hardware stack levels used:    1
 33632 ;; Hardware stack levels required when called:   15
 33633 ;; This function calls:
 33634 ;;		Nothing
 33635 ;; This function is called by:
 33636 ;;		_UART2_Initialize
 33637 ;; This function uses a reentrant model
 33638 ;;
 33639                           
 33640                           	psect	text132
 33641  01CF22                     __ptext132:
 33642                           	opt callstack 0
 33643  01CF22                     _UART2_SetRxInterruptHandler:
 33644                           	opt callstack 13
 33645                           
 33646                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 33647                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33648                           
 33649                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33650                           ;incstack = 0
 33651  01CF22  50E1               	movf	fsr1l,w,c
 33652  01CF24  0FFD               	addlw	-3
 33653  01CF26  6ED9               	movwf	fsr2l,c
 33654  01CF28  50E2               	movf	fsr1h,w,c
 33655  01CF2A  6EDA               	movwf	fsr2h,c
 33656  01CF2C  0EFF               	movlw	255
 33657  01CF2E  22DA               	addwfc	fsr2h,f,c
 33658  01CF30  006F FF78  F0B7    	movff	postinc2,_UART2_RxInterruptHandler
 33659  01CF36  006F FF78  F0B8    	movff	postinc2,_UART2_RxInterruptHandler+1
 33660  01CF3C  006F FF74  F0B9    	movff	postdec2,_UART2_RxInterruptHandler+2
 33661                           
 33662                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 33663  01CF42  52E5               	movf	postdec1,f,c
 33664  01CF44  52E5               	movf	postdec1,f,c
 33665  01CF46  52E5               	movf	postdec1,f,c
 33666  01CF48  0012               	return		;funcret
 33667  01CF4A                     __end_of_UART2_SetRxInterruptHandler:
 33668                           	opt callstack 0
 33669                           
 33670 ;; *************** function _UART1_Initialize *****************
 33671 ;; Defined at:
 33672 ;;		line 75 in file "mcc_generated_files/uart1.c"
 33673 ;; Parameters:    Size  Location     Type
 33674 ;;		None
 33675 ;; Auto vars:     Size  Location     Type
 33676 ;;		None
 33677 ;; Return value:  Size  Location     Type
 33678 ;;                  1  [STACK] void 
 33679 ;; Registers used:
 33680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 33681 ;; Tracked objects:
 33682 ;;		On entry : 0/39
 33683 ;;		On exit  : 3F/39
 33684 ;;		Unchanged: 0/0
 33685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33690 ;;Total ram usage:        0 bytes
 33691 ;; Hardware stack levels used:    1
 33692 ;; Hardware stack levels required when called:   16
 33693 ;; This function calls:
 33694 ;;		_UART1_SetRxInterruptHandler
 33695 ;; This function is called by:
 33696 ;;		_SYSTEM_Initialize
 33697 ;; This function uses a reentrant model
 33698 ;;
 33699                           
 33700                           	psect	text133
 33701  01C74E                     __ptext133:
 33702                           	opt callstack 0
 33703  01C74E                     _UART1_Initialize:
 33704                           	opt callstack 13
 33705                           
 33706                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 33707                           
 33708                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33709                           ;incstack = 0
 33710  01C74E  0139               	movlb	57	; () banked
 33711  01C750  9793               	bcf	147,3,b	;volatile
 33712                           
 33713                           ; BSR set to: 57
 33714                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 33715  01C752  0EFA               	movlw	low _UART1_Receive_ISR
 33716  01C754  6EE6               	movwf	postinc1,c
 33717  01C756  0ED2               	movlw	high _UART1_Receive_ISR
 33718  01C758  6EE6               	movwf	postinc1,c
 33719  01C75A  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 33720  01C75C  6EE6               	movwf	postinc1,c
 33721  01C75E  ECA5  F0E7         	call	_UART1_SetRxInterruptHandler	;wreg free
 33722                           
 33723                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 33724  01C762  013D               	movlb	61	; () banked
 33725  01C764  6BEC               	clrf	236,b	;volatile
 33726                           
 33727                           ; BSR set to: 61
 33728                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 33729  01C766  6BED               	clrf	237,b	;volatile
 33730                           
 33731                           ; BSR set to: 61
 33732                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 33733  01C768  6BEE               	clrf	238,b	;volatile
 33734                           
 33735                           ; BSR set to: 61
 33736                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 33737  01C76A  6BEF               	clrf	239,b	;volatile
 33738                           
 33739                           ; BSR set to: 61
 33740                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 33741  01C76C  6BF0               	clrf	240,b	;volatile
 33742                           
 33743                           ; BSR set to: 61
 33744                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 33745  01C76E  6BF1               	clrf	241,b	;volatile
 33746                           
 33747                           ; BSR set to: 61
 33748                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 33749  01C770  0EB0               	movlw	176
 33750  01C772  6FF2               	movwf	242,b	;volatile
 33751                           
 33752                           ; BSR set to: 61
 33753                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 33754  01C774  0E80               	movlw	128
 33755  01C776  6FF3               	movwf	243,b	;volatile
 33756                           
 33757                           ; BSR set to: 61
 33758                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 33759  01C778  6BF4               	clrf	244,b	;volatile
 33760                           
 33761                           ; BSR set to: 61
 33762                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 33763  01C77A  0E8A               	movlw	138
 33764  01C77C  6FF5               	movwf	245,b	;volatile
 33765                           
 33766                           ; BSR set to: 61
 33767                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 33768  01C77E  6BF6               	clrf	246,b	;volatile
 33769                           
 33770                           ; BSR set to: 61
 33771                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 33772  01C780  6BF7               	clrf	247,b	;volatile
 33773                           
 33774                           ; BSR set to: 61
 33775                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 33776  01C782  6BF8               	clrf	248,b	;volatile
 33777                           
 33778                           ; BSR set to: 61
 33779                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 33780  01C784  6BF9               	clrf	249,b	;volatile
 33781                           
 33782                           ; BSR set to: 61
 33783                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 33784  01C786  6BFA               	clrf	250,b	;volatile
 33785                           
 33786                           ; BSR set to: 61
 33787                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 33788  01C788  6A47               	clrf	_uart1RxHead^0,c	;volatile
 33789                           
 33790                           ; BSR set to: 61
 33791                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 33792  01C78A  0100               	movlb	0	; () banked
 33793  01C78C  6BD4               	clrf	_uart1RxTail& (0+255),b	;volatile
 33794                           
 33795                           ; BSR set to: 0
 33796                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 33797  01C78E  6BD3               	clrf	_uart1RxCount& (0+255),b	;volatile
 33798                           
 33799                           ; BSR set to: 0
 33800                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 33801  01C790  0139               	movlb	57	; () banked
 33802  01C792  8793               	bsf	147,3,b	;volatile
 33803                           
 33804                           ; BSR set to: 57
 33805                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 33806  01C794  0012               	return		;funcret
 33807  01C796                     __end_of_UART1_Initialize:
 33808                           	opt callstack 0
 33809                           
 33810 ;; *************** function _UART1_SetRxInterruptHandler *****************
 33811 ;; Defined at:
 33812 ;;		line 207 in file "mcc_generated_files/uart1.c"
 33813 ;; Parameters:    Size  Location     Type
 33814 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33815 ;;		 -> UART1_Receive_ISR(1), 
 33816 ;; Auto vars:     Size  Location     Type
 33817 ;;		None
 33818 ;; Return value:  Size  Location     Type
 33819 ;;                  1  [STACK] void 
 33820 ;; Registers used:
 33821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33822 ;; Tracked objects:
 33823 ;;		On entry : 3F/39
 33824 ;;		On exit  : 0/0
 33825 ;;		Unchanged: 0/0
 33826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33831 ;;Total ram usage:        0 bytes
 33832 ;; Hardware stack levels used:    1
 33833 ;; Hardware stack levels required when called:   15
 33834 ;; This function calls:
 33835 ;;		Nothing
 33836 ;; This function is called by:
 33837 ;;		_UART1_Initialize
 33838 ;; This function uses a reentrant model
 33839 ;;
 33840                           
 33841                           	psect	text134
 33842  01CF4A                     __ptext134:
 33843                           	opt callstack 0
 33844  01CF4A                     _UART1_SetRxInterruptHandler:
 33845                           	opt callstack 13
 33846                           
 33847                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 33848                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33849                           
 33850                           ; BSR set to: 57
 33851                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33852                           ;incstack = 0
 33853  01CF4A  50E1               	movf	fsr1l,w,c
 33854  01CF4C  0FFD               	addlw	-3
 33855  01CF4E  6ED9               	movwf	fsr2l,c
 33856  01CF50  50E2               	movf	fsr1h,w,c
 33857  01CF52  6EDA               	movwf	fsr2h,c
 33858  01CF54  0EFF               	movlw	255
 33859  01CF56  22DA               	addwfc	fsr2h,f,c
 33860  01CF58  006F FF78  F0B1    	movff	postinc2,_UART1_RxInterruptHandler
 33861  01CF5E  006F FF78  F0B2    	movff	postinc2,_UART1_RxInterruptHandler+1
 33862  01CF64  006F FF74  F0B3    	movff	postdec2,_UART1_RxInterruptHandler+2
 33863                           
 33864                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 33865  01CF6A  52E5               	movf	postdec1,f,c
 33866  01CF6C  52E5               	movf	postdec1,f,c
 33867  01CF6E  52E5               	movf	postdec1,f,c
 33868  01CF70  0012               	return		;funcret
 33869  01CF72                     __end_of_UART1_SetRxInterruptHandler:
 33870                           	opt callstack 0
 33871                           
 33872 ;; *************** function _TMR6_Initialize *****************
 33873 ;; Defined at:
 33874 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 33875 ;; Parameters:    Size  Location     Type
 33876 ;;		None
 33877 ;; Auto vars:     Size  Location     Type
 33878 ;;		None
 33879 ;; Return value:  Size  Location     Type
 33880 ;;                  1  [STACK] void 
 33881 ;; Registers used:
 33882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 33883 ;; Tracked objects:
 33884 ;;		On entry : 3F/39
 33885 ;;		On exit  : 0/0
 33886 ;;		Unchanged: 0/0
 33887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33892 ;;Total ram usage:        0 bytes
 33893 ;; Hardware stack levels used:    1
 33894 ;; Hardware stack levels required when called:   16
 33895 ;; This function calls:
 33896 ;;		_TMR6_SetInterruptHandler
 33897 ;; This function is called by:
 33898 ;;		_SYSTEM_Initialize
 33899 ;; This function uses a reentrant model
 33900 ;;
 33901                           
 33902                           	psect	text135
 33903  01CE80                     __ptext135:
 33904                           	opt callstack 0
 33905  01CE80                     _TMR6_Initialize:
 33906                           	opt callstack 13
 33907                           
 33908                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 33909                           
 33910                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33911                           ;incstack = 0
 33912  01CE80  0E01               	movlw	1
 33913  01CE82  6E96               	movwf	150,c	;volatile
 33914                           
 33915                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 33916  01CE84  6A95               	clrf	149,c	;volatile
 33917                           
 33918                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 33919  01CE86  6A97               	clrf	151,c	;volatile
 33920                           
 33921                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 33922  01CE88  0E7C               	movlw	124
 33923  01CE8A  6E93               	movwf	147,c	;volatile
 33924                           
 33925                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 33926  01CE8C  6A92               	clrf	146,c	;volatile
 33927                           
 33928                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 33929  01CE8E  0139               	movlb	57	; () banked
 33930  01CE90  91A9               	bcf	169,0,b	;volatile
 33931                           
 33932                           ; BSR set to: 57
 33933                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 33934  01CE92  8199               	bsf	153,0,b	;volatile
 33935                           
 33936                           ; BSR set to: 57
 33937                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 33938  01CE94  0E6E               	movlw	low _TMR6_DefaultInterruptHandler
 33939  01CE96  6EE6               	movwf	postinc1,c
 33940  01CE98  0EC6               	movlw	high _TMR6_DefaultInterruptHandler
 33941  01CE9A  6EE6               	movwf	postinc1,c
 33942  01CE9C  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 33943  01CE9E  6EE6               	movwf	postinc1,c
 33944  01CEA0  ECB9  F0E7         	call	_TMR6_SetInterruptHandler	;wreg free
 33945                           
 33946                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 33947  01CEA4  0EE0               	movlw	224
 33948  01CEA6  6E94               	movwf	148,c	;volatile
 33949                           
 33950                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33951  01CEA8  0012               	return		;funcret
 33952  01CEAA                     __end_of_TMR6_Initialize:
 33953                           	opt callstack 0
 33954                           
 33955 ;; *************** function _TMR6_SetInterruptHandler *****************
 33956 ;; Defined at:
 33957 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 33958 ;; Parameters:    Size  Location     Type
 33959 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33960 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 33961 ;; Auto vars:     Size  Location     Type
 33962 ;;		None
 33963 ;; Return value:  Size  Location     Type
 33964 ;;                  1  [STACK] void 
 33965 ;; Registers used:
 33966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33967 ;; Tracked objects:
 33968 ;;		On entry : 3F/39
 33969 ;;		On exit  : 0/0
 33970 ;;		Unchanged: 0/0
 33971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33976 ;;Total ram usage:        0 bytes
 33977 ;; Hardware stack levels used:    1
 33978 ;; Hardware stack levels required when called:   15
 33979 ;; This function calls:
 33980 ;;		Nothing
 33981 ;; This function is called by:
 33982 ;;		_TMR6_Initialize
 33983 ;; This function uses a reentrant model
 33984 ;;
 33985                           
 33986                           	psect	text136
 33987  01CF72                     __ptext136:
 33988                           	opt callstack 0
 33989  01CF72                     _TMR6_SetInterruptHandler:
 33990                           	opt callstack 13
 33991                           
 33992                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 33993                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33994                           
 33995                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33996                           ;incstack = 0
 33997  01CF72  50E1               	movf	fsr1l,w,c
 33998  01CF74  0FFD               	addlw	-3
 33999  01CF76  6ED9               	movwf	fsr2l,c
 34000  01CF78  50E2               	movf	fsr1h,w,c
 34001  01CF7A  6EDA               	movwf	fsr2h,c
 34002  01CF7C  0EFF               	movlw	255
 34003  01CF7E  22DA               	addwfc	fsr2h,f,c
 34004  01CF80  006F FF78  F0A8    	movff	postinc2,_TMR6_InterruptHandler
 34005  01CF86  006F FF78  F0A9    	movff	postinc2,_TMR6_InterruptHandler+1
 34006  01CF8C  006F FF74  F0AA    	movff	postdec2,_TMR6_InterruptHandler+2
 34007                           
 34008                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 34009  01CF92  52E5               	movf	postdec1,f,c
 34010  01CF94  52E5               	movf	postdec1,f,c
 34011  01CF96  52E5               	movf	postdec1,f,c
 34012  01CF98  0012               	return		;funcret
 34013  01CF9A                     __end_of_TMR6_SetInterruptHandler:
 34014                           	opt callstack 0
 34015                           
 34016 ;; *************** function _TMR5_Initialize *****************
 34017 ;; Defined at:
 34018 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 34019 ;; Parameters:    Size  Location     Type
 34020 ;;		None
 34021 ;; Auto vars:     Size  Location     Type
 34022 ;;		None
 34023 ;; Return value:  Size  Location     Type
 34024 ;;                  1  [STACK] void 
 34025 ;; Registers used:
 34026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 34027 ;; Tracked objects:
 34028 ;;		On entry : 0/39
 34029 ;;		On exit  : 0/0
 34030 ;;		Unchanged: 0/0
 34031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34036 ;;Total ram usage:        0 bytes
 34037 ;; Hardware stack levels used:    1
 34038 ;; Hardware stack levels required when called:   16
 34039 ;; This function calls:
 34040 ;;		_TMR5_SetInterruptHandler
 34041 ;; This function is called by:
 34042 ;;		_SYSTEM_Initialize
 34043 ;; This function uses a reentrant model
 34044 ;;
 34045                           
 34046                           	psect	text137
 34047  01C796                     __ptext137:
 34048                           	opt callstack 0
 34049  01C796                     _TMR5_Initialize:
 34050                           	opt callstack 13
 34051                           
 34052                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 34053                           
 34054                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34055                           ;incstack = 0
 34056  01C796  6A9B               	clrf	155,c	;volatile
 34057                           
 34058                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 34059  01C798  6A9C               	clrf	156,c	;volatile
 34060                           
 34061                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 34062  01C79A  0E01               	movlw	1
 34063  01C79C  6E9D               	movwf	157,c	;volatile
 34064                           
 34065                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 34066  01C79E  0E63               	movlw	99
 34067  01C7A0  6E99               	movwf	153,c	;volatile
 34068                           
 34069                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 34070  01C7A2  0EC0               	movlw	192
 34071  01C7A4  6E98               	movwf	152,c	;volatile
 34072                           
 34073                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 34074  01C7A6  5098               	movf	152,w,c	;volatile
 34075  01C7A8  006F FE64  F001    	movff	16281,btemp	;volatile
 34076  01C7AE  6A02               	clrf	(btemp+1)^0,c
 34077  01C7B0  0060  F004  F002   	movff	btemp,btemp+1
 34078  01C7B6  6A01               	clrf	btemp^0,c
 34079  01C7B8  1001               	iorwf	btemp^0,w,c
 34080  01C7BA  0100               	movlb	0	; () banked
 34081  01C7BC  6FC8               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 34082  01C7BE  5002               	movf	(btemp+1)^0,w,c
 34083  01C7C0  6FC9               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 34084                           
 34085                           ; BSR set to: 0
 34086                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 34087  01C7C2  0139               	movlb	57	; () banked
 34088  01C7C4  9DA8               	bcf	168,6,b	;volatile
 34089                           
 34090                           ; BSR set to: 57
 34091                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 34092  01C7C6  8D98               	bsf	152,6,b	;volatile
 34093                           
 34094                           ; BSR set to: 57
 34095                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 34096  01C7C8  0E68               	movlw	low _TMR5_DefaultInterruptHandler
 34097  01C7CA  6EE6               	movwf	postinc1,c
 34098  01C7CC  0ECB               	movlw	high _TMR5_DefaultInterruptHandler
 34099  01C7CE  6EE6               	movwf	postinc1,c
 34100  01C7D0  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 34101  01C7D2  6EE6               	movwf	postinc1,c
 34102  01C7D4  ECCD  F0E7         	call	_TMR5_SetInterruptHandler	;wreg free
 34103                           
 34104                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 34105  01C7D8  0E31               	movlw	49
 34106  01C7DA  6E9A               	movwf	154,c	;volatile
 34107                           
 34108                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34109  01C7DC  0012               	return		;funcret
 34110  01C7DE                     __end_of_TMR5_Initialize:
 34111                           	opt callstack 0
 34112                           
 34113 ;; *************** function _TMR5_SetInterruptHandler *****************
 34114 ;; Defined at:
 34115 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 34116 ;; Parameters:    Size  Location     Type
 34117 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34118 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 34119 ;; Auto vars:     Size  Location     Type
 34120 ;;		None
 34121 ;; Return value:  Size  Location     Type
 34122 ;;                  1  [STACK] void 
 34123 ;; Registers used:
 34124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34125 ;; Tracked objects:
 34126 ;;		On entry : 3F/39
 34127 ;;		On exit  : 0/0
 34128 ;;		Unchanged: 0/0
 34129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34134 ;;Total ram usage:        0 bytes
 34135 ;; Hardware stack levels used:    1
 34136 ;; Hardware stack levels required when called:   15
 34137 ;; This function calls:
 34138 ;;		Nothing
 34139 ;; This function is called by:
 34140 ;;		_TMR5_Initialize
 34141 ;; This function uses a reentrant model
 34142 ;;
 34143                           
 34144                           	psect	text138
 34145  01CF9A                     __ptext138:
 34146                           	opt callstack 0
 34147  01CF9A                     _TMR5_SetInterruptHandler:
 34148                           	opt callstack 13
 34149                           
 34150                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 34151                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34152                           
 34153                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34154                           ;incstack = 0
 34155  01CF9A  50E1               	movf	fsr1l,w,c
 34156  01CF9C  0FFD               	addlw	-3
 34157  01CF9E  6ED9               	movwf	fsr2l,c
 34158  01CFA0  50E2               	movf	fsr1h,w,c
 34159  01CFA2  6EDA               	movwf	fsr2h,c
 34160  01CFA4  0EFF               	movlw	255
 34161  01CFA6  22DA               	addwfc	fsr2h,f,c
 34162  01CFA8  006F FF78  F0A5    	movff	postinc2,_TMR5_InterruptHandler
 34163  01CFAE  006F FF78  F0A6    	movff	postinc2,_TMR5_InterruptHandler+1
 34164  01CFB4  006F FF74  F0A7    	movff	postdec2,_TMR5_InterruptHandler+2
 34165                           
 34166                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 34167  01CFBA  52E5               	movf	postdec1,f,c
 34168  01CFBC  52E5               	movf	postdec1,f,c
 34169  01CFBE  52E5               	movf	postdec1,f,c
 34170  01CFC0  0012               	return		;funcret
 34171  01CFC2                     __end_of_TMR5_SetInterruptHandler:
 34172                           	opt callstack 0
 34173                           
 34174 ;; *************** function _TMR3_Initialize *****************
 34175 ;; Defined at:
 34176 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 34177 ;; Parameters:    Size  Location     Type
 34178 ;;		None
 34179 ;; Auto vars:     Size  Location     Type
 34180 ;;		None
 34181 ;; Return value:  Size  Location     Type
 34182 ;;                  1  [STACK] void 
 34183 ;; Registers used:
 34184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 34185 ;; Tracked objects:
 34186 ;;		On entry : 0/39
 34187 ;;		On exit  : 0/0
 34188 ;;		Unchanged: 0/0
 34189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34194 ;;Total ram usage:        0 bytes
 34195 ;; Hardware stack levels used:    1
 34196 ;; Hardware stack levels required when called:   16
 34197 ;; This function calls:
 34198 ;;		_TMR3_SetInterruptHandler
 34199 ;; This function is called by:
 34200 ;;		_SYSTEM_Initialize
 34201 ;; This function uses a reentrant model
 34202 ;;
 34203                           
 34204                           	psect	text139
 34205  01C7DE                     __ptext139:
 34206                           	opt callstack 0
 34207  01C7DE                     _TMR3_Initialize:
 34208                           	opt callstack 13
 34209                           
 34210                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 34211                           
 34212                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34213                           ;incstack = 0
 34214  01C7DE  6AA7               	clrf	167,c	;volatile
 34215                           
 34216                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 34217  01C7E0  6AA8               	clrf	168,c	;volatile
 34218                           
 34219                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 34220  01C7E2  0E01               	movlw	1
 34221  01C7E4  6EA9               	movwf	169,c	;volatile
 34222                           
 34223                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 34224  01C7E6  0E3C               	movlw	60
 34225  01C7E8  6EA5               	movwf	165,c	;volatile
 34226                           
 34227                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 34228  01C7EA  0EB0               	movlw	176
 34229  01C7EC  6EA4               	movwf	164,c	;volatile
 34230                           
 34231                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 34232  01C7EE  50A4               	movf	164,w,c	;volatile
 34233  01C7F0  006F FE94  F001    	movff	16293,btemp	;volatile
 34234  01C7F6  6A02               	clrf	(btemp+1)^0,c
 34235  01C7F8  0060  F004  F002   	movff	btemp,btemp+1
 34236  01C7FE  6A01               	clrf	btemp^0,c
 34237  01C800  1001               	iorwf	btemp^0,w,c
 34238  01C802  0100               	movlb	0	; () banked
 34239  01C804  6FC4               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 34240  01C806  5002               	movf	(btemp+1)^0,w,c
 34241  01C808  6FC5               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 34242                           
 34243                           ; BSR set to: 0
 34244                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 34245  01C80A  0139               	movlb	57	; () banked
 34246  01C80C  9DA6               	bcf	166,6,b	;volatile
 34247                           
 34248                           ; BSR set to: 57
 34249                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 34250  01C80E  8D96               	bsf	150,6,b	;volatile
 34251                           
 34252                           ; BSR set to: 57
 34253                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 34254  01C810  0E3C               	movlw	low _TMR3_DefaultInterruptHandler
 34255  01C812  6EE6               	movwf	postinc1,c
 34256  01C814  0ED5               	movlw	high _TMR3_DefaultInterruptHandler
 34257  01C816  6EE6               	movwf	postinc1,c
 34258  01C818  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 34259  01C81A  6EE6               	movwf	postinc1,c
 34260  01C81C  ECE1  F0E7         	call	_TMR3_SetInterruptHandler	;wreg free
 34261                           
 34262                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 34263  01C820  0E31               	movlw	49
 34264  01C822  6EA6               	movwf	166,c	;volatile
 34265                           
 34266                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34267  01C824  0012               	return		;funcret
 34268  01C826                     __end_of_TMR3_Initialize:
 34269                           	opt callstack 0
 34270                           
 34271 ;; *************** function _TMR3_SetInterruptHandler *****************
 34272 ;; Defined at:
 34273 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 34274 ;; Parameters:    Size  Location     Type
 34275 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34276 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 34277 ;; Auto vars:     Size  Location     Type
 34278 ;;		None
 34279 ;; Return value:  Size  Location     Type
 34280 ;;                  1  [STACK] void 
 34281 ;; Registers used:
 34282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34283 ;; Tracked objects:
 34284 ;;		On entry : 0/2
 34285 ;;		On exit  : 0/0
 34286 ;;		Unchanged: 0/0
 34287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34292 ;;Total ram usage:        0 bytes
 34293 ;; Hardware stack levels used:    1
 34294 ;; Hardware stack levels required when called:   15
 34295 ;; This function calls:
 34296 ;;		Nothing
 34297 ;; This function is called by:
 34298 ;;		_TMR3_Initialize
 34299 ;;		_init_bsoc
 34300 ;; This function uses a reentrant model
 34301 ;;
 34302                           
 34303                           	psect	text140
 34304  01CFC2                     __ptext140:
 34305                           	opt callstack 0
 34306  01CFC2                     _TMR3_SetInterruptHandler:
 34307                           	opt callstack 14
 34308                           
 34309                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 34310                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34311                           
 34312                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34313                           ;incstack = 0
 34314  01CFC2  50E1               	movf	fsr1l,w,c
 34315  01CFC4  0FFD               	addlw	-3
 34316  01CFC6  6ED9               	movwf	fsr2l,c
 34317  01CFC8  50E2               	movf	fsr1h,w,c
 34318  01CFCA  6EDA               	movwf	fsr2h,c
 34319  01CFCC  0EFF               	movlw	255
 34320  01CFCE  22DA               	addwfc	fsr2h,f,c
 34321  01CFD0  006F FF78  F0A2    	movff	postinc2,_TMR3_InterruptHandler
 34322  01CFD6  006F FF78  F0A3    	movff	postinc2,_TMR3_InterruptHandler+1
 34323  01CFDC  006F FF74  F0A4    	movff	postdec2,_TMR3_InterruptHandler+2
 34324                           
 34325                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 34326  01CFE2  52E5               	movf	postdec1,f,c
 34327  01CFE4  52E5               	movf	postdec1,f,c
 34328  01CFE6  52E5               	movf	postdec1,f,c
 34329  01CFE8  0012               	return		;funcret
 34330  01CFEA                     __end_of_TMR3_SetInterruptHandler:
 34331                           	opt callstack 0
 34332                           
 34333 ;; *************** function _TMR2_Initialize *****************
 34334 ;; Defined at:
 34335 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 34336 ;; Parameters:    Size  Location     Type
 34337 ;;		None
 34338 ;; Auto vars:     Size  Location     Type
 34339 ;;		None
 34340 ;; Return value:  Size  Location     Type
 34341 ;;                  1  [STACK] void 
 34342 ;; Registers used:
 34343 ;;		wreg, status,2
 34344 ;; Tracked objects:
 34345 ;;		On entry : 3F/3F
 34346 ;;		On exit  : 3F/39
 34347 ;;		Unchanged: 0/0
 34348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34353 ;;Total ram usage:        0 bytes
 34354 ;; Hardware stack levels used:    1
 34355 ;; Hardware stack levels required when called:   15
 34356 ;; This function calls:
 34357 ;;		Nothing
 34358 ;; This function is called by:
 34359 ;;		_SYSTEM_Initialize
 34360 ;; This function uses a reentrant model
 34361 ;;
 34362                           
 34363                           	psect	text141
 34364  01D37E                     __ptext141:
 34365                           	opt callstack 0
 34366  01D37E                     _TMR2_Initialize:
 34367                           	opt callstack 14
 34368                           
 34369                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 34370                           
 34371                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34372                           ;incstack = 0
 34373  01D37E  0E01               	movlw	1
 34374  01D380  6EAE               	movwf	174,c	;volatile
 34375                           
 34376                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 34377  01D382  6AAD               	clrf	173,c	;volatile
 34378                           
 34379                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 34380  01D384  6AAF               	clrf	175,c	;volatile
 34381                           
 34382                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 34383  01D386  0E63               	movlw	99
 34384  01D388  6EAB               	movwf	171,c	;volatile
 34385                           
 34386                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 34387  01D38A  6AAA               	clrf	170,c	;volatile
 34388                           
 34389                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 34390  01D38C  0139               	movlb	57	; () banked
 34391  01D38E  95A4               	bcf	164,2,b	;volatile
 34392                           
 34393                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 34394  01D390  0EC0               	movlw	192
 34395  01D392  6EAC               	movwf	172,c	;volatile
 34396                           
 34397                           ; BSR set to: 57
 34398                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34399  01D394  0012               	return		;funcret
 34400  01D396                     __end_of_TMR2_Initialize:
 34401                           	opt callstack 0
 34402                           
 34403 ;; *************** function _SPI1_Initialize *****************
 34404 ;; Defined at:
 34405 ;;		line 64 in file "mcc_generated_files/spi1.c"
 34406 ;; Parameters:    Size  Location     Type
 34407 ;;		None
 34408 ;; Auto vars:     Size  Location     Type
 34409 ;;		None
 34410 ;; Return value:  Size  Location     Type
 34411 ;;                  1  [STACK] void 
 34412 ;; Registers used:
 34413 ;;		wreg, status,2
 34414 ;; Tracked objects:
 34415 ;;		On entry : 3F/39
 34416 ;;		On exit  : 3F/3D
 34417 ;;		Unchanged: 0/0
 34418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34423 ;;Total ram usage:        0 bytes
 34424 ;; Hardware stack levels used:    1
 34425 ;; Hardware stack levels required when called:   15
 34426 ;; This function calls:
 34427 ;;		Nothing
 34428 ;; This function is called by:
 34429 ;;		_SYSTEM_Initialize
 34430 ;; This function uses a reentrant model
 34431 ;;
 34432                           
 34433                           	psect	text142
 34434  01D396                     __ptext142:
 34435                           	opt callstack 0
 34436  01D396                     _SPI1_Initialize:
 34437                           	opt callstack 14
 34438                           
 34439                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 34440                           
 34441                           ; BSR set to: 57
 34442                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34443                           ;incstack = 0
 34444  01D396  0E40               	movlw	64
 34445  01D398  013D               	movlb	61	; () banked
 34446  01D39A  6F15               	movwf	21,b	;volatile
 34447                           
 34448                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 34449  01D39C  0E03               	movlw	3
 34450  01D39E  6F16               	movwf	22,b	;volatile
 34451                           
 34452                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 34453  01D3A0  0E4F               	movlw	79
 34454  01D3A2  6F19               	movwf	25,b	;volatile
 34455                           
 34456                           ; BSR set to: 61
 34457                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 34458  01D3A4  6B1C               	clrf	28,b	;volatile
 34459                           
 34460                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 34461  01D3A6  0E83               	movlw	131
 34462  01D3A8  6F14               	movwf	20,b	;volatile
 34463                           
 34464                           ; BSR set to: 61
 34465                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34466  01D3AA  0012               	return		;funcret
 34467  01D3AC                     __end_of_SPI1_Initialize:
 34468                           	opt callstack 0
 34469                           
 34470 ;; *************** function _PWM8_Initialize *****************
 34471 ;; Defined at:
 34472 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 34473 ;; Parameters:    Size  Location     Type
 34474 ;;		None
 34475 ;; Auto vars:     Size  Location     Type
 34476 ;;		None
 34477 ;; Return value:  Size  Location     Type
 34478 ;;                  1  [STACK] void 
 34479 ;; Registers used:
 34480 ;;		wreg, status,2
 34481 ;; Tracked objects:
 34482 ;;		On entry : 0/0
 34483 ;;		On exit  : 3F/3F
 34484 ;;		Unchanged: 0/0
 34485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34490 ;;Total ram usage:        0 bytes
 34491 ;; Hardware stack levels used:    1
 34492 ;; Hardware stack levels required when called:   15
 34493 ;; This function calls:
 34494 ;;		Nothing
 34495 ;; This function is called by:
 34496 ;;		_SYSTEM_Initialize
 34497 ;; This function uses a reentrant model
 34498 ;;
 34499                           
 34500                           	psect	text143
 34501  01D3AC                     __ptext143:
 34502                           	opt callstack 0
 34503  01D3AC                     _PWM8_Initialize:
 34504                           	opt callstack 14
 34505                           
 34506                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 34507                           
 34508                           ; BSR set to: 61
 34509                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34510                           ;incstack = 0
 34511  01D3AC  0E80               	movlw	128
 34512  01D3AE  6E62               	movwf	98,c	;volatile
 34513                           
 34514                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 34515  01D3B0  6A61               	clrf	97,c	;volatile
 34516                           
 34517                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 34518  01D3B2  0E40               	movlw	64
 34519  01D3B4  6E60               	movwf	96,c	;volatile
 34520                           
 34521                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 34522  01D3B6  013F               	movlb	63	; () banked
 34523  01D3B8  515F               	movf	95,w,b	;volatile
 34524  01D3BA  0B3F               	andlw	-193
 34525  01D3BC  0940               	iorlw	64
 34526  01D3BE  6F5F               	movwf	95,b	;volatile
 34527                           
 34528                           ; BSR set to: 63
 34529                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34530  01D3C0  0012               	return		;funcret
 34531  01D3C2                     __end_of_PWM8_Initialize:
 34532                           	opt callstack 0
 34533                           
 34534 ;; *************** function _PMD_Initialize *****************
 34535 ;; Defined at:
 34536 ;;		line 91 in file "mcc_generated_files/mcc.c"
 34537 ;; Parameters:    Size  Location     Type
 34538 ;;		None
 34539 ;; Auto vars:     Size  Location     Type
 34540 ;;		None
 34541 ;; Return value:  Size  Location     Type
 34542 ;;                  1  [STACK] void 
 34543 ;; Registers used:
 34544 ;;		None
 34545 ;; Tracked objects:
 34546 ;;		On entry : 3F/39
 34547 ;;		On exit  : 3F/39
 34548 ;;		Unchanged: 0/0
 34549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34554 ;;Total ram usage:        0 bytes
 34555 ;; Hardware stack levels used:    1
 34556 ;; Hardware stack levels required when called:   15
 34557 ;; This function calls:
 34558 ;;		Nothing
 34559 ;; This function is called by:
 34560 ;;		_SYSTEM_Initialize
 34561 ;; This function uses a reentrant model
 34562 ;;
 34563                           
 34564                           	psect	text144
 34565  01D3D8                     __ptext144:
 34566                           	opt callstack 0
 34567  01D3D8                     _PMD_Initialize:
 34568                           	opt callstack 14
 34569                           
 34570                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 34571                           
 34572                           ; BSR set to: 63
 34573                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34574                           ;incstack = 0
 34575  01D3D8  0139               	movlb	57	; () banked
 34576  01D3DA  6BC0               	clrf	192,b	;volatile
 34577                           
 34578                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 34579  01D3DC  6BC1               	clrf	193,b	;volatile
 34580                           
 34581                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 34582  01D3DE  6BC2               	clrf	194,b	;volatile
 34583                           
 34584                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 34585  01D3E0  6BC3               	clrf	195,b	;volatile
 34586                           
 34587                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 34588  01D3E2  6BC4               	clrf	196,b	;volatile
 34589                           
 34590                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 34591  01D3E4  6BC5               	clrf	197,b	;volatile
 34592                           
 34593                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 34594  01D3E6  6BC6               	clrf	198,b	;volatile
 34595                           
 34596                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 34597  01D3E8  6BC7               	clrf	199,b	;volatile
 34598                           
 34599                           ; BSR set to: 57
 34600                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 34601  01D3EA  0012               	return		;funcret
 34602  01D3EC                     __end_of_PMD_Initialize:
 34603                           	opt callstack 0
 34604                           
 34605 ;; *************** function _PIN_MANAGER_Initialize *****************
 34606 ;; Defined at:
 34607 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 34608 ;; Parameters:    Size  Location     Type
 34609 ;;		None
 34610 ;; Auto vars:     Size  Location     Type
 34611 ;;		None
 34612 ;; Return value:  Size  Location     Type
 34613 ;;                  1  [STACK] void 
 34614 ;; Registers used:
 34615 ;;		wreg, status,2
 34616 ;; Tracked objects:
 34617 ;;		On entry : 3F/39
 34618 ;;		On exit  : 3F/3A
 34619 ;;		Unchanged: 0/0
 34620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34625 ;;Total ram usage:        0 bytes
 34626 ;; Hardware stack levels used:    1
 34627 ;; Hardware stack levels required when called:   15
 34628 ;; This function calls:
 34629 ;;		Nothing
 34630 ;; This function is called by:
 34631 ;;		_SYSTEM_Initialize
 34632 ;; This function uses a reentrant model
 34633 ;;
 34634                           
 34635                           	psect	text145
 34636  01BB6E                     __ptext145:
 34637                           	opt callstack 0
 34638  01BB6E                     _PIN_MANAGER_Initialize:
 34639                           	opt callstack 14
 34640                           
 34641                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 34642                           
 34643                           ; BSR set to: 57
 34644                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34645                           ;incstack = 0
 34646  01BB6E  0E07               	movlw	7
 34647  01BB70  6EBE               	movwf	190,c	;volatile
 34648                           
 34649                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 34650  01BB72  6ABD               	clrf	189,c	;volatile
 34651                           
 34652                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 34653  01BB74  6ABA               	clrf	186,c	;volatile
 34654                           
 34655                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 34656  01BB76  0E23               	movlw	35
 34657  01BB78  6EBF               	movwf	191,c	;volatile
 34658                           
 34659                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 34660  01BB7A  6ABB               	clrf	187,c	;volatile
 34661                           
 34662                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 34663  01BB7C  0E07               	movlw	7
 34664  01BB7E  6EBC               	movwf	188,c	;volatile
 34665                           
 34666                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 34667  01BB80  6AC6               	clrf	198,c	;volatile
 34668                           
 34669                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 34670  01BB82  0E0C               	movlw	12
 34671  01BB84  6EC7               	movwf	199,c	;volatile
 34672                           
 34673                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 34674  01BB86  68C2               	setf	194,c	;volatile
 34675                           
 34676                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 34677  01BB88  0EBF               	movlw	191
 34678  01BB8A  6EC3               	movwf	195,c	;volatile
 34679                           
 34680                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 34681  01BB8C  0E90               	movlw	144
 34682  01BB8E  6EC4               	movwf	196,c	;volatile
 34683                           
 34684                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 34685  01BB90  0E0C               	movlw	12
 34686  01BB92  6EC5               	movwf	197,c	;volatile
 34687                           
 34688                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 34689  01BB94  013A               	movlb	58	; () banked
 34690  01BB96  6B70               	clrf	112,b	;volatile
 34691                           
 34692                           ; BSR set to: 58
 34693                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 34694  01BB98  6B60               	clrf	96,b	;volatile
 34695                           
 34696                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 34697  01BB9A  0E3C               	movlw	60
 34698  01BB9C  6F50               	movwf	80,b	;volatile
 34699                           
 34700                           ; BSR set to: 58
 34701                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 34702  01BB9E  6B80               	clrf	128,b	;volatile
 34703                           
 34704                           ; BSR set to: 58
 34705                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 34706  01BBA0  6B90               	clrf	144,b	;volatile
 34707                           
 34708                           ; BSR set to: 58
 34709                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 34710  01BBA2  6940               	setf	64,b	;volatile
 34711                           
 34712                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 34713  01BBA4  0E0C               	movlw	12
 34714  01BBA6  6F71               	movwf	113,b	;volatile
 34715                           
 34716                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 34717  01BBA8  0E0C               	movlw	12
 34718  01BBAA  6F91               	movwf	145,b	;volatile
 34719                           
 34720                           ; BSR set to: 58
 34721                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 34722  01BBAC  6B81               	clrf	129,b	;volatile
 34723                           
 34724                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 34725  01BBAE  0E83               	movlw	131
 34726  01BBB0  6F51               	movwf	81,b	;volatile
 34727                           
 34728                           ; BSR set to: 58
 34729                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 34730  01BBB2  6B41               	clrf	65,b	;volatile
 34731                           
 34732                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 34733  01BBB4  0E97               	movlw	151
 34734  01BBB6  6F61               	movwf	97,b	;volatile
 34735                           
 34736                           ; BSR set to: 58
 34737                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 34738  01BBB8  6B82               	clrf	130,b	;volatile
 34739                           
 34740                           ; BSR set to: 58
 34741                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 34742  01BBBA  6B92               	clrf	146,b	;volatile
 34743                           
 34744                           ; BSR set to: 58
 34745                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 34746  01BBBC  6B42               	clrf	66,b	;volatile
 34747                           
 34748                           ; BSR set to: 58
 34749                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 34750  01BBBE  6B52               	clrf	82,b	;volatile
 34751                           
 34752                           ; BSR set to: 58
 34753                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 34754  01BBC0  6B62               	clrf	98,b	;volatile
 34755                           
 34756                           ; BSR set to: 58
 34757                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 34758  01BBC2  6B72               	clrf	114,b	;volatile
 34759                           
 34760                           ; BSR set to: 58
 34761                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 34762  01BBC4  6943               	setf	67,b	;volatile
 34763                           
 34764                           ; BSR set to: 58
 34765                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 34766  01BBC6  6953               	setf	83,b	;volatile
 34767                           
 34768                           ; BSR set to: 58
 34769                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 34770  01BBC8  6963               	setf	99,b	;volatile
 34771                           
 34772                           ; BSR set to: 58
 34773                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 34774  01BBCA  6973               	setf	115,b	;volatile
 34775                           
 34776                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 34777  01BBCC  0E07               	movlw	7
 34778  01BBCE  6F83               	movwf	131,b	;volatile
 34779                           
 34780                           ; BSR set to: 58
 34781                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 34782  01BBD0  6993               	setf	147,b	;volatile
 34783                           
 34784                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 34785  01BBD2  0E0F               	movlw	15
 34786  01BBD4  6FE8               	movwf	232,b	;volatile
 34787                           
 34788                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 34789  01BBD6  0E13               	movlw	19
 34790  01BBD8  6FDE               	movwf	222,b	;volatile
 34791                           
 34792                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 34793  01BBDA  0E16               	movlw	22
 34794  01BBDC  6F0E               	movwf	14,b	;volatile
 34795                           
 34796                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 34797  01BBDE  0E1E               	movlw	30
 34798  01BBE0  6F13               	movwf	19,b	;volatile
 34799                           
 34800                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 34801  01BBE2  0E08               	movlw	8
 34802  01BBE4  6FC0               	movwf	192,b	;volatile
 34803                           
 34804                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 34805  01BBE6  0E10               	movlw	16
 34806  01BBE8  6F19               	movwf	25,b	;volatile
 34807                           
 34808                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 34809  01BBEA  0E09               	movlw	9
 34810  01BBEC  6FC1               	movwf	193,b	;volatile
 34811                           
 34812                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 34813  01BBEE  0E1F               	movlw	31
 34814  01BBF0  6F15               	movwf	21,b	;volatile
 34815                           
 34816                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 34817  01BBF2  0E13               	movlw	19
 34818  01BBF4  6F16               	movwf	22,b	;volatile
 34819                           
 34820                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 34821  01BBF6  0E17               	movlw	23
 34822  01BBF8  6FE5               	movwf	229,b	;volatile
 34823                           
 34824                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 34825  01BBFA  0E14               	movlw	20
 34826  01BBFC  6FDF               	movwf	223,b	;volatile
 34827                           
 34828                           ; BSR set to: 58
 34829                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 34830  01BBFE  0012               	return		;funcret
 34831  01BC00                     __end_of_PIN_MANAGER_Initialize:
 34832                           	opt callstack 0
 34833                           
 34834 ;; *************** function _OSCILLATOR_Initialize *****************
 34835 ;; Defined at:
 34836 ;;		line 73 in file "mcc_generated_files/mcc.c"
 34837 ;; Parameters:    Size  Location     Type
 34838 ;;		None
 34839 ;; Auto vars:     Size  Location     Type
 34840 ;;		None
 34841 ;; Return value:  Size  Location     Type
 34842 ;;                  1  [STACK] void 
 34843 ;; Registers used:
 34844 ;;		wreg, status,2
 34845 ;; Tracked objects:
 34846 ;;		On entry : 3F/3A
 34847 ;;		On exit  : 3F/39
 34848 ;;		Unchanged: 0/0
 34849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34854 ;;Total ram usage:        0 bytes
 34855 ;; Hardware stack levels used:    1
 34856 ;; Hardware stack levels required when called:   15
 34857 ;; This function calls:
 34858 ;;		Nothing
 34859 ;; This function is called by:
 34860 ;;		_SYSTEM_Initialize
 34861 ;; This function uses a reentrant model
 34862 ;;
 34863                           
 34864                           	psect	text146
 34865  01D3C2                     __ptext146:
 34866                           	opt callstack 0
 34867  01D3C2                     _OSCILLATOR_Initialize:
 34868                           	opt callstack 14
 34869                           
 34870                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 34871                           
 34872                           ; BSR set to: 58
 34873                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34874                           ;incstack = 0
 34875  01D3C2  0E20               	movlw	32
 34876  01D3C4  0139               	movlb	57	; () banked
 34877  01D3C6  6FD9               	movwf	217,b	;volatile
 34878                           
 34879                           ; BSR set to: 57
 34880                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 34881  01D3C8  6BDB               	clrf	219,b	;volatile
 34882                           
 34883                           ; BSR set to: 57
 34884                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 34885  01D3CA  6BDD               	clrf	221,b	;volatile
 34886                           
 34887                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 34888  01D3CC  0E02               	movlw	2
 34889  01D3CE  6FDF               	movwf	223,b	;volatile
 34890                           
 34891                           ; BSR set to: 57
 34892                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 34893  01D3D0  6BDE               	clrf	222,b	;volatile
 34894  01D3D2                     l171:
 34895                           
 34896                           ; BSR set to: 57
 34897                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 34898  01D3D2  B1DC               	btfsc	220,0,b	;volatile
 34899  01D3D4  0012               	return	
 34900  01D3D6  D7FD               	goto	l171
 34901  01D3D8                     __end_of_OSCILLATOR_Initialize:
 34902                           	opt callstack 0
 34903                           
 34904 ;; *************** function _INTERRUPT_Initialize *****************
 34905 ;; Defined at:
 34906 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 34907 ;; Parameters:    Size  Location     Type
 34908 ;;		None
 34909 ;; Auto vars:     Size  Location     Type
 34910 ;;  state           1  [STACK] _Bool 
 34911 ;; Return value:  Size  Location     Type
 34912 ;;                  1  [STACK] void 
 34913 ;; Registers used:
 34914 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 34915 ;; Tracked objects:
 34916 ;;		On entry : 0/0
 34917 ;;		On exit  : 3F/39
 34918 ;;		Unchanged: 0/0
 34919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34924 ;;Total ram usage:        0 bytes
 34925 ;; Hardware stack levels used:    1
 34926 ;; Hardware stack levels required when called:   15
 34927 ;; This function calls:
 34928 ;;		Nothing
 34929 ;; This function is called by:
 34930 ;;		_SYSTEM_Initialize
 34931 ;; This function uses a reentrant model
 34932 ;;
 34933                           
 34934                           	psect	text147
 34935  01C22A                     __ptext147:
 34936                           	opt callstack 0
 34937  01C22A                     _INTERRUPT_Initialize:
 34938                           	opt callstack 0
 34939                           
 34940                           ; BSR set to: 57
 34941                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34942  01C22A  52E6               	movf	postinc1,f,c
 34943                           
 34944                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 34945                           
 34946                           ;incstack = 0
 34947  01C22C  8AD2               	bsf	210,5,c	;volatile
 34948                           
 34949                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 34950  01C22E  AED2               	btfss	16338,7,c	;volatile
 34951  01C230  D003               	goto	u10180
 34952  01C232  6A0C               	clrf	(btemp+11)^0,c
 34953  01C234  2A0C               	incf	(btemp+11)^0,f,c
 34954  01C236  D001               	goto	u10198
 34955  01C238                     u10180:
 34956  01C238  6A0C               	clrf	(btemp+11)^0,c
 34957  01C23A                     u10198:
 34958                           
 34959                           ;stkvar	_state @ sp[(-1)+0]
 34960  01C23A  0EFF               	movlw	-1
 34961  01C23C  0060  F033  FFE3   	movff	btemp+11,plusw1
 34962                           
 34963                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 34964  01C242  9ED2               	bcf	16338,7,c	;volatile
 34965                           
 34966                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 34967  01C244  0E55               	movlw	85
 34968  01C246  6ED4               	movwf	212,c	;volatile
 34969                           
 34970                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 34971  01C248  0EAA               	movlw	170
 34972  01C24A  6ED4               	movwf	212,c	;volatile
 34973                           
 34974                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 34975  01C24C  90D4               	bcf	212,0,c	;volatile
 34976                           
 34977                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 34978  01C24E  0138               	movlb	56	; () banked
 34979  01C250  6B9F               	clrf	159,b	;volatile
 34980                           
 34981                           ; BSR set to: 56
 34982                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 34983  01C252  6B9E               	clrf	158,b	;volatile
 34984                           
 34985                           ; BSR set to: 56
 34986                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 34987  01C254  0E08               	movlw	8
 34988  01C256  6F9D               	movwf	157,b	;volatile
 34989                           
 34990                           ; BSR set to: 56
 34991                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 34992  01C258  0E55               	movlw	85
 34993  01C25A  6ED4               	movwf	212,c	;volatile
 34994                           
 34995                           ; BSR set to: 56
 34996                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 34997  01C25C  0EAA               	movlw	170
 34998  01C25E  6ED4               	movwf	212,c	;volatile
 34999                           
 35000                           ; BSR set to: 56
 35001                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 35002  01C260  80D4               	bsf	212,0,c	;volatile
 35003                           
 35004                           ; BSR set to: 56
 35005                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 35006                           ;stkvar	_state @ sp[(-1)+0]
 35007  01C262  0EFF               	movlw	-1
 35008  01C264  B0E3               	btfsc	plusw1,0,c
 35009  01C266  D002               	bra	u10205
 35010  01C268  9ED2               	bcf	16338,7,c	;volatile
 35011  01C26A  D001               	bra	u10206
 35012  01C26C                     u10205:
 35013  01C26C  8ED2               	bsf	16338,7,c	;volatile
 35014  01C26E                     u10206:
 35015                           
 35016                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 35017  01C26E  0139               	movlb	57	; () banked
 35018  01C270  8782               	bsf	130,3,b	;volatile
 35019                           
 35020                           ; BSR set to: 57
 35021                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 35022  01C272  8382               	bsf	130,1,b	;volatile
 35023                           
 35024                           ; BSR set to: 57
 35025                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 35026  01C274  8182               	bsf	130,0,b	;volatile
 35027                           
 35028                           ; BSR set to: 57
 35029                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 35030  01C276  8582               	bsf	130,2,b	;volatile
 35031                           
 35032                           ; BSR set to: 57
 35033                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 35034  01C278  8786               	bsf	134,3,b	;volatile
 35035                           
 35036                           ; BSR set to: 57
 35037                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 35038  01C27A  8586               	bsf	134,2,b	;volatile
 35039                           
 35040                           ; BSR set to: 57
 35041                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 35042  01C27C  8783               	bsf	131,3,b	;volatile
 35043                           
 35044                           ; BSR set to: 57
 35045                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 35046  01C27E  8181               	bsf	129,0,b	;volatile
 35047                           
 35048                           ; BSR set to: 57
 35049                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 35050  01C280  9185               	bcf	133,0,b	;volatile
 35051                           
 35052                           ; BSR set to: 57
 35053                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 35054  01C282  8189               	bsf	137,0,b	;volatile
 35055                           
 35056                           ; BSR set to: 57
 35057                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 35058  01C284  9D88               	bcf	136,6,b	;volatile
 35059                           
 35060                           ; BSR set to: 57
 35061                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 35062  01C286  9D86               	bcf	134,6,b	;volatile
 35063                           
 35064                           ; BSR set to: 57
 35065                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 35066  01C288  8581               	bsf	129,2,b	;volatile
 35067                           
 35068                           ; BSR set to: 57
 35069                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 35070  01C28A  8781               	bsf	129,3,b	;volatile
 35071                           
 35072                           ; BSR set to: 57
 35073                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 35074  01C28C  52E5               	movf	postdec1,f,c
 35075  01C28E  0012               	return		;funcret
 35076  01C290                     __end_of_INTERRUPT_Initialize:
 35077                           	opt callstack 0
 35078                           
 35079 ;; *************** function _FVR_Initialize *****************
 35080 ;; Defined at:
 35081 ;;		line 58 in file "mcc_generated_files/fvr.c"
 35082 ;; Parameters:    Size  Location     Type
 35083 ;;		None
 35084 ;; Auto vars:     Size  Location     Type
 35085 ;;		None
 35086 ;; Return value:  Size  Location     Type
 35087 ;;                  1  [STACK] void 
 35088 ;; Registers used:
 35089 ;;		wreg, status,2
 35090 ;; Tracked objects:
 35091 ;;		On entry : 3F/39
 35092 ;;		On exit  : 3F/3E
 35093 ;;		Unchanged: 0/0
 35094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35099 ;;Total ram usage:        0 bytes
 35100 ;; Hardware stack levels used:    1
 35101 ;; Hardware stack levels required when called:   15
 35102 ;; This function calls:
 35103 ;;		Nothing
 35104 ;; This function is called by:
 35105 ;;		_SYSTEM_Initialize
 35106 ;; This function uses a reentrant model
 35107 ;;
 35108                           
 35109                           	psect	text148
 35110  01D50C                     __ptext148:
 35111                           	opt callstack 0
 35112  01D50C                     _FVR_Initialize:
 35113                           	opt callstack 14
 35114                           
 35115                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 35116                           
 35117                           ; BSR set to: 57
 35118                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35119                           ;incstack = 0
 35120  01D50C  0EAF               	movlw	175
 35121  01D50E  013E               	movlb	62	; () banked
 35122  01D510  6FC1               	movwf	193,b	;volatile
 35123                           
 35124                           ; BSR set to: 62
 35125                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 35126  01D512  0012               	return		;funcret
 35127  01D514                     __end_of_FVR_Initialize:
 35128                           	opt callstack 0
 35129                           
 35130 ;; *************** function _EXT_INT_Initialize *****************
 35131 ;; Defined at:
 35132 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 35133 ;; Parameters:    Size  Location     Type
 35134 ;;		None
 35135 ;; Auto vars:     Size  Location     Type
 35136 ;;		None
 35137 ;; Return value:  Size  Location     Type
 35138 ;;                  1  [STACK] void 
 35139 ;; Registers used:
 35140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35141 ;; Tracked objects:
 35142 ;;		On entry : 3F/39
 35143 ;;		On exit  : 3F/39
 35144 ;;		Unchanged: 0/0
 35145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35150 ;;Total ram usage:        0 bytes
 35151 ;; Hardware stack levels used:    1
 35152 ;; Hardware stack levels required when called:   16
 35153 ;; This function calls:
 35154 ;;		_INT0_SetInterruptHandler
 35155 ;;		_INT1_SetInterruptHandler
 35156 ;; This function is called by:
 35157 ;;		_SYSTEM_Initialize
 35158 ;; This function uses a reentrant model
 35159 ;;
 35160                           
 35161                           	psect	text149
 35162  01CCA6                     __ptext149:
 35163                           	opt callstack 0
 35164  01CCA6                     _EXT_INT_Initialize:
 35165                           	opt callstack 13
 35166                           
 35167                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 35168                           
 35169                           ; BSR set to: 62
 35170                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35171                           ;incstack = 0
 35172  01CCA6  0139               	movlb	57	; () banked
 35173  01CCA8  91A1               	bcf	161,0,b	;volatile
 35174                           
 35175                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 35176  01CCAA  90D2               	bcf	210,0,c	;volatile
 35177                           
 35178                           ; BSR set to: 57
 35179                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 35180  01CCAC  0E3E               	movlw	low _INT0_DefaultInterruptHandler
 35181  01CCAE  6EE6               	movwf	postinc1,c
 35182  01CCB0  0ED5               	movlw	high _INT0_DefaultInterruptHandler
 35183  01CCB2  6EE6               	movwf	postinc1,c
 35184  01CCB4  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 35185  01CCB6  6EE6               	movwf	postinc1,c
 35186  01CCB8  EC09  F0E8         	call	_INT0_SetInterruptHandler	;wreg free
 35187                           
 35188                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 35189  01CCBC  0139               	movlb	57	; () banked
 35190  01CCBE  8191               	bsf	145,0,b	;volatile
 35191                           
 35192                           ; BSR set to: 57
 35193                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 35194  01CCC0  91A5               	bcf	165,0,b	;volatile
 35195                           
 35196                           ; BSR set to: 57
 35197                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 35198  01CCC2  92D2               	bcf	210,1,c	;volatile
 35199                           
 35200                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 35201  01CCC4  0E3A               	movlw	low _INT1_DefaultInterruptHandler
 35202  01CCC6  6EE6               	movwf	postinc1,c
 35203  01CCC8  0ED5               	movlw	high _INT1_DefaultInterruptHandler
 35204  01CCCA  6EE6               	movwf	postinc1,c
 35205  01CCCC  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 35206  01CCCE  6EE6               	movwf	postinc1,c
 35207  01CCD0  ECF5  F0E7         	call	_INT1_SetInterruptHandler	;wreg free
 35208                           
 35209                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 35210  01CCD4  0139               	movlb	57	; () banked
 35211  01CCD6  8195               	bsf	149,0,b	;volatile
 35212                           
 35213                           ; BSR set to: 57
 35214                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 35215  01CCD8  0012               	return		;funcret
 35216  01CCDA                     __end_of_EXT_INT_Initialize:
 35217                           	opt callstack 0
 35218                           
 35219 ;; *************** function _INT1_SetInterruptHandler *****************
 35220 ;; Defined at:
 35221 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 35222 ;; Parameters:    Size  Location     Type
 35223 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35224 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 35225 ;; Auto vars:     Size  Location     Type
 35226 ;;		None
 35227 ;; Return value:  Size  Location     Type
 35228 ;;                  1  [STACK] void 
 35229 ;; Registers used:
 35230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35231 ;; Tracked objects:
 35232 ;;		On entry : 3F/39
 35233 ;;		On exit  : 0/0
 35234 ;;		Unchanged: 0/0
 35235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35240 ;;Total ram usage:        0 bytes
 35241 ;; Hardware stack levels used:    1
 35242 ;; Hardware stack levels required when called:   15
 35243 ;; This function calls:
 35244 ;;		Nothing
 35245 ;; This function is called by:
 35246 ;;		_EXT_INT_Initialize
 35247 ;;		_start_switch_handler
 35248 ;; This function uses a reentrant model
 35249 ;;
 35250                           
 35251                           	psect	text150
 35252  01CFEA                     __ptext150:
 35253                           	opt callstack 0
 35254  01CFEA                     _INT1_SetInterruptHandler:
 35255                           	opt callstack 14
 35256                           
 35257                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 35258                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35259                           
 35260                           ; BSR set to: 57
 35261                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35262                           ;incstack = 0
 35263  01CFEA  50E1               	movf	fsr1l,w,c
 35264  01CFEC  0FFD               	addlw	-3
 35265  01CFEE  6ED9               	movwf	fsr2l,c
 35266  01CFF0  50E2               	movf	fsr1h,w,c
 35267  01CFF2  6EDA               	movwf	fsr2h,c
 35268  01CFF4  0EFF               	movlw	255
 35269  01CFF6  22DA               	addwfc	fsr2h,f,c
 35270  01CFF8  006F FF78  F0BA    	movff	postinc2,_INT1_InterruptHandler
 35271  01CFFE  006F FF78  F0BB    	movff	postinc2,_INT1_InterruptHandler+1
 35272  01D004  006F FF74  F0BC    	movff	postdec2,_INT1_InterruptHandler+2
 35273                           
 35274                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 35275  01D00A  52E5               	movf	postdec1,f,c
 35276  01D00C  52E5               	movf	postdec1,f,c
 35277  01D00E  52E5               	movf	postdec1,f,c
 35278  01D010  0012               	return		;funcret
 35279  01D012                     __end_of_INT1_SetInterruptHandler:
 35280                           	opt callstack 0
 35281                           
 35282 ;; *************** function _INT0_SetInterruptHandler *****************
 35283 ;; Defined at:
 35284 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 35285 ;; Parameters:    Size  Location     Type
 35286 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35287 ;;		 -> INT0_DefaultInterruptHandler(1), 
 35288 ;; Auto vars:     Size  Location     Type
 35289 ;;		None
 35290 ;; Return value:  Size  Location     Type
 35291 ;;                  1  [STACK] void 
 35292 ;; Registers used:
 35293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35294 ;; Tracked objects:
 35295 ;;		On entry : 3F/39
 35296 ;;		On exit  : 0/0
 35297 ;;		Unchanged: 0/0
 35298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35303 ;;Total ram usage:        0 bytes
 35304 ;; Hardware stack levels used:    1
 35305 ;; Hardware stack levels required when called:   15
 35306 ;; This function calls:
 35307 ;;		Nothing
 35308 ;; This function is called by:
 35309 ;;		_EXT_INT_Initialize
 35310 ;; This function uses a reentrant model
 35311 ;;
 35312                           
 35313                           	psect	text151
 35314  01D012                     __ptext151:
 35315                           	opt callstack 0
 35316  01D012                     _INT0_SetInterruptHandler:
 35317                           	opt callstack 13
 35318                           
 35319                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 35320                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35321                           
 35322                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35323                           ;incstack = 0
 35324  01D012  50E1               	movf	fsr1l,w,c
 35325  01D014  0FFD               	addlw	-3
 35326  01D016  6ED9               	movwf	fsr2l,c
 35327  01D018  50E2               	movf	fsr1h,w,c
 35328  01D01A  6EDA               	movwf	fsr2h,c
 35329  01D01C  0EFF               	movlw	255
 35330  01D01E  22DA               	addwfc	fsr2h,f,c
 35331  01D020  006F FF78  F0BD    	movff	postinc2,_INT0_InterruptHandler
 35332  01D026  006F FF78  F0BE    	movff	postinc2,_INT0_InterruptHandler+1
 35333  01D02C  006F FF74  F0BF    	movff	postdec2,_INT0_InterruptHandler+2
 35334                           
 35335                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 35336  01D032  52E5               	movf	postdec1,f,c
 35337  01D034  52E5               	movf	postdec1,f,c
 35338  01D036  52E5               	movf	postdec1,f,c
 35339  01D038  0012               	return		;funcret
 35340  01D03A                     __end_of_INT0_SetInterruptHandler:
 35341                           	opt callstack 0
 35342                           
 35343 ;; *************** function _DMA2_Initialize *****************
 35344 ;; Defined at:
 35345 ;;		line 61 in file "mcc_generated_files/dma2.c"
 35346 ;; Parameters:    Size  Location     Type
 35347 ;;		None
 35348 ;; Auto vars:     Size  Location     Type
 35349 ;;		None
 35350 ;; Return value:  Size  Location     Type
 35351 ;;                  1  [STACK] void 
 35352 ;; Registers used:
 35353 ;;		wreg, status,2
 35354 ;; Tracked objects:
 35355 ;;		On entry : 3F/3D
 35356 ;;		On exit  : 3F/3B
 35357 ;;		Unchanged: 0/0
 35358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35363 ;;Total ram usage:        0 bytes
 35364 ;; Hardware stack levels used:    1
 35365 ;; Hardware stack levels required when called:   15
 35366 ;; This function calls:
 35367 ;;		Nothing
 35368 ;; This function is called by:
 35369 ;;		_SYSTEM_Initialize
 35370 ;; This function uses a reentrant model
 35371 ;;
 35372                           
 35373                           	psect	text152
 35374  01C4CC                     __ptext152:
 35375                           	opt callstack 0
 35376  01C4CC                     _DMA2_Initialize:
 35377                           	opt callstack 14
 35378                           
 35379                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 35380                           
 35381                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35382                           ;incstack = 0
 35383  01C4CC  0E00               	movlw	0
 35384  01C4CE  013B               	movlb	59	; () banked
 35385  01C4D0  6FD9               	movwf	217,b	;volatile
 35386  01C4D2  0E10               	movlw	16
 35387  01C4D4  6FDA               	movwf	218,b	;volatile
 35388  01C4D6  0E00               	movlw	0
 35389  01C4D8  6FDB               	movwf	219,b	;volatile
 35390                           
 35391                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 35392  01C4DA  0E3F               	movlw	63
 35393  01C4DC  6FD1               	movwf	209,b	;volatile
 35394  01C4DE  0EBB               	movlw	187
 35395  01C4E0  6FD0               	movwf	208,b	;volatile
 35396                           
 35397                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 35398  01C4E2  0E03               	movlw	3
 35399  01C4E4  6FDD               	movwf	221,b	;volatile
 35400                           
 35401                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 35402  01C4E6  0E00               	movlw	0
 35403  01C4E8  6FD8               	movwf	216,b	;volatile
 35404  01C4EA  0E01               	movlw	1
 35405  01C4EC  6FD7               	movwf	215,b	;volatile
 35406                           
 35407                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 35408  01C4EE  0E00               	movlw	0
 35409  01C4F0  6FCF               	movwf	207,b	;volatile
 35410  01C4F2  0E01               	movlw	1
 35411  01C4F4  6FCE               	movwf	206,b	;volatile
 35412                           
 35413                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 35414  01C4F6  0E1C               	movlw	28
 35415  01C4F8  6FDF               	movwf	223,b	;volatile
 35416                           
 35417                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 35418  01C4FA  0E3D               	movlw	61
 35419  01C4FC  6FDE               	movwf	222,b	;volatile
 35420                           
 35421                           ; BSR set to: 59
 35422                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 35423  01C4FE  0139               	movlb	57	; () banked
 35424  01C500  97A5               	bcf	165,3,b	;volatile
 35425                           
 35426                           ; BSR set to: 57
 35427                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 35428  01C502  95A5               	bcf	165,2,b	;volatile
 35429                           
 35430                           ; BSR set to: 57
 35431                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 35432  01C504  9BA5               	bcf	165,5,b	;volatile
 35433                           
 35434                           ; BSR set to: 57
 35435                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 35436  01C506  99A5               	bcf	165,4,b	;volatile
 35437                           
 35438                           ; BSR set to: 57
 35439                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 35440  01C508  9795               	bcf	149,3,b	;volatile
 35441                           
 35442                           ; BSR set to: 57
 35443                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 35444  01C50A  9595               	bcf	149,2,b	;volatile
 35445                           
 35446                           ; BSR set to: 57
 35447                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 35448  01C50C  9B95               	bcf	149,5,b	;volatile
 35449                           
 35450                           ; BSR set to: 57
 35451                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 35452  01C50E  9995               	bcf	149,4,b	;volatile
 35453  01C510  9ED2               	bcf	16338,7,c	;# 
 35454  01C512  0139               	banksel	14831	;# 
 35455  01C514  0E55               	movlw	85	;# 
 35456  01C516  6FEF               	movwf	14831,b	;# 
 35457  01C518  0EAA               	movlw	170	;# 
 35458  01C51A  6FEF               	movwf	14831,b	;# 
 35459  01C51C  81EF               	bsf	14831,0,b	;# 
 35460  01C51E  8ED2               	bsf	16338,7,c	;# 
 35461                           
 35462                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 35463  01C520  013B               	movlb	59	; () banked
 35464  01C522  6BDC               	clrf	220,b	;volatile
 35465                           
 35466                           ; BSR set to: 59
 35467                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35468  01C524  0012               	return		;funcret
 35469  01C526                     __end_of_DMA2_Initialize:
 35470                           	opt callstack 0
 35471                           
 35472 ;; *************** function _DMA1_Initialize *****************
 35473 ;; Defined at:
 35474 ;;		line 86 in file "mcc_generated_files/dma1.c"
 35475 ;; Parameters:    Size  Location     Type
 35476 ;;		None
 35477 ;; Auto vars:     Size  Location     Type
 35478 ;;		None
 35479 ;; Return value:  Size  Location     Type
 35480 ;;                  1  [STACK] void 
 35481 ;; Registers used:
 35482 ;;		wreg, status,2
 35483 ;; Tracked objects:
 35484 ;;		On entry : 3F/3B
 35485 ;;		On exit  : 3F/3B
 35486 ;;		Unchanged: 0/0
 35487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35492 ;;Total ram usage:        0 bytes
 35493 ;; Hardware stack levels used:    1
 35494 ;; Hardware stack levels required when called:   15
 35495 ;; This function calls:
 35496 ;;		Nothing
 35497 ;; This function is called by:
 35498 ;;		_SYSTEM_Initialize
 35499 ;; This function uses a reentrant model
 35500 ;;
 35501                           
 35502                           	psect	text153
 35503  01C084                     __ptext153:
 35504                           	opt callstack 0
 35505  01C084                     _DMA1_Initialize:
 35506                           	opt callstack 14
 35507                           
 35508                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 35509                           
 35510                           ; BSR set to: 59
 35511                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35512                           ;incstack = 0
 35513  01C084  0E00               	movlw	0
 35514  01C086  013B               	movlb	59	; () banked
 35515  01C088  6FF9               	movwf	249,b	;volatile
 35516  01C08A  0E10               	movlw	16
 35517  01C08C  6FFA               	movwf	250,b	;volatile
 35518  01C08E  0E00               	movlw	0
 35519  01C090  6FFB               	movwf	251,b	;volatile
 35520                           
 35521                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 35522  01C092  0E3D               	movlw	61
 35523  01C094  6FF1               	movwf	241,b	;volatile
 35524  01C096  0E11               	movlw	17
 35525  01C098  6FF0               	movwf	240,b	;volatile
 35526                           
 35527                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 35528  01C09A  0E03               	movlw	3
 35529  01C09C  6FFD               	movwf	253,b	;volatile
 35530                           
 35531                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 35532  01C09E  0E00               	movlw	0
 35533  01C0A0  6FF8               	movwf	248,b	;volatile
 35534  01C0A2  0E01               	movlw	1
 35535  01C0A4  6FF7               	movwf	247,b	;volatile
 35536                           
 35537                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 35538  01C0A6  0E00               	movlw	0
 35539  01C0A8  6FEF               	movwf	239,b	;volatile
 35540  01C0AA  0E01               	movlw	1
 35541  01C0AC  6FEE               	movwf	238,b	;volatile
 35542                           
 35543                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 35544  01C0AE  0E15               	movlw	21
 35545  01C0B0  6FFF               	movwf	255,b	;volatile
 35546                           
 35547                           ; BSR set to: 59
 35548                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 35549  01C0B2  6BFE               	clrf	254,b	;volatile
 35550                           
 35551                           ; BSR set to: 59
 35552                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 35553  01C0B4  0139               	movlb	57	; () banked
 35554  01C0B6  93A2               	bcf	162,1,b	;volatile
 35555                           
 35556                           ; BSR set to: 57
 35557                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 35558  01C0B8  91A2               	bcf	162,0,b	;volatile
 35559                           
 35560                           ; BSR set to: 57
 35561                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 35562  01C0BA  97A2               	bcf	162,3,b	;volatile
 35563                           
 35564                           ; BSR set to: 57
 35565                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 35566  01C0BC  95A2               	bcf	162,2,b	;volatile
 35567                           
 35568                           ; BSR set to: 57
 35569                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 35570  01C0BE  8392               	bsf	146,1,b	;volatile
 35571                           
 35572                           ; BSR set to: 57
 35573                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 35574  01C0C0  8192               	bsf	146,0,b	;volatile
 35575                           
 35576                           ; BSR set to: 57
 35577                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 35578  01C0C2  8792               	bsf	146,3,b	;volatile
 35579                           
 35580                           ; BSR set to: 57
 35581                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 35582  01C0C4  8592               	bsf	146,2,b	;volatile
 35583                           
 35584                           ; BSR set to: 57
 35585                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 35586  01C0C6  6BF1               	clrf	241,b	;volatile
 35587                           
 35588                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 35589  01C0C8  0E01               	movlw	1
 35590  01C0CA  6FF2               	movwf	242,b	;volatile
 35591                           
 35592                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 35593  01C0CC  0E04               	movlw	4
 35594  01C0CE  6FF3               	movwf	243,b	;volatile
 35595                           
 35596                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 35597  01C0D0  0E02               	movlw	2
 35598  01C0D2  6FF4               	movwf	244,b	;volatile
 35599                           
 35600                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 35601  01C0D4  0E03               	movlw	3
 35602  01C0D6  6FF7               	movwf	247,b	;volatile
 35603  01C0D8  9ED2               	bcf	16338,7,c	;# 
 35604  01C0DA  0139               	banksel	14831	;# 
 35605  01C0DC  0E55               	movlw	85	;# 
 35606  01C0DE  6FEF               	movwf	14831,b	;# 
 35607  01C0E0  0EAA               	movlw	170	;# 
 35608  01C0E2  6FEF               	movwf	14831,b	;# 
 35609  01C0E4  81EF               	bsf	14831,0,b	;# 
 35610  01C0E6  8ED2               	bsf	16338,7,c	;# 
 35611                           
 35612                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 35613  01C0E8  013B               	movlb	59	; () banked
 35614  01C0EA  6BFC               	clrf	252,b	;volatile
 35615                           
 35616                           ; BSR set to: 59
 35617                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35618  01C0EC  0012               	return		;funcret
 35619  01C0EE                     __end_of_DMA1_Initialize:
 35620                           	opt callstack 0
 35621                           
 35622 ;; *************** function _CRC_Initialize *****************
 35623 ;; Defined at:
 35624 ;;		line 76 in file "mcc_generated_files/crc.c"
 35625 ;; Parameters:    Size  Location     Type
 35626 ;;		None
 35627 ;; Auto vars:     Size  Location     Type
 35628 ;;  seed            2  [STACK] unsigned short 
 35629 ;;  poly            2  [STACK] unsigned short 
 35630 ;; Return value:  Size  Location     Type
 35631 ;;                  1  [STACK] void 
 35632 ;; Registers used:
 35633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 35634 ;; Tracked objects:
 35635 ;;		On entry : 0/39
 35636 ;;		On exit  : 3F/0
 35637 ;;		Unchanged: 0/0
 35638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35643 ;;Total ram usage:        0 bytes
 35644 ;; Hardware stack levels used:    1
 35645 ;; Hardware stack levels required when called:   15
 35646 ;; This function calls:
 35647 ;;		Nothing
 35648 ;; This function is called by:
 35649 ;;		_SYSTEM_Initialize
 35650 ;;		_read_cal_data
 35651 ;;		_write_cal_data
 35652 ;; This function uses a reentrant model
 35653 ;;
 35654                           
 35655                           	psect	text154
 35656  01BC00                     __ptext154:
 35657                           	opt callstack 0
 35658  01BC00                     _CRC_Initialize:
 35659                           	opt callstack 0
 35660                           
 35661                           ; BSR set to: 59
 35662                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35663  01BC00  52E6               	movf	postinc1,f,c
 35664  01BC02  52E6               	movf	postinc1,f,c
 35665  01BC04  52E6               	movf	postinc1,f,c
 35666  01BC06  52E6               	movf	postinc1,f,c
 35667                           
 35668                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 35669                           
 35670                           ;incstack = 0
 35671  01BC08  0E80               	movlw	128
 35672  01BC0A  0139               	movlb	57	; () banked
 35673  01BC0C  6F68               	movwf	104,b	;volatile
 35674                           
 35675                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (0 << 4) | (7);
 35676  01BC0E  0E07               	movlw	7
 35677  01BC10  6F69               	movwf	105,b	;volatile
 35678                           
 35679                           ; BSR set to: 57
 35680                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 35681  01BC12  6B62               	clrf	98,b	;volatile
 35682                           
 35683                           ; BSR set to: 57
 35684                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 35685  01BC14  6B63               	clrf	99,b	;volatile
 35686                           
 35687                           ; BSR set to: 57
 35688                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 35689  01BC16  6B7C               	clrf	124,b	;volatile
 35690                           
 35691                           ; BSR set to: 57
 35692                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 35693  01BC18  6B78               	clrf	120,b	;volatile
 35694                           
 35695                           ; BSR set to: 57
 35696                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 35697  01BC1A  6B77               	clrf	119,b	;volatile
 35698                           
 35699                           ; BSR set to: 57
 35700                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 35701  01BC1C  6B76               	clrf	118,b	;volatile
 35702                           
 35703                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 35704  01BC1E  0E3F               	movlw	63
 35705  01BC20  6F7B               	movwf	123,b	;volatile
 35706                           
 35707                           ; BSR set to: 57
 35708                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 35709  01BC22  697A               	setf	122,b	;volatile
 35710                           
 35711                           ; BSR set to: 57
 35712                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 35713  01BC24  6979               	setf	121,b	;volatile
 35714                           
 35715                           ; BSR set to: 57
 35716                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 35717  01BC26  6B7D               	clrf	125,b	;volatile
 35718                           
 35719                           ; BSR set to: 57
 35720                           ;mcc_generated_files/crc.c: 106:     poly = 213;
 35721  01BC28  0ED5               	movlw	213
 35722  01BC2A  6E0B               	movwf	(btemp+10)^0,c
 35723  01BC2C  0E00               	movlw	0
 35724  01BC2E  6E0C               	movwf	(btemp+11)^0,c
 35725                           
 35726                           ;stkvar	_poly @ sp[(-4)+2]
 35727  01BC30  0EFE               	movlw	-2
 35728  01BC32  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35729  01BC38  0EFF               	movlw	-1
 35730  01BC3A  0060  F033  FFE3   	movff	btemp+11,plusw1
 35731                           
 35732                           ; BSR set to: 57
 35733                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 35734                           ;stkvar	_poly @ sp[(-4)+2]
 35735  01BC40  0EFF               	movlw	255
 35736  01BC42  24E1               	addwf	fsr1l,w,c
 35737  01BC44  6ED9               	movwf	fsr2l,c
 35738  01BC46  0EFF               	movlw	255
 35739  01BC48  20E2               	addwfc	fsr1h,w,c
 35740  01BC4A  6EDA               	movwf	fsr2h,c
 35741  01BC4C  50DF               	movf	indf2,w,c
 35742  01BC4E  6F67               	movwf	103,b	;volatile
 35743                           
 35744                           ; BSR set to: 57
 35745                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 35746  01BC50  0ED5               	movlw	213
 35747  01BC52  6F66               	movwf	102,b	;volatile
 35748                           
 35749                           ; BSR set to: 57
 35750                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 35751                           ;stkvar	_seed @ sp[(-4)+0]
 35752  01BC54  0EFC               	movlw	-4
 35753  01BC56  6AE3               	clrf	plusw1,c
 35754  01BC58  0EFD               	movlw	-3
 35755  01BC5A  6AE3               	clrf	plusw1,c
 35756                           
 35757                           ; BSR set to: 57
 35758                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 35759                           ;stkvar	_seed @ sp[(-4)+0]
 35760  01BC5C  0EFD               	movlw	253
 35761  01BC5E  24E1               	addwf	fsr1l,w,c
 35762  01BC60  6ED9               	movwf	fsr2l,c
 35763  01BC62  0EFF               	movlw	255
 35764  01BC64  20E2               	addwfc	fsr1h,w,c
 35765  01BC66  6EDA               	movwf	fsr2h,c
 35766  01BC68  50DF               	movf	indf2,w,c
 35767  01BC6A  6F63               	movwf	99,b	;volatile
 35768                           
 35769                           ; BSR set to: 57
 35770                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 35771  01BC6C  6B62               	clrf	98,b	;volatile
 35772                           
 35773                           ; BSR set to: 57
 35774                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 35775  01BC6E  3969               	swapf	105,w,b	;volatile
 35776  01BC70  0B0F               	andlw	15
 35777  01BC72  6E0C               	movwf	(btemp+11)^0,c
 35778  01BC74  280C               	incf	(btemp+11)^0,w,c
 35779  01BC76  0100               	movlb	0	; () banked
 35780  01BC78  6FD5               	movwf	_crcObj& (0+255),b
 35781                           
 35782                           ; BSR set to: 0
 35783                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 35784  01BC7A  0139               	movlb	57	; () banked
 35785  01BC7C  5169               	movf	105,w,b	;volatile
 35786  01BC7E  0B0F               	andlw	15
 35787  01BC80  6E0C               	movwf	(btemp+11)^0,c
 35788  01BC82  280C               	incf	(btemp+11)^0,w,c
 35789  01BC84  0100               	movlb	0	; () banked
 35790  01BC86  6FD6               	movwf	(_crcObj+1)& (0+255),b
 35791                           
 35792                           ; BSR set to: 0
 35793                           ; _CRC_Initialize: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 35794  01BC88  52E5               	movf	postdec1,f,c
 35795  01BC8A  52E5               	movf	postdec1,f,c
 35796  01BC8C  52E5               	movf	postdec1,f,c
 35797  01BC8E  52E5               	movf	postdec1,f,c
 35798  01BC90  0012               	return		;funcret
 35799  01BC92                     __end_of_CRC_Initialize:
 35800                           	opt callstack 0
 35801                           
 35802 ;; *************** function _CLKREF_Initialize *****************
 35803 ;; Defined at:
 35804 ;;		line 58 in file "mcc_generated_files/clkref.c"
 35805 ;; Parameters:    Size  Location     Type
 35806 ;;		None
 35807 ;; Auto vars:     Size  Location     Type
 35808 ;;		None
 35809 ;; Return value:  Size  Location     Type
 35810 ;;                  1  [STACK] void 
 35811 ;; Registers used:
 35812 ;;		wreg, status,2
 35813 ;; Tracked objects:
 35814 ;;		On entry : 3F/3B
 35815 ;;		On exit  : 3F/3C
 35816 ;;		Unchanged: 0/0
 35817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35822 ;;Total ram usage:        0 bytes
 35823 ;; Hardware stack levels used:    1
 35824 ;; Hardware stack levels required when called:   15
 35825 ;; This function calls:
 35826 ;;		Nothing
 35827 ;; This function is called by:
 35828 ;;		_SYSTEM_Initialize
 35829 ;; This function uses a reentrant model
 35830 ;;
 35831                           
 35832                           	psect	text155
 35833  01D4AA                     __ptext155:
 35834                           	opt callstack 0
 35835  01D4AA                     _CLKREF_Initialize:
 35836                           	opt callstack 14
 35837                           
 35838                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 35839                           
 35840                           ; BSR set to: 0
 35841                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35842                           ;incstack = 0
 35843  01D4AA  013C               	movlb	60	; () banked
 35844  01D4AC  6BE6               	clrf	230,b	;volatile
 35845                           
 35846                           ; BSR set to: 60
 35847                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 35848  01D4AE  0E94               	movlw	148
 35849  01D4B0  6FE5               	movwf	229,b	;volatile
 35850                           
 35851                           ; BSR set to: 60
 35852                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35853  01D4B2  0012               	return		;funcret
 35854  01D4B4                     __end_of_CLKREF_Initialize:
 35855                           	opt callstack 0
 35856                           
 35857 ;; *************** function _ADCC_Initialize *****************
 35858 ;; Defined at:
 35859 ;;		line 65 in file "mcc_generated_files/adcc.c"
 35860 ;; Parameters:    Size  Location     Type
 35861 ;;		None
 35862 ;; Auto vars:     Size  Location     Type
 35863 ;;		None
 35864 ;; Return value:  Size  Location     Type
 35865 ;;                  1  [STACK] void 
 35866 ;; Registers used:
 35867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 35868 ;; Tracked objects:
 35869 ;;		On entry : 3F/0
 35870 ;;		On exit  : 0/0
 35871 ;;		Unchanged: 0/0
 35872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35877 ;;Total ram usage:        0 bytes
 35878 ;; Hardware stack levels used:    1
 35879 ;; Hardware stack levels required when called:   16
 35880 ;; This function calls:
 35881 ;;		_ADCC_SetADIInterruptHandler
 35882 ;;		_ADCC_SetADTIInterruptHandler
 35883 ;; This function is called by:
 35884 ;;		_SYSTEM_Initialize
 35885 ;; This function uses a reentrant model
 35886 ;;
 35887                           
 35888                           	psect	text156
 35889  01C0EE                     __ptext156:
 35890                           	opt callstack 0
 35891  01C0EE                     _ADCC_Initialize:
 35892                           	opt callstack 13
 35893                           
 35894                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 35895                           
 35896                           ; BSR set to: 60
 35897                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35898                           ;incstack = 0
 35899  01C0EE  013E               	movlb	62	; () banked
 35900  01C0F0  6BDE               	clrf	222,b	;volatile
 35901                           
 35902                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 35903  01C0F2  6BDF               	clrf	223,b	;volatile
 35904                           
 35905                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 35906  01C0F4  6BE0               	clrf	224,b	;volatile
 35907                           
 35908                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 35909  01C0F6  6BE1               	clrf	225,b	;volatile
 35910                           
 35911                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 35912  01C0F8  6BE4               	clrf	228,b	;volatile
 35913                           
 35914                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 35915  01C0FA  6BE5               	clrf	229,b	;volatile
 35916                           
 35917                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 35918  01C0FC  6BEA               	clrf	234,b	;volatile
 35919                           
 35920                           ; BSR set to: 62
 35921                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 35922  01C0FE  0E40               	movlw	64
 35923  01C100  6FEC               	movwf	236,b	;volatile
 35924                           
 35925                           ; BSR set to: 62
 35926                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 35927  01C102  6BF1               	clrf	241,b	;volatile
 35928                           
 35929                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 35930  01C104  0E20               	movlw	32
 35931  01C106  6FF3               	movwf	243,b	;volatile
 35932                           
 35933                           ; BSR set to: 62
 35934                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 35935  01C108  6BF4               	clrf	244,b	;volatile
 35936                           
 35937                           ; BSR set to: 62
 35938                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 35939  01C10A  6BF5               	clrf	245,b	;volatile
 35940                           
 35941                           ; BSR set to: 62
 35942                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 35943  01C10C  6BF6               	clrf	246,b	;volatile
 35944                           
 35945                           ; BSR set to: 62
 35946                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 35947  01C10E  6BF7               	clrf	247,b	;volatile
 35948                           
 35949                           ; BSR set to: 62
 35950                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 35951  01C110  6BF9               	clrf	249,b	;volatile
 35952                           
 35953                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 35954  01C112  0E5B               	movlw	91
 35955  01C114  6FFA               	movwf	250,b	;volatile
 35956                           
 35957                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 35958  01C116  0E27               	movlw	39
 35959  01C118  6FFB               	movwf	251,b	;volatile
 35960                           
 35961                           ; BSR set to: 62
 35962                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 35963  01C11A  6BFC               	clrf	252,b	;volatile
 35964                           
 35965                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 35966  01C11C  0E02               	movlw	2
 35967  01C11E  6FFD               	movwf	253,b	;volatile
 35968                           
 35969                           ; BSR set to: 62
 35970                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 35971  01C120  6BFE               	clrf	254,b	;volatile
 35972                           
 35973                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 35974  01C122  0E07               	movlw	7
 35975  01C124  6FFF               	movwf	255,b	;volatile
 35976                           
 35977                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 35978  01C126  0E84               	movlw	132
 35979  01C128  6FF8               	movwf	248,b	;volatile
 35980                           
 35981                           ; BSR set to: 62
 35982                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 35983  01C12A  0139               	movlb	57	; () banked
 35984  01C12C  95A1               	bcf	161,2,b	;volatile
 35985                           
 35986                           ; BSR set to: 57
 35987                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 35988  01C12E  8591               	bsf	145,2,b	;volatile
 35989                           
 35990                           ; BSR set to: 57
 35991                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 35992  01C130  0E40               	movlw	low _ADCC_DefaultInterruptHandler
 35993  01C132  6EE6               	movwf	postinc1,c
 35994  01C134  0ED5               	movlw	high _ADCC_DefaultInterruptHandler
 35995  01C136  6EE6               	movwf	postinc1,c
 35996  01C138  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 35997  01C13A  6EE6               	movwf	postinc1,c
 35998  01C13C  EC31  F0E8         	call	_ADCC_SetADIInterruptHandler	;wreg free
 35999                           
 36000                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 36001  01C140  0139               	movlb	57	; () banked
 36002  01C142  97A1               	bcf	161,3,b	;volatile
 36003                           
 36004                           ; BSR set to: 57
 36005                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 36006  01C144  8791               	bsf	145,3,b	;volatile
 36007                           
 36008                           ; BSR set to: 57
 36009                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 36010  01C146  0E40               	movlw	low _ADCC_DefaultInterruptHandler
 36011  01C148  6EE6               	movwf	postinc1,c
 36012  01C14A  0ED5               	movlw	high _ADCC_DefaultInterruptHandler
 36013  01C14C  6EE6               	movwf	postinc1,c
 36014  01C14E  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 36015  01C150  6EE6               	movwf	postinc1,c
 36016  01C152  EC1D  F0E8         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 36017                           
 36018                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36019  01C156  0012               	return		;funcret
 36020  01C158                     __end_of_ADCC_Initialize:
 36021                           	opt callstack 0
 36022                           
 36023 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 36024 ;; Defined at:
 36025 ;;		line 336 in file "mcc_generated_files/adcc.c"
 36026 ;; Parameters:    Size  Location     Type
 36027 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 36028 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 36029 ;; Auto vars:     Size  Location     Type
 36030 ;;		None
 36031 ;; Return value:  Size  Location     Type
 36032 ;;                  1  [STACK] void 
 36033 ;; Registers used:
 36034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 36035 ;; Tracked objects:
 36036 ;;		On entry : 0/2
 36037 ;;		On exit  : 0/0
 36038 ;;		Unchanged: 0/0
 36039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36044 ;;Total ram usage:        0 bytes
 36045 ;; Hardware stack levels used:    1
 36046 ;; Hardware stack levels required when called:   15
 36047 ;; This function calls:
 36048 ;;		Nothing
 36049 ;; This function is called by:
 36050 ;;		_ADCC_Initialize
 36051 ;;		_start_adc_scan
 36052 ;; This function uses a reentrant model
 36053 ;;
 36054                           
 36055                           	psect	text157
 36056  01D03A                     __ptext157:
 36057                           	opt callstack 0
 36058  01D03A                     _ADCC_SetADTIInterruptHandler:
 36059                           	opt callstack 14
 36060                           
 36061                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 36062                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 36063                           
 36064                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36065                           ;incstack = 0
 36066  01D03A  50E1               	movf	fsr1l,w,c
 36067  01D03C  0FFD               	addlw	-3
 36068  01D03E  6ED9               	movwf	fsr2l,c
 36069  01D040  50E2               	movf	fsr1h,w,c
 36070  01D042  6EDA               	movwf	fsr2h,c
 36071  01D044  0EFF               	movlw	255
 36072  01D046  22DA               	addwfc	fsr2h,f,c
 36073  01D048  006F FF78  F0AB    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 36074  01D04E  006F FF78  F0AC    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 36075  01D054  006F FF74  F0AD    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 36076                           
 36077                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 36078  01D05A  52E5               	movf	postdec1,f,c
 36079  01D05C  52E5               	movf	postdec1,f,c
 36080  01D05E  52E5               	movf	postdec1,f,c
 36081  01D060  0012               	return		;funcret
 36082  01D062                     __end_of_ADCC_SetADTIInterruptHandler:
 36083                           	opt callstack 0
 36084                           
 36085 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 36086 ;; Defined at:
 36087 ;;		line 323 in file "mcc_generated_files/adcc.c"
 36088 ;; Parameters:    Size  Location     Type
 36089 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 36090 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 36091 ;; Auto vars:     Size  Location     Type
 36092 ;;		None
 36093 ;; Return value:  Size  Location     Type
 36094 ;;                  1  [STACK] void 
 36095 ;; Registers used:
 36096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 36097 ;; Tracked objects:
 36098 ;;		On entry : 4/2
 36099 ;;		On exit  : 0/0
 36100 ;;		Unchanged: 0/0
 36101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36106 ;;Total ram usage:        0 bytes
 36107 ;; Hardware stack levels used:    1
 36108 ;; Hardware stack levels required when called:   15
 36109 ;; This function calls:
 36110 ;;		Nothing
 36111 ;; This function is called by:
 36112 ;;		_ADCC_Initialize
 36113 ;;		_start_adc_scan
 36114 ;; This function uses a reentrant model
 36115 ;;
 36116                           
 36117                           	psect	text158
 36118  01D062                     __ptext158:
 36119                           	opt callstack 0
 36120  01D062                     _ADCC_SetADIInterruptHandler:
 36121                           	opt callstack 14
 36122                           
 36123                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 36124                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 36125                           
 36126                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36127                           ;incstack = 0
 36128  01D062  50E1               	movf	fsr1l,w,c
 36129  01D064  0FFD               	addlw	-3
 36130  01D066  6ED9               	movwf	fsr2l,c
 36131  01D068  50E2               	movf	fsr1h,w,c
 36132  01D06A  6EDA               	movwf	fsr2h,c
 36133  01D06C  0EFF               	movlw	255
 36134  01D06E  22DA               	addwfc	fsr2h,f,c
 36135  01D070  006F FF78  F0AE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 36136  01D076  006F FF78  F0AF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 36137  01D07C  006F FF74  F0B0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 36138                           
 36139                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 36140  01D082  52E5               	movf	postdec1,f,c
 36141  01D084  52E5               	movf	postdec1,f,c
 36142  01D086  52E5               	movf	postdec1,f,c
 36143  01D088  0012               	return		;funcret
 36144  01D08A                     __end_of_ADCC_SetADIInterruptHandler:
 36145                           	opt callstack 0
 36146                           
 36147 ;; *************** function _INT1_ISR *****************
 36148 ;; Defined at:
 36149 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 36150 ;; Parameters:    Size  Location     Type
 36151 ;;		None
 36152 ;; Auto vars:     Size  Location     Type
 36153 ;;		None
 36154 ;; Return value:  Size  Location     Type
 36155 ;;                  1    wreg      void 
 36156 ;; Registers used:
 36157 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 36158 ;; Tracked objects:
 36159 ;;		On entry : 0/0
 36160 ;;		On exit  : 0/0
 36161 ;;		Unchanged: 0/0
 36162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36165 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36166 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36167 ;;Total ram usage:        4 bytes
 36168 ;; Hardware stack levels used:    1
 36169 ;; Hardware stack levels required when called:    5
 36170 ;; This function calls:
 36171 ;;		_INT1_CallBack
 36172 ;; This function is called by:
 36173 ;;		Interrupt level 1
 36174 ;; This function uses a non-reentrant model
 36175 ;;
 36176                           
 36177                           	psect	text159
 36178  01CAB8                     __ptext159:
 36179                           	opt callstack 0
 36180  01CAB8                     _INT1_ISR:
 36181                           	opt callstack 11
 36182                           
 36183                           ;incstack = 0
 36184  01CAB8  006F FF60  F027    	movff	status,??_INT1_ISR
 36185  01CABE  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 36186  01CAC4  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 36187  01CACA  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 36188  01CAD0  EE16  F166         	lfsr	1,___intlo_sp
 36189                           
 36190                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 36191  01CAD4  0139               	movlb	57	; () banked
 36192  01CAD6  91A5               	bcf	165,0,b	;volatile
 36193                           
 36194                           ; BSR set to: 57
 36195                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 36196  01CAD8  EC94  F0E8         	call	_INT1_CallBack	;wreg free
 36197  01CADC  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 36198  01CAE2  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 36199  01CAE8  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 36200  01CAEE  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 36201  01CAF4  0011               	retfie		f
 36202  01CAF6                     __end_of_INT1_ISR:
 36203                           	opt callstack 0
 36204                           
 36205 ;; *************** function _INT1_CallBack *****************
 36206 ;; Defined at:
 36207 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 36208 ;; Parameters:    Size  Location     Type
 36209 ;;		None
 36210 ;; Auto vars:     Size  Location     Type
 36211 ;;		None
 36212 ;; Return value:  Size  Location     Type
 36213 ;;                  1  [STACK] void 
 36214 ;; Registers used:
 36215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 36216 ;; Tracked objects:
 36217 ;;		On entry : 3F/39
 36218 ;;		On exit  : 0/0
 36219 ;;		Unchanged: 0/0
 36220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36225 ;;Total ram usage:        0 bytes
 36226 ;; Hardware stack levels used:    1
 36227 ;; Hardware stack levels required when called:    4
 36228 ;; This function calls:
 36229 ;;		Absolute function
 36230 ;;		_INT1_DefaultInterruptHandler
 36231 ;;		_switch_handler
 36232 ;; This function is called by:
 36233 ;;		_INT1_ISR
 36234 ;; This function uses a reentrant model
 36235 ;;
 36236                           
 36237                           	psect	text160
 36238  01D128                     __ptext160:
 36239                           	opt callstack 0
 36240  01D128                     _INT1_CallBack:
 36241                           	opt callstack 11
 36242                           
 36243                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 36244                           
 36245                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36246                           ;incstack = 0
 36247  01D128  0100               	movlb	0	; () banked
 36248  01D12A  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 36249  01D12C  11BB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 36250  01D12E  11BC               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 36251  01D130  B4D8               	btfsc	status,2,c
 36252  01D132  0012               	return	
 36253                           
 36254                           ; BSR set to: 0
 36255                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 36256  01D134  D801               	call	u1089_28
 36257  01D136  0012               	return	
 36258  01D138                     u1089_28:
 36259  01D138  0005               	push	
 36260  01D13A  6EFA               	movwf	pclath,c
 36261  01D13C  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 36262  01D13E  6EFD               	movwf	tosl,c
 36263  01D140  51BB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 36264  01D142  6EFE               	movwf	tosh,c
 36265  01D144  51BC               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 36266  01D146  6EFF               	movwf	tosu,c
 36267  01D148  50FA               	movf	pclath,w,c
 36268  01D14A  0012               	return		;indir
 36269  01D14C                     __end_of_INT1_CallBack:
 36270                           	opt callstack 0
 36271                           
 36272 ;; *************** function _INT1_DefaultInterruptHandler *****************
 36273 ;; Defined at:
 36274 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 36275 ;; Parameters:    Size  Location     Type
 36276 ;;		None
 36277 ;; Auto vars:     Size  Location     Type
 36278 ;;		None
 36279 ;; Return value:  Size  Location     Type
 36280 ;;                  1  [STACK] void 
 36281 ;; Registers used:
 36282 ;;		None
 36283 ;; Tracked objects:
 36284 ;;		On entry : 3F/0
 36285 ;;		On exit  : 0/0
 36286 ;;		Unchanged: 0/0
 36287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36292 ;;Total ram usage:        0 bytes
 36293 ;; Hardware stack levels used:    1
 36294 ;; Hardware stack levels required when called:    3
 36295 ;; This function calls:
 36296 ;;		Nothing
 36297 ;; This function is called by:
 36298 ;;		_EXT_INT_Initialize
 36299 ;;		_INT1_CallBack
 36300 ;; This function uses a reentrant model
 36301 ;;
 36302                           
 36303                           	psect	text161
 36304  01D53A                     __ptext161:
 36305                           	opt callstack 0
 36306  01D53A                     _INT1_DefaultInterruptHandler:
 36307                           	opt callstack 11
 36308                           
 36309                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36310                           
 36311                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36312                           ;incstack = 0
 36313  01D53A  0012               	return		;funcret
 36314  01D53C                     __end_of_INT1_DefaultInterruptHandler:
 36315                           	opt callstack 0
 36316                           
 36317 ;; *************** function _switch_handler *****************
 36318 ;; Defined at:
 36319 ;;		line 58 in file "dio.c"
 36320 ;; Parameters:    Size  Location     Type
 36321 ;;		None
 36322 ;; Auto vars:     Size  Location     Type
 36323 ;;  i               1  [STACK] unsigned char 
 36324 ;;  sw_value        1  [STACK] unsigned char 
 36325 ;; Return value:  Size  Location     Type
 36326 ;;                  1  [STACK] void 
 36327 ;; Registers used:
 36328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 36329 ;; Tracked objects:
 36330 ;;		On entry : 3F/0
 36331 ;;		On exit  : 0/0
 36332 ;;		Unchanged: 0/0
 36333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36338 ;;Total ram usage:        0 bytes
 36339 ;; Hardware stack levels used:    1
 36340 ;; Hardware stack levels required when called:    3
 36341 ;; This function calls:
 36342 ;;		Nothing
 36343 ;; This function is called by:
 36344 ;;		_start_switch_handler
 36345 ;;		_INT1_CallBack
 36346 ;; This function uses a reentrant model
 36347 ;;
 36348                           
 36349                           	psect	text162
 36350  019FC4                     __ptext162:
 36351                           	opt callstack 0
 36352  019FC4                     _switch_handler:
 36353                           	opt callstack 0
 36354                           
 36355                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36356  019FC4  52E6               	movf	postinc1,f,c
 36357  019FC6  52E6               	movf	postinc1,f,c
 36358                           
 36359                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 36360                           ;stkvar	_i @ sp[(-2)+0]
 36361                           
 36362                           ;incstack = 0
 36363  019FC8  0EFE               	movlw	-2
 36364  019FCA  6AE3               	clrf	plusw1,c
 36365  019FCC  9ABF               	bcf	191,5,c	;volatile
 36366                           
 36367                           ;dio.c: 72:  __nop();
 36368  019FCE  F000               	nop	
 36369                           
 36370                           ;dio.c: 73:  __nop();
 36371  019FD0  F000               	nop	
 36372                           
 36373                           ;dio.c: 74:  __nop();
 36374  019FD2  F000               	nop	
 36375                           
 36376                           ;dio.c: 75:  __nop();
 36377  019FD4  F000               	nop	
 36378                           
 36379                           ;dio.c: 76:  __nop();
 36380  019FD6  F000               	nop	
 36381                           
 36382                           ;dio.c: 77:  __nop();
 36383  019FD8  F000               	nop	
 36384  019FDA  D016               	goto	l11630
 36385  019FDC                     l11616:
 36386                           
 36387                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 36388  019FDC  A6CF               	btfss	207,3,c	;volatile
 36389  019FDE  D00E               	goto	u1055_20
 36390  019FE0  D00A               	goto	u1055_21
 36391  019FE2                     u1053_28:
 36392                           
 36393                           ;stkvar	_sw_value @ sp[(-2)+1]
 36394  019FE2  0EFF               	movlw	-1
 36395  019FE4  0060  F033  FFE3   	movff	btemp+11,plusw1
 36396                           
 36397                           ;dio.c: 83:    break;
 36398  019FEA  D027               	goto	l11632
 36399  019FEC                     l11618:
 36400                           
 36401                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 36402  019FEC  A4CF               	btfss	207,2,c	;volatile
 36403  019FEE  D006               	goto	u1055_20
 36404  019FF0  D002               	goto	u1055_21
 36405  019FF2                     l11620:
 36406                           
 36407                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 36408  019FF2  A6CD               	btfss	205,3,c	;volatile
 36409  019FF4  D003               	goto	u1055_20
 36410  019FF6                     u1055_21:
 36411  019FF6  6A0C               	clrf	(btemp+11)^0,c
 36412  019FF8  2A0C               	incf	(btemp+11)^0,f,c
 36413  019FFA  D7F3               	goto	u1053_28
 36414  019FFC                     u1055_20:
 36415  019FFC  6A0C               	clrf	(btemp+11)^0,c
 36416  019FFE  D7F1               	goto	u1053_28
 36417  01A000                     l11622:
 36418                           
 36419                           ;dio.c: 91:    sw_value = 1;
 36420                           ;stkvar	_sw_value @ sp[(-2)+1]
 36421  01A000  0EFF               	movlw	-1
 36422  01A002  6AE3               	clrf	plusw1,c
 36423  01A004  2AE3               	incf	plusw1,f,c
 36424                           
 36425                           ;dio.c: 92:    break;
 36426  01A006  D019               	goto	l11632
 36427  01A008                     l11630:
 36428                           
 36429                           ;stkvar	_i @ sp[(-2)+0]
 36430  01A008  0EFE               	movlw	-2
 36431  01A00A  50E3               	movf	plusw1,w,c
 36432  01A00C  6E0B               	movwf	(btemp+10)^0,c
 36433  01A00E  6A0C               	clrf	(btemp+11)^0,c
 36434                           
 36435                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36436                           ; Switch size 1, requested type "simple"
 36437                           ; Number of cases is 1, Range of values is 0 to 0
 36438                           ; switch strategies available:
 36439                           ; Name         Instructions Cycles
 36440                           ; simple_byte            4     3 (average)
 36441                           ;	Chosen strategy is simple_byte
 36442  01A010  500C               	movf	(btemp+11)^0,w,c
 36443  01A012  0A00               	xorlw	0	; case 0
 36444  01A014  A4D8               	btfss	status,2,c
 36445  01A016  D7F4               	goto	l11622
 36446                           
 36447                           ; Switch size 1, requested type "simple"
 36448                           ; Number of cases is 5, Range of values is 0 to 4
 36449                           ; switch strategies available:
 36450                           ; Name         Instructions Cycles
 36451                           ; simple_byte           16     9 (average)
 36452                           ;	Chosen strategy is simple_byte
 36453  01A018  500B               	movf	(btemp+10)^0,w,c
 36454  01A01A  0A00               	xorlw	0	; case 0
 36455  01A01C  B4D8               	btfsc	status,2,c
 36456  01A01E  D7F0               	goto	l11622
 36457  01A020  0A01               	xorlw	1	; case 1
 36458  01A022  B4D8               	btfsc	status,2,c
 36459  01A024  D7ED               	goto	l11622
 36460  01A026  0A03               	xorlw	3	; case 2
 36461  01A028  B4D8               	btfsc	status,2,c
 36462  01A02A  D7E0               	goto	l11618
 36463  01A02C  0A01               	xorlw	1	; case 3
 36464  01A02E  B4D8               	btfsc	status,2,c
 36465  01A030  D7D5               	goto	l11616
 36466  01A032  0A07               	xorlw	7	; case 4
 36467  01A034  B4D8               	btfsc	status,2,c
 36468  01A036  D7DD               	goto	l11620
 36469  01A038  D7E3               	goto	l11622
 36470  01A03A                     l11632:
 36471                           
 36472                           ;dio.c: 102:   if (sw_value) {
 36473                           ;stkvar	_sw_value @ sp[(-2)+1]
 36474  01A03A  0EFF               	movlw	-1
 36475  01A03C  50E3               	movf	plusw1,w,c
 36476  01A03E  B4D8               	btfsc	status,2,c
 36477  01A040  D018               	goto	l11638
 36478                           
 36479                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 36480                           ;stkvar	_i @ sp[(-2)+0]
 36481  01A042  0EFE               	movlw	-2
 36482  01A044  50E3               	movf	plusw1,w,c
 36483  01A046  0D05               	mullw	5
 36484  01A048  0EC7               	movlw	low _S
 36485  01A04A  24F3               	addwf	243,w,c
 36486  01A04C  6ED9               	movwf	fsr2l,c
 36487  01A04E  0E01               	movlw	high _S
 36488  01A050  20F4               	addwfc	prodh,w,c
 36489  01A052  6EDA               	movwf	fsr2h,c
 36490  01A054  04DE               	decf	postinc2,w,c
 36491  01A056  A4D8               	btfss	status,2,c
 36492  01A058  D049               	goto	l11646
 36493                           
 36494                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 36495                           ;stkvar	_i @ sp[(-2)+0]
 36496  01A05A  0EFE               	movlw	-2
 36497  01A05C  50E3               	movf	plusw1,w,c
 36498  01A05E  0D05               	mullw	5
 36499  01A060  0EC7               	movlw	low _S
 36500  01A062  24F3               	addwf	243,w,c
 36501  01A064  6ED9               	movwf	fsr2l,c
 36502  01A066  0E01               	movlw	high _S
 36503  01A068  20F4               	addwfc	prodh,w,c
 36504  01A06A  6EDA               	movwf	fsr2h,c
 36505  01A06C  0E00               	movlw	0
 36506  01A06E  6EDF               	movwf	indf2,c
 36507  01A070  D03D               	goto	l11646
 36508  01A072                     l11638:
 36509                           
 36510                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 36511                           ;stkvar	_i @ sp[(-2)+0]
 36512  01A072  0EFE               	movlw	-2
 36513  01A074  50E3               	movf	plusw1,w,c
 36514  01A076  0D05               	mullw	5
 36515  01A078  0EC7               	movlw	low _S
 36516  01A07A  24F3               	addwf	243,w,c
 36517  01A07C  6ED9               	movwf	fsr2l,c
 36518  01A07E  0E01               	movlw	high _S
 36519  01A080  20F4               	addwfc	prodh,w,c
 36520  01A082  6EDA               	movwf	fsr2h,c
 36521  01A084  50DF               	movf	indf2,w,c
 36522  01A086  A4D8               	btfss	status,2,c
 36523  01A088  D031               	goto	l11646
 36524                           
 36525                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 36526                           ;stkvar	_i @ sp[(-2)+0]
 36527  01A08A  0EFE               	movlw	-2
 36528  01A08C  50E3               	movf	plusw1,w,c
 36529  01A08E  0D05               	mullw	5
 36530  01A090  0EC7               	movlw	low _S
 36531  01A092  24F3               	addwf	243,w,c
 36532  01A094  6ED9               	movwf	fsr2l,c
 36533  01A096  0E01               	movlw	high _S
 36534  01A098  20F4               	addwfc	prodh,w,c
 36535  01A09A  6EDA               	movwf	fsr2h,c
 36536  01A09C  0E01               	movlw	1
 36537  01A09E  6EDF               	movwf	indf2,c
 36538                           
 36539                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 36540  01A0A0  EE20  F1C3         	lfsr	2,_V+188	;volatile
 36541                           
 36542                           ;stkvar	_i @ sp[(-2)+0]
 36543  01A0A4  0EFE               	movlw	-2
 36544  01A0A6  50E3               	movf	plusw1,w,c
 36545  01A0A8  0D05               	mullw	5
 36546  01A0AA  0EC8               	movlw	low (_S+1)
 36547  01A0AC  24F3               	addwf	243,w,c
 36548  01A0AE  6EE9               	movwf	fsr0l,c
 36549  01A0B0  0E01               	movlw	high (_S+1)
 36550  01A0B2  20F4               	addwfc	prodh,w,c
 36551  01A0B4  6EEA               	movwf	fsr0h,c
 36552  01A0B6  006F FF7B FFEE     	movff	postinc2,postinc0
 36553  01A0BC  006F FF7B FFEE     	movff	postinc2,postinc0
 36554  01A0C2  006F FF7B FFEE     	movff	postinc2,postinc0
 36555  01A0C8  006F FF7B FFEE     	movff	postinc2,postinc0
 36556                           
 36557                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 36558                           ;stkvar	_i @ sp[(-2)+0]
 36559  01A0CE  0EFE               	movlw	-2
 36560  01A0D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 36561  01A0D6  0E01               	movlw	1
 36562  01A0D8  6E0B               	movwf	(btemp+10)^0,c
 36563  01A0DA  2A0C               	incf	(btemp+11)^0,f,c
 36564  01A0DC  D002               	goto	u1059_24
 36565  01A0DE                     u1059_25:
 36566  01A0DE  90D8               	bcf	status,0,c
 36567  01A0E0  360B               	rlcf	(btemp+10)^0,f,c
 36568  01A0E2                     u1059_24:
 36569  01A0E2  2E0C               	decfsz	(btemp+11)^0,f,c
 36570  01A0E4  D7FC               	goto	u1059_25
 36571  01A0E6  500B               	movf	(btemp+10)^0,w,c
 36572  01A0E8  0101               	movlb	1	; () banked
 36573  01A0EA  13EF               	iorwf	(_S+40)& (0+255),f,b	;volatile
 36574  01A0EC                     l11646:
 36575                           
 36576                           ;dio.c: 113:  } while (++i < 6);
 36577                           ;stkvar	_i @ sp[(-2)+0]
 36578  01A0EC  0EFE               	movlw	-2
 36579  01A0EE  2AE3               	incf	plusw1,f,c
 36580  01A0F0  0EFE               	movlw	-2
 36581  01A0F2  006F FF8C  F001    	movff	plusw1,btemp
 36582  01A0F8  0E05               	movlw	5
 36583  01A0FA  6401               	cpfsgt	btemp^0,c
 36584  01A0FC  D785               	goto	l11630
 36585                           
 36586                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 36587  01A0FE  8ABF               	bsf	191,5,c	;volatile
 36588                           
 36589                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 36590  01A100  52E5               	movf	postdec1,f,c
 36591  01A102  52E5               	movf	postdec1,f,c
 36592  01A104  0012               	return		;funcret
 36593  01A106                     __end_of_switch_handler:
 36594                           	opt callstack 0
 36595                           
 36596 ;; *************** function _TMR5_ISR *****************
 36597 ;; Defined at:
 36598 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 36599 ;; Parameters:    Size  Location     Type
 36600 ;;		None
 36601 ;; Auto vars:     Size  Location     Type
 36602 ;;		None
 36603 ;; Return value:  Size  Location     Type
 36604 ;;                  1    wreg      void 
 36605 ;; Registers used:
 36606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 36607 ;; Tracked objects:
 36608 ;;		On entry : 0/0
 36609 ;;		On exit  : 3F/0
 36610 ;;		Unchanged: 0/0
 36611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36614 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36615 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36616 ;;Total ram usage:       15 bytes
 36617 ;; Hardware stack levels used:    1
 36618 ;; Hardware stack levels required when called:    9
 36619 ;; This function calls:
 36620 ;;		_TMR5_CallBack
 36621 ;;		_TMR5_WriteTimer
 36622 ;; This function is called by:
 36623 ;;		Interrupt level 1
 36624 ;; This function uses a non-reentrant model
 36625 ;;
 36626                           
 36627                           	psect	text163
 36628  01AE04                     __ptext163:
 36629                           	opt callstack 0
 36630  01AE04                     _TMR5_ISR:
 36631                           	opt callstack 7
 36632                           
 36633                           ;incstack = 0
 36634  01AE04  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 36635  01AE0A  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 36636  01AE10  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 36637  01AE16  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 36638  01AE1C  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 36639  01AE22  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 36640  01AE28  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 36641  01AE2E  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 36642  01AE34  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 36643  01AE3A  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 36644  01AE40  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 36645  01AE46  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 36646  01AE4C  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 36647  01AE52  EE16  F166         	lfsr	1,___intlo_sp
 36648                           
 36649                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 36650  01AE56  0139               	movlb	57	; () banked
 36651  01AE58  9DA8               	bcf	168,6,b	;volatile
 36652                           
 36653                           ; BSR set to: 57
 36654                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 36655  01AE5A  0060  F323  FFE6   	movff	_timer5ReloadVal,postinc1
 36656  01AE60  0060  F327  FFE6   	movff	_timer5ReloadVal+1,postinc1
 36657  01AE66  EC1C  F0E5         	call	_TMR5_WriteTimer	;wreg free
 36658                           
 36659                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 36660  01AE6A  0101               	movlb	1	; () banked
 36661  01AE6C  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 36662  01AE6E  6E2B               	movwf	??_TMR5_ISR^0,c
 36663  01AE70  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 36664  01AE72  0E05               	movlw	5
 36665  01AE74  262B               	addwf	??_TMR5_ISR^0,f,c
 36666  01AE76  0E00               	movlw	0
 36667  01AE78  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 36668  01AE7A  0100               	movlb	0	; () banked
 36669  01AE7C  4BC6               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 36670  01AE7E  2BC7               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 36671  01AE80  502B               	movf	??_TMR5_ISR^0,w,c
 36672  01AE82  5DC6               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 36673  01AE84  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 36674  01AE86  59C7               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 36675  01AE88  A0D8               	btfss	status,0,c
 36676  01AE8A  D005               	goto	i1l1021
 36677                           
 36678                           ; BSR set to: 0
 36679                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 36680  01AE8C  ECA6  F0E8         	call	_TMR5_CallBack	;wreg free
 36681                           
 36682                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 36683  01AE90  0100               	movlb	0	; () banked
 36684  01AE92  6BC6               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 36685  01AE94  6BC7               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 36686  01AE96                     i1l1021:
 36687                           
 36688                           ; BSR set to: 0
 36689  01AE96  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 36690  01AE9C  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 36691  01AEA2  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 36692  01AEA8  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 36693  01AEAE  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 36694  01AEB4  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 36695  01AEBA  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 36696  01AEC0  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 36697  01AEC6  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 36698  01AECC  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 36699  01AED2  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 36700  01AED8  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 36701  01AEDE  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 36702  01AEE4  0011               	retfie		f
 36703  01AEE6                     __end_of_TMR5_ISR:
 36704                           	opt callstack 0
 36705                           
 36706 ;; *************** function _TMR5_WriteTimer *****************
 36707 ;; Defined at:
 36708 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 36709 ;; Parameters:    Size  Location     Type
 36710 ;;  timerVal        2  [STACK] unsigned short 
 36711 ;; Auto vars:     Size  Location     Type
 36712 ;;		None
 36713 ;; Return value:  Size  Location     Type
 36714 ;;                  1  [STACK] void 
 36715 ;; Registers used:
 36716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 36717 ;; Tracked objects:
 36718 ;;		On entry : 3F/39
 36719 ;;		On exit  : 0/0
 36720 ;;		Unchanged: 0/0
 36721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36726 ;;Total ram usage:        0 bytes
 36727 ;; Hardware stack levels used:    1
 36728 ;; Hardware stack levels required when called:    3
 36729 ;; This function calls:
 36730 ;;		Nothing
 36731 ;; This function is called by:
 36732 ;;		_TMR5_ISR
 36733 ;; This function uses a reentrant model
 36734 ;;
 36735                           
 36736                           	psect	text164
 36737  01CA38                     __ptext164:
 36738                           	opt callstack 0
 36739  01CA38                     _TMR5_WriteTimer:
 36740                           	opt callstack 12
 36741                           
 36742                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 36743                           
 36744                           ; BSR set to: 0
 36745                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36746                           ;incstack = 0
 36747  01CA38  A49A               	btfss	154,2,c	;volatile
 36748  01CA3A  D00F               	goto	l11858
 36749                           
 36750                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 36751  01CA3C  909A               	bcf	154,0,c	;volatile
 36752                           
 36753                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 36754                           ;stkvar	_timerVal @ sp[(0)+-2]
 36755  01CA3E  0EFF               	movlw	255
 36756  01CA40  24E1               	addwf	fsr1l,w,c
 36757  01CA42  6ED9               	movwf	fsr2l,c
 36758  01CA44  0EFF               	movlw	255
 36759  01CA46  20E2               	addwfc	fsr1h,w,c
 36760  01CA48  6EDA               	movwf	fsr2h,c
 36761  01CA4A  50DF               	movf	indf2,w,c
 36762  01CA4C  6E99               	movwf	153,c	;volatile
 36763                           
 36764                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 36765                           ;stkvar	_timerVal @ sp[(0)+-2]
 36766  01CA4E  0EFE               	movlw	-2
 36767  01CA50  006F FF8F FF98     	movff	plusw1,16280	;volatile
 36768                           
 36769                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 36770  01CA56  809A               	bsf	154,0,c	;volatile
 36771                           
 36772                           ;mcc_generated_files/tmr5.c: 144:  } else {
 36773  01CA58  D00C               	goto	l1004
 36774  01CA5A                     l11858:
 36775                           
 36776                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 36777                           ;stkvar	_timerVal @ sp[(0)+-2]
 36778  01CA5A  0EFF               	movlw	255
 36779  01CA5C  24E1               	addwf	fsr1l,w,c
 36780  01CA5E  6ED9               	movwf	fsr2l,c
 36781  01CA60  0EFF               	movlw	255
 36782  01CA62  20E2               	addwfc	fsr1h,w,c
 36783  01CA64  6EDA               	movwf	fsr2h,c
 36784  01CA66  50DF               	movf	indf2,w,c
 36785  01CA68  6E99               	movwf	153,c	;volatile
 36786                           
 36787                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 36788                           ;stkvar	_timerVal @ sp[(0)+-2]
 36789  01CA6A  0EFE               	movlw	-2
 36790  01CA6C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 36791  01CA72                     l1004:
 36792                           
 36793                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 36794  01CA72  52E5               	movf	postdec1,f,c
 36795  01CA74  52E5               	movf	postdec1,f,c
 36796  01CA76  0012               	return		;funcret
 36797  01CA78                     __end_of_TMR5_WriteTimer:
 36798                           	opt callstack 0
 36799                           
 36800 ;; *************** function _TMR5_CallBack *****************
 36801 ;; Defined at:
 36802 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 36803 ;; Parameters:    Size  Location     Type
 36804 ;;		None
 36805 ;; Auto vars:     Size  Location     Type
 36806 ;;		None
 36807 ;; Return value:  Size  Location     Type
 36808 ;;                  1  [STACK] void 
 36809 ;; Registers used:
 36810 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 36811 ;; Tracked objects:
 36812 ;;		On entry : 3F/0
 36813 ;;		On exit  : 0/0
 36814 ;;		Unchanged: 0/0
 36815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36820 ;;Total ram usage:        0 bytes
 36821 ;; Hardware stack levels used:    1
 36822 ;; Hardware stack levels required when called:    8
 36823 ;; This function calls:
 36824 ;;		Absolute function
 36825 ;;		_TMR5_DefaultInterruptHandler
 36826 ;; This function is called by:
 36827 ;;		_TMR5_ISR
 36828 ;; This function uses a reentrant model
 36829 ;;
 36830                           
 36831                           	psect	text165
 36832  01D14C                     __ptext165:
 36833                           	opt callstack 0
 36834  01D14C                     _TMR5_CallBack:
 36835                           	opt callstack 7
 36836                           
 36837                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 36838                           
 36839                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36840                           ;incstack = 0
 36841  01D14C  0100               	movlb	0	; () banked
 36842  01D14E  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 36843  01D150  11A6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 36844  01D152  11A7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 36845  01D154  B4D8               	btfsc	status,2,c
 36846  01D156  0012               	return	
 36847                           
 36848                           ; BSR set to: 0
 36849                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 36850  01D158  D801               	call	u1098_28
 36851  01D15A  0012               	return	
 36852  01D15C                     u1098_28:
 36853  01D15C  0005               	push	
 36854  01D15E  6EFA               	movwf	pclath,c
 36855  01D160  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 36856  01D162  6EFD               	movwf	tosl,c
 36857  01D164  51A6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 36858  01D166  6EFE               	movwf	tosh,c
 36859  01D168  51A7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 36860  01D16A  6EFF               	movwf	tosu,c
 36861  01D16C  50FA               	movf	pclath,w,c
 36862  01D16E  0012               	return		;indir
 36863  01D170                     __end_of_TMR5_CallBack:
 36864                           	opt callstack 0
 36865                           
 36866 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 36867 ;; Defined at:
 36868 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 36869 ;; Parameters:    Size  Location     Type
 36870 ;;		None
 36871 ;; Auto vars:     Size  Location     Type
 36872 ;;		None
 36873 ;; Return value:  Size  Location     Type
 36874 ;;                  1  [STACK] void 
 36875 ;; Registers used:
 36876 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 36877 ;; Tracked objects:
 36878 ;;		On entry : 3F/0
 36879 ;;		On exit  : 0/0
 36880 ;;		Unchanged: 0/0
 36881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36886 ;;Total ram usage:        0 bytes
 36887 ;; Hardware stack levels used:    1
 36888 ;; Hardware stack levels required when called:    7
 36889 ;; This function calls:
 36890 ;;		_check_day_time
 36891 ;; This function is called by:
 36892 ;;		_TMR5_Initialize
 36893 ;;		_TMR5_CallBack
 36894 ;; This function uses a reentrant model
 36895 ;;
 36896                           
 36897                           	psect	text166
 36898  01CB68                     __ptext166:
 36899                           	opt callstack 0
 36900  01CB68                     _TMR5_DefaultInterruptHandler:
 36901                           	opt callstack 7
 36902                           
 36903                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 36904                           
 36905                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36906                           ;incstack = 0
 36907  01CB68  A0BE               	btfss	190,0,c	;volatile
 36908  01CB6A  D002               	goto	u1024_20
 36909  01CB6C  0E01               	movlw	1
 36910  01CB6E  D001               	goto	u1024_26
 36911  01CB70                     u1024_20:
 36912  01CB70  0E00               	movlw	0
 36913  01CB72                     u1024_26:
 36914  01CB72  0AFF               	xorlw	255
 36915  01CB74  6E0C               	movwf	(btemp+11)^0,c
 36916  01CB76  50BE               	movf	190,w,c	;volatile
 36917  01CB78  180C               	xorwf	(btemp+11)^0,w,c
 36918  01CB7A  0BFE               	andlw	-2
 36919  01CB7C  180C               	xorwf	(btemp+11)^0,w,c
 36920  01CB7E  6EBE               	movwf	190,c	;volatile
 36921                           
 36922                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 36923  01CB80  0E01               	movlw	1
 36924  01CB82  0101               	movlb	1	; () banked
 36925  01CB84  27C3               	addwf	(_V+188)& (0+255),f,b	;volatile
 36926  01CB86  0E00               	movlw	0
 36927  01CB88  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 36928  01CB8A  23C5               	addwfc	(_V+190)& (0+255),f,b	;volatile
 36929  01CB8C  23C6               	addwfc	(_V+191)& (0+255),f,b	;volatile
 36930                           
 36931                           ; BSR set to: 1
 36932                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 36933  01CB8E  0E01               	movlw	1
 36934  01CB90  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 36935  01CB92  0E00               	movlw	0
 36936  01CB94  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 36937  01CB96  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 36938  01CB98  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 36939                           
 36940                           ; BSR set to: 1
 36941                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 36942  01CB9A  EC7B  F0C3         	call	_check_day_time	;wreg free
 36943                           
 36944                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36945  01CB9E  0012               	return		;funcret
 36946  01CBA0                     __end_of_TMR5_DefaultInterruptHandler:
 36947                           	opt callstack 0
 36948                           
 36949 ;; *************** function _check_day_time *****************
 36950 ;; Defined at:
 36951 ;;		line 167 in file "mbmc.c"
 36952 ;; Parameters:    Size  Location     Type
 36953 ;;		None
 36954 ;; Auto vars:     Size  Location     Type
 36955 ;;  light           4  [STACK] float 
 36956 ;; Return value:  Size  Location     Type
 36957 ;;                  1  [STACK] _Bool 
 36958 ;; Registers used:
 36959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 36960 ;; Tracked objects:
 36961 ;;		On entry : 3F/1
 36962 ;;		On exit  : 0/0
 36963 ;;		Unchanged: 0/0
 36964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36969 ;;Total ram usage:        0 bytes
 36970 ;; Hardware stack levels used:    1
 36971 ;; Hardware stack levels required when called:    6
 36972 ;; This function calls:
 36973 ;;		___flge
 36974 ;;		_conv_raw_result
 36975 ;;		_get_ac_charger_relay
 36976 ;;		_set_ac_charger_relay
 36977 ;; This function is called by:
 36978 ;;		_TMR5_DefaultInterruptHandler
 36979 ;; This function uses a reentrant model
 36980 ;;
 36981                           
 36982                           	psect	text167
 36983  0186F6                     __ptext167:
 36984                           	opt callstack 0
 36985  0186F6                     _check_day_time:
 36986                           	opt callstack 0
 36987                           
 36988                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36989  0186F6  52E6               	movf	postinc1,f,c
 36990  0186F8  52E6               	movf	postinc1,f,c
 36991  0186FA  52E6               	movf	postinc1,f,c
 36992  0186FC  52E6               	movf	postinc1,f,c
 36993                           
 36994                           ;mbmc.c: 169:  static uint8_t day_delay = 0;;mbmc.c: 170:  float light;;mbmc.c: 172:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 36995                           
 36996                           ;incstack = 0
 36997  0186FE  0E00               	movlw	0
 36998  018700  6EE6               	movwf	postinc1,c
 36999  018702  0E0D               	movlw	13
 37000  018704  6EE6               	movwf	postinc1,c
 37001  018706  EC9D  F0AA         	call	_conv_raw_result	;wreg free
 37002                           
 37003                           ;stkvar	_light @ sp[(-4)+0]
 37004  01870A  0EFC               	movlw	-4
 37005  01870C  0060  F007  FFE3   	movff	btemp,plusw1
 37006  018712  0EFD               	movlw	-3
 37007  018714  0060  F00B  FFE3   	movff	btemp+1,plusw1
 37008  01871A  0EFE               	movlw	-2
 37009  01871C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 37010  018722  0EFF               	movlw	-1
 37011  018724  0060  F013  FFE3   	movff	btemp+3,plusw1
 37012                           
 37013                           ;mbmc.c: 176:  if (C.day_update) {
 37014  01872A  EE22  F247         	lfsr	2,_C+328	;volatile
 37015  01872E  50DE               	movf	postinc2,w,c
 37016  018730  10DE               	iorwf	postinc2,w,c
 37017  018732  10DE               	iorwf	postinc2,w,c
 37018  018734  10DE               	iorwf	postinc2,w,c
 37019  018736  B4D8               	btfsc	status,2,c
 37020  018738  D021               	goto	l10710
 37021                           
 37022                           ;mbmc.c: 177:   if (V.ticks >= C.day_update) {
 37023  01873A  EE22  F247         	lfsr	2,_C+328	;volatile
 37024  01873E  50DE               	movf	postinc2,w,c
 37025  018740  0101               	movlb	1	; () banked
 37026  018742  5D88               	subwf	(_V+129)& (0+255),w,b	;volatile
 37027  018744  50DE               	movf	postinc2,w,c
 37028  018746  5989               	subwfb	(_V+130)& (0+255),w,b	;volatile
 37029  018748  50DE               	movf	postinc2,w,c
 37030  01874A  598A               	subwfb	(_V+131)& (0+255),w,b	;volatile
 37031  01874C  50DE               	movf	postinc2,w,c
 37032  01874E  598B               	subwfb	(_V+132)& (0+255),w,b	;volatile
 37033  018750  A0D8               	btfss	status,0,c
 37034  018752  D014               	goto	l10710
 37035                           
 37036                           ; BSR set to: 1
 37037                           ;mbmc.c: 178:    C.day_update = 0;
 37038  018754  0E00               	movlw	0
 37039  018756  006F FFA0  FA47    	movff	wreg,_C+328	;volatile
 37040  01875C  0E00               	movlw	0
 37041  01875E  006F FFA0  FA48    	movff	wreg,_C+329	;volatile
 37042  018764  0E00               	movlw	0
 37043  018766  006F FFA0  FA49    	movff	wreg,_C+330	;volatile
 37044  01876C  0E00               	movlw	0
 37045  01876E  006F FFA0  FA4A    	movff	wreg,_C+331	;volatile
 37046                           
 37047                           ;mbmc.c: 179:    C.dupdate = 1;
 37048  018774  0E01               	movlw	1
 37049  018776  006F FFA0  FA3E    	movff	wreg,_C+319	;volatile
 37050  01877C                     l10710:
 37051                           
 37052                           ;mbmc.c: 183:  if (!day_delay++ && V.system_stable) {
 37053  01877C  2A41               	incf	check_day_time@day_delay^0,f,c
 37054  01877E  0441               	decf	check_day_time@day_delay^0,w,c
 37055  018780  A4D8               	btfss	status,2,c
 37056  018782  D0C3               	goto	l2169
 37057  018784  0101               	movlb	1	; () banked
 37058  018786  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 37059  018788  B4D8               	btfsc	status,2,c
 37060  01878A  D0BF               	goto	l2169
 37061                           
 37062                           ; BSR set to: 1
 37063                           ;mbmc.c: 184:   if (C.soc > 3) {
 37064  01878C  EE22  F1B5         	lfsr	2,_C+182	;volatile
 37065  018790  0E01               	movlw	1
 37066  018792  50DB               	movf	plusw2,w,c
 37067  018794  E104               	bnz	u994_20
 37068  018796  0E04               	movlw	4
 37069  018798  5CDE               	subwf	postinc2,w,c
 37070  01879A  A0D8               	btfss	status,0,c
 37071  01879C  D08D               	goto	l10744
 37072  01879E                     u994_20:
 37073                           
 37074                           ; BSR set to: 1
 37075                           ;mbmc.c: 185:    if (!C.day) {
 37076  01879E  EE22  F23D         	lfsr	2,_C+318	;volatile
 37077  0187A2  50DF               	movf	indf2,w,c
 37078  0187A4  A4D8               	btfss	status,2,c
 37079  0187A6  D035               	goto	l10730
 37080                           
 37081                           ; BSR set to: 1
 37082                           ;mbmc.c: 186:     if (light > 22.0) {
 37083                           ;stkvar	_light @ sp[(-4)+0]
 37084  0187A8  0EFC               	movlw	-4
 37085  0187AA  006F FF8F FFE6     	movff	plusw1,postinc1
 37086  0187B0  006F FF8F FFE6     	movff	plusw1,postinc1
 37087  0187B6  006F FF8F FFE6     	movff	plusw1,postinc1
 37088  0187BC  006F FF8F FFE6     	movff	plusw1,postinc1
 37089  0187C2  0E00               	movlw	0
 37090  0187C4  6EE6               	movwf	postinc1,c
 37091  0187C6  0E00               	movlw	0
 37092  0187C8  6EE6               	movwf	postinc1,c
 37093  0187CA  0EB0               	movlw	176
 37094  0187CC  6EE6               	movwf	postinc1,c
 37095  0187CE  0E41               	movlw	65
 37096  0187D0  6EE6               	movwf	postinc1,c
 37097  0187D2  EC2C  F0CD         	call	___flge	;wreg free
 37098  0187D6  B001               	btfsc	btemp& (0+255),0,c
 37099  0187D8  D098               	goto	l2169
 37100                           
 37101                           ;mbmc.c: 187:      C.day = 1;
 37102  0187DA  0E01               	movlw	1
 37103  0187DC  006F FFA0  FA3D    	movff	wreg,_C+318	;volatile
 37104                           
 37105                           ;mbmc.c: 188:      C.day_start = V.ticks;
 37106  0187E2  EE20  F188         	lfsr	2,_V+129	;volatile
 37107  0187E6  006F FF78  FA3F    	movff	postinc2,_C+320	;volatile
 37108  0187EC  006F FF78  FA40    	movff	postinc2,_C+321	;volatile
 37109  0187F2  006F FF78  FA41    	movff	postinc2,_C+322	;volatile
 37110  0187F8  006F FF74  FA42    	movff	postdec2,_C+323	;volatile
 37111                           
 37112                           ;mbmc.c: 189:      if (get_ac_charger_relay()) {
 37113  0187FE  EC3E  F0EA         	call	_get_ac_charger_relay	;wreg free
 37114  018802  5001               	movf	btemp^0,w,c
 37115  018804  B4D8               	btfsc	status,2,c
 37116  018806  D085               	goto	l2165
 37117                           
 37118                           ;mbmc.c: 190:       set_ac_charger_relay(0);
 37119  018808  0E00               	movlw	0
 37120  01880A  6EE6               	movwf	postinc1,c
 37121  01880C  EC28  F0EA         	call	_set_ac_charger_relay	;wreg free
 37122  018810  D080               	goto	l2165
 37123  018812                     l10730:
 37124                           
 37125                           ; BSR set to: 1
 37126                           ;mbmc.c: 195:     if (light < 12.0) {
 37127  018812  0E00               	movlw	0
 37128  018814  6EE6               	movwf	postinc1,c
 37129  018816  0E00               	movlw	0
 37130  018818  6EE6               	movwf	postinc1,c
 37131  01881A  0E40               	movlw	64
 37132  01881C  6EE6               	movwf	postinc1,c
 37133  01881E  0E41               	movlw	65
 37134  018820  6EE6               	movwf	postinc1,c
 37135                           
 37136                           ;stkvar	_light @ sp[(-8)+0]
 37137  018822  0EF8               	movlw	-8
 37138  018824  006F FF8F FFE6     	movff	plusw1,postinc1
 37139  01882A  006F FF8F FFE6     	movff	plusw1,postinc1
 37140  018830  006F FF8F FFE6     	movff	plusw1,postinc1
 37141  018836  006F FF8F FFE6     	movff	plusw1,postinc1
 37142  01883C  EC2C  F0CD         	call	___flge	;wreg free
 37143  018840  B001               	btfsc	btemp& (0+255),0,c
 37144  018842  D063               	goto	l2169
 37145                           
 37146                           ;mbmc.c: 196:      C.day = 0;
 37147  018844  0E00               	movlw	0
 37148  018846  006F FFA0  FA3D    	movff	wreg,_C+318	;volatile
 37149                           
 37150                           ;mbmc.c: 197:      C.day_end = V.ticks;
 37151  01884C  EE20  F188         	lfsr	2,_V+129	;volatile
 37152  018850  006F FF78  FA43    	movff	postinc2,_C+324	;volatile
 37153  018856  006F FF78  FA44    	movff	postinc2,_C+325	;volatile
 37154  01885C  006F FF78  FA45    	movff	postinc2,_C+326	;volatile
 37155  018862  006F FF74  FA46    	movff	postdec2,_C+327	;volatile
 37156                           
 37157                           ;mbmc.c: 198:      C.day_update = C.day_end + 14400;
 37158  018868  EE22  F243         	lfsr	2,_C+324	;volatile
 37159  01886C  0E40               	movlw	64
 37160  01886E  24DE               	addwf	postinc2,w,c
 37161  018870  6E09               	movwf	(btemp+8)^0,c
 37162  018872  0E38               	movlw	56
 37163  018874  20DE               	addwfc	postinc2,w,c
 37164  018876  6E0A               	movwf	(btemp+9)^0,c
 37165  018878  0E00               	movlw	0
 37166  01887A  20DE               	addwfc	postinc2,w,c
 37167  01887C  6E0B               	movwf	(btemp+10)^0,c
 37168  01887E  0E00               	movlw	0
 37169  018880  20DE               	addwfc	postinc2,w,c
 37170  018882  6E0C               	movwf	(btemp+11)^0,c
 37171  018884  0060  F024  FA47   	movff	btemp+8,_C+328	;volatile
 37172  01888A  0060  F028  FA48   	movff	btemp+9,_C+329	;volatile
 37173  018890  0060  F02C  FA49   	movff	btemp+10,_C+330	;volatile
 37174  018896  0060  F030  FA4A   	movff	btemp+11,_C+331	;volatile
 37175                           
 37176                           ;mbmc.c: 202:      if ((C.soc < 20)) {
 37177  01889C  EE22  F1B5         	lfsr	2,_C+182	;volatile
 37178  0188A0  0E01               	movlw	1
 37179  0188A2  50DB               	movf	plusw2,w,c
 37180  0188A4  E136               	bnz	l2165
 37181  0188A6  0E14               	movlw	20
 37182  0188A8  5CDE               	subwf	postinc2,w,c
 37183  0188AA  B0D8               	btfsc	status,0,c
 37184  0188AC  D032               	goto	l2165
 37185                           
 37186                           ;mbmc.c: 203:       set_ac_charger_relay(1);
 37187  0188AE  0E01               	movlw	1
 37188  0188B0  6EE6               	movwf	postinc1,c
 37189  0188B2  EC28  F0EA         	call	_set_ac_charger_relay	;wreg free
 37190  0188B6  D02D               	goto	l2165
 37191  0188B8                     l10744:
 37192                           
 37193                           ; BSR set to: 1
 37194                           ;mbmc.c: 209:    if (C.p_pv < C.p_inverter) {
 37195  0188B8  EE22  F177         	lfsr	2,_C+120	;volatile
 37196  0188BC  006F FF7B FFE6     	movff	postinc2,postinc1
 37197  0188C2  006F FF7B FFE6     	movff	postinc2,postinc1
 37198  0188C8  006F FF7B FFE6     	movff	postinc2,postinc1
 37199  0188CE  006F FF7B FFE6     	movff	postinc2,postinc1
 37200  0188D4  EE22  F17B         	lfsr	2,_C+124	;volatile
 37201  0188D8  006F FF7B FFE6     	movff	postinc2,postinc1
 37202  0188DE  006F FF7B FFE6     	movff	postinc2,postinc1
 37203  0188E4  006F FF7B FFE6     	movff	postinc2,postinc1
 37204  0188EA  006F FF7B FFE6     	movff	postinc2,postinc1
 37205  0188F0  EC2C  F0CD         	call	___flge	;wreg free
 37206  0188F4  B001               	btfsc	btemp& (0+255),0,c
 37207  0188F6  D009               	goto	l2169
 37208                           
 37209                           ;mbmc.c: 210:     if (!get_ac_charger_relay()) {
 37210  0188F8  EC3E  F0EA         	call	_get_ac_charger_relay	;wreg free
 37211  0188FC  5001               	movf	btemp^0,w,c
 37212  0188FE  A4D8               	btfss	status,2,c
 37213  018900  D004               	goto	l2169
 37214                           
 37215                           ;mbmc.c: 211:      set_ac_charger_relay(1);
 37216  018902  0E01               	movlw	1
 37217  018904  6EE6               	movwf	postinc1,c
 37218  018906  EC28  F0EA         	call	_set_ac_charger_relay	;wreg free
 37219  01890A                     l2169:
 37220                           
 37221                           ;mbmc.c: 216:  if (day_delay >= 240)
 37222  01890A  0EEF               	movlw	239
 37223  01890C  6441               	cpfsgt	check_day_time@day_delay^0,c
 37224  01890E  D001               	goto	l2165
 37225                           
 37226                           ;mbmc.c: 217:   day_delay = 0;
 37227  018910  6A41               	clrf	check_day_time@day_delay^0,c
 37228  018912                     l2165:
 37229                           
 37230                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 37231  018912  52E5               	movf	postdec1,f,c
 37232  018914  52E5               	movf	postdec1,f,c
 37233  018916  52E5               	movf	postdec1,f,c
 37234  018918  52E5               	movf	postdec1,f,c
 37235  01891A  0012               	return		;funcret
 37236  01891C                     __end_of_check_day_time:
 37237                           	opt callstack 0
 37238                           
 37239 ;; *************** function _set_ac_charger_relay *****************
 37240 ;; Defined at:
 37241 ;;		line 136 in file "mbmc.c"
 37242 ;; Parameters:    Size  Location     Type
 37243 ;;  mode            1  [STACK] const _Bool 
 37244 ;; Auto vars:     Size  Location     Type
 37245 ;;		None
 37246 ;; Return value:  Size  Location     Type
 37247 ;;                  1  [STACK] void 
 37248 ;; Registers used:
 37249 ;;		wreg, fsr1l, fsr1h
 37250 ;; Tracked objects:
 37251 ;;		On entry : 0/1
 37252 ;;		On exit  : 0/0
 37253 ;;		Unchanged: 0/0
 37254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37259 ;;Total ram usage:        0 bytes
 37260 ;; Hardware stack levels used:    1
 37261 ;; Hardware stack levels required when called:    3
 37262 ;; This function calls:
 37263 ;;		Nothing
 37264 ;; This function is called by:
 37265 ;;		_check_day_time
 37266 ;; This function uses a reentrant model
 37267 ;;
 37268                           
 37269                           	psect	text168
 37270  01D450                     __ptext168:
 37271                           	opt callstack 0
 37272  01D450                     _set_ac_charger_relay:
 37273                           	opt callstack 9
 37274                           
 37275                           ;mbmc.c: 136: void set_ac_charger_relay(const _Bool mode);mbmc.c: 137: {;mbmc.c: 138:  L
      +                          ATDbits.LATD6 = mode;
 37276                           ;stkvar	_mode @ sp[(0)+-1]
 37277                           
 37278                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37279                           ;incstack = 0
 37280  01D450  0EFF               	movlw	-1
 37281  01D452  B0E3               	btfsc	plusw1,0,c
 37282  01D454  D002               	bra	u984_25
 37283  01D456  9CBD               	bcf	189,6,c	;volatile
 37284  01D458  D001               	bra	u984_26
 37285  01D45A                     u984_25:
 37286  01D45A  8CBD               	bsf	189,6,c	;volatile
 37287  01D45C                     u984_26:
 37288                           
 37289                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 37290  01D45C  52E5               	movf	postdec1,f,c
 37291  01D45E  0012               	return		;funcret
 37292  01D460                     __end_of_set_ac_charger_relay:
 37293                           	opt callstack 0
 37294                           
 37295 ;; *************** function _get_ac_charger_relay *****************
 37296 ;; Defined at:
 37297 ;;		line 141 in file "mbmc.c"
 37298 ;; Parameters:    Size  Location     Type
 37299 ;;		None
 37300 ;; Auto vars:     Size  Location     Type
 37301 ;;		None
 37302 ;; Return value:  Size  Location     Type
 37303 ;;                  1  [STACK] _Bool 
 37304 ;; Registers used:
 37305 ;;		btemp
 37306 ;; Tracked objects:
 37307 ;;		On entry : 0/1
 37308 ;;		On exit  : 0/0
 37309 ;;		Unchanged: 0/0
 37310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37315 ;;Total ram usage:        0 bytes
 37316 ;; Hardware stack levels used:    1
 37317 ;; Hardware stack levels required when called:    3
 37318 ;; This function calls:
 37319 ;;		Nothing
 37320 ;; This function is called by:
 37321 ;;		_check_day_time
 37322 ;;		_calc_bsoc
 37323 ;; This function uses a reentrant model
 37324 ;;
 37325                           
 37326                           	psect	text169
 37327  01D47C                     __ptext169:
 37328                           	opt callstack 0
 37329  01D47C                     _get_ac_charger_relay:
 37330                           	opt callstack 10
 37331                           
 37332                           ;mbmc.c: 143:  return LATDbits.LATD6;
 37333                           
 37334                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37335                           ;incstack = 0
 37336  01D47C  ACBD               	btfss	189,6,c	;volatile
 37337  01D47E  D003               	goto	u1017_20
 37338  01D480  6A01               	clrf	btemp^0,c
 37339  01D482  2A01               	incf	btemp^0,f,c
 37340  01D484  0012               	return	
 37341  01D486                     u1017_20:
 37342  01D486  6A01               	clrf	btemp^0,c
 37343                           
 37344                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 37345  01D488  0012               	return		;funcret
 37346  01D48A                     __end_of_get_ac_charger_relay:
 37347                           	opt callstack 0
 37348                           
 37349 ;; *************** function _TMR3_ISR *****************
 37350 ;; Defined at:
 37351 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 37352 ;; Parameters:    Size  Location     Type
 37353 ;;		None
 37354 ;; Auto vars:     Size  Location     Type
 37355 ;;		None
 37356 ;; Return value:  Size  Location     Type
 37357 ;;                  1    wreg      void 
 37358 ;; Registers used:
 37359 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 37360 ;; Tracked objects:
 37361 ;;		On entry : 0/0
 37362 ;;		On exit  : 3F/0
 37363 ;;		Unchanged: 0/0
 37364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37367 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37368 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37369 ;;Total ram usage:       25 bytes
 37370 ;; Hardware stack levels used:    1
 37371 ;; Hardware stack levels required when called:   14
 37372 ;; This function calls:
 37373 ;;		_TMR3_CallBack
 37374 ;;		_TMR3_WriteTimer
 37375 ;; This function is called by:
 37376 ;;		Interrupt level 1
 37377 ;; This function uses a non-reentrant model
 37378 ;;
 37379                           
 37380                           	psect	text170
 37381  019BBC                     __ptext170:
 37382                           	opt callstack 0
 37383  019BBC                     _TMR3_ISR:
 37384                           	opt callstack 2
 37385                           
 37386                           ;incstack = 0
 37387  019BBC  006F FF60  F0D8    	movff	status,??_TMR3_ISR
 37388  019BC2  006F FFD8  F0D9    	movff	tblptrl,??_TMR3_ISR+1
 37389  019BC8  006F FFDC  F0DA    	movff	tblptrh,??_TMR3_ISR+2
 37390  019BCE  006F FFE0  F0DB    	movff	tblptru,??_TMR3_ISR+3
 37391  019BD4  006F FFD4  F0DC    	movff	tablat,??_TMR3_ISR+4
 37392  019BDA  0060  F004  F0DD   	movff	btemp,??_TMR3_ISR+5
 37393  019BE0  0060  F008  F0DE   	movff	btemp+1,??_TMR3_ISR+6
 37394  019BE6  0060  F00C  F0DF   	movff	btemp+2,??_TMR3_ISR+7
 37395  019BEC  0060  F010  F0E0   	movff	btemp+3,??_TMR3_ISR+8
 37396  019BF2  0060  F014  F0E1   	movff	btemp+4,??_TMR3_ISR+9
 37397  019BF8  0060  F018  F0E2   	movff	btemp+5,??_TMR3_ISR+10
 37398  019BFE  0060  F01C  F0E3   	movff	btemp+6,??_TMR3_ISR+11
 37399  019C04  0060  F020  F0E4   	movff	btemp+7,??_TMR3_ISR+12
 37400  019C0A  0060  F024  F0E5   	movff	btemp+8,??_TMR3_ISR+13
 37401  019C10  0060  F028  F0E6   	movff	btemp+9,??_TMR3_ISR+14
 37402  019C16  0060  F02C  F0E7   	movff	btemp+10,??_TMR3_ISR+15
 37403  019C1C  0060  F030  F0E8   	movff	btemp+11,??_TMR3_ISR+16
 37404  019C22  0060  F044  F0E9   	movff	btemp+16,??_TMR3_ISR+17
 37405  019C28  0060  F048  F0EA   	movff	btemp+17,??_TMR3_ISR+18
 37406  019C2E  0060  F04C  F0EB   	movff	btemp+18,??_TMR3_ISR+19
 37407  019C34  0060  F050  F0EC   	movff	btemp+19,??_TMR3_ISR+20
 37408  019C3A  0060  F054  F0ED   	movff	btemp+20,??_TMR3_ISR+21
 37409  019C40  0060  F058  F0EE   	movff	btemp+21,??_TMR3_ISR+22
 37410  019C46  0060  F05C  F0EF   	movff	btemp+22,??_TMR3_ISR+23
 37411  019C4C  0060  F060  F0F0   	movff	btemp+23,??_TMR3_ISR+24
 37412  019C52  EE16  F166         	lfsr	1,___intlo_sp
 37413                           
 37414                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 37415  019C56  0139               	movlb	57	; () banked
 37416  019C58  9DA6               	bcf	166,6,b	;volatile
 37417                           
 37418                           ; BSR set to: 57
 37419                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 37420  019C5A  0060  F313  FFE6   	movff	_timer3ReloadVal,postinc1
 37421  019C60  0060  F317  FFE6   	movff	_timer3ReloadVal+1,postinc1
 37422  019C66  EC3C  F0E5         	call	_TMR3_WriteTimer	;wreg free
 37423                           
 37424                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 37425  019C6A  0100               	movlb	0	; () banked
 37426  019C6C  4BC2               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 37427  019C6E  2BC3               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 37428  019C70  51C3               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 37429  019C72  E104               	bnz	i1u1381_20
 37430  019C74  0E28               	movlw	40
 37431  019C76  5DC2               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 37432  019C78  A0D8               	btfss	status,0,c
 37433  019C7A  D005               	goto	i1l1209
 37434  019C7C                     i1u1381_20:
 37435                           
 37436                           ; BSR set to: 0
 37437                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 37438  019C7C  ECB8  F0E8         	call	_TMR3_CallBack	;wreg free
 37439                           
 37440                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 37441  019C80  0100               	movlb	0	; () banked
 37442  019C82  6BC2               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 37443  019C84  6BC3               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 37444  019C86                     i1l1209:
 37445                           
 37446                           ; BSR set to: 0
 37447  019C86  0060  F3C0  F018   	movff	??_TMR3_ISR+24,btemp+23
 37448  019C8C  0060  F3BC  F017   	movff	??_TMR3_ISR+23,btemp+22
 37449  019C92  0060  F3B8  F016   	movff	??_TMR3_ISR+22,btemp+21
 37450  019C98  0060  F3B4  F015   	movff	??_TMR3_ISR+21,btemp+20
 37451  019C9E  0060  F3B0  F014   	movff	??_TMR3_ISR+20,btemp+19
 37452  019CA4  0060  F3AC  F013   	movff	??_TMR3_ISR+19,btemp+18
 37453  019CAA  0060  F3A8  F012   	movff	??_TMR3_ISR+18,btemp+17
 37454  019CB0  0060  F3A4  F011   	movff	??_TMR3_ISR+17,btemp+16
 37455  019CB6  0060  F3A0  F00C   	movff	??_TMR3_ISR+16,btemp+11
 37456  019CBC  0060  F39C  F00B   	movff	??_TMR3_ISR+15,btemp+10
 37457  019CC2  0060  F398  F00A   	movff	??_TMR3_ISR+14,btemp+9
 37458  019CC8  0060  F394  F009   	movff	??_TMR3_ISR+13,btemp+8
 37459  019CCE  0060  F390  F008   	movff	??_TMR3_ISR+12,btemp+7
 37460  019CD4  0060  F38C  F007   	movff	??_TMR3_ISR+11,btemp+6
 37461  019CDA  0060  F388  F006   	movff	??_TMR3_ISR+10,btemp+5
 37462  019CE0  0060  F384  F005   	movff	??_TMR3_ISR+9,btemp+4
 37463  019CE6  0060  F380  F004   	movff	??_TMR3_ISR+8,btemp+3
 37464  019CEC  0060  F37C  F003   	movff	??_TMR3_ISR+7,btemp+2
 37465  019CF2  0060  F378  F002   	movff	??_TMR3_ISR+6,btemp+1
 37466  019CF8  0060  F374  F001   	movff	??_TMR3_ISR+5,btemp
 37467  019CFE  0060  F373  FFF5   	movff	??_TMR3_ISR+4,tablat
 37468  019D04  0060  F36F  FFF8   	movff	??_TMR3_ISR+3,tblptru
 37469  019D0A  0060  F36B  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 37470  019D10  0060  F367  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 37471  019D16  0060  F363  FFD8   	movff	??_TMR3_ISR,status
 37472  019D1C  0011               	retfie		f
 37473  019D1E                     __end_of_TMR3_ISR:
 37474                           	opt callstack 0
 37475                           
 37476 ;; *************** function _TMR3_WriteTimer *****************
 37477 ;; Defined at:
 37478 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 37479 ;; Parameters:    Size  Location     Type
 37480 ;;  timerVal        2  [STACK] unsigned short 
 37481 ;; Auto vars:     Size  Location     Type
 37482 ;;		None
 37483 ;; Return value:  Size  Location     Type
 37484 ;;                  1  [STACK] void 
 37485 ;; Registers used:
 37486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 37487 ;; Tracked objects:
 37488 ;;		On entry : 3F/39
 37489 ;;		On exit  : 0/0
 37490 ;;		Unchanged: 0/0
 37491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37496 ;;Total ram usage:        0 bytes
 37497 ;; Hardware stack levels used:    1
 37498 ;; Hardware stack levels required when called:    3
 37499 ;; This function calls:
 37500 ;;		Nothing
 37501 ;; This function is called by:
 37502 ;;		_TMR3_ISR
 37503 ;; This function uses a reentrant model
 37504 ;;
 37505                           
 37506                           	psect	text171
 37507  01CA78                     __ptext171:
 37508                           	opt callstack 0
 37509  01CA78                     _TMR3_WriteTimer:
 37510                           	opt callstack 12
 37511                           
 37512                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 37513                           
 37514                           ; BSR set to: 0
 37515                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37516                           ;incstack = 0
 37517  01CA78  A4A6               	btfss	166,2,c	;volatile
 37518  01CA7A  D00F               	goto	l11876
 37519                           
 37520                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 37521  01CA7C  90A6               	bcf	166,0,c	;volatile
 37522                           
 37523                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 37524                           ;stkvar	_timerVal @ sp[(0)+-2]
 37525  01CA7E  0EFF               	movlw	255
 37526  01CA80  24E1               	addwf	fsr1l,w,c
 37527  01CA82  6ED9               	movwf	fsr2l,c
 37528  01CA84  0EFF               	movlw	255
 37529  01CA86  20E2               	addwfc	fsr1h,w,c
 37530  01CA88  6EDA               	movwf	fsr2h,c
 37531  01CA8A  50DF               	movf	indf2,w,c
 37532  01CA8C  6EA5               	movwf	165,c	;volatile
 37533                           
 37534                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 37535                           ;stkvar	_timerVal @ sp[(0)+-2]
 37536  01CA8E  0EFE               	movlw	-2
 37537  01CA90  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 37538                           
 37539                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 37540  01CA96  80A6               	bsf	166,0,c	;volatile
 37541                           
 37542                           ;mcc_generated_files/tmr3.c: 141:     }
 37543  01CA98  D00C               	goto	l1192
 37544  01CA9A                     l11876:
 37545                           
 37546                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 37547                           ;stkvar	_timerVal @ sp[(0)+-2]
 37548  01CA9A  0EFF               	movlw	255
 37549  01CA9C  24E1               	addwf	fsr1l,w,c
 37550  01CA9E  6ED9               	movwf	fsr2l,c
 37551  01CAA0  0EFF               	movlw	255
 37552  01CAA2  20E2               	addwfc	fsr1h,w,c
 37553  01CAA4  6EDA               	movwf	fsr2h,c
 37554  01CAA6  50DF               	movf	indf2,w,c
 37555  01CAA8  6EA5               	movwf	165,c	;volatile
 37556                           
 37557                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 37558                           ;stkvar	_timerVal @ sp[(0)+-2]
 37559  01CAAA  0EFE               	movlw	-2
 37560  01CAAC  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 37561  01CAB2                     l1192:
 37562                           
 37563                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 37564  01CAB2  52E5               	movf	postdec1,f,c
 37565  01CAB4  52E5               	movf	postdec1,f,c
 37566  01CAB6  0012               	return		;funcret
 37567  01CAB8                     __end_of_TMR3_WriteTimer:
 37568                           	opt callstack 0
 37569                           
 37570 ;; *************** function _TMR3_CallBack *****************
 37571 ;; Defined at:
 37572 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 37573 ;; Parameters:    Size  Location     Type
 37574 ;;		None
 37575 ;; Auto vars:     Size  Location     Type
 37576 ;;		None
 37577 ;; Return value:  Size  Location     Type
 37578 ;;                  1  [STACK] void 
 37579 ;; Registers used:
 37580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 37581 ;; Tracked objects:
 37582 ;;		On entry : 3F/0
 37583 ;;		On exit  : 0/0
 37584 ;;		Unchanged: 0/0
 37585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37590 ;;Total ram usage:        0 bytes
 37591 ;; Hardware stack levels used:    1
 37592 ;; Hardware stack levels required when called:   13
 37593 ;; This function calls:
 37594 ;;		Absolute function
 37595 ;;		_TMR3_DefaultInterruptHandler
 37596 ;;		_calc_bsoc
 37597 ;; This function is called by:
 37598 ;;		_TMR3_ISR
 37599 ;; This function uses a reentrant model
 37600 ;;
 37601                           
 37602                           	psect	text172
 37603  01D170                     __ptext172:
 37604                           	opt callstack 0
 37605  01D170                     _TMR3_CallBack:
 37606                           	opt callstack 2
 37607                           
 37608                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 37609                           
 37610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37611                           ;incstack = 0
 37612  01D170  0100               	movlb	0	; () banked
 37613  01D172  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 37614  01D174  11A3               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 37615  01D176  11A4               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 37616  01D178  B4D8               	btfsc	status,2,c
 37617  01D17A  0012               	return	
 37618                           
 37619                           ; BSR set to: 0
 37620                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 37621  01D17C  D801               	call	u1366_28
 37622  01D17E  0012               	return	
 37623  01D180                     u1366_28:
 37624  01D180  0005               	push	
 37625  01D182  6EFA               	movwf	pclath,c
 37626  01D184  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 37627  01D186  6EFD               	movwf	tosl,c
 37628  01D188  51A3               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 37629  01D18A  6EFE               	movwf	tosh,c
 37630  01D18C  51A4               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 37631  01D18E  6EFF               	movwf	tosu,c
 37632  01D190  50FA               	movf	pclath,w,c
 37633  01D192  0012               	return		;indir
 37634  01D194                     __end_of_TMR3_CallBack:
 37635                           	opt callstack 0
 37636                           
 37637 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 37638 ;; Defined at:
 37639 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 37640 ;; Parameters:    Size  Location     Type
 37641 ;;		None
 37642 ;; Auto vars:     Size  Location     Type
 37643 ;;		None
 37644 ;; Return value:  Size  Location     Type
 37645 ;;                  1  [STACK] void 
 37646 ;; Registers used:
 37647 ;;		None
 37648 ;; Tracked objects:
 37649 ;;		On entry : 3F/0
 37650 ;;		On exit  : 0/0
 37651 ;;		Unchanged: 0/0
 37652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37657 ;;Total ram usage:        0 bytes
 37658 ;; Hardware stack levels used:    1
 37659 ;; Hardware stack levels required when called:    3
 37660 ;; This function calls:
 37661 ;;		Nothing
 37662 ;; This function is called by:
 37663 ;;		_TMR3_Initialize
 37664 ;;		_TMR3_CallBack
 37665 ;; This function uses a reentrant model
 37666 ;;
 37667                           
 37668                           	psect	text173
 37669  01D53C                     __ptext173:
 37670                           	opt callstack 0
 37671  01D53C                     _TMR3_DefaultInterruptHandler:
 37672                           	opt callstack 11
 37673                           
 37674                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 37675                           
 37676                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37677                           ;incstack = 0
 37678  01D53C  0012               	return		;funcret
 37679  01D53E                     __end_of_TMR3_DefaultInterruptHandler:
 37680                           	opt callstack 0
 37681                           
 37682 ;; *************** function _calc_bsoc *****************
 37683 ;; Defined at:
 37684 ;;		line 39 in file "bsoc.c"
 37685 ;; Parameters:    Size  Location     Type
 37686 ;;		None
 37687 ;; Auto vars:     Size  Location     Type
 37688 ;;  adj             4  [STACK] float 
 37689 ;;  log_ptr         2  [STACK] PTR unsigned char 
 37690 ;;		 -> port_data(512), 
 37691 ;; Return value:  Size  Location     Type
 37692 ;;                  1  [STACK] void 
 37693 ;; Registers used:
 37694 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 37695 ;; Tracked objects:
 37696 ;;		On entry : 3F/0
 37697 ;;		On exit  : 5/1
 37698 ;;		Unchanged: 0/0
 37699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37704 ;;Total ram usage:        0 bytes
 37705 ;; Hardware stack levels used:    1
 37706 ;; Hardware stack levels required when called:   12
 37707 ;; This function calls:
 37708 ;;		_StartTimer
 37709 ;;		___asfladd
 37710 ;;		___fldiv
 37711 ;;		___flge
 37712 ;;		___flmul
 37713 ;;		___flneg
 37714 ;;		___fltol
 37715 ;;		_fabsf
 37716 ;;		_get_ac_charger_relay
 37717 ;;		_port_data_dma_ptr
 37718 ;;		_send_port_data_dma
 37719 ;;		_sprintf
 37720 ;;		_strlen
 37721 ;; This function is called by:
 37722 ;;		_init_bsoc
 37723 ;;		_TMR3_CallBack
 37724 ;; This function uses a reentrant model
 37725 ;;
 37726                           
 37727                           	psect	text174
 37728  01356C                     __ptext174:
 37729                           	opt callstack 0
 37730  01356C                     _calc_bsoc:
 37731                           	opt callstack 0
 37732                           
 37733                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37734  01356C  0E06               	movlw	6
 37735  01356E  26E1               	addwf	fsr1l,f,c
 37736  013570  0E00               	movlw	0
 37737  013572  22E2               	addwfc	fsr1h,f,c
 37738                           
 37739                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 37740                           
 37741                           ;incstack = 0
 37742  013574  0E00               	movlw	0
 37743  013576  6E09               	movwf	(btemp+8)^0,c
 37744  013578  0E00               	movlw	0
 37745  01357A  6E0A               	movwf	(btemp+9)^0,c
 37746  01357C  0E80               	movlw	128
 37747  01357E  6E0B               	movwf	(btemp+10)^0,c
 37748  013580  0E3F               	movlw	63
 37749  013582  6E0C               	movwf	(btemp+11)^0,c
 37750                           
 37751                           ;stkvar	_adj @ sp[(-6)+0]
 37752  013584  0EFA               	movlw	-6
 37753  013586  0060  F027  FFE3   	movff	btemp+8,plusw1
 37754  01358C  0EFB               	movlw	-5
 37755  01358E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 37756  013594  0EFC               	movlw	-4
 37757  013596  0060  F02F  FFE3   	movff	btemp+10,plusw1
 37758  01359C  0EFD               	movlw	-3
 37759  01359E  0060  F033  FFE3   	movff	btemp+11,plusw1
 37760  0135A4  82BE               	bsf	190,1,c	;volatile
 37761                           
 37762                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 37763  0135A6  0E00               	movlw	0
 37764  0135A8  6EE6               	movwf	postinc1,c
 37765  0135AA  0E00               	movlw	0
 37766  0135AC  6EE6               	movwf	postinc1,c
 37767  0135AE  0E61               	movlw	97
 37768  0135B0  6EE6               	movwf	postinc1,c
 37769  0135B2  0E45               	movlw	69
 37770  0135B4  6EE6               	movwf	postinc1,c
 37771  0135B6  EE22  F143         	lfsr	2,_C+68	;volatile
 37772  0135BA  006F FF7B FFE6     	movff	postinc2,postinc1
 37773  0135C0  006F FF7B FFE6     	movff	postinc2,postinc1
 37774  0135C6  006F FF7B FFE6     	movff	postinc2,postinc1
 37775  0135CC  006F FF7B FFE6     	movff	postinc2,postinc1
 37776  0135D2  ECE0  F0A7         	call	___fldiv	;wreg free
 37777  0135D6  0060  F007  FFE6   	movff	btemp,postinc1
 37778  0135DC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37779  0135E2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37780  0135E8  0060  F013  FFE6   	movff	btemp+3,postinc1
 37781  0135EE  0E8F               	movlw	low (_C+144)
 37782  0135F0  6EE6               	movwf	postinc1,c
 37783  0135F2  0E09               	movlw	high (_C+144)
 37784  0135F4  6EE6               	movwf	postinc1,c
 37785  0135F6  ECCF  F0DF         	call	___asfladd	;wreg free
 37786                           
 37787                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 37788  0135FA  EE22  F18F         	lfsr	2,_C+144	;volatile
 37789  0135FE  006F FF7B FFE6     	movff	postinc2,postinc1
 37790  013604  006F FF7B FFE6     	movff	postinc2,postinc1
 37791  01360A  006F FF7B FFE6     	movff	postinc2,postinc1
 37792  013610  006F FF7B FFE6     	movff	postinc2,postinc1
 37793  013616  EE22  F18B         	lfsr	2,_C+140	;volatile
 37794  01361A  006F FF7B FFE6     	movff	postinc2,postinc1
 37795  013620  006F FF7B FFE6     	movff	postinc2,postinc1
 37796  013626  006F FF7B FFE6     	movff	postinc2,postinc1
 37797  01362C  006F FF7B FFE6     	movff	postinc2,postinc1
 37798  013632  EC2C  F0CD         	call	___flge	;wreg free
 37799  013636  B001               	btfsc	btemp& (0+255),0,c
 37800  013638  D00E               	goto	l14178
 37801                           
 37802                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 37803  01363A  EE22  F18B         	lfsr	2,_C+140	;volatile
 37804  01363E  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
 37805  013644  006F FF78  F990    	movff	postinc2,_C+145	;volatile
 37806  01364A  006F FF78  F991    	movff	postinc2,_C+146	;volatile
 37807  013650  006F FF74  F992    	movff	postdec2,_C+147	;volatile
 37808  013656                     l14178:
 37809                           
 37810                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 37811  013656  0ECD               	movlw	205
 37812  013658  6EE6               	movwf	postinc1,c
 37813  01365A  0ECC               	movlw	204
 37814  01365C  6EE6               	movwf	postinc1,c
 37815  01365E  0ECC               	movlw	204
 37816  013660  6EE6               	movwf	postinc1,c
 37817  013662  0E3D               	movlw	61
 37818  013664  6EE6               	movwf	postinc1,c
 37819  013666  EE22  F18F         	lfsr	2,_C+144	;volatile
 37820  01366A  006F FF7B FFE6     	movff	postinc2,postinc1
 37821  013670  006F FF7B FFE6     	movff	postinc2,postinc1
 37822  013676  006F FF7B FFE6     	movff	postinc2,postinc1
 37823  01367C  006F FF7B FFE6     	movff	postinc2,postinc1
 37824  013682  EC2C  F0CD         	call	___flge	;wreg free
 37825  013686  B001               	btfsc	btemp& (0+255),0,c
 37826  013688  D010               	goto	l14182
 37827                           
 37828                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 37829  01368A  0ECD               	movlw	205
 37830  01368C  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
 37831  013692  0ECC               	movlw	204
 37832  013694  006F FFA0  F990    	movff	wreg,_C+145	;volatile
 37833  01369A  0ECC               	movlw	204
 37834  01369C  006F FFA0  F991    	movff	wreg,_C+146	;volatile
 37835  0136A2  0E3D               	movlw	61
 37836  0136A4  006F FFA0  F992    	movff	wreg,_C+147	;volatile
 37837  0136AA                     l14182:
 37838                           
 37839                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 37840  0136AA  EE22  F143         	lfsr	2,_C+68	;volatile
 37841  0136AE  006F FF7B FFE6     	movff	postinc2,postinc1
 37842  0136B4  006F FF7B FFE6     	movff	postinc2,postinc1
 37843  0136BA  006F FF7B FFE6     	movff	postinc2,postinc1
 37844  0136C0  006F FF7B FFE6     	movff	postinc2,postinc1
 37845  0136C6  0E0A               	movlw	10
 37846  0136C8  6EE6               	movwf	postinc1,c
 37847  0136CA  0ED7               	movlw	215
 37848  0136CC  6EE6               	movwf	postinc1,c
 37849  0136CE  0E23               	movlw	35
 37850  0136D0  6EE6               	movwf	postinc1,c
 37851  0136D2  0E3C               	movlw	60
 37852  0136D4  6EE6               	movwf	postinc1,c
 37853  0136D6  EC2C  F0CD         	call	___flge	;wreg free
 37854  0136DA  B001               	btfsc	btemp& (0+255),0,c
 37855  0136DC  D01C               	goto	l14186
 37856                           
 37857                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 37858  0136DE  0062  F754  F009   	movff	_C+214,btemp+8	;volatile
 37859  0136E4  0062  F758  F00A   	movff	_C+215,btemp+9	;volatile
 37860  0136EA  0062  F75C  F00B   	movff	_C+216,btemp+10	;volatile
 37861  0136F0  0062  F760  F00C   	movff	_C+217,btemp+11	;volatile
 37862                           
 37863                           ;stkvar	_adj @ sp[(-6)+0]
 37864  0136F6  0EFA               	movlw	-6
 37865  0136F8  0060  F027  FFE3   	movff	btemp+8,plusw1
 37866  0136FE  0EFB               	movlw	-5
 37867  013700  0060  F02B  FFE3   	movff	btemp+9,plusw1
 37868  013706  0EFC               	movlw	-4
 37869  013708  0060  F02F  FFE3   	movff	btemp+10,plusw1
 37870  01370E  0EFD               	movlw	-3
 37871  013710  0060  F033  FFE3   	movff	btemp+11,plusw1
 37872  013716                     l14186:
 37873                           
 37874                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 37875  013716  0E0A               	movlw	10
 37876  013718  6EE6               	movwf	postinc1,c
 37877  01371A  0ED7               	movlw	215
 37878  01371C  6EE6               	movwf	postinc1,c
 37879  01371E  0E23               	movlw	35
 37880  013720  6EE6               	movwf	postinc1,c
 37881  013722  0E3C               	movlw	60
 37882  013724  6EE6               	movwf	postinc1,c
 37883  013726  EE22  F143         	lfsr	2,_C+68	;volatile
 37884  01372A  006F FF7B FFE6     	movff	postinc2,postinc1
 37885  013730  006F FF7B FFE6     	movff	postinc2,postinc1
 37886  013736  006F FF7B FFE6     	movff	postinc2,postinc1
 37887  01373C  006F FF7B FFE6     	movff	postinc2,postinc1
 37888  013742  EC2C  F0CD         	call	___flge	;wreg free
 37889  013746  B001               	btfsc	btemp& (0+255),0,c
 37890  013748  D01C               	goto	l14190
 37891                           
 37892                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 37893  01374A  0062  F744  F009   	movff	_C+210,btemp+8	;volatile
 37894  013750  0062  F748  F00A   	movff	_C+211,btemp+9	;volatile
 37895  013756  0062  F74C  F00B   	movff	_C+212,btemp+10	;volatile
 37896  01375C  0062  F750  F00C   	movff	_C+213,btemp+11	;volatile
 37897                           
 37898                           ;stkvar	_adj @ sp[(-6)+0]
 37899  013762  0EFA               	movlw	-6
 37900  013764  0060  F027  FFE3   	movff	btemp+8,plusw1
 37901  01376A  0EFB               	movlw	-5
 37902  01376C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 37903  013772  0EFC               	movlw	-4
 37904  013774  0060  F02F  FFE3   	movff	btemp+10,plusw1
 37905  01377A  0EFD               	movlw	-3
 37906  01377C  0060  F033  FFE3   	movff	btemp+11,plusw1
 37907  013782                     l14190:
 37908                           
 37909                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 37910  013782  0E00               	movlw	0
 37911  013784  6EE6               	movwf	postinc1,c
 37912  013786  0E00               	movlw	0
 37913  013788  6EE6               	movwf	postinc1,c
 37914  01378A  0E61               	movlw	97
 37915  01378C  6EE6               	movwf	postinc1,c
 37916  01378E  0E45               	movlw	69
 37917  013790  6EE6               	movwf	postinc1,c
 37918                           
 37919                           ;stkvar	_adj @ sp[(-10)+0]
 37920  013792  0EF6               	movlw	-10
 37921  013794  006F FF8F FFE6     	movff	plusw1,postinc1
 37922  01379A  006F FF8F FFE6     	movff	plusw1,postinc1
 37923  0137A0  006F FF8F FFE6     	movff	plusw1,postinc1
 37924  0137A6  006F FF8F FFE6     	movff	plusw1,postinc1
 37925  0137AC  EE22  F143         	lfsr	2,_C+68	;volatile
 37926  0137B0  006F FF7B FFE6     	movff	postinc2,postinc1
 37927  0137B6  006F FF7B FFE6     	movff	postinc2,postinc1
 37928  0137BC  006F FF7B FFE6     	movff	postinc2,postinc1
 37929  0137C2  006F FF7B FFE6     	movff	postinc2,postinc1
 37930  0137C8  ECED  F09F         	call	___flmul	;wreg free
 37931  0137CC  0060  F007  FFE6   	movff	btemp,postinc1
 37932  0137D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37933  0137D8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37934  0137DE  0060  F013  FFE6   	movff	btemp+3,postinc1
 37935  0137E4  ECE0  F0A7         	call	___fldiv	;wreg free
 37936  0137E8  0060  F007  FFE6   	movff	btemp,postinc1
 37937  0137EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37938  0137F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37939  0137FA  0060  F013  FFE6   	movff	btemp+3,postinc1
 37940  013800  0E8F               	movlw	low (_C+144)
 37941  013802  6EE6               	movwf	postinc1,c
 37942  013804  0E09               	movlw	high (_C+144)
 37943  013806  6EE6               	movwf	postinc1,c
 37944  013808  ECCF  F0DF         	call	___asfladd	;wreg free
 37945                           
 37946                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 37947  01380C  EE22  F18F         	lfsr	2,_C+144	;volatile
 37948  013810  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 37949  013816  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 37950  01381C  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 37951  013822  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 37952                           
 37953                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 37954  013828  EE22  F19B         	lfsr	2,_C+156	;volatile
 37955  01382C  006F FF7B FFE6     	movff	postinc2,postinc1
 37956  013832  006F FF7B FFE6     	movff	postinc2,postinc1
 37957  013838  006F FF7B FFE6     	movff	postinc2,postinc1
 37958  01383E  006F FF7B FFE6     	movff	postinc2,postinc1
 37959  013844  EE22  F18B         	lfsr	2,_C+140	;volatile
 37960  013848  006F FF7B FFE6     	movff	postinc2,postinc1
 37961  01384E  006F FF7B FFE6     	movff	postinc2,postinc1
 37962  013854  006F FF7B FFE6     	movff	postinc2,postinc1
 37963  01385A  006F FF7B FFE6     	movff	postinc2,postinc1
 37964  013860  EC2C  F0CD         	call	___flge	;wreg free
 37965  013864  B001               	btfsc	btemp& (0+255),0,c
 37966  013866  D00E               	goto	l14198
 37967                           
 37968                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 37969  013868  EE22  F18B         	lfsr	2,_C+140	;volatile
 37970  01386C  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 37971  013872  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 37972  013878  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 37973  01387E  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 37974  013884                     l14198:
 37975                           
 37976                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 37977  013884  0ECD               	movlw	205
 37978  013886  6EE6               	movwf	postinc1,c
 37979  013888  0ECC               	movlw	204
 37980  01388A  6EE6               	movwf	postinc1,c
 37981  01388C  0ECC               	movlw	204
 37982  01388E  6EE6               	movwf	postinc1,c
 37983  013890  0E3D               	movlw	61
 37984  013892  6EE6               	movwf	postinc1,c
 37985  013894  EE22  F19B         	lfsr	2,_C+156	;volatile
 37986  013898  006F FF7B FFE6     	movff	postinc2,postinc1
 37987  01389E  006F FF7B FFE6     	movff	postinc2,postinc1
 37988  0138A4  006F FF7B FFE6     	movff	postinc2,postinc1
 37989  0138AA  006F FF7B FFE6     	movff	postinc2,postinc1
 37990  0138B0  EC2C  F0CD         	call	___flge	;wreg free
 37991  0138B4  B001               	btfsc	btemp& (0+255),0,c
 37992  0138B6  D010               	goto	l14202
 37993                           
 37994                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 37995  0138B8  0ECD               	movlw	205
 37996  0138BA  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
 37997  0138C0  0ECC               	movlw	204
 37998  0138C2  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
 37999  0138C8  0ECC               	movlw	204
 38000  0138CA  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
 38001  0138D0  0E3D               	movlw	61
 38002  0138D2  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
 38003  0138D8                     l14202:
 38004                           
 38005                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 38006  0138D8  0E00               	movlw	0
 38007  0138DA  6EE6               	movwf	postinc1,c
 38008  0138DC  0E00               	movlw	0
 38009  0138DE  6EE6               	movwf	postinc1,c
 38010  0138E0  0E61               	movlw	97
 38011  0138E2  6EE6               	movwf	postinc1,c
 38012  0138E4  0E45               	movlw	69
 38013  0138E6  6EE6               	movwf	postinc1,c
 38014  0138E8  EE22  F147         	lfsr	2,_C+72	;volatile
 38015  0138EC  006F FF7B FFE6     	movff	postinc2,postinc1
 38016  0138F2  006F FF7B FFE6     	movff	postinc2,postinc1
 38017  0138F8  006F FF7B FFE6     	movff	postinc2,postinc1
 38018  0138FE  006F FF7B FFE6     	movff	postinc2,postinc1
 38019  013904  ECE0  F0A7         	call	___fldiv	;wreg free
 38020  013908  0060  F007  FFE6   	movff	btemp,postinc1
 38021  01390E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38022  013914  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38023  01391A  0060  F013  FFE6   	movff	btemp+3,postinc1
 38024  013920  0E93               	movlw	low (_C+148)
 38025  013922  6EE6               	movwf	postinc1,c
 38026  013924  0E09               	movlw	high (_C+148)
 38027  013926  6EE6               	movwf	postinc1,c
 38028  013928  ECCF  F0DF         	call	___asfladd	;wreg free
 38029                           
 38030                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 38031  01392C  0E00               	movlw	0
 38032  01392E  6EE6               	movwf	postinc1,c
 38033  013930  0E00               	movlw	0
 38034  013932  6EE6               	movwf	postinc1,c
 38035  013934  0E61               	movlw	97
 38036  013936  6EE6               	movwf	postinc1,c
 38037  013938  0E45               	movlw	69
 38038  01393A  6EE6               	movwf	postinc1,c
 38039  01393C  EE22  F17B         	lfsr	2,_C+124	;volatile
 38040  013940  006F FF7B FFE6     	movff	postinc2,postinc1
 38041  013946  006F FF7B FFE6     	movff	postinc2,postinc1
 38042  01394C  006F FF7B FFE6     	movff	postinc2,postinc1
 38043  013952  006F FF7B FFE6     	movff	postinc2,postinc1
 38044  013958  ECE0  F0A7         	call	___fldiv	;wreg free
 38045  01395C  0060  F007  FFE6   	movff	btemp,postinc1
 38046  013962  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38047  013968  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38048  01396E  0060  F013  FFE6   	movff	btemp+3,postinc1
 38049  013974  0EA7               	movlw	low (_C+168)
 38050  013976  6EE6               	movwf	postinc1,c
 38051  013978  0E09               	movlw	high (_C+168)
 38052  01397A  6EE6               	movwf	postinc1,c
 38053  01397C  ECCF  F0DF         	call	___asfladd	;wreg free
 38054                           
 38055                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 38056  013980  0E00               	movlw	0
 38057  013982  6EE6               	movwf	postinc1,c
 38058  013984  0E00               	movlw	0
 38059  013986  6EE6               	movwf	postinc1,c
 38060  013988  0E61               	movlw	97
 38061  01398A  6EE6               	movwf	postinc1,c
 38062  01398C  0E45               	movlw	69
 38063  01398E  6EE6               	movwf	postinc1,c
 38064  013990  EE22  F177         	lfsr	2,_C+120	;volatile
 38065  013994  006F FF7B FFE6     	movff	postinc2,postinc1
 38066  01399A  006F FF7B FFE6     	movff	postinc2,postinc1
 38067  0139A0  006F FF7B FFE6     	movff	postinc2,postinc1
 38068  0139A6  006F FF7B FFE6     	movff	postinc2,postinc1
 38069  0139AC  ECE0  F0A7         	call	___fldiv	;wreg free
 38070  0139B0  0060  F007  FFE6   	movff	btemp,postinc1
 38071  0139B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38072  0139BC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38073  0139C2  0060  F013  FFE6   	movff	btemp+3,postinc1
 38074  0139C8  0EAB               	movlw	low (_C+172)
 38075  0139CA  6EE6               	movwf	postinc1,c
 38076  0139CC  0E09               	movlw	high (_C+172)
 38077  0139CE  6EE6               	movwf	postinc1,c
 38078  0139D0  ECCF  F0DF         	call	___asfladd	;wreg free
 38079                           
 38080                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 38081  0139D4  0E00               	movlw	0
 38082  0139D6  6EE6               	movwf	postinc1,c
 38083  0139D8  0E00               	movlw	0
 38084  0139DA  6EE6               	movwf	postinc1,c
 38085  0139DC  0E61               	movlw	97
 38086  0139DE  6EE6               	movwf	postinc1,c
 38087  0139E0  0E45               	movlw	69
 38088  0139E2  6EE6               	movwf	postinc1,c
 38089  0139E4  EE22  F173         	lfsr	2,_C+116	;volatile
 38090  0139E8  006F FF7B FFE6     	movff	postinc2,postinc1
 38091  0139EE  006F FF7B FFE6     	movff	postinc2,postinc1
 38092  0139F4  006F FF7B FFE6     	movff	postinc2,postinc1
 38093  0139FA  006F FF7B FFE6     	movff	postinc2,postinc1
 38094  013A00  ECE0  F0A7         	call	___fldiv	;wreg free
 38095  013A04  0060  F007  FFE6   	movff	btemp,postinc1
 38096  013A0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38097  013A10  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38098  013A16  0060  F013  FFE6   	movff	btemp+3,postinc1
 38099  013A1C  0EAF               	movlw	low (_C+176)
 38100  013A1E  6EE6               	movwf	postinc1,c
 38101  013A20  0E09               	movlw	high (_C+176)
 38102  013A22  6EE6               	movwf	postinc1,c
 38103  013A24  ECCF  F0DF         	call	___asfladd	;wreg free
 38104                           
 38105                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 38106  013A28  EE22  F17F         	lfsr	2,_C+128	;volatile
 38107  013A2C  006F FF7B FFE6     	movff	postinc2,postinc1
 38108  013A32  006F FF7B FFE6     	movff	postinc2,postinc1
 38109  013A38  006F FF7B FFE6     	movff	postinc2,postinc1
 38110  013A3E  006F FF7B FFE6     	movff	postinc2,postinc1
 38111  013A44  0E00               	movlw	0
 38112  013A46  6EE6               	movwf	postinc1,c
 38113  013A48  0E00               	movlw	0
 38114  013A4A  6EE6               	movwf	postinc1,c
 38115  013A4C  0E00               	movlw	0
 38116  013A4E  6EE6               	movwf	postinc1,c
 38117  013A50  0E00               	movlw	0
 38118  013A52  6EE6               	movwf	postinc1,c
 38119  013A54  EC2C  F0CD         	call	___flge	;wreg free
 38120  013A58  B001               	btfsc	btemp& (0+255),0,c
 38121  013A5A  D02A               	goto	l14208
 38122                           
 38123                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 38124  013A5C  0E00               	movlw	0
 38125  013A5E  6EE6               	movwf	postinc1,c
 38126  013A60  0E00               	movlw	0
 38127  013A62  6EE6               	movwf	postinc1,c
 38128  013A64  0E61               	movlw	97
 38129  013A66  6EE6               	movwf	postinc1,c
 38130  013A68  0E45               	movlw	69
 38131  013A6A  6EE6               	movwf	postinc1,c
 38132  013A6C  EE22  F17F         	lfsr	2,_C+128	;volatile
 38133  013A70  006F FF7B FFE6     	movff	postinc2,postinc1
 38134  013A76  006F FF7B FFE6     	movff	postinc2,postinc1
 38135  013A7C  006F FF7B FFE6     	movff	postinc2,postinc1
 38136  013A82  006F FF7B FFE6     	movff	postinc2,postinc1
 38137  013A88  ECE0  F0A7         	call	___fldiv	;wreg free
 38138  013A8C  0060  F007  FFE6   	movff	btemp,postinc1
 38139  013A92  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38140  013A98  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38141  013A9E  0060  F013  FFE6   	movff	btemp+3,postinc1
 38142  013AA4  0E9F               	movlw	low (_C+160)
 38143  013AA6  6EE6               	movwf	postinc1,c
 38144  013AA8  0E09               	movlw	high (_C+160)
 38145  013AAA  6EE6               	movwf	postinc1,c
 38146  013AAC  ECCF  F0DF         	call	___asfladd	;wreg free
 38147  013AB0                     l14208:
 38148                           
 38149                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 38150  013AB0  EE22  F17F         	lfsr	2,_C+128	;volatile
 38151  013AB4  0E03               	movlw	3
 38152  013AB6  AEDB               	btfss	plusw2,7,c
 38153  013AB8  D038               	goto	l14212
 38154                           
 38155                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 38156  013ABA  0E00               	movlw	0
 38157  013ABC  6EE6               	movwf	postinc1,c
 38158  013ABE  0E00               	movlw	0
 38159  013AC0  6EE6               	movwf	postinc1,c
 38160  013AC2  0E61               	movlw	97
 38161  013AC4  6EE6               	movwf	postinc1,c
 38162  013AC6  0E45               	movlw	69
 38163  013AC8  6EE6               	movwf	postinc1,c
 38164  013ACA  EE22  F17F         	lfsr	2,_C+128	;volatile
 38165  013ACE  006F FF7B FFE6     	movff	postinc2,postinc1
 38166  013AD4  006F FF7B FFE6     	movff	postinc2,postinc1
 38167  013ADA  006F FF7B FFE6     	movff	postinc2,postinc1
 38168  013AE0  006F FF7B FFE6     	movff	postinc2,postinc1
 38169  013AE6  ECE0  F0A7         	call	___fldiv	;wreg free
 38170  013AEA  0060  F007  FFE6   	movff	btemp,postinc1
 38171  013AF0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38172  013AF6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38173  013AFC  0060  F013  FFE6   	movff	btemp+3,postinc1
 38174  013B02  EC89  F0DA         	call	_fabsf	;wreg free
 38175  013B06  0060  F007  FFE6   	movff	btemp,postinc1
 38176  013B0C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38177  013B12  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38178  013B18  0060  F013  FFE6   	movff	btemp+3,postinc1
 38179  013B1E  0EA3               	movlw	low (_C+164)
 38180  013B20  6EE6               	movwf	postinc1,c
 38181  013B22  0E09               	movlw	high (_C+164)
 38182  013B24  6EE6               	movwf	postinc1,c
 38183  013B26  ECCF  F0DF         	call	___asfladd	;wreg free
 38184  013B2A                     l14212:
 38185                           
 38186                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 38187  013B2A  0E00               	movlw	0
 38188  013B2C  6EE6               	movwf	postinc1,c
 38189  013B2E  0E00               	movlw	0
 38190  013B30  6EE6               	movwf	postinc1,c
 38191  013B32  0EC8               	movlw	200
 38192  013B34  6EE6               	movwf	postinc1,c
 38193  013B36  0E42               	movlw	66
 38194  013B38  6EE6               	movwf	postinc1,c
 38195  013B3A  EE22  F18B         	lfsr	2,_C+140	;volatile
 38196  013B3E  006F FF7B FFE6     	movff	postinc2,postinc1
 38197  013B44  006F FF7B FFE6     	movff	postinc2,postinc1
 38198  013B4A  006F FF7B FFE6     	movff	postinc2,postinc1
 38199  013B50  006F FF7B FFE6     	movff	postinc2,postinc1
 38200  013B56  EE22  F19B         	lfsr	2,_C+156	;volatile
 38201  013B5A  006F FF7B FFE6     	movff	postinc2,postinc1
 38202  013B60  006F FF7B FFE6     	movff	postinc2,postinc1
 38203  013B66  006F FF7B FFE6     	movff	postinc2,postinc1
 38204  013B6C  006F FF7B FFE6     	movff	postinc2,postinc1
 38205  013B72  ECE0  F0A7         	call	___fldiv	;wreg free
 38206  013B76  0060  F007  FFE6   	movff	btemp,postinc1
 38207  013B7C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38208  013B82  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38209  013B88  0060  F013  FFE6   	movff	btemp+3,postinc1
 38210  013B8E  ECED  F09F         	call	___flmul	;wreg free
 38211  013B92  0060  F007  FFE6   	movff	btemp,postinc1
 38212  013B98  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38213  013B9E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38214  013BA4  0060  F013  FFE6   	movff	btemp+3,postinc1
 38215  013BAA  EC73  F0CC         	call	___fltol	;wreg free
 38216  013BAE  0060  F004  F00B   	movff	btemp,btemp+10
 38217  013BB4  0060  F008  F00C   	movff	btemp+1,btemp+11
 38218  013BBA  0E01               	movlw	1
 38219  013BBC  260B               	addwf	(btemp+10)^0,f,c
 38220  013BBE  0E00               	movlw	0
 38221  013BC0  220C               	addwfc	(btemp+11)^0,f,c
 38222  013BC2  0060  F02C  F9B5   	movff	btemp+10,_C+182	;volatile
 38223  013BC8  0060  F030  F9B6   	movff	btemp+11,_C+183	;volatile
 38224                           
 38225                           ;bsoc.c: 76:  if (C.soc > 100)
 38226  013BCE  EE22  F1B5         	lfsr	2,_C+182	;volatile
 38227  013BD2  0E01               	movlw	1
 38228  013BD4  50DB               	movf	plusw2,w,c
 38229  013BD6  E104               	bnz	u1359_20
 38230  013BD8  0E65               	movlw	101
 38231  013BDA  5CDE               	subwf	postinc2,w,c
 38232  013BDC  A0D8               	btfss	status,0,c
 38233  013BDE  D008               	goto	l14218
 38234  013BE0                     u1359_20:
 38235                           
 38236                           ;bsoc.c: 77:   C.soc = 100;
 38237  013BE0  0E64               	movlw	100
 38238  013BE2  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
 38239  013BE8  0E00               	movlw	0
 38240  013BEA  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
 38241  013BF0                     l14218:
 38242                           
 38243                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 38244  013BF0  EE22  F143         	lfsr	2,_C+68	;volatile
 38245  013BF4  0E03               	movlw	3
 38246  013BF6  AEDB               	btfss	plusw2,7,c
 38247  013BF8  D047               	goto	l2317
 38248                           
 38249                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 38250  013BFA  EE22  F143         	lfsr	2,_C+68	;volatile
 38251  013BFE  006F FF7B FFE6     	movff	postinc2,postinc1
 38252  013C04  006F FF7B FFE6     	movff	postinc2,postinc1
 38253  013C0A  006F FF7B FFE6     	movff	postinc2,postinc1
 38254  013C10  006F FF7B FFE6     	movff	postinc2,postinc1
 38255  013C16  EE22  F19B         	lfsr	2,_C+156	;volatile
 38256  013C1A  006F FF7B FFE6     	movff	postinc2,postinc1
 38257  013C20  006F FF7B FFE6     	movff	postinc2,postinc1
 38258  013C26  006F FF7B FFE6     	movff	postinc2,postinc1
 38259  013C2C  006F FF7B FFE6     	movff	postinc2,postinc1
 38260  013C32  ECE0  F0A7         	call	___fldiv	;wreg free
 38261  013C36  0060  F007  FFE6   	movff	btemp,postinc1
 38262  013C3C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38263  013C42  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38264  013C48  0060  F013  FFE6   	movff	btemp+3,postinc1
 38265  013C4E  EC83  F0E3         	call	___flneg	;wreg free
 38266  013C52  0060  F007  FFE6   	movff	btemp,postinc1
 38267  013C58  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38268  013C5E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 38269  013C64  0060  F013  FFE6   	movff	btemp+3,postinc1
 38270  013C6A  EC73  F0CC         	call	___fltol	;wreg free
 38271  013C6E  0060  F004  F00B   	movff	btemp,btemp+10
 38272  013C74  0060  F008  F00C   	movff	btemp+1,btemp+11
 38273  013C7A  0060  F02C  F9B3   	movff	btemp+10,_C+180	;volatile
 38274  013C80  0060  F030  F9B4   	movff	btemp+11,_C+181	;volatile
 38275                           
 38276                           ;bsoc.c: 81:  } else {
 38277  013C86  D008               	goto	l14222
 38278  013C88                     l2317:
 38279                           
 38280                           ;bsoc.c: 82:   C.runtime = 99;
 38281  013C88  0E63               	movlw	99
 38282  013C8A  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 38283  013C90  0E00               	movlw	0
 38284  013C92  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 38285  013C98                     l14222:
 38286                           
 38287                           ;bsoc.c: 84:  if (C.runtime > 99)
 38288  013C98  EE22  F1B3         	lfsr	2,_C+180	;volatile
 38289  013C9C  0E01               	movlw	1
 38290  013C9E  50DB               	movf	plusw2,w,c
 38291  013CA0  E104               	bnz	u1361_20
 38292  013CA2  0E64               	movlw	100
 38293  013CA4  5CDE               	subwf	postinc2,w,c
 38294  013CA6  A0D8               	btfss	status,0,c
 38295  013CA8  D008               	goto	l14226
 38296  013CAA                     u1361_20:
 38297                           
 38298                           ;bsoc.c: 85:   C.runtime = 99;
 38299  013CAA  0E63               	movlw	99
 38300  013CAC  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 38301  013CB2  0E00               	movlw	0
 38302  013CB4  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 38303  013CBA                     l14226:
 38304                           
 38305                           ;bsoc.c: 87:  V.lowint_count++;
 38306  013CBA  0E01               	movlw	1
 38307  013CBC  0101               	movlb	1	; () banked
 38308  013CBE  27BB               	addwf	(_V+180)& (0+255),f,b	;volatile
 38309  013CC0  0E00               	movlw	0
 38310  013CC2  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 38311  013CC4  23BD               	addwfc	(_V+182)& (0+255),f,b	;volatile
 38312  013CC6  23BE               	addwfc	(_V+183)& (0+255),f,b	;volatile
 38313                           
 38314                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 38315  013CC8  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 38316  013CCA  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 38317  013CCC  A4D8               	btfss	status,2,c
 38318  013CCE  D177               	goto	l14238
 38319                           
 38320                           ; BSR set to: 1
 38321  013CD0  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 38322  013CD2  B4D8               	btfsc	status,2,c
 38323  013CD4  D174               	goto	l14238
 38324                           
 38325                           ; BSR set to: 1
 38326                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 38327  013CD6  EC5A  F0EA         	call	_port_data_dma_ptr	;wreg free
 38328                           
 38329                           ;stkvar	_log_ptr @ sp[(-6)+4]
 38330  013CDA  0EFF               	movlw	-1
 38331  013CDC  0060  F00B  FFE3   	movff	btemp+1,plusw1
 38332  013CE2  0EFE               	movlw	-2
 38333  013CE4  0060  F007  FFE3   	movff	btemp,plusw1
 38334                           
 38335                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 38336  013CEA  EE22  F1D1         	lfsr	2,_C+210	;volatile
 38337  013CEE  006F FF7B FFE6     	movff	postinc2,postinc1
 38338  013CF4  006F FF7B FFE6     	movff	postinc2,postinc1
 38339  013CFA  006F FF7B FFE6     	movff	postinc2,postinc1
 38340  013D00  006F FF7B FFE6     	movff	postinc2,postinc1
 38341  013D06  EE22  F1D5         	lfsr	2,_C+214	;volatile
 38342  013D0A  006F FF7B FFE6     	movff	postinc2,postinc1
 38343  013D10  006F FF7B FFE6     	movff	postinc2,postinc1
 38344  013D16  006F FF7B FFE6     	movff	postinc2,postinc1
 38345  013D1C  006F FF7B FFE6     	movff	postinc2,postinc1
 38346  013D22  EE22  F19B         	lfsr	2,_C+156	;volatile
 38347  013D26  006F FF7B FFE6     	movff	postinc2,postinc1
 38348  013D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 38349  013D32  006F FF7B FFE6     	movff	postinc2,postinc1
 38350  013D38  006F FF7B FFE6     	movff	postinc2,postinc1
 38351  013D3E  EE22  F243         	lfsr	2,_C+324	;volatile
 38352  013D42  006F FF7B FFE6     	movff	postinc2,postinc1
 38353  013D48  006F FF7B FFE6     	movff	postinc2,postinc1
 38354  013D4E  006F FF7B FFE6     	movff	postinc2,postinc1
 38355  013D54  006F FF7B FFE6     	movff	postinc2,postinc1
 38356  013D5A  EE22  F23F         	lfsr	2,_C+320	;volatile
 38357  013D5E  006F FF7B FFE6     	movff	postinc2,postinc1
 38358  013D64  006F FF7B FFE6     	movff	postinc2,postinc1
 38359  013D6A  006F FF7B FFE6     	movff	postinc2,postinc1
 38360  013D70  006F FF7B FFE6     	movff	postinc2,postinc1
 38361  013D76  EE22  F23D         	lfsr	2,_C+318	;volatile
 38362  013D7A  50DF               	movf	indf2,w,c
 38363  013D7C  6EE6               	movwf	postinc1,c
 38364  013D7E  0E00               	movlw	0
 38365  013D80  6EE6               	movwf	postinc1,c
 38366  013D82  EC3E  F0EA         	call	_get_ac_charger_relay	;wreg free
 38367  013D86  5001               	movf	btemp^0,w,c
 38368  013D88  6EE6               	movwf	postinc1,c
 38369  013D8A  0E00               	movlw	0
 38370  013D8C  6EE6               	movwf	postinc1,c
 38371  013D8E  EE22  F167         	lfsr	2,_C+104	;volatile
 38372  013D92  006F FF7B FFE6     	movff	postinc2,postinc1
 38373  013D98  006F FF7B FFE6     	movff	postinc2,postinc1
 38374  013D9E  006F FF7B FFE6     	movff	postinc2,postinc1
 38375  013DA4  006F FF7B FFE6     	movff	postinc2,postinc1
 38376  013DAA  EE22  F187         	lfsr	2,_C+136	;volatile
 38377  013DAE  006F FF7B FFE6     	movff	postinc2,postinc1
 38378  013DB4  006F FF7B FFE6     	movff	postinc2,postinc1
 38379  013DBA  006F FF7B FFE6     	movff	postinc2,postinc1
 38380  013DC0  006F FF7B FFE6     	movff	postinc2,postinc1
 38381  013DC6  EE22  F1B3         	lfsr	2,_C+180	;volatile
 38382  013DCA  006F FF78  F00B    	movff	postinc2,btemp+10
 38383  013DD0  006F FF74  F00C    	movff	postdec2,btemp+11
 38384  013DD6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 38385  013DDC  0060  F033  FFE6   	movff	btemp+11,postinc1
 38386  013DE2  EE22  F1B5         	lfsr	2,_C+182	;volatile
 38387  013DE6  006F FF78  F00B    	movff	postinc2,btemp+10
 38388  013DEC  006F FF74  F00C    	movff	postdec2,btemp+11
 38389  013DF2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 38390  013DF8  0060  F033  FFE6   	movff	btemp+11,postinc1
 38391  013DFE  EE22  F193         	lfsr	2,_C+148	;volatile
 38392  013E02  006F FF7B FFE6     	movff	postinc2,postinc1
 38393  013E08  006F FF7B FFE6     	movff	postinc2,postinc1
 38394  013E0E  006F FF7B FFE6     	movff	postinc2,postinc1
 38395  013E14  006F FF7B FFE6     	movff	postinc2,postinc1
 38396  013E1A  EE22  F18F         	lfsr	2,_C+144	;volatile
 38397  013E1E  006F FF7B FFE6     	movff	postinc2,postinc1
 38398  013E24  006F FF7B FFE6     	movff	postinc2,postinc1
 38399  013E2A  006F FF7B FFE6     	movff	postinc2,postinc1
 38400  013E30  006F FF7B FFE6     	movff	postinc2,postinc1
 38401  013E36  EE22  F177         	lfsr	2,_C+120	;volatile
 38402  013E3A  006F FF7B FFE6     	movff	postinc2,postinc1
 38403  013E40  006F FF7B FFE6     	movff	postinc2,postinc1
 38404  013E46  006F FF7B FFE6     	movff	postinc2,postinc1
 38405  013E4C  006F FF7B FFE6     	movff	postinc2,postinc1
 38406  013E52  EE22  F173         	lfsr	2,_C+116	;volatile
 38407  013E56  006F FF7B FFE6     	movff	postinc2,postinc1
 38408  013E5C  006F FF7B FFE6     	movff	postinc2,postinc1
 38409  013E62  006F FF7B FFE6     	movff	postinc2,postinc1
 38410  013E68  006F FF7B FFE6     	movff	postinc2,postinc1
 38411  013E6E  EE22  F17B         	lfsr	2,_C+124	;volatile
 38412  013E72  006F FF7B FFE6     	movff	postinc2,postinc1
 38413  013E78  006F FF7B FFE6     	movff	postinc2,postinc1
 38414  013E7E  006F FF7B FFE6     	movff	postinc2,postinc1
 38415  013E84  006F FF7B FFE6     	movff	postinc2,postinc1
 38416  013E8A  EE22  F17F         	lfsr	2,_C+128	;volatile
 38417  013E8E  006F FF7B FFE6     	movff	postinc2,postinc1
 38418  013E94  006F FF7B FFE6     	movff	postinc2,postinc1
 38419  013E9A  006F FF7B FFE6     	movff	postinc2,postinc1
 38420  013EA0  006F FF7B FFE6     	movff	postinc2,postinc1
 38421  013EA6  EE22  F147         	lfsr	2,_C+72	;volatile
 38422  013EAA  006F FF7B FFE6     	movff	postinc2,postinc1
 38423  013EB0  006F FF7B FFE6     	movff	postinc2,postinc1
 38424  013EB6  006F FF7B FFE6     	movff	postinc2,postinc1
 38425  013EBC  006F FF7B FFE6     	movff	postinc2,postinc1
 38426  013EC2  EE22  F143         	lfsr	2,_C+68	;volatile
 38427  013EC6  006F FF7B FFE6     	movff	postinc2,postinc1
 38428  013ECC  006F FF7B FFE6     	movff	postinc2,postinc1
 38429  013ED2  006F FF7B FFE6     	movff	postinc2,postinc1
 38430  013ED8  006F FF7B FFE6     	movff	postinc2,postinc1
 38431  013EDE  EE22  F163         	lfsr	2,_C+100	;volatile
 38432  013EE2  006F FF7B FFE6     	movff	postinc2,postinc1
 38433  013EE8  006F FF7B FFE6     	movff	postinc2,postinc1
 38434  013EEE  006F FF7B FFE6     	movff	postinc2,postinc1
 38435  013EF4  006F FF7B FFE6     	movff	postinc2,postinc1
 38436  013EFA  EE22  F14B         	lfsr	2,_C+76	;volatile
 38437  013EFE  006F FF7B FFE6     	movff	postinc2,postinc1
 38438  013F04  006F FF7B FFE6     	movff	postinc2,postinc1
 38439  013F0A  006F FF7B FFE6     	movff	postinc2,postinc1
 38440  013F10  006F FF7B FFE6     	movff	postinc2,postinc1
 38441  013F16  EE22  F14F         	lfsr	2,_C+80	;volatile
 38442  013F1A  006F FF7B FFE6     	movff	postinc2,postinc1
 38443  013F20  006F FF7B FFE6     	movff	postinc2,postinc1
 38444  013F26  006F FF7B FFE6     	movff	postinc2,postinc1
 38445  013F2C  006F FF7B FFE6     	movff	postinc2,postinc1
 38446  013F32  EE22  F153         	lfsr	2,_C+84	;volatile
 38447  013F36  006F FF7B FFE6     	movff	postinc2,postinc1
 38448  013F3C  006F FF7B FFE6     	movff	postinc2,postinc1
 38449  013F42  006F FF7B FFE6     	movff	postinc2,postinc1
 38450  013F48  006F FF7B FFE6     	movff	postinc2,postinc1
 38451  013F4E  0060  F623  FFE6   	movff	_V+129,postinc1
 38452  013F54  0060  F627  FFE6   	movff	_V+130,postinc1
 38453  013F5A  0060  F62B  FFE6   	movff	_V+131,postinc1
 38454  013F60  0060  F62F  FFE6   	movff	_V+132,postinc1
 38455  013F66  0E32               	movlw	50
 38456  013F68  6EE6               	movwf	postinc1,c
 38457  013F6A  0E00               	movlw	0
 38458  013F6C  6EE6               	movwf	postinc1,c
 38459  013F6E  0E8F               	movlw	low STR_83
 38460  013F70  6EE6               	movwf	postinc1,c
 38461  013F72  0EFA               	movlw	high STR_83
 38462  013F74  6EE6               	movwf	postinc1,c
 38463                           
 38464                           ;stkvar	_log_ptr @ sp[(-98)+4]
 38465  013F76  0EA2               	movlw	-94
 38466  013F78  006F FF8F FFE6     	movff	plusw1,postinc1
 38467  013F7E  006F FF8F FFE6     	movff	plusw1,postinc1
 38468  013F84  0E5E               	movlw	94
 38469  013F86  6EE6               	movwf	postinc1,c
 38470  013F88  EC94  F0D5         	call	_sprintf	;wreg free
 38471                           
 38472                           ; BSR set to: 0
 38473                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 38474  013F8C  0E7D               	movlw	125
 38475  013F8E  6EE6               	movwf	postinc1,c
 38476  013F90  0E00               	movlw	0
 38477  013F92  6EE6               	movwf	postinc1,c
 38478  013F94  0E0A               	movlw	10
 38479  013F96  6EE6               	movwf	postinc1,c
 38480  013F98  ECDC  F0E4         	call	_StartTimer	;wreg free
 38481                           
 38482                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 38483                           ;stkvar	_log_ptr @ sp[(-6)+4]
 38484  013F9C  0EFE               	movlw	-2
 38485  013F9E  006F FF8F FFE6     	movff	plusw1,postinc1
 38486  013FA4  006F FF8F FFE6     	movff	plusw1,postinc1
 38487  013FAA  EC88  F0DC         	call	_strlen	;wreg free
 38488  013FAE  0060  F007  FFE6   	movff	btemp,postinc1
 38489  013FB4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38490  013FBA  ECE7  F0E2         	call	_send_port_data_dma	;wreg free
 38491  013FBE                     l14238:
 38492                           
 38493                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 38494  013FBE  0E09               	movlw	9
 38495  013FC0  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 38496  013FC2  D001               	goto	l2321
 38497                           
 38498                           ;bsoc.c: 102:   log_update_wait = 0;
 38499  013FC4  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 38500  013FC6                     l2321:
 38501                           
 38502                           ;bsoc.c: 104:  C.update = 0;
 38503  013FC6  0E00               	movlw	0
 38504  013FC8  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 38505                           
 38506                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 38507  013FCE  92BE               	bcf	190,1,c	;volatile
 38508                           
 38509                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 38510  013FD0  0EFA               	movlw	250
 38511  013FD2  26E1               	addwf	fsr1l,f,c
 38512  013FD4  0EFF               	movlw	255
 38513  013FD6  22E2               	addwfc	fsr1h,f,c
 38514  013FD8  0012               	return		;funcret
 38515  013FDA                     __end_of_calc_bsoc:
 38516                           	opt callstack 0
 38517                           
 38518 ;; *************** function _send_port_data_dma *****************
 38519 ;; Defined at:
 38520 ;;		line 398 in file "eadog.c"
 38521 ;; Parameters:    Size  Location     Type
 38522 ;;  dsize           2  [STACK] unsigned short 
 38523 ;; Auto vars:     Size  Location     Type
 38524 ;;		None
 38525 ;; Return value:  Size  Location     Type
 38526 ;;                  1  [STACK] void 
 38527 ;; Registers used:
 38528 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 38529 ;; Tracked objects:
 38530 ;;		On entry : 0/0
 38531 ;;		On exit  : 3F/3B
 38532 ;;		Unchanged: 0/0
 38533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38538 ;;Total ram usage:        0 bytes
 38539 ;; Hardware stack levels used:    1
 38540 ;; Hardware stack levels required when called:    3
 38541 ;; This function calls:
 38542 ;;		Nothing
 38543 ;; This function is called by:
 38544 ;;		_calc_bsoc
 38545 ;; This function uses a reentrant model
 38546 ;;
 38547                           
 38548                           	psect	text175
 38549  01C5CE                     __ptext175:
 38550                           	opt callstack 0
 38551  01C5CE                     _send_port_data_dma:
 38552                           	opt callstack 10
 38553                           
 38554                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 38555                           ;stkvar	_dsize @ sp[(0)+-2]
 38556                           
 38557                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38558                           ;incstack = 0
 38559  01C5CE  0EFE               	movlw	-2
 38560  01C5D0  04E3               	decf	plusw1,w,c
 38561  01C5D2  0EFF               	movlw	-1
 38562  01C5D4  006F FF8C  F001    	movff	plusw1,btemp
 38563  01C5DA  0E02               	movlw	2
 38564  01C5DC  5A01               	subwfb	btemp^0,f,c
 38565  01C5DE  A0D8               	btfss	status,0,c
 38566  01C5E0  D00C               	goto	l10896
 38567                           
 38568                           ;eadog.c: 401:   dsize = 512;
 38569  01C5E2  0E00               	movlw	0
 38570  01C5E4  6E0B               	movwf	(btemp+10)^0,c
 38571  01C5E6  0E02               	movlw	2
 38572  01C5E8  6E0C               	movwf	(btemp+11)^0,c
 38573                           
 38574                           ;stkvar	_dsize @ sp[(0)+-2]
 38575  01C5EA  0EFE               	movlw	-2
 38576  01C5EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38577  01C5F2  0EFF               	movlw	-1
 38578  01C5F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 38579  01C5FA                     l10896:
 38580                           
 38581                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 38582  01C5FA  013B               	movlb	59	; () banked
 38583  01C5FC  9FDC               	bcf	220,7,b	;volatile
 38584                           
 38585                           ; BSR set to: 59
 38586                           ;eadog.c: 404:  DMA2SSZ = dsize;
 38587                           ;stkvar	_dsize @ sp[(0)+-2]
 38588  01C5FE  0EFE               	movlw	-2
 38589  01C600  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 38590  01C606  0EFF               	movlw	-1
 38591  01C608  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 38592                           
 38593                           ; BSR set to: 59
 38594                           ;eadog.c: 405:  DMA2DSZ = 1;
 38595  01C60E  0E00               	movlw	0
 38596  01C610  6FCF               	movwf	207,b	;volatile
 38597  01C612  0E01               	movlw	1
 38598  01C614  6FCE               	movwf	206,b	;volatile
 38599                           
 38600                           ; BSR set to: 59
 38601                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 38602  01C616  8FDC               	bsf	220,7,b	;volatile
 38603                           
 38604                           ; BSR set to: 59
 38605                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 38606  01C618  8DDC               	bsf	220,6,b	;volatile
 38607                           
 38608                           ; BSR set to: 59
 38609                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 38610  01C61A  52E5               	movf	postdec1,f,c
 38611  01C61C  52E5               	movf	postdec1,f,c
 38612  01C61E  0012               	return		;funcret
 38613  01C620                     __end_of_send_port_data_dma:
 38614                           	opt callstack 0
 38615                           
 38616 ;; *************** function _port_data_dma_ptr *****************
 38617 ;; Defined at:
 38618 ;;		line 413 in file "eadog.c"
 38619 ;; Parameters:    Size  Location     Type
 38620 ;;		None
 38621 ;; Auto vars:     Size  Location     Type
 38622 ;;		None
 38623 ;; Return value:  Size  Location     Type
 38624 ;;                  2  [STACK] PTR unsigned char 
 38625 ;; Registers used:
 38626 ;;		wreg, status,2, status,0, btemp, btemp+1
 38627 ;; Tracked objects:
 38628 ;;		On entry : 3F/1
 38629 ;;		On exit  : 0/0
 38630 ;;		Unchanged: 0/0
 38631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38636 ;;Total ram usage:        0 bytes
 38637 ;; Hardware stack levels used:    1
 38638 ;; Hardware stack levels required when called:    3
 38639 ;; This function calls:
 38640 ;;		Nothing
 38641 ;; This function is called by:
 38642 ;;		_calc_bsoc
 38643 ;; This function uses a reentrant model
 38644 ;;
 38645                           
 38646                           	psect	text176
 38647  01D4B4                     __ptext176:
 38648                           	opt callstack 0
 38649  01D4B4                     _port_data_dma_ptr:
 38650                           	opt callstack 10
 38651                           
 38652                           ;eadog.c: 415:  return port_data;
 38653                           
 38654                           ; BSR set to: 59
 38655                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38656                           ;incstack = 0
 38657  01D4B4  0EFF               	movlw	low _port_data
 38658  01D4B6  6E01               	movwf	btemp^0,c
 38659  01D4B8  0E06               	movlw	high _port_data
 38660  01D4BA  6E02               	movwf	(btemp+1)^0,c
 38661                           
 38662                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 38663  01D4BC  0012               	return		;funcret
 38664  01D4BE                     __end_of_port_data_dma_ptr:
 38665                           	opt callstack 0
 38666                           
 38667 ;; *************** function ___asfladd *****************
 38668 ;; Defined at:
 38669 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 38670 ;; Parameters:    Size  Location     Type
 38671 ;;  f1p             2  [STACK] PTR 
 38672 ;;		 -> C(336), 
 38673 ;;  f2              4  [STACK] PTR 
 38674 ;; Auto vars:     Size  Location     Type
 38675 ;;		None
 38676 ;; Return value:  Size  Location     Type
 38677 ;;                  4  [STACK] PTR 
 38678 ;; Registers used:
 38679 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 38680 ;; Tracked objects:
 38681 ;;		On entry : 0/0
 38682 ;;		On exit  : 0/0
 38683 ;;		Unchanged: 0/0
 38684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38689 ;;Total ram usage:        0 bytes
 38690 ;; Hardware stack levels used:    1
 38691 ;; Hardware stack levels required when called:    4
 38692 ;; This function calls:
 38693 ;;		___fladd
 38694 ;; This function is called by:
 38695 ;;		_calc_bsoc
 38696 ;; This function uses a reentrant model
 38697 ;;
 38698                           
 38699                           	psect	text177
 38700  01BF9E                     __ptext177:
 38701                           	opt callstack 0
 38702  01BF9E                     ___asfladd:
 38703                           	opt callstack 9
 38704                           
 38705                           ;	Return value of ___asfladd is never used
 38706                           ;stkvar	_f2 @ sp[(0)+-6]
 38707                           
 38708                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38709                           ;incstack = 0
 38710  01BF9E  0EFA               	movlw	-6
 38711  01BFA0  006F FF8F FFE6     	movff	plusw1,postinc1
 38712  01BFA6  006F FF8F FFE6     	movff	plusw1,postinc1
 38713  01BFAC  006F FF8F FFE6     	movff	plusw1,postinc1
 38714  01BFB2  006F FF8F FFE6     	movff	plusw1,postinc1
 38715                           
 38716                           ;stkvar	_f1p @ sp[(-4)+-2]
 38717  01BFB8  0EFA               	movlw	-6
 38718  01BFBA  006F FF8F FFD9     	movff	plusw1,fsr2l
 38719  01BFC0  0EFB               	movlw	-5
 38720  01BFC2  006F FF8F FFDA     	movff	plusw1,fsr2h
 38721  01BFC8  006F FF7B FFE6     	movff	postinc2,postinc1
 38722  01BFCE  006F FF7B FFE6     	movff	postinc2,postinc1
 38723  01BFD4  006F FF7B FFE6     	movff	postinc2,postinc1
 38724  01BFDA  006F FF7B FFE6     	movff	postinc2,postinc1
 38725  01BFE0  EC02  F0A4         	call	___fladd	;wreg free
 38726                           
 38727                           ;stkvar	_f1p @ sp[(0)+-2]
 38728  01BFE4  0EFE               	movlw	-2
 38729  01BFE6  006F FF8F FFD9     	movff	plusw1,fsr2l
 38730  01BFEC  0EFF               	movlw	-1
 38731  01BFEE  006F FF8F FFDA     	movff	plusw1,fsr2h
 38732  01BFF4  0060  F007  FFDE   	movff	btemp,postinc2
 38733  01BFFA  0060  F00B  FFDE   	movff	btemp+1,postinc2
 38734  01C000  0060  F00F  FFDE   	movff	btemp+2,postinc2
 38735  01C006  0060  F013  FFDE   	movff	btemp+3,postinc2
 38736                           
 38737                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 38738  01C00C  0EFA               	movlw	250
 38739  01C00E  26E1               	addwf	fsr1l,f,c
 38740  01C010  0EFF               	movlw	255
 38741  01C012  22E2               	addwfc	fsr1h,f,c
 38742  01C014  0012               	return		;funcret
 38743  01C016                     __end_of___asfladd:
 38744                           	opt callstack 0
 38745                           
 38746 ;; *************** function _INT0_ISR *****************
 38747 ;; Defined at:
 38748 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 38749 ;; Parameters:    Size  Location     Type
 38750 ;;		None
 38751 ;; Auto vars:     Size  Location     Type
 38752 ;;		None
 38753 ;; Return value:  Size  Location     Type
 38754 ;;                  1    wreg      void 
 38755 ;; Registers used:
 38756 ;;		wreg, status,2, status,0, pclath, tosl
 38757 ;; Tracked objects:
 38758 ;;		On entry : 0/0
 38759 ;;		On exit  : 0/0
 38760 ;;		Unchanged: 0/0
 38761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38766 ;;Total ram usage:        0 bytes
 38767 ;; Hardware stack levels used:    1
 38768 ;; Hardware stack levels required when called:    2
 38769 ;; This function calls:
 38770 ;;		_INT0_CallBack
 38771 ;; This function is called by:
 38772 ;;		Interrupt level 2
 38773 ;; This function uses a non-reentrant model
 38774 ;;
 38775                           
 38776                           	psect	text178
 38777  01D48C                     __ptext178:
 38778                           	opt callstack 0
 38779  01D48C                     _INT0_ISR:
 38780                           	opt callstack 2
 38781                           
 38782                           ;incstack = 0
 38783  01D48C  EE14  F2CC         	lfsr	1,___inthi_sp
 38784                           
 38785                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 38786  01D490  0139               	movlb	57	; () banked
 38787  01D492  91A1               	bcf	161,0,b	;volatile
 38788                           
 38789                           ; BSR set to: 57
 38790                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 38791  01D494  ECCA  F0E8         	call	_INT0_CallBack	;wreg free
 38792  01D498  0011               	retfie		f
 38793  01D49A                     __end_of_INT0_ISR:
 38794                           	opt callstack 0
 38795                           
 38796 ;; *************** function _INT0_CallBack *****************
 38797 ;; Defined at:
 38798 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 38799 ;; Parameters:    Size  Location     Type
 38800 ;;		None
 38801 ;; Auto vars:     Size  Location     Type
 38802 ;;		None
 38803 ;; Return value:  Size  Location     Type
 38804 ;;                  1  [STACK] void 
 38805 ;; Registers used:
 38806 ;;		wreg, status,2, status,0, pclath, tosl
 38807 ;; Tracked objects:
 38808 ;;		On entry : 3F/39
 38809 ;;		On exit  : 0/0
 38810 ;;		Unchanged: 0/0
 38811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38816 ;;Total ram usage:        0 bytes
 38817 ;; Hardware stack levels used:    1
 38818 ;; Hardware stack levels required when called:    1
 38819 ;; This function calls:
 38820 ;;		Absolute function
 38821 ;;		_INT0_DefaultInterruptHandler
 38822 ;; This function is called by:
 38823 ;;		_INT0_ISR
 38824 ;; This function uses a reentrant model
 38825 ;;
 38826                           
 38827                           	psect	text179
 38828  01D194                     __ptext179:
 38829                           	opt callstack 0
 38830  01D194                     _INT0_CallBack:
 38831                           	opt callstack 2
 38832                           
 38833                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 38834                           
 38835                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38836                           ;incstack = 0
 38837  01D194  0100               	movlb	0	; () banked
 38838  01D196  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 38839  01D198  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 38840  01D19A  11BF               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 38841  01D19C  B4D8               	btfsc	status,2,c
 38842  01D19E  0012               	return	
 38843                           
 38844                           ; BSR set to: 0
 38845                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 38846  01D1A0  D801               	call	u1087_48
 38847  01D1A2  0012               	return	
 38848  01D1A4                     u1087_48:
 38849  01D1A4  0005               	push	
 38850  01D1A6  6EFA               	movwf	pclath,c
 38851  01D1A8  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 38852  01D1AA  6EFD               	movwf	tosl,c
 38853  01D1AC  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 38854  01D1AE  6EFE               	movwf	tosh,c
 38855  01D1B0  51BF               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 38856  01D1B2  6EFF               	movwf	tosu,c
 38857  01D1B4  50FA               	movf	pclath,w,c
 38858  01D1B6  0012               	return		;indir
 38859  01D1B8                     __end_of_INT0_CallBack:
 38860                           	opt callstack 0
 38861                           
 38862 ;; *************** function _INT0_DefaultInterruptHandler *****************
 38863 ;; Defined at:
 38864 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 38865 ;; Parameters:    Size  Location     Type
 38866 ;;		None
 38867 ;; Auto vars:     Size  Location     Type
 38868 ;;		None
 38869 ;; Return value:  Size  Location     Type
 38870 ;;                  1  [STACK] void 
 38871 ;; Registers used:
 38872 ;;		None
 38873 ;; Tracked objects:
 38874 ;;		On entry : 3F/0
 38875 ;;		On exit  : 0/0
 38876 ;;		Unchanged: 0/0
 38877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38882 ;;Total ram usage:        0 bytes
 38883 ;; Hardware stack levels used:    1
 38884 ;; This function calls:
 38885 ;;		Nothing
 38886 ;; This function is called by:
 38887 ;;		_EXT_INT_Initialize
 38888 ;;		_INT0_CallBack
 38889 ;; This function uses a reentrant model
 38890 ;;
 38891                           
 38892                           	psect	text180
 38893  01D53E                     __ptext180:
 38894                           	opt callstack 0
 38895  01D53E                     _INT0_DefaultInterruptHandler:
 38896                           	opt callstack 2
 38897                           
 38898                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 38899                           
 38900                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38901                           ;incstack = 0
 38902  01D53E  0012               	return		;funcret
 38903  01D540                     __end_of_INT0_DefaultInterruptHandler:
 38904                           	opt callstack 0
 38905                           
 38906 ;; *************** function _Default_ISR *****************
 38907 ;; Defined at:
 38908 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 38909 ;; Parameters:    Size  Location     Type
 38910 ;;		None
 38911 ;; Auto vars:     Size  Location     Type
 38912 ;;		None
 38913 ;; Return value:  Size  Location     Type
 38914 ;;                  1    wreg      void 
 38915 ;; Registers used:
 38916 ;;		None
 38917 ;; Tracked objects:
 38918 ;;		On entry : 0/0
 38919 ;;		On exit  : 0/0
 38920 ;;		Unchanged: 0/0
 38921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38926 ;;Total ram usage:        0 bytes
 38927 ;; Hardware stack levels used:    1
 38928 ;; This function calls:
 38929 ;;		Nothing
 38930 ;; This function is called by:
 38931 ;;		Interrupt level 2
 38932 ;; This function uses a non-reentrant model
 38933 ;;
 38934                           
 38935                           	psect	text181
 38936  01D534                     __ptext181:
 38937                           	opt callstack 0
 38938  01D534                     _Default_ISR:
 38939                           	opt callstack 4
 38940                           
 38941                           ;incstack = 0
 38942  01D534  EE14  F2CC         	lfsr	1,___inthi_sp
 38943  01D538  0011               	retfie		f
 38944  01D53A                     __end_of_Default_ISR:
 38945                           	opt callstack 0
 38946                           
 38947 ;; *************** function _ADCC_ISR *****************
 38948 ;; Defined at:
 38949 ;;		line 314 in file "mcc_generated_files/adcc.c"
 38950 ;; Parameters:    Size  Location     Type
 38951 ;;		None
 38952 ;; Auto vars:     Size  Location     Type
 38953 ;;		None
 38954 ;; Return value:  Size  Location     Type
 38955 ;;                  1    wreg      void 
 38956 ;; Registers used:
 38957 ;;		wreg, status,2, status,0, pclath, tosl
 38958 ;; Tracked objects:
 38959 ;;		On entry : 0/0
 38960 ;;		On exit  : 0/0
 38961 ;;		Unchanged: 0/0
 38962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38967 ;;Total ram usage:        0 bytes
 38968 ;; Hardware stack levels used:    1
 38969 ;; Hardware stack levels required when called:    1
 38970 ;; This function calls:
 38971 ;;		Absolute function
 38972 ;;		_ADCC_DefaultInterruptHandler
 38973 ;;		_adc_int_handler
 38974 ;; This function is called by:
 38975 ;;		Interrupt level 2
 38976 ;; This function uses a non-reentrant model
 38977 ;;
 38978                           
 38979                           	psect	text182
 38980  01CE28                     __ptext182:
 38981                           	opt callstack 0
 38982  01CE28                     _ADCC_ISR:
 38983                           	opt callstack 3
 38984                           
 38985                           ;incstack = 0
 38986  01CE28  EE14  F2CC         	lfsr	1,___inthi_sp
 38987                           
 38988                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 38989  01CE2C  0139               	movlb	57	; () banked
 38990  01CE2E  95A1               	bcf	161,2,b	;volatile
 38991                           
 38992                           ; BSR set to: 57
 38993                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 38994  01CE30  0100               	movlb	0	; () banked
 38995  01CE32  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 38996  01CE34  11AF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 38997  01CE36  11B0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 38998  01CE38  B4D8               	btfsc	status,2,c
 38999  01CE3A  0011               	retfie		f
 39000                           
 39001                           ; BSR set to: 0
 39002                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 39003  01CE3C  D801               	call	i2u1148_48
 39004  01CE3E  0011               	retfie		f
 39005  01CE40                     i2u1148_48:
 39006  01CE40  0005               	push	
 39007  01CE42  6EFA               	movwf	pclath,c
 39008  01CE44  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 39009  01CE46  6EFD               	movwf	tosl,c
 39010  01CE48  51AF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 39011  01CE4A  6EFE               	movwf	tosh,c
 39012  01CE4C  51B0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 39013  01CE4E  6EFF               	movwf	tosu,c
 39014  01CE50  50FA               	movf	pclath,w,c
 39015  01CE52  0012               	return		;indir
 39016  01CE54                     __end_of_ADCC_ISR:
 39017                           	opt callstack 0
 39018                           
 39019 ;; *************** function _adc_int_t_handler *****************
 39020 ;; Defined at:
 39021 ;;		line 181 in file "daq.c"
 39022 ;; Parameters:    Size  Location     Type
 39023 ;;		None
 39024 ;; Auto vars:     Size  Location     Type
 39025 ;;		None
 39026 ;; Return value:  Size  Location     Type
 39027 ;;                  1  [STACK] void 
 39028 ;; Registers used:
 39029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 39030 ;; Tracked objects:
 39031 ;;		On entry : 3F/0
 39032 ;;		On exit  : 3/2
 39033 ;;		Unchanged: 0/0
 39034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39039 ;;Total ram usage:        0 bytes
 39040 ;; Hardware stack levels used:    1
 39041 ;; Hardware stack levels required when called:    1
 39042 ;; This function calls:
 39043 ;;		_ADCC_DischargeSampleCapacitor
 39044 ;;		_ADCC_StartConversion
 39045 ;; This function is called by:
 39046 ;;		_start_adc_scan
 39047 ;;		_ADCC_ThresholdISR
 39048 ;; This function uses a reentrant model
 39049 ;;
 39050                           
 39051                           	psect	text183
 39052  01BE22                     __ptext183:
 39053                           	opt callstack 0
 39054  01BE22                     _adc_int_t_handler:
 39055                           	opt callstack 2
 39056                           
 39057                           ;daq.c: 186:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 39058                           
 39059                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39060                           ;incstack = 0
 39061  01BE22  013E               	movlb	62	; () banked
 39062  01BE24  51E6               	movf	230,w,b	;volatile
 39063  01BE26  006F FB9C  F001    	movff	16103,btemp	;volatile
 39064  01BE2C  6A02               	clrf	(btemp+1)^0,c
 39065  01BE2E  0060  F004  F002   	movff	btemp,btemp+1
 39066  01BE34  6A01               	clrf	btemp^0,c
 39067  01BE36  2601               	addwf	btemp^0,f,c
 39068  01BE38  0E00               	movlw	0
 39069  01BE3A  2202               	addwfc	(btemp+1)^0,f,c
 39070  01BE3C  0102               	movlb	2	; () banked
 39071  01BE3E  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 39072  01BE40  0D02               	mullw	2
 39073  01BE42  0E00               	movlw	low _R
 39074  01BE44  24F3               	addwf	243,w,c
 39075  01BE46  6ED9               	movwf	fsr2l,c
 39076  01BE48  0E02               	movlw	high _R
 39077  01BE4A  20F4               	addwfc	prodh,w,c
 39078  01BE4C  6EDA               	movwf	fsr2h,c
 39079  01BE4E  0060  F007  FFDE   	movff	btemp,postinc2
 39080  01BE54  0060  F00B  FFDD   	movff	btemp+1,postdec2
 39081  01BE5A                     l12428:
 39082                           
 39083                           ;daq.c: 188:   if (++R.scan_index > 0XD) {
 39084  01BE5A  0102               	movlb	2	; () banked
 39085  01BE5C  2B32               	incf	(_R+50)& (0+255),f,b	;volatile
 39086  01BE5E  0E0D               	movlw	13
 39087  01BE60  6532               	cpfsgt	(_R+50)& (0+255),b	;volatile
 39088  01BE62  D003               	goto	l12434
 39089                           
 39090                           ; BSR set to: 2
 39091                           ;daq.c: 189:    R.done = 1;
 39092  01BE64  0E01               	movlw	1
 39093  01BE66  6F35               	movwf	(_R+53)& (0+255),b	;volatile
 39094  01BE68  0012               	return	
 39095  01BE6A                     l12434:
 39096                           
 39097                           ; BSR set to: 2
 39098                           ;daq.c: 195:  } while (!((R.scan_select >> R.scan_index) &0x1));
 39099  01BE6A  0060  F8C8  F00C   	movff	_R+50,btemp+11	;volatile
 39100  01BE70  EE20  F233         	lfsr	2,_R+51	;volatile
 39101  01BE74  006F FF78  F009    	movff	postinc2,btemp+8
 39102  01BE7A  006F FF74  F00A    	movff	postdec2,btemp+9
 39103  01BE80  2A0C               	incf	(btemp+11)^0,f,c
 39104  01BE82  D003               	goto	u1145_44
 39105  01BE84                     u1145_45:
 39106  01BE84  90D8               	bcf	status,0,c
 39107  01BE86  320A               	rrcf	(btemp+9)^0,f,c
 39108  01BE88  3209               	rrcf	(btemp+8)^0,f,c
 39109  01BE8A                     u1145_44:
 39110  01BE8A  2E0C               	decfsz	(btemp+11)^0,f,c
 39111  01BE8C  D7FB               	goto	u1145_45
 39112  01BE8E  A009               	btfss	(btemp+8)^0,0,c
 39113  01BE90  D7E4               	goto	l12428
 39114                           
 39115                           ;daq.c: 196:  ADCC_DischargeSampleCapacitor();
 39116  01BE92  EC7A  F0EA         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 39117                           
 39118                           ; BSR set to: 62
 39119                           ;daq.c: 197:  ADCC_StartConversion(R.scan_index & 0xf);
 39120  01BE96  0102               	movlb	2	; () banked
 39121  01BE98  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 39122  01BE9A  0B0F               	andlw	15
 39123  01BE9C  6EE6               	movwf	postinc1,c
 39124  01BE9E  ECFF  F0E9         	call	_ADCC_StartConversion	;wreg free
 39125                           
 39126                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 39127  01BEA2  0012               	return		;funcret
 39128  01BEA4                     __end_of_adc_int_t_handler:
 39129                           	opt callstack 0
 39130                           
 39131 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 39132 ;; Defined at:
 39133 ;;		line 339 in file "mcc_generated_files/adcc.c"
 39134 ;; Parameters:    Size  Location     Type
 39135 ;;		None
 39136 ;; Auto vars:     Size  Location     Type
 39137 ;;		None
 39138 ;; Return value:  Size  Location     Type
 39139 ;;                  1  [STACK] void 
 39140 ;; Registers used:
 39141 ;;		None
 39142 ;; Tracked objects:
 39143 ;;		On entry : 3F/0
 39144 ;;		On exit  : 0/0
 39145 ;;		Unchanged: 0/0
 39146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39151 ;;Total ram usage:        0 bytes
 39152 ;; Hardware stack levels used:    1
 39153 ;; This function calls:
 39154 ;;		Nothing
 39155 ;; This function is called by:
 39156 ;;		_ADCC_Initialize
 39157 ;;		_ADCC_ISR
 39158 ;;		_ADCC_ThresholdISR
 39159 ;; This function uses a reentrant model
 39160 ;;
 39161                           
 39162                           	psect	text184
 39163  01D540                     __ptext184:
 39164                           	opt callstack 0
 39165  01D540                     _ADCC_DefaultInterruptHandler:
 39166                           	opt callstack 3
 39167                           
 39168                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 39169                           
 39170                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39171                           ;incstack = 0
 39172  01D540  0012               	return		;funcret
 39173  01D542                     __end_of_ADCC_DefaultInterruptHandler:
 39174                           	opt callstack 0
 39175                           
 39176 ;; *************** function _adc_int_handler *****************
 39177 ;; Defined at:
 39178 ;;		line 171 in file "daq.c"
 39179 ;; Parameters:    Size  Location     Type
 39180 ;;		None
 39181 ;; Auto vars:     Size  Location     Type
 39182 ;;		None
 39183 ;; Return value:  Size  Location     Type
 39184 ;;                  1  [STACK] void 
 39185 ;; Registers used:
 39186 ;;		None
 39187 ;; Tracked objects:
 39188 ;;		On entry : 3F/0
 39189 ;;		On exit  : 0/0
 39190 ;;		Unchanged: 0/0
 39191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39196 ;;Total ram usage:        0 bytes
 39197 ;; Hardware stack levels used:    1
 39198 ;; This function calls:
 39199 ;;		Nothing
 39200 ;; This function is called by:
 39201 ;;		_start_adc_scan
 39202 ;;		_ADCC_ISR
 39203 ;; This function uses a reentrant model
 39204 ;;
 39205                           
 39206                           	psect	text185
 39207  01D542                     __ptext185:
 39208                           	opt callstack 0
 39209  01D542                     _adc_int_handler:
 39210                           	opt callstack 3
 39211                           
 39212                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 39213                           
 39214                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39215                           ;incstack = 0
 39216  01D542  0012               	return		;funcret
 39217  01D544                     __end_of_adc_int_handler:
 39218                           	opt callstack 0
 39219                           
 39220 ;; *************** function _ADCC_ThresholdISR *****************
 39221 ;; Defined at:
 39222 ;;		line 327 in file "mcc_generated_files/adcc.c"
 39223 ;; Parameters:    Size  Location     Type
 39224 ;;		None
 39225 ;; Auto vars:     Size  Location     Type
 39226 ;;		None
 39227 ;; Return value:  Size  Location     Type
 39228 ;;                  1    wreg      void 
 39229 ;; Registers used:
 39230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 39231 ;; Tracked objects:
 39232 ;;		On entry : 0/0
 39233 ;;		On exit  : 0/0
 39234 ;;		Unchanged: 0/0
 39235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39238 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39239 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39240 ;;Total ram usage:        5 bytes
 39241 ;; Hardware stack levels used:    1
 39242 ;; Hardware stack levels required when called:    2
 39243 ;; This function calls:
 39244 ;;		Absolute function
 39245 ;;		_ADCC_DefaultInterruptHandler
 39246 ;;		_adc_int_t_handler
 39247 ;; This function is called by:
 39248 ;;		Interrupt level 2
 39249 ;; This function uses a non-reentrant model
 39250 ;;
 39251                           
 39252                           	psect	text186
 39253  01C158                     __ptext186:
 39254                           	opt callstack 0
 39255  01C158                     _ADCC_ThresholdISR:
 39256                           	opt callstack 2
 39257                           
 39258                           ;incstack = 0
 39259  01C158  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 39260  01C15E  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 39261  01C164  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 39262  01C16A  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 39263  01C170  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 39264  01C176  EE14  F2CC         	lfsr	1,___inthi_sp
 39265                           
 39266                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 39267  01C17A  0139               	movlb	57	; () banked
 39268  01C17C  97A1               	bcf	161,3,b	;volatile
 39269                           
 39270                           ; BSR set to: 57
 39271                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 39272  01C17E  0100               	movlb	0	; () banked
 39273  01C180  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 39274  01C182  11AC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 39275  01C184  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 39276  01C186  B4D8               	btfsc	status,2,c
 39277  01C188  D00C               	goto	i2u1150_49
 39278                           
 39279                           ; BSR set to: 0
 39280                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 39281  01C18A  D801               	call	i2u1150_48
 39282  01C18C  D00A               	goto	i2u1150_49
 39283  01C18E                     i2u1150_48:
 39284  01C18E  0005               	push	
 39285  01C190  6EFA               	movwf	pclath,c
 39286  01C192  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 39287  01C194  6EFD               	movwf	tosl,c
 39288  01C196  51AC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 39289  01C198  6EFE               	movwf	tosh,c
 39290  01C19A  51AD               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 39291  01C19C  6EFF               	movwf	tosu,c
 39292  01C19E  50FA               	movf	pclath,w,c
 39293  01C1A0  0012               	return		;indir
 39294  01C1A2                     i2u1150_49:
 39295  01C1A2  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 39296  01C1A8  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 39297  01C1AE  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 39298  01C1B4  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 39299  01C1BA  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 39300  01C1C0  0011               	retfie		f
 39301  01C1C2                     __end_of_ADCC_ThresholdISR:
 39302                           	opt callstack 0
 39303                           
 39304 ;; *************** function _UART1_rx_vect_isr *****************
 39305 ;; Defined at:
 39306 ;;		line 181 in file "mcc_generated_files/uart1.c"
 39307 ;; Parameters:    Size  Location     Type
 39308 ;;		None
 39309 ;; Auto vars:     Size  Location     Type
 39310 ;;		None
 39311 ;; Return value:  Size  Location     Type
 39312 ;;                  1    wreg      void 
 39313 ;; Registers used:
 39314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 39315 ;; Tracked objects:
 39316 ;;		On entry : 0/0
 39317 ;;		On exit  : 0/0
 39318 ;;		Unchanged: 0/0
 39319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39324 ;;Total ram usage:        0 bytes
 39325 ;; Hardware stack levels used:    1
 39326 ;; Hardware stack levels required when called:    1
 39327 ;; This function calls:
 39328 ;;		Absolute function
 39329 ;;		_UART1_Receive_ISR
 39330 ;; This function is called by:
 39331 ;;		Interrupt level 2
 39332 ;; This function uses a non-reentrant model
 39333 ;;
 39334                           
 39335                           	psect	text187
 39336  01D08C                     __ptext187:
 39337                           	opt callstack 0
 39338  01D08C                     _UART1_rx_vect_isr:
 39339                           	opt callstack 3
 39340                           
 39341                           ;incstack = 0
 39342  01D08C  EE14  F2CC         	lfsr	1,___inthi_sp
 39343                           
 39344                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 39345  01D090  0100               	movlb	0	; () banked
 39346  01D092  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 39347  01D094  11B2               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 39348  01D096  11B3               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 39349  01D098  B4D8               	btfsc	status,2,c
 39350  01D09A  0011               	retfie		f
 39351                           
 39352                           ; BSR set to: 0
 39353                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 39354  01D09C  D801               	call	i2u1152_48
 39355  01D09E  0011               	retfie		f
 39356  01D0A0                     i2u1152_48:
 39357  01D0A0  0005               	push	
 39358  01D0A2  6EFA               	movwf	pclath,c
 39359  01D0A4  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 39360  01D0A6  6EFD               	movwf	tosl,c
 39361  01D0A8  51B2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 39362  01D0AA  6EFE               	movwf	tosh,c
 39363  01D0AC  51B3               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 39364  01D0AE  6EFF               	movwf	tosu,c
 39365  01D0B0  50FA               	movf	pclath,w,c
 39366  01D0B2  0012               	return		;indir
 39367  01D0B4                     __end_of_UART1_rx_vect_isr:
 39368                           	opt callstack 0
 39369                           
 39370 ;; *************** function _UART1_Receive_ISR *****************
 39371 ;; Defined at:
 39372 ;;		line 192 in file "mcc_generated_files/uart1.c"
 39373 ;; Parameters:    Size  Location     Type
 39374 ;;		None
 39375 ;; Auto vars:     Size  Location     Type
 39376 ;;		None
 39377 ;; Return value:  Size  Location     Type
 39378 ;;                  1  [STACK] void 
 39379 ;; Registers used:
 39380 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39381 ;; Tracked objects:
 39382 ;;		On entry : 3F/0
 39383 ;;		On exit  : 3F/0
 39384 ;;		Unchanged: 0/0
 39385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39390 ;;Total ram usage:        0 bytes
 39391 ;; Hardware stack levels used:    1
 39392 ;; This function calls:
 39393 ;;		Nothing
 39394 ;; This function is called by:
 39395 ;;		_UART1_Initialize
 39396 ;;		_UART1_rx_vect_isr
 39397 ;; This function uses a reentrant model
 39398 ;;
 39399                           
 39400                           	psect	text188
 39401  01D2FA                     __ptext188:
 39402                           	opt callstack 0
 39403  01D2FA                     _UART1_Receive_ISR:
 39404                           	opt callstack 3
 39405                           
 39406                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 39407                           
 39408                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39409                           ;incstack = 0
 39410  01D2FA  5047               	movf	_uart1RxHead^0,w,c
 39411  01D2FC  0F6C               	addlw	low _uart1RxBuffer
 39412  01D2FE  6ED9               	movwf	fsr2l,c
 39413  01D300  6ADA               	clrf	fsr2h,c
 39414  01D302  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 39415  01D308  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 39416                           
 39417                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 39418  01D30A  0E07               	movlw	7
 39419  01D30C  6447               	cpfsgt	_uart1RxHead^0,c
 39420  01D30E  D001               	goto	l11820
 39421                           
 39422                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 39423  01D310  6A47               	clrf	_uart1RxHead^0,c	;volatile
 39424  01D312                     l11820:
 39425                           
 39426                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 39427  01D312  0100               	movlb	0	; () banked
 39428  01D314  2BD3               	incf	_uart1RxCount& (0+255),f,b	;volatile
 39429                           
 39430                           ; BSR set to: 0
 39431                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 39432  01D316  0012               	return		;funcret
 39433  01D318                     __end_of_UART1_Receive_ISR:
 39434                           	opt callstack 0
 39435                           
 39436 ;; *************** function _UART2_tx_vect_isr *****************
 39437 ;; Defined at:
 39438 ;;		line 195 in file "mcc_generated_files/uart2.c"
 39439 ;; Parameters:    Size  Location     Type
 39440 ;;		None
 39441 ;; Auto vars:     Size  Location     Type
 39442 ;;		None
 39443 ;; Return value:  Size  Location     Type
 39444 ;;                  1    wreg      void 
 39445 ;; Registers used:
 39446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 39447 ;; Tracked objects:
 39448 ;;		On entry : 0/0
 39449 ;;		On exit  : 0/0
 39450 ;;		Unchanged: 0/0
 39451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39456 ;;Total ram usage:        0 bytes
 39457 ;; Hardware stack levels used:    1
 39458 ;; Hardware stack levels required when called:    1
 39459 ;; This function calls:
 39460 ;;		Absolute function
 39461 ;;		_UART2_Transmit_ISR
 39462 ;; This function is called by:
 39463 ;;		Interrupt level 2
 39464 ;; This function uses a non-reentrant model
 39465 ;;
 39466                           
 39467                           	psect	text189
 39468  01D0B4                     __ptext189:
 39469                           	opt callstack 0
 39470  01D0B4                     _UART2_tx_vect_isr:
 39471                           	opt callstack 3
 39472                           
 39473                           ; BSR set to: 0
 39474                           ;incstack = 0
 39475  01D0B4  EE14  F2CC         	lfsr	1,___inthi_sp
 39476                           
 39477                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 39478  01D0B8  0100               	movlb	0	; () banked
 39479  01D0BA  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 39480  01D0BC  11B5               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 39481  01D0BE  11B6               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 39482  01D0C0  B4D8               	btfsc	status,2,c
 39483  01D0C2  0011               	retfie		f
 39484                           
 39485                           ; BSR set to: 0
 39486                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 39487  01D0C4  D801               	call	i2u1154_48
 39488  01D0C6  0011               	retfie		f
 39489  01D0C8                     i2u1154_48:
 39490  01D0C8  0005               	push	
 39491  01D0CA  6EFA               	movwf	pclath,c
 39492  01D0CC  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 39493  01D0CE  6EFD               	movwf	tosl,c
 39494  01D0D0  51B5               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 39495  01D0D2  6EFE               	movwf	tosh,c
 39496  01D0D4  51B6               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 39497  01D0D6  6EFF               	movwf	tosu,c
 39498  01D0D8  50FA               	movf	pclath,w,c
 39499  01D0DA  0012               	return		;indir
 39500  01D0DC                     __end_of_UART2_tx_vect_isr:
 39501                           	opt callstack 0
 39502                           
 39503 ;; *************** function _UART2_Transmit_ISR *****************
 39504 ;; Defined at:
 39505 ;;		line 213 in file "mcc_generated_files/uart2.c"
 39506 ;; Parameters:    Size  Location     Type
 39507 ;;		None
 39508 ;; Auto vars:     Size  Location     Type
 39509 ;;		None
 39510 ;; Return value:  Size  Location     Type
 39511 ;;                  1  [STACK] void 
 39512 ;; Registers used:
 39513 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39514 ;; Tracked objects:
 39515 ;;		On entry : 3F/0
 39516 ;;		On exit  : 3B/39
 39517 ;;		Unchanged: 0/0
 39518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39523 ;;Total ram usage:        0 bytes
 39524 ;; Hardware stack levels used:    1
 39525 ;; This function calls:
 39526 ;;		Nothing
 39527 ;; This function is called by:
 39528 ;;		_UART2_Initialize
 39529 ;;		_UART2_tx_vect_isr
 39530 ;; This function uses a reentrant model
 39531 ;;
 39532                           
 39533                           	psect	text190
 39534  01CE54                     __ptext190:
 39535                           	opt callstack 0
 39536  01CE54                     _UART2_Transmit_ISR:
 39537                           	opt callstack 3
 39538                           
 39539                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 39540                           
 39541                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39542                           ;incstack = 0
 39543  01CE54  0E40               	movlw	64
 39544  01CE56  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 39545  01CE58  D010               	goto	l675
 39546                           
 39547                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 39548  01CE5A  0E54               	movlw	low _uart2TxBuffer
 39549  01CE5C  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 39550  01CE5E  6ED9               	movwf	fsr2l,c
 39551  01CE60  6ADA               	clrf	fsr2h,c
 39552  01CE62  0E03               	movlw	high _uart2TxBuffer
 39553  01CE64  22DA               	addwfc	fsr2h,f,c
 39554  01CE66  50DF               	movf	indf2,w,c
 39555  01CE68  013D               	movlb	61	; () banked
 39556  01CE6A  6FD2               	movwf	210,b	;volatile
 39557                           
 39558                           ; BSR set to: 61
 39559  01CE6C  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 39560                           
 39561                           ; BSR set to: 61
 39562                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 39563  01CE6E  0E3F               	movlw	63
 39564  01CE70  6446               	cpfsgt	_uart2TxTail^0,c
 39565  01CE72  D001               	goto	l11832
 39566                           
 39567                           ; BSR set to: 61
 39568                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 39569  01CE74  6A46               	clrf	_uart2TxTail^0,c	;volatile
 39570  01CE76                     l11832:
 39571                           
 39572                           ; BSR set to: 61
 39573                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 39574  01CE76  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 39575                           
 39576                           ;mcc_generated_files/uart2.c: 224:     }
 39577  01CE78  0012               	return	
 39578  01CE7A                     l675:
 39579                           
 39580                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 39581  01CE7A  0139               	movlb	57	; () banked
 39582  01CE7C  9796               	bcf	150,3,b	;volatile
 39583                           
 39584                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 39585  01CE7E  0012               	return		;funcret
 39586  01CE80                     __end_of_UART2_Transmit_ISR:
 39587                           	opt callstack 0
 39588                           
 39589 ;; *************** function _UART2_rx_vect_isr *****************
 39590 ;; Defined at:
 39591 ;;		line 203 in file "mcc_generated_files/uart2.c"
 39592 ;; Parameters:    Size  Location     Type
 39593 ;;		None
 39594 ;; Auto vars:     Size  Location     Type
 39595 ;;		None
 39596 ;; Return value:  Size  Location     Type
 39597 ;;                  1    wreg      void 
 39598 ;; Registers used:
 39599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 39600 ;; Tracked objects:
 39601 ;;		On entry : 0/0
 39602 ;;		On exit  : 0/0
 39603 ;;		Unchanged: 0/0
 39604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39609 ;;Total ram usage:        0 bytes
 39610 ;; Hardware stack levels used:    1
 39611 ;; Hardware stack levels required when called:    1
 39612 ;; This function calls:
 39613 ;;		Absolute function
 39614 ;;		_UART2_Receive_ISR
 39615 ;; This function is called by:
 39616 ;;		Interrupt level 2
 39617 ;; This function uses a non-reentrant model
 39618 ;;
 39619                           
 39620                           	psect	text191
 39621  01D0DC                     __ptext191:
 39622                           	opt callstack 0
 39623  01D0DC                     _UART2_rx_vect_isr:
 39624                           	opt callstack 3
 39625                           
 39626                           ;incstack = 0
 39627  01D0DC  EE14  F2CC         	lfsr	1,___inthi_sp
 39628                           
 39629                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 39630  01D0E0  0100               	movlb	0	; () banked
 39631  01D0E2  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 39632  01D0E4  11B8               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 39633  01D0E6  11B9               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 39634  01D0E8  B4D8               	btfsc	status,2,c
 39635  01D0EA  0011               	retfie		f
 39636                           
 39637                           ; BSR set to: 0
 39638                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 39639  01D0EC  D801               	call	i2u1156_48
 39640  01D0EE  0011               	retfie		f
 39641  01D0F0                     i2u1156_48:
 39642  01D0F0  0005               	push	
 39643  01D0F2  6EFA               	movwf	pclath,c
 39644  01D0F4  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 39645  01D0F6  6EFD               	movwf	tosl,c
 39646  01D0F8  51B8               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 39647  01D0FA  6EFE               	movwf	tosh,c
 39648  01D0FC  51B9               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 39649  01D0FE  6EFF               	movwf	tosu,c
 39650  01D100  50FA               	movf	pclath,w,c
 39651  01D102  0012               	return		;indir
 39652  01D104                     __end_of_UART2_rx_vect_isr:
 39653                           	opt callstack 0
 39654                           
 39655 ;; *************** function _UART2_Receive_ISR *****************
 39656 ;; Defined at:
 39657 ;;		line 233 in file "mcc_generated_files/uart2.c"
 39658 ;; Parameters:    Size  Location     Type
 39659 ;;		None
 39660 ;; Auto vars:     Size  Location     Type
 39661 ;;		None
 39662 ;; Return value:  Size  Location     Type
 39663 ;;                  1  [STACK] void 
 39664 ;; Registers used:
 39665 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39666 ;; Tracked objects:
 39667 ;;		On entry : 3F/0
 39668 ;;		On exit  : 3F/0
 39669 ;;		Unchanged: 0/0
 39670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39675 ;;Total ram usage:        0 bytes
 39676 ;; Hardware stack levels used:    1
 39677 ;; This function calls:
 39678 ;;		Nothing
 39679 ;; This function is called by:
 39680 ;;		_UART2_Initialize
 39681 ;;		_UART2_rx_vect_isr
 39682 ;; This function uses a reentrant model
 39683 ;;
 39684                           
 39685                           	psect	text192
 39686  01D262                     __ptext192:
 39687                           	opt callstack 0
 39688  01D262                     _UART2_Receive_ISR:
 39689                           	opt callstack 3
 39690                           
 39691                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 39692                           
 39693                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39694                           ;incstack = 0
 39695  01D262  0E00               	movlw	low _uart2RxBuffer
 39696  01D264  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 39697  01D266  6ED9               	movwf	fsr2l,c
 39698  01D268  6ADA               	clrf	fsr2h,c
 39699  01D26A  0E06               	movlw	high _uart2RxBuffer
 39700  01D26C  22DA               	addwfc	fsr2h,f,c
 39701  01D26E  006F F743 FFDF     	movff	15824,indf2	;volatile
 39702  01D274  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 39703                           
 39704                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 39705  01D276  2844               	incf	_uart2RxHead^0,w,c
 39706  01D278  B4D8               	btfsc	status,2,c
 39707                           
 39708                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 39709  01D27A  6A44               	clrf	_uart2RxHead^0,c	;volatile
 39710                           
 39711                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 39712  01D27C  0100               	movlb	0	; () banked
 39713  01D27E  2BD0               	incf	_uart2RxCount& (0+255),f,b	;volatile
 39714                           
 39715                           ; BSR set to: 0
 39716                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 39717  01D280  0012               	return		;funcret
 39718  01D282                     __end_of_UART2_Receive_ISR:
 39719                           	opt callstack 0
 39720                           
 39721 ;; *************** function _TMR6_ISR *****************
 39722 ;; Defined at:
 39723 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 39724 ;; Parameters:    Size  Location     Type
 39725 ;;		None
 39726 ;; Auto vars:     Size  Location     Type
 39727 ;;		None
 39728 ;; Return value:  Size  Location     Type
 39729 ;;                  1    wreg      void 
 39730 ;; Registers used:
 39731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 39732 ;; Tracked objects:
 39733 ;;		On entry : 0/0
 39734 ;;		On exit  : 0/0
 39735 ;;		Unchanged: 0/0
 39736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39739 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39740 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39741 ;;Total ram usage:        1 bytes
 39742 ;; Hardware stack levels used:    1
 39743 ;; Hardware stack levels required when called:    2
 39744 ;; This function calls:
 39745 ;;		_TMR6_CallBack
 39746 ;; This function is called by:
 39747 ;;		Interrupt level 2
 39748 ;; This function uses a non-reentrant model
 39749 ;;
 39750                           
 39751                           	psect	text193
 39752  01D334                     __ptext193:
 39753                           	opt callstack 0
 39754  01D334                     _TMR6_ISR:
 39755                           	opt callstack 2
 39756                           
 39757                           ; BSR set to: 0
 39758                           ;incstack = 0
 39759  01D334  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 39760  01D33A  EE14  F2CC         	lfsr	1,___inthi_sp
 39761                           
 39762                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 39763  01D33E  0139               	movlb	57	; () banked
 39764  01D340  91A9               	bcf	169,0,b	;volatile
 39765                           
 39766                           ; BSR set to: 57
 39767                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 39768  01D342  ECDC  F0E8         	call	_TMR6_CallBack	;wreg free
 39769  01D346  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 39770  01D34C  0011               	retfie		f
 39771  01D34E                     __end_of_TMR6_ISR:
 39772                           	opt callstack 0
 39773                           
 39774 ;; *************** function _TMR6_CallBack *****************
 39775 ;; Defined at:
 39776 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 39777 ;; Parameters:    Size  Location     Type
 39778 ;;		None
 39779 ;; Auto vars:     Size  Location     Type
 39780 ;;		None
 39781 ;; Return value:  Size  Location     Type
 39782 ;;                  1  [STACK] void 
 39783 ;; Registers used:
 39784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 39785 ;; Tracked objects:
 39786 ;;		On entry : 3F/39
 39787 ;;		On exit  : 0/0
 39788 ;;		Unchanged: 0/0
 39789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39794 ;;Total ram usage:        0 bytes
 39795 ;; Hardware stack levels used:    1
 39796 ;; Hardware stack levels required when called:    1
 39797 ;; This function calls:
 39798 ;;		Absolute function
 39799 ;;		_TMR6_DefaultInterruptHandler
 39800 ;; This function is called by:
 39801 ;;		_TMR6_ISR
 39802 ;; This function uses a reentrant model
 39803 ;;
 39804                           
 39805                           	psect	text194
 39806  01D1B8                     __ptext194:
 39807                           	opt callstack 0
 39808  01D1B8                     _TMR6_CallBack:
 39809                           	opt callstack 2
 39810                           
 39811                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 39812                           
 39813                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39814                           ;incstack = 0
 39815  01D1B8  0100               	movlb	0	; () banked
 39816  01D1BA  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 39817  01D1BC  11A9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 39818  01D1BE  11AA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 39819  01D1C0  B4D8               	btfsc	status,2,c
 39820  01D1C2  0012               	return	
 39821                           
 39822                           ; BSR set to: 0
 39823                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 39824  01D1C4  D801               	call	u1095_48
 39825  01D1C6  0012               	return	
 39826  01D1C8                     u1095_48:
 39827  01D1C8  0005               	push	
 39828  01D1CA  6EFA               	movwf	pclath,c
 39829  01D1CC  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 39830  01D1CE  6EFD               	movwf	tosl,c
 39831  01D1D0  51A9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 39832  01D1D2  6EFE               	movwf	tosh,c
 39833  01D1D4  51AA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 39834  01D1D6  6EFF               	movwf	tosu,c
 39835  01D1D8  50FA               	movf	pclath,w,c
 39836  01D1DA  0012               	return		;indir
 39837  01D1DC                     __end_of_TMR6_CallBack:
 39838                           	opt callstack 0
 39839                           
 39840 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 39841 ;; Defined at:
 39842 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 39843 ;; Parameters:    Size  Location     Type
 39844 ;;		None
 39845 ;; Auto vars:     Size  Location     Type
 39846 ;;  i               1  [STACK] unsigned char 
 39847 ;; Return value:  Size  Location     Type
 39848 ;;                  1  [STACK] void 
 39849 ;; Registers used:
 39850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 39851 ;; Tracked objects:
 39852 ;;		On entry : 3F/0
 39853 ;;		On exit  : 0/0
 39854 ;;		Unchanged: 0/0
 39855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39860 ;;Total ram usage:        0 bytes
 39861 ;; Hardware stack levels used:    1
 39862 ;; This function calls:
 39863 ;;		Nothing
 39864 ;; This function is called by:
 39865 ;;		_TMR6_Initialize
 39866 ;;		_TMR6_CallBack
 39867 ;; This function uses a reentrant model
 39868 ;;
 39869                           
 39870                           	psect	text195
 39871  01C66E                     __ptext195:
 39872                           	opt callstack 0
 39873  01C66E                     _TMR6_DefaultInterruptHandler:
 39874                           	opt callstack 0
 39875                           
 39876                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39877  01C66E  52E6               	movf	postinc1,f,c
 39878                           
 39879                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 39880                           ;stkvar	_i @ sp[(-1)+0]
 39881                           
 39882                           ;incstack = 0
 39883  01C670  0EFF               	movlw	-1
 39884  01C672  6AE3               	clrf	plusw1,c
 39885  01C674                     l11302:
 39886                           
 39887                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 39888                           ;stkvar	_i @ sp[(-1)+0]
 39889  01C674  0EFF               	movlw	-1
 39890  01C676  50E3               	movf	plusw1,w,c
 39891  01C678  0D02               	mullw	2
 39892  01C67A  0EAB               	movlw	low _tickCount
 39893  01C67C  24F3               	addwf	243,w,c
 39894  01C67E  6ED9               	movwf	fsr2l,c
 39895  01C680  0E02               	movlw	high _tickCount
 39896  01C682  20F4               	addwfc	prodh,w,c
 39897  01C684  6EDA               	movwf	fsr2h,c
 39898  01C686  50DE               	movf	postinc2,w,c
 39899  01C688  10DE               	iorwf	postinc2,w,c
 39900  01C68A  B4D8               	btfsc	status,2,c
 39901  01C68C  D00C               	goto	l11306
 39902                           
 39903                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 39904                           ;stkvar	_i @ sp[(-1)+0]
 39905  01C68E  0EFF               	movlw	-1
 39906  01C690  50E3               	movf	plusw1,w,c
 39907  01C692  0D02               	mullw	2
 39908  01C694  0EAB               	movlw	low _tickCount
 39909  01C696  24F3               	addwf	243,w,c
 39910  01C698  6ED9               	movwf	fsr2l,c
 39911  01C69A  0E02               	movlw	high _tickCount
 39912  01C69C  20F4               	addwfc	prodh,w,c
 39913  01C69E  6EDA               	movwf	fsr2h,c
 39914  01C6A0  06DE               	decf	postinc2,f,c
 39915  01C6A2  0E00               	movlw	0
 39916  01C6A4  5ADD               	subwfb	postdec2,f,c
 39917  01C6A6                     l11306:
 39918                           
 39919                           ;mcc_generated_files/tmr6.c: 207:  }
 39920                           ;stkvar	_i @ sp[(-1)+0]
 39921  01C6A6  0EFF               	movlw	-1
 39922  01C6A8  2AE3               	incf	plusw1,f,c
 39923                           
 39924                           ;stkvar	_i @ sp[(-1)+0]
 39925  01C6AA  0EFF               	movlw	-1
 39926  01C6AC  006F FF8C  F001    	movff	plusw1,btemp
 39927  01C6B2  0E0C               	movlw	12
 39928  01C6B4  6401               	cpfsgt	btemp^0,c
 39929  01C6B6  D7DE               	goto	l11302
 39930                           
 39931                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 39932  01C6B8  52E5               	movf	postdec1,f,c
 39933  01C6BA  0012               	return		;funcret
 39934  01C6BC                     __end_of_TMR6_DefaultInterruptHandler:
 39935                           	opt callstack 0
 39936                           
 39937 ;; *************** function _DMA1_DMASCNT_ISR *****************
 39938 ;; Defined at:
 39939 ;;		line 126 in file "mcc_generated_files/dma1.c"
 39940 ;; Parameters:    Size  Location     Type
 39941 ;;		None
 39942 ;; Auto vars:     Size  Location     Type
 39943 ;;		None
 39944 ;; Return value:  Size  Location     Type
 39945 ;;                  1    wreg      void 
 39946 ;; Registers used:
 39947 ;;		None
 39948 ;; Tracked objects:
 39949 ;;		On entry : 0/0
 39950 ;;		On exit  : 3F/0
 39951 ;;		Unchanged: 0/0
 39952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39957 ;;Total ram usage:        0 bytes
 39958 ;; Hardware stack levels used:    1
 39959 ;; This function calls:
 39960 ;;		Nothing
 39961 ;; This function is called by:
 39962 ;;		Interrupt level 2
 39963 ;; This function uses a non-reentrant model
 39964 ;;
 39965                           
 39966                           	psect	text196
 39967  01D49C                     __ptext196:
 39968                           	opt callstack 0
 39969  01D49C                     _DMA1_DMASCNT_ISR:
 39970                           	opt callstack 4
 39971                           
 39972                           ;incstack = 0
 39973  01D49C  EE14  F2CC         	lfsr	1,___inthi_sp
 39974                           
 39975                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 39976  01D4A0  0139               	movlb	57	; () banked
 39977  01D4A2  91A2               	bcf	162,0,b	;volatile
 39978                           
 39979                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 39980  01D4A4  0100               	movlb	0	; () banked
 39981  01D4A6  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 39982                           
 39983                           ; BSR set to: 0
 39984  01D4A8  0011               	retfie		f
 39985  01D4AA                     __end_of_DMA1_DMASCNT_ISR:
 39986                           	opt callstack 0
 39987                           
 39988 ;; *************** function _DMA1_DMADCNT_ISR *****************
 39989 ;; Defined at:
 39990 ;;		line 133 in file "mcc_generated_files/dma1.c"
 39991 ;; Parameters:    Size  Location     Type
 39992 ;;		None
 39993 ;; Auto vars:     Size  Location     Type
 39994 ;;		None
 39995 ;; Return value:  Size  Location     Type
 39996 ;;                  1    wreg      void 
 39997 ;; Registers used:
 39998 ;;		None
 39999 ;; Tracked objects:
 40000 ;;		On entry : 0/0
 40001 ;;		On exit  : 3F/39
 40002 ;;		Unchanged: 0/0
 40003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40008 ;;Total ram usage:        0 bytes
 40009 ;; Hardware stack levels used:    1
 40010 ;; This function calls:
 40011 ;;		Nothing
 40012 ;; This function is called by:
 40013 ;;		Interrupt level 2
 40014 ;; This function uses a non-reentrant model
 40015 ;;
 40016                           
 40017                           	psect	text197
 40018  01D4C0                     __ptext197:
 40019                           	opt callstack 0
 40020  01D4C0                     _DMA1_DMADCNT_ISR:
 40021                           	opt callstack 4
 40022                           
 40023                           ; BSR set to: 0
 40024                           ;incstack = 0
 40025  01D4C0  EE14  F2CC         	lfsr	1,___inthi_sp
 40026                           
 40027                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 40028  01D4C4  0139               	movlb	57	; () banked
 40029  01D4C6  93A2               	bcf	162,1,b	;volatile
 40030                           
 40031                           ; BSR set to: 57
 40032  01D4C8  0011               	retfie		f
 40033  01D4CA                     __end_of_DMA1_DMADCNT_ISR:
 40034                           	opt callstack 0
 40035                           
 40036 ;; *************** function _DMA1_DMAA_ISR *****************
 40037 ;; Defined at:
 40038 ;;		line 143 in file "mcc_generated_files/dma1.c"
 40039 ;; Parameters:    Size  Location     Type
 40040 ;;		None
 40041 ;; Auto vars:     Size  Location     Type
 40042 ;;		None
 40043 ;; Return value:  Size  Location     Type
 40044 ;;                  1    wreg      void 
 40045 ;; Registers used:
 40046 ;;		None
 40047 ;; Tracked objects:
 40048 ;;		On entry : 0/0
 40049 ;;		On exit  : 3F/39
 40050 ;;		Unchanged: 0/0
 40051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40056 ;;Total ram usage:        0 bytes
 40057 ;; Hardware stack levels used:    1
 40058 ;; This function calls:
 40059 ;;		Nothing
 40060 ;; This function is called by:
 40061 ;;		Interrupt level 2
 40062 ;; This function uses a non-reentrant model
 40063 ;;
 40064                           
 40065                           	psect	text198
 40066  01D4CC                     __ptext198:
 40067                           	opt callstack 0
 40068  01D4CC                     _DMA1_DMAA_ISR:
 40069                           	opt callstack 4
 40070                           
 40071                           ; BSR set to: 57
 40072                           ;incstack = 0
 40073  01D4CC  EE14  F2CC         	lfsr	1,___inthi_sp
 40074                           
 40075                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 40076  01D4D0  0139               	movlb	57	; () banked
 40077  01D4D2  97A2               	bcf	162,3,b	;volatile
 40078                           
 40079                           ; BSR set to: 57
 40080  01D4D4  0011               	retfie		f
 40081  01D4D6                     __end_of_DMA1_DMAA_ISR:
 40082                           	opt callstack 0
 40083                           
 40084 ;; *************** function _DMA1_DMAOR_ISR *****************
 40085 ;; Defined at:
 40086 ;;		line 154 in file "mcc_generated_files/dma1.c"
 40087 ;; Parameters:    Size  Location     Type
 40088 ;;		None
 40089 ;; Auto vars:     Size  Location     Type
 40090 ;;		None
 40091 ;; Return value:  Size  Location     Type
 40092 ;;                  1    wreg      void 
 40093 ;; Registers used:
 40094 ;;		None
 40095 ;; Tracked objects:
 40096 ;;		On entry : 0/0
 40097 ;;		On exit  : 3F/39
 40098 ;;		Unchanged: 0/0
 40099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40104 ;;Total ram usage:        0 bytes
 40105 ;; Hardware stack levels used:    1
 40106 ;; This function calls:
 40107 ;;		Nothing
 40108 ;; This function is called by:
 40109 ;;		Interrupt level 2
 40110 ;; This function uses a non-reentrant model
 40111 ;;
 40112                           
 40113                           	psect	text199
 40114  01D4D8                     __ptext199:
 40115                           	opt callstack 0
 40116  01D4D8                     _DMA1_DMAOR_ISR:
 40117                           	opt callstack 4
 40118                           
 40119                           ; BSR set to: 57
 40120                           ;incstack = 0
 40121  01D4D8  EE14  F2CC         	lfsr	1,___inthi_sp
 40122                           
 40123                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 40124  01D4DC  0139               	movlb	57	; () banked
 40125  01D4DE  95A2               	bcf	162,2,b	;volatile
 40126                           
 40127                           ; BSR set to: 57
 40128  01D4E0  0011               	retfie		f
 40129  01D4E2                     __end_of_DMA1_DMAOR_ISR:
 40130                           	opt callstack 0
 40131                           
 40132                           ;
 40133                           ; Interrupt Vector Table @ 0x8
 40134                           ;
 40135                           
 40136                           	psect	ivt0x8
 40137  000008                     __pivt0x8:
 40138                           	opt callstack 0
 40139  000008                     ivt0x8_base:
 40140                           	opt callstack 0
 40141                           
 40142                           ; Vector 0 : SWINT
 40143  000008  754D               	dw	_Default_ISR shr (0+2)
 40144                           
 40145                           ; Vector 1 : HLVD
 40146  00000A  754D               	dw	_Default_ISR shr (0+2)
 40147                           
 40148                           ; Vector 2 : OSF
 40149  00000C  754D               	dw	_Default_ISR shr (0+2)
 40150                           
 40151                           ; Vector 3 : CSW
 40152  00000E  754D               	dw	_Default_ISR shr (0+2)
 40153                           
 40154                           ; Vector 4 : NVM
 40155  000010  754D               	dw	_Default_ISR shr (0+2)
 40156                           
 40157                           ; Vector 5 : SCAN
 40158  000012  754D               	dw	_Default_ISR shr (0+2)
 40159                           
 40160                           ; Vector 6 : CRC
 40161  000014  754D               	dw	_Default_ISR shr (0+2)
 40162                           
 40163                           ; Vector 7 : IOC
 40164  000016  754D               	dw	_Default_ISR shr (0+2)
 40165                           
 40166                           ; Vector 8 : INT0
 40167  000018  7523               	dw	_INT0_ISR shr (0+2)
 40168                           
 40169                           ; Vector 9 : ZCD
 40170  00001A  754D               	dw	_Default_ISR shr (0+2)
 40171                           
 40172                           ; Vector 10 : AD
 40173  00001C  738A               	dw	_ADCC_ISR shr (0+2)
 40174                           
 40175                           ; Vector 11 : ADT
 40176  00001E  7056               	dw	_ADCC_ThresholdISR shr (0+2)
 40177                           
 40178                           ; Vector 12 : CMP1
 40179  000020  754D               	dw	_Default_ISR shr (0+2)
 40180                           
 40181                           ; Vector 13 : SMT1
 40182  000022  754D               	dw	_Default_ISR shr (0+2)
 40183                           
 40184                           ; Vector 14 : SMT1PRA
 40185  000024  754D               	dw	_Default_ISR shr (0+2)
 40186                           
 40187                           ; Vector 15 : SMT1PRW
 40188  000026  754D               	dw	_Default_ISR shr (0+2)
 40189                           
 40190                           ; Vector 16 : DMA1SCNT
 40191  000028  7527               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 40192                           
 40193                           ; Vector 17 : DMA1DCNT
 40194  00002A  7530               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 40195                           
 40196                           ; Vector 18 : DMA1OR
 40197  00002C  7536               	dw	_DMA1_DMAOR_ISR shr (0+2)
 40198                           
 40199                           ; Vector 19 : DMA1A
 40200  00002E  7533               	dw	_DMA1_DMAA_ISR shr (0+2)
 40201                           
 40202                           ; Vector 20 : SPI1RX
 40203  000030  754D               	dw	_Default_ISR shr (0+2)
 40204                           
 40205                           ; Vector 21 : SPI1TX
 40206  000032  754D               	dw	_Default_ISR shr (0+2)
 40207                           
 40208                           ; Vector 22 : SPI1
 40209  000034  754D               	dw	_Default_ISR shr (0+2)
 40210                           
 40211                           ; Vector 23 : I2C1RX
 40212  000036  754D               	dw	_Default_ISR shr (0+2)
 40213                           
 40214                           ; Vector 24 : I2C1TX
 40215  000038  754D               	dw	_Default_ISR shr (0+2)
 40216                           
 40217                           ; Vector 25 : I2C1
 40218  00003A  754D               	dw	_Default_ISR shr (0+2)
 40219                           
 40220                           ; Vector 26 : I2C1E
 40221  00003C  754D               	dw	_Default_ISR shr (0+2)
 40222                           
 40223                           ; Vector 27 : U1RX
 40224  00003E  7423               	dw	_UART1_rx_vect_isr shr (0+2)
 40225                           
 40226                           ; Vector 28 : U1TX
 40227  000040  754D               	dw	_Default_ISR shr (0+2)
 40228                           
 40229                           ; Vector 29 : U1E
 40230  000042  754D               	dw	_Default_ISR shr (0+2)
 40231                           
 40232                           ; Vector 30 : U1
 40233  000044  754D               	dw	_Default_ISR shr (0+2)
 40234                           
 40235                           ; Vector 31 : TMR0
 40236  000046  754D               	dw	_Default_ISR shr (0+2)
 40237                           
 40238                           ; Vector 32 : TMR1
 40239  000048  754D               	dw	_Default_ISR shr (0+2)
 40240                           
 40241                           ; Vector 33 : TMR1G
 40242  00004A  754D               	dw	_Default_ISR shr (0+2)
 40243                           
 40244                           ; Vector 34 : TMR2
 40245  00004C  754D               	dw	_Default_ISR shr (0+2)
 40246                           
 40247                           ; Vector 35 : CCP1
 40248  00004E  754D               	dw	_Default_ISR shr (0+2)
 40249                           
 40250                           ; Vector 36 : Undefined
 40251  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 40252                           
 40253                           ; Vector 37 : NCO1
 40254  000052  754D               	dw	_Default_ISR shr (0+2)
 40255                           
 40256                           ; Vector 38 : CWG1
 40257  000054  754D               	dw	_Default_ISR shr (0+2)
 40258                           
 40259                           ; Vector 39 : CLC1
 40260  000056  754D               	dw	_Default_ISR shr (0+2)
 40261                           
 40262                           ; Vector 40 : INT1
 40263  000058  72AE               	dw	_INT1_ISR shr (0+2)
 40264                           
 40265                           ; Vector 41 : CMP2
 40266  00005A  754D               	dw	_Default_ISR shr (0+2)
 40267                           
 40268                           ; Vector 42 : DMA2SCNT
 40269  00005C  754D               	dw	_Default_ISR shr (0+2)
 40270                           
 40271                           ; Vector 43 : DMA2DCNT
 40272  00005E  754D               	dw	_Default_ISR shr (0+2)
 40273                           
 40274                           ; Vector 44 : DMA2OR
 40275  000060  754D               	dw	_Default_ISR shr (0+2)
 40276                           
 40277                           ; Vector 45 : DMA2A
 40278  000062  754D               	dw	_Default_ISR shr (0+2)
 40279                           
 40280                           ; Vector 46 : I2C2RX
 40281  000064  754D               	dw	_Default_ISR shr (0+2)
 40282                           
 40283                           ; Vector 47 : I2C2TX
 40284  000066  754D               	dw	_Default_ISR shr (0+2)
 40285                           
 40286                           ; Vector 48 : I2C2
 40287  000068  754D               	dw	_Default_ISR shr (0+2)
 40288                           
 40289                           ; Vector 49 : I2C2E
 40290  00006A  754D               	dw	_Default_ISR shr (0+2)
 40291                           
 40292                           ; Vector 50 : U2RX
 40293  00006C  7437               	dw	_UART2_rx_vect_isr shr (0+2)
 40294                           
 40295                           ; Vector 51 : U2TX
 40296  00006E  742D               	dw	_UART2_tx_vect_isr shr (0+2)
 40297                           
 40298                           ; Vector 52 : U2E
 40299  000070  754D               	dw	_Default_ISR shr (0+2)
 40300                           
 40301                           ; Vector 53 : U2
 40302  000072  754D               	dw	_Default_ISR shr (0+2)
 40303                           
 40304                           ; Vector 54 : TMR3
 40305  000074  66EF               	dw	_TMR3_ISR shr (0+2)
 40306                           
 40307                           ; Vector 55 : TMR3G
 40308  000076  754D               	dw	_Default_ISR shr (0+2)
 40309                           
 40310                           ; Vector 56 : TMR4
 40311  000078  754D               	dw	_Default_ISR shr (0+2)
 40312                           
 40313                           ; Vector 57 : CCP2
 40314  00007A  754D               	dw	_Default_ISR shr (0+2)
 40315                           
 40316                           ; Vector 58 : Undefined
 40317  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 40318                           
 40319                           ; Vector 59 : CWG2
 40320  00007E  754D               	dw	_Default_ISR shr (0+2)
 40321                           
 40322                           ; Vector 60 : CLC2
 40323  000080  754D               	dw	_Default_ISR shr (0+2)
 40324                           
 40325                           ; Vector 61 : INT2
 40326  000082  754D               	dw	_Default_ISR shr (0+2)
 40327                           
 40328                           ; Vector 62 : Undefined
 40329  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 40330                           
 40331                           ; Vector 63 : Undefined
 40332  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 40333                           
 40334                           ; Vector 64 : Undefined
 40335  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 40336                           
 40337                           ; Vector 65 : Undefined
 40338  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 40339                           
 40340                           ; Vector 66 : Undefined
 40341  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 40342                           
 40343                           ; Vector 67 : Undefined
 40344  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 40345                           
 40346                           ; Vector 68 : Undefined
 40347  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 40348                           
 40349                           ; Vector 69 : Undefined
 40350  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 40351                           
 40352                           ; Vector 70 : TMR5
 40353  000094  6B81               	dw	_TMR5_ISR shr (0+2)
 40354                           
 40355                           ; Vector 71 : TMR5G
 40356  000096  754D               	dw	_Default_ISR shr (0+2)
 40357                           
 40358                           ; Vector 72 : TMR6
 40359  000098  74CD               	dw	_TMR6_ISR shr (0+2)
 40360                           
 40361                           ; Vector 73 : CCP3
 40362  00009A  754D               	dw	_Default_ISR shr (0+2)
 40363                           
 40364                           ; Vector 74 : CWG3
 40365  00009C  754D               	dw	_Default_ISR shr (0+2)
 40366                           
 40367                           ; Vector 75 : CLC3
 40368  00009E  754D               	dw	_Default_ISR shr (0+2)
 40369                           
 40370                           ; Vector 76 : Undefined
 40371  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 40372                           
 40373                           ; Vector 77 : Undefined
 40374  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 40375                           
 40376                           ; Vector 78 : Undefined
 40377  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 40378                           
 40379                           ; Vector 79 : Undefined
 40380  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 40381                           
 40382                           ; Vector 80 : CCP4
 40383  0000A8  754D               	dw	_Default_ISR shr (0+2)
 40384                           
 40385                           ; Vector 81 : CLC4
 40386  0000AA  754D               	dw	_Default_ISR shr (0+2)
 40387  0000AC                     ivt0x8_undefint:
 40388                           	opt callstack 0
 40389  0000AC  00FF               	reset	
 40390                           
 40391                           	psect	text200
 40392  000000                     __ptext200:
 40393                           	opt callstack 0
 40394                           
 40395                           	psect	rparam
 40396  0000                     
 40397                           	psect	temp
 40398  000001                     btemp:
 40399                           	opt callstack 0
 40400  000001                     	ds	32
 40401  0000                     wtemp0	set	btemp
 40402  0000                     wtemp1	set	btemp+2
 40403  0000                     wtemp2	set	btemp+4
 40404  0000                     wtemp3	set	btemp+6
 40405  0000                     wtemp4	set	btemp+8
 40406  0000                     wtemp5	set	btemp+10
 40407  0000                     wtemp8	set	btemp+1
 40408  0000                     ttemp0	set	btemp
 40409  0000                     ttemp1	set	btemp+3
 40410  0000                     ttemp2	set	btemp+6
 40411  0000                     ttemp3	set	btemp+9
 40412  0000                     ttemp5	set	btemp+1
 40413  0000                     ttemp6	set	btemp+4
 40414  0000                     ttemp7	set	btemp+8
 40415  0000                     ltemp0	set	btemp
 40416  0000                     ltemp1	set	btemp+4
 40417  0000                     ltemp2	set	btemp+8
 40418  0000                     lltemp0	set	btemp
 40419  0000                     lltemp1	set	btemp+8
 40420  0000                     lltemp2	set	btemp+16
 40421  0000                     lltemp3	set	btemp+24
 40422                           tosu	equ	0x3FFF
 40423                           tosh	equ	0x3FFE
 40424                           tosl	equ	0x3FFD
 40425                           stkptr	equ	0x3FFC
 40426                           pclatu	equ	0x3FFB
 40427                           pclath	equ	0x3FFA
 40428                           pcl	equ	0x3FF9
 40429                           tblptru	equ	0x3FF8
 40430                           tblptrh	equ	0x3FF7
 40431                           tblptrl	equ	0x3FF6
 40432                           tablat	equ	0x3FF5
 40433                           prodh	equ	0x3FF4
 40434                           prodl	equ	0x3FF3
 40435                           indf0	equ	0x3FEF
 40436                           postinc0	equ	0x3FEE
 40437                           postdec0	equ	0x3FED
 40438                           preinc0	equ	0x3FEC
 40439                           plusw0	equ	0x3FEB
 40440                           fsr0h	equ	0x3FEA
 40441                           fsr0l	equ	0x3FE9
 40442                           wreg	equ	0x3FE8
 40443                           indf1	equ	0x3FE7
 40444                           postinc1	equ	0x3FE6
 40445                           postdec1	equ	0x3FE5
 40446                           preinc1	equ	0x3FE4
 40447                           plusw1	equ	0x3FE3
 40448                           fsr1h	equ	0x3FE2
 40449                           fsr1l	equ	0x3FE1
 40450                           bsr	equ	0x3FE0
 40451                           indf2	equ	0x3FDF
 40452                           postinc2	equ	0x3FDE
 40453                           postdec2	equ	0x3FDD
 40454                           preinc2	equ	0x3FDC
 40455                           plusw2	equ	0x3FDB
 40456                           fsr2h	equ	0x3FDA
 40457                           fsr2l	equ	0x3FD9
 40458                           status	equ	0x3FD8


Data Sizes:
    Strings     1391
    Constant    492
    Data        1227
    BSS         1479
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     154
    BANK1           256      0     248
    BANK2           256      0     197
    BANK3           256      0     228
    BANK4           256      0     238
    BANK5           256      0      67
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    C.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    C.hist.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    C.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_120(CODE[1]), STR_82(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_117(CODE[3]), STR_113(CODE[3]), STR_108(CODE[3]), STR_103(CODE[3]), 
		 -> STR_98(CODE[3]), STR_94(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_117(CODE[3]), STR_113(CODE[3]), STR_108(CODE[3]), STR_103(CODE[3]), 
		 -> STR_98(CODE[3]), STR_94(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_83(CODE[127]), STR_81(CODE[3]), STR_80(CODE[3]), 
		 -> STR_79(CODE[19]), STR_78(CODE[19]), STR_77(CODE[19]), STR_76(CODE[19]), 
		 -> STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[24]), STR_72(CODE[15]), 
		 -> STR_71(CODE[15]), STR_70(CODE[15]), STR_69(CODE[10]), STR_68(CODE[10]), 
		 -> STR_67(CODE[19]), STR_66(CODE[19]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[21]), STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), 
		 -> STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), 
		 -> STR_53(CODE[21]), STR_52(CODE[20]), STR_51(CODE[21]), STR_50(CODE[21]), 
		 -> STR_49(CODE[21]), STR_48(CODE[22]), STR_47(CODE[22]), STR_46(CODE[22]), 
		 -> STR_45(CODE[23]), STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[29]), 
		 -> STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[22]), STR_38(CODE[22]), 
		 -> STR_37(CODE[22]), STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[17]), STR_26(CODE[16]), 
		 -> STR_25(CODE[16]), STR_24(CODE[21]), STR_23(CODE[21]), STR_22(CODE[21]), 
		 -> STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), STR_18(CODE[21]), 
		 -> STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[22]), 
		 -> STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_83(CODE[127]), STR_81(CODE[3]), STR_80(CODE[3]), 
		 -> STR_79(CODE[19]), STR_78(CODE[19]), STR_77(CODE[19]), STR_76(CODE[19]), 
		 -> STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[24]), STR_72(CODE[15]), 
		 -> STR_71(CODE[15]), STR_70(CODE[15]), STR_69(CODE[10]), STR_68(CODE[10]), 
		 -> STR_67(CODE[19]), STR_66(CODE[19]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[21]), STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), 
		 -> STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), 
		 -> STR_53(CODE[21]), STR_52(CODE[20]), STR_51(CODE[21]), STR_50(CODE[21]), 
		 -> STR_49(CODE[21]), STR_48(CODE[22]), STR_47(CODE[22]), STR_46(CODE[22]), 
		 -> STR_45(CODE[23]), STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[29]), 
		 -> STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[22]), STR_38(CODE[22]), 
		 -> STR_37(CODE[22]), STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[17]), STR_26(CODE[16]), 
		 -> STR_25(CODE[16]), STR_24(CODE[21]), STR_23(CODE[21]), STR_22(CODE[21]), 
		 -> STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), STR_18(CODE[21]), 
		 -> STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[22]), 
		 -> STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_65(CODE[9]), STR_64(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_65(CODE[9]), STR_64(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_89(CODE[4]), STR_88(CODE[4]), STR_85(CODE[4]), STR_84(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_89(CODE[4]), STR_88(CODE[4]), STR_85(CODE[4]), STR_84(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_63(CODE[3]), STR_62(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_83(CODE[127]), STR_81(CODE[3]), STR_80(CODE[3]), STR_79(CODE[19]), 
		 -> STR_78(CODE[19]), STR_77(CODE[19]), STR_76(CODE[19]), STR_75(CODE[19]), 
		 -> STR_74(CODE[19]), STR_73(CODE[24]), STR_72(CODE[15]), STR_71(CODE[15]), 
		 -> STR_70(CODE[15]), STR_69(CODE[10]), STR_68(CODE[10]), STR_67(CODE[19]), 
		 -> STR_66(CODE[19]), STR_61(CODE[21]), STR_60(CODE[21]), STR_59(CODE[21]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[20]), STR_51(CODE[21]), 
		 -> STR_50(CODE[21]), STR_49(CODE[21]), STR_48(CODE[22]), STR_47(CODE[22]), 
		 -> STR_46(CODE[22]), STR_45(CODE[23]), STR_44(CODE[23]), STR_43(CODE[23]), 
		 -> STR_42(CODE[29]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[22]), 
		 -> STR_38(CODE[22]), STR_37(CODE[22]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[17]), 
		 -> STR_26(CODE[16]), STR_25(CODE[16]), STR_24(CODE[21]), STR_23(CODE[21]), 
		 -> STR_22(CODE[21]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S7431_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_83(CODE[127]), STR_81(CODE[3]), STR_80(CODE[3]), STR_79(CODE[19]), 
		 -> STR_78(CODE[19]), STR_77(CODE[19]), STR_76(CODE[19]), STR_75(CODE[19]), 
		 -> STR_74(CODE[19]), STR_73(CODE[24]), STR_72(CODE[15]), STR_71(CODE[15]), 
		 -> STR_70(CODE[15]), STR_69(CODE[10]), STR_68(CODE[10]), STR_67(CODE[19]), 
		 -> STR_66(CODE[19]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[21]), 
		 -> STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), 
		 -> STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), 
		 -> STR_52(CODE[20]), STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[21]), 
		 -> STR_48(CODE[22]), STR_47(CODE[22]), STR_46(CODE[22]), STR_45(CODE[23]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[29]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), 
		 -> STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[17]), STR_26(CODE[16]), STR_25(CODE[16]), 
		 -> STR_24(CODE[21]), STR_23(CODE[21]), STR_22(CODE[21]), STR_21(CODE[26]), 
		 -> STR_20(CODE[26]), STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), 
		 -> STR_12(CODE[22]), STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 337
		 -> C(BIGRAM[336]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_83(CODE[127]), STR_81(CODE[3]), STR_80(CODE[3]), STR_79(CODE[19]), 
		 -> STR_78(CODE[19]), STR_77(CODE[19]), STR_76(CODE[19]), STR_75(CODE[19]), 
		 -> STR_74(CODE[19]), STR_73(CODE[24]), STR_72(CODE[15]), STR_71(CODE[15]), 
		 -> STR_70(CODE[15]), STR_69(CODE[10]), STR_68(CODE[10]), STR_67(CODE[19]), 
		 -> STR_66(CODE[19]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[21]), 
		 -> STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), 
		 -> STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), 
		 -> STR_52(CODE[20]), STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[21]), 
		 -> STR_48(CODE[22]), STR_47(CODE[22]), STR_46(CODE[22]), STR_45(CODE[23]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[29]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), 
		 -> STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[17]), STR_26(CODE[16]), STR_25(CODE[16]), 
		 -> STR_24(CODE[21]), STR_23(CODE[21]), STR_22(CODE[21]), STR_21(CODE[26]), 
		 -> STR_20(CODE[26]), STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), 
		 -> STR_12(CODE[22]), STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_83(CODE[127]), STR_81(CODE[3]), STR_80(CODE[3]), STR_79(CODE[19]), 
		 -> STR_78(CODE[19]), STR_77(CODE[19]), STR_76(CODE[19]), STR_75(CODE[19]), 
		 -> STR_74(CODE[19]), STR_73(CODE[24]), STR_72(CODE[15]), STR_71(CODE[15]), 
		 -> STR_70(CODE[15]), STR_69(CODE[10]), STR_68(CODE[10]), STR_67(CODE[19]), 
		 -> STR_66(CODE[19]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[21]), 
		 -> STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), 
		 -> STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), 
		 -> STR_52(CODE[20]), STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[21]), 
		 -> STR_48(CODE[22]), STR_47(CODE[22]), STR_46(CODE[22]), STR_45(CODE[23]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[29]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), 
		 -> STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[17]), STR_26(CODE[16]), STR_25(CODE[16]), 
		 -> STR_24(CODE[21]), STR_23(CODE[21]), STR_22(CODE[21]), STR_21(CODE[26]), 
		 -> STR_20(CODE[26]), STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), 
		 -> STR_12(CODE[22]), STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_65(CODE[9]), STR_64(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_65(CODE[9]), STR_64(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_65(CODE[9]), 
		 -> STR_64(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 9
		 -> H(BANK0[9]), 

    h	PTR struct H_data size(1) Largest target is 9
		 -> H(BANK0[9]), 

    h	PTR struct H_data size(1) Largest target is 9
		 -> H(BANK0[9]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 9
		 -> H(BANK0[9]), 

    h	PTR struct H_data size(1) Largest target is 9
		 -> H(BANK0[9]), 

    hist.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    hist.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    R.H.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    hist	PTR volatile struct hist_type size(2) Largest target is 337
		 -> C.hist(BIGRAM[113]), C(BIGRAM[336]), 

    R.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    R.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 172
		 -> R(BANK2[171]), 

    y.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 172
		 -> r_cal(BANK4[171]), 

    y.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    R.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_65(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_64(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK4[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 9
		 -> H(BANK0[9]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    S3352tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    C.hist.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1999spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1999spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  603262
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                     _load_hist_data
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                    _update_cal_data
                   _update_hist_data
                         _update_lcd
                      _wait_lcd_done
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _update_hist_data                                     3     0      3      88
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        7     7      0     615
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _load_hist_data                                       0     0      0       0
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     562
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     182
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31461
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                   9     9      0  127048
                             _WaitMs
                   _cal_current_zero
                     _clear_adc_scan
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _write_cal_data                                       7     7      0     593
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _CRC_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_IsBusy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_CalculatedResultGet                              7     4      3     209
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     6     4      2      94
 ---------------------------------------------------------------------------------
 (2) _CRC_8BitDataWrite                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     415
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     0      5     242
                        _check_range
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  250792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  125143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30377
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94854
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   94590
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31430
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31355
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31578
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   30152
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29999
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29607
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13817
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     335
                    _ADCC_Initialize
                  _CLKREF_Initialize
                     _CRC_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       4     4      0      92
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    5521
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    5431
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    5431
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    5431
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35866
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35776
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35776
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30377
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29999
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29607
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13817
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _CRC_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     _cal_current_zero
       _check_range
     _clear_adc_scan
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _write_cal_data
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
       _CRC_Initialize
       _CRC_IsBusy
       _CRC_Start
       _DATAEE_WriteByte
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _load_hist_data
     _start_bsoc
     _stop_bsoc
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_cal_data
   _update_hist_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay
   _write_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_WriteByte

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     532      69       16.2%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      43      15       26.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      EE      13       93.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E4      11       89.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C5       9       77.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F8       7       96.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     592      58        0.0%
DATA                 0      0     AC4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Feb 15 00:47:41 2020

                     _SPI1_Exchange8bit D282                __end_of_set_display_info D2FA  
                                     _C 08FF                                       _D 0A4F  
                                     _H 00F1                                       _P 009E  
                                     _R 0200                                       _S 01C7  
                                     _T F973                                       _V 0107  
      __end_of_TMR5_SetInterruptHandler CFC2            __end_of_start_switch_handler D262  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                       _update_cal_data C526                                      _bp FA7B  
                __end_of_FVR_Initialize D514                          _check_day_time 86F6  
                           __CFG_LVP$ON 000000                                     l171 D3D2  
                                   l809 D290                                     l675 CE7A  
                                   l942 C20E                                     _GIE 01FE97  
                                   _abs C826                                     _pad A904  
                                   fsr0 003FE9                                     fsr2 003FD9  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize D37E  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack D194  
                     _update_adc_result CAF6                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00BA                           _INT1_CallBack D128  
                          __CFG_ZCD$OFF 000000                                    l1004 CA72  
                                  l2103 92CE                                    l2009 B500  
                                  l2034 BAD2                                    l2150 AD30  
                                  l1271 D3FA                                    l1192 CAB2  
                                  l1504 62E0                                    l2072 C07C  
                                  l2321 3FC6                                    l1282 97A2  
                       _timer3ReloadVal 00C4                                    l1284 97A8  
                                  l1460 07BC                                    l2317 3C88  
                                  l2165 8912                                    l1445 0298  
                                  l2422 A960                                    l2238 AFB8  
                                  l2247 A5B6                                    l1439 005E  
                                  l3216 4FB6                                    l1480 0D72  
                                  l2169 890A                                    l2442 5AD4  
                                  l2522 1E96                                    l1722 BB66  
                                  l1458 07B6                                    l2507 19E6  
                                  l2363 7ABA                                    l3228 4E46  
                                  l3261 5530                                    l1813 AB24  
                                  l1805 8BEE                                    l1485 133C  
                                  l1469 0942                                    l1718 B7BA  
                                  l1590 C47C                                    l1806 8D4A  
                                  l1479 0B48                                    l3360 9464  
                                  l2560 7BA8                                    l3337 8F48  
                                  l1737 CBB8                                    l1853 D2F6  
                                  l2581 71FE                                    l2478 25B6  
                                  l2646 3562                    _ADCC_StartConversion D3FE  
                                  l3368 C866                                    l3297 47FA  
                                  l1953 59F0                                    l1796 CB4C  
                                  l3468 A48E                                    l2596 6788  
                                  l2942 9ADC                                    l3750 BE18  
                                  l3399 8266                                    l3735 8B32  
                                  l1993 BF9A                                    l2938 B2E0  
                                  l3763 BD94                                    l2949 9BB0  
                                  l2976 9A4E                                    l9012 5056  
                                  l9102 53AC                                    l9006 5016  
                                  l9112 53F6                                    l9032 5134  
                                  l9016 506C                                    l9050 51F2  
                                  l9026 50F4                                    l9018 509C  
                                  l9132 54AC                                    l9116 53FC  
                                  l9044 51B8                                    l9036 514A  
                                  l9302 47A8                                    l9126 5470  
                                  l9038 517A                                    l9304 47C2  
                                  l8600 4B30                                    l9144 5504  
                                  l9250 45EE                                    l9170 4076  
                                  l9162 4030                                    l8610 4BA2  
                                  l9146 5514                                    l9138 54DC  
                                  l9058 520C                                    l9330 9EB0  
                                  l9260 4630                                    l9180 40FE  
                                  l9172 40A6                                    l8620 4BDE  
                                  l8540 48E0                                    l9420 9A9A  
                                  l9092 536A                                    l9084 5338  
                                  l9076 52D2                                    l9068 529C  
                                  l9324 9E9A                                    l9412 B2DE  
                                  l9404 B268                                    l9270 467A  
                                  l9190 4174                                    l8702 4EB4  
                                  l8614 4BC2                                    l8534 489A  
                                  l9430 9B78                                    l9078 52E4  
                                  l9086 533C                                    l9350 9F76  
                                  l9256 460A                                    l9168 4070  
                                  l8616 4BD4                                    l8624 4C0E  
                                  l8552 494A                                    l8528 485A  
                                  l9336 9ED0                                    l9408 B2AA  
                                  l9520 A140                                    l9274 4680  
                                  l9186 413E                                    l8730 4F66  
                                  l8714 4F12                                    l8642 4CAA  
                                  l8570 49F2                                    l8562 49A0  
                                  l8546 4918                                    l8538 48B0  
                                  l9426 9B2A                                    l9098 5386  
                                  l9370 A80C                                    l9284 46F4  
                                  l9188 4144                                    l8724 4F3E  
                                  l8644 4CBC                                    l8652 4CF8  
                                  l8564 49D0                                    l8812 C856  
                                  l9508 9714                                    l9294 4764  
                                  l9198 4196                                    l8558 498A  
                                  l9438 9BAE                                    l9358 9FAA  
                                  l9374 A81E                                    l9446 C724  
                                  l8830 9406                                    l8910 BD84  
                                  l9288 473A                                    l8736 4F96  
                                  l8728 4F56                                    l8664 4DD0  
                                  l8648 4CC6                                    l9544 C5BE  
                                  l9480 99E6                                    l9472 99BA  
                                  l9456 9938                                    l9528 A1EC  
                                  l8682 4E68                                    l8674 4E2A  
                                  l8666 4DF6                                    l9378 A836  
                                  l9482 99FC                                    l9474 99D6  
                                  l8826 9402                                    l8684 4E7A  
                                  l8932 7E32                                    l9396 A8EA  
                                  l9388 A8B6                                    l8836 945C  
                                  l8950 7F4A                                    l8926 7DDE  
                                  l8854 BE08                                    l8688 4E86  
                                  l9496 9642                                    l8698 4EAE  
                                  l8938 7E78                                    l8970 8514  
                                  l8882 6D3A                                    l8892 6E40  
                                  l8884 6D8A                                    l8868 6C1C  
                                  STR_1 FE61                                    l8888 6DD2  
                                  STR_2 FE37                                    STR_3 FFD1  
                                  l8986 8648                                    l8978 859C  
                                  STR_4 FDB9                                    STR_5 FC05  
                                  STR_6 FC05                                    STR_7 FC05  
                                  STR_8 FECA                                    STR_9 FF1E  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    u6020 CD90  
                                  u6030 CD92                                    u7000 850E  
                                  u6130 4B56                                    _T6PR 003F93  
                                  u6140 4B76                                    u7020 8564  
                                  _PMD0 0039C0                                    u6141 4B70  
                                  _PMD1 0039C1                                    u7030 8596  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  u8000 C59A                                    u7040 85C8  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  u6330 4E8C                                    u6250 4CEE  
                                  u8010 C5BA                                    _PMD6 0039C6  
                                  _PMD7 0039C7                                    u6420 4F22  
                                  u6180 4C06                                    u7300 544A  
                                  u7220 5364                                    u7060 8680  
                                  u6350 4EA6                                    u6190 4C26  
                                  u6158 4B78                                    u7310 5484  
                                  u6255 4CDE                                    u7320 54C0  
                                  u7080 86D2                                    u6185 4BF6  
                                  u7305 543A                                    u7410 4184  
                                  u6290 4E18                                    u7260 53EE  
                                  u6700 6BB4                                    u6460 CD60  
                                  u6390 4F02                                    u9110 80A8  
                                  u6630 9454                                    u6710 6C00  
                                  u6470 CD62                                    u7520 46CE  
                                  u6640 9456                                    u6800 C8EA  
                                  u7425 4318                                    u6625 9436  
                                  u6705 6BAA                                    u7530 4708  
                                  u9130 8200                                    u6570 C83A  
                                  u7610 9F96                                    u6810 C8EC  
                                  u7435 43E0                                    u6395 4EF2  
                                  u7540 474E                                    u9140 8202  
                                  u6900 7E2E                                    u6580 9386  
                                  u9220 8AD8                                    u6820 BD42  
                                  u7525 46BE                                    u7445 45A8  
                                  u6750 6CE0                                    u6670 BDC6  
                                  u9230 8B06                                    u6830 BD44  
                                  u6911 7E38                                    u6735 6C3A  
                                  u7480 4672                                    u6920 7E72  
                                  u7720 B2DA                                    u7800 992C  
                                  u6736 6C40                                    u6680 BDC8  
                                  u9240 D1E2                                    u6585 937C  
                                  u6737 6C4E                                    u9225 8AD2  
                                  u6850 CDC0                                    u6930 7EA4  
                                  u7810 9966                                    u6770 6DB8  
                                  u6755 6CD6                                    u9227 8AC4  
                                  u6860 CDC2                                    u7660 A862  
                                  u9180 8A3E                                    u7900 963C  
                                  u9237 8AF8                                    u6950 7F82  
                                  u7590 9EFC                                    u7910 966E  
                                  u7815 995C                                    u6775 6DAE  
                                  u6880 7DD8                                    u7680 A8D6  
                                  u6970 7FD4                                    u7930 974C  
                                  u9187 8A30                                    u7780 C720  
                                  u7860 9A04                                    u9630 8EBC  
                                  u7790 9918                                    u7950 A13A  
                                  u9704 5556                                    u7880 9A2E  
                                  u7960 A16C                                    u9705 5550  
                                  u9810 5886                                    _PLLR 01CEE0  
                                  u7795 990E                                    u7891 9602  
                                  u9804 587E                                    u9724 5586  
                                  u7980 A224                                    u9805 5878  
                                  u9725 5580                                    u9670 B0D2  
                                  u9744 55A8                                    u9745 55A2  
                                  u9675 B0CC                                    u9764 578E  
                                  u9765 5788                                    u9870 C1CE  
                                  u9784 585C                                    u9785 5856  
                                  u9878 C1D0                                    u9895 C21E  
                                  u9896 C220                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR CE54  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0394  
                    __size_of_CRC_Start 0006                                    _cp_h FA8B  
                                  _cp_l FA87                                    _atoi 7FFC  
                                  _ctoa BC92                                    _main 0000  
                                  _dtoa 59F6                                    _nanf C356  
                                  _seed 01F0                                    _prec 003C  
                                  _nout 00C0                                    _spin FA03  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 7ABE  
                                  btemp 0001                                    _utoa 71BA  
                                  _xtoa 6744                  __end_of_check_adc_scan D4F4  
                         ___fpclassifyf 92D8                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 00C8               __end_of_SPI1_Exchange8bit D2A0  
             __size_of_clear_hid_pflags 0034                         _TMR3_Initialize C7DE  
           __size_of_set_load_relay_one 0010             __size_of_set_load_relay_two 0010  
                         __CFG_CSWEN$ON 000000                          _SPI1STATUSbits 003D17  
                     _UART1_rx_vect_isr D08C                            ___param_bank 000000  
                __end_of_check_day_time 891C                      ?_UART1_rx_vect_isr 0021  
             __size_of_DATAEE_WriteByte 0068                        _update_hist_data C016  
                      __end_of_INT0_ISR D49A                        __end_of_INT1_ISR CAF6  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma B7C2  
         __end_of_OSCILLATOR_Initialize D3D8                                   l10140 80D8  
                                 l10124 8016                                   l10150 81BA  
                                 l10142 80F0                                   l10134 80AC  
                                 l10126 8038                                   l10160 8256  
                                 l10144 8114                                   l10146 8152  
                                 l12100 7818                                   l12012 8F9A  
                                 l11302 C674                                   l12110 7854  
                                 l10512 556C                                   l10176 89A4  
                                 l12040 9106                                   l12024 9050  
                                 l12032 9102                                   l11306 C6A6  
                                 l10442 8E04                                   l10434 8D98  
                                 l10522 5692                                   l10506 553C  
                                 l10178 8A10                                   l11410 9DEA  
                                 l12122 78A6                                   l12106 7848  
                                 l12026 9084                                   l12300 6736  
                                 l10444 8E12                                   l11500 CB62  
                                 l12116 787E                                   l12052 C556  
                                 l10710 877C                                   l10454 8E74  
                                 l10446 8E28                                   l10534 57A6  
                                 l10526 5774                                   l11406 9D74  
                                 l12142 7926                                   l12134 7900  
                                 l12126 78B2                                   l11432 9180  
                                 l11424 9154                                   l10456 8E92  
                                 l10448 8E46                                   l10552 59BE  
                                 l10560 59D0                                   l12312 A4A4  
                                 l10730 8812                                   l10466 8EC6  
                                 l10458 8EA8                                   l10546 5922  
                                 l10538 5842                                   l14010 34EA  
                                 l13210 7768                                   l13202 76BA  
                                 l12250 B3AA                                   l10490 B0E0  
                                 l12066 C058                                   l11620 9FF2  
                                 l11436 9194                                   l10476 8F28  
                                 l12076 95CE                                   l14004 3490  
                                 l14020 350E                                   l10804 CBC2  
                                 l11460 BAAC                                   l12164 7A80  
                                 l11622 A000                                   l11630 A008  
                                 l13222 A930                                   l14014 34EE  
                                 l12254 B3E8                                   l10494 B11E  
                                 l11542 CB16                                   l12166 7AAA  
                                 l10744 88B8                                   l11632 A03A  
                                 l11616 9FDC                                   l13160 B936  
                                 l13232 A9A6                                   l11448 BA76  
                                 l12096 7802                                   l12328 A520  
                                 l12434 BE6A                                   l14202 38D8  
                                 l11618 9FEC                                   l10578 CEF2  
                                 l13170 B9C2                                   l13162 B958  
                                 l13226 A958                                   l13242 B004  
                                 l13410 1712                                   l13402 16A6  
                                 l10498 B132                                   l12098 7812  
                                 l12338 A590                                   l11820 D312  
                                 l12428 BE5A                                   l14212 3B2A  
                                 l12356 CA30                                   l13148 A3A4  
                                 l13236 A9F0                                   l13228 A96A  
                                 l13260 BCB0                                   l13332 5E2C  
                                 l13308 5D3E                                   l13420 184E  
                                 l14060 B62E                                   l10916 BEDC  
                                 l14140 AD4C                                   PRLOCK 0039EF  
                                 l14222 3C98                                   l11646 A0EC  
                                 l11638 A072                                   l13174 BA00  
                                 l13262 BCDC                                   l13414 1782  
                                 l13190 7592                                   l14038 B8C2  
                                 l14118 AA3C                                   l11566 BF58  
                                 l11590 A798                                   l11832 CE76  
                                 l14208 3AB0                                   l13328 5DF0  
                                 l13512 1E8E                                   l13504 1DC4  
                                 l13432 18D0                                   l13416 17EC  
                                 l10792 9894                                   l11664 AF72  
                                 l14226 3CBA                                   l14218 3BF0  
                                 l13602 240E                                   l13514 1EB0  
                                 l13346 1428                                   l14058 B5EC  
                                 l14082 B7C6                                   l10858 CE0C  
                                 l14146 ADF2                                   l11658 AF2C  
                                 l11754 B2FC                                   l11578 BF70  
                                 l11586 A736                                   l13612 245E  
                                 l13540 2036                                   l13452 1972  
                                 l13444 1910                                   l13436 18F8  
                                 l13380 15A8                                   l13700 71EE  
                                 l13196 7650                                   l14084 B7CE  
                                 l14412 8BBE                                   l10788 986A  
                                 l14238 3FBE                                   l14190 3782  
                                 l14182 36AA                                   l13294 5B0E  
                                 l13286 5AC4                                   l13470 1A34  
                                 l13454 197E                                   l13438 190A  
                                 l13358 146C                                   l13366 14C2  
                                 l14086 B7D8                                   l14094 B7EE  
                                 l14334 5F2E                                   l11758 B378  
                                 l10896 C5FA                                   l13528 1FAE  
                                 l13480 1AF6                                   l13376 1566  
                                 l13384 15D4                                   l13800 6AB4  
                                 l14088 B7E6                                   l14096 B81A  
                                 l14186 3716                                   l14178 3656  
                                 l11858 CA5A                                   l13298 5B2C  
                                 l13490 1CA2                                   l13474 1A6C  
                                 l13394 1678                                   l13378 1592  
                                 l14426 8CE6                                   l14346 5FA4  
                                 l14338 5F42                                   l11876 CA9A  
                                 l13628 2516                                   l13548 20A0  
                                 l13556 210C                                   l13564 221E  
                                 l13708 724A                                   l13740 6778  
                                 l14540 0270                                   l14198 3884  
                                 l13590 2352                                   l13718 7440  
                                 l13902 2BB0                                   l14710 1012  
                                 l14606 061C                                   l14630 07C0  
                                 l13592 236C                                   l13576 22B6  
                                 l13672 7C4A                                   l13664 7BDE  
                                 l13648 7B2A                                   l13760 684E  
                                 l13752 67EE                                   l13840 26DC  
                                 l14384 622C                                   l14720 1194  
                                 l14632 07EE                                   l14624 07AC  
                                 l14480 0066                                   l13682 7D00  
                                 l13746 67B2                                   l13922 2DC2  
                                 l13914 2D0A                                   l13842 26F2  
                                 l14706 0FB0                                   l14722 11C0  
                                 l14546 02B2                                   l14482 0078  
                                 l14474 0040                                   l13668 7C1A  
                                 l13860 2824                                   l14652 0848  
                                 l14644 0822                                   l14476 0048  
                                 l13686 7D3C                                   l13678 7CD4  
                                 l13926 2DF6                                   l13862 285E  
                                 l13838 26A2                                   l13776 6944  
                                 l13784 69CA                                   l13880 29D8  
                                 l13864 2874                                   l14736 1212  
                                 l13946 2F56                                   l13890 2A70  
                                 l14682 0954                                   l14594 0542  
                                 l13956 3004                                   l14772 12EC  
                                 l14764 12B6                                   l14676 0936  
                                 l14748 1266                                   l13990 3358  
                                 l13966 3126                                   l14766 12CE  
                                 l14758 12A4                                   l14694 0A54  
                                 l13976 31DC                                   l14776 1312  
                                 l13898 2B5C                                   l14786 1368  
                       __end_of___aodiv 7FFC                            _Volts_to_SOC B2EA  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 4FC0                                   _ADCLK 003EFF  
                       __end_of___aomod 86F6                                   _ADPCH 003EF1  
                       __end_of___fldiv 553A                                   _ADREF 003EFD  
                       __end_of___awdiv 9FC4                         __end_of___flneg C74E  
                                 STR_10 FDA4                                   STR_11 FB5F  
                                 STR_12 FC30                                   STR_20 FB2B  
                                 STR_13 FD0C                                   STR_21 FB45  
                                 STR_22 FF33                                   STR_30 FCCA  
                                 STR_14 FC04                                   STR_15 FDE3  
                                 STR_23 FDCE                                   STR_31 FCB4  
                                 STR_24 FEA0                                   STR_16 FDF8  
                                 STR_32 FC9E                                   STR_40 FBA8  
                                 STR_25 FF93                                   STR_17 FEDF  
                                 STR_33 FC88                                   STR_41 FBED  
                         __CFG_WDTE$OFF 000000                                   STR_18 FE8B  
                                 STR_50 FE22                                   STR_34 FD4E  
                                 STR_42 FB0E                                   STR_27 FF82  
                                 STR_51 FE0D                                   STR_35 FD22  
                                 STR_19 FC1A                                   STR_43 FB91  
                                 STR_60 FD8F                                   STR_52 FF48  
                                 STR_36 FD38                                   STR_28 FCF6  
                                 STR_44 FBBF                         __end_of___awmod A904  
                                 STR_61 FEF4                                   STR_53 FEB5  
                                 STR_29 FCE0                                   STR_37 FC46  
                                 STR_45 FBD6                                   STR_62 FFFB  
                                 STR_70 FFA3                                   STR_54 FD7A  
                                 STR_46 FD64                                   STR_38 FC5C  
                                 STR_47 FD64                                   STR_71 FFA3  
                                 STR_63 FFF8                                   STR_55 FF09  
                                 STR_39 FC72                                   STR_56 FE76  
                                 STR_48 FD64                                   STR_72 FFA3  
                                 STR_64 FFB2                                   _ADRPT 003EEC  
                                 STR_65 FFC8                                   STR_49 FE76  
                                 STR_57 FD8F                                   STR_73 FB79  
                                 STR_82 FB0D                                   STR_66 FF5C  
                                 STR_58 FE4C                                   STR_67 FF5C  
                                 STR_59 FE76                                   STR_75 FF6F  
                                 STR_83 FA8F                                   STR_92 FFE9  
                                 STR_84 FFD6                                   STR_68 FFBE  
                                 STR_69 FFBE                                   STR_85 FFDE  
                                 STR_94 FFE9                                   STR_96 FFEF  
                                 STR_88 FFDA                         __end_of___flmul 4804  
                                 STR_89 FFE2                                   STR_98 FFEF  
                       __end_of___flsub C8B2                         __end_of___fltol 9A58  
                                 u10100 D43C                                   u10035 C926  
                                 u10205 C26C                                   u10206 C26E  
                                 u10150 BED8                                   u10400 BAA6  
                                 u10180 C238                                   u12100 5A28  
                                 u10084 9816                                   u10085 9810  
                                 u10350 9132                                   u10255 D42A  
                                 u11151 C04C                                   u10520 D22C  
                                 u12200 5DAC                                   u12120 5A98  
                                 u12040 B07E                                   u13000 689A  
                                 u10256 D42C                                   u11080 9102  
                                 u10265 D41A                                   u11161 C06E  
                                 u12210 5DB0                                   u13010 689C  
                                 u10266 D41C                         __end_of___lodiv 9774  
                                 u11091 C530                                   u12140 5AAA  
                                 u12300 1510                                   u13100 6A40  
                                 u10380 BA72                                   u10620 AF18  
                                 u10198 C23A                                   u10526 D22E  
                                 u12230 5DC6                                   u12310 1512  
                                 u13110 6A44                                   u13030 68FA  
                                 u12047 B070                                   u12160 5AFA  
                                 u13040 68FC                                   u12170 5D52  
                                 u12090 5A26                                   u13210 28BC  
                                 u10650 AF5E                                   _U1P1H 003DED  
                                 u12420 18DE                                   u12340 1622  
                                 u13060 69C6                                   u13300 2C38  
                                 u13220 28BE                                   _U1P2H 003DEF  
                                 u12181 5D82                                   u12190 5D98  
                                 u12350 1624                                   u12270 1456  
                                 u13070 69E6                                   u13230 28E4  
                                 u10638 AF1A                                   u14030 1202  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 u12191 5D96                                   _T3CLK 003FA9  
                                 u13400 3230                                   u13160 273A  
                                 u10680 AFA4                                   u14040 121C  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u13081 6A16                                   u13065 69A8  
                                 u12450 1942                                   u13090 6A2C  
                                 u13330 2EB0                                   u13170 273C  
                                 u14050 122E                                   _U1P3L 003DF0  
                                 u13091 6A2A                                   u13420 33E0  
                                 u13340 2EB2                                   u13180 2762  
                                 u10668 AF60                                   u14036 1204  
                                 u11910 A414                                   u12390 188A  
                                 u14046 121E                                   _U2P1L 003DD4  
                                 u11920 B986                                   u12720 2434  
                                 u12560 1D94                                   u13280 2AC4  
                                 u13440 B8A2                                   u14056 1230  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u12490 19C4                                   u10698 AFA6  
                                 _U2P3L 003DD8                                   u12740 24EA  
                                 u12660 2260                                   u12820 7C40  
                                 u13700 60EA                                   u12750 24EC  
                                 u12830 7C86                                   u13710 6114  
                                 u11927 B978                                   u12911 7482  
                                 _T5CLK 003F9D                                   u12920 7498  
                                 u13800 8D38                         __end_of___lomod A246  
                                 u12921 7496                                   u13705 60DC  
                                 u11890 A398                                   u12930 74AC  
                                 u13715 6106                                   u12860 7D62  
                                 u12940 74B0                                   u13900 0776  
                                 _T2HLT 003FAD                                   u12837 7C78  
                                 u11990 77DC                                   u12880 71D4  
                                 u12960 675E                                   _T5CON 003F9A  
                                 u13860 03CC                                   u12990 6846  
                                 u13790 8D36                                   u13880 064A  
                                 _T6CON 003F94                                   u13890 0774  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 00AB                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0026                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98               __end_of_update_adc_result CB30  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR D534                     __size_of_CRC_IsBusy 0010  
               __size_of_clear_adc_scan 0006                      _current_sensor_cal 5E76  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 9D1E  
                         __CFG_WRTC$OFF 000000                        _cal_current_zero BA4A  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR AEE6  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR D34E  
                          _DMA1CON1bits 003BFD              __size_of_send_lcd_data_dma 004A  
                       _DATAEE_ReadByte CCDA                                   _fabsf B512  
                                 _flags 003E                    __size_of_check_range 0080  
             __size_of_CRC_ReverseValue 00CE                                   _r_cal 0400  
              __size_of_calc_model_data 045A                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD            __end_of_get_ac_charger_relay D48A  
                                 _fputc A374              __size_of_send_lcd_cmd_long 0040  
                       __end_of_isalpha C8F6                                   _fputs B9B2  
                       __end_of_isdigit CDCC                         __end_of_ivln2_h FA87  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand CBD6  
                                 _width 003A                                   _putch D318  
          __end_of_set_ac_charger_relay D460                         __end_of_islower CD6C  
                       __end_of_isspace C5CE                _INT1_SetInterruptHandler CFEA  
                       __end_of_set_dac B512                         __end_of_isupper CD9C  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw0 003FEB                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler CF72  
           _UART1_SetRxInterruptHandler CF4A                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf AC32                         __end_of_tolower BE22  
                       __end_of_strncmp 8B3C                         __end_of_toupper BD9E  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr D0B4  
              __size_of_SPI1_Initialize 0016                 __end_of_update_cal_data C57C  
                       _TMR5_Initialize C796                   __end_of_ringBufS_init CED2  
                       __initialization A5BA                       _UART2_rx_vect_isr D0DC  
                          __end_of_cp_h FA8F                            __end_of_cp_l FA8B  
                          __end_of_atoi 8270                            __end_of_ctoa BD1A  
                          __end_of_main 137C                            __end_of_dtoa 5E76  
                          __end_of_nanf C3B8                            __end_of_spin FA7B  
                          __end_of_stoa 7D7C                            __end_of_utoa 74FA  
                          __end_of_xtoa 6AFE                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0021                 __end_of_TMR2_Initialize D396  
                 __end_of_send_lcd_data D128                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button CA38                       __end_of_CRC_Start D51A  
              _TMR5_SetInterruptHandler CF9A                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 00A2  
                     _port_data_dma_ptr D4B4                      esr_check@esr_state 00CA  
                   ??_UART2_rx_vect_isr 0026                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize CE80                         _PWM8_Initialize D3AC  
                      _UART1_Initialize C74E                       _UART2_tx_vect_isr D0B4  
                    _UART2_Transmit_ISR CE54                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan C290                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  STR_101 FFEC  
                                STR_103 FFEC                                  STR_111 FFF5  
                                STR_113 FFF5                                  STR_106 FFF2  
                                STR_115 FFE6                                  STR_108 FFF2  
                                STR_117 FFE6                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue C8F6                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0021  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  i1l1021 AE96  
                                _RB6PPS 003A0E                                  i1l1209 9C86  
                  _start_switch_handler D242                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize C826  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright D46E                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  _NVMDAT 0039E3  
                  __size_of_hid_display 0122                                  u984_25 D45A  
                                u984_26 D45C                                  u994_20 879E  
                      __end_of___xxtofl 8F52   __end_of_ADCC_DischargeSampleCapacitor D4FC  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor D4F4  
              __end_of_send_lcd_cmd_dma D2BE                         _TMR3_WriteTimer CA78  
                   ??_UART2_tx_vect_isr 0026               __end_of_UART2_rx_vect_isr D104  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize D4AA  
                      _UART2_Initialize C3B8                                  _WaitMs CBA0  
                       _conv_raw_result 553A                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 9A58  
                                ___fleq B226                       _ADCC_ThresholdISR C158  
                        __CFG_STVREN$ON 000000                                  _crcObj 00D5  
                        _ringBufS_flush BADC                                  _efgtoa 137C  
                                _floorf 6AFE                       dac_spi_control@S0 0042  
                     dac_spi_control@S1 00CE                       dac_spi_control@S2 00CD  
                     dac_spi_control@SB 00CB                       dac_spi_control@SC 00CC  
                    ?_ADCC_ThresholdISR 0021                                  _memset 74FA  
                  __size_of_help_button 0038                                  clear_0 A64E  
                                clear_1 A662                                  clear_2 A674  
                                clear_3 A680                                  clear_4 A68C  
                                clear_5 A698                                  clear_6 A6A4  
                                clear_7 A6B0                                  clear_8 A6BC  
             __end_of_port_data_dma_ptr D4BE                  __size_of_read_cal_data 01CA  
                                _printf C2F4                      _eaDogM_WriteString B86A  
               __end_of_DATAEE_ReadByte CD0C                                  _strcpy AFBC  
                             ?_ADCC_ISR 0021                                  _strlen B910  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 06FF  
                       _ADCC_Initialize C0EE                          _PMD_Initialize D3D8  
            __size_of_update_adc_result 003A               __end_of_UART2_tx_vect_isr D0DC  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0021                  __end_of_start_adc_scan C2F4  
                          __mediumconst F8A2                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay C4CC                        __end_of_spinners AE02  
                      __end_of_vfprintf B66C                              _StartTimer C9B8  
                    __size_of___asfladd 0078           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize C7DE                       _SYSTEM_Initialize C620  
                            __accesstop 0060                 __end_of__initialization A6CE  
                             ?_INT0_ISR 0021                               ?_INT1_ISR 0021  
                  __end_of_display_help D50C                    __end_of_display_info D504  
             __end_of_CLKREF_Initialize D4B4                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer CA38  
                 _set_temp_display_help D440                        _clear_hid_pflags CC72  
                 __end_of_TMR3_CallBack D194               __end_of_ADCC_ThresholdISR C1C2  
                    __size_of_calc_bsoc 0A6E                  __end_of_ringBufS_flush BB6E  
                        __pcstackCOMRAM 0021                              ___inthi_sp 12CC  
                            ___intlo_sp 1966                            __pidataBANK0 D4E2  
                          __pidataBANK1 B15E                            __pidataBANK2 B66C  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf B5C0  
                             ?_TMR3_ISR 0021                               ?_TMR5_ISR 0021  
                             ?_TMR6_ISR 0021                        _DATAEE_WriteByte C1C2  
                        ivt0x8_undefint 00AC                           __end_of_fputc A498  
                         __end_of_fputs BA4A                    _get_ac_charger_relay D47C  
                         __end_of_srand CC0A                   __end_of_TMR5_CallBack D170  
                         __end_of_putch D332                    _set_ac_charger_relay D450  
               __end_of_PWM8_Initialize D3C2                 __end_of_TMR6_Initialize CEAA  
                     _adc_int_t_handler BE22                  __end_of_PMD_Initialize D3EC  
                            __end_of_bp FA83                              ??_ADCC_ISR 0021  
                 __end_of_TMR6_CallBack D1DC             __size_of_EXT_INT_Initialize 0034  
              calc_bsoc@log_update_wait 0040                  __size_of_calc_ror_data 0186  
                         _DMA1_DMAA_ISR D4CC                   TMR3_ISR@CountCallBack 00C2  
                        _clear_adc_scan D51A                      __size_of_hid_input 00D6  
                    __end_of_CRC_IsBusy D440                  __size_of_mode_lamp_dim 0018  
                      _CRC_ReverseValue B090                _UART2_RxInterruptHandler 00B7  
             __end_of_SYSTEM_Initialize C66E                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer CAB8  
                            __pbssBANK0 0060                              __pbssBANK1 01C7  
                            __pbssBANK2 02AB                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            __pbssBANK6 0600                __end_of_update_hist_data C084  
                            _check_help 8B3C                           _read_cal_data 8F52  
               __end_of_conv_raw_result 59F6                      __size_of_esr_check 02D8  
                 _INT0_InterruptHandler 00BD                              ??_INT0_ISR 0021  
                            ??_INT1_ISR 0027                       __end_of_TimerDone CEFA  
                      _DMA1_DMADCNT_ISR D4C0                         _convert_dac_raw A6D4  
                    __size_of_init_bsoc 0246              __size_of_UART2_rx_vect_isr 0028  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma CD0C                   __end_of_wait_lcd_done D1FE  
              __end_of_cal_current_zero BADC        __end_of_TMR3_SetInterruptHandler CFEA  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler CF9A  
                            ??_TMR3_ISR 00D8                 __end_of_ADCC_Initialize C158  
                            ??_TMR5_ISR 002B               __end_of_adc_int_t_handler BEA4  
                            ??_TMR6_ISR 0026                       __end_of___asfladd C016  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
                    __size_of_set_dac_a 0034                      __size_of_set_dac_b 0034  
  __end_of_ADCC_SetADTIInterruptHandler D062   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler D03A                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                               _CRCACCH 003963                                 _CRCACCL 003962  
               __size_of_load_hist_data 0018                                 _CRCDATH 003961  
                               _CRCDATL 003960                       _UART1_Receive_ISR D2FA  
                               _CRCCON0 003968                                 _CRCCON1 003969  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan D520                                 u1024_20 CB70  
                               u1024_26 CB72                                 u1017_20 D486  
                               _CRCXORH 003967                                 _CRCXORL 003966  
                               u1053_28 9FE2                                 u1055_20 9FFC  
                               u1055_21 9FF6                          ?_DMA1_DMAA_ISR 0021  
                      _DMA1_DMASCNT_ISR D49C                                 _U1ERRIE 003DFA  
                               u1145_44 BE8A                                 u1145_45 BE84  
                    __size_of_set_vterm 001E                                 u1059_24 A0E2  
                               _U1ERRIR 003DF9                                 u1059_25 A0DE  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               u1095_48 D1C8                                 u1087_48 D1A4  
                               u1361_20 3CAA                                 u1089_28 D138  
                               u1098_28 D15C                                 u1359_20 3BE0  
                               u1366_28 D180                       _CRC_8BitDataWrite D3EC  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0021  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                         _dac_spi_control BF24  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                               _NVMADRH 0039E1                                 _NVMADRL 0039E0  
                     __end_of_calc_bsoc 3FDA                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _NVMCON2 0039E6  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch CDFA  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer CA78  
               __size_of_switch_handler 0142                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one D430              __end_of_set_load_relay_two D420  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 946E                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim D366                                 __Lparam 0000  
              __end_of_UART1_Initialize C796                       __end_of_hid_input AFBC  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 7D7C  
                               ___fladd 4804                                 ___aomod 84B6  
                               ___fldiv 4FC0                                 ___awdiv 9E76  
                               ___flneg C706                                 ___awmod A7EC  
                               ___flmul 3FDA                                 ___flsub C86C  
                               ___fltol 98E6                                 ___lodiv 95F4  
                               ___lomod A106               __end_of_UART1_Receive_ISR D318  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display AD1C                                 __pcinit A5BA  
              __end_of_mode_lamp_bright D47C                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand D460  
                               __ramtop 2000               __end_of_CRC_8BitDataWrite D3FE  
                               __ptext0 0000                                 __ptext1 C016  
                               __ptext2 C526                                 __ptext3 C418  
                               __ptext4 D242                                 __ptext5 CBD6  
                               __ptext6 CC0A                                 __ptext7 CC3E  
                               __ptext8 A6D4                                 __ptext9 B45C  
                     __end_of_esr_check 7ABE                       _UART2_Receive_ISR D262  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize D3C2                            __size_of_abs 0046  
                          __size_of_pad 0114                                 us709999 86E4  
                     __end_of_init_bsoc 84B6                                 _isalpha C8B2  
                               _isdigit CD9C                                 _ivln2_h FA83  
                             _T3CONbits 003FA6                                 us698999 7FE6  
                               us794999 975E                                 _mode_sw 00CF  
                               us799999 A236                       __end_of_lp_filter 92D8  
                               _islower CD3C                                 _isspace C57C  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
                               _set_dac B45C                __end_of_UART2_Initialize C418  
                               _isupper CD6C                               _CRC_Start D514  
            __size_of_SYSTEM_Initialize 004E                                 _sprintf AB28  
                               _tolower BD9E                   __size_of_display_help 0008  
                               _utctime 0096                 __end_of_convert_dac_raw A7EC  
                 __size_of_display_info 0008                                 _strncmp 891C  
                               _toupper BD1A                    end_of_initialization A6CE  
             __size_of_convert_adc_data 00B8                               _SCANHADRH 00397A  
                             _SCANHADRL 003979                               _SCANHADRU 00397B  
                             _SCANLADRH 003977                               _SCANLADRL 003976  
                    _check_enter_button C9F8                               _SCANLADRU 003978  
                     __end_of_set_dac_a CC72                       __end_of_set_dac_b CC3E  
                             i1u1381_20 9C7C     __end_of_UART2_SetRxInterruptHandler CF4A  
           _UART2_SetRxInterruptHandler CF22                               i2u1150_48 C18E  
                             i2u1150_49 C1A2                               i2u1152_48 D0A0  
                             i2u1154_48 D0C8                               i2u1156_48 D0F0  
                             i2u1148_48 CE40                 check_day_time@day_delay 0041  
                     __end_of_set_vterm D2DC                       __end_of_vfpfcnvrt 356C  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 0082  
                   __size_of_StartTimer 0040                       __end_of_start_lcd D52C  
             __end_of_UART2_Receive_ISR D282                          wdtdelay@dcount 009A  
               __end_of_dac_spi_control BF9E             __size_of_current_sensor_cal 0474  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0027  
                 _INT1_InterruptHandler 00BA                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc D532                               _PORTDbits 003FCD  
              _TMR3_SetInterruptHandler CFC2                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler CF72                            _display_help D504  
                 _TMR5_InterruptHandler 00A5                            _display_info D4FC  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags CCA6  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler D08A  
           _ADCC_SetADIInterruptHandler D062                              _update_lcd AA18  
                       _calc_model_data 62EA                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc C418  
              __end_of_DATAEE_WriteByte C22A                         _DMA1_Initialize C084  
                   __end_of_check_range BF24                              _start_bsoc D220  
                __size_of_send_lcd_data 0024                         _SPI1_Initialize D396  
                 __end_of_get_vterm_ptr CDFA                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                __end_of_CRC_ReverseValue B15E  
                        __end_of_WaitMs CBD6            __end_of_INTERRUPT_Initialize C290  
                            _vterm_dump A246                          __end_of___flge 9BBA  
                        __end_of___fleq B2EA    __end_of_INT0_DefaultInterruptHandler D540  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler D53E  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize C4CC  
                         __pidataBIGRAM 6E6A                          _load_hist_data D34E  
                        __end_of_efgtoa 25C0              __size_of_CRC_8BitDataWrite 0012  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 6E6A             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 007A                          __end_of_memset 77E6  
                        __end_of_printf C356                __end_of_DMA1_DMADCNT_ISR D4CA  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack D1B8  
                        __end_of_strcpy B090                          __end_of_strlen B9B2  
                   start_initialization A5BA                 __size_of_write_cal_data 0158  
  __end_of_TMR5_DefaultInterruptHandler CBA0   __size_of_TMR5_DefaultInterruptHandler 0038  
          _TMR5_DefaultInterruptHandler CB68         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs C86C                   __end_of_INT1_CallBack D14C  
             __size_of_set_display_info 001E                             __end_of_pad AA18  
                  __size_of_Default_ISR 0006                 __size_of_CRC_Initialize 0092  
                  __end_of_send_lcd_cmd C9B8                          _switch_handler 9FC4  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 006C                   __end_of___fpclassifyf 946E  
                         _uart2RxBuffer 0600                __end_of_DMA1_DMASCNT_ISR D4AA  
                         _uart2TxBuffer 0354                          _DMA1_DMAOR_ISR D4D8  
                   __end_of_hid_display A5BA              __end_of_send_port_data_dma C620  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6         __end_of_CRC_CalculatedResultGet 98E6  
                             _TimerDone CED2                           _ringBufS_init CEAA  
                __end_of_load_hist_data D366                             __pdataBANK0 00F1  
                           __pdataBANK1 0100                             __pdataBANK2 0200  
            __size_of_UART2_Receive_ISR 0020                     __size_of_get_switch 002C  
            __end_of_EXT_INT_Initialize CCDA                __size_of_update_cal_data 0056  
               __end_of_calc_model_data 6744                           _send_lcd_data D104  
                   __end_of_help_button CB68         __end_of_eaDogM_WriteStringAtPos B86A  
                   __end_of_BVSOC_TABLE F973                               ___asfladd BF9E  
                  calc_model_data@bcror 008E                             __pbssBIGRAM 0A4F  
               __end_of_DMA1_Initialize C0EE                    calc_model_data@bvror 0092  
                           __pbssCOMRAM 003A                             _check_range BEA4  
      __end_of_INT0_SetInterruptHandler D03A                           __pcstackBANK0 00D8  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler A106                             _CRCCON0bits 003968  
                           _CRCCON1bits 003969                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize D3AC                _UART1_RxInterruptHandler 00B1  
              _UART2_TxInterruptHandler 00B4                               __end_of_T FA03  
                      _convert_adc_data B3A4                               _calc_bsoc 356C  
             __size_of_ringBufS_put_dma 00AA                            _init_display AC32  
                __end_of_DMA1_DMAOR_ISR D4E2                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 00A8                      calc_ror_data@bcror 0086  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize C526  
                    calc_ror_data@bvror 008A                  _PIN_MANAGER_Initialize BB6E  
              __size_of_TMR3_Initialize 0048                    __end_of_wait_lcd_set D526  
                         __pmediumconst F8A2                               __ptext100 C57C  
                             __ptext101 CD9C                               __ptext110 C9B8  
                             __ptext102 D2BE                               __ptext111 D4FC  
                             __ptext103 D440                               __ptext200 0000  
                             __ptext120 4FC0                               __ptext112 D504  
                             __ptext104 D2DC                               __ptext121 9A58  
                             __ptext113 C9F8                               __ptext105 D366  
                             __ptext130 C3B8                               __ptext122 62EA  
                             __ptext114 946E                               __ptext106 D46E  
                             __ptext131 CEFA                               __ptext123 D52C  
                             __ptext115 B512                               __ptext107 C8F6  
                             __ptext140 CFC2                               __ptext132 CF22  
                             __ptext124 D220                               __ptext116 553A  
                             __ptext108 CB30                               __ptext141 D37E  
                             __ptext133 C74E                               __ptext125 911C  
                             __ptext117 C356                               __ptext109 CED2  
                             __ptext150 CFEA                               __ptext142 D396  
                             __ptext134 CF4A                               __ptext126 C86C  
                             __ptext118 D1FE                               __ptext151 D012  
                             __ptext143 D3AC                               __ptext135 CE80  
                             __ptext127 4804                               __ptext119 8D4E  
                             __ptext160 D128                               __ptext152 C4CC  
                             __ptext144 D3D8                               __ptext136 CF72  
                             __ptext128 3FDA                               __ptext161 D53A  
                             __ptext153 C084                               __ptext145 BB6E  
                             __ptext137 C796                               __ptext129 C620  
                             __ptext170 9BBC                               __ptext162 9FC4  
                             __ptext154 BC00                               __ptext146 D3C2  
                             __ptext138 CF9A                               __ptext171 CA78  
                             __ptext163 AE04                               __ptext155 D4AA  
                             __ptext147 C22A                               __ptext139 C7DE  
                             __ptext180 D53E                               __ptext172 D170  
                             __ptext164 CA38                               __ptext156 C0EE  
                             __ptext148 D50C                               __ptext181 D534  
                             __ptext173 D53C                               __ptext165 D14C  
                             __ptext157 D03A                               __ptext149 CCA6  
                             __ptext190 CE54                               __ptext182 CE28  
                             __ptext174 356C                               __ptext166 CB68  
                             __ptext158 D062                               __ptext191 D0DC  
                             __ptext183 BE22                               __ptext175 C5CE  
                             __ptext167 86F6                               __ptext159 CAB8  
                             __ptext192 D262                               __ptext184 D540  
                             __ptext176 D4B4                               __ptext168 D450  
                             __ptext193 D334                               __ptext185 D542  
                             __ptext177 BF9E                               __ptext169 D47C  
                             __ptext194 D1B8                               __ptext186 C158  
                             __ptext178 D48C                               __ptext195 C66E  
                             __ptext187 D08C                               __ptext179 D194  
                             __ptext196 D49C                               __ptext188 D2FA  
                             __ptext197 D4C0                               __ptext189 D0B4  
                             __ptext198 D4CC                               __ptext199 D4D8  
                             _hid_input AEE6                      __end_of_StartTimer C9F8  
                    _set_load_relay_one D420                      _set_load_relay_two D410  
                     __size_of_wdtdelay 005A                       __size_of_spinners 00E6  
                     __size_of_vfprintf 00AC                                _ADCC_ISR CE28  
                __CFG_BBSIZE$BBSIZE_512 000000                               fabsf@F463 007E  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
                             _esr_check 77E6                 __size_of_get_raw_result 0022  
                        __size_of_fabsf 00AE                               _init_bsoc 8270  
                __size_of_wait_lcd_done 0022                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
              __size_of_DATAEE_ReadByte 0032                               _lp_filter 911C  
                           _hid_display A498                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize C22A  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0021                                _INT0_ISR D48C  
                              _INT1_ISR CAB8                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
                              _LATFbits 003FBF       __size_of_INT1_SetInterruptHandler 0028  
                              _SCANCON0 00397C                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _SCANTRIG 00397D  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 02AB  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                          _SPI1CON0bits 003D14                            _SPI1CON1bits 003D15  
                             _set_dac_a CC3E                               _set_dac_b CC0A  
                             _ring_buf1 04AB                               _ring_buf2 0500  
                              _PIR0bits 0039A0                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack D170                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                __size_of_TMR5_Initialize 0048  
                             _set_vterm D2BE                     __size_of_update_lcd 0110  
                           _help_button CB30                                _TMR3_ISR 9BBC  
                           _BVSOC_TABLE F8A3                                _TMR5_ISR AE04  
                              _TMR6_ISR D334                               _port_data 06FF  
                   __size_of_static_soc 005A                               _vfpfcnvrt 25C0  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack D14C                              _ADCON0bits 003EF8  
                    __end_of_check_help 8D4E                               _start_lcd D526  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 001E  
                         _TMR6_CallBack D1B8                          _write_cal_data 9D1E  
                 __size_of_send_lcd_cmd 0040       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc D52C                        _set_display_info D2DC  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                        _CRC_Initialize BC00                             _INTCON0bits 003FD2  
                             copy_data0 A5CE                               copy_data1 A5F4  
                             copy_data2 A616                               copy_data3 A638  
      __size_of_CRC_CalculatedResultGet 0172                _INT0_SetInterruptHandler D012  
                   __size_of_vterm_dump 012E     __end_of_UART2_SetTxInterruptHandler CF22  
           _UART2_SetTxInterruptHandler CEFA                            _uart1RxCount 00D3  
                          _uart2RxCount 00D0                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 00A8                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
            __end_of_current_sensor_cal 62EA                __size_of_conv_raw_result 04BC  
                         _wait_lcd_done D1DC                            _send_lcd_cmd C978  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
         __size_of_get_ac_charger_relay 000E                        __size_of___aomod 0240  
                       _adc_int_handler D542                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
         __size_of_set_ac_charger_relay 0010                      __end_of_get_switch CE26  
               __size_of_check_day_time 0226                  __end_of_write_cal_data 9E76  
                 __end_of_DMA1_DMAA_ISR D4D6                      ___fpclassifyf@F463 0082  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 8D4E                  __end_of_CRC_Initialize BC92  
                     ?_DMA1_DMADCNT_ISR 0021             __size_of_check_enter_button 0040  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand D46E  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0027  
                      __size_of_set_dac 00B6                                __ptext10 BF24  
                              __ptext11 8F52                                __ptext20 CEAA  
                              __ptext12 CCDA                                __ptext21 8270  
                              __ptext13 D34E                                __ptext30 D460  
                              __ptext22 B2EA                                __ptext14 CD0C  
                              __ptext31 5E76                                __ptext23 A498  
                              __ptext15 AC32                                __ptext40 D3FE  
                              __ptext32 9D1E                                __ptext24 AEE6  
                              __ptext16 D104                                __ptext41 D4F4  
                              __ptext33 C1C2                                __ptext25 77E6  
                              __ptext17 C938                                __ptext50 A246  
                              __ptext42 AD1C                                __ptext34 D514  
                              __ptext26 CAF6                                __ptext18 C978  
                              __ptext51 AB28                                __ptext43 CDFA  
                              __ptext35 D430                                __ptext27 D4EC  
                              __ptext19 D282                                __ptext60 B86A  
                              __ptext52 CDCC                                __ptext44 D51A  
                              __ptext36 9774                                __ptext28 D410  
                              __ptext61 D520                                __ptext53 CBA0  
                              __ptext45 BA4A                                __ptext37 B090  
                              __ptext29 D420                                __ptext70 CD3C  
                              __ptext62 D526                                __ptext54 AA18  
                              __ptext46 BEA4                                __ptext38 D3EC  
                              __ptext71 C8B2                                __ptext63 BADC  
                              __ptext55 B7C2                                __ptext47 B3A4  
                              __ptext39 C290                                __ptext80 AFBC  
                              __ptext72 71BA                                __ptext64 74FA  
                              __ptext56 D2A0                                __ptext48 CC72  
                              __ptext81 6AFE                                __ptext73 A106  
                              __ptext65 C2F4                                __ptext57 D1DC  
                              __ptext49 8B3C                                __ptext90 84B6  
                              __ptext82 92D8                                __ptext74 95F4  
                              __ptext66 B5C0                                __ptext58 C472  
                              __ptext91 7D7C                                __ptext83 98E6  
                              __ptext75 891C                                __ptext67 25C0  
                              __ptext59 C6BC                                __ptext92 BC92  
                              __ptext84 C706                                __ptext76 7ABE  
                              __ptext68 6744                                __ptext93 A904  
                              __ptext85 B226                                __ptext77 137C  
                              __ptext69 BD1A                                __ptext94 B910  
                              __ptext86 A7EC                                __ptext78 BD9E  
                              __ptext95 B9B2                                __ptext87 9E76  
                              __ptext79 CD6C                                __ptext96 A374  
                              __ptext88 59F6                                __ptext97 D318  
                              __ptext89 C826                                __ptext98 B718  
                              __ptext99 7FFC                        __size_of_isupper 0030  
                 __end_of_read_cal_data 911C                                us1208999 5A10  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1277999 7AD0                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                                us1289999 7220  
                              us1298999 67C4                        _ringBufS_put_dma B718  
                  __end_of_Volts_to_SOC B3A4                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 137C  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                   dac_spi_control@init 0043                              _CRC_IsBusy D430  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0021  
                 __end_of_init_port_dma CD3C                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00AE  
                             stoa@F1166 0100                      ??_DMA1_DMASCNT_ISR 0027  
          __end_of_ADCC_StartConversion D410                                _spi_link 0060  
                              _wdtdelay C472              __end_of_UART2_Transmit_ISR CE80  
                              _spinners AD1C                                _vfprintf B5C0  
              __end_of_convert_adc_data B45C               __size_of_update_hist_data 006E  
            __end_of_PWM8_LoadDutyValue C938    __end_of_TMR3_DefaultInterruptHandler D53E  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler D53C  
  __end_of_INT1_DefaultInterruptHandler D53C   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler D53A                      _send_port_data_dma C5CE  
                         ??_Default_ISR 0021                             _uart1RxHead 0047  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0044  
                           _uart1RxTail 00D4                          _get_raw_result D1FE  
                           _NVMCON1bits 0039E5                             _uart2TxHead 00D2  
                           _uart2RxTail 00D1                               spinners@s 0074  
                           _uart2TxTail 0046               __size_of_cal_current_zero 0092  
                          _wait_lcd_set D520                      _EXT_INT_Initialize CCA6  
  __end_of_TMR6_DefaultInterruptHandler C6BC   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler C66E                       _send_lcd_data_dma C6BC  
  __end_of_ADCC_DefaultInterruptHandler D542   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler D540                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long C938  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help D450  
                 __end_of_calc_ror_data 95F4                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString B910                   __end_of_mode_lamp_dim D37E  
               __end_of_adc_int_handler D544                __size_of_convert_dac_raw 0118  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd AB28                  _uart2TxBufferRemaining 0045  
                    __end_of_static_soc C472                      __end_of_start_bsoc D242  
                        _FVR_Initialize D50C                  __end_of_get_raw_result D220  
                      _send_lcd_cmd_dma D2A0                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 00C6        __end_of_INT1_SetInterruptHandler D012  
             __size_of_UART1_Initialize 0048                __size_of_dac_spi_control 007A  
             __end_of_send_lcd_data_dma C706                        ??_DMA1_DMAOR_ISR 0027  
               _CRC_CalculatedResultGet 9774               __end_of_send_lcd_cmd_long C978  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR D53A  
        __end_of_PIN_MANAGER_Initialize BC00               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump A374                 _eaDogM_WriteStringAtPos B7C2  
                         _get_vterm_ptr CDCC                          _check_adc_scan D4EC  
             __size_of_UART2_Initialize 0060  
