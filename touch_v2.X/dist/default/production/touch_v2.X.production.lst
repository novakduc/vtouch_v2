

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Dec 25 18:54:05 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=4,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=4,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=4,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text155,global,reloc=4,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=4,class=CODE,delta=1
   183                           	psect	text159,global,reloc=4,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=4,class=CODE,delta=1
   188                           	psect	text164,global,reloc=4,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=4,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=4,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=4,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=4,class=CODE,delta=1
   198                           	psect	text174,global,reloc=4,class=CODE,delta=1
   199                           	psect	text175,global,reloc=4,class=CODE,delta=1
   200                           	psect	text176,global,reloc=4,class=CODE,delta=1
   201                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   202                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   203                           	psect	text177,global,reloc=4,class=CODE,delta=1
   204                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   205                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   206  0000                     
   207                           ; Version 2.10
   208                           ; Generated 31/07/2019 GMT
   209                           ; 
   210                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   211                           ; All rights reserved.
   212                           ; 
   213                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   214                           ; 
   215                           ; Redistribution and use in source and binary forms, with or without modification, are
   216                           ; permitted provided that the following conditions are met:
   217                           ; 
   218                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   219                           ;        conditions and the following disclaimer.
   220                           ; 
   221                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   222                           ;        of conditions and the following disclaimer in the documentation and/or other
   223                           ;        materials provided with the distribution.
   224                           ; 
   225                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   226                           ;        software without specific prior written permission.
   227                           ; 
   228                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   229                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   230                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   231                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   232                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   233                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   234                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   235                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   236                           ; 
   237                           ; 
   238                           ; Code-generator required, PIC18F57K42 Definitions
   239                           ; 
   240                           ; SFR Addresses
   241  0000                     
   242 ;;_main$3754	offset	0
   243 ;;_main$3750	offset	2
   244 ;;_esr_temp	offset	4
   245 ;;_i_esr	offset	8
   246 ;;_shape	offset	10
   247 ;;_k	offset	11
   248 ;;_j	offset	12
   249 ;;_i	offset	13
   250 ;;_inp_index	offset	14
   251 ;;_mode	offset	15
   252 ;;_i_ror	offset	16
   253 ;;_s	offset=-2 (param)
   254 ;;_c	offset	0
   255 ;;_shape	offset=-1 (param)
   256 ;;_reset	offset=-2 (param)
   257 ;;_cmd	offset=-1 (param)
   258 ;;_cmd	offset=-1 (param)
   259 ;;_data	offset=-1 (param)
   260 ;;__this	offset=-2 (param)
   261 ;;_soc	offset	0
   262 ;;_slot	offset	4
   263 ;;_cvoltage	offset=-4 (param)
   264 ;;_h	offset=-2 (param)
   265 ;;_h	offset=-2 (param)
   266 ;;_i	offset=-1 (param)
   267 ;;_fsm	offset=-1 (param)
   268 ;;_channel	offset=-1 (param)
   269 ;;_mode	offset=-1 (param)
   270 ;;_mode	offset=-1 (param)
   271 ;;_cmd	offset=-1 (param)
   272 ;;_i	offset	0
   273 ;;_h	offset=-2 (param)
   274 ;;_flipper	offset=-1 (param)
   275 ;;_f	offset	0
   276 ;;_ap	offset	6
   277 ;;_s	offset=-3 (param)
   278 ;;_fmt	offset=-5 (param)
   279 ;;_line	offset=-1 (param)
   280 ;;_vterm	offset=-2 (param)
   281 ;;_numMilliseconds	offset=-2 (param)
   282 ;;_vterm	offset=-1 (param)
   283 ;;_r	offset=-1 (param)
   284 ;;_c	offset=-2 (param)
   285 ;;_strPtr	offset=-4 (param)
   286 ;;_strPtr	offset=-1 (param)
   287 ;;_delay	offset=-4 (param)
   288 ;;_strPtr	offset=-2 (param)
   289 ;;__this	offset=-2 (param)
   290 ;;_clearBuffer	offset=-3 (param)
   291 ;;_s	offset	0
   292 ;;_k	offset	2
   293 ;;_dest	offset=-2 (param)
   294 ;;_c	offset=-4 (param)
   295 ;;_n	offset=-6 (param)
   296 ;;_ap	offset	0
   297 ;;_fmt	offset=-3 (param)
   298 ;;_cfmt	offset	0
   299 ;;_fp	offset=-2 (param)
   300 ;;_fmt	offset=-4 (param)
   301 ;;_ap	offset=-6 (param)
   302 ;;_vfpfcnvrt$5546	offset	0
   303 ;;_vfpfcnvrt$5557	offset	2
   304 ;;_vfpfcnvrt$5545	offset	4
   305 ;;_llu	offset	6
   306 ;;_ll	offset	14
   307 ;;_f	offset	22
   308 ;;_ct	offset	26
   309 ;;_cp	offset	29
   310 ;;_c	offset	31
   311 ;;_fp	offset=-2 (param)
   312 ;;_fmt	offset=-4 (param)
   313 ;;_ap	offset=-6 (param)
   314 ;;_xtoa$5531	offset	0
   315 ;;_xtoa$5530	offset	2
   316 ;;_n	offset	4
   317 ;;_c	offset	12
   318 ;;_i	offset	14
   319 ;;_w	offset	16
   320 ;;_p	offset	18
   321 ;;_fp	offset=-2 (param)
   322 ;;_d	offset=-10 (param)
   323 ;;_x	offset=-11 (param)
   324 ;;_toupper$6337	offset	0
   325 ;;_c	offset=-2 (param)
   326 ;;_c	offset=-2 (param)
   327 ;;_c	offset=-2 (param)
   328 ;;_n	offset	0
   329 ;;_i	offset	8
   330 ;;_w	offset	10
   331 ;;_p	offset	12
   332 ;;_fp	offset=-2 (param)
   333 ;;_d	offset=-10 (param)
   334 ;;_counter	offset	0
   335 ;;_dividend	offset=-8 (param)
   336 ;;_divisor	offset=-16 (param)
   337 ;;_quotient	offset	0
   338 ;;_counter	offset	8
   339 ;;_dividend	offset=-8 (param)
   340 ;;_divisor	offset=-16 (param)
   341 ;;_r	offset	0
   342 ;;_l	offset	2
   343 ;;__l	offset=-2 (param)
   344 ;;__r	offset=-4 (param)
   345 ;;_n	offset=-6 (param)
   346 ;;_nuls	offset	0
   347 ;;_l	offset	7
   348 ;;_p	offset	9
   349 ;;_cp	offset	11
   350 ;;_w	offset	13
   351 ;;_i	offset	15
   352 ;;_fp	offset=-2 (param)
   353 ;;_s	offset=-4 (param)
   354 ;;_efgtoa$5503	offset	0
   355 ;;_efgtoa$5502	offset	2
   356 ;;_efgtoa$5501	offset	4
   357 ;;_efgtoa$5497	offset	6
   358 ;;_efgtoa$5493	offset	8
   359 ;;_efgtoa$5492	offset	10
   360 ;;_u	offset	12
   361 ;;_g	offset	16
   362 ;;_l	offset	20
   363 ;;_h	offset	24
   364 ;;_ou	offset	28
   365 ;;_n	offset	32
   366 ;;_e	offset	34
   367 ;;_i	offset	36
   368 ;;_w	offset	38
   369 ;;_p	offset	40
   370 ;;_sign	offset	42
   371 ;;_d	offset	44
   372 ;;_ne	offset	46
   373 ;;_m	offset	48
   374 ;;_pp	offset	50
   375 ;;_t	offset	52
   376 ;;_mode	offset	54
   377 ;;_nmode	offset	55
   378 ;;_fp	offset=-2 (param)
   379 ;;_f	offset=-6 (param)
   380 ;;_c	offset=-7 (param)
   381 ;;_tolower$6322	offset	0
   382 ;;_c	offset=-2 (param)
   383 ;;_c	offset=-2 (param)
   384 ;;_d	offset	0
   385 ;;_s	offset	2
   386 ;;_dest	offset=-2 (param)
   387 ;;_src	offset=-4 (param)
   388 ;;_u	offset	0
   389 ;;_m	offset	4
   390 ;;_e	offset	8
   391 ;;_x	offset=-4 (param)
   392 ;;_u	offset	0
   393 ;;_e	offset	4
   394 ;;_x	offset=-4 (param)
   395 ;;_exp1	offset	0
   396 ;;_sign1	offset	1
   397 ;;_f1	offset=-4 (param)
   398 ;;_f1	offset=-4 (param)
   399 ;;_ff1	offset=-4 (param)
   400 ;;_ff2	offset=-8 (param)
   401 ;;_sign	offset	0
   402 ;;_counter	offset	1
   403 ;;_dividend	offset=-2 (param)
   404 ;;_divisor	offset=-4 (param)
   405 ;;_quotient	offset	0
   406 ;;_sign	offset	2
   407 ;;_counter	offset	3
   408 ;;_dividend	offset=-2 (param)
   409 ;;_divisor	offset=-4 (param)
   410 ;;_dtoa$5469	offset	0
   411 ;;_n	offset	2
   412 ;;_i	offset	10
   413 ;;_s	offset	12
   414 ;;_w	offset	14
   415 ;;_p	offset	16
   416 ;;_fp	offset=-2 (param)
   417 ;;_d	offset=-10 (param)
   418 ;;_a	offset=-2 (param)
   419 ;;_sign	offset	0
   420 ;;_counter	offset	1
   421 ;;_dividend	offset=-8 (param)
   422 ;;_divisor	offset=-16 (param)
   423 ;;_quotient	offset	0
   424 ;;_sign	offset	8
   425 ;;_counter	offset	9
   426 ;;_dividend	offset=-8 (param)
   427 ;;_divisor	offset=-16 (param)
   428 ;;_w	offset	0
   429 ;;_fp	offset=-2 (param)
   430 ;;_c	offset=-3 (param)
   431 ;;_w	offset	0
   432 ;;_i	offset	2
   433 ;;_fp	offset=-2 (param)
   434 ;;_buf	offset=-4 (param)
   435 ;;_p	offset=-6 (param)
   436 ;;_a	offset	0
   437 ;;_s	offset=-2 (param)
   438 ;;_i	offset	0
   439 ;;_c	offset	2
   440 ;;_s	offset=-2 (param)
   441 ;;_fp	offset=-4 (param)
   442 ;;_c	offset=-2 (param)
   443 ;;_fp	offset=-4 (param)
   444 ;;_c	offset=-1 (param)
   445 ;;__this	offset=-2 (param)
   446 ;;_c	offset=-3 (param)
   447 ;;_atoi$6053	offset	0
   448 ;;_atoi$6051	offset	2
   449 ;;_atoi$6052	offset	4
   450 ;;_n	offset	5
   451 ;;_neg	offset	7
   452 ;;_s	offset=-2 (param)
   453 ;;_isspace$6102	offset	0
   454 ;;_c	offset=-2 (param)
   455 ;;_c	offset=-2 (param)
   456 ;;_vterm	offset=-1 (param)
   457 ;;_new_response_info	offset=-1 (param)
   458 ;;_new_response_info	offset=-1 (param)
   459 ;;_level	offset=-2 (param)
   460 ;;_dutyValue	offset=-2 (param)
   461 ;;_timer	offset=-1 (param)
   462 ;;_timer	offset=-1 (param)
   463 ;;_count	offset=-3 (param)
   464 ;;_h	offset=-2 (param)
   465 ;;_u	offset	0
   466 ;;_x	offset=-4 (param)
   467 ;;_chan	offset=-1 (param)
   468 ;;_to_what	offset=-2 (param)
   469 ;;_u	offset	0
   470 ;;_s	offset=-2 (param)
   471 ;;_index	offset=-1 (param)
   472 ;;_arg	offset	0
   473 ;;_exp	offset	4
   474 ;;_sign	offset=-1 (param)
   475 ;;_val	offset=-5 (param)
   476 ;;_grs	offset	0
   477 ;;_rem	offset	4
   478 ;;_new_exp	offset	8
   479 ;;_aexp	offset	10
   480 ;;_bexp	offset	11
   481 ;;_sign	offset	12
   482 ;;_b	offset=-4 (param)
   483 ;;_a	offset=-8 (param)
   484 ;;_ff1	offset=-4 (param)
   485 ;;_ff2	offset=-8 (param)
   486 ;;_lp_speed	offset	0
   487 ;;_new	offset=-4 (param)
   488 ;;_bn	offset=-5 (param)
   489 ;;_slow	offset=-6 (param)
   490 ;;_b	offset=-4 (param)
   491 ;;_a	offset=-8 (param)
   492 ;;_grs	offset	0
   493 ;;_bexp	offset	1
   494 ;;_aexp	offset	2
   495 ;;_signs	offset	3
   496 ;;_b	offset=-4 (param)
   497 ;;_a	offset=-8 (param)
   498 ;;_prod	offset	0
   499 ;;_grs	offset	4
   500 ;;_temp	offset	8
   501 ;;_bexp	offset	10
   502 ;;_aexp	offset	11
   503 ;;_sign	offset	12
   504 ;;_b	offset=-4 (param)
   505 ;;_a	offset=-8 (param)
   506 ;;_InterruptHandler	offset=-3 (param)
   507 ;;_InterruptHandler	offset=-3 (param)
   508 ;;_InterruptHandler	offset=-3 (param)
   509 ;;_InterruptHandler	offset=-3 (param)
   510 ;;_InterruptHandler	offset=-3 (param)
   511 ;;_InterruptHandler	offset=-3 (param)
   512 ;;_state	offset	0
   513 ;;_InterruptHandler	offset=-3 (param)
   514 ;;_InterruptHandler	offset=-3 (param)
   515 ;;_InterruptHandler	offset=-3 (param)
   516 ;;_InterruptHandler	offset=-3 (param)
   517 ;;_i	offset	0
   518 ;;_sw_value	offset	1
   519 ;;_timerVal	offset=-2 (param)
   520 ;;_light	offset	0
   521 ;;_mode	offset=-1 (param)
   522 ;;_chan	offset=-1 (param)
   523 ;;_to_what	offset=-2 (param)
   524 ;;_u	offset	0
   525 ;;_s	offset=-2 (param)
   526 ;;_index	offset=-1 (param)
   527 ;;_arg	offset	0
   528 ;;_exp	offset	4
   529 ;;_sign	offset=-1 (param)
   530 ;;_val	offset=-5 (param)
   531 ;;_b	offset=-4 (param)
   532 ;;_a	offset=-8 (param)
   533 ;;_grs	offset	0
   534 ;;_bexp	offset	1
   535 ;;_aexp	offset	2
   536 ;;_signs	offset	3
   537 ;;_b	offset=-4 (param)
   538 ;;_a	offset=-8 (param)
   539 ;;_prod	offset	0
   540 ;;_grs	offset	4
   541 ;;_temp	offset	8
   542 ;;_bexp	offset	10
   543 ;;_aexp	offset	11
   544 ;;_sign	offset	12
   545 ;;_b	offset=-4 (param)
   546 ;;_a	offset=-8 (param)
   547 ;;_grs	offset	0
   548 ;;_rem	offset	4
   549 ;;_new_exp	offset	8
   550 ;;_aexp	offset	10
   551 ;;_bexp	offset	11
   552 ;;_sign	offset	12
   553 ;;_b	offset=-4 (param)
   554 ;;_a	offset=-8 (param)
   555 ;;_ff1	offset=-4 (param)
   556 ;;_ff2	offset=-8 (param)
   557 ;;_timerVal	offset=-2 (param)
   558 ;;_log_ptr	offset	0
   559 ;;_f	offset	0
   560 ;;_ap	offset	6
   561 ;;_s	offset=-3 (param)
   562 ;;_fmt	offset=-5 (param)
   563 ;;_cfmt	offset	0
   564 ;;_fp	offset=-2 (param)
   565 ;;_fmt	offset=-4 (param)
   566 ;;_ap	offset=-6 (param)
   567 ;;_vfpfcnvrt$5546	offset	0
   568 ;;_vfpfcnvrt$5557	offset	2
   569 ;;_vfpfcnvrt$5545	offset	4
   570 ;;_llu	offset	6
   571 ;;_ll	offset	14
   572 ;;_f	offset	22
   573 ;;_ct	offset	26
   574 ;;_cp	offset	29
   575 ;;_c	offset	31
   576 ;;_fp	offset=-2 (param)
   577 ;;_fmt	offset=-4 (param)
   578 ;;_ap	offset=-6 (param)
   579 ;;_xtoa$5531	offset	0
   580 ;;_xtoa$5530	offset	2
   581 ;;_n	offset	4
   582 ;;_c	offset	12
   583 ;;_i	offset	14
   584 ;;_w	offset	16
   585 ;;_p	offset	18
   586 ;;_fp	offset=-2 (param)
   587 ;;_d	offset=-10 (param)
   588 ;;_x	offset=-11 (param)
   589 ;;_toupper$6337	offset	0
   590 ;;_c	offset=-2 (param)
   591 ;;_c	offset=-2 (param)
   592 ;;_c	offset=-2 (param)
   593 ;;_n	offset	0
   594 ;;_i	offset	8
   595 ;;_w	offset	10
   596 ;;_p	offset	12
   597 ;;_fp	offset=-2 (param)
   598 ;;_d	offset=-10 (param)
   599 ;;_counter	offset	0
   600 ;;_dividend	offset=-8 (param)
   601 ;;_divisor	offset=-16 (param)
   602 ;;_quotient	offset	0
   603 ;;_counter	offset	8
   604 ;;_dividend	offset=-8 (param)
   605 ;;_divisor	offset=-16 (param)
   606 ;;_r	offset	0
   607 ;;_l	offset	2
   608 ;;__l	offset=-2 (param)
   609 ;;__r	offset=-4 (param)
   610 ;;_n	offset=-6 (param)
   611 ;;_nuls	offset	0
   612 ;;_l	offset	7
   613 ;;_p	offset	9
   614 ;;_cp	offset	11
   615 ;;_w	offset	13
   616 ;;_i	offset	15
   617 ;;_fp	offset=-2 (param)
   618 ;;_s	offset=-4 (param)
   619 ;;_efgtoa$5503	offset	0
   620 ;;_efgtoa$5502	offset	2
   621 ;;_efgtoa$5501	offset	4
   622 ;;_efgtoa$5497	offset	6
   623 ;;_efgtoa$5493	offset	8
   624 ;;_efgtoa$5492	offset	10
   625 ;;_u	offset	12
   626 ;;_g	offset	16
   627 ;;_l	offset	20
   628 ;;_h	offset	24
   629 ;;_ou	offset	28
   630 ;;_n	offset	32
   631 ;;_e	offset	34
   632 ;;_i	offset	36
   633 ;;_w	offset	38
   634 ;;_p	offset	40
   635 ;;_sign	offset	42
   636 ;;_d	offset	44
   637 ;;_ne	offset	46
   638 ;;_m	offset	48
   639 ;;_pp	offset	50
   640 ;;_t	offset	52
   641 ;;_mode	offset	54
   642 ;;_nmode	offset	55
   643 ;;_fp	offset=-2 (param)
   644 ;;_f	offset=-6 (param)
   645 ;;_c	offset=-7 (param)
   646 ;;_tolower$6322	offset	0
   647 ;;_c	offset=-2 (param)
   648 ;;_c	offset=-2 (param)
   649 ;;_d	offset	0
   650 ;;_s	offset	2
   651 ;;_dest	offset=-2 (param)
   652 ;;_src	offset=-4 (param)
   653 ;;_u	offset	0
   654 ;;_m	offset	4
   655 ;;_e	offset	8
   656 ;;_x	offset=-4 (param)
   657 ;;_u	offset	0
   658 ;;_e	offset	4
   659 ;;_x	offset=-4 (param)
   660 ;;_exp1	offset	0
   661 ;;_sign1	offset	1
   662 ;;_f1	offset=-4 (param)
   663 ;;_f1	offset=-4 (param)
   664 ;;_ff1	offset=-4 (param)
   665 ;;_ff2	offset=-8 (param)
   666 ;;_sign	offset	0
   667 ;;_counter	offset	1
   668 ;;_dividend	offset=-2 (param)
   669 ;;_divisor	offset=-4 (param)
   670 ;;_quotient	offset	0
   671 ;;_sign	offset	2
   672 ;;_counter	offset	3
   673 ;;_dividend	offset=-2 (param)
   674 ;;_divisor	offset=-4 (param)
   675 ;;_dtoa$5469	offset	0
   676 ;;_n	offset	2
   677 ;;_i	offset	10
   678 ;;_s	offset	12
   679 ;;_w	offset	14
   680 ;;_p	offset	16
   681 ;;_fp	offset=-2 (param)
   682 ;;_d	offset=-10 (param)
   683 ;;_a	offset=-2 (param)
   684 ;;_sign	offset	0
   685 ;;_counter	offset	1
   686 ;;_dividend	offset=-8 (param)
   687 ;;_divisor	offset=-16 (param)
   688 ;;_quotient	offset	0
   689 ;;_sign	offset	8
   690 ;;_counter	offset	9
   691 ;;_dividend	offset=-8 (param)
   692 ;;_divisor	offset=-16 (param)
   693 ;;_w	offset	0
   694 ;;_fp	offset=-2 (param)
   695 ;;_c	offset=-3 (param)
   696 ;;_w	offset	0
   697 ;;_i	offset	2
   698 ;;_fp	offset=-2 (param)
   699 ;;_buf	offset=-4 (param)
   700 ;;_p	offset=-6 (param)
   701 ;;_a	offset	0
   702 ;;_s	offset=-2 (param)
   703 ;;_i	offset	0
   704 ;;_c	offset	2
   705 ;;_s	offset=-2 (param)
   706 ;;_fp	offset=-4 (param)
   707 ;;_c	offset=-2 (param)
   708 ;;_fp	offset=-4 (param)
   709 ;;_c	offset=-1 (param)
   710 ;;__this	offset=-2 (param)
   711 ;;_c	offset=-3 (param)
   712 ;;_atoi$6053	offset	0
   713 ;;_atoi$6051	offset	2
   714 ;;_atoi$6052	offset	4
   715 ;;_n	offset	5
   716 ;;_neg	offset	7
   717 ;;_s	offset=-2 (param)
   718 ;;_isspace$6102	offset	0
   719 ;;_c	offset=-2 (param)
   720 ;;_c	offset=-2 (param)
   721 ;;_dsize	offset=-2 (param)
   722 ;;_u	offset	0
   723 ;;_x	offset=-4 (param)
   724 ;;_f1p	offset=-2 (param)
   725 ;;_f2	offset=-6 (param)
   726 ;;_timer	offset=-1 (param)
   727 ;;_count	offset=-3 (param)
   728 ;;_channel	offset=-1 (param)
   729 ;;_i	offset	0
   730                           
   731                           	psect	idataBIGRAM
   732  0167F8                     __pidataBIGRAM:
   733                           	opt callstack 0
   734                           
   735                           ;initializer for _port_data
   736  0167F8  FF                 	db	255
   737  0167F9  00                 	db	0
   738  0167FA  FF                 	db	255
   739  0167FB  00                 	db	0
   740  0167FC  FF                 	db	255
   741  0167FD  00                 	db	0
   742  0167FE  FF                 	db	255
   743  0167FF  00                 	db	0
   744  016800  FF                 	db	255
   745  016801  00                 	db	0
   746  016802  FF                 	db	255
   747  016803  00                 	db	0
   748  016804  FF                 	db	255
   749  016805  00                 	db	0
   750  016806  FF                 	db	255
   751  016807  00                 	db	0
   752  016808  00                 	db	0
   753  016809  00                 	db	0
   754  01680A  00                 	db	0
   755  01680B  00                 	db	0
   756  01680C  00                 	db	0
   757  01680D  00                 	db	0
   758  01680E  00                 	db	0
   759  01680F  00                 	db	0
   760  016810  00                 	db	0
   761  016811  00                 	db	0
   762  016812  00                 	db	0
   763  016813  00                 	db	0
   764  016814  00                 	db	0
   765  016815  00                 	db	0
   766  016816  00                 	db	0
   767  016817  00                 	db	0
   768  016818  00                 	db	0
   769  016819  00                 	db	0
   770  01681A  00                 	db	0
   771  01681B  00                 	db	0
   772  01681C  00                 	db	0
   773  01681D  00                 	db	0
   774  01681E  00                 	db	0
   775  01681F  00                 	db	0
   776  016820  00                 	db	0
   777  016821  00                 	db	0
   778  016822  00                 	db	0
   779  016823  00                 	db	0
   780  016824  00                 	db	0
   781  016825  00                 	db	0
   782  016826  00                 	db	0
   783  016827  00                 	db	0
   784  016828  00                 	db	0
   785  016829  00                 	db	0
   786  01682A  00                 	db	0
   787  01682B  00                 	db	0
   788  01682C  00                 	db	0
   789  01682D  00                 	db	0
   790  01682E  00                 	db	0
   791  01682F  00                 	db	0
   792  016830  00                 	db	0
   793  016831  00                 	db	0
   794  016832  00                 	db	0
   795  016833  00                 	db	0
   796  016834  00                 	db	0
   797  016835  00                 	db	0
   798  016836  00                 	db	0
   799  016837  00                 	db	0
   800  016838  00                 	db	0
   801  016839  00                 	db	0
   802  01683A  00                 	db	0
   803  01683B  00                 	db	0
   804  01683C  00                 	db	0
   805  01683D  00                 	db	0
   806  01683E  00                 	db	0
   807  01683F  00                 	db	0
   808  016840  00                 	db	0
   809  016841  00                 	db	0
   810  016842  00                 	db	0
   811  016843  00                 	db	0
   812  016844  00                 	db	0
   813  016845  00                 	db	0
   814  016846  00                 	db	0
   815  016847  00                 	db	0
   816  016848  00                 	db	0
   817  016849  00                 	db	0
   818  01684A  00                 	db	0
   819  01684B  00                 	db	0
   820  01684C  00                 	db	0
   821  01684D  00                 	db	0
   822  01684E  00                 	db	0
   823  01684F  00                 	db	0
   824  016850  00                 	db	0
   825  016851  00                 	db	0
   826  016852  00                 	db	0
   827  016853  00                 	db	0
   828  016854  00                 	db	0
   829  016855  00                 	db	0
   830  016856  00                 	db	0
   831  016857  00                 	db	0
   832  016858  00                 	db	0
   833  016859  00                 	db	0
   834  01685A  00                 	db	0
   835  01685B  00                 	db	0
   836  01685C  00                 	db	0
   837  01685D  00                 	db	0
   838  01685E  00                 	db	0
   839  01685F  00                 	db	0
   840  016860  00                 	db	0
   841  016861  00                 	db	0
   842  016862  00                 	db	0
   843  016863  00                 	db	0
   844  016864  00                 	db	0
   845  016865  00                 	db	0
   846  016866  00                 	db	0
   847  016867  00                 	db	0
   848  016868  00                 	db	0
   849  016869  00                 	db	0
   850  01686A  00                 	db	0
   851  01686B  00                 	db	0
   852  01686C  00                 	db	0
   853  01686D  00                 	db	0
   854  01686E  00                 	db	0
   855  01686F  00                 	db	0
   856  016870  00                 	db	0
   857  016871  00                 	db	0
   858  016872  00                 	db	0
   859  016873  00                 	db	0
   860  016874  00                 	db	0
   861  016875  00                 	db	0
   862  016876  00                 	db	0
   863  016877  00                 	db	0
   864  016878  00                 	db	0
   865  016879  00                 	db	0
   866  01687A  00                 	db	0
   867  01687B  00                 	db	0
   868  01687C  00                 	db	0
   869  01687D  00                 	db	0
   870  01687E  00                 	db	0
   871  01687F  00                 	db	0
   872  016880  00                 	db	0
   873  016881  00                 	db	0
   874  016882  00                 	db	0
   875  016883  00                 	db	0
   876  016884  00                 	db	0
   877  016885  00                 	db	0
   878  016886  00                 	db	0
   879  016887  00                 	db	0
   880  016888  00                 	db	0
   881  016889  00                 	db	0
   882  01688A  00                 	db	0
   883  01688B  00                 	db	0
   884  01688C  00                 	db	0
   885  01688D  00                 	db	0
   886  01688E  00                 	db	0
   887  01688F  00                 	db	0
   888  016890  00                 	db	0
   889  016891  00                 	db	0
   890  016892  00                 	db	0
   891  016893  00                 	db	0
   892  016894  00                 	db	0
   893  016895  00                 	db	0
   894  016896  00                 	db	0
   895  016897  00                 	db	0
   896  016898  00                 	db	0
   897  016899  00                 	db	0
   898  01689A  00                 	db	0
   899  01689B  00                 	db	0
   900  01689C  00                 	db	0
   901  01689D  00                 	db	0
   902  01689E  00                 	db	0
   903  01689F  00                 	db	0
   904  0168A0  00                 	db	0
   905  0168A1  00                 	db	0
   906  0168A2  00                 	db	0
   907  0168A3  00                 	db	0
   908  0168A4  00                 	db	0
   909  0168A5  00                 	db	0
   910  0168A6  00                 	db	0
   911  0168A7  00                 	db	0
   912  0168A8  00                 	db	0
   913  0168A9  00                 	db	0
   914  0168AA  00                 	db	0
   915  0168AB  00                 	db	0
   916  0168AC  00                 	db	0
   917  0168AD  00                 	db	0
   918  0168AE  00                 	db	0
   919  0168AF  00                 	db	0
   920  0168B0  00                 	db	0
   921  0168B1  00                 	db	0
   922  0168B2  00                 	db	0
   923  0168B3  00                 	db	0
   924  0168B4  00                 	db	0
   925  0168B5  00                 	db	0
   926  0168B6  00                 	db	0
   927  0168B7  00                 	db	0
   928  0168B8  00                 	db	0
   929  0168B9  00                 	db	0
   930  0168BA  00                 	db	0
   931  0168BB  00                 	db	0
   932  0168BC  00                 	db	0
   933  0168BD  00                 	db	0
   934  0168BE  00                 	db	0
   935  0168BF  00                 	db	0
   936  0168C0  00                 	db	0
   937  0168C1  00                 	db	0
   938  0168C2  00                 	db	0
   939  0168C3  00                 	db	0
   940  0168C4  00                 	db	0
   941  0168C5  00                 	db	0
   942  0168C6  00                 	db	0
   943  0168C7  00                 	db	0
   944  0168C8  00                 	db	0
   945  0168C9  00                 	db	0
   946  0168CA  00                 	db	0
   947  0168CB  00                 	db	0
   948  0168CC  00                 	db	0
   949  0168CD  00                 	db	0
   950  0168CE  00                 	db	0
   951  0168CF  00                 	db	0
   952  0168D0  00                 	db	0
   953  0168D1  00                 	db	0
   954  0168D2  00                 	db	0
   955  0168D3  00                 	db	0
   956  0168D4  00                 	db	0
   957  0168D5  00                 	db	0
   958  0168D6  00                 	db	0
   959  0168D7  00                 	db	0
   960  0168D8  00                 	db	0
   961  0168D9  00                 	db	0
   962  0168DA  00                 	db	0
   963  0168DB  00                 	db	0
   964  0168DC  00                 	db	0
   965  0168DD  00                 	db	0
   966  0168DE  00                 	db	0
   967  0168DF  00                 	db	0
   968  0168E0  00                 	db	0
   969  0168E1  00                 	db	0
   970  0168E2  00                 	db	0
   971  0168E3  00                 	db	0
   972  0168E4  00                 	db	0
   973  0168E5  00                 	db	0
   974  0168E6  00                 	db	0
   975  0168E7  00                 	db	0
   976  0168E8  00                 	db	0
   977  0168E9  00                 	db	0
   978  0168EA  00                 	db	0
   979  0168EB  00                 	db	0
   980  0168EC  00                 	db	0
   981  0168ED  00                 	db	0
   982  0168EE  00                 	db	0
   983  0168EF  00                 	db	0
   984  0168F0  00                 	db	0
   985  0168F1  00                 	db	0
   986  0168F2  00                 	db	0
   987  0168F3  00                 	db	0
   988  0168F4  00                 	db	0
   989  0168F5  00                 	db	0
   990  0168F6  00                 	db	0
   991  0168F7  00                 	db	0
   992  0168F8  00                 	db	0
   993  0168F9  00                 	db	0
   994  0168FA  00                 	db	0
   995  0168FB  00                 	db	0
   996  0168FC  00                 	db	0
   997  0168FD  00                 	db	0
   998  0168FE  00                 	db	0
   999  0168FF  00                 	db	0
  1000  016900  00                 	db	0
  1001  016901  00                 	db	0
  1002  016902  00                 	db	0
  1003  016903  00                 	db	0
  1004  016904  00                 	db	0
  1005  016905  00                 	db	0
  1006  016906  00                 	db	0
  1007  016907  00                 	db	0
  1008  016908  00                 	db	0
  1009  016909  00                 	db	0
  1010  01690A  00                 	db	0
  1011  01690B  00                 	db	0
  1012  01690C  00                 	db	0
  1013  01690D  00                 	db	0
  1014  01690E  00                 	db	0
  1015  01690F  00                 	db	0
  1016  016910  00                 	db	0
  1017  016911  00                 	db	0
  1018  016912  00                 	db	0
  1019  016913  00                 	db	0
  1020  016914  00                 	db	0
  1021  016915  00                 	db	0
  1022  016916  00                 	db	0
  1023  016917  00                 	db	0
  1024  016918  00                 	db	0
  1025  016919  00                 	db	0
  1026  01691A  00                 	db	0
  1027  01691B  00                 	db	0
  1028  01691C  00                 	db	0
  1029  01691D  00                 	db	0
  1030  01691E  00                 	db	0
  1031  01691F  00                 	db	0
  1032  016920  00                 	db	0
  1033  016921  00                 	db	0
  1034  016922  00                 	db	0
  1035  016923  00                 	db	0
  1036  016924  00                 	db	0
  1037  016925  00                 	db	0
  1038  016926  00                 	db	0
  1039  016927  00                 	db	0
  1040  016928  00                 	db	0
  1041  016929  00                 	db	0
  1042  01692A  00                 	db	0
  1043  01692B  00                 	db	0
  1044  01692C  00                 	db	0
  1045  01692D  00                 	db	0
  1046  01692E  00                 	db	0
  1047  01692F  00                 	db	0
  1048  016930  00                 	db	0
  1049  016931  00                 	db	0
  1050  016932  00                 	db	0
  1051  016933  00                 	db	0
  1052  016934  00                 	db	0
  1053  016935  00                 	db	0
  1054  016936  00                 	db	0
  1055  016937  00                 	db	0
  1056  016938  00                 	db	0
  1057  016939  00                 	db	0
  1058  01693A  00                 	db	0
  1059  01693B  00                 	db	0
  1060  01693C  00                 	db	0
  1061  01693D  00                 	db	0
  1062  01693E  00                 	db	0
  1063  01693F  00                 	db	0
  1064  016940  00                 	db	0
  1065  016941  00                 	db	0
  1066  016942  00                 	db	0
  1067  016943  00                 	db	0
  1068  016944  00                 	db	0
  1069  016945  00                 	db	0
  1070  016946  00                 	db	0
  1071  016947  00                 	db	0
  1072  016948  00                 	db	0
  1073  016949  00                 	db	0
  1074  01694A  00                 	db	0
  1075  01694B  00                 	db	0
  1076  01694C  00                 	db	0
  1077  01694D  00                 	db	0
  1078  01694E  00                 	db	0
  1079  01694F  00                 	db	0
  1080  016950  00                 	db	0
  1081  016951  00                 	db	0
  1082  016952  00                 	db	0
  1083  016953  00                 	db	0
  1084  016954  00                 	db	0
  1085  016955  00                 	db	0
  1086  016956  00                 	db	0
  1087  016957  00                 	db	0
  1088  016958  00                 	db	0
  1089  016959  00                 	db	0
  1090  01695A  00                 	db	0
  1091  01695B  00                 	db	0
  1092  01695C  00                 	db	0
  1093  01695D  00                 	db	0
  1094  01695E  00                 	db	0
  1095  01695F  00                 	db	0
  1096  016960  00                 	db	0
  1097  016961  00                 	db	0
  1098  016962  00                 	db	0
  1099  016963  00                 	db	0
  1100  016964  00                 	db	0
  1101  016965  00                 	db	0
  1102  016966  00                 	db	0
  1103  016967  00                 	db	0
  1104  016968  00                 	db	0
  1105  016969  00                 	db	0
  1106  01696A  00                 	db	0
  1107  01696B  00                 	db	0
  1108  01696C  00                 	db	0
  1109  01696D  00                 	db	0
  1110  01696E  00                 	db	0
  1111  01696F  00                 	db	0
  1112  016970  00                 	db	0
  1113  016971  00                 	db	0
  1114  016972  00                 	db	0
  1115  016973  00                 	db	0
  1116  016974  00                 	db	0
  1117  016975  00                 	db	0
  1118  016976  00                 	db	0
  1119  016977  00                 	db	0
  1120  016978  00                 	db	0
  1121  016979  00                 	db	0
  1122  01697A  00                 	db	0
  1123  01697B  00                 	db	0
  1124  01697C  00                 	db	0
  1125  01697D  00                 	db	0
  1126  01697E  00                 	db	0
  1127  01697F  00                 	db	0
  1128  016980  00                 	db	0
  1129  016981  00                 	db	0
  1130  016982  00                 	db	0
  1131  016983  00                 	db	0
  1132  016984  00                 	db	0
  1133  016985  00                 	db	0
  1134  016986  00                 	db	0
  1135  016987  00                 	db	0
  1136  016988  00                 	db	0
  1137  016989  00                 	db	0
  1138  01698A  00                 	db	0
  1139  01698B  00                 	db	0
  1140  01698C  00                 	db	0
  1141  01698D  00                 	db	0
  1142  01698E  00                 	db	0
  1143  01698F  00                 	db	0
  1144  016990  00                 	db	0
  1145  016991  00                 	db	0
  1146  016992  00                 	db	0
  1147  016993  00                 	db	0
  1148  016994  00                 	db	0
  1149  016995  00                 	db	0
  1150  016996  00                 	db	0
  1151  016997  00                 	db	0
  1152  016998  00                 	db	0
  1153  016999  00                 	db	0
  1154  01699A  00                 	db	0
  1155  01699B  00                 	db	0
  1156  01699C  00                 	db	0
  1157  01699D  00                 	db	0
  1158  01699E  00                 	db	0
  1159  01699F  00                 	db	0
  1160  0169A0  00                 	db	0
  1161  0169A1  00                 	db	0
  1162  0169A2  00                 	db	0
  1163  0169A3  00                 	db	0
  1164  0169A4  00                 	db	0
  1165  0169A5  00                 	db	0
  1166  0169A6  00                 	db	0
  1167  0169A7  00                 	db	0
  1168  0169A8  00                 	db	0
  1169  0169A9  00                 	db	0
  1170  0169AA  00                 	db	0
  1171  0169AB  00                 	db	0
  1172  0169AC  00                 	db	0
  1173  0169AD  00                 	db	0
  1174  0169AE  00                 	db	0
  1175  0169AF  00                 	db	0
  1176  0169B0  00                 	db	0
  1177  0169B1  00                 	db	0
  1178  0169B2  00                 	db	0
  1179  0169B3  00                 	db	0
  1180  0169B4  00                 	db	0
  1181  0169B5  00                 	db	0
  1182  0169B6  00                 	db	0
  1183  0169B7  00                 	db	0
  1184  0169B8  00                 	db	0
  1185  0169B9  00                 	db	0
  1186  0169BA  00                 	db	0
  1187  0169BB  00                 	db	0
  1188  0169BC  00                 	db	0
  1189  0169BD  00                 	db	0
  1190  0169BE  00                 	db	0
  1191  0169BF  00                 	db	0
  1192  0169C0  00                 	db	0
  1193  0169C1  00                 	db	0
  1194  0169C2  00                 	db	0
  1195  0169C3  00                 	db	0
  1196  0169C4  00                 	db	0
  1197  0169C5  00                 	db	0
  1198  0169C6  00                 	db	0
  1199  0169C7  00                 	db	0
  1200  0169C8  00                 	db	0
  1201  0169C9  00                 	db	0
  1202  0169CA  00                 	db	0
  1203  0169CB  00                 	db	0
  1204  0169CC  00                 	db	0
  1205  0169CD  00                 	db	0
  1206  0169CE  00                 	db	0
  1207  0169CF  00                 	db	0
  1208  0169D0  00                 	db	0
  1209  0169D1  00                 	db	0
  1210  0169D2  00                 	db	0
  1211  0169D3  00                 	db	0
  1212  0169D4  00                 	db	0
  1213  0169D5  00                 	db	0
  1214  0169D6  00                 	db	0
  1215  0169D7  00                 	db	0
  1216  0169D8  00                 	db	0
  1217  0169D9  00                 	db	0
  1218  0169DA  00                 	db	0
  1219  0169DB  00                 	db	0
  1220  0169DC  00                 	db	0
  1221  0169DD  00                 	db	0
  1222  0169DE  00                 	db	0
  1223  0169DF  00                 	db	0
  1224  0169E0  00                 	db	0
  1225  0169E1  00                 	db	0
  1226  0169E2  00                 	db	0
  1227  0169E3  00                 	db	0
  1228  0169E4  00                 	db	0
  1229  0169E5  00                 	db	0
  1230  0169E6  00                 	db	0
  1231  0169E7  00                 	db	0
  1232  0169E8  00                 	db	0
  1233  0169E9  00                 	db	0
  1234  0169EA  00                 	db	0
  1235  0169EB  00                 	db	0
  1236  0169EC  00                 	db	0
  1237  0169ED  00                 	db	0
  1238  0169EE  00                 	db	0
  1239  0169EF  00                 	db	0
  1240  0169F0  00                 	db	0
  1241  0169F1  00                 	db	0
  1242  0169F2  00                 	db	0
  1243  0169F3  00                 	db	0
  1244  0169F4  00                 	db	0
  1245  0169F5  00                 	db	0
  1246  0169F6  00                 	db	0
  1247  0169F7  00                 	db	0
  1248                           
  1249                           ;initializer for _C
  1250  0169F8  0000               	dw	0
  1251  0169FA  0000               	dw	0
  1252  0169FC  0000               	dw	0
  1253  0169FE  0000               	dw	0
  1254  016A00  0000               	dw	0
  1255  016A02  0000               	dw	0
  1256  016A04  0000               	dw	0
  1257  016A06  0000               	dw	0
  1258  016A08  0000               	dw	0
  1259  016A0A  0000               	dw	0
  1260  016A0C  0000               	dw	0
  1261  016A0E  0000               	dw	0
  1262  016A10  0000               	dw	0
  1263  016A12  0000               	dw	0
  1264  016A14  0000               	dw	0
  1265  016A16  0000               	dw	0
  1266  016A18  0000               	dw	0
  1267  016A1A  0000               	dw	0
  1268  016A1C  0000               	dw	0
  1269  016A1E  0000               	dw	0
  1270  016A20  0000               	dw	0
  1271  016A22  0000               	dw	0
  1272  016A24  0000               	dw	0
  1273  016A26  0000               	dw	0
  1274  016A28  0000               	dw	0
  1275  016A2A  0000               	dw	0
  1276  016A2C  0000               	dw	0
  1277  016A2E  0000               	dw	0
  1278  016A30  0000               	dw	0
  1279  016A32  0000               	dw	0
  1280  016A34  0000               	dw	0
  1281  016A36  0000               	dw	0
  1282  016A38  0000               	dw	0
  1283  016A3A  0000               	dw	0
  1284  016A3C  0000               	dw	0
  1285  016A3E  0000               	dw	0
  1286  016A40  0000               	dw	0
  1287  016A42  0000               	dw	0
  1288  016A44  0000               	dw	0
  1289  016A46  0000               	dw	0
  1290  016A48  0000               	dw	0
  1291  016A4A  0000               	dw	0
  1292  016A4C  0000               	dw	0
  1293  016A4E  0000               	dw	0
  1294  016A50  0000               	dw	0
  1295  016A52  0000               	dw	0
  1296  016A54  0000               	dw	0
  1297  016A56  0000               	dw	0
  1298  016A58  0000               	dw	0
  1299  016A5A  0000               	dw	0
  1300  016A5C  0000               	dw	0
  1301  016A5E  0000               	dw	0
  1302  016A60  0000               	dw	0
  1303  016A62  0000               	dw	0
  1304  016A64  0000               	dw	0
  1305  016A66  0000               	dw	0
  1306  016A68  0000               	dw	0
  1307  016A6A  0000               	dw	0
  1308  016A6C  0000               	dw	0
  1309  016A6E  0000               	dw	0
  1310  016A70  0000               	dw	0
  1311  016A72  0000               	dw	0
  1312  016A74  0000               	dw	0
  1313  016A76  0000               	dw	0
  1314  016A78  0000               	dw	0
  1315  016A7A  0000               	dw	0
  1316  016A7C  0000               	dw	0
  1317  016A7E  0000               	dw	0
  1318  016A80  0000               	dw	0
  1319  016A82  0000               	dw	0
  1320  016A84  0000               	dw	0
  1321  016A86  42FA               	dw	17146
  1322  016A88  0000               	dw	0
  1323  016A8A  0000               	dw	0
  1324  016A8C  0000               	dw	0
  1325  016A8E  0000               	dw	0
  1326  016A90  0000               	dw	0
  1327  016A92  0000               	dw	0
  1328  016A94  0000               	dw	0
  1329  016A96  0000               	dw	0
  1330  016A98  0000               	dw	0
  1331  016A9A  0000               	dw	0
  1332  016A9C  0000               	dw	0
  1333  016A9E  0000               	dw	0
  1334  016AA0  0000               	dw	0
  1335  016AA2  0000               	dw	0
  1336  016AA4  0000               	dw	0
  1337  016AA6  0000               	dw	0
  1338  016AA8  0000               	dw	0
  1339  016AAA  0000               	dw	0
  1340  016AAC  00                 	db	0
  1341  016AAD  01                 	db	1
  1342  016AAE  00                 	db	0
  1343  016AAF  00                 	db	0
  1344  016AB0  00                 	db	0
  1345  016AB1  00                 	db	0
  1346  016AB2  00                 	db	0
  1347  016AB3  00                 	db	0
  1348  016AB4  00                 	db	0
  1349  016AB5  00                 	db	0
  1350  016AB6  00                 	db	0
  1351  016AB7  00                 	db	0
  1352  016AB8  00                 	db	0
  1353  016AB9  00                 	db	0
  1354  016ABA  00                 	db	0
  1355  016ABB  00                 	db	0
  1356  016ABC  00                 	db	0
  1357  016ABD  00                 	db	0
  1358  016ABE  00                 	db	0
  1359  016ABF  00                 	db	0
  1360  016AC0  00                 	db	0
  1361  016AC1  00                 	db	0
  1362  016AC2  00                 	db	0
  1363  016AC3  00                 	db	0
  1364  016AC4  00                 	db	0
  1365  016AC5  00                 	db	0
  1366  016AC6  00                 	db	0
  1367  016AC7  00                 	db	0
  1368  016AC8  00                 	db	0
  1369  016AC9  00                 	db	0
  1370  016ACA  00                 	db	0
  1371  016ACB  00                 	db	0
  1372  016ACC  00                 	db	0
  1373  016ACD  00                 	db	0
  1374  016ACE  00                 	db	0
  1375  016ACF  00                 	db	0
  1376  016AD0  00                 	db	0
  1377  016AD1  00                 	db	0
  1378  016AD2  00                 	db	0
  1379  016AD3  00                 	db	0
  1380  016AD4  00                 	db	0
  1381  016AD5  00                 	db	0
  1382  016AD6  00                 	db	0
  1383  016AD7  00                 	db	0
  1384  016AD8  00                 	db	0
  1385  016AD9  00                 	db	0
  1386  016ADA  00                 	db	0
  1387  016ADB  00                 	db	0
  1388  016ADC  00                 	db	0
  1389  016ADD  00                 	db	0
  1390  016ADE  00                 	db	0
  1391  016ADF  00                 	db	0
  1392  016AE0  00                 	db	0
  1393  016AE1  00                 	db	0
  1394  016AE2  00                 	db	0
  1395  016AE3  00                 	db	0
  1396  016AE4  00                 	db	0
  1397  016AE5  00                 	db	0
  1398  016AE6  00                 	db	0
  1399  016AE7  00                 	db	0
  1400  016AE8  00                 	db	0
  1401  016AE9  00                 	db	0
  1402  016AEA  00                 	db	0
  1403  016AEB  00                 	db	0
  1404  016AEC  00                 	db	0
  1405  016AED  00                 	db	0
  1406  016AEE  00                 	db	0
  1407  016AEF  00                 	db	0
  1408  016AF0  00                 	db	0
  1409  016AF1  00                 	db	0
  1410  016AF2  00                 	db	0
  1411  016AF3  00                 	db	0
  1412  016AF4  00                 	db	0
  1413  016AF5  00                 	db	0
  1414  016AF6  00                 	db	0
  1415  016AF7  00                 	db	0
  1416  016AF8  00                 	db	0
  1417  016AF9  00                 	db	0
  1418  016AFA  00                 	db	0
  1419  016AFB  00                 	db	0
  1420  016AFC  00                 	db	0
  1421  016AFD  00                 	db	0
  1422  016AFE  00                 	db	0
  1423  016AFF  00                 	db	0
  1424  016B00  00                 	db	0
  1425  016B01  00                 	db	0
  1426  016B02  0000               	dw	0
  1427  016B04  0000               	dw	0
  1428  016B06  0000               	dw	0
  1429  016B08  0000               	dw	0
  1430  016B0A  0000               	dw	0
  1431  016B0C  0000               	dw	0
  1432  016B0E  0000               	dw	0
  1433  016B10  0000               	dw	0
  1434  016B12  0000               	dw	0
  1435  016B14  0000               	dw	0
  1436  016B16  01                 	db	1
  1437  016B17  00                 	db	0
  1438  016B18  00                 	db	0
  1439  016B19  00                 	db	0
  1440  016B1A  00                 	db	0
  1441  016B1B  00                 	db	0
  1442  016B1C  00                 	db	0
  1443  016B1D  00                 	db	0
  1444  016B1E  00                 	db	0
  1445                           
  1446                           	psect	idataBANK0
  1447  01B8A6                     __pidataBANK0:
  1448                           	opt callstack 0
  1449                           
  1450                           ;initializer for _R
  1451  01B8A6  0000               	dw	0
  1452  01B8A8  0000               	dw	0
  1453  01B8AA  0000               	dw	0
  1454  01B8AC  0000               	dw	0
  1455  01B8AE  0000               	dw	0
  1456  01B8B0  0000               	dw	0
  1457  01B8B2  0000               	dw	0
  1458  01B8B4  0000               	dw	0
  1459  01B8B6  0000               	dw	0
  1460  01B8B8  0000               	dw	0
  1461  01B8BA  0000               	dw	0
  1462  01B8BC  0000               	dw	0
  1463  01B8BE  0000               	dw	0
  1464  01B8C0  0000               	dw	0
  1465  01B8C2  0000               	dw	0
  1466  01B8C4  0000               	dw	0
  1467  01B8C6  0F67               	dw	3943
  1468  01B8C8  0F8F               	dw	3983
  1469  01B8CA  00                 	db	0
  1470  01B8CB  0000               	dw	0
  1471  01B8CD  00                 	db	0
  1472                           
  1473                           	psect	idataBANK1
  1474  01A224                     __pidataBANK1:
  1475                           	opt callstack 0
  1476                           
  1477                           ;initializer for _V
  1478  01A224  00                 	db	0
  1479  01A225  00                 	db	0
  1480  01A226  00                 	db	0
  1481  01A227  00                 	db	0
  1482  01A228  00                 	db	0
  1483  01A229  00                 	db	0
  1484  01A22A  00                 	db	0
  1485  01A22B  00                 	db	0
  1486  01A22C  00                 	db	0
  1487  01A22D  00                 	db	0
  1488  01A22E  00                 	db	0
  1489  01A22F  00                 	db	0
  1490  01A230  00                 	db	0
  1491  01A231  00                 	db	0
  1492  01A232  00                 	db	0
  1493  01A233  00                 	db	0
  1494  01A234  00                 	db	0
  1495  01A235  00                 	db	0
  1496  01A236  00                 	db	0
  1497  01A237  00                 	db	0
  1498  01A238  00                 	db	0
  1499  01A239  00                 	db	0
  1500  01A23A  00                 	db	0
  1501  01A23B  00                 	db	0
  1502  01A23C  00                 	db	0
  1503  01A23D  00                 	db	0
  1504  01A23E  00                 	db	0
  1505  01A23F  00                 	db	0
  1506  01A240  00                 	db	0
  1507  01A241  00                 	db	0
  1508  01A242  00                 	db	0
  1509  01A243  00                 	db	0
  1510  01A244  00                 	db	0
  1511  01A245  00                 	db	0
  1512  01A246  00                 	db	0
  1513  01A247  00                 	db	0
  1514  01A248  00                 	db	0
  1515  01A249  00                 	db	0
  1516  01A24A  00                 	db	0
  1517  01A24B  00                 	db	0
  1518  01A24C  00                 	db	0
  1519  01A24D  00                 	db	0
  1520  01A24E  00                 	db	0
  1521  01A24F  00                 	db	0
  1522  01A250  00                 	db	0
  1523  01A251  00                 	db	0
  1524  01A252  00                 	db	0
  1525  01A253  00                 	db	0
  1526  01A254  00                 	db	0
  1527  01A255  00                 	db	0
  1528  01A256  00                 	db	0
  1529  01A257  00                 	db	0
  1530  01A258  00                 	db	0
  1531  01A259  00                 	db	0
  1532  01A25A  00                 	db	0
  1533  01A25B  00                 	db	0
  1534  01A25C  00                 	db	0
  1535  01A25D  00                 	db	0
  1536  01A25E  00                 	db	0
  1537  01A25F  00                 	db	0
  1538  01A260  00                 	db	0
  1539  01A261  00                 	db	0
  1540  01A262  00                 	db	0
  1541  01A263  00                 	db	0
  1542  01A264  00                 	db	0
  1543  01A265  00                 	db	0
  1544  01A266  00                 	db	0
  1545  01A267  00                 	db	0
  1546  01A268  00                 	db	0
  1547  01A269  00                 	db	0
  1548  01A26A  00                 	db	0
  1549  01A26B  00                 	db	0
  1550  01A26C  00                 	db	0
  1551  01A26D  00                 	db	0
  1552  01A26E  00                 	db	0
  1553  01A26F  00                 	db	0
  1554  01A270  00                 	db	0
  1555  01A271  00                 	db	0
  1556  01A272  00                 	db	0
  1557  01A273  00                 	db	0
  1558  01A274  00                 	db	0
  1559  01A275  00                 	db	0
  1560  01A276  00                 	db	0
  1561  01A277  00                 	db	0
  1562  01A278  00                 	db	0
  1563  01A279  00                 	db	0
  1564  01A27A  00                 	db	0
  1565  01A27B  00                 	db	0
  1566  01A27C  00                 	db	0
  1567  01A27D  00                 	db	0
  1568  01A27E  00                 	db	0
  1569  01A27F  00                 	db	0
  1570  01A280  00                 	db	0
  1571  01A281  00                 	db	0
  1572  01A282  00                 	db	0
  1573  01A283  00                 	db	0
  1574  01A284  00                 	db	0
  1575  01A285  00                 	db	0
  1576  01A286  00                 	db	0
  1577  01A287  00                 	db	0
  1578  01A288  00                 	db	0
  1579  01A289  00                 	db	0
  1580  01A28A  00                 	db	0
  1581  01A28B  00                 	db	0
  1582  01A28C  00                 	db	0
  1583  01A28D  00                 	db	0
  1584  01A28E  00                 	db	0
  1585  01A28F  00                 	db	0
  1586  01A290  00                 	db	0
  1587  01A291  00                 	db	0
  1588  01A292  00                 	db	0
  1589  01A293  00                 	db	0
  1590  01A294  00                 	db	0
  1591  01A295  00                 	db	0
  1592  01A296  00                 	db	0
  1593  01A297  00                 	db	0
  1594  01A298  00                 	db	0
  1595  01A299  00                 	db	0
  1596  01A29A  00                 	db	0
  1597  01A29B  00                 	db	0
  1598  01A29C  00                 	db	0
  1599  01A29D  00                 	db	0
  1600  01A29E  00                 	db	0
  1601  01A29F  00                 	db	0
  1602  01A2A0  00                 	db	0
  1603  01A2A1  00                 	db	0
  1604  01A2A2  00                 	db	0
  1605  01A2A3  00                 	db	0
  1606  01A2A4  00                 	db	0
  1607  01A2A5  0000               	dw	0
  1608  01A2A7  0000               	dw	0
  1609  01A2A9  0000               	dw	0
  1610  01A2AB  0000               	dw	0
  1611  01A2AD  00                 	db	0
  1612  01A2AE  00                 	db	0
  1613  01A2AF  00                 	db	0
  1614  01A2B0  00                 	db	0
  1615  01A2B1  00                 	db	0
  1616  01A2B2  00                 	db	0
  1617  01A2B3  0000               	dw	0
  1618  01A2B5  0000               	dw	0
  1619  01A2B7  0000               	dw	0
  1620  01A2B9  0000               	dw	0
  1621  01A2BB  0000               	dw	0
  1622  01A2BD  0000               	dw	0
  1623  01A2BF  00                 	db	0
  1624  01A2C0  00                 	db	0
  1625  01A2C1  00                 	db	0
  1626  01A2C2  00                 	db	0
  1627  01A2C3  00                 	db	0
  1628  01A2C4  00                 	db	0
  1629  01A2C5  00                 	db	0
  1630  01A2C6  00                 	db	0
  1631  01A2C7  00                 	db	0
  1632  01A2C8  00                 	db	0
  1633  01A2C9  00                 	db	0
  1634  01A2CA  0000               	dw	0
  1635  01A2CC  0000               	dw	0
  1636  01A2CE  2D                 	db	45
  1637  01A2CF  00                 	db	0
  1638  01A2D0  00                 	db	0
  1639  01A2D1  00                 	db	0
  1640  01A2D2  00                 	db	0
  1641  01A2D3  0000               	dw	0
  1642  01A2D5  0000               	dw	0
  1643  01A2D7  0000               	dw	0
  1644  01A2D9  0000               	dw	0
  1645  01A2DB  0000               	dw	0
  1646  01A2DD  0000               	dw	0
  1647  01A2DF  0000               	dw	0
  1648  01A2E1  0000               	dw	0
  1649                           
  1650                           ;initializer for _H
  1651  01A2E3  00                 	db	0
  1652  01A2E4  00                 	db	0
  1653  01A2E5  01                 	db	1
  1654  01A2E6  00                 	db	0
  1655  01A2E7  01                 	db	1
  1656  01A2E8  00                 	db	0
  1657  01A2E9  00                 	db	0
  1658                           
  1659                           	psect	idataBANK2
  1660  01BEFA                     __pidataBANK2:
  1661                           	opt callstack 0
  1662                           
  1663                           ;initializer for stoa@F1166
  1664  01BEFA  28                 	db	40
  1665  01BEFB  6E                 	db	110
  1666  01BEFC  75                 	db	117
  1667  01BEFD  6C                 	db	108
  1668  01BEFE  6C                 	db	108
  1669  01BEFF  29                 	db	41
  1670  01BF00  00                 	db	0
  1671                           
  1672                           	psect	mediumconst
  1673  00FA66                     __pmediumconst:
  1674                           	opt callstack 0
  1675  00FA66  00                 	db	0
  1676  00FA67                     _BVSOC_TABLE:
  1677                           	opt callstack 0
  1678  00FA67  59D8               	dw	23000
  1679  00FA69  0000               	dw	0
  1680  00FA6B  0005               	dw	5
  1681  00FA6D  0000               	dw	0
  1682  00FA6F  5B68               	dw	23400
  1683  00FA71  0000               	dw	0
  1684  00FA73  000A               	dw	10
  1685  00FA75  0000               	dw	0
  1686  00FA77  5C30               	dw	23600
  1687  00FA79  0000               	dw	0
  1688  00FA7B  0014               	dw	20
  1689  00FA7D  0000               	dw	0
  1690  00FA7F  5E38               	dw	24120
  1691  00FA81  0000               	dw	0
  1692  00FA83  0019               	dw	25
  1693  00FA85  0000               	dw	0
  1694  00FA87  5E88               	dw	24200
  1695  00FA89  0000               	dw	0
  1696  00FA8B  001E               	dw	30
  1697  00FA8D  0000               	dw	0
  1698  00FA8F  5F78               	dw	24440
  1699  00FA91  0000               	dw	0
  1700  00FA93  0028               	dw	40
  1701  00FA95  0000               	dw	0
  1702  00FA97  5FDC               	dw	24540
  1703  00FA99  0000               	dw	0
  1704  00FA9B  002D               	dw	45
  1705  00FA9D  0000               	dw	0
  1706  00FA9F  6018               	dw	24600
  1707  00FAA1  0000               	dw	0
  1708  00FAA3  0032               	dw	50
  1709  00FAA5  0000               	dw	0
  1710  00FAA7  6046               	dw	24646
  1711  00FAA9  0000               	dw	0
  1712  00FAAB  0035               	dw	53
  1713  00FAAD  0000               	dw	0
  1714  00FAAF  607C               	dw	24700
  1715  00FAB1  0000               	dw	0
  1716  00FAB3  0037               	dw	55
  1717  00FAB5  0000               	dw	0
  1718  00FAB7  60AE               	dw	24750
  1719  00FAB9  0000               	dw	0
  1720  00FABB  0039               	dw	57
  1721  00FABD  0000               	dw	0
  1722  00FABF  60E0               	dw	24800
  1723  00FAC1  0000               	dw	0
  1724  00FAC3  003C               	dw	60
  1725  00FAC5  0000               	dw	0
  1726  00FAC7  6112               	dw	24850
  1727  00FAC9  0000               	dw	0
  1728  00FACB  003F               	dw	63
  1729  00FACD  0000               	dw	0
  1730  00FACF  615D               	dw	24925
  1731  00FAD1  0000               	dw	0
  1732  00FAD3  0043               	dw	67
  1733  00FAD5  0000               	dw	0
  1734  00FAD7  61A8               	dw	25000
  1735  00FAD9  0000               	dw	0
  1736  00FADB  0046               	dw	70
  1737  00FADD  0000               	dw	0
  1738  00FADF  61BC               	dw	25020
  1739  00FAE1  0000               	dw	0
  1740  00FAE3  0048               	dw	72
  1741  00FAE5  0000               	dw	0
  1742  00FAE7  61D0               	dw	25040
  1743  00FAE9  0000               	dw	0
  1744  00FAEB  004B               	dw	75
  1745  00FAED  0000               	dw	0
  1746  00FAEF  61DA               	dw	25050
  1747  00FAF1  0000               	dw	0
  1748  00FAF3  0050               	dw	80
  1749  00FAF5  0000               	dw	0
  1750  00FAF7  61E4               	dw	25060
  1751  00FAF9  0000               	dw	0
  1752  00FAFB  0055               	dw	85
  1753  00FAFD  0000               	dw	0
  1754  00FAFF  61F8               	dw	25080
  1755  00FB01  0000               	dw	0
  1756  00FB03  005A               	dw	90
  1757  00FB05  0000               	dw	0
  1758  00FB07  6208               	dw	25096
  1759  00FB09  0000               	dw	0
  1760  00FB0B  005C               	dw	92
  1761  00FB0D  0000               	dw	0
  1762  00FB0F  6222               	dw	25122
  1763  00FB11  0000               	dw	0
  1764  00FB13  005D               	dw	93
  1765  00FB15  0000               	dw	0
  1766  00FB17  6234               	dw	25140
  1767  00FB19  0000               	dw	0
  1768  00FB1B  005F               	dw	95
  1769  00FB1D  0000               	dw	0
  1770  00FB1F  6248               	dw	25160
  1771  00FB21  0000               	dw	0
  1772  00FB23  0061               	dw	97
  1773  00FB25  0000               	dw	0
  1774  00FB27  625C               	dw	25180
  1775  00FB29  0000               	dw	0
  1776  00FB2B  0064               	dw	100
  1777  00FB2D  0000               	dw	0
  1778  00FB2F  6784               	dw	26500
  1779  00FB31  0000               	dw	0
  1780  00FB33  0062               	dw	98
  1781  00FB35  0000               	dw	0
  1782  00FB37                     __end_of_BVSOC_TABLE:
  1783                           	opt callstack 0
  1784  00FB37                     _T:
  1785                           	opt callstack 0
  1786  00FB37  63                 	db	99
  1787  00FB38  6F                 	db	111
  1788  00FB39  6D                 	db	109
  1789  00FB3A  6D                 	db	109
  1790  00FB3B  61                 	db	97
  1791  00FB3C  6E                 	db	110
  1792  00FB3D  64                 	db	100
  1793  00FB3E  73                 	db	115
  1794  00FB3F  20                 	db	32
  1795  00FB40  31                 	db	49
  1796  00FB41  00                 	db	0
  1797  00FB42  00                 	db	0
  1798  00FB43  00                 	db	0
  1799  00FB44  00                 	db	0
  1800  00FB45  00                 	db	0
  1801  00FB46  00                 	db	0
  1802  00FB47  00                 	db	0
  1803  00FB48  00                 	db	0
  1804  00FB49  64                 	db	100
  1805  00FB4A  69                 	db	105
  1806  00FB4B  73                 	db	115
  1807  00FB4C  70                 	db	112
  1808  00FB4D  6C                 	db	108
  1809  00FB4E  61                 	db	97
  1810  00FB4F  79                 	db	121
  1811  00FB50  73                 	db	115
  1812  00FB51  20                 	db	32
  1813  00FB52  31                 	db	49
  1814  00FB53  00                 	db	0
  1815  00FB54  00                 	db	0
  1816  00FB55  00                 	db	0
  1817  00FB56  00                 	db	0
  1818  00FB57  00                 	db	0
  1819  00FB58  00                 	db	0
  1820  00FB59  00                 	db	0
  1821  00FB5A  00                 	db	0
  1822  00FB5B  63                 	db	99
  1823  00FB5C  6F                 	db	111
  1824  00FB5D  6D                 	db	109
  1825  00FB5E  6D                 	db	109
  1826  00FB5F  61                 	db	97
  1827  00FB60  6E                 	db	110
  1828  00FB61  64                 	db	100
  1829  00FB62  73                 	db	115
  1830  00FB63  20                 	db	32
  1831  00FB64  32                 	db	50
  1832  00FB65  00                 	db	0
  1833  00FB66  00                 	db	0
  1834  00FB67  00                 	db	0
  1835  00FB68  00                 	db	0
  1836  00FB69  00                 	db	0
  1837  00FB6A  00                 	db	0
  1838  00FB6B  00                 	db	0
  1839  00FB6C  00                 	db	0
  1840  00FB6D  64                 	db	100
  1841  00FB6E  69                 	db	105
  1842  00FB6F  73                 	db	115
  1843  00FB70  70                 	db	112
  1844  00FB71  6C                 	db	108
  1845  00FB72  61                 	db	97
  1846  00FB73  79                 	db	121
  1847  00FB74  73                 	db	115
  1848  00FB75  20                 	db	32
  1849  00FB76  32                 	db	50
  1850  00FB77  00                 	db	0
  1851  00FB78  00                 	db	0
  1852  00FB79  00                 	db	0
  1853  00FB7A  00                 	db	0
  1854  00FB7B  00                 	db	0
  1855  00FB7C  00                 	db	0
  1856  00FB7D  00                 	db	0
  1857  00FB7E  00                 	db	0
  1858  00FB7F  63                 	db	99
  1859  00FB80  6F                 	db	111
  1860  00FB81  6D                 	db	109
  1861  00FB82  6D                 	db	109
  1862  00FB83  61                 	db	97
  1863  00FB84  6E                 	db	110
  1864  00FB85  64                 	db	100
  1865  00FB86  73                 	db	115
  1866  00FB87  20                 	db	32
  1867  00FB88  33                 	db	51
  1868  00FB89  00                 	db	0
  1869  00FB8A  00                 	db	0
  1870  00FB8B  00                 	db	0
  1871  00FB8C  00                 	db	0
  1872  00FB8D  00                 	db	0
  1873  00FB8E  00                 	db	0
  1874  00FB8F  00                 	db	0
  1875  00FB90  00                 	db	0
  1876  00FB91  64                 	db	100
  1877  00FB92  69                 	db	105
  1878  00FB93  73                 	db	115
  1879  00FB94  70                 	db	112
  1880  00FB95  6C                 	db	108
  1881  00FB96  61                 	db	97
  1882  00FB97  79                 	db	121
  1883  00FB98  73                 	db	115
  1884  00FB99  20                 	db	32
  1885  00FB9A  33                 	db	51
  1886  00FB9B  00                 	db	0
  1887  00FB9C  00                 	db	0
  1888  00FB9D  00                 	db	0
  1889  00FB9E  00                 	db	0
  1890  00FB9F  00                 	db	0
  1891  00FBA0  00                 	db	0
  1892  00FBA1  00                 	db	0
  1893  00FBA2  00                 	db	0
  1894  00FBA3  63                 	db	99
  1895  00FBA4  6F                 	db	111
  1896  00FBA5  6D                 	db	109
  1897  00FBA6  6D                 	db	109
  1898  00FBA7  61                 	db	97
  1899  00FBA8  6E                 	db	110
  1900  00FBA9  64                 	db	100
  1901  00FBAA  73                 	db	115
  1902  00FBAB  20                 	db	32
  1903  00FBAC  34                 	db	52
  1904  00FBAD  00                 	db	0
  1905  00FBAE  00                 	db	0
  1906  00FBAF  00                 	db	0
  1907  00FBB0  00                 	db	0
  1908  00FBB1  00                 	db	0
  1909  00FBB2  00                 	db	0
  1910  00FBB3  00                 	db	0
  1911  00FBB4  00                 	db	0
  1912  00FBB5  64                 	db	100
  1913  00FBB6  69                 	db	105
  1914  00FBB7  73                 	db	115
  1915  00FBB8  70                 	db	112
  1916  00FBB9  6C                 	db	108
  1917  00FBBA  61                 	db	97
  1918  00FBBB  79                 	db	121
  1919  00FBBC  73                 	db	115
  1920  00FBBD  20                 	db	32
  1921  00FBBE  34                 	db	52
  1922  00FBBF  00                 	db	0
  1923  00FBC0  00                 	db	0
  1924  00FBC1  00                 	db	0
  1925  00FBC2  00                 	db	0
  1926  00FBC3  00                 	db	0
  1927  00FBC4  00                 	db	0
  1928  00FBC5  00                 	db	0
  1929  00FBC6  00                 	db	0
  1930  00FBC7                     __end_of_T:
  1931                           	opt callstack 0
  1932  00FBC7                     _spin:
  1933                           	opt callstack 0
  1934  00FBC7  7C                 	db	124
  1935  00FBC8  7C                 	db	124
  1936  00FBC9  2F                 	db	47
  1937  00FBCA  2F                 	db	47
  1938  00FBCB  2D                 	db	45
  1939  00FBCC  2D                 	db	45
  1940  00FBCD  00                 	db	0
  1941  00FBCE  00                 	db	0
  1942  00FBCF  00                 	db	0
  1943  00FBD0  00                 	db	0
  1944  00FBD1  00                 	db	0
  1945  00FBD2  00                 	db	0
  1946  00FBD3  00                 	db	0
  1947  00FBD4  00                 	db	0
  1948  00FBD5  00                 	db	0
  1949  00FBD6  00                 	db	0
  1950  00FBD7  00                 	db	0
  1951  00FBD8  00                 	db	0
  1952  00FBD9  00                 	db	0
  1953  00FBDA  00                 	db	0
  1954  00FBDB  7C                 	db	124
  1955  00FBDC  7C                 	db	124
  1956  00FBDD  2F                 	db	47
  1957  00FBDE  2F                 	db	47
  1958  00FBDF  2D                 	db	45
  1959  00FBE0  2D                 	db	45
  1960  00FBE1  5C                 	db	92
  1961  00FBE2  5C                 	db	92
  1962  00FBE3  00                 	db	0
  1963  00FBE4  00                 	db	0
  1964  00FBE5  00                 	db	0
  1965  00FBE6  00                 	db	0
  1966  00FBE7  00                 	db	0
  1967  00FBE8  00                 	db	0
  1968  00FBE9  00                 	db	0
  1969  00FBEA  00                 	db	0
  1970  00FBEB  00                 	db	0
  1971  00FBEC  00                 	db	0
  1972  00FBED  00                 	db	0
  1973  00FBEE  00                 	db	0
  1974  00FBEF  4F                 	db	79
  1975  00FBF0  4F                 	db	79
  1976  00FBF1  4F                 	db	79
  1977  00FBF2  4F                 	db	79
  1978  00FBF3  4F                 	db	79
  1979  00FBF4  4F                 	db	79
  1980  00FBF5  2D                 	db	45
  1981  00FBF6  2D                 	db	45
  1982  00FBF7  5F                 	db	95
  1983  00FBF8  5F                 	db	95
  1984  00FBF9  2D                 	db	45
  1985  00FBFA  00                 	db	0
  1986  00FBFB  00                 	db	0
  1987  00FBFC  00                 	db	0
  1988  00FBFD  00                 	db	0
  1989  00FBFE  00                 	db	0
  1990  00FBFF  00                 	db	0
  1991  00FC00  00                 	db	0
  1992  00FC01  00                 	db	0
  1993  00FC02  00                 	db	0
  1994  00FC03  76                 	db	118
  1995  00FC04  76                 	db	118
  1996  00FC05  3C                 	db	60
  1997  00FC06  3C                 	db	60
  1998  00FC07  5E                 	db	94
  1999  00FC08  5E                 	db	94
  2000  00FC09  3E                 	db	62
  2001  00FC0A  3E                 	db	62
  2002  00FC0B  00                 	db	0
  2003  00FC0C  00                 	db	0
  2004  00FC0D  00                 	db	0
  2005  00FC0E  00                 	db	0
  2006  00FC0F  00                 	db	0
  2007  00FC10  00                 	db	0
  2008  00FC11  00                 	db	0
  2009  00FC12  00                 	db	0
  2010  00FC13  00                 	db	0
  2011  00FC14  00                 	db	0
  2012  00FC15  00                 	db	0
  2013  00FC16  00                 	db	0
  2014  00FC17  2E                 	db	46
  2015  00FC18  2E                 	db	46
  2016  00FC19  2A                 	db	42
  2017  00FC1A  2A                 	db	42
  2018  00FC1B  78                 	db	120
  2019  00FC1C  23                 	db	35
  2020  00FC1D  78                 	db	120
  2021  00FC1E  23                 	db	35
  2022  00FC1F  58                 	db	88
  2023  00FC20  58                 	db	88
  2024  00FC21  7C                 	db	124
  2025  00FC22  7C                 	db	124
  2026  00FC23  2D                 	db	45
  2027  00FC24  2D                 	db	45
  2028  00FC25  00                 	db	0
  2029  00FC26  00                 	db	0
  2030  00FC27  00                 	db	0
  2031  00FC28  00                 	db	0
  2032  00FC29  00                 	db	0
  2033  00FC2A  00                 	db	0
  2034  00FC2B  2E                 	db	46
  2035  00FC2C  2E                 	db	46
  2036  00FC2D  6F                 	db	111
  2037  00FC2E  6F                 	db	111
  2038  00FC2F  4F                 	db	79
  2039  00FC30  4F                 	db	79
  2040  00FC31  6F                 	db	111
  2041  00FC32  6F                 	db	111
  2042  00FC33  00                 	db	0
  2043  00FC34  00                 	db	0
  2044  00FC35  00                 	db	0
  2045  00FC36  00                 	db	0
  2046  00FC37  00                 	db	0
  2047  00FC38  00                 	db	0
  2048  00FC39  00                 	db	0
  2049  00FC3A  00                 	db	0
  2050  00FC3B  00                 	db	0
  2051  00FC3C  00                 	db	0
  2052  00FC3D  00                 	db	0
  2053  00FC3E  00                 	db	0
  2054  00FC3F                     __end_of_spin:
  2055                           	opt callstack 0
  2056  00FC3F  0000               	dw	0
  2057  00FC41  3F80               	dw	16256
  2058  00FC43  0000               	dw	0
  2059  00FC45  3FC0               	dw	16320
  2060  00FC47                     __end_of_bp:
  2061                           	opt callstack 0
  2062  00FC47  AA00               	dw	43520
  2063  00FC49  3FB8               	dw	16312
  2064  00FC4B                     __end_of_ivln2_h:
  2065                           	opt callstack 0
  2066  00FC4B  23C6               	dw	9158
  2067  00FC4D  B8F6               	dw	47350
  2068  00FC4F                     __end_of_cp_l:
  2069                           	opt callstack 0
  2070  00FC4F  4000               	dw	16384
  2071  00FC51  3F76               	dw	16246
  2072  00FC53                     __end_of_cp_h:
  2073                           	opt callstack 0
  2074  0000                     _IVTADL	set	14493
  2075  0000                     _IVTADH	set	14494
  2076  0000                     _IVTADU	set	14495
  2077  0000                     _PIR6bits	set	14758
  2078  0000                     _PIR4bits	set	14756
  2079  0000                     _PIE8bits	set	14744
  2080  0000                     _PIR8bits	set	14760
  2081  0000                     _SCANPR	set	14839
  2082  0000                     _DMA2PR	set	14836
  2083  0000                     _DMA1PR	set	14835
  2084  0000                     _MAINPR	set	14834
  2085  0000                     _ISRPR	set	14833
  2086  0000                     _PIE2bits	set	14738
  2087  0000                     _PIR2bits	set	14754
  2088  0000                     _PIE9bits	set	14745
  2089  0000                     _PIR9bits	set	14761
  2090  0000                     _PIE6bits	set	14742
  2091  0000                     _PIE3bits	set	14739
  2092  0000                     _PMD7	set	14791
  2093  0000                     _PMD6	set	14790
  2094  0000                     _PMD5	set	14789
  2095  0000                     _PMD4	set	14788
  2096  0000                     _PMD3	set	14787
  2097  0000                     _PMD2	set	14786
  2098  0000                     _PMD1	set	14785
  2099  0000                     _PMD0	set	14784
  2100  0000                     _OSCTUNE	set	14814
  2101  0000                     _OSCFRQ	set	14815
  2102  0000                     _OSCEN	set	14813
  2103  0000                     _OSCCON3	set	14811
  2104  0000                     _OSCCON1	set	14809
  2105  0000                     _IPR8bits	set	14728
  2106  0000                     _IPR9bits	set	14729
  2107  0000                     _IPR5bits	set	14725
  2108  0000                     _IPR1bits	set	14721
  2109  0000                     _IPR3bits	set	14723
  2110  0000                     _IPR6bits	set	14726
  2111  0000                     _IPR2bits	set	14722
  2112  0000                     _PIE5bits	set	14741
  2113  0000                     _PIE1bits	set	14737
  2114  0000                     _PIR5bits	set	14757
  2115  0000                     _PIR1bits	set	14753
  2116  0000                     _PLLR	set	118496
  2117  0000                     _SPI1SDIPPS	set	15071
  2118  0000                     _U1RXPPS	set	15077
  2119  0000                     _RC6PPS	set	14870
  2120  0000                     _RC5PPS	set	14869
  2121  0000                     _INT1PPS	set	15041
  2122  0000                     _RD1PPS	set	14873
  2123  0000                     _INT0PPS	set	15040
  2124  0000                     _RC3PPS	set	14867
  2125  0000                     _RB6PPS	set	14862
  2126  0000                     _SPI1SCKPPS	set	15070
  2127  0000                     _U2RXPPS	set	15080
  2128  0000                     _SLRCONF	set	14995
  2129  0000                     _SLRCONE	set	14979
  2130  0000                     _SLRCOND	set	14963
  2131  0000                     _SLRCONC	set	14947
  2132  0000                     _SLRCONB	set	14931
  2133  0000                     _SLRCONA	set	14915
  2134  0000                     _ODCOND	set	14962
  2135  0000                     _ODCONC	set	14946
  2136  0000                     _ODCONB	set	14930
  2137  0000                     _ODCONA	set	14914
  2138  0000                     _ODCONF	set	14994
  2139  0000                     _ODCONE	set	14978
  2140  0000                     _WPUC	set	14945
  2141  0000                     _WPUA	set	14913
  2142  0000                     _WPUB	set	14929
  2143  0000                     _WPUE	set	14977
  2144  0000                     _WPUF	set	14993
  2145  0000                     _WPUD	set	14961
  2146  0000                     _ANSELA	set	14912
  2147  0000                     _ANSELF	set	14992
  2148  0000                     _ANSELE	set	14976
  2149  0000                     _ANSELB	set	14928
  2150  0000                     _ANSELC	set	14944
  2151  0000                     _ANSELD	set	14960
  2152  0000                     _DMA2SSA	set	15321
  2153  0000                     _DMA1SSA	set	15353
  2154  0000                     _DMA2DSZ	set	15310
  2155  0000                     _DMA2SSZ	set	15319
  2156  0000                     _DMA2DSA	set	15312
  2157  0000                     _DMA1DSZ	set	15342
  2158  0000                     _DMA1SSZ	set	15351
  2159  0000                     _DMA1DSA	set	15344
  2160  0000                     _DMA2CON0bits	set	15324
  2161  0000                     _DMA2CON1bits	set	15325
  2162  0000                     _DMA1CON0bits	set	15356
  2163  0000                     _DMA1CON1bits	set	15357
  2164  0000                     _DMA2CON0	set	15324
  2165  0000                     _DMA2AIRQ	set	15326
  2166  0000                     _DMA2SIRQ	set	15327
  2167  0000                     _DMA2CON1	set	15325
  2168  0000                     _DMA1CON0	set	15356
  2169  0000                     _DMA1AIRQ	set	15358
  2170  0000                     _DMA1SIRQ	set	15359
  2171  0000                     _DMA1CON1	set	15357
  2172  0000                     _CLKRCON	set	15589
  2173  0000                     _CLKRCLK	set	15590
  2174  0000                     _SPI1INTFbits	set	15642
  2175  0000                     _SPI1RXB	set	15632
  2176  0000                     _SPI1TXB	set	15633
  2177  0000                     _SPI1TCNTL	set	15634
  2178  0000                     _SPI1CON0	set	15636
  2179  0000                     _SPI1CLK	set	15644
  2180  0000                     _SPI1BAUD	set	15641
  2181  0000                     _SPI1CON2	set	15638
  2182  0000                     _SPI1CON1	set	15637
  2183  0000                     _U2RXB	set	15824
  2184  0000                     _U2TXB	set	15826
  2185  0000                     _U2ERRIE	set	15842
  2186  0000                     _U2ERRIR	set	15841
  2187  0000                     _U2UIR	set	15840
  2188  0000                     _U2FIFO	set	15839
  2189  0000                     _U2BRGH	set	15838
  2190  0000                     _U2BRGL	set	15837
  2191  0000                     _U2CON2	set	15836
  2192  0000                     _U2CON1	set	15835
  2193  0000                     _U2CON0	set	15834
  2194  0000                     _U2P3L	set	15832
  2195  0000                     _U2P2L	set	15830
  2196  0000                     _U2P1L	set	15828
  2197  0000                     _U1RXB	set	15848
  2198  0000                     _U1ERRIE	set	15866
  2199  0000                     _U1ERRIR	set	15865
  2200  0000                     _U1UIR	set	15864
  2201  0000                     _U1FIFO	set	15863
  2202  0000                     _U1BRGH	set	15862
  2203  0000                     _U1BRGL	set	15861
  2204  0000                     _U1CON2	set	15860
  2205  0000                     _U1CON1	set	15859
  2206  0000                     _U1CON0	set	15858
  2207  0000                     _U1P3H	set	15857
  2208  0000                     _U1P3L	set	15856
  2209  0000                     _U1P2H	set	15855
  2210  0000                     _U1P2L	set	15854
  2211  0000                     _U1P1H	set	15853
  2212  0000                     _U1P1L	set	15852
  2213  0000                     _FVRCON	set	16065
  2214  0000                     _ADFLTRL	set	16102
  2215  0000                     _ADFLTRH	set	16103
  2216  0000                     _ADCON0bits	set	16120
  2217  0000                     _ADCON0	set	16120
  2218  0000                     _ADCLK	set	16127
  2219  0000                     _ADACT	set	16126
  2220  0000                     _ADREF	set	16125
  2221  0000                     _ADSTAT	set	16124
  2222  0000                     _ADCON3	set	16123
  2223  0000                     _ADCON2	set	16122
  2224  0000                     _ADCON1	set	16121
  2225  0000                     _ADPREH	set	16119
  2226  0000                     _ADPREL	set	16118
  2227  0000                     _ADCAP	set	16117
  2228  0000                     _ADACQH	set	16116
  2229  0000                     _ADACQL	set	16115
  2230  0000                     _ADPCH	set	16113
  2231  0000                     _ADRPT	set	16108
  2232  0000                     _ADACCU	set	16106
  2233  0000                     _ADSTPTH	set	16101
  2234  0000                     _ADSTPTL	set	16100
  2235  0000                     _ADUTHH	set	16097
  2236  0000                     _ADUTHL	set	16096
  2237  0000                     _ADLTHH	set	16095
  2238  0000                     _ADLTHL	set	16094
  2239  0000                     _CCPTMRS1bits	set	16223
  2240  0000                     _PORTFbits	set	16335
  2241  0000                     _LATFbits	set	16319
  2242  0000                     _LATCbits	set	16316
  2243  0000                     _LATDbits	set	16317
  2244  0000                     _PORTBbits	set	16331
  2245  0000                     _T3CONbits	set	16294
  2246  0000                     _T3CON	set	16294
  2247  0000                     _TMR3L	set	16292
  2248  0000                     _TMR3H	set	16293
  2249  0000                     _T3CLK	set	16297
  2250  0000                     _T3GATE	set	16296
  2251  0000                     _T3GCON	set	16295
  2252  0000                     _T2CON	set	16300
  2253  0000                     _T2TMR	set	16298
  2254  0000                     _T2PR	set	16299
  2255  0000                     _T2RST	set	16303
  2256  0000                     _T2HLT	set	16301
  2257  0000                     _T2CLKCON	set	16302
  2258  0000                     _PWM8DCL	set	16224
  2259  0000                     _PWM8DCH	set	16225
  2260  0000                     _PWM8CON	set	16226
  2261  0000                     _LATEbits	set	16318
  2262  0000                     _T5CONbits	set	16282
  2263  0000                     _T5CON	set	16282
  2264  0000                     _TMR5L	set	16280
  2265  0000                     _TMR5H	set	16281
  2266  0000                     _T5CLK	set	16285
  2267  0000                     _T5GATE	set	16284
  2268  0000                     _T5GCON	set	16283
  2269  0000                     _T6CON	set	16276
  2270  0000                     _T6TMR	set	16274
  2271  0000                     _T6PR	set	16275
  2272  0000                     _T6RST	set	16279
  2273  0000                     _T6HLT	set	16277
  2274  0000                     _T6CLKCON	set	16278
  2275  0000                     _TRISD	set	16325
  2276  0000                     _TRISC	set	16324
  2277  0000                     _TRISB	set	16323
  2278  0000                     _TRISA	set	16322
  2279  0000                     _TRISF	set	16327
  2280  0000                     _TRISE	set	16326
  2281  0000                     _LATC	set	16316
  2282  0000                     _LATB	set	16315
  2283  0000                     _LATF	set	16319
  2284  0000                     _LATA	set	16314
  2285  0000                     _LATD	set	16317
  2286  0000                     _LATE	set	16318
  2287  0000                     _IVTLOCKbits	set	16340
  2288  0000                     _IVTLOCK	set	16340
  2289  0000                     _INTCON0bits	set	16338
  2290  0000                     _GIE	set	130711
  2291  00FC53                     STR_65:
  2292                           
  2293                           ; BSR set to: 57
  2294  00FC53  20                 	db	32
  2295  00FC54  25                 	db	37
  2296  00FC55  63                 	db	99	;'c'
  2297  00FC56  20                 	db	32
  2298  00FC57  2C                 	db	44
  2299  00FC58  25                 	db	37
  2300  00FC59  6C                 	db	108	;'l'
  2301  00FC5A  75                 	db	117	;'u'
  2302  00FC5B  2C                 	db	44
  2303  00FC5C  25                 	db	37
  2304  00FC5D  34                 	db	52	;'4'
  2305  00FC5E  2E                 	db	46
  2306  00FC5F  34                 	db	52	;'4'
  2307  00FC60  66                 	db	102	;'f'
  2308  00FC61  2C                 	db	44
  2309  00FC62  25                 	db	37
  2310  00FC63  34                 	db	52	;'4'
  2311  00FC64  2E                 	db	46
  2312  00FC65  34                 	db	52	;'4'
  2313  00FC66  66                 	db	102	;'f'
  2314  00FC67  2C                 	db	44
  2315  00FC68  25                 	db	37
  2316  00FC69  34                 	db	52	;'4'
  2317  00FC6A  2E                 	db	46
  2318  00FC6B  34                 	db	52	;'4'
  2319  00FC6C  66                 	db	102	;'f'
  2320  00FC6D  2C                 	db	44
  2321  00FC6E  25                 	db	37
  2322  00FC6F  34                 	db	52	;'4'
  2323  00FC70  2E                 	db	46
  2324  00FC71  34                 	db	52	;'4'
  2325  00FC72  66                 	db	102	;'f'
  2326  00FC73  2C                 	db	44
  2327  00FC74  25                 	db	37
  2328  00FC75  34                 	db	52	;'4'
  2329  00FC76  2E                 	db	46
  2330  00FC77  33                 	db	51	;'3'
  2331  00FC78  66                 	db	102	;'f'
  2332  00FC79  2C                 	db	44
  2333  00FC7A  25                 	db	37
  2334  00FC7B  34                 	db	52	;'4'
  2335  00FC7C  2E                 	db	46
  2336  00FC7D  33                 	db	51	;'3'
  2337  00FC7E  66                 	db	102	;'f'
  2338  00FC7F  2C                 	db	44
  2339  00FC80  25                 	db	37
  2340  00FC81  34                 	db	52	;'4'
  2341  00FC82  2E                 	db	46
  2342  00FC83  33                 	db	51	;'3'
  2343  00FC84  66                 	db	102	;'f'
  2344  00FC85  2C                 	db	44
  2345  00FC86  25                 	db	37
  2346  00FC87  34                 	db	52	;'4'
  2347  00FC88  2E                 	db	46
  2348  00FC89  33                 	db	51	;'3'
  2349  00FC8A  66                 	db	102	;'f'
  2350  00FC8B  2C                 	db	44
  2351  00FC8C  25                 	db	37
  2352  00FC8D  34                 	db	52	;'4'
  2353  00FC8E  2E                 	db	46
  2354  00FC8F  33                 	db	51	;'3'
  2355  00FC90  66                 	db	102	;'f'
  2356  00FC91  2C                 	db	44
  2357  00FC92  25                 	db	37
  2358  00FC93  34                 	db	52	;'4'
  2359  00FC94  2E                 	db	46
  2360  00FC95  33                 	db	51	;'3'
  2361  00FC96  66                 	db	102	;'f'
  2362  00FC97  2C                 	db	44
  2363  00FC98  25                 	db	37
  2364  00FC99  64                 	db	100	;'d'
  2365  00FC9A  2C                 	db	44
  2366  00FC9B  25                 	db	37
  2367  00FC9C  64                 	db	100	;'d'
  2368  00FC9D  2C                 	db	44
  2369  00FC9E  25                 	db	37
  2370  00FC9F  32                 	db	50	;'2'
  2371  00FCA0  2E                 	db	46
  2372  00FCA1  36                 	db	54	;'6'
  2373  00FCA2  66                 	db	102	;'f'
  2374  00FCA3  2C                 	db	44
  2375  00FCA4  25                 	db	37
  2376  00FCA5  34                 	db	52	;'4'
  2377  00FCA6  2E                 	db	46
  2378  00FCA7  33                 	db	51	;'3'
  2379  00FCA8  66                 	db	102	;'f'
  2380  00FCA9  2C                 	db	44
  2381  00FCAA  25                 	db	37
  2382  00FCAB  64                 	db	100	;'d'
  2383  00FCAC  2C                 	db	44
  2384  00FCAD  25                 	db	37
  2385  00FCAE  64                 	db	100	;'d'
  2386  00FCAF  2C                 	db	44
  2387  00FCB0  25                 	db	37
  2388  00FCB1  6C                 	db	108	;'l'
  2389  00FCB2  75                 	db	117	;'u'
  2390  00FCB3  2C                 	db	44
  2391  00FCB4  25                 	db	37
  2392  00FCB5  6C                 	db	108	;'l'
  2393  00FCB6  75                 	db	117	;'u'
  2394  00FCB7  0D                 	db	13
  2395  00FCB8  0A                 	db	10
  2396  00FCB9  00                 	db	0
  2397  00FCBA                     STR_17:
  2398                           
  2399                           ; BSR set to: 57
  2400  00FCBA  52                 	db	82	;'R'
  2401  00FCBB  31                 	db	49	;'1'
  2402  00FCBC  20                 	db	32
  2403  00FCBD  25                 	db	37
  2404  00FCBE  32                 	db	50	;'2'
  2405  00FCBF  2E                 	db	46
  2406  00FCC0  33                 	db	51	;'3'
  2407  00FCC1  66                 	db	102	;'f'
  2408  00FCC2  20                 	db	32
  2409  00FCC3  25                 	db	37
  2410  00FCC4  33                 	db	51	;'3'
  2411  00FCC5  2E                 	db	46
  2412  00FCC6  34                 	db	52	;'4'
  2413  00FCC7  66                 	db	102	;'f'
  2414  00FCC8  20                 	db	32
  2415  00FCC9  20                 	db	32
  2416  00FCCA  20                 	db	32
  2417  00FCCB  20                 	db	32
  2418  00FCCC  20                 	db	32
  2419  00FCCD  20                 	db	32
  2420  00FCCE  20                 	db	32
  2421  00FCCF  20                 	db	32
  2422  00FCD0  20                 	db	32
  2423  00FCD1  20                 	db	32
  2424  00FCD2  20                 	db	32
  2425  00FCD3  00                 	db	0
  2426  00FCD4                     STR_18:
  2427                           
  2428                           ; BSR set to: 57
  2429  00FCD4  52                 	db	82	;'R'
  2430  00FCD5  32                 	db	50	;'2'
  2431  00FCD6  20                 	db	32
  2432  00FCD7  25                 	db	37
  2433  00FCD8  32                 	db	50	;'2'
  2434  00FCD9  2E                 	db	46
  2435  00FCDA  33                 	db	51	;'3'
  2436  00FCDB  66                 	db	102	;'f'
  2437  00FCDC  20                 	db	32
  2438  00FCDD  25                 	db	37
  2439  00FCDE  33                 	db	51	;'3'
  2440  00FCDF  2E                 	db	46
  2441  00FCE0  34                 	db	52	;'4'
  2442  00FCE1  66                 	db	102	;'f'
  2443  00FCE2  20                 	db	32
  2444  00FCE3  20                 	db	32
  2445  00FCE4  20                 	db	32
  2446  00FCE5  20                 	db	32
  2447  00FCE6  20                 	db	32
  2448  00FCE7  20                 	db	32
  2449  00FCE8  20                 	db	32
  2450  00FCE9  20                 	db	32
  2451  00FCEA  20                 	db	32
  2452  00FCEB  20                 	db	32
  2453  00FCEC  20                 	db	32
  2454  00FCED  00                 	db	0
  2455  00FCEE                     
  2456                           ; BSR set to: 57
  2457  00FCEE  20                 	db	32
  2458  00FCEF  4D                 	db	77	;'M'
  2459  00FCF0  65                 	db	101	;'e'
  2460  00FCF1  73                 	db	115	;'s'
  2461  00FCF2  67                 	db	103	;'g'
  2462  00FCF3  20                 	db	32
  2463  00FCF4  25                 	db	37
  2464  00FCF5  64                 	db	100	;'d'
  2465  00FCF6  20                 	db	32
  2466  00FCF7  53                 	db	83	;'S'
  2467  00FCF8  74                 	db	116	;'t'
  2468  00FCF9  61                 	db	97	;'a'
  2469  00FCFA  63                 	db	99	;'c'
  2470  00FCFB  6B                 	db	107	;'k'
  2471  00FCFC  20                 	db	32
  2472  00FCFD  25                 	db	37
  2473  00FCFE  64                 	db	100	;'d'
  2474  00FCFF  20                 	db	32
  2475  00FD00  20                 	db	32
  2476  00FD01  20                 	db	32
  2477  00FD02  20                 	db	32
  2478  00FD03  20                 	db	32
  2479  00FD04  20                 	db	32
  2480  00FD05  00                 	db	0
  2481  00FD06                     STR_9:
  2482                           
  2483                           ; BSR set to: 57
  2484  00FD06  53                 	db	83	;'S'
  2485  00FD07  20                 	db	32
  2486  00FD08  53                 	db	83	;'S'
  2487  00FD09  25                 	db	37
  2488  00FD0A  63                 	db	99	;'c'
  2489  00FD0B  43                 	db	67	;'C'
  2490  00FD0C  20                 	db	32
  2491  00FD0D  25                 	db	37
  2492  00FD0E  64                 	db	100	;'d'
  2493  00FD0F  20                 	db	32
  2494  00FD10  25                 	db	37
  2495  00FD11  32                 	db	50	;'2'
  2496  00FD12  2E                 	db	46
  2497  00FD13  34                 	db	52	;'4'
  2498  00FD14  66                 	db	102	;'f'
  2499  00FD15  20                 	db	32
  2500  00FD16  20                 	db	32
  2501  00FD17  20                 	db	32
  2502  00FD18  20                 	db	32
  2503  00FD19  20                 	db	32
  2504  00FD1A  20                 	db	32
  2505  00FD1B  20                 	db	32
  2506  00FD1C  00                 	db	0
  2507  00FD1D                     STR_16:
  2508                           
  2509                           ; BSR set to: 57
  2510  00FD1D  45                 	db	69	;'E'
  2511  00FD1E  53                 	db	83	;'S'
  2512  00FD1F  52                 	db	82	;'R'
  2513  00FD20  20                 	db	32
  2514  00FD21  20                 	db	32
  2515  00FD22  25                 	db	37
  2516  00FD23  32                 	db	50	;'2'
  2517  00FD24  2E                 	db	46
  2518  00FD25  36                 	db	54	;'6'
  2519  00FD26  66                 	db	102	;'f'
  2520  00FD27  20                 	db	32
  2521  00FD28  20                 	db	32
  2522  00FD29  20                 	db	32
  2523  00FD2A  20                 	db	32
  2524  00FD2B  20                 	db	32
  2525  00FD2C  20                 	db	32
  2526  00FD2D  20                 	db	32
  2527  00FD2E  20                 	db	32
  2528  00FD2F  20                 	db	32
  2529  00FD30  20                 	db	32
  2530  00FD31  20                 	db	32
  2531  00FD32  00                 	db	0
  2532  00FD33                     STR_10:
  2533                           
  2534                           ; BSR set to: 57
  2535  00FD33  53                 	db	83	;'S'
  2536  00FD34  74                 	db	116	;'t'
  2537  00FD35  61                 	db	97	;'a'
  2538  00FD36  74                 	db	116	;'t'
  2539  00FD37  69                 	db	105	;'i'
  2540  00FD38  63                 	db	99	;'c'
  2541  00FD39  20                 	db	32
  2542  00FD3A  53                 	db	83	;'S'
  2543  00FD3B  4F                 	db	79	;'O'
  2544  00FD3C  43                 	db	67	;'C'
  2545  00FD3D  20                 	db	32
  2546  00FD3E  25                 	db	37
  2547  00FD3F  64                 	db	100	;'d'
  2548  00FD40  20                 	db	32
  2549  00FD41  20                 	db	32
  2550  00FD42  20                 	db	32
  2551  00FD43  20                 	db	32
  2552  00FD44  20                 	db	32
  2553  00FD45  20                 	db	32
  2554  00FD46  20                 	db	32
  2555  00FD47  20                 	db	32
  2556  00FD48  00                 	db	0
  2557  00FD49                     STR_11:
  2558                           
  2559                           ; BSR set to: 57
  2560  00FD49  42                 	db	66	;'B'
  2561  00FD4A  61                 	db	97	;'a'
  2562  00FD4B  74                 	db	116	;'t'
  2563  00FD4C  74                 	db	116	;'t'
  2564  00FD4D  65                 	db	101	;'e'
  2565  00FD4E  72                 	db	114	;'r'
  2566  00FD4F  79                 	db	121	;'y'
  2567  00FD50  20                 	db	32
  2568  00FD51  41                 	db	65	;'A'
  2569  00FD52  68                 	db	104	;'h'
  2570  00FD53  20                 	db	32
  2571  00FD54  25                 	db	37
  2572  00FD55  33                 	db	51	;'3'
  2573  00FD56  2E                 	db	46
  2574  00FD57  32                 	db	50	;'2'
  2575  00FD58  66                 	db	102	;'f'
  2576  00FD59  20                 	db	32
  2577  00FD5A  20                 	db	32
  2578  00FD5B  20                 	db	32
  2579  00FD5C  20                 	db	32
  2580  00FD5D  20                 	db	32
  2581  00FD5E  00                 	db	0
  2582  00FD5F                     STR_15:
  2583                           
  2584                           ; BSR set to: 57
  2585  00FD5F  43                 	db	67	;'C'
  2586  00FD60  68                 	db	104	;'h'
  2587  00FD61  65                 	db	101	;'e'
  2588  00FD62  63                 	db	99	;'c'
  2589  00FD63  6B                 	db	107	;'k'
  2590  00FD64  69                 	db	105	;'i'
  2591  00FD65  6E                 	db	110	;'n'
  2592  00FD66  67                 	db	103	;'g'
  2593  00FD67  20                 	db	32
  2594  00FD68  25                 	db	37
  2595  00FD69  63                 	db	99	;'c'
  2596  00FD6A  20                 	db	32
  2597  00FD6B  25                 	db	37
  2598  00FD6C  63                 	db	99	;'c'
  2599  00FD6D  20                 	db	32
  2600  00FD6E  20                 	db	32
  2601  00FD6F  20                 	db	32
  2602  00FD70  20                 	db	32
  2603  00FD71  20                 	db	32
  2604  00FD72  20                 	db	32
  2605  00FD73  00                 	db	0
  2606  00FD74                     STR_37:
  2607                           
  2608                           ; BSR set to: 57
  2609  00FD74  45                 	db	69	;'E'
  2610  00FD75  53                 	db	83	;'S'
  2611  00FD76  52                 	db	82	;'R'
  2612  00FD77  20                 	db	32
  2613  00FD78  20                 	db	32
  2614  00FD79  25                 	db	37
  2615  00FD7A  32                 	db	50	;'2'
  2616  00FD7B  2E                 	db	46
  2617  00FD7C  36                 	db	54	;'6'
  2618  00FD7D  66                 	db	102	;'f'
  2619  00FD7E  20                 	db	32
  2620  00FD7F  20                 	db	32
  2621  00FD80  20                 	db	32
  2622  00FD81  20                 	db	32
  2623  00FD82  20                 	db	32
  2624  00FD83  20                 	db	32
  2625  00FD84  20                 	db	32
  2626  00FD85  20                 	db	32
  2627  00FD86  20                 	db	32
  2628  00FD87  00                 	db	0
  2629  00FD88                     STR_36:
  2630                           
  2631                           ; BSR set to: 57
  2632  00FD88  53                 	db	83	;'S'
  2633  00FD89  25                 	db	37
  2634  00FD8A  63                 	db	99	;'c'
  2635  00FD8B  43                 	db	67	;'C'
  2636  00FD8C  20                 	db	32
  2637  00FD8D  25                 	db	37
  2638  00FD8E  64                 	db	100	;'d'
  2639  00FD8F  20                 	db	32
  2640  00FD90  52                 	db	82	;'R'
  2641  00FD91  55                 	db	85	;'U'
  2642  00FD92  4E                 	db	78	;'N'
  2643  00FD93  20                 	db	32
  2644  00FD94  25                 	db	37
  2645  00FD95  64                 	db	100	;'d'
  2646  00FD96  20                 	db	32
  2647  00FD97  20                 	db	32
  2648  00FD98  20                 	db	32
  2649  00FD99  20                 	db	32
  2650  00FD9A  20                 	db	32
  2651  00FD9B  00                 	db	0
  2652  00FD9C                     STR_25:
  2653                           
  2654                           ; BSR set to: 57
  2655  00FD9C  50                 	db	80	;'P'
  2656  00FD9D  56                 	db	86	;'V'
  2657  00FD9E  20                 	db	32
  2658  00FD9F  25                 	db	37
  2659  00FDA0  63                 	db	99	;'c'
  2660  00FDA1  20                 	db	32
  2661  00FDA2  57                 	db	87	;'W'
  2662  00FDA3  48                 	db	72	;'H'
  2663  00FDA4  20                 	db	32
  2664  00FDA5  25                 	db	37
  2665  00FDA6  33                 	db	51	;'3'
  2666  00FDA7  2E                 	db	46
  2667  00FDA8  32                 	db	50	;'2'
  2668  00FDA9  66                 	db	102	;'f'
  2669  00FDAA  20                 	db	32
  2670  00FDAB  20                 	db	32
  2671  00FDAC  20                 	db	32
  2672  00FDAD  20                 	db	32
  2673  00FDAE  20                 	db	32
  2674  00FDAF  00                 	db	0
  2675  00FDB0                     STR_34:
  2676                           
  2677                           ; BSR set to: 57
  2678  00FDB0  42                 	db	66	;'B'
  2679  00FDB1  41                 	db	65	;'A'
  2680  00FDB2  54                 	db	84	;'T'
  2681  00FDB3  54                 	db	84	;'T'
  2682  00FDB4  20                 	db	32
  2683  00FDB5  50                 	db	80	;'P'
  2684  00FDB6  57                 	db	87	;'W'
  2685  00FDB7  52                 	db	82	;'R'
  2686  00FDB8  20                 	db	32
  2687  00FDB9  25                 	db	37
  2688  00FDBA  33                 	db	51	;'3'
  2689  00FDBB  2E                 	db	46
  2690  00FDBC  32                 	db	50	;'2'
  2691  00FDBD  66                 	db	102	;'f'
  2692  00FDBE  20                 	db	32
  2693  00FDBF  20                 	db	32
  2694  00FDC0  20                 	db	32
  2695  00FDC1  20                 	db	32
  2696  00FDC2  20                 	db	32
  2697  00FDC3  00                 	db	0
  2698  00FDC4                     STR_38:
  2699                           
  2700                           ; BSR set to: 57
  2701  00FDC4  52                 	db	82	;'R'
  2702  00FDC5  31                 	db	49	;'1'
  2703  00FDC6  20                 	db	32
  2704  00FDC7  25                 	db	37
  2705  00FDC8  32                 	db	50	;'2'
  2706  00FDC9  2E                 	db	46
  2707  00FDCA  33                 	db	51	;'3'
  2708  00FDCB  66                 	db	102	;'f'
  2709  00FDCC  20                 	db	32
  2710  00FDCD  25                 	db	37
  2711  00FDCE  33                 	db	51	;'3'
  2712  00FDCF  2E                 	db	46
  2713  00FDD0  34                 	db	52	;'4'
  2714  00FDD1  66                 	db	102	;'f'
  2715  00FDD2  20                 	db	32
  2716  00FDD3  20                 	db	32
  2717  00FDD4  20                 	db	32
  2718  00FDD5  20                 	db	32
  2719  00FDD6  20                 	db	32
  2720  00FDD7  00                 	db	0
  2721  00FDD8                     STR_39:
  2722                           
  2723                           ; BSR set to: 57
  2724  00FDD8  52                 	db	82	;'R'
  2725  00FDD9  32                 	db	50	;'2'
  2726  00FDDA  20                 	db	32
  2727  00FDDB  25                 	db	37
  2728  00FDDC  32                 	db	50	;'2'
  2729  00FDDD  2E                 	db	46
  2730  00FDDE  33                 	db	51	;'3'
  2731  00FDDF  66                 	db	102	;'f'
  2732  00FDE0  20                 	db	32
  2733  00FDE1  25                 	db	37
  2734  00FDE2  33                 	db	51	;'3'
  2735  00FDE3  2E                 	db	46
  2736  00FDE4  34                 	db	52	;'4'
  2737  00FDE5  66                 	db	102	;'f'
  2738  00FDE6  20                 	db	32
  2739  00FDE7  20                 	db	32
  2740  00FDE8  20                 	db	32
  2741  00FDE9  20                 	db	32
  2742  00FDEA  20                 	db	32
  2743  00FDEB  00                 	db	0
  2744  00FDEC                     STR_22:
  2745                           
  2746                           ; BSR set to: 57
  2747  00FDEC  50                 	db	80	;'P'
  2748  00FDED  56                 	db	86	;'V'
  2749  00FDEE  20                 	db	32
  2750  00FDEF  25                 	db	37
  2751  00FDF0  63                 	db	99	;'c'
  2752  00FDF1  20                 	db	32
  2753  00FDF2  50                 	db	80	;'P'
  2754  00FDF3  57                 	db	87	;'W'
  2755  00FDF4  52                 	db	82	;'R'
  2756  00FDF5  20                 	db	32
  2757  00FDF6  25                 	db	37
  2758  00FDF7  33                 	db	51	;'3'
  2759  00FDF8  2E                 	db	46
  2760  00FDF9  32                 	db	50	;'2'
  2761  00FDFA  66                 	db	102	;'f'
  2762  00FDFB  20                 	db	32
  2763  00FDFC  20                 	db	32
  2764  00FDFD  20                 	db	32
  2765  00FDFE  20                 	db	32
  2766  00FDFF  00                 	db	0
  2767  00FE00                     STR_35:
  2768                           
  2769                           ; BSR set to: 57
  2770  00FE00  42                 	db	66	;'B'
  2771  00FE01  41                 	db	65	;'A'
  2772  00FE02  48                 	db	72	;'H'
  2773  00FE03  20                 	db	32
  2774  00FE04  25                 	db	37
  2775  00FE05  33                 	db	51	;'3'
  2776  00FE06  2E                 	db	46
  2777  00FE07  32                 	db	50	;'2'
  2778  00FE08  66                 	db	102	;'f'
  2779  00FE09  20                 	db	32
  2780  00FE0A  50                 	db	80	;'P'
  2781  00FE0B  25                 	db	37
  2782  00FE0C  33                 	db	51	;'3'
  2783  00FE0D  2E                 	db	46
  2784  00FE0E  32                 	db	50	;'2'
  2785  00FE0F  66                 	db	102	;'f'
  2786  00FE10  20                 	db	32
  2787  00FE11  20                 	db	32
  2788  00FE12  20                 	db	32
  2789  00FE13  00                 	db	0
  2790  00FE14                     STR_58:
  2791                           
  2792                           ; BSR set to: 57
  2793  00FE14  20                 	db	32
  2794  00FE15  20                 	db	32
  2795  00FE16  20                 	db	32
  2796  00FE17  20                 	db	32
  2797  00FE18  20                 	db	32
  2798  00FE19  20                 	db	32
  2799  00FE1A  20                 	db	32
  2800  00FE1B  20                 	db	32
  2801  00FE1C  20                 	db	32
  2802  00FE1D  20                 	db	32
  2803  00FE1E  20                 	db	32
  2804  00FE1F  20                 	db	32
  2805  00FE20  20                 	db	32
  2806  00FE21  20                 	db	32
  2807  00FE22  20                 	db	32
  2808  00FE23  20                 	db	32
  2809  00FE24  20                 	db	32
  2810  00FE25  20                 	db	32
  2811  00FE26  00                 	db	0
  2812  00FE27                     STR_48:
  2813                           
  2814                           ; BSR set to: 57
  2815  00FE27  48                 	db	72	;'H'
  2816  00FE28  45                 	db	69	;'E'
  2817  00FE29  4C                 	db	76	;'L'
  2818  00FE2A  50                 	db	80	;'P'
  2819  00FE2B  20                 	db	32
  2820  00FE2C  25                 	db	37
  2821  00FE2D  73                 	db	115	;'s'
  2822  00FE2E  20                 	db	32
  2823  00FE2F  20                 	db	32
  2824  00FE30  20                 	db	32
  2825  00FE31  20                 	db	32
  2826  00FE32  20                 	db	32
  2827  00FE33  20                 	db	32
  2828  00FE34  20                 	db	32
  2829  00FE35  20                 	db	32
  2830  00FE36  20                 	db	32
  2831  00FE37  20                 	db	32
  2832  00FE38  20                 	db	32
  2833  00FE39  00                 	db	0
  2834  00FE3A                     
  2835                           ; BSR set to: 57
  2836  00FE3A  44                 	db	68	;'D'
  2837  00FE3B  49                 	db	73	;'I'
  2838  00FE3C  53                 	db	83	;'S'
  2839  00FE3D  50                 	db	80	;'P'
  2840  00FE3E  4C                 	db	76	;'L'
  2841  00FE3F  41                 	db	65	;'A'
  2842  00FE40  59                 	db	89	;'Y'
  2843  00FE41  20                 	db	32
  2844  00FE42  25                 	db	37
  2845  00FE43  73                 	db	115	;'s'
  2846  00FE44  20                 	db	32
  2847  00FE45  20                 	db	32
  2848  00FE46  20                 	db	32
  2849  00FE47  20                 	db	32
  2850  00FE48  20                 	db	32
  2851  00FE49  20                 	db	32
  2852  00FE4A  20                 	db	32
  2853  00FE4B  20                 	db	32
  2854  00FE4C  00                 	db	0
  2855  00FE4D                     STR_31:
  2856                           
  2857                           ; BSR set to: 57
  2858  00FE4D  42                 	db	66	;'B'
  2859  00FE4E  41                 	db	65	;'A'
  2860  00FE4F  54                 	db	84	;'T'
  2861  00FE50  20                 	db	32
  2862  00FE51  49                 	db	73	;'I'
  2863  00FE52  57                 	db	87	;'W'
  2864  00FE53  48                 	db	72	;'H'
  2865  00FE54  20                 	db	32
  2866  00FE55  25                 	db	37
  2867  00FE56  34                 	db	52	;'4'
  2868  00FE57  2E                 	db	46
  2869  00FE58  31                 	db	49	;'1'
  2870  00FE59  66                 	db	102	;'f'
  2871  00FE5A  20                 	db	32
  2872  00FE5B  20                 	db	32
  2873  00FE5C  20                 	db	32
  2874  00FE5D  20                 	db	32
  2875  00FE5E  20                 	db	32
  2876  00FE5F  00                 	db	0
  2877  00FE60                     STR_32:
  2878                           
  2879                           ; BSR set to: 57
  2880  00FE60  42                 	db	66	;'B'
  2881  00FE61  41                 	db	65	;'A'
  2882  00FE62  54                 	db	84	;'T'
  2883  00FE63  20                 	db	32
  2884  00FE64  4F                 	db	79	;'O'
  2885  00FE65  57                 	db	87	;'W'
  2886  00FE66  48                 	db	72	;'H'
  2887  00FE67  20                 	db	32
  2888  00FE68  25                 	db	37
  2889  00FE69  34                 	db	52	;'4'
  2890  00FE6A  2E                 	db	46
  2891  00FE6B  31                 	db	49	;'1'
  2892  00FE6C  66                 	db	102	;'f'
  2893  00FE6D  20                 	db	32
  2894  00FE6E  20                 	db	32
  2895  00FE6F  20                 	db	32
  2896  00FE70  20                 	db	32
  2897  00FE71  20                 	db	32
  2898  00FE72  00                 	db	0
  2899  00FE73                     STR_33:
  2900                           
  2901                           ; BSR set to: 57
  2902  00FE73  42                 	db	66	;'B'
  2903  00FE74  41                 	db	65	;'A'
  2904  00FE75  54                 	db	84	;'T'
  2905  00FE76  20                 	db	32
  2906  00FE77  54                 	db	84	;'T'
  2907  00FE78  57                 	db	87	;'W'
  2908  00FE79  48                 	db	72	;'H'
  2909  00FE7A  20                 	db	32
  2910  00FE7B  25                 	db	37
  2911  00FE7C  34                 	db	52	;'4'
  2912  00FE7D  2E                 	db	46
  2913  00FE7E  31                 	db	49	;'1'
  2914  00FE7F  66                 	db	102	;'f'
  2915  00FE80  20                 	db	32
  2916  00FE81  20                 	db	32
  2917  00FE82  20                 	db	32
  2918  00FE83  20                 	db	32
  2919  00FE84  20                 	db	32
  2920  00FE85  00                 	db	0
  2921  00FE86                     STR_27:
  2922                           
  2923                           ; BSR set to: 57
  2924  00FE86  49                 	db	73	;'I'
  2925  00FE87  4E                 	db	78	;'N'
  2926  00FE88  56                 	db	86	;'V'
  2927  00FE89  20                 	db	32
  2928  00FE8A  20                 	db	32
  2929  00FE8B  57                 	db	87	;'W'
  2930  00FE8C  48                 	db	72	;'H'
  2931  00FE8D  20                 	db	32
  2932  00FE8E  25                 	db	37
  2933  00FE8F  33                 	db	51	;'3'
  2934  00FE90  2E                 	db	46
  2935  00FE91  32                 	db	50	;'2'
  2936  00FE92  66                 	db	102	;'f'
  2937  00FE93  20                 	db	32
  2938  00FE94  20                 	db	32
  2939  00FE95  20                 	db	32
  2940  00FE96  20                 	db	32
  2941  00FE97  20                 	db	32
  2942  00FE98  00                 	db	0
  2943  00FE99                     STR_26:
  2944                           
  2945                           ; BSR set to: 57
  2946  00FE99  4C                 	db	76	;'L'
  2947  00FE9A  4F                 	db	79	;'O'
  2948  00FE9B  41                 	db	65	;'A'
  2949  00FE9C  44                 	db	68	;'D'
  2950  00FE9D  20                 	db	32
  2951  00FE9E  57                 	db	87	;'W'
  2952  00FE9F  48                 	db	72	;'H'
  2953  00FEA0  20                 	db	32
  2954  00FEA1  25                 	db	37
  2955  00FEA2  33                 	db	51	;'3'
  2956  00FEA3  2E                 	db	46
  2957  00FEA4  32                 	db	50	;'2'
  2958  00FEA5  66                 	db	102	;'f'
  2959  00FEA6  20                 	db	32
  2960  00FEA7  20                 	db	32
  2961  00FEA8  20                 	db	32
  2962  00FEA9  20                 	db	32
  2963  00FEAA  20                 	db	32
  2964  00FEAB  00                 	db	0
  2965  00FEAC                     STR_24:
  2966                           
  2967                           ; BSR set to: 57
  2968  00FEAC  49                 	db	73	;'I'
  2969  00FEAD  4E                 	db	78	;'N'
  2970  00FEAE  56                 	db	86	;'V'
  2971  00FEAF  20                 	db	32
  2972  00FEB0  20                 	db	32
  2973  00FEB1  50                 	db	80	;'P'
  2974  00FEB2  57                 	db	87	;'W'
  2975  00FEB3  52                 	db	82	;'R'
  2976  00FEB4  20                 	db	32
  2977  00FEB5  25                 	db	37
  2978  00FEB6  33                 	db	51	;'3'
  2979  00FEB7  2E                 	db	46
  2980  00FEB8  32                 	db	50	;'2'
  2981  00FEB9  66                 	db	102	;'f'
  2982  00FEBA  20                 	db	32
  2983  00FEBB  20                 	db	32
  2984  00FEBC  20                 	db	32
  2985  00FEBD  20                 	db	32
  2986  00FEBE  00                 	db	0
  2987  00FEBF                     STR_23:
  2988                           
  2989                           ; BSR set to: 57
  2990  00FEBF  4C                 	db	76	;'L'
  2991  00FEC0  4F                 	db	79	;'O'
  2992  00FEC1  41                 	db	65	;'A'
  2993  00FEC2  44                 	db	68	;'D'
  2994  00FEC3  20                 	db	32
  2995  00FEC4  50                 	db	80	;'P'
  2996  00FEC5  57                 	db	87	;'W'
  2997  00FEC6  52                 	db	82	;'R'
  2998  00FEC7  20                 	db	32
  2999  00FEC8  25                 	db	37
  3000  00FEC9  33                 	db	51	;'3'
  3001  00FECA  2E                 	db	46
  3002  00FECB  32                 	db	50	;'2'
  3003  00FECC  66                 	db	102	;'f'
  3004  00FECD  20                 	db	32
  3005  00FECE  20                 	db	32
  3006  00FECF  20                 	db	32
  3007  00FED0  20                 	db	32
  3008  00FED1  00                 	db	0
  3009  00FED2                     STR_29:
  3010                           
  3011                           ; BSR set to: 57
  3012  00FED2  42                 	db	66	;'B'
  3013  00FED3  56                 	db	86	;'V'
  3014  00FED4  20                 	db	32
  3015  00FED5  25                 	db	37
  3016  00FED6  32                 	db	50	;'2'
  3017  00FED7  2E                 	db	46
  3018  00FED8  32                 	db	50	;'2'
  3019  00FED9  66                 	db	102	;'f'
  3020  00FEDA  20                 	db	32
  3021  00FEDB  42                 	db	66	;'B'
  3022  00FEDC  41                 	db	65	;'A'
  3023  00FEDD  20                 	db	32
  3024  00FEDE  25                 	db	37
  3025  00FEDF  32                 	db	50	;'2'
  3026  00FEE0  2E                 	db	46
  3027  00FEE1  32                 	db	50	;'2'
  3028  00FEE2  66                 	db	102	;'f'
  3029  00FEE3  20                 	db	32
  3030  00FEE4  00                 	db	0
  3031  00FEE5                     STR_30:
  3032                           
  3033                           ; BSR set to: 57
  3034  00FEE5  43                 	db	67	;'C'
  3035  00FEE6  56                 	db	86	;'V'
  3036  00FEE7  20                 	db	32
  3037  00FEE8  25                 	db	37
  3038  00FEE9  32                 	db	50	;'2'
  3039  00FEEA  2E                 	db	46
  3040  00FEEB  32                 	db	50	;'2'
  3041  00FEEC  66                 	db	102	;'f'
  3042  00FEED  20                 	db	32
  3043  00FEEE  4C                 	db	76	;'L'
  3044  00FEEF  41                 	db	65	;'A'
  3045  00FEF0  20                 	db	32
  3046  00FEF1  25                 	db	37
  3047  00FEF2  32                 	db	50	;'2'
  3048  00FEF3  2E                 	db	46
  3049  00FEF4  32                 	db	50	;'2'
  3050  00FEF5  66                 	db	102	;'f'
  3051  00FEF6  20                 	db	32
  3052  00FEF7  00                 	db	0
  3053  00FEF8                     STR_28:
  3054                           
  3055                           ; BSR set to: 57
  3056  00FEF8  50                 	db	80	;'P'
  3057  00FEF9  56                 	db	86	;'V'
  3058  00FEFA  20                 	db	32
  3059  00FEFB  25                 	db	37
  3060  00FEFC  32                 	db	50	;'2'
  3061  00FEFD  2E                 	db	46
  3062  00FEFE  32                 	db	50	;'2'
  3063  00FEFF  66                 	db	102	;'f'
  3064  00FF00  20                 	db	32
  3065  00FF01  50                 	db	80	;'P'
  3066  00FF02  41                 	db	65	;'A'
  3067  00FF03  20                 	db	32
  3068  00FF04  25                 	db	37
  3069  00FF05  32                 	db	50	;'2'
  3070  00FF06  2E                 	db	46
  3071  00FF07  32                 	db	50	;'2'
  3072  00FF08  66                 	db	102	;'f'
  3073  00FF09  20                 	db	32
  3074  00FF0A  00                 	db	0
  3075  00FF0B                     STR_8:
  3076                           
  3077                           ; BSR set to: 57
  3078  00FF0B  42                 	db	66	;'B'
  3079  00FF0C  56                 	db	86	;'V'
  3080  00FF0D  20                 	db	32
  3081  00FF0E  25                 	db	37
  3082  00FF0F  32                 	db	50	;'2'
  3083  00FF10  2E                 	db	46
  3084  00FF11  34                 	db	52	;'4'
  3085  00FF12  66                 	db	102	;'f'
  3086  00FF13  20                 	db	32
  3087  00FF14  20                 	db	32
  3088  00FF15  20                 	db	32
  3089  00FF16  20                 	db	32
  3090  00FF17  20                 	db	32
  3091  00FF18  20                 	db	32
  3092  00FF19  20                 	db	32
  3093  00FF1A  20                 	db	32
  3094  00FF1B  20                 	db	32
  3095  00FF1C  00                 	db	0
  3096  00FF1D                     STR_4:
  3097                           
  3098                           ; BSR set to: 57
  3099  00FF1D  20                 	db	32
  3100  00FF1E  4E                 	db	78	;'N'
  3101  00FF1F  53                 	db	83	;'S'
  3102  00FF20  41                 	db	65	;'A'
  3103  00FF21  53                 	db	83	;'S'
  3104  00FF22  50                 	db	80	;'P'
  3105  00FF23  4F                 	db	79	;'O'
  3106  00FF24  4F                 	db	79	;'O'
  3107  00FF25  4B                 	db	75	;'K'
  3108  00FF26  20                 	db	32
  3109  00FF27  20                 	db	32
  3110  00FF28  20                 	db	32
  3111  00FF29  20                 	db	32
  3112  00FF2A  20                 	db	32
  3113  00FF2B  20                 	db	32
  3114  00FF2C  20                 	db	32
  3115  00FF2D  00                 	db	0
  3116  00FF2E                     STR_12:
  3117                           
  3118                           ; BSR set to: 57
  3119  00FF2E  42                 	db	66	;'B'
  3120  00FF2F  61                 	db	97	;'a'
  3121  00FF30  74                 	db	116	;'t'
  3122  00FF31  74                 	db	116	;'t'
  3123  00FF32  65                 	db	101	;'e'
  3124  00FF33  72                 	db	114	;'r'
  3125  00FF34  79                 	db	121	;'y'
  3126  00FF35  20                 	db	32
  3127  00FF36  45                 	db	69	;'E'
  3128  00FF37  53                 	db	83	;'S'
  3129  00FF38  52                 	db	82	;'R'
  3130  00FF39  20                 	db	32
  3131  00FF3A  20                 	db	32
  3132  00FF3B  20                 	db	32
  3133  00FF3C  20                 	db	32
  3134  00FF3D  20                 	db	32
  3135  00FF3E  00                 	db	0
  3136  00FF3F                     STR_13:
  3137                           
  3138                           ; BSR set to: 57
  3139  00FF3F  43                 	db	67	;'C'
  3140  00FF40  61                 	db	97	;'a'
  3141  00FF41  6C                 	db	108	;'l'
  3142  00FF42  63                 	db	99	;'c'
  3143  00FF43  75                 	db	117	;'u'
  3144  00FF44  6C                 	db	108	;'l'
  3145  00FF45  61                 	db	97	;'a'
  3146  00FF46  74                 	db	116	;'t'
  3147  00FF47  69                 	db	105	;'i'
  3148  00FF48  6F                 	db	111	;'o'
  3149  00FF49  6E                 	db	110	;'n'
  3150  00FF4A  20                 	db	32
  3151  00FF4B  20                 	db	32
  3152  00FF4C  20                 	db	32
  3153  00FF4D  20                 	db	32
  3154  00FF4E  20                 	db	32
  3155  00FF4F  00                 	db	0
  3156  00FF50                     STR_1:
  3157                           
  3158                           ; BSR set to: 57
  3159  00FF50  20                 	db	32
  3160  00FF51  4D                 	db	77	;'M'
  3161  00FF52  42                 	db	66	;'B'
  3162  00FF53  4D                 	db	77	;'M'
  3163  00FF54  43                 	db	67	;'C'
  3164  00FF55  20                 	db	32
  3165  00FF56  53                 	db	83	;'S'
  3166  00FF57  4F                 	db	79	;'O'
  3167  00FF58  4C                 	db	76	;'L'
  3168  00FF59  41                 	db	65	;'A'
  3169  00FF5A  52                 	db	82	;'R'
  3170  00FF5B  4D                 	db	77	;'M'
  3171  00FF5C  4F                 	db	79	;'O'
  3172  00FF5D  4E                 	db	78	;'N'
  3173  00FF5E  20                 	db	32
  3174  00FF5F  20                 	db	32
  3175  00FF60  00                 	db	0
  3176  00FF61                     STR_21:
  3177                           
  3178                           ; BSR set to: 57
  3179  00FF61  25                 	db	37
  3180  00FF62  64                 	db	100	;'d'
  3181  00FF63  20                 	db	32
  3182  00FF64  25                 	db	37
  3183  00FF65  32                 	db	50	;'2'
  3184  00FF66  2E                 	db	46
  3185  00FF67  34                 	db	52	;'4'
  3186  00FF68  66                 	db	102	;'f'
  3187  00FF69  2C                 	db	44
  3188  00FF6A  20                 	db	32
  3189  00FF6B  25                 	db	37
  3190  00FF6C  64                 	db	100	;'d'
  3191  00FF6D  20                 	db	32
  3192  00FF6E  20                 	db	32
  3193  00FF6F  20                 	db	32
  3194  00FF70  23                 	db	35
  3195  00FF71  00                 	db	0
  3196  00FF72                     STR_14:
  3197                           
  3198                           ; BSR set to: 57
  3199  00FF72  43                 	db	67	;'C'
  3200  00FF73  68                 	db	104	;'h'
  3201  00FF74  65                 	db	101	;'e'
  3202  00FF75  63                 	db	99	;'c'
  3203  00FF76  6B                 	db	107	;'k'
  3204  00FF77  20                 	db	32
  3205  00FF78  33                 	db	51	;'3'
  3206  00FF79  30                 	db	48	;'0'
  3207  00FF7A  20                 	db	32
  3208  00FF7B  73                 	db	115	;'s'
  3209  00FF7C  65                 	db	101	;'e'
  3210  00FF7D  63                 	db	99	;'c'
  3211  00FF7E  6F                 	db	111	;'o'
  3212  00FF7F  6E                 	db	110	;'n'
  3213  00FF80  64                 	db	100	;'d'
  3214  00FF81  73                 	db	115	;'s'
  3215  00FF82  00                 	db	0
  3216  00FF83                     STR_19:
  3217                           
  3218                           ; BSR set to: 57
  3219  00FF83  25                 	db	37
  3220  00FF84  64                 	db	100	;'d'
  3221  00FF85  20                 	db	32
  3222  00FF86  25                 	db	37
  3223  00FF87  32                 	db	50	;'2'
  3224  00FF88  2E                 	db	46
  3225  00FF89  34                 	db	52	;'4'
  3226  00FF8A  66                 	db	102	;'f'
  3227  00FF8B  20                 	db	32
  3228  00FF8C  20                 	db	32
  3229  00FF8D  20                 	db	32
  3230  00FF8E  25                 	db	37
  3231  00FF8F  64                 	db	100	;'d'
  3232  00FF90  20                 	db	32
  3233  00FF91  20                 	db	32
  3234  00FF92  00                 	db	0
  3235  00FF93                     STR_52:
  3236                           
  3237                           ; BSR set to: 57
  3238  00FF93  76                 	db	118	;'v'
  3239  00FF94  74                 	db	116	;'t'
  3240  00FF95  65                 	db	101	;'e'
  3241  00FF96  72                 	db	114	;'r'
  3242  00FF97  6D                 	db	109	;'m'
  3243  00FF98  20                 	db	32
  3244  00FF99  25                 	db	37
  3245  00FF9A  78                 	db	120	;'x'
  3246  00FF9B  3A                 	db	58	;':'
  3247  00FF9C  25                 	db	37
  3248  00FF9D  78                 	db	120	;'x'
  3249  00FF9E  20                 	db	32
  3250  00FF9F  20                 	db	32
  3251  00FFA0  20                 	db	32
  3252  00FFA1  00                 	db	0
  3253  00FFA2                     STR_2:
  3254                           
  3255                           ; BSR set to: 57
  3256  00FFA2  20                 	db	32
  3257  00FFA3  56                 	db	86	;'V'
  3258  00FFA4  65                 	db	101	;'e'
  3259  00FFA5  72                 	db	114	;'r'
  3260  00FFA6  73                 	db	115	;'s'
  3261  00FFA7  69                 	db	105	;'i'
  3262  00FFA8  6F                 	db	111	;'o'
  3263  00FFA9  6E                 	db	110	;'n'
  3264  00FFAA  20                 	db	32
  3265  00FFAB  25                 	db	37
  3266  00FFAC  73                 	db	115	;'s'
  3267  00FFAD  20                 	db	32
  3268  00FFAE  20                 	db	32
  3269  00FFAF  20                 	db	32
  3270  00FFB0  00                 	db	0
  3271  00FFB1                     STR_46:
  3272                           
  3273                           ; BSR set to: 57
  3274  00FFB1  44                 	db	68	;'D'
  3275  00FFB2  65                 	db	101	;'e'
  3276  00FFB3  63                 	db	99	;'c'
  3277  00FFB4  20                 	db	32
  3278  00FFB5  32                 	db	50	;'2'
  3279  00FFB6  35                 	db	53	;'5'
  3280  00FFB7  20                 	db	32
  3281  00FFB8  32                 	db	50	;'2'
  3282  00FFB9  30                 	db	48	;'0'
  3283  00FFBA  31                 	db	49	;'1'
  3284  00FFBB  39                 	db	57	;'9'
  3285  00FFBC  00                 	db	0
  3286  00FFBD                     STR_50:
  3287                           
  3288                           ; BSR set to: 57
  3289  00FFBD  25                 	db	37
  3290  00FFBE  73                 	db	115	;'s'
  3291  00FFBF  20                 	db	32
  3292  00FFC0  20                 	db	32
  3293  00FFC1  20                 	db	32
  3294  00FFC2  20                 	db	32
  3295  00FFC3  20                 	db	32
  3296  00FFC4  20                 	db	32
  3297  00FFC5  20                 	db	32
  3298  00FFC6  00                 	db	0
  3299  00FFC7                     STR_47:
  3300                           
  3301                           ; BSR set to: 57
  3302  00FFC7  31                 	db	49	;'1'
  3303  00FFC8  30                 	db	48	;'0'
  3304  00FFC9  3A                 	db	58	;':'
  3305  00FFCA  34                 	db	52	;'4'
  3306  00FFCB  35                 	db	53	;'5'
  3307  00FFCC  3A                 	db	58	;':'
  3308  00FFCD  30                 	db	48	;'0'
  3309  00FFCE  30                 	db	48	;'0'
  3310  00FFCF  00                 	db	0
  3311  00FFD0                     STR_3:
  3312                           
  3313                           ; BSR set to: 57
  3314  00FFD0  31                 	db	49	;'1'
  3315  00FFD1  2E                 	db	46
  3316  00FFD2  30                 	db	48	;'0'
  3317  00FFD3  30                 	db	48	;'0'
  3318  00FFD4  39                 	db	57	;'9'
  3319  00FFD5  00                 	db	0
  3320  00FFD6                     STR_66:
  3321                           
  3322                           ; BSR set to: 57
  3323  00FFD6  49                 	db	73	;'I'
  3324  00FFD7  4E                 	db	78	;'N'
  3325  00FFD8  46                 	db	70	;'F'
  3326  00FFD9  00                 	db	0
  3327  00FFDA                     STR_70:
  3328                           
  3329                           ; BSR set to: 57
  3330  00FFDA  4E                 	db	78	;'N'
  3331  00FFDB  41                 	db	65	;'A'
  3332  00FFDC  4E                 	db	78	;'N'
  3333  00FFDD  00                 	db	0
  3334  00FFDE                     STR_67:
  3335                           
  3336                           ; BSR set to: 57
  3337  00FFDE  69                 	db	105	;'i'
  3338  00FFDF  6E                 	db	110	;'n'
  3339  00FFE0  66                 	db	102	;'f'
  3340  00FFE1  00                 	db	0
  3341  00FFE2                     STR_71:
  3342                           
  3343                           ; BSR set to: 57
  3344  00FFE2  6E                 	db	110	;'n'
  3345  00FFE3  61                 	db	97	;'a'
  3346  00FFE4  6E                 	db	110	;'n'
  3347  00FFE5  00                 	db	0
  3348  00FFE6                     STR_97:
  3349                           
  3350                           ; BSR set to: 57
  3351  00FFE6  6C                 	db	108	;'l'
  3352  00FFE7  58                 	db	88	;'X'
  3353  00FFE8  00                 	db	0
  3354  00FFE9                     STR_74:
  3355                           
  3356                           ; BSR set to: 57
  3357  00FFE9  6C                 	db	108	;'l'
  3358  00FFEA  64                 	db	100	;'d'
  3359  00FFEB  00                 	db	0
  3360  00FFEC                     STR_83:
  3361                           
  3362                           ; BSR set to: 57
  3363  00FFEC  6C                 	db	108	;'l'
  3364  00FFED  66                 	db	102	;'f'
  3365  00FFEE  00                 	db	0
  3366  00FFEF                     STR_78:
  3367                           
  3368                           ; BSR set to: 57
  3369  00FFEF  6C                 	db	108	;'l'
  3370  00FFF0  69                 	db	105	;'i'
  3371  00FFF1  00                 	db	0
  3372  00FFF2                     STR_88:
  3373                           
  3374                           ; BSR set to: 57
  3375  00FFF2  6C                 	db	108	;'l'
  3376  00FFF3  75                 	db	117	;'u'
  3377  00FFF4  00                 	db	0
  3378  00FFF5                     STR_93:
  3379                           
  3380                           ; BSR set to: 57
  3381  00FFF5  6C                 	db	108	;'l'
  3382  00FFF6  78                 	db	120	;'x'
  3383  00FFF7  00                 	db	0
  3384  00FFF8                     STR_44:
  3385                           
  3386                           ; BSR set to: 57
  3387  00FFF8  25                 	db	37
  3388  00FFF9  63                 	db	99	;'c'
  3389  00FFFA  00                 	db	0
  3390  00FFFB                     STR_43:
  3391                           
  3392                           ; BSR set to: 57
  3393  00FFFB  25                 	db	37
  3394  00FFFC  73                 	db	115	;'s'
  3395  00FFFD  00                 	db	0
  3396  0000                     
  3397                           ; #config settings
  3398  00FFFE  00                 	db	0	; dummy byte at the end
  3399  0000                     
  3400                           	psect	cinit
  3401  019CBA                     __pcinit:
  3402                           	opt callstack 0
  3403  019CBA                     start_initialization:
  3404                           	opt callstack 0
  3405  019CBA                     __initialization:
  3406                           	opt callstack 0
  3407                           
  3408                           ; Initialize objects allocated to BIGRAM (807 bytes)
  3409                           ; load TBLPTR registers with __pidataBIGRAM
  3410  019CBA  0EF8               	movlw	low __pidataBIGRAM
  3411  019CBC  6EF6               	movwf	tblptrl,c
  3412  019CBE  0E67               	movlw	high __pidataBIGRAM
  3413  019CC0  6EF7               	movwf	tblptrh,c
  3414  019CC2  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3415  019CC4  6EF8               	movwf	tblptru,c
  3416  019CC6  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3417  019CCA  EE20 F327          	lfsr	2,807
  3418  019CCE                     copy_data0:
  3419  019CCE  0009               	tblrd		*+
  3420  019CD0  006F FFD7 FFEE     	movff	tablat,postinc0
  3421  019CD6  50DD               	movf	postdec2,w,c
  3422  019CD8  50D9               	movf	fsr2l,w,c
  3423  019CDA  E1F9               	bnz	copy_data0
  3424  019CDC  50DA               	movf	fsr2h,w,c
  3425  019CDE  E1F7               	bnz	copy_data0
  3426                           
  3427                           ; Initialize objects allocated to BANK2 (7 bytes)
  3428                           ; load TBLPTR registers with __pidataBANK2
  3429  019CE0  0EFA               	movlw	low __pidataBANK2
  3430  019CE2  6EF6               	movwf	tblptrl,c
  3431  019CE4  0EBE               	movlw	high __pidataBANK2
  3432  019CE6  6EF7               	movwf	tblptrh,c
  3433  019CE8  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  3434  019CEA  6EF8               	movwf	tblptru,c
  3435  019CEC  EE00  F2CE         	lfsr	0,__pdataBANK2
  3436  019CF0  EE20 F007          	lfsr	2,7
  3437  019CF4                     copy_data1:
  3438  019CF4  0009               	tblrd		*+
  3439  019CF6  006F FFD7 FFEE     	movff	tablat,postinc0
  3440  019CFC  50DD               	movf	postdec2,w,c
  3441  019CFE  50D9               	movf	fsr2l,w,c
  3442  019D00  E1F9               	bnz	copy_data1
  3443                           
  3444                           ; Initialize objects allocated to BANK1 (198 bytes)
  3445                           ; load TBLPTR registers with __pidataBANK1
  3446  019D02  0E24               	movlw	low __pidataBANK1
  3447  019D04  6EF6               	movwf	tblptrl,c
  3448  019D06  0EA2               	movlw	high __pidataBANK1
  3449  019D08  6EF7               	movwf	tblptrh,c
  3450  019D0A  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3451  019D0C  6EF8               	movwf	tblptru,c
  3452  019D0E  EE00  F100         	lfsr	0,__pdataBANK1
  3453  019D12  EE20 F0C6          	lfsr	2,198
  3454  019D16                     copy_data2:
  3455  019D16  0009               	tblrd		*+
  3456  019D18  006F FFD7 FFEE     	movff	tablat,postinc0
  3457  019D1E  50DD               	movf	postdec2,w,c
  3458  019D20  50D9               	movf	fsr2l,w,c
  3459  019D22  E1F9               	bnz	copy_data2
  3460                           
  3461                           ; Initialize objects allocated to BANK0 (40 bytes)
  3462                           ; load TBLPTR registers with __pidataBANK0
  3463  019D24  0EA6               	movlw	low __pidataBANK0
  3464  019D26  6EF6               	movwf	tblptrl,c
  3465  019D28  0EB8               	movlw	high __pidataBANK0
  3466  019D2A  6EF7               	movwf	tblptrh,c
  3467  019D2C  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3468  019D2E  6EF8               	movwf	tblptru,c
  3469  019D30  EE00  F0BD         	lfsr	0,__pdataBANK0
  3470  019D34  EE20 F028          	lfsr	2,40
  3471  019D38                     copy_data3:
  3472  019D38  0009               	tblrd		*+
  3473  019D3A  006F FFD7 FFEE     	movff	tablat,postinc0
  3474  019D40  50DD               	movf	postdec2,w,c
  3475  019D42  50D9               	movf	fsr2l,w,c
  3476  019D44  E1F9               	bnz	copy_data3
  3477                           
  3478                           ; Clear objects allocated to BIGRAM (482 bytes)
  3479  019D46  EE02  F026         	lfsr	0,__pbssBIGRAM
  3480  019D4A  EE20 F1E2          	lfsr	2,482
  3481  019D4E                     clear_0:
  3482  019D4E  6AEE               	clrf	postinc0,c
  3483  019D50  50DD               	movf	postdec2,w,c
  3484  019D52  50D9               	movf	fsr2l,w,c
  3485  019D54  E1FC               	bnz	clear_0
  3486  019D56  50DA               	movf	fsr2h,w,c
  3487  019D58  E1FA               	bnz	clear_0
  3488                           
  3489                           ; Clear objects allocated to BANK4 (255 bytes)
  3490  019D5A  EE01  F000         	lfsr	0,__pbssBANK4
  3491  019D5E  EE20 F0FF          	lfsr	2,255
  3492  019D62                     clear_1:
  3493  019D62  6AEE               	clrf	postinc0,c
  3494  019D64  50DD               	movf	postdec2,w,c
  3495  019D66  50D9               	movf	fsr2l,w,c
  3496  019D68  E1FC               	bnz	clear_1
  3497  019D6A  50DA               	movf	fsr2h,w,c
  3498  019D6C  E1FA               	bnz	clear_1
  3499                           
  3500                           ; Clear objects allocated to BANK3 (198 bytes)
  3501  019D6E  EE00  F300         	lfsr	0,__pbssBANK3
  3502  019D72  0EC6               	movlw	198
  3503  019D74                     clear_2:
  3504  019D74  6AEE               	clrf	postinc0,c
  3505  019D76  06E8               	decf	wreg,f,c
  3506  019D78  E1FD               	bnz	clear_2
  3507                           
  3508                           ; Clear objects allocated to BANK2 (206 bytes)
  3509  019D7A  EE00  F200         	lfsr	0,__pbssBANK2
  3510  019D7E  0ECE               	movlw	206
  3511  019D80                     clear_3:
  3512  019D80  6AEE               	clrf	postinc0,c
  3513  019D82  06E8               	decf	wreg,f,c
  3514  019D84  E1FD               	bnz	clear_3
  3515                           
  3516                           ; Clear objects allocated to BANK1 (51 bytes)
  3517  019D86  EE00  F1C6         	lfsr	0,__pbssBANK1
  3518  019D8A  0E33               	movlw	51
  3519  019D8C                     clear_4:
  3520  019D8C  6AEE               	clrf	postinc0,c
  3521  019D8E  06E8               	decf	wreg,f,c
  3522  019D90  E1FD               	bnz	clear_4
  3523                           
  3524                           ; Clear objects allocated to BANK0 (93 bytes)
  3525  019D92  EE00  F060         	lfsr	0,__pbssBANK0
  3526  019D96  0E5D               	movlw	93
  3527  019D98                     clear_5:
  3528  019D98  6AEE               	clrf	postinc0,c
  3529  019D9A  06E8               	decf	wreg,f,c
  3530  019D9C  E1FD               	bnz	clear_5
  3531                           
  3532                           ; Clear objects allocated to COMRAM (14 bytes)
  3533  019D9E  EE00  F03A         	lfsr	0,__pbssCOMRAM
  3534  019DA2  0E0E               	movlw	14
  3535  019DA4                     clear_6:
  3536  019DA4  6AEE               	clrf	postinc0,c
  3537  019DA6  06E8               	decf	wreg,f,c
  3538  019DA8  E1FD               	bnz	clear_6
  3539                           
  3540                           ;
  3541                           ; Setup IVTBASE
  3542                           ;
  3543  019DAA  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3544  019DAC  6ED5               	movwf	213,c
  3545  019DAE  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3546  019DB0  6ED6               	movwf	214,c
  3547  019DB2  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3548  019DB4  6ED7               	movwf	215,c
  3549  019DB6                     end_of_initialization:
  3550                           	opt callstack 0
  3551  019DB6                     __end_of__initialization:
  3552                           	opt callstack 0
  3553  019DB6  0100               	movlb	0
  3554  019DB8  EF22  F089         	goto	_main	;jump to C main() function
  3555                           
  3556                           	psect	bssCOMRAM
  3557  00003A                     __pbssCOMRAM:
  3558                           	opt callstack 0
  3559  00003A                     _width:
  3560                           	opt callstack 0
  3561  00003A                     	ds	2
  3562  00003C                     _prec:
  3563                           	opt callstack 0
  3564  00003C                     	ds	2
  3565  00003E                     _flags:
  3566                           	opt callstack 0
  3567  00003E                     	ds	2
  3568  000040                     esr_check@esr_state:
  3569                           	opt callstack 0
  3570  000040                     	ds	1
  3571  000041                     calc_bsoc@log_update_wait:
  3572                           	opt callstack 0
  3573  000041                     	ds	1
  3574  000042                     check_day_time@day_delay:
  3575                           	opt callstack 0
  3576  000042                     	ds	1
  3577  000043                     _uart2RxHead:
  3578                           	opt callstack 0
  3579  000043                     	ds	1
  3580  000044                     _uart2TxBufferRemaining:
  3581                           	opt callstack 0
  3582  000044                     	ds	1
  3583  000045                     _uart2TxTail:
  3584                           	opt callstack 0
  3585  000045                     	ds	1
  3586  000046                     _uart1RxTail:
  3587                           	opt callstack 0
  3588  000046                     	ds	1
  3589  000047                     _uart1RxHead:
  3590                           	opt callstack 0
  3591  000047                     	ds	1
  3592                           
  3593                           	psect	bssBANK0
  3594  000060                     __pbssBANK0:
  3595                           	opt callstack 0
  3596  000060                     _spi_link:
  3597                           	opt callstack 0
  3598  000060                     	ds	12
  3599  00006C                     floorf@F524:
  3600                           	opt callstack 0
  3601  00006C                     	ds	4
  3602  000070                     fabsf@F463:
  3603                           	opt callstack 0
  3604  000070                     	ds	4
  3605  000074                     ___fpclassifyf@F463:
  3606                           	opt callstack 0
  3607  000074                     	ds	4
  3608  000078                     calc_ror_data@bcror:
  3609                           	opt callstack 0
  3610  000078                     	ds	4
  3611  00007C                     calc_ror_data@bvror:
  3612                           	opt callstack 0
  3613  00007C                     	ds	4
  3614  000080                     calc_model_data@bcror:
  3615                           	opt callstack 0
  3616  000080                     	ds	4
  3617  000084                     calc_model_data@bvror:
  3618                           	opt callstack 0
  3619  000084                     	ds	4
  3620  000088                     wdtdelay@dcount:
  3621                           	opt callstack 0
  3622  000088                     	ds	4
  3623  00008C                     _P:
  3624                           	opt callstack 0
  3625  00008C                     	ds	4
  3626  000090                     _TMR3_InterruptHandler:
  3627                           	opt callstack 0
  3628  000090                     	ds	3
  3629  000093                     _TMR5_InterruptHandler:
  3630                           	opt callstack 0
  3631  000093                     	ds	3
  3632  000096                     _TMR6_InterruptHandler:
  3633                           	opt callstack 0
  3634  000096                     	ds	3
  3635  000099                     _ADCC_ADTI_InterruptHandler:
  3636                           	opt callstack 0
  3637  000099                     	ds	3
  3638  00009C                     _ADCC_ADI_InterruptHandler:
  3639                           	opt callstack 0
  3640  00009C                     	ds	3
  3641  00009F                     _UART1_RxInterruptHandler:
  3642                           	opt callstack 0
  3643  00009F                     	ds	3
  3644  0000A2                     _UART2_TxInterruptHandler:
  3645                           	opt callstack 0
  3646  0000A2                     	ds	3
  3647  0000A5                     _UART2_RxInterruptHandler:
  3648                           	opt callstack 0
  3649  0000A5                     	ds	3
  3650  0000A8                     _INT1_InterruptHandler:
  3651                           	opt callstack 0
  3652  0000A8                     	ds	3
  3653  0000AB                     _INT0_InterruptHandler:
  3654                           	opt callstack 0
  3655  0000AB                     	ds	3
  3656  0000AE                     _nout:
  3657                           	opt callstack 0
  3658  0000AE                     	ds	2
  3659  0000B0                     TMR3_ISR@CountCallBack:
  3660                           	opt callstack 0
  3661  0000B0                     	ds	2
  3662  0000B2                     _timer3ReloadVal:
  3663                           	opt callstack 0
  3664  0000B2                     	ds	2
  3665  0000B4                     TMR5_ISR@CountCallBack:
  3666                           	opt callstack 0
  3667  0000B4                     	ds	2
  3668  0000B6                     _timer5ReloadVal:
  3669                           	opt callstack 0
  3670  0000B6                     	ds	2
  3671  0000B8                     _mode_sw:
  3672                           	opt callstack 0
  3673  0000B8                     	ds	1
  3674  0000B9                     _uart2RxCount:
  3675                           	opt callstack 0
  3676  0000B9                     	ds	1
  3677  0000BA                     _uart2RxTail:
  3678                           	opt callstack 0
  3679  0000BA                     	ds	1
  3680  0000BB                     _uart2TxHead:
  3681                           	opt callstack 0
  3682  0000BB                     	ds	1
  3683  0000BC                     _uart1RxCount:
  3684                           	opt callstack 0
  3685  0000BC                     	ds	1
  3686                           
  3687                           	psect	dataBANK0
  3688  0000BD                     __pdataBANK0:
  3689                           	opt callstack 0
  3690  0000BD                     _R:
  3691                           	opt callstack 0
  3692  0000BD                     	ds	40
  3693                           
  3694                           	psect	bssBANK1
  3695  0001C6                     __pbssBANK1:
  3696                           	opt callstack 0
  3697  0001C6                     _S:
  3698                           	opt callstack 0
  3699  0001C6                     	ds	41
  3700  0001EF                     spinners@s:
  3701                           	opt callstack 0
  3702  0001EF                     	ds	6
  3703  0001F5                     _utctime:
  3704                           	opt callstack 0
  3705  0001F5                     	ds	4
  3706                           
  3707                           	psect	dataBANK1
  3708  000100                     __pdataBANK1:
  3709                           	opt callstack 0
  3710  000100                     _V:
  3711                           	opt callstack 0
  3712  000100                     	ds	191
  3713  0001BF                     _H:
  3714                           	opt callstack 0
  3715  0001BF                     	ds	7
  3716                           
  3717                           	psect	bssBANK2
  3718  000200                     __pbssBANK2:
  3719                           	opt callstack 0
  3720  000200                     lp_filter@smooth:
  3721                           	opt callstack 0
  3722  000200                     	ds	84
  3723  000254                     _tickCount:
  3724                           	opt callstack 0
  3725  000254                     	ds	26
  3726  00026E                     _uart1RxBuffer:
  3727                           	opt callstack 0
  3728  00026E                     	ds	8
  3729  000276                     _dbuf:
  3730                           	opt callstack 0
  3731  000276                     	ds	80
  3732  0002C6                     _seed:
  3733                           	opt callstack 0
  3734  0002C6                     	ds	8
  3735                           
  3736                           	psect	dataBANK2
  3737  0002CE                     __pdataBANK2:
  3738                           	opt callstack 0
  3739  0002CE                     stoa@F1166:
  3740                           	opt callstack 0
  3741  0002CE                     	ds	7
  3742                           
  3743                           	psect	bssBANK3
  3744  000300                     __pbssBANK3:
  3745                           	opt callstack 0
  3746  000300                     _uart2TxBuffer:
  3747                           	opt callstack 0
  3748  000300                     	ds	64
  3749  000340                     _ring_buf2:
  3750                           	opt callstack 0
  3751  000340                     	ds	67
  3752  000383                     _ring_buf1:
  3753                           	opt callstack 0
  3754  000383                     	ds	67
  3755                           
  3756                           	psect	bssBANK4
  3757  000400                     __pbssBANK4:
  3758                           	opt callstack 0
  3759  000400                     _uart2RxBuffer:
  3760                           	opt callstack 0
  3761  000400                     	ds	255
  3762                           
  3763                           	psect	bssBIGRAM
  3764  000826                     __pbssBIGRAM:
  3765                           	opt callstack 0
  3766  000826                     _D:
  3767                           	opt callstack 0
  3768  000826                     	ds	482
  3769                           
  3770                           	psect	dataBIGRAM
  3771  0004FF                     __pdataBIGRAM:
  3772                           	opt callstack 0
  3773  0004FF                     _port_data:
  3774                           	opt callstack 0
  3775  0004FF                     	ds	512
  3776  0006FF                     _C:
  3777                           	opt callstack 0
  3778  0006FF                     	ds	295
  3779                           
  3780                           	psect	cstackBANK0
  3781  0000E5                     __pcstackBANK0:
  3782                           	opt callstack 0
  3783  0000E5                     ??_TMR3_ISR:
  3784                           
  3785                           ; 1 bytes @ 0x0
  3786  0000E5                     	ds	25
  3787                           
  3788                           	psect	cstackCOMRAM
  3789  000021                     __pcstackCOMRAM:
  3790                           	opt callstack 0
  3791  000021                     ??_ADCC_ThresholdISR:
  3792  000021                     
  3793                           ; 1 bytes @ 0x0
  3794  000021                     	ds	5
  3795  000026                     ??_TMR6_ISR:
  3796                           
  3797                           ; 1 bytes @ 0x5
  3798  000026                     	ds	1
  3799  000027                     ??_INT1_ISR:
  3800  000027                     
  3801                           ; 1 bytes @ 0x6
  3802  000027                     	ds	4
  3803  00002B                     ??_TMR5_ISR:
  3804                           
  3805                           ; 1 bytes @ 0xA
  3806  00002B                     	ds	15
  3807                           
  3808 ;;
  3809 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  3810 ;;
  3811 ;; *************** function _main *****************
  3812 ;; Defined at:
  3813 ;;		line 185 in file "main.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;		None
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;  esr_temp        4  [STACK] float 
  3818 ;;  i_esr           2  [STACK] unsigned short 
  3819 ;;  shape           1  [STACK] unsigned char 
  3820 ;;  k               1  [STACK] unsigned char 
  3821 ;;  j               1  [STACK] unsigned char 
  3822 ;;  i               1  [STACK] unsigned char 
  3823 ;;  inp_index       1  [STACK] unsigned char 
  3824 ;;  mode            1  [STACK] enum E17013
  3825 ;;  i_ror           1  [STACK] unsigned char 
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  1  [STACK] void 
  3828 ;; Registers used:
  3829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3839 ;;Total ram usage:        0 bytes
  3840 ;; Hardware stack levels required when called:   28
  3841 ;; This function calls:
  3842 ;;		_SYSTEM_Initialize
  3843 ;;		_StartTimer
  3844 ;;		_TimerDone
  3845 ;;		_WaitMs
  3846 ;;		___fladd
  3847 ;;		___flge
  3848 ;;		___fltol
  3849 ;;		_calc_model_data
  3850 ;;		_calc_ror_data
  3851 ;;		_check_adc_scan
  3852 ;;		_check_enter_button
  3853 ;;		_check_help
  3854 ;;		_clear_adc_scan
  3855 ;;		_clear_hid_pflags
  3856 ;;		_conv_raw_result
  3857 ;;		_convert_adc_data
  3858 ;;		_eaDogM_WriteCommand
  3859 ;;		_esr_check
  3860 ;;		_fabsf
  3861 ;;		_get_raw_result
  3862 ;;		_get_switch
  3863 ;;		_get_vterm_ptr
  3864 ;;		_hid_display
  3865 ;;		_init_bsoc
  3866 ;;		_init_display
  3867 ;;		_init_port_dma
  3868 ;;		_lp_filter
  3869 ;;		_mode_lamp_dim
  3870 ;;		_set_display_info
  3871 ;;		_set_load_relay_one
  3872 ;;		_set_load_relay_two
  3873 ;;		_set_vterm
  3874 ;;		_spinners
  3875 ;;		_sprintf
  3876 ;;		_srand
  3877 ;;		_start_adc_scan
  3878 ;;		_start_switch_handler
  3879 ;;		_static_soc
  3880 ;;		_update_lcd
  3881 ;; This function is called by:
  3882 ;;		Startup code after reset
  3883 ;; This function uses a reentrant model
  3884 ;;
  3885                           
  3886                           	psect	text0
  3887  011244                     __ptext0:
  3888                           	opt callstack 0
  3889  011244                     _main:
  3890                           	opt callstack 0
  3891                           
  3892                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3893  011244  0E11               	movlw	17
  3894  011246  26E1               	addwf	fsr1l,f,c
  3895  011248  0E00               	movlw	0
  3896  01124A  22E2               	addwfc	fsr1h,f,c
  3897                           
  3898                           ;main.c: 187:  UI_STATES mode;;main.c: 188:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3899                           ;stkvar	_inp_index @ sp[(-17)+14]
  3900                           
  3901                           ;incstack = 0
  3902  01124C  0EFD               	movlw	-3
  3903  01124E  6AE3               	clrf	plusw1,c
  3904                           
  3905                           ;stkvar	_i @ sp[(-17)+13]
  3906  011250  0EFC               	movlw	-4
  3907  011252  6AE3               	clrf	plusw1,c
  3908                           
  3909                           ;stkvar	_j @ sp[(-17)+12]
  3910  011254  0EFB               	movlw	-5
  3911  011256  6AE3               	clrf	plusw1,c
  3912  011258  2AE3               	incf	plusw1,f,c
  3913                           
  3914                           ;stkvar	_k @ sp[(-17)+11]
  3915  01125A  0EFA               	movlw	-6
  3916  01125C  6AE3               	clrf	plusw1,c
  3917  01125E  82E3               	bsf	plusw1,1,c
  3918                           
  3919                           ;main.c: 191:  SYSTEM_Initialize();
  3920  011260  ECC6  F0D8         	call	_SYSTEM_Initialize	;wreg free
  3921                           
  3922                           ; BSR set to: 60
  3923                           ;main.c: 194:  (INTCON0bits.GIEH = 1);
  3924  011264  8ED2               	bsf	210,7,c	;volatile
  3925                           
  3926                           ; BSR set to: 60
  3927                           ;main.c: 197:  (INTCON0bits.GIEL = 1);
  3928  011266  8CD2               	bsf	210,6,c	;volatile
  3929                           
  3930                           ; BSR set to: 60
  3931                           ;main.c: 199:  V.ui_state = UI_STATE_INIT;
  3932  011268  0101               	movlb	1	; () banked
  3933  01126A  6B00               	clrf	_V& (0+255),b	;volatile
  3934                           
  3935                           ; BSR set to: 1
  3936                           ;main.c: 204:  WaitMs(300);
  3937  01126C  0E2C               	movlw	44
  3938  01126E  6EE6               	movwf	postinc1,c
  3939  011270  0E01               	movlw	1
  3940  011272  6EE6               	movwf	postinc1,c
  3941  011274  EC1A  F0DB         	call	_WaitMs	;wreg free
  3942                           
  3943                           ;main.c: 205:  if (PORTBbits.RB0) {
  3944  011278  A0CB               	btfss	203,0,c	;volatile
  3945  01127A  D004               	goto	l12955
  3946                           
  3947                           ;main.c: 206:   mode = UI_STATE_HOST;
  3948                           ;stkvar	_mode @ sp[(-17)+15]
  3949  01127C  0EFE               	movlw	-2
  3950  01127E  6AE3               	clrf	plusw1,c
  3951  011280  2AE3               	incf	plusw1,f,c
  3952                           
  3953                           ;main.c: 207:  } else {
  3954  011282  D004               	goto	l12957
  3955  011284                     l12955:
  3956                           
  3957                           ;main.c: 208:   mode = UI_STATE_LOG;
  3958                           ;stkvar	_mode @ sp[(-17)+15]
  3959  011284  0EFE               	movlw	-2
  3960  011286  6AE3               	clrf	plusw1,c
  3961  011288  80E3               	bsf	plusw1,0,c
  3962  01128A  82E3               	bsf	plusw1,1,c	;indir
  3963  01128C                     l12957:
  3964                           
  3965                           ;main.c: 211:  if (mode == UI_STATE_HOST) {
  3966                           ;stkvar	_mode @ sp[(-17)+15]
  3967  01128C  0EFE               	movlw	-2
  3968  01128E  04E3               	decf	plusw1,w,c
  3969  011290  A4D8               	btfss	status,2,c
  3970  011292  D007               	goto	l1324
  3971                           
  3972                           ;main.c: 212:   do { LATDbits.LATD0 = 1; } while(0);
  3973  011294  80BD               	bsf	189,0,c	;volatile
  3974                           
  3975                           ;main.c: 213:   V.mode_pwm = 70;
  3976  011296  0E00               	movlw	0
  3977  011298  0101               	movlb	1	; () banked
  3978  01129A  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  3979  01129C  0E46               	movlw	70
  3980  01129E  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  3981                           
  3982                           ;main.c: 214:  } else {
  3983  0112A0  D004               	goto	l12961
  3984  0112A2                     l1324:
  3985  0112A2  90BD               	bcf	189,0,c	;volatile
  3986                           
  3987                           ;main.c: 216:   V.mode_pwm = 0;
  3988  0112A4  0101               	movlb	1	; () banked
  3989  0112A6  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  3990  0112A8  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  3991  0112AA                     l12961:
  3992                           
  3993                           ; BSR set to: 1
  3994                           ;main.c: 218:  mode_lamp_dim(V.mode_pwm);
  3995  0112AA  0060  F657  FFE6   	movff	_V+149,postinc1
  3996  0112B0  0060  F65B  FFE6   	movff	_V+150,postinc1
  3997  0112B6  ECBD  F0DE         	call	_mode_lamp_dim	;wreg free
  3998  0112BA  D32C               	goto	l13083
  3999  0112BC                     l12963:
  4000                           
  4001                           ; BSR set to: 1
  4002                           ;main.c: 226:    init_port_dma();
  4003  0112BC  EC84  F0DB         	call	_init_port_dma	;wreg free
  4004                           
  4005                           ; BSR set to: 59
  4006                           ;main.c: 228:    init_display();
  4007  0112C0  EC59  F0CF         	call	_init_display	;wreg free
  4008                           
  4009                           ; BSR set to: 61
  4010                           ;main.c: 229:    eaDogM_WriteCommand(0b00001100);
  4011  0112C4  0E0C               	movlw	12
  4012  0112C6  6EE6               	movwf	postinc1,c
  4013  0112C8  EC29  F0DF         	call	_eaDogM_WriteCommand	;wreg free
  4014                           
  4015                           ; BSR set to: 0
  4016                           ;main.c: 233:    set_load_relay_one(1);
  4017  0112CC  0E01               	movlw	1
  4018  0112CE  6EE6               	movwf	postinc1,c
  4019  0112D0  EC11  F0DF         	call	_set_load_relay_one	;wreg free
  4020                           
  4021                           ;main.c: 234:    set_load_relay_two(1);
  4022  0112D4  0E01               	movlw	1
  4023  0112D6  6EE6               	movwf	postinc1,c
  4024  0112D8  EC09  F0DF         	call	_set_load_relay_two	;wreg free
  4025                           
  4026                           ;main.c: 236:    V.ui_state = mode;
  4027                           ;stkvar	_mode @ sp[(-17)+15]
  4028  0112DC  0EFE               	movlw	-2
  4029  0112DE  006F FF8C  F100    	movff	plusw1,_V	;volatile
  4030                           
  4031                           ;main.c: 237:    srand(1957);
  4032  0112E4  0EA5               	movlw	165
  4033  0112E6  6EE6               	movwf	postinc1,c
  4034  0112E8  0E07               	movlw	7
  4035  0112EA  6EE6               	movwf	postinc1,c
  4036  0112EC  EC50  F0DB         	call	_srand	;wreg free
  4037                           
  4038                           ; BSR set to: 2
  4039                           ;main.c: 238:    set_vterm(0);
  4040  0112F0  0E00               	movlw	0
  4041  0112F2  6EE6               	movwf	postinc1,c
  4042  0112F4  EC67  F0DE         	call	_set_vterm	;wreg free
  4043                           
  4044                           ;main.c: 239:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  4045  0112F8  0E50               	movlw	low STR_1
  4046  0112FA  6EE6               	movwf	postinc1,c
  4047  0112FC  0EFF               	movlw	high STR_1
  4048  0112FE  6EE6               	movwf	postinc1,c
  4049  011300  0E00               	movlw	0
  4050  011302  6EE6               	movwf	postinc1,c
  4051  011304  0E00               	movlw	0
  4052  011306  6EE6               	movwf	postinc1,c
  4053  011308  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  4054  01130C  0060  F007  FFE6   	movff	btemp,postinc1
  4055  011312  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4056  011318  0E04               	movlw	4
  4057  01131A  6EE6               	movwf	postinc1,c
  4058  01131C  ECD8  F0CD         	call	_sprintf	;wreg free
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;main.c: 240:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.009");
  4062  011320  0ED0               	movlw	low STR_3
  4063  011322  6EE6               	movwf	postinc1,c
  4064  011324  0EFF               	movlw	high STR_3
  4065  011326  6EE6               	movwf	postinc1,c
  4066  011328  0EA2               	movlw	low STR_2
  4067  01132A  6EE6               	movwf	postinc1,c
  4068  01132C  0EFF               	movlw	high STR_2
  4069  01132E  6EE6               	movwf	postinc1,c
  4070  011330  0E00               	movlw	0
  4071  011332  6EE6               	movwf	postinc1,c
  4072  011334  0E01               	movlw	1
  4073  011336  6EE6               	movwf	postinc1,c
  4074  011338  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  4075  01133C  0060  F007  FFE6   	movff	btemp,postinc1
  4076  011342  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4077  011348  0E06               	movlw	6
  4078  01134A  6EE6               	movwf	postinc1,c
  4079  01134C  ECD8  F0CD         	call	_sprintf	;wreg free
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;main.c: 241:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  4083  011350  0E1D               	movlw	low STR_4
  4084  011352  6EE6               	movwf	postinc1,c
  4085  011354  0EFF               	movlw	high STR_4
  4086  011356  6EE6               	movwf	postinc1,c
  4087  011358  0E00               	movlw	0
  4088  01135A  6EE6               	movwf	postinc1,c
  4089  01135C  0E02               	movlw	2
  4090  01135E  6EE6               	movwf	postinc1,c
  4091  011360  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  4092  011364  0060  F007  FFE6   	movff	btemp,postinc1
  4093  01136A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4094  011370  0E04               	movlw	4
  4095  011372  6EE6               	movwf	postinc1,c
  4096  011374  ECD8  F0CD         	call	_sprintf	;wreg free
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;main.c: 242:    sprintf(get_vterm_ptr(0, 2), "                ");
  4100  011378  0E16               	movlw	low (STR_58+2)
  4101  01137A  6EE6               	movwf	postinc1,c
  4102  01137C  0EFE               	movlw	high (STR_58+2)
  4103  01137E  6EE6               	movwf	postinc1,c
  4104  011380  0E02               	movlw	2
  4105  011382  6EE6               	movwf	postinc1,c
  4106  011384  0E00               	movlw	0
  4107  011386  6EE6               	movwf	postinc1,c
  4108  011388  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  4109  01138C  0060  F007  FFE6   	movff	btemp,postinc1
  4110  011392  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4111  011398  0E04               	movlw	4
  4112  01139A  6EE6               	movwf	postinc1,c
  4113  01139C  ECD8  F0CD         	call	_sprintf	;wreg free
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;main.c: 243:    sprintf(get_vterm_ptr(1, 2), "                ");
  4117  0113A0  0E16               	movlw	low (STR_58+2)
  4118  0113A2  6EE6               	movwf	postinc1,c
  4119  0113A4  0EFE               	movlw	high (STR_58+2)
  4120  0113A6  6EE6               	movwf	postinc1,c
  4121  0113A8  0E02               	movlw	2
  4122  0113AA  6EE6               	movwf	postinc1,c
  4123  0113AC  0E01               	movlw	1
  4124  0113AE  6EE6               	movwf	postinc1,c
  4125  0113B0  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  4126  0113B4  0060  F007  FFE6   	movff	btemp,postinc1
  4127  0113BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4128  0113C0  0E04               	movlw	4
  4129  0113C2  6EE6               	movwf	postinc1,c
  4130  0113C4  ECD8  F0CD         	call	_sprintf	;wreg free
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;main.c: 244:    sprintf(get_vterm_ptr(2, 2), "                ");
  4134  0113C8  0E16               	movlw	low (STR_58+2)
  4135  0113CA  6EE6               	movwf	postinc1,c
  4136  0113CC  0EFE               	movlw	high (STR_58+2)
  4137  0113CE  6EE6               	movwf	postinc1,c
  4138  0113D0  0E02               	movlw	2
  4139  0113D2  6EE6               	movwf	postinc1,c
  4140  0113D4  0E02               	movlw	2
  4141  0113D6  6EE6               	movwf	postinc1,c
  4142  0113D8  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  4143  0113DC  0060  F007  FFE6   	movff	btemp,postinc1
  4144  0113E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4145  0113E8  0E04               	movlw	4
  4146  0113EA  6EE6               	movwf	postinc1,c
  4147  0113EC  ECD8  F0CD         	call	_sprintf	;wreg free
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;main.c: 245:    update_lcd(0);
  4151  0113F0  0E00               	movlw	0
  4152  0113F2  6EE6               	movwf	postinc1,c
  4153  0113F4  EC50  F0CD         	call	_update_lcd	;wreg free
  4154                           
  4155                           ;main.c: 246:    WaitMs(1000);
  4156  0113F8  0EE8               	movlw	232
  4157  0113FA  6EE6               	movwf	postinc1,c
  4158  0113FC  0E03               	movlw	3
  4159  0113FE  6EE6               	movwf	postinc1,c
  4160  011400  EC1A  F0DB         	call	_WaitMs	;wreg free
  4161                           
  4162                           ;main.c: 247:    StartTimer(TMR_DISPLAY, 250);
  4163  011404  0EFA               	movlw	250
  4164  011406  6EE6               	movwf	postinc1,c
  4165  011408  0E00               	movlw	0
  4166  01140A  6EE6               	movwf	postinc1,c
  4167  01140C  0E0A               	movlw	10
  4168  01140E  6EE6               	movwf	postinc1,c
  4169  011410  EC27  F0DA         	call	_StartTimer	;wreg free
  4170                           
  4171                           ;main.c: 248:    StartTimer(TMR_ADC, 200);
  4172  011414  0EC8               	movlw	200
  4173  011416  6EE6               	movwf	postinc1,c
  4174  011418  0E00               	movlw	0
  4175  01141A  6EE6               	movwf	postinc1,c
  4176  01141C  0E01               	movlw	1
  4177  01141E  6EE6               	movwf	postinc1,c
  4178  011420  EC27  F0DA         	call	_StartTimer	;wreg free
  4179                           
  4180                           ;main.c: 249:    StartTimer(TMR_INFO, 3000);
  4181  011424  0EB8               	movlw	184
  4182  011426  6EE6               	movwf	postinc1,c
  4183  011428  0E0B               	movlw	11
  4184  01142A  6EE6               	movwf	postinc1,c
  4185  01142C  0E07               	movlw	7
  4186  01142E  6EE6               	movwf	postinc1,c
  4187  011430  EC27  F0DA         	call	_StartTimer	;wreg free
  4188                           
  4189                           ;main.c: 250:    StartTimer(TMR_FLIPPER, 1500);
  4190  011434  0EDC               	movlw	220
  4191  011436  6EE6               	movwf	postinc1,c
  4192  011438  0E05               	movlw	5
  4193  01143A  6EE6               	movwf	postinc1,c
  4194  01143C  0E0B               	movlw	11
  4195  01143E  6EE6               	movwf	postinc1,c
  4196  011440  EC27  F0DA         	call	_StartTimer	;wreg free
  4197                           
  4198                           ;main.c: 251:    StartTimer(TMR_HELPDIS, 3000);
  4199  011444  0EB8               	movlw	184
  4200  011446  6EE6               	movwf	postinc1,c
  4201  011448  0E0B               	movlw	11
  4202  01144A  6EE6               	movwf	postinc1,c
  4203  01144C  0E09               	movlw	9
  4204  01144E  6EE6               	movwf	postinc1,c
  4205  011450  EC27  F0DA         	call	_StartTimer	;wreg free
  4206                           
  4207                           ;main.c: 253:    start_adc_scan();
  4208  011454  EC06  F0D7         	call	_start_adc_scan	;wreg free
  4209                           
  4210                           ;main.c: 254:    start_switch_handler();
  4211  011458  EC38  F0DE         	call	_start_switch_handler	;wreg free
  4212                           
  4213                           ; BSR set to: 57
  4214                           ;main.c: 255:    WaitMs(1000);
  4215  01145C  0EE8               	movlw	232
  4216  01145E  6EE6               	movwf	postinc1,c
  4217  011460  0E03               	movlw	3
  4218  011462  6EE6               	movwf	postinc1,c
  4219  011464  EC1A  F0DB         	call	_WaitMs	;wreg free
  4220                           
  4221                           ;main.c: 260:    i_ror = 1;
  4222                           ;stkvar	_i_ror @ sp[(-17)+16]
  4223  011468  0EFF               	movlw	-1
  4224  01146A  6AE3               	clrf	plusw1,c
  4225  01146C  2AE3               	incf	plusw1,f,c
  4226  01146E                     l13013:
  4227                           
  4228                           ;main.c: 262:     calc_ror_data();
  4229  01146E  ECFE  F0C4         	call	_calc_ror_data	;wreg free
  4230                           
  4231                           ;main.c: 263:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f         ", conv_raw_result(V_BA
      +                          T, CONV));
  4232  011472  0E00               	movlw	0
  4233  011474  6EE6               	movwf	postinc1,c
  4234  011476  0E04               	movlw	4
  4235  011478  6EE6               	movwf	postinc1,c
  4236  01147A  EC0D  F0A8         	call	_conv_raw_result	;wreg free
  4237  01147E  0060  F007  FFE6   	movff	btemp,postinc1
  4238  011484  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4239  01148A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4240  011490  0060  F013  FFE6   	movff	btemp+3,postinc1
  4241  011496  0E0B               	movlw	low STR_8
  4242  011498  6EE6               	movwf	postinc1,c
  4243  01149A  0EFF               	movlw	high STR_8
  4244  01149C  6EE6               	movwf	postinc1,c
  4245  01149E  0E00               	movlw	0
  4246  0114A0  6EE6               	movwf	postinc1,c
  4247  0114A2  0E01               	movlw	1
  4248  0114A4  6EE6               	movwf	postinc1,c
  4249  0114A6  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  4250  0114AA  0060  F007  FFE6   	movff	btemp,postinc1
  4251  0114B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4252  0114B6  0E08               	movlw	8
  4253  0114B8  6EE6               	movwf	postinc1,c
  4254  0114BA  ECD8  F0CD         	call	_sprintf	;wreg free
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;main.c: 264:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f       ", spinners(5, 0),
      +                           i_ror, C.bv_ror);
  4258  0114BE  EE21  F36B         	lfsr	2,_C+108	;volatile
  4259  0114C2  006F FF7B FFE6     	movff	postinc2,postinc1
  4260  0114C8  006F FF7B FFE6     	movff	postinc2,postinc1
  4261  0114CE  006F FF7B FFE6     	movff	postinc2,postinc1
  4262  0114D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4263                           
  4264                           ;stkvar	_i_ror @ sp[(-21)+16]
  4265  0114DA  0EFB               	movlw	-5
  4266  0114DC  50E3               	movf	plusw1,w,c
  4267  0114DE  6EE6               	movwf	postinc1,c
  4268  0114E0  0E00               	movlw	0
  4269  0114E2  6EE6               	movwf	postinc1,c
  4270  0114E4  0E00               	movlw	0
  4271  0114E6  6EE6               	movwf	postinc1,c
  4272  0114E8  0E05               	movlw	5
  4273  0114EA  6EE6               	movwf	postinc1,c
  4274  0114EC  ECDE  F0CE         	call	_spinners	;wreg free
  4275  0114F0  5001               	movf	btemp^0,w,c
  4276  0114F2  6EE6               	movwf	postinc1,c
  4277  0114F4  0E00               	movlw	0
  4278  0114F6  6EE6               	movwf	postinc1,c
  4279  0114F8  0E06               	movlw	low STR_9
  4280  0114FA  6EE6               	movwf	postinc1,c
  4281  0114FC  0EFD               	movlw	high STR_9
  4282  0114FE  6EE6               	movwf	postinc1,c
  4283  011500  0E00               	movlw	0
  4284  011502  6EE6               	movwf	postinc1,c
  4285  011504  0E02               	movlw	2
  4286  011506  6EE6               	movwf	postinc1,c
  4287  011508  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  4288  01150C  0060  F007  FFE6   	movff	btemp,postinc1
  4289  011512  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4290  011518  0E0C               	movlw	12
  4291  01151A  6EE6               	movwf	postinc1,c
  4292  01151C  ECD8  F0CD         	call	_sprintf	;wreg free
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;main.c: 265:     update_lcd(0);
  4296  011520  0E00               	movlw	0
  4297  011522  6EE6               	movwf	postinc1,c
  4298  011524  EC50  F0CD         	call	_update_lcd	;wreg free
  4299                           
  4300                           ;main.c: 266:     WaitMs(2000);
  4301  011528  0ED0               	movlw	208
  4302  01152A  6EE6               	movwf	postinc1,c
  4303  01152C  0E07               	movlw	7
  4304  01152E  6EE6               	movwf	postinc1,c
  4305  011530  EC1A  F0DB         	call	_WaitMs	;wreg free
  4306                           
  4307                           ;main.c: 267:     clear_adc_scan();
  4308  011534  EC81  F0DF         	call	_clear_adc_scan	;wreg free
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;main.c: 268:     start_adc_scan();
  4312  011538  EC06  F0D7         	call	_start_adc_scan	;wreg free
  4313                           
  4314                           ;main.c: 269:     WaitMs(500);
  4315  01153C  0EF4               	movlw	244
  4316  01153E  6EE6               	movwf	postinc1,c
  4317  011540  0E01               	movlw	1
  4318  011542  6EE6               	movwf	postinc1,c
  4319  011544  EC1A  F0DB         	call	_WaitMs	;wreg free
  4320                           
  4321                           ;main.c: 270:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4322                           ;stkvar	_i_ror @ sp[(-17)+16]
  4323  011548  0EFF               	movlw	-1
  4324  01154A  006F FF8C  F00C    	movff	plusw1,btemp+11
  4325  011550  2A0C               	incf	(btemp+11)^0,f,c
  4326  011552  0060  F033  FFE3   	movff	btemp+11,plusw1
  4327  011558  060C               	decf	(btemp+11)^0,f,c
  4328  01155A  0E1E               	movlw	30
  4329  01155C  600C               	cpfslt	(btemp+11)^0,c
  4330  01155E  D01A               	goto	u12610
  4331  011560  EE21  F36B         	lfsr	2,_C+108	;volatile
  4332  011564  006F FF7B FFE6     	movff	postinc2,postinc1
  4333  01156A  006F FF7B FFE6     	movff	postinc2,postinc1
  4334  011570  006F FF7B FFE6     	movff	postinc2,postinc1
  4335  011576  006F FF7B FFE6     	movff	postinc2,postinc1
  4336  01157C  0E42               	movlw	66
  4337  01157E  6EE6               	movwf	postinc1,c
  4338  011580  0E60               	movlw	96
  4339  011582  6EE6               	movwf	postinc1,c
  4340  011584  0E65               	movlw	101
  4341  011586  6EE6               	movwf	postinc1,c
  4342  011588  0E3C               	movlw	60
  4343  01158A  6EE6               	movwf	postinc1,c
  4344  01158C  EC3A  F0C7         	call	___flge	;wreg free
  4345  011590  A001               	btfss	btemp& (0+255),0,c
  4346  011592  D76D               	goto	l13013
  4347  011594                     u12610:
  4348                           
  4349                           ;main.c: 272:    static_soc();
  4350  011594  EC87  F0DA         	call	_static_soc	;wreg free
  4351                           
  4352                           ;main.c: 273:    init_bsoc();
  4353  011598  EC67  F0BD         	call	_init_bsoc	;wreg free
  4354                           
  4355                           ;main.c: 274:    set_load_relay_one(0);
  4356  01159C  0E00               	movlw	0
  4357  01159E  6EE6               	movwf	postinc1,c
  4358  0115A0  EC11  F0DF         	call	_set_load_relay_one	;wreg free
  4359                           
  4360                           ;main.c: 275:    set_load_relay_two(0);
  4361  0115A4  0E00               	movlw	0
  4362  0115A6  6EE6               	movwf	postinc1,c
  4363  0115A8  EC09  F0DF         	call	_set_load_relay_two	;wreg free
  4364                           
  4365                           ;main.c: 276:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4366  0115AC  EE21  F3B1         	lfsr	2,_C+178	;volatile
  4367  0115B0  006F FF78  F00B    	movff	postinc2,btemp+10
  4368  0115B6  006F FF74  F00C    	movff	postdec2,btemp+11
  4369  0115BC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4370  0115C2  0060  F033  FFE6   	movff	btemp+11,postinc1
  4371  0115C8  0E33               	movlw	low STR_10
  4372  0115CA  6EE6               	movwf	postinc1,c
  4373  0115CC  0EFD               	movlw	high STR_10
  4374  0115CE  6EE6               	movwf	postinc1,c
  4375  0115D0  0E00               	movlw	0
  4376  0115D2  6EE6               	movwf	postinc1,c
  4377  0115D4  0E00               	movlw	0
  4378  0115D6  6EE6               	movwf	postinc1,c
  4379  0115D8  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  4380  0115DC  0060  F007  FFE6   	movff	btemp,postinc1
  4381  0115E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4382  0115E8  0E06               	movlw	6
  4383  0115EA  6EE6               	movwf	postinc1,c
  4384  0115EC  ECD8  F0CD         	call	_sprintf	;wreg free
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;main.c: 277:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4388  0115F0  EE21  F38F         	lfsr	2,_C+144	;volatile
  4389  0115F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4390  0115FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4391  011600  006F FF7B FFE6     	movff	postinc2,postinc1
  4392  011606  006F FF7B FFE6     	movff	postinc2,postinc1
  4393  01160C  0E49               	movlw	low STR_11
  4394  01160E  6EE6               	movwf	postinc1,c
  4395  011610  0EFD               	movlw	high STR_11
  4396  011612  6EE6               	movwf	postinc1,c
  4397  011614  0E00               	movlw	0
  4398  011616  6EE6               	movwf	postinc1,c
  4399  011618  0E01               	movlw	1
  4400  01161A  6EE6               	movwf	postinc1,c
  4401  01161C  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  4402  011620  0060  F007  FFE6   	movff	btemp,postinc1
  4403  011626  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4404  01162C  0E08               	movlw	8
  4405  01162E  6EE6               	movwf	postinc1,c
  4406  011630  ECD8  F0CD         	call	_sprintf	;wreg free
  4407                           
  4408                           ; BSR set to: 0
  4409                           ;main.c: 278:    update_lcd(0);
  4410  011634  0E00               	movlw	0
  4411  011636  6EE6               	movwf	postinc1,c
  4412  011638  EC50  F0CD         	call	_update_lcd	;wreg free
  4413                           
  4414                           ;main.c: 279:    WaitMs(2000);
  4415  01163C  0ED0               	movlw	208
  4416  01163E  6EE6               	movwf	postinc1,c
  4417  011640  0E07               	movlw	7
  4418  011642  6EE6               	movwf	postinc1,c
  4419  011644  EC1A  F0DB         	call	_WaitMs	;wreg free
  4420                           
  4421                           ;main.c: 280:    sprintf(get_vterm_ptr(0, 0), "Battery ESR     ");
  4422  011648  0E2E               	movlw	low STR_12
  4423  01164A  6EE6               	movwf	postinc1,c
  4424  01164C  0EFF               	movlw	high STR_12
  4425  01164E  6EE6               	movwf	postinc1,c
  4426  011650  0E00               	movlw	0
  4427  011652  6EE6               	movwf	postinc1,c
  4428  011654  0E00               	movlw	0
  4429  011656  6EE6               	movwf	postinc1,c
  4430  011658  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  4431  01165C  0060  F007  FFE6   	movff	btemp,postinc1
  4432  011662  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4433  011668  0E04               	movlw	4
  4434  01166A  6EE6               	movwf	postinc1,c
  4435  01166C  ECD8  F0CD         	call	_sprintf	;wreg free
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;main.c: 281:    sprintf(get_vterm_ptr(1, 0), "Calculation     ");
  4439  011670  0E3F               	movlw	low STR_13
  4440  011672  6EE6               	movwf	postinc1,c
  4441  011674  0EFF               	movlw	high STR_13
  4442  011676  6EE6               	movwf	postinc1,c
  4443  011678  0E00               	movlw	0
  4444  01167A  6EE6               	movwf	postinc1,c
  4445  01167C  0E01               	movlw	1
  4446  01167E  6EE6               	movwf	postinc1,c
  4447  011680  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  4448  011684  0060  F007  FFE6   	movff	btemp,postinc1
  4449  01168A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4450  011690  0E04               	movlw	4
  4451  011692  6EE6               	movwf	postinc1,c
  4452  011694  ECD8  F0CD         	call	_sprintf	;wreg free
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;main.c: 282:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds");
  4456  011698  0E72               	movlw	low STR_14
  4457  01169A  6EE6               	movwf	postinc1,c
  4458  01169C  0EFF               	movlw	high STR_14
  4459  01169E  6EE6               	movwf	postinc1,c
  4460  0116A0  0E00               	movlw	0
  4461  0116A2  6EE6               	movwf	postinc1,c
  4462  0116A4  0E02               	movlw	2
  4463  0116A6  6EE6               	movwf	postinc1,c
  4464  0116A8  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  4465  0116AC  0060  F007  FFE6   	movff	btemp,postinc1
  4466  0116B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4467  0116B8  0E04               	movlw	4
  4468  0116BA  6EE6               	movwf	postinc1,c
  4469  0116BC  ECD8  F0CD         	call	_sprintf	;wreg free
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;main.c: 283:    update_lcd(0);
  4473  0116C0  0E00               	movlw	0
  4474  0116C2  6EE6               	movwf	postinc1,c
  4475  0116C4  EC50  F0CD         	call	_update_lcd	;wreg free
  4476                           
  4477                           ;main.c: 284:    uint16_t i_esr = 1;
  4478  0116C8  0E01               	movlw	1
  4479  0116CA  6E0B               	movwf	(btemp+10)^0,c
  4480  0116CC  0E00               	movlw	0
  4481  0116CE  6E0C               	movwf	(btemp+11)^0,c
  4482                           
  4483                           ;stkvar	_i_esr @ sp[(-17)+8]
  4484  0116D0  0EF7               	movlw	-9
  4485  0116D2  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4486  0116D8  0EF8               	movlw	-8
  4487  0116DA  0060  F033  FFE3   	movff	btemp+11,plusw1
  4488                           
  4489                           ;main.c: 286:    float esr_temp;;main.c: 287:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4490  0116E0  D06D               	goto	l13073
  4491  0116E2                     l13061:
  4492                           
  4493                           ;main.c: 288:     WaitMs(110);
  4494  0116E2  0E6E               	movlw	110
  4495  0116E4  6EE6               	movwf	postinc1,c
  4496  0116E6  0E00               	movlw	0
  4497  0116E8  6EE6               	movwf	postinc1,c
  4498  0116EA  EC1A  F0DB         	call	_WaitMs	;wreg free
  4499                           
  4500                           ;main.c: 289:     shape = (uint8_t) fabsf(esr_temp);
  4501                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4502  0116EE  0EF3               	movlw	-13
  4503  0116F0  006F FF8F FFE6     	movff	plusw1,postinc1
  4504  0116F6  006F FF8F FFE6     	movff	plusw1,postinc1
  4505  0116FC  006F FF8F FFE6     	movff	plusw1,postinc1
  4506  011702  006F FF8F FFE6     	movff	plusw1,postinc1
  4507  011708  EC33  F0D2         	call	_fabsf	;wreg free
  4508  01170C  0060  F007  FFE6   	movff	btemp,postinc1
  4509  011712  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4510  011718  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4511  01171E  0060  F013  FFE6   	movff	btemp+3,postinc1
  4512  011724  EC81  F0C6         	call	___fltol	;wreg free
  4513  011728  0060  F004  F00C   	movff	btemp,btemp+11
  4514                           
  4515                           ;stkvar	_shape @ sp[(-17)+10]
  4516  01172E  0EF9               	movlw	-7
  4517  011730  0060  F033  FFE3   	movff	btemp+11,plusw1
  4518                           
  4519                           ;main.c: 290:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4520  011736  0E00               	movlw	0
  4521  011738  6EE6               	movwf	postinc1,c
  4522                           
  4523                           ;stkvar	_shape @ sp[(-18)+10]
  4524  01173A  0EF8               	movlw	-8
  4525  01173C  50E3               	movf	plusw1,w,c
  4526  01173E  6EE6               	movwf	postinc1,c
  4527  011740  ECDE  F0CE         	call	_spinners	;wreg free
  4528  011744  5001               	movf	btemp^0,w,c
  4529  011746  6EE6               	movwf	postinc1,c
  4530  011748  0E00               	movlw	0
  4531  01174A  6EE6               	movwf	postinc1,c
  4532  01174C  0E00               	movlw	0
  4533  01174E  6EE6               	movwf	postinc1,c
  4534  011750  0E00               	movlw	0
  4535  011752  6EE6               	movwf	postinc1,c
  4536  011754  ECDE  F0CE         	call	_spinners	;wreg free
  4537  011758  5001               	movf	btemp^0,w,c
  4538  01175A  6EE6               	movwf	postinc1,c
  4539  01175C  0E00               	movlw	0
  4540  01175E  6EE6               	movwf	postinc1,c
  4541  011760  0E5F               	movlw	low STR_15
  4542  011762  6EE6               	movwf	postinc1,c
  4543  011764  0EFD               	movlw	high STR_15
  4544  011766  6EE6               	movwf	postinc1,c
  4545  011768  0E00               	movlw	0
  4546  01176A  6EE6               	movwf	postinc1,c
  4547  01176C  0E02               	movlw	2
  4548  01176E  6EE6               	movwf	postinc1,c
  4549  011770  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  4550  011774  0060  F007  FFE6   	movff	btemp,postinc1
  4551  01177A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4552  011780  0E08               	movlw	8
  4553  011782  6EE6               	movwf	postinc1,c
  4554  011784  ECD8  F0CD         	call	_sprintf	;wreg free
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;main.c: 291:     update_lcd(0);
  4558  011788  0E00               	movlw	0
  4559  01178A  6EE6               	movwf	postinc1,c
  4560  01178C  EC50  F0CD         	call	_update_lcd	;wreg free
  4561                           
  4562                           ;main.c: 293:     if (i_esr++ > 512)
  4563                           ;stkvar	_i_esr @ sp[(-17)+8]
  4564  011790  50E1               	movf	fsr1l,w,c
  4565  011792  0FF7               	addlw	-9
  4566  011794  6ED9               	movwf	fsr2l,c
  4567  011796  50E2               	movf	fsr1h,w,c
  4568  011798  6EDA               	movwf	fsr2h,c
  4569  01179A  0EFF               	movlw	255
  4570  01179C  22DA               	addwfc	fsr2h,f,c
  4571  01179E  006F FF7C  F00B    	movff	indf2,btemp+10
  4572  0117A4  0E01               	movlw	1
  4573  0117A6  26DE               	addwf	postinc2,f,c
  4574  0117A8  006F FF7C  F00C    	movff	indf2,btemp+11
  4575  0117AE  0E00               	movlw	0
  4576  0117B0  22DD               	addwfc	postdec2,f,c
  4577  0117B2  040B               	decf	(btemp+10)^0,w,c
  4578  0117B4  0E02               	movlw	2
  4579  0117B6  580C               	subwfb	(btemp+11)^0,w,c
  4580  0117B8  B0D8               	btfsc	status,0,c
  4581  0117BA  D017               	goto	u12630
  4582  0117BC                     l13073:
  4583                           
  4584                           ;main.c: 287:    while ((esr_temp = esr_check(0)) < 0.0) {
  4585  0117BC  0E00               	movlw	0
  4586  0117BE  6EE6               	movwf	postinc1,c
  4587  0117C0  EC06  F0B7         	call	_esr_check	;wreg free
  4588                           
  4589                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4590  0117C4  0EF3               	movlw	-13
  4591  0117C6  0060  F007  FFE3   	movff	btemp,plusw1
  4592  0117CC  0EF4               	movlw	-12
  4593  0117CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
  4594  0117D4  0EF5               	movlw	-11
  4595  0117D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
  4596  0117DC  0EF6               	movlw	-10
  4597  0117DE  0060  F013  FFE3   	movff	btemp+3,plusw1
  4598  0117E4  0EF6               	movlw	-10
  4599  0117E6  BEE3               	btfsc	plusw1,7,c
  4600  0117E8  D77C               	goto	l13061
  4601  0117EA                     u12630:
  4602                           
  4603                           ;main.c: 296:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4604  0117EA  EE21  F387         	lfsr	2,_C+136	;volatile
  4605  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4606  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4607  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4608  011800  006F FF7B FFE6     	movff	postinc2,postinc1
  4609  011806  0E1D               	movlw	low STR_16
  4610  011808  6EE6               	movwf	postinc1,c
  4611  01180A  0EFD               	movlw	high STR_16
  4612  01180C  6EE6               	movwf	postinc1,c
  4613  01180E  0E00               	movlw	0
  4614  011810  6EE6               	movwf	postinc1,c
  4615  011812  0E00               	movlw	0
  4616  011814  6EE6               	movwf	postinc1,c
  4617  011816  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  4618  01181A  0060  F007  FFE6   	movff	btemp,postinc1
  4619  011820  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4620  011826  0E08               	movlw	8
  4621  011828  6EE6               	movwf	postinc1,c
  4622  01182A  ECD8  F0CD         	call	_sprintf	;wreg free
  4623                           
  4624                           ;main.c: 297:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4625  01182E  EE22  F009         	lfsr	2,_C+266	;volatile
  4626  011832  006F FF7B FFE6     	movff	postinc2,postinc1
  4627  011838  006F FF7B FFE6     	movff	postinc2,postinc1
  4628  01183E  006F FF7B FFE6     	movff	postinc2,postinc1
  4629  011844  006F FF7B FFE6     	movff	postinc2,postinc1
  4630  01184A  EE22  F015         	lfsr	2,_C+278	;volatile
  4631  01184E  006F FF7B FFE6     	movff	postinc2,postinc1
  4632  011854  006F FF7B FFE6     	movff	postinc2,postinc1
  4633  01185A  006F FF7B FFE6     	movff	postinc2,postinc1
  4634  011860  006F FF7B FFE6     	movff	postinc2,postinc1
  4635  011866  0EBA               	movlw	low STR_17
  4636  011868  6EE6               	movwf	postinc1,c
  4637  01186A  0EFC               	movlw	high STR_17
  4638  01186C  6EE6               	movwf	postinc1,c
  4639  01186E  0E00               	movlw	0
  4640  011870  6EE6               	movwf	postinc1,c
  4641  011872  0E01               	movlw	1
  4642  011874  6EE6               	movwf	postinc1,c
  4643  011876  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  4644  01187A  0060  F007  FFE6   	movff	btemp,postinc1
  4645  011880  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4646  011886  0E0C               	movlw	12
  4647  011888  6EE6               	movwf	postinc1,c
  4648  01188A  ECD8  F0CD         	call	_sprintf	;wreg free
  4649                           
  4650                           ;main.c: 298:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4651  01188E  EE22  F00D         	lfsr	2,_C+270	;volatile
  4652  011892  006F FF7B FFE6     	movff	postinc2,postinc1
  4653  011898  006F FF7B FFE6     	movff	postinc2,postinc1
  4654  01189E  006F FF7B FFE6     	movff	postinc2,postinc1
  4655  0118A4  006F FF7B FFE6     	movff	postinc2,postinc1
  4656  0118AA  EE22  F019         	lfsr	2,_C+282	;volatile
  4657  0118AE  006F FF7B FFE6     	movff	postinc2,postinc1
  4658  0118B4  006F FF7B FFE6     	movff	postinc2,postinc1
  4659  0118BA  006F FF7B FFE6     	movff	postinc2,postinc1
  4660  0118C0  006F FF7B FFE6     	movff	postinc2,postinc1
  4661  0118C6  0ED4               	movlw	low STR_18
  4662  0118C8  6EE6               	movwf	postinc1,c
  4663  0118CA  0EFC               	movlw	high STR_18
  4664  0118CC  6EE6               	movwf	postinc1,c
  4665  0118CE  0E00               	movlw	0
  4666  0118D0  6EE6               	movwf	postinc1,c
  4667  0118D2  0E02               	movlw	2
  4668  0118D4  6EE6               	movwf	postinc1,c
  4669  0118D6  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  4670  0118DA  0060  F007  FFE6   	movff	btemp,postinc1
  4671  0118E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4672  0118E6  0E0C               	movlw	12
  4673  0118E8  6EE6               	movwf	postinc1,c
  4674  0118EA  ECD8  F0CD         	call	_sprintf	;wreg free
  4675                           
  4676                           ;main.c: 299:    update_lcd(0);
  4677  0118EE  0E00               	movlw	0
  4678  0118F0  6EE6               	movwf	postinc1,c
  4679  0118F2  EC50  F0CD         	call	_update_lcd	;wreg free
  4680                           
  4681                           ;main.c: 300:    WaitMs(5000);
  4682  0118F6  0E88               	movlw	136
  4683  0118F8  6EE6               	movwf	postinc1,c
  4684  0118FA  0E13               	movlw	19
  4685  0118FC  6EE6               	movwf	postinc1,c
  4686  0118FE  EC1A  F0DB         	call	_WaitMs	;wreg free
  4687                           
  4688                           ;main.c: 301:    V.system_stable = 1;
  4689  011902  0E01               	movlw	1
  4690  011904  0101               	movlb	1	; () banked
  4691  011906  6FAE               	movwf	(_V+174)& (0+255),b	;volatile
  4692                           
  4693                           ;main.c: 302:    break;
  4694  011908  D01C               	goto	l13085
  4695  01190A                     l1340:
  4696                           
  4697                           ; BSR set to: 1
  4698                           ;main.c: 308:    P.SYSTEM_STABLE = 1;
  4699  01190A  0100               	movlb	0	; () banked
  4700  01190C  818D               	bsf	(_P+1)& (0+255),0,b	;volatile
  4701                           
  4702                           ;main.c: 309:    break;
  4703  01190E  D019               	goto	l13085
  4704  011910                     l1342:
  4705                           
  4706                           ; BSR set to: 1
  4707                           ;main.c: 312:    V.ui_state = UI_STATE_INIT;
  4708  011910  6B00               	clrf	_V& (0+255),b	;volatile
  4709                           
  4710                           ;main.c: 313:    break;
  4711  011912  D017               	goto	l13085
  4712  011914                     l13083:
  4713  011914  0101               	movlb	1	; () banked
  4714  011916  5100               	movf	_V& (0+255),w,b	;volatile
  4715  011918  6E0B               	movwf	(btemp+10)^0,c
  4716  01191A  6A0C               	clrf	(btemp+11)^0,c
  4717                           
  4718                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4719                           ; Switch size 1, requested type "simple"
  4720                           ; Number of cases is 1, Range of values is 0 to 0
  4721                           ; switch strategies available:
  4722                           ; Name         Instructions Cycles
  4723                           ; simple_byte            4     3 (average)
  4724                           ;	Chosen strategy is simple_byte
  4725  01191C  500C               	movf	(btemp+11)^0,w,c
  4726  01191E  0A00               	xorlw	0	; case 0
  4727  011920  A4D8               	btfss	status,2,c
  4728  011922  D7F6               	goto	l1342
  4729                           
  4730                           ; BSR set to: 1
  4731                           ; Switch size 1, requested type "simple"
  4732                           ; Number of cases is 5, Range of values is 0 to 5
  4733                           ; switch strategies available:
  4734                           ; Name         Instructions Cycles
  4735                           ; simple_byte           16     9 (average)
  4736                           ;	Chosen strategy is simple_byte
  4737  011924  500B               	movf	(btemp+10)^0,w,c
  4738  011926  0A00               	xorlw	0	; case 0
  4739  011928  B4D8               	btfsc	status,2,c
  4740  01192A  D4C8               	goto	l12963
  4741  01192C  0A01               	xorlw	1	; case 1
  4742  01192E  B4D8               	btfsc	status,2,c
  4743  011930  D008               	goto	l13085
  4744  011932  0A02               	xorlw	2	; case 3
  4745  011934  B4D8               	btfsc	status,2,c
  4746  011936  D005               	goto	l13085
  4747  011938  0A07               	xorlw	7	; case 4
  4748  01193A  B4D8               	btfsc	status,2,c
  4749  01193C  D7E6               	goto	l1340
  4750  01193E  0A01               	xorlw	1	; case 5
  4751  011940  D7E7               	goto	l1342
  4752  011942                     l13085:
  4753                           
  4754                           ;main.c: 316:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4755  011942  0E01               	movlw	1
  4756  011944  6EE6               	movwf	postinc1,c
  4757  011946  ECA3  F0DC         	call	_TimerDone	;wreg free
  4758  01194A  5001               	movf	btemp^0,w,c
  4759  01194C  B4D8               	btfsc	status,2,c
  4760  01194E  D013               	goto	l13097
  4761  011950  EC6D  F0DF         	call	_check_adc_scan	;wreg free
  4762  011954  5001               	movf	btemp^0,w,c
  4763  011956  B4D8               	btfsc	status,2,c
  4764  011958  D00E               	goto	l13097
  4765                           
  4766                           ;main.c: 320:    convert_adc_data();
  4767  01195A  ECD7  F0D1         	call	_convert_adc_data	;wreg free
  4768                           
  4769                           ;main.c: 324:    clear_adc_scan();
  4770  01195E  EC81  F0DF         	call	_clear_adc_scan	;wreg free
  4771                           
  4772                           ; BSR set to: 0
  4773                           ;main.c: 325:    start_adc_scan();
  4774  011962  EC06  F0D7         	call	_start_adc_scan	;wreg free
  4775                           
  4776                           ;main.c: 326:    StartTimer(TMR_ADC, 200);
  4777  011966  0EC8               	movlw	200
  4778  011968  6EE6               	movwf	postinc1,c
  4779  01196A  0E00               	movlw	0
  4780  01196C  6EE6               	movwf	postinc1,c
  4781  01196E  0E01               	movlw	1
  4782  011970  6EE6               	movwf	postinc1,c
  4783  011972  EC27  F0DA         	call	_StartTimer	;wreg free
  4784  011976                     l13097:
  4785                           
  4786                           ;main.c: 333:   if (TimerDone(TMR_DISPLAY)) {
  4787                           
  4788                           ;main.c: 329:   if (V.ticks) {
  4789  011976  0E0A               	movlw	10
  4790  011978  6EE6               	movwf	postinc1,c
  4791  01197A  ECA3  F0DC         	call	_TimerDone	;wreg free
  4792  01197E  5001               	movf	btemp^0,w,c
  4793  011980  B4D8               	btfsc	status,2,c
  4794  011982  EF3E  F091         	goto	l13173
  4795                           
  4796                           ;main.c: 334:    if (TimerDone(TMR_HELPDIS)) {
  4797  011986  0E09               	movlw	9
  4798  011988  6EE6               	movwf	postinc1,c
  4799  01198A  ECA3  F0DC         	call	_TimerDone	;wreg free
  4800  01198E  5001               	movf	btemp^0,w,c
  4801  011990  B4D8               	btfsc	status,2,c
  4802  011992  D004               	goto	l13105
  4803                           
  4804                           ;main.c: 335:     set_display_info(DIS_STR);
  4805  011994  0E00               	movlw	0
  4806  011996  6EE6               	movwf	postinc1,c
  4807  011998  EC76  F0DE         	call	_set_display_info	;wreg free
  4808  01199C                     l13105:
  4809                           
  4810                           ;main.c: 337:    calc_model_data();
  4811  01199C  ECA3  F0AC         	call	_calc_model_data	;wreg free
  4812                           
  4813                           ; BSR set to: 57
  4814                           ;main.c: 344:     hid_display(&H);
  4815                           
  4816                           ;main.c: 339:    if (0) {
  4817  0119A0  0EBF               	movlw	low _H
  4818  0119A2  6EE6               	movwf	postinc1,c
  4819  0119A4  0E01               	movlw	high _H
  4820  0119A6  6EE6               	movwf	postinc1,c
  4821  0119A8  EC97  F0C1         	call	_hid_display	;wreg free
  4822                           
  4823                           ;main.c: 345:     switch (H.hid_display) {
  4824  0119AC  EFEC  F090         	goto	l13153
  4825  0119B0                     l1350:
  4826                           
  4827                           ; BSR set to: 1
  4828                           ;main.c: 347:      V.calib = 0;
  4829  0119B0  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  4830                           
  4831                           ; BSR set to: 1
  4832                           ;main.c: 348:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f    ", (C.day) ? 'D' : '
      +                           ', C.p_pv);
  4833  0119B2  EE22  F01D         	lfsr	2,_C+286	;volatile
  4834  0119B6  50DF               	movf	indf2,w,c
  4835  0119B8  A4D8               	btfss	status,2,c
  4836  0119BA  D002               	goto	l13115
  4837                           
  4838                           ; BSR set to: 1
  4839  0119BC  0E20               	movlw	32
  4840  0119BE  D001               	goto	L1
  4841  0119C0                     l13115:
  4842                           
  4843                           ; BSR set to: 1
  4844  0119C0  0E44               	movlw	68
  4845  0119C2                     L1:
  4846  0119C2  6E0B               	movwf	(btemp+10)^0,c
  4847  0119C4  0E00               	movlw	0
  4848  0119C6  6E0C               	movwf	(btemp+11)^0,c
  4849                           
  4850                           ;stkvar	_main$3750 @ sp[(-17)+2]
  4851  0119C8  0EF1               	movlw	-15
  4852  0119CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4853  0119D0  0EF2               	movlw	-14
  4854  0119D2  0060  F033  FFE3   	movff	btemp+11,plusw1
  4855                           
  4856                           ; BSR set to: 1
  4857  0119D8  EE21  F37B         	lfsr	2,_C+124	;volatile
  4858  0119DC  006F FF7B FFE6     	movff	postinc2,postinc1
  4859  0119E2  006F FF7B FFE6     	movff	postinc2,postinc1
  4860  0119E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4861  0119EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4862                           
  4863                           ;stkvar	_main$3750 @ sp[(-21)+2]
  4864  0119F4  0EED               	movlw	-19
  4865  0119F6  006F FF8F FFE6     	movff	plusw1,postinc1
  4866  0119FC  006F FF8F FFE6     	movff	plusw1,postinc1
  4867  011A02  0EEC               	movlw	low STR_22
  4868  011A04  6EE6               	movwf	postinc1,c
  4869  011A06  0EFD               	movlw	high STR_22
  4870  011A08  6EE6               	movwf	postinc1,c
  4871  011A0A  0E00               	movlw	0
  4872  011A0C  6EE6               	movwf	postinc1,c
  4873  011A0E  0E00               	movlw	0
  4874  011A10  6EE6               	movwf	postinc1,c
  4875  011A12  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  4876  011A16  0060  F007  FFE6   	movff	btemp,postinc1
  4877  011A1C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4878  011A22  0E0A               	movlw	10
  4879  011A24  6EE6               	movwf	postinc1,c
  4880  011A26  ECD8  F0CD         	call	_sprintf	;wreg free
  4881                           
  4882                           ; BSR set to: 0
  4883                           ;main.c: 349:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  4884  011A2A  EE21  F373         	lfsr	2,_C+116	;volatile
  4885  011A2E  006F FF7B FFE6     	movff	postinc2,postinc1
  4886  011A34  006F FF7B FFE6     	movff	postinc2,postinc1
  4887  011A3A  006F FF7B FFE6     	movff	postinc2,postinc1
  4888  011A40  006F FF7B FFE6     	movff	postinc2,postinc1
  4889  011A46  0EBF               	movlw	low STR_23
  4890  011A48  6EE6               	movwf	postinc1,c
  4891  011A4A  0EFE               	movlw	high STR_23
  4892  011A4C  6EE6               	movwf	postinc1,c
  4893  011A4E  0E00               	movlw	0
  4894  011A50  6EE6               	movwf	postinc1,c
  4895  011A52  0E01               	movlw	1
  4896  011A54  6EE6               	movwf	postinc1,c
  4897  011A56  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  4898  011A5A  0060  F007  FFE6   	movff	btemp,postinc1
  4899  011A60  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4900  011A66  0E08               	movlw	8
  4901  011A68  6EE6               	movwf	postinc1,c
  4902  011A6A  ECD8  F0CD         	call	_sprintf	;wreg free
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;main.c: 350:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  4906  011A6E  EE21  F377         	lfsr	2,_C+120	;volatile
  4907  011A72  006F FF7B FFE6     	movff	postinc2,postinc1
  4908  011A78  006F FF7B FFE6     	movff	postinc2,postinc1
  4909  011A7E  006F FF7B FFE6     	movff	postinc2,postinc1
  4910  011A84  006F FF7B FFE6     	movff	postinc2,postinc1
  4911  011A8A  0EAC               	movlw	low STR_24
  4912  011A8C  6EE6               	movwf	postinc1,c
  4913  011A8E  0EFE               	movlw	high STR_24
  4914  011A90  6EE6               	movwf	postinc1,c
  4915  011A92  0E00               	movlw	0
  4916  011A94  6EE6               	movwf	postinc1,c
  4917  011A96  0E02               	movlw	2
  4918  011A98  6EE6               	movwf	postinc1,c
  4919  011A9A  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  4920  011A9E  0060  F007  FFE6   	movff	btemp,postinc1
  4921  011AA4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4922  011AAA  0E08               	movlw	8
  4923  011AAC  6EE6               	movwf	postinc1,c
  4924  011AAE  ECD8  F0CD         	call	_sprintf	;wreg free
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;main.c: 352:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f     ", (C.day) ? 'D' : '
      +                           ', C.pvkw);
  4928  011AB2  EE22  F01D         	lfsr	2,_C+286	;volatile
  4929  011AB6  50DF               	movf	indf2,w,c
  4930  011AB8  A4D8               	btfss	status,2,c
  4931  011ABA  D002               	goto	l13127
  4932                           
  4933                           ; BSR set to: 0
  4934  011ABC  0E20               	movlw	32
  4935  011ABE  D001               	goto	L2
  4936  011AC0                     l13127:
  4937                           
  4938                           ; BSR set to: 0
  4939  011AC0  0E44               	movlw	68
  4940  011AC2                     L2:
  4941  011AC2  6E0B               	movwf	(btemp+10)^0,c
  4942  011AC4  0E00               	movlw	0
  4943  011AC6  6E0C               	movwf	(btemp+11)^0,c
  4944                           
  4945                           ;stkvar	_main$3754 @ sp[(-17)+0]
  4946  011AC8  0EEF               	movlw	-17
  4947  011ACA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4948  011AD0  0EF0               	movlw	-16
  4949  011AD2  0060  F033  FFE3   	movff	btemp+11,plusw1
  4950                           
  4951                           ; BSR set to: 0
  4952  011AD8  EE21  F3A3         	lfsr	2,_C+164	;volatile
  4953  011ADC  006F FF7B FFE6     	movff	postinc2,postinc1
  4954  011AE2  006F FF7B FFE6     	movff	postinc2,postinc1
  4955  011AE8  006F FF7B FFE6     	movff	postinc2,postinc1
  4956  011AEE  006F FF7B FFE6     	movff	postinc2,postinc1
  4957                           
  4958                           ;stkvar	_main$3754 @ sp[(-21)+0]
  4959  011AF4  0EEB               	movlw	-21
  4960  011AF6  006F FF8F FFE6     	movff	plusw1,postinc1
  4961  011AFC  006F FF8F FFE6     	movff	plusw1,postinc1
  4962  011B02  0E9C               	movlw	low STR_25
  4963  011B04  6EE6               	movwf	postinc1,c
  4964  011B06  0EFD               	movlw	high STR_25
  4965  011B08  6EE6               	movwf	postinc1,c
  4966  011B0A  0E01               	movlw	1
  4967  011B0C  6EE6               	movwf	postinc1,c
  4968  011B0E  0E00               	movlw	0
  4969  011B10  6EE6               	movwf	postinc1,c
  4970  011B12  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  4971  011B16  0060  F007  FFE6   	movff	btemp,postinc1
  4972  011B1C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4973  011B22  0E0A               	movlw	10
  4974  011B24  6EE6               	movwf	postinc1,c
  4975  011B26  ECD8  F0CD         	call	_sprintf	;wreg free
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;main.c: 353:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f     ", C.loadkw);
  4979  011B2A  EE21  F3AB         	lfsr	2,_C+172	;volatile
  4980  011B2E  006F FF7B FFE6     	movff	postinc2,postinc1
  4981  011B34  006F FF7B FFE6     	movff	postinc2,postinc1
  4982  011B3A  006F FF7B FFE6     	movff	postinc2,postinc1
  4983  011B40  006F FF7B FFE6     	movff	postinc2,postinc1
  4984  011B46  0E99               	movlw	low STR_26
  4985  011B48  6EE6               	movwf	postinc1,c
  4986  011B4A  0EFE               	movlw	high STR_26
  4987  011B4C  6EE6               	movwf	postinc1,c
  4988  011B4E  0E01               	movlw	1
  4989  011B50  6EE6               	movwf	postinc1,c
  4990  011B52  0E01               	movlw	1
  4991  011B54  6EE6               	movwf	postinc1,c
  4992  011B56  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  4993  011B5A  0060  F007  FFE6   	movff	btemp,postinc1
  4994  011B60  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4995  011B66  0E08               	movlw	8
  4996  011B68  6EE6               	movwf	postinc1,c
  4997  011B6A  ECD8  F0CD         	call	_sprintf	;wreg free
  4998                           
  4999                           ; BSR set to: 0
  5000                           ;main.c: 354:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f     ", C.invkw);
  5001  011B6E  EE21  F3A7         	lfsr	2,_C+168	;volatile
  5002  011B72  006F FF7B FFE6     	movff	postinc2,postinc1
  5003  011B78  006F FF7B FFE6     	movff	postinc2,postinc1
  5004  011B7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5005  011B84  006F FF7B FFE6     	movff	postinc2,postinc1
  5006  011B8A  0E86               	movlw	low STR_27
  5007  011B8C  6EE6               	movwf	postinc1,c
  5008  011B8E  0EFE               	movlw	high STR_27
  5009  011B90  6EE6               	movwf	postinc1,c
  5010  011B92  0E01               	movlw	1
  5011  011B94  6EE6               	movwf	postinc1,c
  5012  011B96  0E02               	movlw	2
  5013  011B98  6EE6               	movwf	postinc1,c
  5014  011B9A  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  5015  011B9E  0060  F007  FFE6   	movff	btemp,postinc1
  5016  011BA4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5017  011BAA  0E08               	movlw	8
  5018  011BAC  6EE6               	movwf	postinc1,c
  5019  011BAE  ECD8  F0CD         	call	_sprintf	;wreg free
  5020                           
  5021                           ;main.c: 355:      break;
  5022  011BB2  D328               	goto	l13155
  5023  011BB4                     l1360:
  5024                           
  5025                           ; BSR set to: 1
  5026                           ;main.c: 357:      V.calib = 0;
  5027  011BB4  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  5028                           
  5029                           ; BSR set to: 1
  5030                           ;main.c: 358:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  5031  011BB6  EE21  F303         	lfsr	2,_C+4	;volatile
  5032  011BBA  006F FF7B FFE6     	movff	postinc2,postinc1
  5033  011BC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5034  011BC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5035  011BCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5036  011BD2  EE21  F313         	lfsr	2,_C+20	;volatile
  5037  011BD6  006F FF7B FFE6     	movff	postinc2,postinc1
  5038  011BDC  006F FF7B FFE6     	movff	postinc2,postinc1
  5039  011BE2  006F FF7B FFE6     	movff	postinc2,postinc1
  5040  011BE8  006F FF7B FFE6     	movff	postinc2,postinc1
  5041  011BEE  0EF8               	movlw	low STR_28
  5042  011BF0  6EE6               	movwf	postinc1,c
  5043  011BF2  0EFE               	movlw	high STR_28
  5044  011BF4  6EE6               	movwf	postinc1,c
  5045  011BF6  0E00               	movlw	0
  5046  011BF8  6EE6               	movwf	postinc1,c
  5047  011BFA  0E00               	movlw	0
  5048  011BFC  6EE6               	movwf	postinc1,c
  5049  011BFE  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  5050  011C02  0060  F007  FFE6   	movff	btemp,postinc1
  5051  011C08  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5052  011C0E  0E0C               	movlw	12
  5053  011C10  6EE6               	movwf	postinc1,c
  5054  011C12  ECD8  F0CD         	call	_sprintf	;wreg free
  5055                           
  5056                           ;main.c: 359:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  5057  011C16  EE21  F2FF         	lfsr	2,_C
  5058  011C1A  006F FF7B FFE6     	movff	postinc2,postinc1
  5059  011C20  006F FF7B FFE6     	movff	postinc2,postinc1
  5060  011C26  006F FF7B FFE6     	movff	postinc2,postinc1
  5061  011C2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5062  011C32  EE21  F30F         	lfsr	2,_C+16	;volatile
  5063  011C36  006F FF7B FFE6     	movff	postinc2,postinc1
  5064  011C3C  006F FF7B FFE6     	movff	postinc2,postinc1
  5065  011C42  006F FF7B FFE6     	movff	postinc2,postinc1
  5066  011C48  006F FF7B FFE6     	movff	postinc2,postinc1
  5067  011C4E  0ED2               	movlw	low STR_29
  5068  011C50  6EE6               	movwf	postinc1,c
  5069  011C52  0EFE               	movlw	high STR_29
  5070  011C54  6EE6               	movwf	postinc1,c
  5071  011C56  0E00               	movlw	0
  5072  011C58  6EE6               	movwf	postinc1,c
  5073  011C5A  0E01               	movlw	1
  5074  011C5C  6EE6               	movwf	postinc1,c
  5075  011C5E  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  5076  011C62  0060  F007  FFE6   	movff	btemp,postinc1
  5077  011C68  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5078  011C6E  0E0C               	movlw	12
  5079  011C70  6EE6               	movwf	postinc1,c
  5080  011C72  ECD8  F0CD         	call	_sprintf	;wreg free
  5081                           
  5082                           ;main.c: 360:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  5083  011C76  EE21  F33F         	lfsr	2,_C+64	;volatile
  5084  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5085  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  5086  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  5087  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  5088  011C92  EE21  F307         	lfsr	2,_C+8	;volatile
  5089  011C96  006F FF7B FFE6     	movff	postinc2,postinc1
  5090  011C9C  006F FF7B FFE6     	movff	postinc2,postinc1
  5091  011CA2  006F FF7B FFE6     	movff	postinc2,postinc1
  5092  011CA8  006F FF7B FFE6     	movff	postinc2,postinc1
  5093  011CAE  0EE5               	movlw	low STR_30
  5094  011CB0  6EE6               	movwf	postinc1,c
  5095  011CB2  0EFE               	movlw	high STR_30
  5096  011CB4  6EE6               	movwf	postinc1,c
  5097  011CB6  0E00               	movlw	0
  5098  011CB8  6EE6               	movwf	postinc1,c
  5099  011CBA  0E02               	movlw	2
  5100  011CBC  6EE6               	movwf	postinc1,c
  5101  011CBE  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  5102  011CC2  0060  F007  FFE6   	movff	btemp,postinc1
  5103  011CC8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5104  011CCE  0E0C               	movlw	12
  5105  011CD0  6EE6               	movwf	postinc1,c
  5106  011CD2  ECD8  F0CD         	call	_sprintf	;wreg free
  5107                           
  5108                           ;main.c: 362:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f     ", C.bkwi);
  5109  011CD6  EE21  F39B         	lfsr	2,_C+156	;volatile
  5110  011CDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5111  011CE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5112  011CE6  006F FF7B FFE6     	movff	postinc2,postinc1
  5113  011CEC  006F FF7B FFE6     	movff	postinc2,postinc1
  5114  011CF2  0E4D               	movlw	low STR_31
  5115  011CF4  6EE6               	movwf	postinc1,c
  5116  011CF6  0EFE               	movlw	high STR_31
  5117  011CF8  6EE6               	movwf	postinc1,c
  5118  011CFA  0E01               	movlw	1
  5119  011CFC  6EE6               	movwf	postinc1,c
  5120  011CFE  0E00               	movlw	0
  5121  011D00  6EE6               	movwf	postinc1,c
  5122  011D02  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  5123  011D06  0060  F007  FFE6   	movff	btemp,postinc1
  5124  011D0C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5125  011D12  0E08               	movlw	8
  5126  011D14  6EE6               	movwf	postinc1,c
  5127  011D16  ECD8  F0CD         	call	_sprintf	;wreg free
  5128                           
  5129                           ;main.c: 363:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f     ", C.bkwo);
  5130  011D1A  EE21  F39F         	lfsr	2,_C+160	;volatile
  5131  011D1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5132  011D24  006F FF7B FFE6     	movff	postinc2,postinc1
  5133  011D2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5134  011D30  006F FF7B FFE6     	movff	postinc2,postinc1
  5135  011D36  0E60               	movlw	low STR_32
  5136  011D38  6EE6               	movwf	postinc1,c
  5137  011D3A  0EFE               	movlw	high STR_32
  5138  011D3C  6EE6               	movwf	postinc1,c
  5139  011D3E  0E01               	movlw	1
  5140  011D40  6EE6               	movwf	postinc1,c
  5141  011D42  0E01               	movlw	1
  5142  011D44  6EE6               	movwf	postinc1,c
  5143  011D46  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  5144  011D4A  0060  F007  FFE6   	movff	btemp,postinc1
  5145  011D50  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5146  011D56  0E08               	movlw	8
  5147  011D58  6EE6               	movwf	postinc1,c
  5148  011D5A  ECD8  F0CD         	call	_sprintf	;wreg free
  5149                           
  5150                           ;main.c: 364:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f     ", C.bkwi + C.bkwo);
  5151  011D5E  EE21  F39F         	lfsr	2,_C+160	;volatile
  5152  011D62  006F FF7B FFE6     	movff	postinc2,postinc1
  5153  011D68  006F FF7B FFE6     	movff	postinc2,postinc1
  5154  011D6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5155  011D74  006F FF7B FFE6     	movff	postinc2,postinc1
  5156  011D7A  EE21  F39B         	lfsr	2,_C+156	;volatile
  5157  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5158  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
  5159  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5160  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
  5161  011D96  ECB4  F09D         	call	___fladd	;wreg free
  5162  011D9A  0060  F007  FFE6   	movff	btemp,postinc1
  5163  011DA0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5164  011DA6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5165  011DAC  0060  F013  FFE6   	movff	btemp+3,postinc1
  5166  011DB2  0E73               	movlw	low STR_33
  5167  011DB4  6EE6               	movwf	postinc1,c
  5168  011DB6  0EFE               	movlw	high STR_33
  5169  011DB8  6EE6               	movwf	postinc1,c
  5170  011DBA  0E01               	movlw	1
  5171  011DBC  6EE6               	movwf	postinc1,c
  5172  011DBE  0E02               	movlw	2
  5173  011DC0  6EE6               	movwf	postinc1,c
  5174  011DC2  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  5175  011DC6  0060  F007  FFE6   	movff	btemp,postinc1
  5176  011DCC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5177  011DD2  0E08               	movlw	8
  5178  011DD4  6EE6               	movwf	postinc1,c
  5179  011DD6  ECD8  F0CD         	call	_sprintf	;wreg free
  5180                           
  5181                           ;main.c: 365:      break;
  5182  011DDA  D214               	goto	l13155
  5183  011DDC                     l1361:
  5184                           
  5185                           ; BSR set to: 1
  5186                           ;main.c: 367:      V.calib = 0;
  5187  011DDC  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  5188                           
  5189                           ; BSR set to: 1
  5190                           ;main.c: 368:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f     ", C.p_bat);
  5191  011DDE  EE21  F37F         	lfsr	2,_C+128	;volatile
  5192  011DE2  006F FF7B FFE6     	movff	postinc2,postinc1
  5193  011DE8  006F FF7B FFE6     	movff	postinc2,postinc1
  5194  011DEE  006F FF7B FFE6     	movff	postinc2,postinc1
  5195  011DF4  006F FF7B FFE6     	movff	postinc2,postinc1
  5196  011DFA  0EB0               	movlw	low STR_34
  5197  011DFC  6EE6               	movwf	postinc1,c
  5198  011DFE  0EFD               	movlw	high STR_34
  5199  011E00  6EE6               	movwf	postinc1,c
  5200  011E02  0E00               	movlw	0
  5201  011E04  6EE6               	movwf	postinc1,c
  5202  011E06  0E00               	movlw	0
  5203  011E08  6EE6               	movwf	postinc1,c
  5204  011E0A  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  5205  011E0E  0060  F007  FFE6   	movff	btemp,postinc1
  5206  011E14  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5207  011E1A  0E08               	movlw	8
  5208  011E1C  6EE6               	movwf	postinc1,c
  5209  011E1E  ECD8  F0CD         	call	_sprintf	;wreg free
  5210                           
  5211                           ;main.c: 369:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  5212  011E22  EE21  F393         	lfsr	2,_C+148	;volatile
  5213  011E26  006F FF7B FFE6     	movff	postinc2,postinc1
  5214  011E2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5215  011E32  006F FF7B FFE6     	movff	postinc2,postinc1
  5216  011E38  006F FF7B FFE6     	movff	postinc2,postinc1
  5217  011E3E  EE21  F38F         	lfsr	2,_C+144	;volatile
  5218  011E42  006F FF7B FFE6     	movff	postinc2,postinc1
  5219  011E48  006F FF7B FFE6     	movff	postinc2,postinc1
  5220  011E4E  006F FF7B FFE6     	movff	postinc2,postinc1
  5221  011E54  006F FF7B FFE6     	movff	postinc2,postinc1
  5222  011E5A  0E00               	movlw	low STR_35
  5223  011E5C  6EE6               	movwf	postinc1,c
  5224  011E5E  0EFE               	movlw	high STR_35
  5225  011E60  6EE6               	movwf	postinc1,c
  5226  011E62  0E00               	movlw	0
  5227  011E64  6EE6               	movwf	postinc1,c
  5228  011E66  0E01               	movlw	1
  5229  011E68  6EE6               	movwf	postinc1,c
  5230  011E6A  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  5231  011E6E  0060  F007  FFE6   	movff	btemp,postinc1
  5232  011E74  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5233  011E7A  0E0C               	movlw	12
  5234  011E7C  6EE6               	movwf	postinc1,c
  5235  011E7E  ECD8  F0CD         	call	_sprintf	;wreg free
  5236                           
  5237                           ;main.c: 370:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d     ", spinners(5, 0), C
      +                          .soc, C.runtime);
  5238  011E82  EE21  F3AF         	lfsr	2,_C+176	;volatile
  5239  011E86  006F FF78  F00B    	movff	postinc2,btemp+10
  5240  011E8C  006F FF74  F00C    	movff	postdec2,btemp+11
  5241  011E92  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5242  011E98  0060  F033  FFE6   	movff	btemp+11,postinc1
  5243  011E9E  EE21  F3B1         	lfsr	2,_C+178	;volatile
  5244  011EA2  006F FF78  F00B    	movff	postinc2,btemp+10
  5245  011EA8  006F FF74  F00C    	movff	postdec2,btemp+11
  5246  011EAE  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5247  011EB4  0060  F033  FFE6   	movff	btemp+11,postinc1
  5248  011EBA  0E00               	movlw	0
  5249  011EBC  6EE6               	movwf	postinc1,c
  5250  011EBE  0E05               	movlw	5
  5251  011EC0  6EE6               	movwf	postinc1,c
  5252  011EC2  ECDE  F0CE         	call	_spinners	;wreg free
  5253  011EC6  5001               	movf	btemp^0,w,c
  5254  011EC8  6EE6               	movwf	postinc1,c
  5255  011ECA  0E00               	movlw	0
  5256  011ECC  6EE6               	movwf	postinc1,c
  5257  011ECE  0E88               	movlw	low STR_36
  5258  011ED0  6EE6               	movwf	postinc1,c
  5259  011ED2  0EFD               	movlw	high STR_36
  5260  011ED4  6EE6               	movwf	postinc1,c
  5261  011ED6  0E00               	movlw	0
  5262  011ED8  6EE6               	movwf	postinc1,c
  5263  011EDA  0E02               	movlw	2
  5264  011EDC  6EE6               	movwf	postinc1,c
  5265  011EDE  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  5266  011EE2  0060  F007  FFE6   	movff	btemp,postinc1
  5267  011EE8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5268  011EEE  0E0A               	movlw	10
  5269  011EF0  6EE6               	movwf	postinc1,c
  5270  011EF2  ECD8  F0CD         	call	_sprintf	;wreg free
  5271                           
  5272                           ;main.c: 372:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f         ", C.esr);
  5273  011EF6  EE21  F387         	lfsr	2,_C+136	;volatile
  5274  011EFA  006F FF7B FFE6     	movff	postinc2,postinc1
  5275  011F00  006F FF7B FFE6     	movff	postinc2,postinc1
  5276  011F06  006F FF7B FFE6     	movff	postinc2,postinc1
  5277  011F0C  006F FF7B FFE6     	movff	postinc2,postinc1
  5278  011F12  0E74               	movlw	low STR_37
  5279  011F14  6EE6               	movwf	postinc1,c
  5280  011F16  0EFD               	movlw	high STR_37
  5281  011F18  6EE6               	movwf	postinc1,c
  5282  011F1A  0E01               	movlw	1
  5283  011F1C  6EE6               	movwf	postinc1,c
  5284  011F1E  0E00               	movlw	0
  5285  011F20  6EE6               	movwf	postinc1,c
  5286  011F22  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  5287  011F26  0060  F007  FFE6   	movff	btemp,postinc1
  5288  011F2C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5289  011F32  0E08               	movlw	8
  5290  011F34  6EE6               	movwf	postinc1,c
  5291  011F36  ECD8  F0CD         	call	_sprintf	;wreg free
  5292                           
  5293                           ;main.c: 373:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f     ", C.bv_one_load, C.
      +                          load_i1);
  5294  011F3A  EE22  F009         	lfsr	2,_C+266	;volatile
  5295  011F3E  006F FF7B FFE6     	movff	postinc2,postinc1
  5296  011F44  006F FF7B FFE6     	movff	postinc2,postinc1
  5297  011F4A  006F FF7B FFE6     	movff	postinc2,postinc1
  5298  011F50  006F FF7B FFE6     	movff	postinc2,postinc1
  5299  011F56  EE22  F015         	lfsr	2,_C+278	;volatile
  5300  011F5A  006F FF7B FFE6     	movff	postinc2,postinc1
  5301  011F60  006F FF7B FFE6     	movff	postinc2,postinc1
  5302  011F66  006F FF7B FFE6     	movff	postinc2,postinc1
  5303  011F6C  006F FF7B FFE6     	movff	postinc2,postinc1
  5304  011F72  0EC4               	movlw	low STR_38
  5305  011F74  6EE6               	movwf	postinc1,c
  5306  011F76  0EFD               	movlw	high STR_38
  5307  011F78  6EE6               	movwf	postinc1,c
  5308  011F7A  0E01               	movlw	1
  5309  011F7C  6EE6               	movwf	postinc1,c
  5310  011F7E  0E01               	movlw	1
  5311  011F80  6EE6               	movwf	postinc1,c
  5312  011F82  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  5313  011F86  0060  F007  FFE6   	movff	btemp,postinc1
  5314  011F8C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5315  011F92  0E0C               	movlw	12
  5316  011F94  6EE6               	movwf	postinc1,c
  5317  011F96  ECD8  F0CD         	call	_sprintf	;wreg free
  5318                           
  5319                           ;main.c: 374:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f     ", C.bv_full_load, C
      +                          .load_i2);
  5320  011F9A  EE22  F00D         	lfsr	2,_C+270	;volatile
  5321  011F9E  006F FF7B FFE6     	movff	postinc2,postinc1
  5322  011FA4  006F FF7B FFE6     	movff	postinc2,postinc1
  5323  011FAA  006F FF7B FFE6     	movff	postinc2,postinc1
  5324  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
  5325  011FB6  EE22  F019         	lfsr	2,_C+282	;volatile
  5326  011FBA  006F FF7B FFE6     	movff	postinc2,postinc1
  5327  011FC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5328  011FC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5329  011FCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5330  011FD2  0ED8               	movlw	low STR_39
  5331  011FD4  6EE6               	movwf	postinc1,c
  5332  011FD6  0EFD               	movlw	high STR_39
  5333  011FD8  6EE6               	movwf	postinc1,c
  5334  011FDA  0E01               	movlw	1
  5335  011FDC  6EE6               	movwf	postinc1,c
  5336  011FDE  0E02               	movlw	2
  5337  011FE0  6EE6               	movwf	postinc1,c
  5338  011FE2  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  5339  011FE6  0060  F007  FFE6   	movff	btemp,postinc1
  5340  011FEC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5341  011FF2  0E0C               	movlw	12
  5342  011FF4  6EE6               	movwf	postinc1,c
  5343  011FF6  ECD8  F0CD         	call	_sprintf	;wreg free
  5344                           
  5345                           ;main.c: 375:      break;
  5346  011FFA  D104               	goto	l13155
  5347  011FFC                     l13139:
  5348                           
  5349                           ; BSR set to: 1
  5350                           ;main.c: 377:      if (!V.calib) {
  5351  011FFC  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
  5352  011FFE  A4D8               	btfss	status,2,c
  5353  012000  D02D               	goto	l13143
  5354                           
  5355                           ; BSR set to: 1
  5356                           ;main.c: 378:       lp_filter(0.0, i, -1);
  5357  012002  0EFF               	movlw	255
  5358  012004  6EE6               	movwf	postinc1,c
  5359                           
  5360                           ;stkvar	_i @ sp[(-18)+13]
  5361  012006  0EFB               	movlw	-5
  5362  012008  50E3               	movf	plusw1,w,c
  5363  01200A  6EE6               	movwf	postinc1,c
  5364  01200C  0E00               	movlw	0
  5365  01200E  6EE6               	movwf	postinc1,c
  5366  012010  0E00               	movlw	0
  5367  012012  6EE6               	movwf	postinc1,c
  5368  012014  0E00               	movlw	0
  5369  012016  6EE6               	movwf	postinc1,c
  5370  012018  0E00               	movlw	0
  5371  01201A  6EE6               	movwf	postinc1,c
  5372  01201C  EC85  F0C2         	call	_lp_filter	;wreg free
  5373                           
  5374                           ;main.c: 379:       lp_filter(0.0, j, -1);
  5375  012020  0EFF               	movlw	255
  5376  012022  6EE6               	movwf	postinc1,c
  5377                           
  5378                           ;stkvar	_j @ sp[(-18)+12]
  5379  012024  0EFA               	movlw	-6
  5380  012026  50E3               	movf	plusw1,w,c
  5381  012028  6EE6               	movwf	postinc1,c
  5382  01202A  0E00               	movlw	0
  5383  01202C  6EE6               	movwf	postinc1,c
  5384  01202E  0E00               	movlw	0
  5385  012030  6EE6               	movwf	postinc1,c
  5386  012032  0E00               	movlw	0
  5387  012034  6EE6               	movwf	postinc1,c
  5388  012036  0E00               	movlw	0
  5389  012038  6EE6               	movwf	postinc1,c
  5390  01203A  EC85  F0C2         	call	_lp_filter	;wreg free
  5391                           
  5392                           ;main.c: 380:       lp_filter(0.0, k, -1);
  5393  01203E  0EFF               	movlw	255
  5394  012040  6EE6               	movwf	postinc1,c
  5395                           
  5396                           ;stkvar	_k @ sp[(-18)+11]
  5397  012042  0EF9               	movlw	-7
  5398  012044  50E3               	movf	plusw1,w,c
  5399  012046  6EE6               	movwf	postinc1,c
  5400  012048  0E00               	movlw	0
  5401  01204A  6EE6               	movwf	postinc1,c
  5402  01204C  0E00               	movlw	0
  5403  01204E  6EE6               	movwf	postinc1,c
  5404  012050  0E00               	movlw	0
  5405  012052  6EE6               	movwf	postinc1,c
  5406  012054  0E00               	movlw	0
  5407  012056  6EE6               	movwf	postinc1,c
  5408  012058  EC85  F0C2         	call	_lp_filter	;wreg free
  5409  01205C                     l13143:
  5410                           
  5411                           ;main.c: 382:      V.calib = 1;
  5412  01205C  0E01               	movlw	1
  5413  01205E  0101               	movlb	1	; () banked
  5414  012060  6FAC               	movwf	(_V+172)& (0+255),b	;volatile
  5415                           
  5416                           ; BSR set to: 1
  5417                           ;main.c: 383:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  5418  012062  0E02               	movlw	2
  5419  012064  6EE6               	movwf	postinc1,c
  5420  012066  ECFB  F0DB         	call	_get_switch	;wreg free
  5421  01206A  5001               	movf	btemp^0,w,c
  5422  01206C  6EE6               	movwf	postinc1,c
  5423  01206E  0E00               	movlw	0
  5424  012070  6EE6               	movwf	postinc1,c
  5425                           
  5426                           ;stkvar	_i @ sp[(-19)+13]
  5427  012072  0EFA               	movlw	-6
  5428  012074  50E3               	movf	plusw1,w,c
  5429  012076  0D04               	mullw	4
  5430  012078  0EFF               	movlw	low _C
  5431  01207A  24F3               	addwf	243,w,c
  5432  01207C  6ED9               	movwf	fsr2l,c
  5433  01207E  0E06               	movlw	high _C
  5434  012080  20F4               	addwfc	prodh,w,c
  5435  012082  6EDA               	movwf	fsr2h,c
  5436  012084  006F FF7B FFE6     	movff	postinc2,postinc1
  5437  01208A  006F FF7B FFE6     	movff	postinc2,postinc1
  5438  012090  006F FF7B FFE6     	movff	postinc2,postinc1
  5439  012096  006F FF7B FFE6     	movff	postinc2,postinc1
  5440                           
  5441                           ;stkvar	_i @ sp[(-23)+13]
  5442  01209C  0EF6               	movlw	-10
  5443  01209E  50E3               	movf	plusw1,w,c
  5444  0120A0  6EE6               	movwf	postinc1,c
  5445  0120A2  EC85  F0DE         	call	_get_raw_result	;wreg free
  5446  0120A6  0060  F007  FFE6   	movff	btemp,postinc1
  5447  0120AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5448  0120B2  0E83               	movlw	low STR_19
  5449  0120B4  6EE6               	movwf	postinc1,c
  5450  0120B6  0EFF               	movlw	high STR_19
  5451  0120B8  6EE6               	movwf	postinc1,c
  5452  0120BA  0E00               	movlw	0
  5453  0120BC  6EE6               	movwf	postinc1,c
  5454  0120BE  0E00               	movlw	0
  5455  0120C0  6EE6               	movwf	postinc1,c
  5456  0120C2  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  5457  0120C6  0060  F007  FFE6   	movff	btemp,postinc1
  5458  0120CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5459  0120D2  0E0C               	movlw	12
  5460  0120D4  6EE6               	movwf	postinc1,c
  5461  0120D6  ECD8  F0CD         	call	_sprintf	;wreg free
  5462                           
  5463                           ; BSR set to: 0
  5464                           ;main.c: 384:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  5465  0120DA  0E03               	movlw	3
  5466  0120DC  6EE6               	movwf	postinc1,c
  5467  0120DE  ECFB  F0DB         	call	_get_switch	;wreg free
  5468  0120E2  5001               	movf	btemp^0,w,c
  5469  0120E4  6EE6               	movwf	postinc1,c
  5470  0120E6  0E00               	movlw	0
  5471  0120E8  6EE6               	movwf	postinc1,c
  5472                           
  5473                           ;stkvar	_j @ sp[(-19)+12]
  5474  0120EA  0EF9               	movlw	-7
  5475  0120EC  50E3               	movf	plusw1,w,c
  5476  0120EE  0D04               	mullw	4
  5477  0120F0  0EFF               	movlw	low _C
  5478  0120F2  24F3               	addwf	243,w,c
  5479  0120F4  6ED9               	movwf	fsr2l,c
  5480  0120F6  0E06               	movlw	high _C
  5481  0120F8  20F4               	addwfc	prodh,w,c
  5482  0120FA  6EDA               	movwf	fsr2h,c
  5483  0120FC  006F FF7B FFE6     	movff	postinc2,postinc1
  5484  012102  006F FF7B FFE6     	movff	postinc2,postinc1
  5485  012108  006F FF7B FFE6     	movff	postinc2,postinc1
  5486  01210E  006F FF7B FFE6     	movff	postinc2,postinc1
  5487                           
  5488                           ;stkvar	_j @ sp[(-23)+12]
  5489  012114  0EF5               	movlw	-11
  5490  012116  50E3               	movf	plusw1,w,c
  5491  012118  6EE6               	movwf	postinc1,c
  5492  01211A  EC85  F0DE         	call	_get_raw_result	;wreg free
  5493  01211E  0060  F007  FFE6   	movff	btemp,postinc1
  5494  012124  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5495  01212A  0E83               	movlw	low STR_19
  5496  01212C  6EE6               	movwf	postinc1,c
  5497  01212E  0EFF               	movlw	high STR_19
  5498  012130  6EE6               	movwf	postinc1,c
  5499  012132  0E00               	movlw	0
  5500  012134  6EE6               	movwf	postinc1,c
  5501  012136  0E01               	movlw	1
  5502  012138  6EE6               	movwf	postinc1,c
  5503  01213A  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  5504  01213E  0060  F007  FFE6   	movff	btemp,postinc1
  5505  012144  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5506  01214A  0E0C               	movlw	12
  5507  01214C  6EE6               	movwf	postinc1,c
  5508  01214E  ECD8  F0CD         	call	_sprintf	;wreg free
  5509                           
  5510                           ; BSR set to: 0
  5511                           ;main.c: 385:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  5512                           ;stkvar	_inp_index @ sp[(-17)+14]
  5513  012152  0EFD               	movlw	-3
  5514  012154  50E3               	movf	plusw1,w,c
  5515  012156  6E0B               	movwf	(btemp+10)^0,c
  5516  012158  6A0C               	clrf	(btemp+11)^0,c
  5517  01215A  0E01               	movlw	1
  5518  01215C  260B               	addwf	(btemp+10)^0,f,c
  5519  01215E  0E00               	movlw	0
  5520  012160  220C               	addwfc	(btemp+11)^0,f,c
  5521  012162  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5522  012168  0060  F033  FFE6   	movff	btemp+11,postinc1
  5523                           
  5524                           ;stkvar	_k @ sp[(-19)+11]
  5525  01216E  0EF8               	movlw	-8
  5526  012170  50E3               	movf	plusw1,w,c
  5527  012172  0D04               	mullw	4
  5528  012174  0EFF               	movlw	low _C
  5529  012176  24F3               	addwf	243,w,c
  5530  012178  6ED9               	movwf	fsr2l,c
  5531  01217A  0E06               	movlw	high _C
  5532  01217C  20F4               	addwfc	prodh,w,c
  5533  01217E  6EDA               	movwf	fsr2h,c
  5534  012180  006F FF7B FFE6     	movff	postinc2,postinc1
  5535  012186  006F FF7B FFE6     	movff	postinc2,postinc1
  5536  01218C  006F FF7B FFE6     	movff	postinc2,postinc1
  5537  012192  006F FF7B FFE6     	movff	postinc2,postinc1
  5538                           
  5539                           ;stkvar	_k @ sp[(-23)+11]
  5540  012198  0EF4               	movlw	-12
  5541  01219A  50E3               	movf	plusw1,w,c
  5542  01219C  6EE6               	movwf	postinc1,c
  5543  01219E  EC85  F0DE         	call	_get_raw_result	;wreg free
  5544  0121A2  0060  F007  FFE6   	movff	btemp,postinc1
  5545  0121A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5546  0121AE  0E61               	movlw	low STR_21
  5547  0121B0  6EE6               	movwf	postinc1,c
  5548  0121B2  0EFF               	movlw	high STR_21
  5549  0121B4  6EE6               	movwf	postinc1,c
  5550  0121B6  0E00               	movlw	0
  5551  0121B8  6EE6               	movwf	postinc1,c
  5552  0121BA  0E02               	movlw	2
  5553  0121BC  6EE6               	movwf	postinc1,c
  5554  0121BE  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  5555  0121C2  0060  F007  FFE6   	movff	btemp,postinc1
  5556  0121C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5557  0121CE  0E0C               	movlw	12
  5558  0121D0  6EE6               	movwf	postinc1,c
  5559  0121D2  ECD8  F0CD         	call	_sprintf	;wreg free
  5560                           
  5561                           ;main.c: 386:      break;
  5562  0121D6  D016               	goto	l13155
  5563  0121D8                     l13153:
  5564  0121D8  0101               	movlb	1	; () banked
  5565  0121DA  51BF               	movf	_H& (0+255),w,b
  5566  0121DC  6E0B               	movwf	(btemp+10)^0,c
  5567  0121DE  6A0C               	clrf	(btemp+11)^0,c
  5568                           
  5569                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5570                           ; Switch size 1, requested type "simple"
  5571                           ; Number of cases is 1, Range of values is 0 to 0
  5572                           ; switch strategies available:
  5573                           ; Name         Instructions Cycles
  5574                           ; simple_byte            4     3 (average)
  5575                           ;	Chosen strategy is simple_byte
  5576  0121E0  500C               	movf	(btemp+11)^0,w,c
  5577  0121E2  0A00               	xorlw	0	; case 0
  5578  0121E4  A4D8               	btfss	status,2,c
  5579  0121E6  D00E               	goto	l13155
  5580                           
  5581                           ; BSR set to: 1
  5582                           ; Switch size 1, requested type "simple"
  5583                           ; Number of cases is 4, Range of values is 0 to 3
  5584                           ; switch strategies available:
  5585                           ; Name         Instructions Cycles
  5586                           ; simple_byte           13     7 (average)
  5587                           ;	Chosen strategy is simple_byte
  5588  0121E8  500B               	movf	(btemp+10)^0,w,c
  5589  0121EA  0A00               	xorlw	0	; case 0
  5590  0121EC  B4D8               	btfsc	status,2,c
  5591  0121EE  D4E2               	goto	l1360
  5592  0121F0  0A01               	xorlw	1	; case 1
  5593  0121F2  B4D8               	btfsc	status,2,c
  5594  0121F4  EFD8  F08C         	goto	l1350
  5595  0121F8  0A03               	xorlw	3	; case 2
  5596  0121FA  B4D8               	btfsc	status,2,c
  5597  0121FC  D5EF               	goto	l1361
  5598  0121FE  0A01               	xorlw	1	; case 3
  5599  012200  B4D8               	btfsc	status,2,c
  5600  012202  D6FC               	goto	l13139
  5601  012204                     l13155:
  5602                           
  5603                           ;main.c: 390:     clear_hid_pflags(&H);
  5604  012204  0EBF               	movlw	low _H
  5605  012206  6EE6               	movwf	postinc1,c
  5606  012208  0E01               	movlw	high _H
  5607  01220A  6EE6               	movwf	postinc1,c
  5608  01220C  EC7B  F0D9         	call	_clear_hid_pflags	;wreg free
  5609                           
  5610                           ;main.c: 392:    StartTimer(TMR_DISPLAY, 250);
  5611  012210  0EFA               	movlw	250
  5612  012212  6EE6               	movwf	postinc1,c
  5613  012214  0E00               	movlw	0
  5614  012216  6EE6               	movwf	postinc1,c
  5615  012218  0E0A               	movlw	10
  5616  01221A  6EE6               	movwf	postinc1,c
  5617  01221C  EC27  F0DA         	call	_StartTimer	;wreg free
  5618                           
  5619                           ;main.c: 393:    V.enter = check_enter_button(&H);
  5620  012220  0EBF               	movlw	low _H
  5621  012222  6EE6               	movwf	postinc1,c
  5622  012224  0E01               	movlw	high _H
  5623  012226  6EE6               	movwf	postinc1,c
  5624  012228  ECFB  F0D5         	call	_check_enter_button	;wreg free
  5625  01222C  5001               	movf	btemp^0,w,c
  5626  01222E  0101               	movlb	1	; () banked
  5627  012230  6FAD               	movwf	(_V+173)& (0+255),b	;volatile
  5628                           
  5629                           ; BSR set to: 1
  5630                           ;main.c: 394:    if (V.enter && (H.hid_display != HID_AUX)) {
  5631  012232  51AD               	movf	(_V+173)& (0+255),w,b	;volatile
  5632  012234  B4D8               	btfsc	status,2,c
  5633  012236  D011               	goto	l13169
  5634                           
  5635                           ; BSR set to: 1
  5636  012238  0E03               	movlw	3
  5637  01223A  19BF               	xorwf	_H& (0+255),w,b
  5638  01223C  B4D8               	btfsc	status,2,c
  5639  01223E  D00D               	goto	l13169
  5640                           
  5641                           ; BSR set to: 1
  5642                           ;main.c: 395:     V.enter = 0;
  5643  012240  6BAD               	clrf	(_V+173)& (0+255),b	;volatile
  5644                           
  5645                           ; BSR set to: 1
  5646                           ;main.c: 396:     V.screen = ~V.screen;
  5647  012242  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  5648  012244  D002               	goto	u12730
  5649  012246  0E01               	movlw	1
  5650  012248  D001               	goto	u12736
  5651  01224A                     u12730:
  5652  01224A  0E00               	movlw	0
  5653  01224C                     u12736:
  5654  01224C  0AFF               	xorlw	255
  5655  01224E  6E0C               	movwf	(btemp+11)^0,c
  5656  012250  519C               	movf	(_V+156)& (0+255),w,b	;volatile
  5657  012252  180C               	xorwf	(btemp+11)^0,w,c
  5658  012254  0BFE               	andlw	-2
  5659  012256  180C               	xorwf	(btemp+11)^0,w,c
  5660  012258  6F9C               	movwf	(_V+156)& (0+255),b	;volatile
  5661  01225A                     l13169:
  5662                           
  5663                           ; BSR set to: 1
  5664                           ;main.c: 398:    set_vterm(V.screen);
  5665  01225A  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  5666  01225C  D002               	goto	u12740
  5667  01225E  0E01               	movlw	1
  5668  012260  D001               	goto	u12746
  5669  012262                     u12740:
  5670  012262  0E00               	movlw	0
  5671  012264                     u12746:
  5672  012264  6EE6               	movwf	postinc1,c
  5673  012266  EC67  F0DE         	call	_set_vterm	;wreg free
  5674                           
  5675                           ;main.c: 399:    update_lcd(V.screen);
  5676  01226A  0101               	movlb	1	; () banked
  5677  01226C  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  5678  01226E  D002               	goto	u12750
  5679  012270  0E01               	movlw	1
  5680  012272  D001               	goto	u12756
  5681  012274                     u12750:
  5682  012274  0E00               	movlw	0
  5683  012276                     u12756:
  5684  012276  6EE6               	movwf	postinc1,c
  5685  012278  EC50  F0CD         	call	_update_lcd	;wreg free
  5686  01227C                     l13173:
  5687                           
  5688                           ;main.c: 405:   check_help(V.flipper);
  5689  01227C  0101               	movlb	1	; () banked
  5690  01227E  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  5691  012280  6EE6               	movwf	postinc1,c
  5692  012282  EC8C  F0BF         	call	_check_help	;wreg free
  5693                           
  5694                           ;main.c: 407:   if (V.enter) {
  5695  012286  0101               	movlb	1	; () banked
  5696  012288  51AD               	movf	(_V+173)& (0+255),w,b	;volatile
  5697  01228A  B4D8               	btfsc	status,2,c
  5698  01228C  D062               	goto	l1366
  5699                           
  5700                           ; BSR set to: 1
  5701                           ;main.c: 408:    V.enter = 0;
  5702  01228E  6BAD               	clrf	(_V+173)& (0+255),b	;volatile
  5703                           
  5704                           ;main.c: 409:    V.calib = 0;
  5705  012290  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  5706                           
  5707                           ; BSR set to: 1
  5708                           ;main.c: 410:    inp_index += 3;
  5709                           ;stkvar	_inp_index @ sp[(-17)+14]
  5710  012292  0EFD               	movlw	-3
  5711  012294  006F FF8C  F001    	movff	plusw1,btemp
  5712  01229A  0E03               	movlw	3
  5713  01229C  2601               	addwf	btemp^0,f,c
  5714  01229E  0EFD               	movlw	-3
  5715  0122A0  0060  F007  FFE3   	movff	btemp,plusw1
  5716                           
  5717                           ;main.c: 411:    if (inp_index > 9)
  5718                           ;stkvar	_inp_index @ sp[(-17)+14]
  5719  0122A6  0EFD               	movlw	-3
  5720  0122A8  006F FF8C  F001    	movff	plusw1,btemp
  5721  0122AE  0E09               	movlw	9
  5722  0122B0  6401               	cpfsgt	btemp^0,c
  5723  0122B2  D03A               	goto	l13201
  5724                           
  5725                           ; BSR set to: 1
  5726                           ;main.c: 412:     inp_index = 0;
  5727                           ;stkvar	_inp_index @ sp[(-17)+14]
  5728  0122B4  0EFD               	movlw	-3
  5729  0122B6  6AE3               	clrf	plusw1,c
  5730  0122B8  D037               	goto	l13201
  5731  0122BA                     l13183:
  5732                           
  5733                           ; BSR set to: 1
  5734                           ;main.c: 415:     i = C_BATT;
  5735                           ;stkvar	_i @ sp[(-17)+13]
  5736  0122BA  0EFC               	movlw	-4
  5737  0122BC  6AE3               	clrf	plusw1,c
  5738                           
  5739                           ; BSR set to: 1
  5740                           ;main.c: 416:     j = C_PV;
  5741                           ;stkvar	_j @ sp[(-17)+12]
  5742  0122BE  0EFB               	movlw	-5
  5743  0122C0  6AE3               	clrf	plusw1,c
  5744  0122C2  2AE3               	incf	plusw1,f,c
  5745                           
  5746                           ; BSR set to: 1
  5747                           ;main.c: 417:     k = V_CC;
  5748                           ;stkvar	_k @ sp[(-17)+11]
  5749  0122C4  0EFA               	movlw	-6
  5750  0122C6  6AE3               	clrf	plusw1,c
  5751  0122C8  82E3               	bsf	plusw1,1,c
  5752                           
  5753                           ;main.c: 418:     break;
  5754  0122CA  D043               	goto	l1366
  5755  0122CC                     l13189:
  5756                           
  5757                           ; BSR set to: 1
  5758                           ;main.c: 420:     i = V_BAT;
  5759                           ;stkvar	_i @ sp[(-17)+13]
  5760  0122CC  0EFC               	movlw	-4
  5761  0122CE  6AE3               	clrf	plusw1,c
  5762  0122D0  84E3               	bsf	plusw1,2,c
  5763                           
  5764                           ;main.c: 421:     j = V_PV;
  5765                           ;stkvar	_j @ sp[(-17)+12]
  5766  0122D2  0EFB               	movlw	-5
  5767  0122D4  6AE3               	clrf	plusw1,c
  5768  0122D6  80E3               	bsf	plusw1,0,c
  5769  0122D8  84E3               	bsf	plusw1,2,c	;indir
  5770                           
  5771                           ;main.c: 422:     k = V_CBUS;
  5772                           ;stkvar	_k @ sp[(-17)+11]
  5773  0122DA  0EFA               	movlw	-6
  5774  0122DC  6AE3               	clrf	plusw1,c
  5775  0122DE  82E3               	bsf	plusw1,1,c
  5776  0122E0  84E3               	bsf	plusw1,2,c	;indir
  5777                           
  5778                           ;main.c: 423:     break;
  5779  0122E2  D037               	goto	l1366
  5780  0122E4                     l13191:
  5781                           
  5782                           ; BSR set to: 1
  5783                           ;main.c: 425:     i = V_BBAT;
  5784                           ;stkvar	_i @ sp[(-17)+13]
  5785  0122E4  0EFC               	movlw	-4
  5786  0122E6  6AE3               	clrf	plusw1,c
  5787  0122E8  82E3               	bsf	plusw1,1,c
  5788  0122EA  86E3               	bsf	plusw1,3,c	;indir
  5789                           
  5790                           ; BSR set to: 1
  5791                           ;main.c: 426:     j = V_TEMP;
  5792  0122EC  0E0B               	movlw	11
  5793  0122EE  6E0C               	movwf	(btemp+11)^0,c
  5794                           
  5795                           ;stkvar	_j @ sp[(-17)+12]
  5796  0122F0  0EFB               	movlw	-5
  5797  0122F2  0060  F033  FFE3   	movff	btemp+11,plusw1
  5798                           
  5799                           ; BSR set to: 1
  5800                           ;main.c: 427:     k = V_INVERTER;
  5801                           ;stkvar	_k @ sp[(-17)+11]
  5802  0122F8  0EFA               	movlw	-6
  5803  0122FA  6AE3               	clrf	plusw1,c
  5804  0122FC  84E3               	bsf	plusw1,2,c
  5805  0122FE  86E3               	bsf	plusw1,3,c	;indir
  5806                           
  5807                           ;main.c: 428:     break;
  5808  012300  D028               	goto	l1366
  5809  012302                     l13197:
  5810                           
  5811                           ; BSR set to: 1
  5812                           ;main.c: 430:     i = V_LIGHT_SENSOR;
  5813  012302  0E0D               	movlw	13
  5814  012304  6E0C               	movwf	(btemp+11)^0,c
  5815                           
  5816                           ;stkvar	_i @ sp[(-17)+13]
  5817  012306  0EFC               	movlw	-4
  5818  012308  0060  F033  FFE3   	movff	btemp+11,plusw1
  5819                           
  5820                           ;main.c: 431:     j = V_LIGHT_SENSOR;
  5821  01230E  0E0D               	movlw	13
  5822  012310  6E0C               	movwf	(btemp+11)^0,c
  5823                           
  5824                           ;stkvar	_j @ sp[(-17)+12]
  5825  012312  0EFB               	movlw	-5
  5826  012314  0060  F033  FFE3   	movff	btemp+11,plusw1
  5827                           
  5828                           ;main.c: 432:     k = V_LIGHT_SENSOR;
  5829  01231A  0E0D               	movlw	13
  5830  01231C  6E0C               	movwf	(btemp+11)^0,c
  5831                           
  5832                           ;stkvar	_k @ sp[(-17)+11]
  5833  01231E  0EFA               	movlw	-6
  5834  012320  0060  F033  FFE3   	movff	btemp+11,plusw1
  5835                           
  5836                           ;main.c: 433:     break;
  5837  012326  D015               	goto	l1366
  5838  012328                     l13201:
  5839                           
  5840                           ; BSR set to: 1
  5841                           ;stkvar	_inp_index @ sp[(-17)+14]
  5842  012328  0EFD               	movlw	-3
  5843  01232A  50E3               	movf	plusw1,w,c
  5844  01232C  6E0B               	movwf	(btemp+10)^0,c
  5845  01232E  6A0C               	clrf	(btemp+11)^0,c
  5846                           
  5847                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5848                           ; Switch size 1, requested type "simple"
  5849                           ; Number of cases is 1, Range of values is 0 to 0
  5850                           ; switch strategies available:
  5851                           ; Name         Instructions Cycles
  5852                           ; simple_byte            4     3 (average)
  5853                           ;	Chosen strategy is simple_byte
  5854  012330  500C               	movf	(btemp+11)^0,w,c
  5855  012332  0A00               	xorlw	0	; case 0
  5856  012334  A4D8               	btfss	status,2,c
  5857  012336  D00D               	goto	l1366
  5858                           
  5859                           ; BSR set to: 1
  5860                           ; Switch size 1, requested type "simple"
  5861                           ; Number of cases is 4, Range of values is 0 to 9
  5862                           ; switch strategies available:
  5863                           ; Name         Instructions Cycles
  5864                           ; simple_byte           13     7 (average)
  5865                           ;	Chosen strategy is simple_byte
  5866  012338  500B               	movf	(btemp+10)^0,w,c
  5867  01233A  0A00               	xorlw	0	; case 0
  5868  01233C  B4D8               	btfsc	status,2,c
  5869  01233E  D7BD               	goto	l13183
  5870  012340  0A03               	xorlw	3	; case 3
  5871  012342  B4D8               	btfsc	status,2,c
  5872  012344  D7C3               	goto	l13189
  5873  012346  0A05               	xorlw	5	; case 6
  5874  012348  B4D8               	btfsc	status,2,c
  5875  01234A  D7CC               	goto	l13191
  5876  01234C  0A0F               	xorlw	15	; case 9
  5877  01234E  B4D8               	btfsc	status,2,c
  5878  012350  D7D8               	goto	l13197
  5879  012352                     l1366:
  5880                           
  5881                           ; BSR set to: 1
  5882                           ;main.c: 442:   if (V.set_sequ) {
  5883  012352  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  5884  012354  EF8A  F08C         	goto	l13083
  5885                           
  5886                           ; BSR set to: 1
  5887                           ;main.c: 443:    if (TimerDone(TMR_INFO)) {
  5888  012358  0E07               	movlw	7
  5889  01235A  6EE6               	movwf	postinc1,c
  5890  01235C  ECA3  F0DC         	call	_TimerDone	;wreg free
  5891  012360  5001               	movf	btemp^0,w,c
  5892  012362  B4D8               	btfsc	status,2,c
  5893  012364  D00C               	goto	l13211
  5894                           
  5895                           ;main.c: 444:     V.set_sequ = 0;
  5896  012366  0101               	movlb	1	; () banked
  5897  012368  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  5898                           
  5899                           ; BSR set to: 1
  5900                           ;main.c: 445:     set_vterm(0);
  5901  01236A  0E00               	movlw	0
  5902  01236C  6EE6               	movwf	postinc1,c
  5903  01236E  EC67  F0DE         	call	_set_vterm	;wreg free
  5904                           
  5905                           ;main.c: 446:     update_lcd(0);
  5906  012372  0E00               	movlw	0
  5907  012374  6EE6               	movwf	postinc1,c
  5908  012376  EC50  F0CD         	call	_update_lcd	;wreg free
  5909                           
  5910                           ;main.c: 447:    } else {
  5911  01237A  EF8A  F08C         	goto	l13083
  5912  01237E                     l13211:
  5913                           
  5914                           ;main.c: 448:     set_vterm(2);
  5915  01237E  0E02               	movlw	2
  5916  012380  6EE6               	movwf	postinc1,c
  5917  012382  EC67  F0DE         	call	_set_vterm	;wreg free
  5918                           
  5919                           ;main.c: 449:     update_lcd(2);
  5920  012386  0E02               	movlw	2
  5921  012388  6EE6               	movwf	postinc1,c
  5922  01238A  EC50  F0CD         	call	_update_lcd	;wreg free
  5923  01238E  EF8A  F08C         	goto	l13083
  5924  012392                     __end_of_main:
  5925                           	opt callstack 0
  5926                           
  5927 ;; *************** function _static_soc *****************
  5928 ;; Defined at:
  5929 ;;		line 117 in file "mbmc.c"
  5930 ;; Parameters:    Size  Location     Type
  5931 ;;		None
  5932 ;; Auto vars:     Size  Location     Type
  5933 ;;		None
  5934 ;; Return value:  Size  Location     Type
  5935 ;;                  1  [STACK] void 
  5936 ;; Registers used:
  5937 ;;		wreg, fsr2l, fsr2h
  5938 ;; Tracked objects:
  5939 ;;		On entry : 0/0
  5940 ;;		On exit  : 0/0
  5941 ;;		Unchanged: 0/0
  5942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5947 ;;Total ram usage:        0 bytes
  5948 ;; Hardware stack levels used:    1
  5949 ;; Hardware stack levels required when called:   15
  5950 ;; This function calls:
  5951 ;;		Nothing
  5952 ;; This function is called by:
  5953 ;;		_main
  5954 ;; This function uses a reentrant model
  5955 ;;
  5956                           
  5957                           	psect	text1
  5958  01B50E                     __ptext1:
  5959                           	opt callstack 0
  5960  01B50E                     _static_soc:
  5961                           	opt callstack 15
  5962                           
  5963                           ;mbmc.c: 119:  C.runtime = 120;
  5964                           
  5965                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5966                           ;incstack = 0
  5967  01B50E  0E78               	movlw	120
  5968  01B510  006F FFA0  F7AF    	movff	wreg,_C+176	;volatile
  5969  01B516  0E00               	movlw	0
  5970  01B518  006F FFA0  F7B0    	movff	wreg,_C+177	;volatile
  5971                           
  5972                           ;mbmc.c: 120:  C.soc = 100;
  5973  01B51E  0E64               	movlw	100
  5974  01B520  006F FFA0  F7B1    	movff	wreg,_C+178	;volatile
  5975  01B526  0E00               	movlw	0
  5976  01B528  006F FFA0  F7B2    	movff	wreg,_C+179	;volatile
  5977                           
  5978                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  5979  01B52E  EE21  F38B         	lfsr	2,_C+140	;volatile
  5980  01B532  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  5981  01B538  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  5982  01B53E  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  5983  01B544  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  5984                           
  5985                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5986  01B54A  0012               	return		;funcret
  5987  01B54C                     __end_of_static_soc:
  5988                           	opt callstack 0
  5989                           
  5990 ;; *************** function _start_switch_handler *****************
  5991 ;; Defined at:
  5992 ;;		line 121 in file "dio.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;		None
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;		None
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  1  [STACK] void 
  5999 ;; Registers used:
  6000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6001 ;; Tracked objects:
  6002 ;;		On entry : 1/0
  6003 ;;		On exit  : 3F/39
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6010 ;;Total ram usage:        0 bytes
  6011 ;; Hardware stack levels used:    1
  6012 ;; Hardware stack levels required when called:   16
  6013 ;; This function calls:
  6014 ;;		_INT1_SetInterruptHandler
  6015 ;; This function is called by:
  6016 ;;		_main
  6017 ;; This function uses a reentrant model
  6018 ;;
  6019                           
  6020                           	psect	text2
  6021  01BC70                     __ptext2:
  6022                           	opt callstack 0
  6023  01BC70                     _start_switch_handler:
  6024                           	opt callstack 14
  6025                           
  6026                           ;dio.c: 123:  (PIE5bits.INT1IE = 0);
  6027                           
  6028                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6029                           ;incstack = 0
  6030  01BC70  0139               	movlb	57	; () banked
  6031  01BC72  9195               	bcf	149,0,b	;volatile
  6032                           
  6033                           ; BSR set to: 57
  6034                           ;dio.c: 124:  INT1_SetInterruptHandler(switch_handler);
  6035  01BC74  0EC8               	movlw	low _switch_handler
  6036  01BC76  6EE6               	movwf	postinc1,c
  6037  01BC78  0E93               	movlw	high _switch_handler
  6038  01BC7A  6EE6               	movwf	postinc1,c
  6039  01BC7C  0E01               	movlw	low (_switch_handler shr (0+16))
  6040  01BC7E  6EE6               	movwf	postinc1,c
  6041  01BC80  EC2F  F0DD         	call	_INT1_SetInterruptHandler	;wreg free
  6042                           
  6043                           ;dio.c: 125:  S.button[SNULL].sw = SW_INVALID;
  6044  01BC84  0E02               	movlw	2
  6045  01BC86  0101               	movlb	1	; () banked
  6046  01BC88  6FE9               	movwf	(_S+35)& (0+255),b	;volatile
  6047                           
  6048                           ; BSR set to: 1
  6049                           ;dio.c: 126:  (PIE5bits.INT1IE = 1);
  6050  01BC8A  0139               	movlb	57	; () banked
  6051  01BC8C  8195               	bsf	149,0,b	;volatile
  6052                           
  6053                           ; BSR set to: 57
  6054                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6055  01BC8E  0012               	return		;funcret
  6056  01BC90                     __end_of_start_switch_handler:
  6057                           	opt callstack 0
  6058                           
  6059 ;; *************** function _srand *****************
  6060 ;; Defined at:
  6061 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;  s               2  [STACK] unsigned int 
  6064 ;; Auto vars:     Size  Location     Type
  6065 ;;		None
  6066 ;; Return value:  Size  Location     Type
  6067 ;;                  1  [STACK] void 
  6068 ;; Registers used:
  6069 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 3F/2
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6079 ;;Total ram usage:        0 bytes
  6080 ;; Hardware stack levels used:    1
  6081 ;; Hardware stack levels required when called:   15
  6082 ;; This function calls:
  6083 ;;		Nothing
  6084 ;; This function is called by:
  6085 ;;		_main
  6086 ;; This function uses a reentrant model
  6087 ;;
  6088                           
  6089                           	psect	text3
  6090  01B6A0                     __ptext3:
  6091                           	opt callstack 0
  6092  01B6A0                     _srand:
  6093                           	opt callstack 15
  6094                           
  6095                           ;stkvar	_s @ sp[(0)+-2]
  6096                           
  6097                           ; BSR set to: 57
  6098                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6099                           ;incstack = 0
  6100  01B6A0  0EFE               	movlw	-2
  6101  01B6A2  50E3               	movf	plusw1,w,c
  6102  01B6A4  0FFF               	addlw	255
  6103  01B6A6  6E0B               	movwf	(btemp+10)^0,c
  6104  01B6A8  0EFF               	movlw	-1
  6105  01B6AA  006F FF8C  F00C    	movff	plusw1,btemp+11
  6106  01B6B0  0EFF               	movlw	255
  6107  01B6B2  220C               	addwfc	(btemp+11)^0,f,c
  6108  01B6B4  0060  F02C  F2C6   	movff	btemp+10,_seed
  6109  01B6BA  0060  F030  F2C7   	movff	btemp+11,_seed+1
  6110  01B6C0  0102               	movlb	2	; () banked
  6111  01B6C2  6BC8               	clrf	(_seed+2)& (0+255),b
  6112  01B6C4  6BC9               	clrf	(_seed+3)& (0+255),b
  6113  01B6C6  6BCA               	clrf	(_seed+4)& (0+255),b
  6114  01B6C8  6BCB               	clrf	(_seed+5)& (0+255),b
  6115  01B6CA  6BCC               	clrf	(_seed+6)& (0+255),b
  6116  01B6CC  6BCD               	clrf	(_seed+7)& (0+255),b
  6117                           
  6118                           ; BSR set to: 2
  6119                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6120  01B6CE  52E5               	movf	postdec1,f,c
  6121  01B6D0  52E5               	movf	postdec1,f,c
  6122  01B6D2  0012               	return		;funcret
  6123  01B6D4                     __end_of_srand:
  6124                           	opt callstack 0
  6125                           
  6126 ;; *************** function _spinners *****************
  6127 ;; Defined at:
  6128 ;;		line 145 in file "mbmc.c"
  6129 ;; Parameters:    Size  Location     Type
  6130 ;;  shape           1  [STACK] unsigned char 
  6131 ;;  reset           1  [STACK] unsigned char 
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;  c               1  [STACK] unsigned char 
  6134 ;; Return value:  Size  Location     Type
  6135 ;;                  1  [STACK] unsigned char 
  6136 ;; Registers used:
  6137 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/0
  6140 ;;		On exit  : 0/0
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6147 ;;Total ram usage:        0 bytes
  6148 ;; Hardware stack levels used:    1
  6149 ;; Hardware stack levels required when called:   16
  6150 ;; This function calls:
  6151 ;;		_strlen
  6152 ;; This function is called by:
  6153 ;;		_main
  6154 ;; This function uses a reentrant model
  6155 ;;
  6156                           
  6157                           	psect	text4
  6158  019DBC                     __ptext4:
  6159                           	opt callstack 0
  6160  019DBC                     _spinners:
  6161                           	opt callstack 0
  6162                           
  6163                           ; BSR set to: 2
  6164                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6165  019DBC  52E6               	movf	postinc1,f,c
  6166                           
  6167                           ;mbmc.c: 145: char spinners(uint8_t shape, uint8_t reset);mbmc.c: 146: {;mbmc.c: 147:  s
      +                          tatic uint8_t s[6];;mbmc.c: 148:  char c;;mbmc.c: 150:  if (shape > (6 - 1))
  6168                           ;stkvar	_shape @ sp[(-1)+-1]
  6169                           
  6170                           ;incstack = 0
  6171  019DBE  0EFE               	movlw	-2
  6172  019DC0  006F FF8C  F001    	movff	plusw1,btemp
  6173  019DC6  0E05               	movlw	5
  6174  019DC8  6401               	cpfsgt	btemp^0,c
  6175  019DCA  D002               	goto	l1882
  6176                           
  6177                           ;mbmc.c: 151:   shape = 0;
  6178                           ;stkvar	_shape @ sp[(-1)+-1]
  6179  019DCC  0EFE               	movlw	-2
  6180  019DCE  6AE3               	clrf	plusw1,c
  6181  019DD0                     l1882:
  6182                           
  6183                           ;mbmc.c: 152:  if (reset)
  6184                           ;stkvar	_reset @ sp[(-1)+-2]
  6185  019DD0  0EFD               	movlw	-3
  6186  019DD2  50E3               	movf	plusw1,w,c
  6187  019DD4  B4D8               	btfsc	status,2,c
  6188  019DD6  D00C               	goto	l10749
  6189                           
  6190                           ;mbmc.c: 153:   s[shape] = 0;
  6191                           ;stkvar	_shape @ sp[(-1)+-1]
  6192  019DD8  0EFE               	movlw	-2
  6193  019DDA  50E3               	movf	plusw1,w,c
  6194  019DDC  6E0B               	movwf	(btemp+10)^0,c
  6195  019DDE  6A0C               	clrf	(btemp+11)^0,c
  6196  019DE0  0EEF               	movlw	low spinners@s
  6197  019DE2  240B               	addwf	(btemp+10)^0,w,c
  6198  019DE4  6ED9               	movwf	fsr2l,c
  6199  019DE6  0E01               	movlw	high spinners@s
  6200  019DE8  200C               	addwfc	(btemp+11)^0,w,c
  6201  019DEA  6EDA               	movwf	fsr2h,c
  6202  019DEC  0E00               	movlw	0
  6203  019DEE  6EDF               	movwf	indf2,c
  6204  019DF0                     l10749:
  6205                           
  6206                           ;mbmc.c: 154:  c = spin[shape][s[shape]];
  6207                           ;stkvar	_shape @ sp[(-1)+-1]
  6208  019DF0  0EFE               	movlw	-2
  6209  019DF2  50E3               	movf	plusw1,w,c
  6210  019DF4  0D14               	mullw	20
  6211  019DF6  0EC7               	movlw	low _spin
  6212  019DF8  6E0B               	movwf	(btemp+10)^0,c
  6213  019DFA  0EFB               	movlw	high _spin
  6214  019DFC  6E0C               	movwf	(btemp+11)^0,c
  6215  019DFE  50F3               	movf	243,w,c
  6216  019E00  260B               	addwf	(btemp+10)^0,f,c
  6217  019E02  50F4               	movf	244,w,c
  6218  019E04  220C               	addwfc	(btemp+11)^0,f,c
  6219                           
  6220                           ;stkvar	_shape @ sp[(-1)+-1]
  6221  019E06  0EFE               	movlw	-2
  6222  019E08  50E3               	movf	plusw1,w,c
  6223  019E0A  6E09               	movwf	(btemp+8)^0,c
  6224  019E0C  6A0A               	clrf	(btemp+9)^0,c
  6225  019E0E  0EEF               	movlw	low spinners@s
  6226  019E10  2409               	addwf	(btemp+8)^0,w,c
  6227  019E12  6ED9               	movwf	fsr2l,c
  6228  019E14  0E01               	movlw	high spinners@s
  6229  019E16  200A               	addwfc	(btemp+9)^0,w,c
  6230  019E18  6EDA               	movwf	fsr2h,c
  6231  019E1A  50DF               	movf	indf2,w,c
  6232  019E1C  260B               	addwf	(btemp+10)^0,f,c
  6233  019E1E  0E00               	movlw	0
  6234  019E20  220C               	addwfc	(btemp+11)^0,f,c
  6235  019E22  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  6236  019E28  0060  F033  FFF7   	movff	btemp+11,tblptrh
  6237  019E2E                     	if	0	;tblptru may be non-zero
  6238  019E2E                     	endif
  6239  019E2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6240  019E2E  0E00               	movlw	low (__mediumconst shr (0+16))
  6241  019E30  6EF8               	movwf	tblptru,c
  6242  019E32                     	endif
  6243                           
  6244                           ;stkvar	_c @ sp[(-1)+0]
  6245  019E32  0008               	tblrd		*
  6246  019E34  0EFF               	movlw	-1
  6247  019E36  006F FFD7 FFE3     	movff	tablat,plusw1
  6248                           
  6249                           ;mbmc.c: 155:  if (++s[shape] >= strlen(spin[shape]))
  6250                           ;stkvar	_shape @ sp[(-1)+-1]
  6251  019E3C  0EFE               	movlw	-2
  6252  019E3E  50E3               	movf	plusw1,w,c
  6253  019E40  0D14               	mullw	20
  6254  019E42  0EC7               	movlw	low _spin
  6255  019E44  6E0B               	movwf	(btemp+10)^0,c
  6256  019E46  0EFB               	movlw	high _spin
  6257  019E48  6E0C               	movwf	(btemp+11)^0,c
  6258  019E4A  50F3               	movf	243,w,c
  6259  019E4C  260B               	addwf	(btemp+10)^0,f,c
  6260  019E4E  50F4               	movf	244,w,c
  6261  019E50  220C               	addwfc	(btemp+11)^0,f,c
  6262  019E52  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6263  019E58  0060  F033  FFE6   	movff	btemp+11,postinc1
  6264  019E5E  EC88  F0D3         	call	_strlen	;wreg free
  6265                           
  6266                           ;stkvar	_shape @ sp[(-1)+-1]
  6267  019E62  0EFE               	movlw	-2
  6268  019E64  50E3               	movf	plusw1,w,c
  6269  019E66  6E0B               	movwf	(btemp+10)^0,c
  6270  019E68  6A0C               	clrf	(btemp+11)^0,c
  6271  019E6A  0EEF               	movlw	low spinners@s
  6272  019E6C  240B               	addwf	(btemp+10)^0,w,c
  6273  019E6E  6ED9               	movwf	fsr2l,c
  6274  019E70  0E01               	movlw	high spinners@s
  6275  019E72  200C               	addwfc	(btemp+11)^0,w,c
  6276  019E74  6EDA               	movwf	fsr2h,c
  6277  019E76  2ADF               	incf	indf2,f,c
  6278  019E78  50DF               	movf	indf2,w,c
  6279  019E7A  6E0B               	movwf	(btemp+10)^0,c
  6280  019E7C  6A0C               	clrf	(btemp+11)^0,c
  6281  019E7E  5001               	movf	btemp^0,w,c
  6282  019E80  5C0B               	subwf	(btemp+10)^0,w,c
  6283  019E82  5002               	movf	(btemp+1)^0,w,c
  6284  019E84  580C               	subwfb	(btemp+11)^0,w,c
  6285  019E86  A0D8               	btfss	status,0,c
  6286  019E88  D00C               	goto	l10755
  6287                           
  6288                           ;mbmc.c: 156:   s[shape] = 0;
  6289                           ;stkvar	_shape @ sp[(-1)+-1]
  6290  019E8A  0EFE               	movlw	-2
  6291  019E8C  50E3               	movf	plusw1,w,c
  6292  019E8E  6E0B               	movwf	(btemp+10)^0,c
  6293  019E90  6A0C               	clrf	(btemp+11)^0,c
  6294  019E92  0EEF               	movlw	low spinners@s
  6295  019E94  240B               	addwf	(btemp+10)^0,w,c
  6296  019E96  6ED9               	movwf	fsr2l,c
  6297  019E98  0E01               	movlw	high spinners@s
  6298  019E9A  200C               	addwfc	(btemp+11)^0,w,c
  6299  019E9C  6EDA               	movwf	fsr2h,c
  6300  019E9E  0E00               	movlw	0
  6301  019EA0  6EDF               	movwf	indf2,c
  6302  019EA2                     l10755:
  6303                           
  6304                           ;mbmc.c: 157:  return c;
  6305                           ;stkvar	_c @ sp[(-1)+0]
  6306  019EA2  0EFF               	movlw	-1
  6307  019EA4  006F FF8C  F001    	movff	plusw1,btemp
  6308                           
  6309                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6310  019EAA  52E5               	movf	postdec1,f,c
  6311  019EAC  52E5               	movf	postdec1,f,c
  6312  019EAE  52E5               	movf	postdec1,f,c
  6313  019EB0  0012               	return		;funcret
  6314  019EB2                     __end_of_spinners:
  6315                           	opt callstack 0
  6316                           
  6317 ;; *************** function _init_port_dma *****************
  6318 ;; Defined at:
  6319 ;;		line 90 in file "eadog.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;		None
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;		None
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  1  [STACK] void 
  6326 ;; Registers used:
  6327 ;;		wreg, status,2
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/1
  6330 ;;		On exit  : 3F/3B
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6337 ;;Total ram usage:        0 bytes
  6338 ;; Hardware stack levels used:    1
  6339 ;; Hardware stack levels required when called:   15
  6340 ;; This function calls:
  6341 ;;		Nothing
  6342 ;; This function is called by:
  6343 ;;		_main
  6344 ;; This function uses a reentrant model
  6345 ;;
  6346                           
  6347                           	psect	text5
  6348  01B708                     __ptext5:
  6349                           	opt callstack 0
  6350  01B708                     _init_port_dma:
  6351                           	opt callstack 15
  6352                           
  6353                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  6354                           
  6355                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6356                           ;incstack = 0
  6357  01B708  0E3F               	movlw	-193
  6358  01B70A  013B               	movlb	59	; () banked
  6359  01B70C  17DD               	andwf	221,f,b	;volatile
  6360                           
  6361                           ; BSR set to: 59
  6362                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  6363  01B70E  9BDD               	bcf	221,5,b	;volatile
  6364                           
  6365                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  6366  01B710  51DD               	movf	221,w,b	;volatile
  6367  01B712  0BF9               	andlw	-7
  6368  01B714  0902               	iorlw	2
  6369  01B716  6FDD               	movwf	221,b	;volatile
  6370                           
  6371                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  6372  01B718  0EE7               	movlw	-25
  6373  01B71A  17DD               	andwf	221,f,b	;volatile
  6374                           
  6375                           ; BSR set to: 59
  6376                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  6377  01B71C  81DD               	bsf	221,0,b	;volatile
  6378                           
  6379                           ; BSR set to: 59
  6380                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  6381  01B71E  9DDC               	bcf	220,6,b	;volatile
  6382                           
  6383                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  6384  01B720  0E3D               	movlw	61
  6385  01B722  6FD1               	movwf	209,b	;volatile
  6386  01B724  0EEA               	movlw	234
  6387  01B726  6FD0               	movwf	208,b	;volatile
  6388                           
  6389                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  6390  01B728  0EFF               	movlw	low _port_data
  6391  01B72A  6FD9               	movwf	217,b	;volatile
  6392  01B72C  0E04               	movlw	high _port_data
  6393  01B72E  6FDA               	movwf	218,b	;volatile
  6394  01B730  0E00               	movlw	low (_port_data shr (0+16))
  6395  01B732  6FDB               	movwf	219,b	;volatile
  6396                           
  6397                           ; BSR set to: 59
  6398                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  6399  01B734  9BDC               	bcf	220,5,b	;volatile
  6400                           
  6401                           ; BSR set to: 59
  6402                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6403  01B736  0012               	return		;funcret
  6404  01B738                     __end_of_init_port_dma:
  6405                           	opt callstack 0
  6406                           
  6407 ;; *************** function _init_display *****************
  6408 ;; Defined at:
  6409 ;;		line 38 in file "eadog.c"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;		None
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;		None
  6414 ;; Return value:  Size  Location     Type
  6415 ;;                  1  [STACK] void 
  6416 ;; Registers used:
  6417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6418 ;; Tracked objects:
  6419 ;;		On entry : 3F/3B
  6420 ;;		On exit  : 3F/3D
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6427 ;;Total ram usage:        0 bytes
  6428 ;; Hardware stack levels used:    1
  6429 ;; Hardware stack levels required when called:   17
  6430 ;; This function calls:
  6431 ;;		_ringBufS_init
  6432 ;;		_send_lcd_cmd
  6433 ;;		_send_lcd_cmd_long
  6434 ;;		_wdtdelay
  6435 ;; This function is called by:
  6436 ;;		_main
  6437 ;; This function uses a reentrant model
  6438 ;;
  6439                           
  6440                           	psect	text6
  6441  019EB2                     __ptext6:
  6442                           	opt callstack 0
  6443  019EB2                     _init_display:
  6444                           	opt callstack 13
  6445                           
  6446                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  6447                           
  6448                           ; BSR set to: 59
  6449                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6450                           ;incstack = 0
  6451  019EB2  0E83               	movlw	low _ring_buf1
  6452  019EB4  0100               	movlb	0	; () banked
  6453  019EB6  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6454  019EB8  0E03               	movlw	high _ring_buf1
  6455  019EBA  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6456                           
  6457                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  6458  019EBC  0E40               	movlw	low _ring_buf2
  6459  019EBE  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6460  019EC0  0E03               	movlw	high _ring_buf2
  6461  019EC2  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6462                           
  6463                           ; BSR set to: 0
  6464                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  6465  019EC4  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  6466  019ECA  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  6467  019ED0  EC8F  F0DC         	call	_ringBufS_init	;wreg free
  6468                           
  6469                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  6470  019ED4  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  6471  019EDA  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  6472  019EE0  EC8F  F0DC         	call	_ringBufS_init	;wreg free
  6473                           
  6474                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  6475  019EE4  84BE               	bsf	190,2,c	;volatile
  6476  019EE6  84BC               	bsf	188,2,c	;volatile
  6477                           
  6478                           ;eadog.c: 59:  wdtdelay(350000);
  6479  019EE8  0E30               	movlw	48
  6480  019EEA  6EE6               	movwf	postinc1,c
  6481  019EEC  0E57               	movlw	87
  6482  019EEE  6EE6               	movwf	postinc1,c
  6483  019EF0  0E05               	movlw	5
  6484  019EF2  6EE6               	movwf	postinc1,c
  6485  019EF4  0E00               	movlw	0
  6486  019EF6  6EE6               	movwf	postinc1,c
  6487  019EF8  ECCA  F0D7         	call	_wdtdelay	;wreg free
  6488                           
  6489                           ; BSR set to: 0
  6490                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  6491  019EFC  0E39               	movlw	57
  6492  019EFE  6EE6               	movwf	postinc1,c
  6493  019F00  EC7B  F0DC         	call	_send_lcd_cmd	;wreg free
  6494                           
  6495                           ; BSR set to: 0
  6496                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  6497  019F04  0E1D               	movlw	29
  6498  019F06  6EE6               	movwf	postinc1,c
  6499  019F08  EC7B  F0DC         	call	_send_lcd_cmd	;wreg free
  6500                           
  6501                           ; BSR set to: 0
  6502                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  6503  019F0C  0E50               	movlw	80
  6504  019F0E  6EE6               	movwf	postinc1,c
  6505  019F10  EC7B  F0DC         	call	_send_lcd_cmd	;wreg free
  6506                           
  6507                           ; BSR set to: 0
  6508                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  6509  019F14  0E6C               	movlw	108
  6510  019F16  6EE6               	movwf	postinc1,c
  6511  019F18  EC7B  F0DC         	call	_send_lcd_cmd	;wreg free
  6512                           
  6513                           ; BSR set to: 0
  6514                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  6515  019F1C  0E76               	movlw	118
  6516  019F1E  6EE6               	movwf	postinc1,c
  6517  019F20  EC7B  F0DC         	call	_send_lcd_cmd	;wreg free
  6518                           
  6519                           ; BSR set to: 0
  6520                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  6521  019F24  0E38               	movlw	56
  6522  019F26  6EE6               	movwf	postinc1,c
  6523  019F28  EC67  F0DC         	call	_send_lcd_cmd_long	;wreg free
  6524                           
  6525                           ; BSR set to: 0
  6526                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  6527  019F2C  0E0F               	movlw	15
  6528  019F2E  6EE6               	movwf	postinc1,c
  6529  019F30  EC7B  F0DC         	call	_send_lcd_cmd	;wreg free
  6530                           
  6531                           ; BSR set to: 0
  6532                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  6533  019F34  0E01               	movlw	1
  6534  019F36  6EE6               	movwf	postinc1,c
  6535  019F38  EC67  F0DC         	call	_send_lcd_cmd_long	;wreg free
  6536                           
  6537                           ; BSR set to: 0
  6538                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  6539  019F3C  0E02               	movlw	2
  6540  019F3E  6EE6               	movwf	postinc1,c
  6541  019F40  EC7B  F0DC         	call	_send_lcd_cmd	;wreg free
  6542                           
  6543                           ; BSR set to: 0
  6544                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  6545  019F44  0E06               	movlw	6
  6546  019F46  6EE6               	movwf	postinc1,c
  6547  019F48  EC7B  F0DC         	call	_send_lcd_cmd	;wreg free
  6548                           
  6549                           ; BSR set to: 0
  6550                           ;eadog.c: 70:  wdtdelay(30);
  6551  019F4C  0E1E               	movlw	30
  6552  019F4E  6EE6               	movwf	postinc1,c
  6553  019F50  0E00               	movlw	0
  6554  019F52  6EE6               	movwf	postinc1,c
  6555  019F54  0E00               	movlw	0
  6556  019F56  6EE6               	movwf	postinc1,c
  6557  019F58  0E00               	movlw	0
  6558  019F5A  6EE6               	movwf	postinc1,c
  6559  019F5C  ECCA  F0D7         	call	_wdtdelay	;wreg free
  6560                           
  6561                           ; BSR set to: 0
  6562                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  6563  019F60  0E02               	movlw	2
  6564  019F62  013D               	movlb	61	; () banked
  6565  019F64  6F16               	movwf	22,b	;volatile
  6566                           
  6567                           ; BSR set to: 61
  6568                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  6569  019F66  0E40               	movlw	64
  6570  019F68  6F15               	movwf	21,b	;volatile
  6571                           
  6572                           ; BSR set to: 61
  6573                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  6574  019F6A  0E83               	movlw	131
  6575  019F6C  6F14               	movwf	20,b	;volatile
  6576                           
  6577                           ; BSR set to: 61
  6578                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  6579  019F6E  931A               	bcf	26,1,b	;volatile
  6580                           
  6581                           ; BSR set to: 61
  6582                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  6583  019F70  0E3F               	movlw	-193
  6584  019F72  013B               	movlb	59	; () banked
  6585  019F74  17FD               	andwf	253,f,b	;volatile
  6586                           
  6587                           ; BSR set to: 59
  6588                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  6589  019F76  9BFD               	bcf	253,5,b	;volatile
  6590                           
  6591                           ; BSR set to: 59
  6592                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  6593  019F78  51FD               	movf	253,w,b	;volatile
  6594  019F7A  0BF9               	andlw	-7
  6595  019F7C  0902               	iorlw	2
  6596  019F7E  6FFD               	movwf	253,b	;volatile
  6597                           
  6598                           ; BSR set to: 59
  6599                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  6600  019F80  0EE7               	movlw	-25
  6601  019F82  17FD               	andwf	253,f,b	;volatile
  6602                           
  6603                           ; BSR set to: 59
  6604                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  6605  019F84  81FD               	bsf	253,0,b	;volatile
  6606                           
  6607                           ; BSR set to: 59
  6608                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  6609  019F86  0E83               	movlw	low _ring_buf1
  6610  019F88  6FF9               	movwf	249,b	;volatile
  6611  019F8A  0E03               	movlw	high _ring_buf1
  6612  019F8C  6FFA               	movwf	250,b	;volatile
  6613  019F8E  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6614  019F90  6FFB               	movwf	251,b	;volatile
  6615                           
  6616                           ; BSR set to: 59
  6617                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  6618  019F92  9BFC               	bcf	252,5,b	;volatile
  6619                           
  6620                           ; BSR set to: 59
  6621                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  6622  019F94  013D               	movlb	61	; () banked
  6623  019F96  831A               	bsf	26,1,b	;volatile
  6624                           
  6625                           ; BSR set to: 61
  6626                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  6627  019F98  94BE               	bcf	190,2,c	;volatile
  6628                           
  6629                           ; BSR set to: 61
  6630                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6631  019F9A  0012               	return		;funcret
  6632  019F9C                     __end_of_init_display:
  6633                           	opt callstack 0
  6634                           
  6635 ;; *************** function _send_lcd_cmd_long *****************
  6636 ;; Defined at:
  6637 ;;		line 129 in file "eadog.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;  cmd             1  [STACK] const unsigned char 
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;		None
  6642 ;; Return value:  Size  Location     Type
  6643 ;;                  1  [STACK] void 
  6644 ;; Registers used:
  6645 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6646 ;; Tracked objects:
  6647 ;;		On entry : 3F/0
  6648 ;;		On exit  : 3F/0
  6649 ;;		Unchanged: 0/0
  6650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6655 ;;Total ram usage:        0 bytes
  6656 ;; Hardware stack levels used:    1
  6657 ;; Hardware stack levels required when called:   16
  6658 ;; This function calls:
  6659 ;;		_SPI1_Exchange8bit
  6660 ;;		_wdtdelay
  6661 ;; This function is called by:
  6662 ;;		_init_display
  6663 ;; This function uses a reentrant model
  6664 ;;
  6665                           
  6666                           	psect	text7
  6667  01B8CE                     __ptext7:
  6668                           	opt callstack 0
  6669  01B8CE                     _send_lcd_cmd_long:
  6670                           	opt callstack 13
  6671                           
  6672                           ; BSR set to: 61
  6673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6674                           ;incstack = 0
  6675                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  6676  01B8CE  92BC               	bcf	188,1,c	;volatile
  6677                           
  6678                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  6679  01B8D0  94BC               	bcf	188,2,c	;volatile
  6680                           
  6681                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  6682                           ;stkvar	_cmd @ sp[(0)+-1]
  6683  01B8D2  0EFF               	movlw	-1
  6684  01B8D4  50E3               	movf	plusw1,w,c
  6685  01B8D6  6EE6               	movwf	postinc1,c
  6686  01B8D8  EC58  F0DE         	call	_SPI1_Exchange8bit	;wreg free
  6687                           
  6688                           ; BSR set to: 57
  6689                           ;eadog.c: 134:  wdtdelay(800);
  6690  01B8DC  0E20               	movlw	32
  6691  01B8DE  6EE6               	movwf	postinc1,c
  6692  01B8E0  0E03               	movlw	3
  6693  01B8E2  6EE6               	movwf	postinc1,c
  6694  01B8E4  0E00               	movlw	0
  6695  01B8E6  6EE6               	movwf	postinc1,c
  6696  01B8E8  0E00               	movlw	0
  6697  01B8EA  6EE6               	movwf	postinc1,c
  6698  01B8EC  ECCA  F0D7         	call	_wdtdelay	;wreg free
  6699                           
  6700                           ; BSR set to: 0
  6701  01B8F0  82BC               	bsf	188,1,c	;volatile
  6702                           
  6703                           ; BSR set to: 0
  6704                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6705  01B8F2  52E5               	movf	postdec1,f,c
  6706  01B8F4  0012               	return		;funcret
  6707  01B8F6                     __end_of_send_lcd_cmd_long:
  6708                           	opt callstack 0
  6709                           
  6710 ;; *************** function _send_lcd_cmd *****************
  6711 ;; Defined at:
  6712 ;;		line 117 in file "eadog.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;  cmd             1  [STACK] const unsigned char 
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;		None
  6717 ;; Return value:  Size  Location     Type
  6718 ;;                  1  [STACK] void 
  6719 ;; Registers used:
  6720 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6721 ;; Tracked objects:
  6722 ;;		On entry : 3F/0
  6723 ;;		On exit  : 3F/0
  6724 ;;		Unchanged: 0/0
  6725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6730 ;;Total ram usage:        0 bytes
  6731 ;; Hardware stack levels used:    1
  6732 ;; Hardware stack levels required when called:   16
  6733 ;; This function calls:
  6734 ;;		_SPI1_Exchange8bit
  6735 ;;		_wdtdelay
  6736 ;; This function is called by:
  6737 ;;		_init_display
  6738 ;; This function uses a reentrant model
  6739 ;;
  6740                           
  6741                           	psect	text8
  6742  01B8F6                     __ptext8:
  6743                           	opt callstack 0
  6744  01B8F6                     _send_lcd_cmd:
  6745                           	opt callstack 13
  6746                           
  6747                           ; BSR set to: 0
  6748                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6749                           ;incstack = 0
  6750                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  6751  01B8F6  92BC               	bcf	188,1,c	;volatile
  6752                           
  6753                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  6754  01B8F8  94BC               	bcf	188,2,c	;volatile
  6755                           
  6756                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  6757                           ;stkvar	_cmd @ sp[(0)+-1]
  6758  01B8FA  0EFF               	movlw	-1
  6759  01B8FC  50E3               	movf	plusw1,w,c
  6760  01B8FE  6EE6               	movwf	postinc1,c
  6761  01B900  EC58  F0DE         	call	_SPI1_Exchange8bit	;wreg free
  6762                           
  6763                           ; BSR set to: 57
  6764                           ;eadog.c: 122:  wdtdelay(30);
  6765  01B904  0E1E               	movlw	30
  6766  01B906  6EE6               	movwf	postinc1,c
  6767  01B908  0E00               	movlw	0
  6768  01B90A  6EE6               	movwf	postinc1,c
  6769  01B90C  0E00               	movlw	0
  6770  01B90E  6EE6               	movwf	postinc1,c
  6771  01B910  0E00               	movlw	0
  6772  01B912  6EE6               	movwf	postinc1,c
  6773  01B914  ECCA  F0D7         	call	_wdtdelay	;wreg free
  6774                           
  6775                           ; BSR set to: 0
  6776  01B918  82BC               	bsf	188,1,c	;volatile
  6777                           
  6778                           ; BSR set to: 0
  6779                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6780  01B91A  52E5               	movf	postdec1,f,c
  6781  01B91C  0012               	return		;funcret
  6782  01B91E                     __end_of_send_lcd_cmd:
  6783                           	opt callstack 0
  6784                           
  6785 ;; *************** function _SPI1_Exchange8bit *****************
  6786 ;; Defined at:
  6787 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;  data            1  [STACK] unsigned char 
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;		None
  6792 ;; Return value:  Size  Location     Type
  6793 ;;                  1  [STACK] unsigned char 
  6794 ;; Registers used:
  6795 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6796 ;; Tracked objects:
  6797 ;;		On entry : 0/0
  6798 ;;		On exit  : 3F/39
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6805 ;;Total ram usage:        0 bytes
  6806 ;; Hardware stack levels used:    1
  6807 ;; Hardware stack levels required when called:   15
  6808 ;; This function calls:
  6809 ;;		Nothing
  6810 ;; This function is called by:
  6811 ;;		_send_lcd_cmd
  6812 ;;		_send_lcd_cmd_long
  6813 ;; This function uses a reentrant model
  6814 ;;
  6815                           
  6816                           	psect	text9
  6817  01BCB0                     __ptext9:
  6818                           	opt callstack 0
  6819  01BCB0                     _SPI1_Exchange8bit:
  6820                           	opt callstack 13
  6821                           
  6822                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  6823                           
  6824                           ; BSR set to: 0
  6825                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6826                           ;incstack = 0
  6827  01BCB0  0E01               	movlw	1
  6828  01BCB2  013D               	movlb	61	; () banked
  6829  01BCB4  6F12               	movwf	18,b	;volatile
  6830                           
  6831                           ; BSR set to: 61
  6832                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  6833                           ;stkvar	_data @ sp[(0)+-1]
  6834  01BCB6  0EFF               	movlw	-1
  6835  01BCB8  006F FF8F FD11     	movff	plusw1,15633	;volatile
  6836  01BCBE                     l807:
  6837                           
  6838                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  6839  01BCBE  0139               	movlb	57	; () banked
  6840  01BCC0  A9A2               	btfss	162,4,b	;volatile
  6841  01BCC2  D7FD               	goto	l807
  6842                           
  6843                           ; BSR set to: 57
  6844                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  6845  01BCC4  006F F440  F001    	movff	15632,btemp	;volatile
  6846                           
  6847                           ; BSR set to: 57
  6848                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6849  01BCCA  52E5               	movf	postdec1,f,c
  6850  01BCCC  0012               	return		;funcret
  6851  01BCCE                     __end_of_SPI1_Exchange8bit:
  6852                           	opt callstack 0
  6853                           
  6854 ;; *************** function _ringBufS_init *****************
  6855 ;; Defined at:
  6856 ;;		line 22 in file "ringbufs.c"
  6857 ;; Parameters:    Size  Location     Type
  6858 ;;  _this           2  [STACK] PTR volatile struct ring
  6859 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6860 ;; Auto vars:     Size  Location     Type
  6861 ;;		None
  6862 ;; Return value:  Size  Location     Type
  6863 ;;                  1  [STACK] void 
  6864 ;; Registers used:
  6865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6866 ;; Tracked objects:
  6867 ;;		On entry : 0/0
  6868 ;;		On exit  : 0/0
  6869 ;;		Unchanged: 0/0
  6870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6875 ;;Total ram usage:        0 bytes
  6876 ;; Hardware stack levels used:    1
  6877 ;; Hardware stack levels required when called:   16
  6878 ;; This function calls:
  6879 ;;		_memset
  6880 ;; This function is called by:
  6881 ;;		_init_display
  6882 ;; This function uses a reentrant model
  6883 ;;
  6884                           
  6885                           	psect	text10
  6886  01B91E                     __ptext10:
  6887                           	opt callstack 0
  6888  01B91E                     _ringBufS_init:
  6889                           	opt callstack 13
  6890                           
  6891                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  6892                           
  6893                           ; BSR set to: 57
  6894                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6895                           ;incstack = 0
  6896  01B91E  0E43               	movlw	67
  6897  01B920  6EE6               	movwf	postinc1,c
  6898  01B922  0E00               	movlw	0
  6899  01B924  6EE6               	movwf	postinc1,c
  6900  01B926  0E00               	movlw	0
  6901  01B928  6EE6               	movwf	postinc1,c
  6902  01B92A  0E00               	movlw	0
  6903  01B92C  6EE6               	movwf	postinc1,c
  6904                           
  6905                           ;stkvar	__this @ sp[(-4)+-2]
  6906  01B92E  0EFA               	movlw	-6
  6907  01B930  006F FF8F FFE6     	movff	plusw1,postinc1
  6908  01B936  006F FF8F FFE6     	movff	plusw1,postinc1
  6909  01B93C  EC90  F0B5         	call	_memset	;wreg free
  6910                           
  6911                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6912  01B940  52E5               	movf	postdec1,f,c
  6913  01B942  52E5               	movf	postdec1,f,c
  6914  01B944  0012               	return		;funcret
  6915  01B946                     __end_of_ringBufS_init:
  6916                           	opt callstack 0
  6917                           
  6918 ;; *************** function _init_bsoc *****************
  6919 ;; Defined at:
  6920 ;;		line 95 in file "bsoc.c"
  6921 ;; Parameters:    Size  Location     Type
  6922 ;;		None
  6923 ;; Auto vars:     Size  Location     Type
  6924 ;;		None
  6925 ;; Return value:  Size  Location     Type
  6926 ;;                  1  [STACK] void 
  6927 ;; Registers used:
  6928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6929 ;; Tracked objects:
  6930 ;;		On entry : 0/0
  6931 ;;		On exit  : 0/0
  6932 ;;		Unchanged: 0/0
  6933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6938 ;;Total ram usage:        0 bytes
  6939 ;; Hardware stack levels used:    1
  6940 ;; Hardware stack levels required when called:   18
  6941 ;; This function calls:
  6942 ;;		_TMR3_SetInterruptHandler
  6943 ;;		_Volts_to_SOC
  6944 ;;		___fldiv
  6945 ;;		___flmul
  6946 ;;		___fltol
  6947 ;;		___xxtofl
  6948 ;;		_conv_raw_result
  6949 ;; This function is called by:
  6950 ;;		_main
  6951 ;; This function uses a reentrant model
  6952 ;;
  6953                           
  6954                           	psect	text11
  6955  017ACE                     __ptext11:
  6956                           	opt callstack 0
  6957  017ACE                     _init_bsoc:
  6958                           	opt callstack 12
  6959                           
  6960                           ;bsoc.c: 100:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  6961                           
  6962                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6963                           ;incstack = 0
  6964  017ACE  0E00               	movlw	0
  6965  017AD0  6EE6               	movwf	postinc1,c
  6966  017AD2  0E00               	movlw	0
  6967  017AD4  6EE6               	movwf	postinc1,c
  6968  017AD6  0E7A               	movlw	122
  6969  017AD8  6EE6               	movwf	postinc1,c
  6970  017ADA  0E44               	movlw	68
  6971  017ADC  6EE6               	movwf	postinc1,c
  6972  017ADE  0E00               	movlw	0
  6973  017AE0  6EE6               	movwf	postinc1,c
  6974  017AE2  0E04               	movlw	4
  6975  017AE4  6EE6               	movwf	postinc1,c
  6976  017AE6  EC0D  F0A8         	call	_conv_raw_result	;wreg free
  6977  017AEA  0060  F007  FFE6   	movff	btemp,postinc1
  6978  017AF0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6979  017AF6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6980  017AFC  0060  F013  FFE6   	movff	btemp+3,postinc1
  6981  017B02  EC81  F0C6         	call	___fltol	;wreg free
  6982  017B06  0060  F007  FFE6   	movff	btemp,postinc1
  6983  017B0C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6984  017B12  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6985  017B18  0060  F013  FFE6   	movff	btemp+3,postinc1
  6986  017B1E  0E00               	movlw	0
  6987  017B20  6EE6               	movwf	postinc1,c
  6988  017B22  EC95  F0C0         	call	___xxtofl	;wreg free
  6989  017B26  0060  F007  FFE6   	movff	btemp,postinc1
  6990  017B2C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6991  017B32  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6992  017B38  0060  F013  FFE6   	movff	btemp+3,postinc1
  6993  017B3E  EC9F  F099         	call	___flmul	;wreg free
  6994  017B42  0060  F007  FFE6   	movff	btemp,postinc1
  6995  017B48  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6996  017B4E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6997  017B54  0060  F013  FFE6   	movff	btemp+3,postinc1
  6998  017B5A  EC81  F0C6         	call	___fltol	;wreg free
  6999  017B5E  0060  F007  FFE6   	movff	btemp,postinc1
  7000  017B64  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7001  017B6A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7002  017B70  0060  F013  FFE6   	movff	btemp+3,postinc1
  7003  017B76  ECAD  F0CB         	call	_Volts_to_SOC	;wreg free
  7004  017B7A  0060  F004  F7B1   	movff	btemp,_C+178	;volatile
  7005  017B80  0060  F008  F7B2   	movff	btemp+1,_C+179	;volatile
  7006                           
  7007                           ;bsoc.c: 101:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  7008  017B86  EE21  F38B         	lfsr	2,_C+140	;volatile
  7009  017B8A  006F FF7B FFE6     	movff	postinc2,postinc1
  7010  017B90  006F FF7B FFE6     	movff	postinc2,postinc1
  7011  017B96  006F FF7B FFE6     	movff	postinc2,postinc1
  7012  017B9C  006F FF7B FFE6     	movff	postinc2,postinc1
  7013  017BA2  0E00               	movlw	0
  7014  017BA4  6EE6               	movwf	postinc1,c
  7015  017BA6  0E00               	movlw	0
  7016  017BA8  6EE6               	movwf	postinc1,c
  7017  017BAA  0EC8               	movlw	200
  7018  017BAC  6EE6               	movwf	postinc1,c
  7019  017BAE  0E42               	movlw	66
  7020  017BB0  6EE6               	movwf	postinc1,c
  7021  017BB2  0E00               	movlw	0
  7022  017BB4  6EE6               	movwf	postinc1,c
  7023  017BB6  0E00               	movlw	0
  7024  017BB8  6EE6               	movwf	postinc1,c
  7025  017BBA  0E7A               	movlw	122
  7026  017BBC  6EE6               	movwf	postinc1,c
  7027  017BBE  0E44               	movlw	68
  7028  017BC0  6EE6               	movwf	postinc1,c
  7029  017BC2  0E00               	movlw	0
  7030  017BC4  6EE6               	movwf	postinc1,c
  7031  017BC6  0E04               	movlw	4
  7032  017BC8  6EE6               	movwf	postinc1,c
  7033  017BCA  EC0D  F0A8         	call	_conv_raw_result	;wreg free
  7034  017BCE  0060  F007  FFE6   	movff	btemp,postinc1
  7035  017BD4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7036  017BDA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7037  017BE0  0060  F013  FFE6   	movff	btemp+3,postinc1
  7038  017BE6  EC81  F0C6         	call	___fltol	;wreg free
  7039  017BEA  0060  F007  FFE6   	movff	btemp,postinc1
  7040  017BF0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7041  017BF6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7042  017BFC  0060  F013  FFE6   	movff	btemp+3,postinc1
  7043  017C02  0E00               	movlw	0
  7044  017C04  6EE6               	movwf	postinc1,c
  7045  017C06  EC95  F0C0         	call	___xxtofl	;wreg free
  7046  017C0A  0060  F007  FFE6   	movff	btemp,postinc1
  7047  017C10  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7048  017C16  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7049  017C1C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7050  017C22  EC9F  F099         	call	___flmul	;wreg free
  7051  017C26  0060  F007  FFE6   	movff	btemp,postinc1
  7052  017C2C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7053  017C32  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7054  017C38  0060  F013  FFE6   	movff	btemp+3,postinc1
  7055  017C3E  EC81  F0C6         	call	___fltol	;wreg free
  7056  017C42  0060  F007  FFE6   	movff	btemp,postinc1
  7057  017C48  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7058  017C4E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7059  017C54  0060  F013  FFE6   	movff	btemp+3,postinc1
  7060  017C5A  ECAD  F0CB         	call	_Volts_to_SOC	;wreg free
  7061  017C5E  0060  F004  F00B   	movff	btemp,btemp+10
  7062  017C64  0060  F008  F00C   	movff	btemp+1,btemp+11
  7063  017C6A  500B               	movf	(btemp+10)^0,w,c
  7064  017C6C  6E05               	movwf	(btemp+4)^0,c
  7065  017C6E  500C               	movf	(btemp+11)^0,w,c
  7066  017C70  6E06               	movwf	(btemp+5)^0,c
  7067  017C72  6A07               	clrf	(btemp+6)^0,c
  7068  017C74  6A08               	clrf	(btemp+7)^0,c
  7069  017C76  0060  F017  FFE6   	movff	btemp+4,postinc1
  7070  017C7C  0060  F01B  FFE6   	movff	btemp+5,postinc1
  7071  017C82  0060  F01F  FFE6   	movff	btemp+6,postinc1
  7072  017C88  0060  F023  FFE6   	movff	btemp+7,postinc1
  7073  017C8E  0E00               	movlw	0
  7074  017C90  6EE6               	movwf	postinc1,c
  7075  017C92  EC95  F0C0         	call	___xxtofl	;wreg free
  7076  017C96  0060  F007  FFE6   	movff	btemp,postinc1
  7077  017C9C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7078  017CA2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7079  017CA8  0060  F013  FFE6   	movff	btemp+3,postinc1
  7080  017CAE  EC50  F0A5         	call	___fldiv	;wreg free
  7081  017CB2  0060  F007  FFE6   	movff	btemp,postinc1
  7082  017CB8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7083  017CBE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7084  017CC4  0060  F013  FFE6   	movff	btemp+3,postinc1
  7085  017CCA  EC9F  F099         	call	___flmul	;wreg free
  7086  017CCE  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  7087  017CD4  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  7088  017CDA  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  7089  017CE0  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  7090                           
  7091                           ;bsoc.c: 102:  TMR3_SetInterruptHandler(calc_bsoc);
  7092  017CE6  0E24               	movlw	low _calc_bsoc
  7093  017CE8  6EE6               	movwf	postinc1,c
  7094  017CEA  0E43               	movlw	high _calc_bsoc
  7095  017CEC  6EE6               	movwf	postinc1,c
  7096  017CEE  0E01               	movlw	low (_calc_bsoc shr (0+16))
  7097  017CF0  6EE6               	movwf	postinc1,c
  7098  017CF2  EC1B  F0DD         	call	_TMR3_SetInterruptHandler	;wreg free
  7099                           
  7100                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7101  017CF6  0012               	return		;funcret
  7102  017CF8                     __end_of_init_bsoc:
  7103                           	opt callstack 0
  7104                           
  7105 ;; *************** function _Volts_to_SOC *****************
  7106 ;; Defined at:
  7107 ;;		line 159 in file "bsoc.c"
  7108 ;; Parameters:    Size  Location     Type
  7109 ;;  cvoltage        4  [STACK] unsigned long 
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;  soc             4  [STACK] float 
  7112 ;;  slot            1  [STACK] unsigned char 
  7113 ;; Return value:  Size  Location     Type
  7114 ;;                  2  [STACK] unsigned short 
  7115 ;; Registers used:
  7116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7117 ;; Tracked objects:
  7118 ;;		On entry : 0/0
  7119 ;;		On exit  : 0/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7126 ;;Total ram usage:        0 bytes
  7127 ;; Hardware stack levels used:    1
  7128 ;; Hardware stack levels required when called:   16
  7129 ;; This function calls:
  7130 ;;		___fltol
  7131 ;;		___xxtofl
  7132 ;; This function is called by:
  7133 ;;		_init_bsoc
  7134 ;; This function uses a reentrant model
  7135 ;;
  7136                           
  7137                           	psect	text12
  7138  01975A                     __ptext12:
  7139                           	opt callstack 0
  7140  01975A                     _Volts_to_SOC:
  7141                           	opt callstack 0
  7142                           
  7143                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7144  01975A  0E05               	movlw	5
  7145  01975C  26E1               	addwf	fsr1l,f,c
  7146  01975E  0E00               	movlw	0
  7147  019760  22E2               	addwfc	fsr1h,f,c
  7148                           
  7149                           ;bsoc.c: 159: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 160: {;bsoc.c: 161:  uint
      +                          8_t slot;;bsoc.c: 162:  float soc = 0;
  7150                           
  7151                           ;incstack = 0
  7152  019762  0E00               	movlw	0
  7153  019764  6E09               	movwf	(btemp+8)^0,c
  7154  019766  0E00               	movlw	0
  7155  019768  6E0A               	movwf	(btemp+9)^0,c
  7156  01976A  0E00               	movlw	0
  7157  01976C  6E0B               	movwf	(btemp+10)^0,c
  7158  01976E  0E00               	movlw	0
  7159  019770  6E0C               	movwf	(btemp+11)^0,c
  7160                           
  7161                           ;stkvar	_soc @ sp[(-5)+0]
  7162  019772  0EFB               	movlw	-5
  7163  019774  0060  F027  FFE3   	movff	btemp+8,plusw1
  7164  01977A  0EFC               	movlw	-4
  7165  01977C  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7166  019782  0EFD               	movlw	-3
  7167  019784  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7168  01978A  0EFE               	movlw	-2
  7169  01978C  0060  F033  FFE3   	movff	btemp+11,plusw1
  7170                           
  7171                           ;bsoc.c: 164:  for (slot = 0; slot < 26; slot++) {
  7172                           ;stkvar	_slot @ sp[(-5)+4]
  7173  019792  0EFF               	movlw	-1
  7174  019794  6AE3               	clrf	plusw1,c
  7175  019796                     l10525:
  7176                           
  7177                           ;bsoc.c: 165:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  7178                           ;stkvar	_cvoltage @ sp[(-5)+-4]
  7179                           ;stkvar	_slot @ sp[(-5)+4]
  7180  019796  0EFF               	movlw	-1
  7181  019798  50E3               	movf	plusw1,w,c
  7182  01979A  0D08               	mullw	8
  7183  01979C  0E67               	movlw	low _BVSOC_TABLE
  7184  01979E  24F3               	addwf	243,w,c
  7185  0197A0  6EF6               	movwf	tblptrl,c
  7186  0197A2  0EFA               	movlw	high _BVSOC_TABLE
  7187  0197A4  20F4               	addwfc	244,w,c
  7188  0197A6  6EF7               	movwf	tblptrh,c
  7189  0197A8                     	if	1	;There are 3 active tblptr bytes
  7190  0197A8  6AF8               	clrf	tblptru,c
  7191  0197AA  0E00               	movlw	low (__mediumconst shr (0+16))
  7192  0197AC  22F8               	addwfc	tblptru,f,c
  7193  0197AE                     	endif
  7194  0197AE  0EF7               	movlw	-9
  7195  0197B0  50E3               	movf	plusw1,w,c
  7196  0197B2  0009               	tblrd		*+
  7197  0197B4  5CF5               	subwf	tablat,w,c
  7198  0197B6  0EF8               	movlw	-8
  7199  0197B8  50E3               	movf	plusw1,w,c
  7200  0197BA  0009               	tblrd		*+
  7201  0197BC  58F5               	subwfb	tablat,w,c
  7202  0197BE  0EF9               	movlw	-7
  7203  0197C0  50E3               	movf	plusw1,w,c
  7204  0197C2  0009               	tblrd		*+
  7205  0197C4  58F5               	subwfb	tablat,w,c
  7206  0197C6  0EFA               	movlw	-6
  7207  0197C8  50E3               	movf	plusw1,w,c
  7208  0197CA  0009               	tblrd		*+
  7209  0197CC  58F5               	subwfb	tablat,w,c
  7210  0197CE  B0D8               	btfsc	status,0,c
  7211  0197D0  D034               	goto	l10529
  7212                           
  7213                           ;bsoc.c: 166:    soc = BVSOC_TABLE[slot][1];
  7214                           ;stkvar	_slot @ sp[(-5)+4]
  7215  0197D2  0EFF               	movlw	-1
  7216  0197D4  50E3               	movf	plusw1,w,c
  7217  0197D6  0D08               	mullw	8
  7218  0197D8  0E04               	movlw	4
  7219  0197DA  26F3               	addwf	243,f,c
  7220  0197DC  0E00               	movlw	0
  7221  0197DE  22F4               	addwfc	244,f,c
  7222  0197E0  0E67               	movlw	low _BVSOC_TABLE
  7223  0197E2  24F3               	addwf	243,w,c
  7224  0197E4  6EF6               	movwf	tblptrl,c
  7225  0197E6  0EFA               	movlw	high _BVSOC_TABLE
  7226  0197E8  20F4               	addwfc	244,w,c
  7227  0197EA  6EF7               	movwf	tblptrh,c
  7228  0197EC                     	if	1	;There are 3 active tblptr bytes
  7229  0197EC  6AF8               	clrf	tblptru,c
  7230  0197EE  0E00               	movlw	low (__mediumconst shr (0+16))
  7231  0197F0  22F8               	addwfc	tblptru,f,c
  7232  0197F2                     	endif
  7233  0197F2  0009               	tblrd		*+
  7234  0197F4  006F FFD7 FFE6     	movff	tablat,postinc1
  7235  0197FA  0009               	tblrd		*+
  7236  0197FC  006F FFD7 FFE6     	movff	tablat,postinc1
  7237  019802  0009               	tblrd		*+
  7238  019804  006F FFD7 FFE6     	movff	tablat,postinc1
  7239  01980A  0009               	tblrd		*+
  7240  01980C  006F FFD7 FFE6     	movff	tablat,postinc1
  7241  019812  0E00               	movlw	0
  7242  019814  6EE6               	movwf	postinc1,c
  7243  019816  EC95  F0C0         	call	___xxtofl	;wreg free
  7244                           
  7245                           ;stkvar	_soc @ sp[(-5)+0]
  7246  01981A  0EFB               	movlw	-5
  7247  01981C  0060  F007  FFE3   	movff	btemp,plusw1
  7248  019822  0EFC               	movlw	-4
  7249  019824  0060  F00B  FFE3   	movff	btemp+1,plusw1
  7250  01982A  0EFD               	movlw	-3
  7251  01982C  0060  F00F  FFE3   	movff	btemp+2,plusw1
  7252  019832  0EFE               	movlw	-2
  7253  019834  0060  F013  FFE3   	movff	btemp+3,plusw1
  7254  01983A                     l10529:
  7255                           
  7256                           ;bsoc.c: 168:  }
  7257                           ;stkvar	_slot @ sp[(-5)+4]
  7258  01983A  0EFF               	movlw	-1
  7259  01983C  2AE3               	incf	plusw1,f,c
  7260                           
  7261                           ;stkvar	_slot @ sp[(-5)+4]
  7262  01983E  0EFF               	movlw	-1
  7263  019840  006F FF8C  F001    	movff	plusw1,btemp
  7264  019846  0E19               	movlw	25
  7265  019848  6401               	cpfsgt	btemp^0,c
  7266  01984A  D7A5               	goto	l10525
  7267                           
  7268                           ;bsoc.c: 169:  return soc;
  7269                           ;stkvar	_soc @ sp[(-5)+0]
  7270  01984C  0EFB               	movlw	-5
  7271  01984E  006F FF8F FFE6     	movff	plusw1,postinc1
  7272  019854  006F FF8F FFE6     	movff	plusw1,postinc1
  7273  01985A  006F FF8F FFE6     	movff	plusw1,postinc1
  7274  019860  006F FF8F FFE6     	movff	plusw1,postinc1
  7275  019866  EC81  F0C6         	call	___fltol	;wreg free
  7276                           
  7277                           ; _Volts_to_SOC: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  7278  01986A  0EF7               	movlw	247
  7279  01986C  26E1               	addwf	fsr1l,f,c
  7280  01986E  0EFF               	movlw	255
  7281  019870  22E2               	addwfc	fsr1h,f,c
  7282  019872  0012               	return		;funcret
  7283  019874                     __end_of_Volts_to_SOC:
  7284                           	opt callstack 0
  7285                           
  7286 ;; *************** function _hid_display *****************
  7287 ;; Defined at:
  7288 ;;		line 17 in file "hid.c"
  7289 ;; Parameters:    Size  Location     Type
  7290 ;;  h               2  [STACK] PTR struct H_data
  7291 ;;		 -> H(7), 
  7292 ;; Auto vars:     Size  Location     Type
  7293 ;;		None
  7294 ;; Return value:  Size  Location     Type
  7295 ;;                  2  [STACK] PTR struct H_data
  7296 ;; Registers used:
  7297 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  7298 ;; Tracked objects:
  7299 ;;		On entry : 3F/39
  7300 ;;		On exit  : 0/0
  7301 ;;		Unchanged: 0/0
  7302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7307 ;;Total ram usage:        0 bytes
  7308 ;; Hardware stack levels used:    1
  7309 ;; Hardware stack levels required when called:   17
  7310 ;; This function calls:
  7311 ;;		_hid_input
  7312 ;; This function is called by:
  7313 ;;		_main
  7314 ;; This function uses a reentrant model
  7315 ;;
  7316                           
  7317                           	psect	text13
  7318  01832E                     __ptext13:
  7319                           	opt callstack 0
  7320  01832E                     _hid_display:
  7321                           	opt callstack 13
  7322                           
  7323                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  7324                           ;stkvar	_h @ sp[(0)+-2]
  7325                           
  7326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7327                           ;incstack = 0
  7328  01832E  0EFE               	movlw	-2
  7329  018330  006F FF8F FFE6     	movff	plusw1,postinc1
  7330  018336  006F FF8F FFE6     	movff	plusw1,postinc1
  7331  01833C  ECA9  F0D0         	call	_hid_input	;wreg free
  7332                           
  7333                           ;hid.c: 21:  switch (h->h_state) {
  7334  018340  D0C6               	goto	l12845
  7335  018342                     l12823:
  7336                           
  7337                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  7338                           ;stkvar	_h @ sp[(0)+-2]
  7339  018342  0EFE               	movlw	-2
  7340  018344  006F FF8C  F00B    	movff	plusw1,btemp+10
  7341  01834A  0EFF               	movlw	-1
  7342  01834C  006F FF8C  F00C    	movff	plusw1,btemp+11
  7343  018352  0E01               	movlw	1
  7344  018354  240B               	addwf	(btemp+10)^0,w,c
  7345  018356  6ED9               	movwf	fsr2l,c
  7346  018358  0E00               	movlw	0
  7347  01835A  200C               	addwfc	(btemp+11)^0,w,c
  7348  01835C  6EDA               	movwf	fsr2h,c
  7349  01835E  0E01               	movlw	1
  7350  018360  6EDF               	movwf	indf2,c
  7351                           
  7352                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  7353                           ;stkvar	_h @ sp[(0)+-2]
  7354  018362  0EFE               	movlw	-2
  7355  018364  006F FF8F FFD9     	movff	plusw1,fsr2l
  7356  01836A  0EFF               	movlw	-1
  7357  01836C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7358  018372  0E00               	movlw	0
  7359  018374  6EDF               	movwf	indf2,c
  7360                           
  7361                           ;hid.c: 25:   h->wait_enter = 1;
  7362                           ;stkvar	_h @ sp[(0)+-2]
  7363  018376  0EFE               	movlw	-2
  7364  018378  006F FF8C  F00B    	movff	plusw1,btemp+10
  7365  01837E  0EFF               	movlw	-1
  7366  018380  006F FF8C  F00C    	movff	plusw1,btemp+11
  7367  018386  0E04               	movlw	4
  7368  018388  240B               	addwf	(btemp+10)^0,w,c
  7369  01838A  6ED9               	movwf	fsr2l,c
  7370  01838C  0E00               	movlw	0
  7371  01838E  200C               	addwfc	(btemp+11)^0,w,c
  7372  018390  6EDA               	movwf	fsr2h,c
  7373  018392  0E01               	movlw	1
  7374  018394  6EDF               	movwf	indf2,c
  7375                           
  7376                           ;hid.c: 26:   h->wait_select = 1;
  7377                           ;stkvar	_h @ sp[(0)+-2]
  7378  018396  0EFE               	movlw	-2
  7379  018398  006F FF8C  F00B    	movff	plusw1,btemp+10
  7380  01839E  0EFF               	movlw	-1
  7381  0183A0  006F FF8C  F00C    	movff	plusw1,btemp+11
  7382  0183A6  0E02               	movlw	2
  7383  0183A8  240B               	addwf	(btemp+10)^0,w,c
  7384  0183AA  6ED9               	movwf	fsr2l,c
  7385  0183AC  0E00               	movlw	0
  7386  0183AE  200C               	addwfc	(btemp+11)^0,w,c
  7387  0183B0  6EDA               	movwf	fsr2h,c
  7388  0183B2  0E01               	movlw	1
  7389  0183B4  6EDF               	movwf	indf2,c
  7390                           
  7391                           ;hid.c: 27:   h->select_p = SW_OFF;
  7392                           ;stkvar	_h @ sp[(0)+-2]
  7393  0183B6  0EFE               	movlw	-2
  7394  0183B8  006F FF8C  F00B    	movff	plusw1,btemp+10
  7395  0183BE  0EFF               	movlw	-1
  7396  0183C0  006F FF8C  F00C    	movff	plusw1,btemp+11
  7397  0183C6  0E03               	movlw	3
  7398  0183C8  240B               	addwf	(btemp+10)^0,w,c
  7399  0183CA  6ED9               	movwf	fsr2l,c
  7400  0183CC  0E00               	movlw	0
  7401  0183CE  200C               	addwfc	(btemp+11)^0,w,c
  7402  0183D0  6EDA               	movwf	fsr2h,c
  7403  0183D2  0E00               	movlw	0
  7404  0183D4  6EDF               	movwf	indf2,c
  7405                           
  7406                           ;hid.c: 28:   h->enter_p = SW_OFF;
  7407                           ;stkvar	_h @ sp[(0)+-2]
  7408  0183D6  0EFE               	movlw	-2
  7409  0183D8  006F FF8C  F00B    	movff	plusw1,btemp+10
  7410  0183DE  0EFF               	movlw	-1
  7411  0183E0  006F FF8C  F00C    	movff	plusw1,btemp+11
  7412  0183E6  0E05               	movlw	5
  7413  0183E8  240B               	addwf	(btemp+10)^0,w,c
  7414  0183EA  6ED9               	movwf	fsr2l,c
  7415  0183EC  0E00               	movlw	0
  7416  0183EE  200C               	addwfc	(btemp+11)^0,w,c
  7417  0183F0  6EDA               	movwf	fsr2h,c
  7418  0183F2  0E00               	movlw	0
  7419  0183F4  D06A               	goto	L3
  7420  0183F6                     l12835:
  7421                           
  7422                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  7423                           ;stkvar	_h @ sp[(0)+-2]
  7424  0183F6  0EFE               	movlw	-2
  7425  0183F8  006F FF8C  F00B    	movff	plusw1,btemp+10
  7426  0183FE  0EFF               	movlw	-1
  7427  018400  006F FF8C  F00C    	movff	plusw1,btemp+11
  7428  018406  0E02               	movlw	2
  7429  018408  240B               	addwf	(btemp+10)^0,w,c
  7430  01840A  6ED9               	movwf	fsr2l,c
  7431  01840C  0E00               	movlw	0
  7432  01840E  200C               	addwfc	(btemp+11)^0,w,c
  7433  018410  6EDA               	movwf	fsr2h,c
  7434  018412  50DF               	movf	indf2,w,c
  7435  018414  A4D8               	btfss	status,2,c
  7436  018416  D076               	goto	l1976
  7437                           
  7438                           ;stkvar	_h @ sp[(0)+-2]
  7439  018418  0EFE               	movlw	-2
  7440  01841A  006F FF8C  F00B    	movff	plusw1,btemp+10
  7441  018420  0EFF               	movlw	-1
  7442  018422  006F FF8C  F00C    	movff	plusw1,btemp+11
  7443  018428  0E03               	movlw	3
  7444  01842A  240B               	addwf	(btemp+10)^0,w,c
  7445  01842C  6ED9               	movwf	fsr2l,c
  7446  01842E  0E00               	movlw	0
  7447  018430  200C               	addwfc	(btemp+11)^0,w,c
  7448  018432  6EDA               	movwf	fsr2h,c
  7449  018434  50DF               	movf	indf2,w,c
  7450  018436  A4D8               	btfss	status,2,c
  7451  018438  D065               	goto	l1976
  7452                           
  7453                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  7454                           ;stkvar	_h @ sp[(0)+-2]
  7455  01843A  0EFE               	movlw	-2
  7456  01843C  006F FF8C  F00B    	movff	plusw1,btemp+10
  7457  018442  0EFF               	movlw	-1
  7458  018444  006F FF8C  F00C    	movff	plusw1,btemp+11
  7459  01844A  0E06               	movlw	6
  7460  01844C  240B               	addwf	(btemp+10)^0,w,c
  7461  01844E  6ED9               	movwf	fsr2l,c
  7462  018450  0E00               	movlw	0
  7463  018452  200C               	addwfc	(btemp+11)^0,w,c
  7464  018454  6EDA               	movwf	fsr2h,c
  7465                           
  7466                           ;stkvar	_h @ sp[(0)+-2]
  7467  018456  0EFE               	movlw	-2
  7468  018458  006F FF8C  F00B    	movff	plusw1,btemp+10
  7469  01845E  0EFF               	movlw	-1
  7470  018460  006F FF8C  F00C    	movff	plusw1,btemp+11
  7471  018466  0E06               	movlw	6
  7472  018468  240B               	addwf	(btemp+10)^0,w,c
  7473  01846A  6EE9               	movwf	fsr0l,c
  7474  01846C  0E00               	movlw	0
  7475  01846E  200C               	addwfc	(btemp+11)^0,w,c
  7476  018470  6EEA               	movwf	fsr0h,c
  7477  018472  2AEF               	incf	indf0,f,c
  7478  018474  50EF               	movf	indf0,w,c
  7479  018476  0B03               	andlw	3
  7480  018478  6EDF               	movwf	indf2,c
  7481                           
  7482                           ;hid.c: 34:    h->hid_display = h->sequence;
  7483                           ;stkvar	_h @ sp[(0)+-2]
  7484  01847A  0EFE               	movlw	-2
  7485  01847C  006F FF8C  F00B    	movff	plusw1,btemp+10
  7486  018482  0EFF               	movlw	-1
  7487  018484  006F FF8C  F00C    	movff	plusw1,btemp+11
  7488  01848A  0E06               	movlw	6
  7489  01848C  240B               	addwf	(btemp+10)^0,w,c
  7490  01848E  6ED9               	movwf	fsr2l,c
  7491  018490  0E00               	movlw	0
  7492  018492  200C               	addwfc	(btemp+11)^0,w,c
  7493  018494  6EDA               	movwf	fsr2h,c
  7494                           
  7495                           ;stkvar	_h @ sp[(0)+-2]
  7496  018496  0EFE               	movlw	-2
  7497  018498  006F FF8F FFE9     	movff	plusw1,fsr0l
  7498  01849E  0EFF               	movlw	-1
  7499  0184A0  006F FF8F FFEA     	movff	plusw1,fsr0h
  7500  0184A6  006F FF7F FFEF     	movff	indf2,indf0
  7501                           
  7502                           ;hid.c: 35:    h->wait_select = 1;
  7503                           ;stkvar	_h @ sp[(0)+-2]
  7504  0184AC  0EFE               	movlw	-2
  7505  0184AE  006F FF8C  F00B    	movff	plusw1,btemp+10
  7506  0184B4  0EFF               	movlw	-1
  7507  0184B6  006F FF8C  F00C    	movff	plusw1,btemp+11
  7508  0184BC  0E02               	movlw	2
  7509  0184BE  240B               	addwf	(btemp+10)^0,w,c
  7510  0184C0  6ED9               	movwf	fsr2l,c
  7511  0184C2  0E00               	movlw	0
  7512  0184C4  200C               	addwfc	(btemp+11)^0,w,c
  7513  0184C6  6EDA               	movwf	fsr2h,c
  7514  0184C8  0E01               	movlw	1
  7515  0184CA                     L3:
  7516  0184CA  6EDF               	movwf	indf2,c
  7517  0184CC  D01B               	goto	l1976
  7518  0184CE                     l12845:
  7519                           
  7520                           ;stkvar	_h @ sp[(0)+-2]
  7521  0184CE  0EFE               	movlw	-2
  7522  0184D0  006F FF8C  F00B    	movff	plusw1,btemp+10
  7523  0184D6  0EFF               	movlw	-1
  7524  0184D8  006F FF8C  F00C    	movff	plusw1,btemp+11
  7525  0184DE  0E01               	movlw	1
  7526  0184E0  240B               	addwf	(btemp+10)^0,w,c
  7527  0184E2  6ED9               	movwf	fsr2l,c
  7528  0184E4  0E00               	movlw	0
  7529  0184E6  200C               	addwfc	(btemp+11)^0,w,c
  7530  0184E8  6EDA               	movwf	fsr2h,c
  7531  0184EA  50DF               	movf	indf2,w,c
  7532  0184EC  6E0B               	movwf	(btemp+10)^0,c
  7533  0184EE  6A0C               	clrf	(btemp+11)^0,c
  7534                           
  7535                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7536                           ; Switch size 1, requested type "simple"
  7537                           ; Number of cases is 1, Range of values is 0 to 0
  7538                           ; switch strategies available:
  7539                           ; Name         Instructions Cycles
  7540                           ; simple_byte            4     3 (average)
  7541                           ;	Chosen strategy is simple_byte
  7542  0184F0  500C               	movf	(btemp+11)^0,w,c
  7543  0184F2  0A00               	xorlw	0	; case 0
  7544  0184F4  A4D8               	btfss	status,2,c
  7545  0184F6  D77F               	goto	l12835
  7546                           
  7547                           ; Switch size 1, requested type "simple"
  7548                           ; Number of cases is 2, Range of values is 0 to 1
  7549                           ; switch strategies available:
  7550                           ; Name         Instructions Cycles
  7551                           ; simple_byte            7     4 (average)
  7552                           ;	Chosen strategy is simple_byte
  7553  0184F8  500B               	movf	(btemp+10)^0,w,c
  7554  0184FA  0A00               	xorlw	0	; case 0
  7555  0184FC  B4D8               	btfsc	status,2,c
  7556  0184FE  D721               	goto	l12823
  7557  018500  0A01               	xorlw	1	; case 1
  7558  018502  D779               	goto	l12835
  7559  018504                     l1976:
  7560                           
  7561                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  7562  018504  52E5               	movf	postdec1,f,c
  7563  018506  52E5               	movf	postdec1,f,c
  7564  018508  0012               	return		;funcret
  7565  01850A                     __end_of_hid_display:
  7566                           	opt callstack 0
  7567                           
  7568 ;; *************** function _hid_input *****************
  7569 ;; Defined at:
  7570 ;;		line 3 in file "hid.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;  h               2  [STACK] PTR struct H_data
  7573 ;;		 -> H(7), 
  7574 ;; Auto vars:     Size  Location     Type
  7575 ;;		None
  7576 ;; Return value:  Size  Location     Type
  7577 ;;                  2  [STACK] PTR struct H_data
  7578 ;; Registers used:
  7579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7580 ;; Tracked objects:
  7581 ;;		On entry : 0/39
  7582 ;;		On exit  : 0/0
  7583 ;;		Unchanged: 0/0
  7584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7589 ;;Total ram usage:        0 bytes
  7590 ;; Hardware stack levels used:    1
  7591 ;; Hardware stack levels required when called:   16
  7592 ;; This function calls:
  7593 ;;		_get_switch
  7594 ;; This function is called by:
  7595 ;;		_hid_display
  7596 ;; This function uses a reentrant model
  7597 ;;
  7598                           
  7599                           	psect	text14
  7600  01A152                     __ptext14:
  7601                           	opt callstack 0
  7602  01A152                     _hid_input:
  7603                           	opt callstack 13
  7604                           
  7605                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  7606                           
  7607                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7608                           ;incstack = 0
  7609  01A152  0E02               	movlw	2
  7610  01A154  6EE6               	movwf	postinc1,c
  7611  01A156  ECFB  F0DB         	call	_get_switch	;wreg free
  7612  01A15A  5001               	movf	btemp^0,w,c
  7613  01A15C  B4D8               	btfsc	status,2,c
  7614  01A15E  D02C               	goto	l12647
  7615                           
  7616                           ;hid.c: 6:   h->wait_select = 0;
  7617                           ;stkvar	_h @ sp[(0)+-2]
  7618  01A160  0EFE               	movlw	-2
  7619  01A162  006F FF8C  F00B    	movff	plusw1,btemp+10
  7620  01A168  0EFF               	movlw	-1
  7621  01A16A  006F FF8C  F00C    	movff	plusw1,btemp+11
  7622  01A170  0E02               	movlw	2
  7623  01A172  240B               	addwf	(btemp+10)^0,w,c
  7624  01A174  6ED9               	movwf	fsr2l,c
  7625  01A176  0E00               	movlw	0
  7626  01A178  200C               	addwfc	(btemp+11)^0,w,c
  7627  01A17A  6EDA               	movwf	fsr2h,c
  7628  01A17C  0E00               	movlw	0
  7629  01A17E  6EDF               	movwf	indf2,c
  7630                           
  7631                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  7632  01A180  0E02               	movlw	2
  7633  01A182  6EE6               	movwf	postinc1,c
  7634  01A184  ECFB  F0DB         	call	_get_switch	;wreg free
  7635  01A188  5001               	movf	btemp^0,w,c
  7636  01A18A  B4D8               	btfsc	status,2,c
  7637  01A18C  D003               	goto	u12250
  7638  01A18E  6A0C               	clrf	(btemp+11)^0,c
  7639  01A190  2A0C               	incf	(btemp+11)^0,f,c
  7640  01A192  D001               	goto	u12268
  7641  01A194                     u12250:
  7642  01A194  6A0C               	clrf	(btemp+11)^0,c
  7643  01A196                     u12268:
  7644                           
  7645                           ;stkvar	_h @ sp[(0)+-2]
  7646  01A196  0EFE               	movlw	-2
  7647  01A198  006F FF8C  F009    	movff	plusw1,btemp+8
  7648  01A19E  0EFF               	movlw	-1
  7649  01A1A0  006F FF8C  F00A    	movff	plusw1,btemp+9
  7650  01A1A6  0E03               	movlw	3
  7651  01A1A8  2409               	addwf	(btemp+8)^0,w,c
  7652  01A1AA  6ED9               	movwf	fsr2l,c
  7653  01A1AC  0E00               	movlw	0
  7654  01A1AE  200A               	addwfc	(btemp+9)^0,w,c
  7655  01A1B0  6EDA               	movwf	fsr2h,c
  7656  01A1B2  0060  F033  FFDF   	movff	btemp+11,indf2
  7657  01A1B8                     l12647:
  7658                           
  7659                           ;hid.c: 10:  if (get_switch(SENTER)) {
  7660  01A1B8  0E03               	movlw	3
  7661  01A1BA  6EE6               	movwf	postinc1,c
  7662  01A1BC  ECFB  F0DB         	call	_get_switch	;wreg free
  7663  01A1C0  5001               	movf	btemp^0,w,c
  7664  01A1C2  B4D8               	btfsc	status,2,c
  7665  01A1C4  D02C               	goto	l1967
  7666                           
  7667                           ;hid.c: 11:   h->wait_enter = 0;
  7668                           ;stkvar	_h @ sp[(0)+-2]
  7669  01A1C6  0EFE               	movlw	-2
  7670  01A1C8  006F FF8C  F00B    	movff	plusw1,btemp+10
  7671  01A1CE  0EFF               	movlw	-1
  7672  01A1D0  006F FF8C  F00C    	movff	plusw1,btemp+11
  7673  01A1D6  0E04               	movlw	4
  7674  01A1D8  240B               	addwf	(btemp+10)^0,w,c
  7675  01A1DA  6ED9               	movwf	fsr2l,c
  7676  01A1DC  0E00               	movlw	0
  7677  01A1DE  200C               	addwfc	(btemp+11)^0,w,c
  7678  01A1E0  6EDA               	movwf	fsr2h,c
  7679  01A1E2  0E00               	movlw	0
  7680  01A1E4  6EDF               	movwf	indf2,c
  7681                           
  7682                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  7683  01A1E6  0E03               	movlw	3
  7684  01A1E8  6EE6               	movwf	postinc1,c
  7685  01A1EA  ECFB  F0DB         	call	_get_switch	;wreg free
  7686  01A1EE  5001               	movf	btemp^0,w,c
  7687  01A1F0  B4D8               	btfsc	status,2,c
  7688  01A1F2  D003               	goto	u12280
  7689  01A1F4  6A0C               	clrf	(btemp+11)^0,c
  7690  01A1F6  2A0C               	incf	(btemp+11)^0,f,c
  7691  01A1F8  D001               	goto	u12298
  7692  01A1FA                     u12280:
  7693  01A1FA  6A0C               	clrf	(btemp+11)^0,c
  7694  01A1FC                     u12298:
  7695                           
  7696                           ;stkvar	_h @ sp[(0)+-2]
  7697  01A1FC  0EFE               	movlw	-2
  7698  01A1FE  006F FF8C  F009    	movff	plusw1,btemp+8
  7699  01A204  0EFF               	movlw	-1
  7700  01A206  006F FF8C  F00A    	movff	plusw1,btemp+9
  7701  01A20C  0E05               	movlw	5
  7702  01A20E  2409               	addwf	(btemp+8)^0,w,c
  7703  01A210  6ED9               	movwf	fsr2l,c
  7704  01A212  0E00               	movlw	0
  7705  01A214  200A               	addwfc	(btemp+9)^0,w,c
  7706  01A216  6EDA               	movwf	fsr2h,c
  7707  01A218  0060  F033  FFDF   	movff	btemp+11,indf2
  7708  01A21E                     l1967:
  7709                           
  7710                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
  7711  01A21E  52E5               	movf	postdec1,f,c
  7712  01A220  52E5               	movf	postdec1,f,c
  7713  01A222  0012               	return		;funcret
  7714  01A224                     __end_of_hid_input:
  7715                           	opt callstack 0
  7716                           
  7717 ;; *************** function _get_switch *****************
  7718 ;; Defined at:
  7719 ;;		line 18 in file "dio.c"
  7720 ;; Parameters:    Size  Location     Type
  7721 ;;  i               1  [STACK] unsigned char 
  7722 ;; Auto vars:     Size  Location     Type
  7723 ;;		None
  7724 ;; Return value:  Size  Location     Type
  7725 ;;                  1  [STACK] enum E17021
  7726 ;; Registers used:
  7727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7728 ;; Tracked objects:
  7729 ;;		On entry : 0/1
  7730 ;;		On exit  : 0/0
  7731 ;;		Unchanged: 0/0
  7732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7737 ;;Total ram usage:        0 bytes
  7738 ;; Hardware stack levels used:    1
  7739 ;; Hardware stack levels required when called:   15
  7740 ;; This function calls:
  7741 ;;		Nothing
  7742 ;; This function is called by:
  7743 ;;		_main
  7744 ;;		_hid_input
  7745 ;; This function uses a reentrant model
  7746 ;;
  7747                           
  7748                           	psect	text15
  7749  01B7F6                     __ptext15:
  7750                           	opt callstack 0
  7751  01B7F6                     _get_switch:
  7752                           	opt callstack 13
  7753                           
  7754                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  7755                           ;stkvar	_i @ sp[(0)+-1]
  7756                           
  7757                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7758                           ;incstack = 0
  7759  01B7F6  0EFF               	movlw	-1
  7760  01B7F8  006F FF8C  F001    	movff	plusw1,btemp
  7761  01B7FE  0E03               	movlw	3
  7762  01B800  6401               	cpfsgt	btemp^0,c
  7763  01B802  D002               	goto	l9845
  7764                           
  7765                           ;dio.c: 21:   return SW_OFF;
  7766  01B804  0E00               	movlw	0
  7767  01B806  D00A               	goto	L4
  7768  01B808                     l9845:
  7769                           
  7770                           ;dio.c: 23:  return S.button[i].sw;
  7771                           ;stkvar	_i @ sp[(0)+-1]
  7772  01B808  0EFF               	movlw	-1
  7773  01B80A  50E3               	movf	plusw1,w,c
  7774  01B80C  0D05               	mullw	5
  7775  01B80E  0EC6               	movlw	low _S
  7776  01B810  24F3               	addwf	243,w,c
  7777  01B812  6ED9               	movwf	fsr2l,c
  7778  01B814  0E01               	movlw	high _S
  7779  01B816  20F4               	addwfc	prodh,w,c
  7780  01B818  6EDA               	movwf	fsr2h,c
  7781  01B81A  50DF               	movf	indf2,w,c
  7782  01B81C                     L4:
  7783  01B81C  6E01               	movwf	btemp^0,c
  7784                           
  7785                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7786  01B81E  52E5               	movf	postdec1,f,c
  7787  01B820  0012               	return		;funcret
  7788  01B822                     __end_of_get_switch:
  7789                           	opt callstack 0
  7790                           
  7791 ;; *************** function _esr_check *****************
  7792 ;; Defined at:
  7793 ;;		line 178 in file "bsoc.c"
  7794 ;; Parameters:    Size  Location     Type
  7795 ;;  fsm             1  [STACK] unsigned char 
  7796 ;; Auto vars:     Size  Location     Type
  7797 ;;		None
  7798 ;; Return value:  Size  Location     Type
  7799 ;;                  4  [STACK] float 
  7800 ;; Registers used:
  7801 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7802 ;; Tracked objects:
  7803 ;;		On entry : 0/0
  7804 ;;		On exit  : 0/0
  7805 ;;		Unchanged: 0/0
  7806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7811 ;;Total ram usage:        0 bytes
  7812 ;; Hardware stack levels used:    1
  7813 ;; Hardware stack levels required when called:   18
  7814 ;; This function calls:
  7815 ;;		_StartTimer
  7816 ;;		_TimerDone
  7817 ;;		___fldiv
  7818 ;;		___flsub
  7819 ;;		_conv_raw_result
  7820 ;;		_fabsf
  7821 ;;		_set_load_relay_one
  7822 ;;		_set_load_relay_two
  7823 ;;		_update_adc_result
  7824 ;; This function is called by:
  7825 ;;		_main
  7826 ;; This function uses a reentrant model
  7827 ;;
  7828                           
  7829                           	psect	text16
  7830  016E0C                     __ptext16:
  7831                           	opt callstack 0
  7832  016E0C                     _esr_check:
  7833                           	opt callstack 12
  7834                           
  7835                           ;bsoc.c: 178: float esr_check(uint8_t fsm);bsoc.c: 179: {;bsoc.c: 180:  static uint8_t e
      +                          sr_state = 0;;bsoc.c: 182:  if (fsm) {
  7836                           ;stkvar	_fsm @ sp[(0)+-1]
  7837                           
  7838                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7839                           ;incstack = 0
  7840  016E0C  0EFF               	movlw	-1
  7841  016E0E  50E3               	movf	plusw1,w,c
  7842  016E10  B4D8               	btfsc	status,2,c
  7843  016E12  D146               	goto	l10843
  7844                           
  7845                           ;bsoc.c: 183:   esr_state = 0;
  7846  016E14  6A40               	clrf	esr_check@esr_state^0,c
  7847                           
  7848                           ;bsoc.c: 184:   return -10.0;
  7849  016E16  0E00               	movlw	0
  7850  016E18  6E01               	movwf	btemp^0,c
  7851  016E1A  0E00               	movlw	0
  7852  016E1C  6E02               	movwf	(btemp+1)^0,c
  7853  016E1E  0E20               	movlw	32
  7854  016E20  6E03               	movwf	(btemp+2)^0,c
  7855  016E22  0EC1               	movlw	193
  7856  016E24  D158               	goto	L5
  7857  016E26                     l10775:
  7858                           
  7859                           ;bsoc.c: 189:   StartTimer(TMR_ESR, 10000);
  7860  016E26  0E10               	movlw	16
  7861  016E28  6EE6               	movwf	postinc1,c
  7862  016E2A  0E27               	movlw	39
  7863  016E2C  6EE6               	movwf	postinc1,c
  7864  016E2E  0E0C               	movlw	12
  7865  016E30  6EE6               	movwf	postinc1,c
  7866  016E32  EC27  F0DA         	call	_StartTimer	;wreg free
  7867  016E36                     l10777:
  7868                           
  7869                           ;bsoc.c: 190:   esr_state++;
  7870  016E36  2A40               	incf	esr_check@esr_state^0,f,c
  7871                           
  7872                           ;bsoc.c: 191:   break;
  7873  016E38  D147               	goto	l10845
  7874  016E3A                     l10779:
  7875                           
  7876                           ;bsoc.c: 196:   set_load_relay_one(0);
  7877  016E3A  0E00               	movlw	0
  7878  016E3C  6EE6               	movwf	postinc1,c
  7879  016E3E  EC11  F0DF         	call	_set_load_relay_one	;wreg free
  7880                           
  7881                           ;bsoc.c: 197:   set_load_relay_two(0);
  7882  016E42  0E00               	movlw	0
  7883  016E44  6EE6               	movwf	postinc1,c
  7884  016E46  EC09  F0DF         	call	_set_load_relay_two	;wreg free
  7885                           
  7886                           ;bsoc.c: 198:   if (TimerDone(TMR_ESR)) {
  7887  016E4A  0E0C               	movlw	12
  7888  016E4C  6EE6               	movwf	postinc1,c
  7889  016E4E  ECA3  F0DC         	call	_TimerDone	;wreg free
  7890  016E52  5001               	movf	btemp^0,w,c
  7891  016E54  B4D8               	btfsc	status,2,c
  7892  016E56  D009               	goto	l10785
  7893                           
  7894                           ;bsoc.c: 199:    StartTimer(TMR_ESR, 10000);
  7895  016E58  0E10               	movlw	16
  7896  016E5A  6EE6               	movwf	postinc1,c
  7897  016E5C  0E27               	movlw	39
  7898  016E5E  6EE6               	movwf	postinc1,c
  7899  016E60  0E0C               	movlw	12
  7900  016E62  6EE6               	movwf	postinc1,c
  7901  016E64  EC27  F0DA         	call	_StartTimer	;wreg free
  7902                           
  7903                           ;bsoc.c: 200:   } else {
  7904  016E68  D006               	goto	l10789
  7905  016E6A                     l10785:
  7906                           
  7907                           ;bsoc.c: 201:    return -2.0;
  7908  016E6A  0E00               	movlw	0
  7909  016E6C  6E01               	movwf	btemp^0,c
  7910  016E6E  0E00               	movlw	0
  7911  016E70  6E02               	movwf	(btemp+1)^0,c
  7912  016E72  0E00               	movlw	0
  7913  016E74  D066               	goto	L7
  7914  016E76                     l10789:
  7915                           
  7916                           ;bsoc.c: 206:   update_adc_result();
  7917  016E76  ECC5  F0DA         	call	_update_adc_result	;wreg free
  7918                           
  7919                           ;bsoc.c: 207:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  7920  016E7A  0E00               	movlw	0
  7921  016E7C  6EE6               	movwf	postinc1,c
  7922  016E7E  0E04               	movlw	4
  7923  016E80  6EE6               	movwf	postinc1,c
  7924  016E82  EC0D  F0A8         	call	_conv_raw_result	;wreg free
  7925  016E86  0060  F004  F811   	movff	btemp,_C+274	;volatile
  7926  016E8C  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  7927  016E92  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  7928  016E98  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  7929  016E9E  D7CB               	goto	l10777
  7930  016EA0                     l10795:
  7931                           
  7932                           ;bsoc.c: 211:   set_load_relay_one(1);
  7933  016EA0  0E01               	movlw	1
  7934  016EA2  6EE6               	movwf	postinc1,c
  7935  016EA4  EC11  F0DF         	call	_set_load_relay_one	;wreg free
  7936                           
  7937                           ;bsoc.c: 212:   if (TimerDone(TMR_ESR)) {
  7938  016EA8  0E0C               	movlw	12
  7939  016EAA  6EE6               	movwf	postinc1,c
  7940  016EAC  ECA3  F0DC         	call	_TimerDone	;wreg free
  7941  016EB0  5001               	movf	btemp^0,w,c
  7942  016EB2  B4D8               	btfsc	status,2,c
  7943  016EB4  D009               	goto	l10801
  7944                           
  7945                           ;bsoc.c: 213:    StartTimer(TMR_ESR, 10000);
  7946  016EB6  0E10               	movlw	16
  7947  016EB8  6EE6               	movwf	postinc1,c
  7948  016EBA  0E27               	movlw	39
  7949  016EBC  6EE6               	movwf	postinc1,c
  7950  016EBE  0E0C               	movlw	12
  7951  016EC0  6EE6               	movwf	postinc1,c
  7952  016EC2  EC27  F0DA         	call	_StartTimer	;wreg free
  7953                           
  7954                           ;bsoc.c: 214:   } else {
  7955  016EC6  D006               	goto	l10805
  7956  016EC8                     l10801:
  7957                           
  7958                           ;bsoc.c: 215:    return -3.0;
  7959  016EC8  0E00               	movlw	0
  7960  016ECA  6E01               	movwf	btemp^0,c
  7961  016ECC  0E00               	movlw	0
  7962  016ECE  6E02               	movwf	(btemp+1)^0,c
  7963  016ED0  0E40               	movlw	64
  7964  016ED2  D037               	goto	L7
  7965  016ED4                     l10805:
  7966                           
  7967                           ;bsoc.c: 218:   update_adc_result();
  7968  016ED4  ECC5  F0DA         	call	_update_adc_result	;wreg free
  7969                           
  7970                           ;bsoc.c: 219:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  7971  016ED8  0E00               	movlw	0
  7972  016EDA  6EE6               	movwf	postinc1,c
  7973  016EDC  0E04               	movlw	4
  7974  016EDE  6EE6               	movwf	postinc1,c
  7975  016EE0  EC0D  F0A8         	call	_conv_raw_result	;wreg free
  7976  016EE4  0060  F004  F815   	movff	btemp,_C+278	;volatile
  7977  016EEA  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  7978  016EF0  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  7979  016EF6  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  7980                           
  7981                           ;bsoc.c: 220:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  7982  016EFC  0E00               	movlw	0
  7983  016EFE  6EE6               	movwf	postinc1,c
  7984  016F00  0E00               	movlw	0
  7985  016F02  6EE6               	movwf	postinc1,c
  7986  016F04  EC0D  F0A8         	call	_conv_raw_result	;wreg free
  7987  016F08  0060  F004  F809   	movff	btemp,_C+266	;volatile
  7988  016F0E  0060  F008  F80A   	movff	btemp+1,_C+267	;volatile
  7989  016F14  0060  F00C  F80B   	movff	btemp+2,_C+268	;volatile
  7990  016F1A  0060  F010  F80C   	movff	btemp+3,_C+269	;volatile
  7991  016F20  D78A               	goto	l10777
  7992  016F22                     l10813:
  7993                           
  7994                           ;bsoc.c: 224:   set_load_relay_two(1);
  7995  016F22  0E01               	movlw	1
  7996  016F24  6EE6               	movwf	postinc1,c
  7997  016F26  EC09  F0DF         	call	_set_load_relay_two	;wreg free
  7998                           
  7999                           ;bsoc.c: 225:   if (!TimerDone(TMR_ESR))
  8000  016F2A  0E0C               	movlw	12
  8001  016F2C  6EE6               	movwf	postinc1,c
  8002  016F2E  ECA3  F0DC         	call	_TimerDone	;wreg free
  8003  016F32  5001               	movf	btemp^0,w,c
  8004  016F34  A4D8               	btfss	status,2,c
  8005  016F36  D008               	goto	l10821
  8006                           
  8007                           ;bsoc.c: 226:    return -4.0;
  8008  016F38  0E00               	movlw	0
  8009  016F3A  6E01               	movwf	btemp^0,c
  8010  016F3C  0E00               	movlw	0
  8011  016F3E  6E02               	movwf	(btemp+1)^0,c
  8012  016F40  0E80               	movlw	128
  8013  016F42                     L7:
  8014  016F42  6E03               	movwf	(btemp+2)^0,c
  8015  016F44  0EC0               	movlw	192
  8016  016F46  D0C7               	goto	L5
  8017  016F48                     l10821:
  8018                           
  8019                           ;bsoc.c: 228:   update_adc_result();
  8020  016F48  ECC5  F0DA         	call	_update_adc_result	;wreg free
  8021                           
  8022                           ;bsoc.c: 229:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  8023  016F4C  0E00               	movlw	0
  8024  016F4E  6EE6               	movwf	postinc1,c
  8025  016F50  0E04               	movlw	4
  8026  016F52  6EE6               	movwf	postinc1,c
  8027  016F54  EC0D  F0A8         	call	_conv_raw_result	;wreg free
  8028  016F58  0060  F004  F819   	movff	btemp,_C+282	;volatile
  8029  016F5E  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  8030  016F64  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  8031  016F6A  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  8032                           
  8033                           ;bsoc.c: 230:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  8034  016F70  0E00               	movlw	0
  8035  016F72  6EE6               	movwf	postinc1,c
  8036  016F74  0E00               	movlw	0
  8037  016F76  6EE6               	movwf	postinc1,c
  8038  016F78  EC0D  F0A8         	call	_conv_raw_result	;wreg free
  8039  016F7C  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  8040  016F82  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  8041  016F88  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  8042  016F8E  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  8043                           
  8044                           ;bsoc.c: 232:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  8045  016F94  EE22  F00D         	lfsr	2,_C+270	;volatile
  8046  016F98  006F FF7B FFE6     	movff	postinc2,postinc1
  8047  016F9E  006F FF7B FFE6     	movff	postinc2,postinc1
  8048  016FA4  006F FF7B FFE6     	movff	postinc2,postinc1
  8049  016FAA  006F FF7B FFE6     	movff	postinc2,postinc1
  8050  016FB0  EE22  F009         	lfsr	2,_C+266	;volatile
  8051  016FB4  006F FF7B FFE6     	movff	postinc2,postinc1
  8052  016FBA  006F FF7B FFE6     	movff	postinc2,postinc1
  8053  016FC0  006F FF7B FFE6     	movff	postinc2,postinc1
  8054  016FC6  006F FF7B FFE6     	movff	postinc2,postinc1
  8055  016FCC  ECC1  F0D9         	call	___flsub	;wreg free
  8056  016FD0  0060  F007  FFE6   	movff	btemp,postinc1
  8057  016FD6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8058  016FDC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8059  016FE2  0060  F013  FFE6   	movff	btemp+3,postinc1
  8060  016FE8  EE22  F019         	lfsr	2,_C+282	;volatile
  8061  016FEC  006F FF7B FFE6     	movff	postinc2,postinc1
  8062  016FF2  006F FF7B FFE6     	movff	postinc2,postinc1
  8063  016FF8  006F FF7B FFE6     	movff	postinc2,postinc1
  8064  016FFE  006F FF7B FFE6     	movff	postinc2,postinc1
  8065  017004  EE22  F015         	lfsr	2,_C+278	;volatile
  8066  017008  006F FF7B FFE6     	movff	postinc2,postinc1
  8067  01700E  006F FF7B FFE6     	movff	postinc2,postinc1
  8068  017014  006F FF7B FFE6     	movff	postinc2,postinc1
  8069  01701A  006F FF7B FFE6     	movff	postinc2,postinc1
  8070  017020  ECC1  F0D9         	call	___flsub	;wreg free
  8071  017024  0060  F007  FFE6   	movff	btemp,postinc1
  8072  01702A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8073  017030  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8074  017036  0060  F013  FFE6   	movff	btemp+3,postinc1
  8075  01703C  EC50  F0A5         	call	___fldiv	;wreg free
  8076  017040  0060  F007  FFE6   	movff	btemp,postinc1
  8077  017046  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8078  01704C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8079  017052  0060  F013  FFE6   	movff	btemp+3,postinc1
  8080  017058  EC33  F0D2         	call	_fabsf	;wreg free
  8081  01705C  0060  F004  F787   	movff	btemp,_C+136	;volatile
  8082  017062  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  8083  017068  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  8084  01706E  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  8085                           
  8086                           ;bsoc.c: 233:   set_load_relay_one(0);
  8087  017074  0E00               	movlw	0
  8088  017076  6EE6               	movwf	postinc1,c
  8089  017078  EC11  F0DF         	call	_set_load_relay_one	;wreg free
  8090                           
  8091                           ;bsoc.c: 234:   set_load_relay_two(0);
  8092  01707C  0E00               	movlw	0
  8093  01707E  6EE6               	movwf	postinc1,c
  8094  017080  EC09  F0DF         	call	_set_load_relay_two	;wreg free
  8095                           
  8096                           ;bsoc.c: 235:   esr_state = 0;
  8097  017084  6A40               	clrf	esr_check@esr_state^0,c
  8098                           
  8099                           ;bsoc.c: 236:   return C.esr;
  8100  017086  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  8101  01708C  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  8102  017092  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  8103  017098  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  8104  01709E  D01C               	goto	l2084
  8105  0170A0                     l10843:
  8106  0170A0  5040               	movf	esr_check@esr_state^0,w,c
  8107  0170A2  6E0B               	movwf	(btemp+10)^0,c
  8108  0170A4  6A0C               	clrf	(btemp+11)^0,c
  8109                           
  8110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8111                           ; Switch size 1, requested type "simple"
  8112                           ; Number of cases is 1, Range of values is 0 to 0
  8113                           ; switch strategies available:
  8114                           ; Name         Instructions Cycles
  8115                           ; simple_byte            4     3 (average)
  8116                           ;	Chosen strategy is simple_byte
  8117  0170A6  500C               	movf	(btemp+11)^0,w,c
  8118  0170A8  0A00               	xorlw	0	; case 0
  8119  0170AA  A4D8               	btfss	status,2,c
  8120  0170AC  D00D               	goto	l10845
  8121                           
  8122                           ; Switch size 1, requested type "simple"
  8123                           ; Number of cases is 4, Range of values is 0 to 3
  8124                           ; switch strategies available:
  8125                           ; Name         Instructions Cycles
  8126                           ; simple_byte           13     7 (average)
  8127                           ;	Chosen strategy is simple_byte
  8128  0170AE  500B               	movf	(btemp+10)^0,w,c
  8129  0170B0  0A00               	xorlw	0	; case 0
  8130  0170B2  B4D8               	btfsc	status,2,c
  8131  0170B4  D6B8               	goto	l10775
  8132  0170B6  0A01               	xorlw	1	; case 1
  8133  0170B8  B4D8               	btfsc	status,2,c
  8134  0170BA  D6BF               	goto	l10779
  8135  0170BC  0A03               	xorlw	3	; case 2
  8136  0170BE  B4D8               	btfsc	status,2,c
  8137  0170C0  D6EF               	goto	l10795
  8138  0170C2  0A01               	xorlw	1	; case 3
  8139  0170C4  B4D8               	btfsc	status,2,c
  8140  0170C6  D72D               	goto	l10813
  8141  0170C8                     l10845:
  8142                           
  8143                           ;bsoc.c: 241:  return -1.0;
  8144  0170C8  0E00               	movlw	0
  8145  0170CA  6E01               	movwf	btemp^0,c
  8146  0170CC  0E00               	movlw	0
  8147  0170CE  6E02               	movwf	(btemp+1)^0,c
  8148  0170D0  0E80               	movlw	128
  8149  0170D2  6E03               	movwf	(btemp+2)^0,c
  8150  0170D4  0EBF               	movlw	191
  8151  0170D6                     L5:
  8152  0170D6  6E04               	movwf	(btemp+3)^0,c
  8153  0170D8                     l2084:
  8154                           
  8155                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  8156  0170D8  52E5               	movf	postdec1,f,c
  8157  0170DA  0012               	return		;funcret
  8158  0170DC                     __end_of_esr_check:
  8159                           	opt callstack 0
  8160                           
  8161 ;; *************** function _update_adc_result *****************
  8162 ;; Defined at:
  8163 ;;		line 71 in file "daq.c"
  8164 ;; Parameters:    Size  Location     Type
  8165 ;;		None
  8166 ;; Auto vars:     Size  Location     Type
  8167 ;;		None
  8168 ;; Return value:  Size  Location     Type
  8169 ;;                  1  [STACK] _Bool 
  8170 ;; Registers used:
  8171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  8172 ;; Tracked objects:
  8173 ;;		On entry : 0/0
  8174 ;;		On exit  : 0/0
  8175 ;;		Unchanged: 0/0
  8176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8181 ;;Total ram usage:        0 bytes
  8182 ;; Hardware stack levels used:    1
  8183 ;; Hardware stack levels required when called:   17
  8184 ;; This function calls:
  8185 ;;		_StartTimer
  8186 ;;		_TimerDone
  8187 ;;		_check_adc_scan
  8188 ;;		_clear_adc_scan
  8189 ;;		_start_adc_scan
  8190 ;; This function is called by:
  8191 ;;		_esr_check
  8192 ;; This function uses a reentrant model
  8193 ;;
  8194                           
  8195                           	psect	text17
  8196  01B58A                     __ptext17:
  8197                           	opt callstack 0
  8198  01B58A                     _update_adc_result:
  8199                           	opt callstack 12
  8200                           
  8201                           ;daq.c: 73:  if (R.done) {
  8202                           
  8203                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8204                           ;incstack = 0
  8205  01B58A  0100               	movlb	0	; () banked
  8206  01B58C  51E4               	movf	(_R+39)& (0+255),w,b	;volatile
  8207  01B58E  B4D8               	btfsc	status,2,c
  8208  01B590  0012               	return	
  8209                           
  8210                           ; BSR set to: 0
  8211                           ;daq.c: 74:   clear_adc_scan();
  8212  01B592  EC81  F0DF         	call	_clear_adc_scan	;wreg free
  8213                           
  8214                           ; BSR set to: 0
  8215                           ;daq.c: 75:   start_adc_scan();
  8216  01B596  EC06  F0D7         	call	_start_adc_scan	;wreg free
  8217                           
  8218                           ;daq.c: 76:   StartTimer(TMR_ADC, 200);
  8219  01B59A  0EC8               	movlw	200
  8220  01B59C  6EE6               	movwf	postinc1,c
  8221  01B59E  0E00               	movlw	0
  8222  01B5A0  6EE6               	movwf	postinc1,c
  8223  01B5A2  0E01               	movlw	1
  8224  01B5A4  6EE6               	movwf	postinc1,c
  8225  01B5A6  EC27  F0DA         	call	_StartTimer	;wreg free
  8226  01B5AA                     l10395:
  8227  01B5AA  0E01               	movlw	1
  8228  01B5AC  6EE6               	movwf	postinc1,c
  8229  01B5AE  ECA3  F0DC         	call	_TimerDone	;wreg free
  8230  01B5B2  5001               	movf	btemp^0,w,c
  8231  01B5B4  A4D8               	btfss	status,2,c
  8232  01B5B6  0012               	return	
  8233  01B5B8  EC6D  F0DF         	call	_check_adc_scan	;wreg free
  8234  01B5BC  5001               	movf	btemp^0,w,c
  8235  01B5BE  A4D8               	btfss	status,2,c
  8236  01B5C0  0012               	return	
  8237  01B5C2  D7F3               	goto	l10395
  8238  01B5C4                     __end_of_update_adc_result:
  8239                           	opt callstack 0
  8240                           
  8241 ;; *************** function _start_adc_scan *****************
  8242 ;; Defined at:
  8243 ;;		line 32 in file "daq.c"
  8244 ;; Parameters:    Size  Location     Type
  8245 ;;		None
  8246 ;; Auto vars:     Size  Location     Type
  8247 ;;		None
  8248 ;; Return value:  Size  Location     Type
  8249 ;;                  1  [STACK] _Bool 
  8250 ;; Registers used:
  8251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  8252 ;; Tracked objects:
  8253 ;;		On entry : 0/0
  8254 ;;		On exit  : 1/0
  8255 ;;		Unchanged: 0/0
  8256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8261 ;;Total ram usage:        0 bytes
  8262 ;; Hardware stack levels used:    1
  8263 ;; Hardware stack levels required when called:   16
  8264 ;; This function calls:
  8265 ;;		_ADCC_DischargeSampleCapacitor
  8266 ;;		_ADCC_SetADIInterruptHandler
  8267 ;;		_ADCC_SetADTIInterruptHandler
  8268 ;;		_ADCC_StartConversion
  8269 ;; This function is called by:
  8270 ;;		_main
  8271 ;;		_update_adc_result
  8272 ;; This function uses a reentrant model
  8273 ;;
  8274                           
  8275                           	psect	text18
  8276  01AE0C                     __ptext18:
  8277                           	opt callstack 0
  8278  01AE0C                     _start_adc_scan:
  8279                           	opt callstack 14
  8280                           
  8281                           ;daq.c: 34:  if (R.done)
  8282                           
  8283                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8284                           ;incstack = 0
  8285  01AE0C  0100               	movlb	0	; () banked
  8286  01AE0E  51E4               	movf	(_R+39)& (0+255),w,b	;volatile
  8287  01AE10  A4D8               	btfss	status,2,c
  8288  01AE12  0012               	return	
  8289                           
  8290                           ; BSR set to: 0
  8291                           ;daq.c: 37:  R.scan_index = 0;
  8292  01AE14  6BE1               	clrf	(_R+36)& (0+255),b	;volatile
  8293                           
  8294                           ; BSR set to: 0
  8295                           ;daq.c: 38:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  8296  01AE16  013A               	movlb	58	; () banked
  8297  01AE18  5140               	movf	64,w,b	;volatile
  8298  01AE1A  006E F940  F001    	movff	14928,btemp	;volatile
  8299  01AE20  6A02               	clrf	(btemp+1)^0,c
  8300  01AE22  0060  F004  F002   	movff	btemp,btemp+1
  8301  01AE28  6A01               	clrf	btemp^0,c
  8302  01AE2A  2601               	addwf	btemp^0,f,c
  8303  01AE2C  0E00               	movlw	0
  8304  01AE2E  2202               	addwfc	(btemp+1)^0,f,c
  8305  01AE30  0E77               	movlw	119
  8306  01AE32  1401               	andwf	btemp^0,w,c
  8307  01AE34  0100               	movlb	0	; () banked
  8308  01AE36  6FE2               	movwf	(_R+37)& (0+255),b	;volatile
  8309  01AE38  0E3C               	movlw	60
  8310  01AE3A  1402               	andwf	(btemp+1)^0,w,c
  8311  01AE3C  6FE3               	movwf	(_R+38)& (0+255),b	;volatile
  8312                           
  8313                           ; BSR set to: 0
  8314                           ;daq.c: 39:  ADCC_SetADIInterruptHandler(adc_int_handler);
  8315  01AE3E  0E2A               	movlw	low _adc_int_handler
  8316  01AE40  6EE6               	movwf	postinc1,c
  8317  01AE42  0EBF               	movlw	high _adc_int_handler
  8318  01AE44  6EE6               	movwf	postinc1,c
  8319  01AE46  0E01               	movlw	low (_adc_int_handler shr (0+16))
  8320  01AE48  6EE6               	movwf	postinc1,c
  8321  01AE4A  EC6B  F0DD         	call	_ADCC_SetADIInterruptHandler	;wreg free
  8322                           
  8323                           ;daq.c: 40:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  8324  01AE4E  0E00               	movlw	low _adc_int_t_handler
  8325  01AE50  6EE6               	movwf	postinc1,c
  8326  01AE52  0EAB               	movlw	high _adc_int_t_handler
  8327  01AE54  6EE6               	movwf	postinc1,c
  8328  01AE56  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  8329  01AE58  6EE6               	movwf	postinc1,c
  8330  01AE5A  EC57  F0DD         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  8331                           
  8332                           ;daq.c: 41:  ADCC_DischargeSampleCapacitor();
  8333  01AE5E  EC69  F0DF         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  8334                           
  8335                           ; BSR set to: 62
  8336                           ;daq.c: 42:  ADCC_StartConversion(R.scan_index & 0xf);
  8337  01AE62  0100               	movlb	0	; () banked
  8338  01AE64  51E1               	movf	(_R+36)& (0+255),w,b	;volatile
  8339  01AE66  0B0F               	andlw	15
  8340  01AE68  6EE6               	movwf	postinc1,c
  8341  01AE6A  EC00  F0DF         	call	_ADCC_StartConversion	;wreg free
  8342                           
  8343                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8344  01AE6E  0012               	return		;funcret
  8345  01AE70                     __end_of_start_adc_scan:
  8346                           	opt callstack 0
  8347                           
  8348 ;; *************** function _ADCC_StartConversion *****************
  8349 ;; Defined at:
  8350 ;;		line 128 in file "mcc_generated_files/adcc.c"
  8351 ;; Parameters:    Size  Location     Type
  8352 ;;  channel         1  [STACK] enum E16136
  8353 ;; Auto vars:     Size  Location     Type
  8354 ;;		None
  8355 ;; Return value:  Size  Location     Type
  8356 ;;                  1  [STACK] void 
  8357 ;; Registers used:
  8358 ;;		fsr1l, fsr1h
  8359 ;; Tracked objects:
  8360 ;;		On entry : 3F/0
  8361 ;;		On exit  : 3F/3E
  8362 ;;		Unchanged: 0/0
  8363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8368 ;;Total ram usage:        0 bytes
  8369 ;; Hardware stack levels used:    1
  8370 ;; Hardware stack levels required when called:   15
  8371 ;; This function calls:
  8372 ;;		Nothing
  8373 ;; This function is called by:
  8374 ;;		_start_adc_scan
  8375 ;;		_adc_int_t_handler
  8376 ;; This function uses a reentrant model
  8377 ;;
  8378                           
  8379                           	psect	text19
  8380  01BE00                     __ptext19:
  8381                           	opt callstack 0
  8382  01BE00                     _ADCC_StartConversion:
  8383                           	opt callstack 0
  8384                           
  8385                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  8386                           ;stkvar	_channel @ sp[(0)+-1]
  8387                           
  8388                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8389                           ;incstack = 0
  8390 ;; hardware stack exceeded
  8391  01BE00  0EFF               	movlw	-1
  8392  01BE02  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  8393                           
  8394                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  8395  01BE08  013E               	movlb	62	; () banked
  8396  01BE0A  8FF8               	bsf	248,7,b	;volatile
  8397                           
  8398                           ; BSR set to: 62
  8399                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  8400  01BE0C  81F8               	bsf	248,0,b	;volatile
  8401                           
  8402                           ; BSR set to: 62
  8403                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  8404  01BE0E  52E5               	movf	postdec1,f,c
  8405  01BE10  0012               	return		;funcret
  8406  01BE12                     __end_of_ADCC_StartConversion:
  8407                           	opt callstack 0
  8408                           
  8409 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  8410 ;; Defined at:
  8411 ;;		line 189 in file "mcc_generated_files/adcc.c"
  8412 ;; Parameters:    Size  Location     Type
  8413 ;;		None
  8414 ;; Auto vars:     Size  Location     Type
  8415 ;;		None
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  1  [STACK] void 
  8418 ;; Registers used:
  8419 ;;		wreg, status,2
  8420 ;; Tracked objects:
  8421 ;;		On entry : 0/0
  8422 ;;		On exit  : 3F/3E
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8429 ;;Total ram usage:        0 bytes
  8430 ;; Hardware stack levels used:    1
  8431 ;; Hardware stack levels required when called:   15
  8432 ;; This function calls:
  8433 ;;		Nothing
  8434 ;; This function is called by:
  8435 ;;		_start_adc_scan
  8436 ;;		_adc_int_t_handler
  8437 ;; This function uses a reentrant model
  8438 ;;
  8439                           
  8440                           	psect	text20
  8441  01BED2                     __ptext20:
  8442                           	opt callstack 0
  8443  01BED2                     _ADCC_DischargeSampleCapacitor:
  8444                           	opt callstack 0
  8445                           
  8446                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  8447                           
  8448                           ; BSR set to: 62
  8449                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8450                           ;incstack = 0
  8451 ;; hardware stack exceeded
  8452  01BED2  0E3B               	movlw	59
  8453  01BED4  013E               	movlb	62	; () banked
  8454  01BED6  6FF1               	movwf	241,b	;volatile
  8455                           
  8456                           ; BSR set to: 62
  8457                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  8458  01BED8  0012               	return		;funcret
  8459  01BEDA                     __end_of_ADCC_DischargeSampleCapacitor:
  8460                           	opt callstack 0
  8461                           
  8462 ;; *************** function _clear_adc_scan *****************
  8463 ;; Defined at:
  8464 ;;		line 63 in file "daq.c"
  8465 ;; Parameters:    Size  Location     Type
  8466 ;;		None
  8467 ;; Auto vars:     Size  Location     Type
  8468 ;;		None
  8469 ;; Return value:  Size  Location     Type
  8470 ;;                  1  [STACK] void 
  8471 ;; Registers used:
  8472 ;;		None
  8473 ;; Tracked objects:
  8474 ;;		On entry : 0/0
  8475 ;;		On exit  : 3F/0
  8476 ;;		Unchanged: 0/0
  8477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8482 ;;Total ram usage:        0 bytes
  8483 ;; Hardware stack levels used:    1
  8484 ;; Hardware stack levels required when called:   15
  8485 ;; This function calls:
  8486 ;;		Nothing
  8487 ;; This function is called by:
  8488 ;;		_main
  8489 ;;		_update_adc_result
  8490 ;; This function uses a reentrant model
  8491 ;;
  8492                           
  8493                           	psect	text21
  8494  01BF02                     __ptext21:
  8495                           	opt callstack 0
  8496  01BF02                     _clear_adc_scan:
  8497                           	opt callstack 13
  8498                           
  8499                           ;daq.c: 65:  R.done = 0;
  8500                           
  8501                           ; BSR set to: 62
  8502                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8503                           ;incstack = 0
  8504  01BF02  0100               	movlb	0	; () banked
  8505  01BF04  6BE4               	clrf	(_R+39)& (0+255),b	;volatile
  8506                           
  8507                           ; BSR set to: 0
  8508                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8509  01BF06  0012               	return		;funcret
  8510  01BF08                     __end_of_clear_adc_scan:
  8511                           	opt callstack 0
  8512                           
  8513 ;; *************** function _check_adc_scan *****************
  8514 ;; Defined at:
  8515 ;;		line 55 in file "daq.c"
  8516 ;; Parameters:    Size  Location     Type
  8517 ;;		None
  8518 ;; Auto vars:     Size  Location     Type
  8519 ;;		None
  8520 ;; Return value:  Size  Location     Type
  8521 ;;                  1  [STACK] _Bool 
  8522 ;; Registers used:
  8523 ;;		btemp
  8524 ;; Tracked objects:
  8525 ;;		On entry : 0/1
  8526 ;;		On exit  : 0/0
  8527 ;;		Unchanged: 0/0
  8528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8533 ;;Total ram usage:        0 bytes
  8534 ;; Hardware stack levels used:    1
  8535 ;; Hardware stack levels required when called:   15
  8536 ;; This function calls:
  8537 ;;		Nothing
  8538 ;; This function is called by:
  8539 ;;		_main
  8540 ;;		_update_adc_result
  8541 ;; This function uses a reentrant model
  8542 ;;
  8543                           
  8544                           	psect	text22
  8545  01BEDA                     __ptext22:
  8546                           	opt callstack 0
  8547  01BEDA                     _check_adc_scan:
  8548                           	opt callstack 13
  8549                           
  8550                           ;daq.c: 57:  return R.done;
  8551                           
  8552                           ; BSR set to: 0
  8553                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8554                           ;incstack = 0
  8555  01BEDA  0060  F390  F001   	movff	_R+39,btemp	;volatile
  8556                           
  8557                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8558  01BEE0  0012               	return		;funcret
  8559  01BEE2                     __end_of_check_adc_scan:
  8560                           	opt callstack 0
  8561                           
  8562 ;; *************** function _set_load_relay_two *****************
  8563 ;; Defined at:
  8564 ;;		line 129 in file "mbmc.c"
  8565 ;; Parameters:    Size  Location     Type
  8566 ;;  mode            1  [STACK] _Bool 
  8567 ;; Auto vars:     Size  Location     Type
  8568 ;;		None
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  1  [STACK] void 
  8571 ;; Registers used:
  8572 ;;		wreg, fsr1l, fsr1h
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8582 ;;Total ram usage:        0 bytes
  8583 ;; Hardware stack levels used:    1
  8584 ;; Hardware stack levels required when called:   15
  8585 ;; This function calls:
  8586 ;;		Nothing
  8587 ;; This function is called by:
  8588 ;;		_main
  8589 ;;		_esr_check
  8590 ;; This function uses a reentrant model
  8591 ;;
  8592                           
  8593                           	psect	text23
  8594  01BE12                     __ptext23:
  8595                           	opt callstack 0
  8596  01BE12                     _set_load_relay_two:
  8597                           	opt callstack 15
  8598                           
  8599                           ;mbmc.c: 129: void set_load_relay_two(_Bool mode);mbmc.c: 130: {;mbmc.c: 131:  LATDbits.
      +                          LATD5 = mode;
  8600                           ;stkvar	_mode @ sp[(0)+-1]
  8601                           
  8602                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8603                           ;incstack = 0
  8604  01BE12  0EFF               	movlw	-1
  8605  01BE14  B0E3               	btfsc	plusw1,0,c
  8606  01BE16  D002               	bra	u9475
  8607  01BE18  9ABD               	bcf	189,5,c	;volatile
  8608  01BE1A  D001               	bra	u9476
  8609  01BE1C                     u9475:
  8610  01BE1C  8ABD               	bsf	189,5,c	;volatile
  8611  01BE1E                     u9476:
  8612                           
  8613                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8614  01BE1E  52E5               	movf	postdec1,f,c
  8615  01BE20  0012               	return		;funcret
  8616  01BE22                     __end_of_set_load_relay_two:
  8617                           	opt callstack 0
  8618                           
  8619 ;; *************** function _set_load_relay_one *****************
  8620 ;; Defined at:
  8621 ;;		line 124 in file "mbmc.c"
  8622 ;; Parameters:    Size  Location     Type
  8623 ;;  mode            1  [STACK] _Bool 
  8624 ;; Auto vars:     Size  Location     Type
  8625 ;;		None
  8626 ;; Return value:  Size  Location     Type
  8627 ;;                  1  [STACK] void 
  8628 ;; Registers used:
  8629 ;;		wreg, fsr1l, fsr1h
  8630 ;; Tracked objects:
  8631 ;;		On entry : 0/0
  8632 ;;		On exit  : 0/0
  8633 ;;		Unchanged: 0/0
  8634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8639 ;;Total ram usage:        0 bytes
  8640 ;; Hardware stack levels used:    1
  8641 ;; Hardware stack levels required when called:   15
  8642 ;; This function calls:
  8643 ;;		Nothing
  8644 ;; This function is called by:
  8645 ;;		_main
  8646 ;;		_esr_check
  8647 ;; This function uses a reentrant model
  8648 ;;
  8649                           
  8650                           	psect	text24
  8651  01BE22                     __ptext24:
  8652                           	opt callstack 0
  8653  01BE22                     _set_load_relay_one:
  8654                           	opt callstack 15
  8655                           
  8656                           ;mbmc.c: 124: void set_load_relay_one(_Bool mode);mbmc.c: 125: {;mbmc.c: 126:  LATDbits.
      +                          LATD4 = mode;
  8657                           ;stkvar	_mode @ sp[(0)+-1]
  8658                           
  8659                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8660                           ;incstack = 0
  8661  01BE22  0EFF               	movlw	-1
  8662  01BE24  B0E3               	btfsc	plusw1,0,c
  8663  01BE26  D002               	bra	u9465
  8664  01BE28  98BD               	bcf	189,4,c	;volatile
  8665  01BE2A  D001               	bra	u9466
  8666  01BE2C                     u9465:
  8667  01BE2C  88BD               	bsf	189,4,c	;volatile
  8668  01BE2E                     u9466:
  8669                           
  8670                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8671  01BE2E  52E5               	movf	postdec1,f,c
  8672  01BE30  0012               	return		;funcret
  8673  01BE32                     __end_of_set_load_relay_one:
  8674                           	opt callstack 0
  8675                           
  8676 ;; *************** function _eaDogM_WriteCommand *****************
  8677 ;; Defined at:
  8678 ;;		line 175 in file "eadog.c"
  8679 ;; Parameters:    Size  Location     Type
  8680 ;;  cmd             1  [STACK] const unsigned char 
  8681 ;; Auto vars:     Size  Location     Type
  8682 ;;		None
  8683 ;; Return value:  Size  Location     Type
  8684 ;;                  1  [STACK] void 
  8685 ;; Registers used:
  8686 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8687 ;; Tracked objects:
  8688 ;;		On entry : 3F/3D
  8689 ;;		On exit  : 3F/0
  8690 ;;		Unchanged: 0/0
  8691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8696 ;;Total ram usage:        0 bytes
  8697 ;; Hardware stack levels used:    1
  8698 ;; Hardware stack levels required when called:   25
  8699 ;; This function calls:
  8700 ;;		_send_lcd_cmd_dma
  8701 ;; This function is called by:
  8702 ;;		_main
  8703 ;; This function uses a reentrant model
  8704 ;;
  8705                           
  8706                           	psect	text25
  8707  01BE52                     __ptext25:
  8708                           	opt callstack 0
  8709  01BE52                     _eaDogM_WriteCommand:
  8710                           	opt callstack 5
  8711                           
  8712                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  8713                           ;stkvar	_cmd @ sp[(0)+-1]
  8714                           
  8715                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8716                           ;incstack = 0
  8717  01BE52  0EFF               	movlw	-1
  8718  01BE54  50E3               	movf	plusw1,w,c
  8719  01BE56  6EE6               	movwf	postinc1,c
  8720  01BE58  EC24  F0D8         	call	_send_lcd_cmd_dma	;wreg free
  8721                           
  8722                           ; BSR set to: 0
  8723                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8724  01BE5C  52E5               	movf	postdec1,f,c
  8725  01BE5E  0012               	return		;funcret
  8726  01BE60                     __end_of_eaDogM_WriteCommand:
  8727                           	opt callstack 0
  8728                           
  8729 ;; *************** function _convert_adc_data *****************
  8730 ;; Defined at:
  8731 ;;		line 51 in file "mbmc.c"
  8732 ;; Parameters:    Size  Location     Type
  8733 ;;		None
  8734 ;; Auto vars:     Size  Location     Type
  8735 ;;  i               1  [STACK] unsigned char 
  8736 ;; Return value:  Size  Location     Type
  8737 ;;                  1  [STACK] void 
  8738 ;; Registers used:
  8739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8740 ;; Tracked objects:
  8741 ;;		On entry : 0/1
  8742 ;;		On exit  : 0/0
  8743 ;;		Unchanged: 0/0
  8744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8749 ;;Total ram usage:        0 bytes
  8750 ;; Hardware stack levels used:    1
  8751 ;; Hardware stack levels required when called:   18
  8752 ;; This function calls:
  8753 ;;		_conv_raw_result
  8754 ;;		_lp_filter
  8755 ;; This function is called by:
  8756 ;;		_main
  8757 ;; This function uses a reentrant model
  8758 ;;
  8759                           
  8760                           	psect	text26
  8761  01A3AE                     __ptext26:
  8762                           	opt callstack 0
  8763  01A3AE                     _convert_adc_data:
  8764                           	opt callstack 0
  8765                           
  8766                           ; BSR set to: 0
  8767                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8768  01A3AE  52E6               	movf	postinc1,f,c
  8769                           
  8770                           ;mbmc.c: 53:  uint8_t i = 0;
  8771                           ;stkvar	_i @ sp[(-1)+0]
  8772                           
  8773                           ;incstack = 0
  8774  01A3B0  0EFF               	movlw	-1
  8775  01A3B2  6AE3               	clrf	plusw1,c
  8776  01A3B4                     l10855:
  8777                           
  8778                           ;mbmc.c: 56:   if (V.calib) {
  8779  01A3B4  0101               	movlb	1	; () banked
  8780  01A3B6  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
  8781  01A3B8  B4D8               	btfsc	status,2,c
  8782  01A3BA  D01B               	goto	l10859
  8783                           
  8784                           ; BSR set to: 1
  8785                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  8786  01A3BC  0E01               	movlw	1
  8787  01A3BE  6EE6               	movwf	postinc1,c
  8788                           
  8789                           ;stkvar	_i @ sp[(-2)+0]
  8790  01A3C0  0EFE               	movlw	-2
  8791  01A3C2  50E3               	movf	plusw1,w,c
  8792  01A3C4  6EE6               	movwf	postinc1,c
  8793  01A3C6  0E01               	movlw	1
  8794  01A3C8  6EE6               	movwf	postinc1,c
  8795                           
  8796                           ;stkvar	_i @ sp[(-4)+0]
  8797  01A3CA  0EFC               	movlw	-4
  8798  01A3CC  50E3               	movf	plusw1,w,c
  8799  01A3CE  6EE6               	movwf	postinc1,c
  8800  01A3D0  EC0D  F0A8         	call	_conv_raw_result	;wreg free
  8801  01A3D4  0060  F007  FFE6   	movff	btemp,postinc1
  8802  01A3DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8803  01A3E0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8804  01A3E6  0060  F013  FFE6   	movff	btemp+3,postinc1
  8805  01A3EC  EC85  F0C2         	call	_lp_filter	;wreg free
  8806  01A3F0  D01A               	goto	L8
  8807  01A3F2                     l10859:
  8808                           
  8809                           ; BSR set to: 1
  8810                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  8811  01A3F2  0E00               	movlw	0
  8812  01A3F4  6EE6               	movwf	postinc1,c
  8813                           
  8814                           ;stkvar	_i @ sp[(-2)+0]
  8815  01A3F6  0EFE               	movlw	-2
  8816  01A3F8  50E3               	movf	plusw1,w,c
  8817  01A3FA  6EE6               	movwf	postinc1,c
  8818  01A3FC  0E00               	movlw	0
  8819  01A3FE  6EE6               	movwf	postinc1,c
  8820                           
  8821                           ;stkvar	_i @ sp[(-4)+0]
  8822  01A400  0EFC               	movlw	-4
  8823  01A402  50E3               	movf	plusw1,w,c
  8824  01A404  6EE6               	movwf	postinc1,c
  8825  01A406  EC0D  F0A8         	call	_conv_raw_result	;wreg free
  8826  01A40A  0060  F007  FFE6   	movff	btemp,postinc1
  8827  01A410  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8828  01A416  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8829  01A41C  0060  F013  FFE6   	movff	btemp+3,postinc1
  8830  01A422  EC85  F0C2         	call	_lp_filter	;wreg free
  8831  01A426                     L8:
  8832                           
  8833                           ;stkvar	_i @ sp[(-1)+0]
  8834  01A426  0EFF               	movlw	-1
  8835  01A428  50E3               	movf	plusw1,w,c
  8836  01A42A  0D04               	mullw	4
  8837  01A42C  0EFF               	movlw	low _C
  8838  01A42E  24F3               	addwf	243,w,c
  8839  01A430  6ED9               	movwf	fsr2l,c
  8840  01A432  0E06               	movlw	high _C
  8841  01A434  20F4               	addwfc	prodh,w,c
  8842  01A436  6EDA               	movwf	fsr2h,c
  8843  01A438  0060  F007  FFDE   	movff	btemp,postinc2
  8844  01A43E  0060  F00B  FFDE   	movff	btemp+1,postinc2
  8845  01A444  0060  F00F  FFDE   	movff	btemp+2,postinc2
  8846  01A44A  0060  F013  FFDE   	movff	btemp+3,postinc2
  8847                           
  8848                           ;mbmc.c: 61:  } while (++i < 16);
  8849                           ;stkvar	_i @ sp[(-1)+0]
  8850  01A450  0EFF               	movlw	-1
  8851  01A452  2AE3               	incf	plusw1,f,c
  8852  01A454  0EFF               	movlw	-1
  8853  01A456  006F FF8C  F001    	movff	plusw1,btemp
  8854  01A45C  0E0F               	movlw	15
  8855  01A45E  6401               	cpfsgt	btemp^0,c
  8856  01A460  D7A9               	goto	l10855
  8857                           
  8858                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  8859  01A462  52E5               	movf	postdec1,f,c
  8860  01A464  0012               	return		;funcret
  8861  01A466                     __end_of_convert_adc_data:
  8862                           	opt callstack 0
  8863                           
  8864 ;; *************** function _clear_hid_pflags *****************
  8865 ;; Defined at:
  8866 ;;		line 51 in file "hid.c"
  8867 ;; Parameters:    Size  Location     Type
  8868 ;;  h               2  [STACK] PTR struct H_data
  8869 ;;		 -> H(7), 
  8870 ;; Auto vars:     Size  Location     Type
  8871 ;;		None
  8872 ;; Return value:  Size  Location     Type
  8873 ;;                  1  [STACK] void 
  8874 ;; Registers used:
  8875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  8876 ;; Tracked objects:
  8877 ;;		On entry : 3E/0
  8878 ;;		On exit  : 0/0
  8879 ;;		Unchanged: 0/0
  8880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8885 ;;Total ram usage:        0 bytes
  8886 ;; Hardware stack levels used:    1
  8887 ;; Hardware stack levels required when called:   15
  8888 ;; This function calls:
  8889 ;;		Nothing
  8890 ;; This function is called by:
  8891 ;;		_main
  8892 ;; This function uses a reentrant model
  8893 ;;
  8894                           
  8895                           	psect	text27
  8896  01B2F6                     __ptext27:
  8897                           	opt callstack 0
  8898  01B2F6                     _clear_hid_pflags:
  8899                           	opt callstack 15
  8900                           
  8901                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  8902                           ;stkvar	_h @ sp[(0)+-2]
  8903                           
  8904                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8905                           ;incstack = 0
  8906  01B2F6  0EFE               	movlw	-2
  8907  01B2F8  006F FF8C  F00B    	movff	plusw1,btemp+10
  8908  01B2FE  0EFF               	movlw	-1
  8909  01B300  006F FF8C  F00C    	movff	plusw1,btemp+11
  8910  01B306  0E03               	movlw	3
  8911  01B308  240B               	addwf	(btemp+10)^0,w,c
  8912  01B30A  6ED9               	movwf	fsr2l,c
  8913  01B30C  0E00               	movlw	0
  8914  01B30E  200C               	addwfc	(btemp+11)^0,w,c
  8915  01B310  6EDA               	movwf	fsr2h,c
  8916  01B312  0E00               	movlw	0
  8917  01B314  6EDF               	movwf	indf2,c
  8918                           
  8919                           ;hid.c: 54:  h->enter_p = SW_OFF;
  8920                           ;stkvar	_h @ sp[(0)+-2]
  8921  01B316  0EFE               	movlw	-2
  8922  01B318  006F FF8C  F00B    	movff	plusw1,btemp+10
  8923  01B31E  0EFF               	movlw	-1
  8924  01B320  006F FF8C  F00C    	movff	plusw1,btemp+11
  8925  01B326  0E05               	movlw	5
  8926  01B328  240B               	addwf	(btemp+10)^0,w,c
  8927  01B32A  6ED9               	movwf	fsr2l,c
  8928  01B32C  0E00               	movlw	0
  8929  01B32E  200C               	addwfc	(btemp+11)^0,w,c
  8930  01B330  6EDA               	movwf	fsr2h,c
  8931  01B332  0E00               	movlw	0
  8932  01B334  6EDF               	movwf	indf2,c
  8933                           
  8934                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
  8935  01B336  52E5               	movf	postdec1,f,c
  8936  01B338  52E5               	movf	postdec1,f,c
  8937  01B33A  0012               	return		;funcret
  8938  01B33C                     __end_of_clear_hid_pflags:
  8939                           	opt callstack 0
  8940                           
  8941 ;; *************** function _check_help *****************
  8942 ;; Defined at:
  8943 ;;		line 40 in file "mconfig.c"
  8944 ;; Parameters:    Size  Location     Type
  8945 ;;  flipper         1  [STACK] const _Bool 
  8946 ;; Auto vars:     Size  Location     Type
  8947 ;;  estatus         1    0        _Bool 
  8948 ;; Return value:  Size  Location     Type
  8949 ;;                  1  [STACK] _Bool 
  8950 ;; Registers used:
  8951 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8952 ;; Tracked objects:
  8953 ;;		On entry : 3F/1
  8954 ;;		On exit  : 0/0
  8955 ;;		Unchanged: 0/0
  8956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8961 ;;Total ram usage:        0 bytes
  8962 ;; Hardware stack levels used:    1
  8963 ;; Hardware stack levels required when called:   27
  8964 ;; This function calls:
  8965 ;;		_StartTimer
  8966 ;;		_TimerDone
  8967 ;;		_display_help
  8968 ;;		_display_info
  8969 ;;		_get_vterm_ptr
  8970 ;;		_help_button
  8971 ;;		_mode_lamp_bright
  8972 ;;		_mode_lamp_dim
  8973 ;;		_set_display_info
  8974 ;;		_set_temp_display_help
  8975 ;;		_set_vterm
  8976 ;;		_sprintf
  8977 ;;		_update_lcd
  8978 ;;		_vterm_dump
  8979 ;; This function is called by:
  8980 ;;		_main
  8981 ;; This function uses a reentrant model
  8982 ;;
  8983                           
  8984                           	psect	text28
  8985  017F18                     __ptext28:
  8986                           	opt callstack 0
  8987  017F18                     _check_help:
  8988                           	opt callstack 3
  8989                           
  8990                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  8991                           
  8992                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8993                           ;incstack = 0
  8994  017F18  ECE2  F0DA         	call	_help_button	;wreg free
  8995  017F1C  5001               	movf	btemp^0,w,c
  8996  017F1E  B4D8               	btfsc	status,2,c
  8997  017F20  D0D0               	goto	l12903
  8998  017F22  EC71  F0DF         	call	_display_info	;wreg free
  8999  017F26  0401               	decf	btemp^0,w,c
  9000  017F28  B4D8               	btfsc	status,2,c
  9001  017F2A  D0CB               	goto	l12903
  9002                           
  9003                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  9004  017F2C  0EDC               	movlw	220
  9005  017F2E  6EE6               	movwf	postinc1,c
  9006  017F30  0E05               	movlw	5
  9007  017F32  6EE6               	movwf	postinc1,c
  9008  017F34  0E0B               	movlw	11
  9009  017F36  6EE6               	movwf	postinc1,c
  9010  017F38  EC27  F0DA         	call	_StartTimer	;wreg free
  9011                           
  9012                           ;mconfig.c: 48:   if (V.debug)
  9013  017F3C  0101               	movlb	1	; () banked
  9014  017F3E  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  9015                           
  9016                           ; BSR set to: 1
  9017                           ;mconfig.c: 49:    vterm_dump();
  9018  017F40  EC84  F0CA         	call	_vterm_dump	;wreg free
  9019                           
  9020                           ;mconfig.c: 51:   set_vterm(1);
  9021  017F44  0E01               	movlw	1
  9022  017F46  6EE6               	movwf	postinc1,c
  9023  017F48  EC67  F0DE         	call	_set_vterm	;wreg free
  9024                           
  9025                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  9026  017F4C  EC71  F0DF         	call	_display_info	;wreg free
  9027  017F50  5001               	movf	btemp^0,w,c
  9028  017F52  6EE6               	movwf	postinc1,c
  9029  017F54  EC19  F0DF         	call	_set_temp_display_help	;wreg free
  9030                           
  9031                           ; BSR set to: 1
  9032                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  9033  017F58  0E01               	movlw	1
  9034  017F5A  6EE6               	movwf	postinc1,c
  9035  017F5C  EC76  F0DE         	call	_set_display_info	;wreg free
  9036                           
  9037                           ;mconfig.c: 54:   if (flipper) {
  9038                           ;stkvar	_flipper @ sp[(0)+-1]
  9039  017F60  0EFF               	movlw	-1
  9040  017F62  50E3               	movf	plusw1,w,c
  9041  017F64  B4D8               	btfsc	status,2,c
  9042  017F66  D019               	goto	l12889
  9043                           
  9044                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  9045  017F68  0EB1               	movlw	low STR_46
  9046  017F6A  6EE6               	movwf	postinc1,c
  9047  017F6C  0EFF               	movlw	high STR_46
  9048  017F6E  6EE6               	movwf	postinc1,c
  9049  017F70  0E27               	movlw	low STR_48
  9050  017F72  6EE6               	movwf	postinc1,c
  9051  017F74  0EFE               	movlw	high STR_48
  9052  017F76  6EE6               	movwf	postinc1,c
  9053  017F78  0E01               	movlw	1
  9054  017F7A  6EE6               	movwf	postinc1,c
  9055  017F7C  0E00               	movlw	0
  9056  017F7E  6EE6               	movwf	postinc1,c
  9057  017F80  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  9058  017F84  0060  F007  FFE6   	movff	btemp,postinc1
  9059  017F8A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9060  017F90  0E06               	movlw	6
  9061  017F92  6EE6               	movwf	postinc1,c
  9062  017F94  ECD8  F0CD         	call	_sprintf	;wreg free
  9063                           
  9064                           ;mconfig.c: 56:   } else {
  9065  017F98  D018               	goto	l1674
  9066  017F9A                     l12889:
  9067                           
  9068                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  9069  017F9A  0EC7               	movlw	low STR_47
  9070  017F9C  6EE6               	movwf	postinc1,c
  9071  017F9E  0EFF               	movlw	high STR_47
  9072  017FA0  6EE6               	movwf	postinc1,c
  9073  017FA2  0E27               	movlw	low STR_48
  9074  017FA4  6EE6               	movwf	postinc1,c
  9075  017FA6  0EFE               	movlw	high STR_48
  9076  017FA8  6EE6               	movwf	postinc1,c
  9077  017FAA  0E01               	movlw	1
  9078  017FAC  6EE6               	movwf	postinc1,c
  9079  017FAE  0E00               	movlw	0
  9080  017FB0  6EE6               	movwf	postinc1,c
  9081  017FB2  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  9082  017FB6  0060  F007  FFE6   	movff	btemp,postinc1
  9083  017FBC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9084  017FC2  0E06               	movlw	6
  9085  017FC4  6EE6               	movwf	postinc1,c
  9086  017FC6  ECD8  F0CD         	call	_sprintf	;wreg free
  9087  017FCA                     l1674:
  9088                           
  9089                           ; BSR set to: 0
  9090                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  9091  017FCA  0101               	movlb	1	; () banked
  9092  017FCC  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  9093  017FCE  32E8               	rrcf	wreg,f,c
  9094  017FD0  32E8               	rrcf	wreg,f,c
  9095  017FD2  0B03               	andlw	3
  9096  017FD4  0D24               	mullw	36
  9097  017FD6  0E12               	movlw	18
  9098  017FD8  26F3               	addwf	243,f,c
  9099  017FDA  0E00               	movlw	0
  9100  017FDC  22F4               	addwfc	244,f,c
  9101  017FDE  0E37               	movlw	low _T
  9102  017FE0  6E0B               	movwf	(btemp+10)^0,c
  9103  017FE2  0EFB               	movlw	high _T
  9104  017FE4  6E0C               	movwf	(btemp+11)^0,c
  9105  017FE6  50F3               	movf	243,w,c
  9106  017FE8  260B               	addwf	(btemp+10)^0,f,c
  9107  017FEA  50F4               	movf	244,w,c
  9108  017FEC  220C               	addwfc	(btemp+11)^0,f,c
  9109  017FEE  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9110  017FF4  0060  F033  FFE6   	movff	btemp+11,postinc1
  9111  017FFA  0EBD               	movlw	low STR_50
  9112  017FFC  6EE6               	movwf	postinc1,c
  9113  017FFE  0EFF               	movlw	high STR_50
  9114  018000  6EE6               	movwf	postinc1,c
  9115  018002  0E01               	movlw	1
  9116  018004  6EE6               	movwf	postinc1,c
  9117  018006  0E01               	movlw	1
  9118  018008  6EE6               	movwf	postinc1,c
  9119  01800A  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  9120  01800E  0060  F007  FFE6   	movff	btemp,postinc1
  9121  018014  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9122  01801A  0E06               	movlw	6
  9123  01801C  6EE6               	movwf	postinc1,c
  9124  01801E  ECD8  F0CD         	call	_sprintf	;wreg free
  9125                           
  9126                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  9127  018022  0101               	movlb	1	; () banked
  9128  018024  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  9129  018026  32E8               	rrcf	wreg,f,c
  9130  018028  32E8               	rrcf	wreg,f,c
  9131  01802A  0B03               	andlw	3
  9132  01802C  0D24               	mullw	36
  9133  01802E  0E37               	movlw	low _T
  9134  018030  6E0B               	movwf	(btemp+10)^0,c
  9135  018032  0EFB               	movlw	high _T
  9136  018034  6E0C               	movwf	(btemp+11)^0,c
  9137  018036  50F3               	movf	243,w,c
  9138  018038  260B               	addwf	(btemp+10)^0,f,c
  9139  01803A  50F4               	movf	244,w,c
  9140  01803C  220C               	addwfc	(btemp+11)^0,f,c
  9141  01803E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9142  018044  0060  F033  FFE6   	movff	btemp+11,postinc1
  9143  01804A  0EBD               	movlw	low STR_50
  9144  01804C  6EE6               	movwf	postinc1,c
  9145  01804E  0EFF               	movlw	high STR_50
  9146  018050  6EE6               	movwf	postinc1,c
  9147  018052  0E01               	movlw	1
  9148  018054  6EE6               	movwf	postinc1,c
  9149  018056  0E02               	movlw	2
  9150  018058  6EE6               	movwf	postinc1,c
  9151  01805A  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  9152  01805E  0060  F007  FFE6   	movff	btemp,postinc1
  9153  018064  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9154  01806A  0E06               	movlw	6
  9155  01806C  6EE6               	movwf	postinc1,c
  9156  01806E  ECD8  F0CD         	call	_sprintf	;wreg free
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;mconfig.c: 61:   V.help_id++;
  9160  018072  EE20  F19B         	lfsr	2,_V+155	;volatile
  9161  018076  38DF               	swapf	223,w,c
  9162  018078  6E0C               	movwf	(btemp+11)^0,c
  9163  01807A  320C               	rrcf	(btemp+11)^0,f,c
  9164  01807C  300C               	rrcf	(btemp+11)^0,w,c
  9165  01807E  0B03               	andlw	3
  9166  018080  6E0C               	movwf	(btemp+11)^0,c
  9167  018082  2A0C               	incf	(btemp+11)^0,f,c
  9168  018084  3A0C               	swapf	(btemp+11)^0,f,c
  9169  018086  360C               	rlcf	(btemp+11)^0,f,c
  9170  018088  360C               	rlcf	(btemp+11)^0,f,c
  9171  01808A  50DF               	movf	223,w,c
  9172  01808C  180C               	xorwf	(btemp+11)^0,w,c
  9173  01808E  0B3F               	andlw	-193
  9174  018090  180C               	xorwf	(btemp+11)^0,w,c
  9175  018092  6EDF               	movwf	223,c
  9176                           
  9177                           ; BSR set to: 0
  9178                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  9179  018094  0EB8               	movlw	184
  9180  018096  6EE6               	movwf	postinc1,c
  9181  018098  0E0B               	movlw	11
  9182  01809A  6EE6               	movwf	postinc1,c
  9183  01809C  0E09               	movlw	9
  9184  01809E  6EE6               	movwf	postinc1,c
  9185  0180A0  EC27  F0DA         	call	_StartTimer	;wreg free
  9186                           
  9187                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  9188  0180A4  0EB8               	movlw	184
  9189  0180A6  6EE6               	movwf	postinc1,c
  9190  0180A8  0E0B               	movlw	11
  9191  0180AA  6EE6               	movwf	postinc1,c
  9192  0180AC  0E07               	movlw	7
  9193  0180AE  6EE6               	movwf	postinc1,c
  9194  0180B0  EC27  F0DA         	call	_StartTimer	;wreg free
  9195                           
  9196                           ;mconfig.c: 64:   mode_lamp_bright();
  9197  0180B4  EC30  F0DF         	call	_mode_lamp_bright	;wreg free
  9198                           
  9199                           ;mconfig.c: 65:   update_lcd(1);
  9200  0180B8  0E01               	movlw	1
  9201  0180BA  6EE6               	movwf	postinc1,c
  9202  0180BC  EC50  F0CD         	call	_update_lcd	;wreg free
  9203                           
  9204                           ;mconfig.c: 67:  } else {
  9205  0180C0  D032               	goto	l1675
  9206  0180C2                     l12903:
  9207                           
  9208                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  9209  0180C2  0E09               	movlw	9
  9210  0180C4  6EE6               	movwf	postinc1,c
  9211  0180C6  ECA3  F0DC         	call	_TimerDone	;wreg free
  9212  0180CA  5001               	movf	btemp^0,w,c
  9213  0180CC  B4D8               	btfsc	status,2,c
  9214  0180CE  D02B               	goto	l1675
  9215                           
  9216                           ;mconfig.c: 69:    set_vterm(0);
  9217  0180D0  0E00               	movlw	0
  9218  0180D2  6EE6               	movwf	postinc1,c
  9219  0180D4  EC67  F0DE         	call	_set_vterm	;wreg free
  9220                           
  9221                           ;mconfig.c: 70:    V.help = 0;
  9222  0180D8  0101               	movlb	1	; () banked
  9223  0180DA  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  9224                           
  9225                           ; BSR set to: 1
  9226                           ;mconfig.c: 71:    set_display_info(display_help());
  9227  0180DC  EC75  F0DF         	call	_display_help	;wreg free
  9228  0180E0  5001               	movf	btemp^0,w,c
  9229  0180E2  6EE6               	movwf	postinc1,c
  9230  0180E4  EC76  F0DE         	call	_set_display_info	;wreg free
  9231                           
  9232                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  9233  0180E8  0060  F657  FFE6   	movff	_V+149,postinc1
  9234  0180EE  0060  F65B  FFE6   	movff	_V+150,postinc1
  9235  0180F4  ECBD  F0DE         	call	_mode_lamp_dim	;wreg free
  9236                           
  9237                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  9238  0180F8  0E0B               	movlw	11
  9239  0180FA  6EE6               	movwf	postinc1,c
  9240  0180FC  ECA3  F0DC         	call	_TimerDone	;wreg free
  9241  018100  5001               	movf	btemp^0,w,c
  9242  018102  B4D8               	btfsc	status,2,c
  9243  018104  D010               	goto	l1675
  9244                           
  9245                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  9246  018106  0101               	movlb	1	; () banked
  9247  018108  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  9248  01810A  A4D8               	btfss	status,2,c
  9249  01810C  D002               	goto	u12530
  9250  01810E  0E01               	movlw	1
  9251  018110  D001               	goto	u12540
  9252  018112                     u12530:
  9253  018112  0E00               	movlw	0
  9254  018114                     u12540:
  9255  018114  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  9256                           
  9257                           ; BSR set to: 1
  9258                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  9259  018116  0EDC               	movlw	220
  9260  018118  6EE6               	movwf	postinc1,c
  9261  01811A  0E05               	movlw	5
  9262  01811C  6EE6               	movwf	postinc1,c
  9263  01811E  0E0B               	movlw	11
  9264  018120  6EE6               	movwf	postinc1,c
  9265  018122  EC27  F0DA         	call	_StartTimer	;wreg free
  9266  018126                     l1675:
  9267                           
  9268                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9269  018126  52E5               	movf	postdec1,f,c
  9270  018128  0012               	return		;funcret
  9271  01812A                     __end_of_check_help:
  9272                           	opt callstack 0
  9273                           
  9274 ;; *************** function _vterm_dump *****************
  9275 ;; Defined at:
  9276 ;;		line 121 in file "mconfig.c"
  9277 ;; Parameters:    Size  Location     Type
  9278 ;;		None
  9279 ;; Auto vars:     Size  Location     Type
  9280 ;;		None
  9281 ;; Return value:  Size  Location     Type
  9282 ;;                  1  [STACK] void 
  9283 ;; Registers used:
  9284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9285 ;; Tracked objects:
  9286 ;;		On entry : 3F/1
  9287 ;;		On exit  : 0/0
  9288 ;;		Unchanged: 0/0
  9289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9294 ;;Total ram usage:        0 bytes
  9295 ;; Hardware stack levels used:    1
  9296 ;; Hardware stack levels required when called:   26
  9297 ;; This function calls:
  9298 ;;		_WaitMs
  9299 ;;		_eaDogM_WriteStringAtPos
  9300 ;;		_get_vterm_ptr
  9301 ;;		_sprintf
  9302 ;;		_wait_lcd_done
  9303 ;; This function is called by:
  9304 ;;		_check_help
  9305 ;; This function uses a reentrant model
  9306 ;;
  9307                           
  9308                           	psect	text29
  9309  019508                     __ptext29:
  9310                           	opt callstack 0
  9311  019508                     _vterm_dump:
  9312                           	opt callstack 3
  9313                           
  9314                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  9315                           
  9316                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9317                           ;incstack = 0
  9318  019508  0E01               	movlw	1
  9319  01950A  6EE6               	movwf	postinc1,c
  9320  01950C  0E00               	movlw	0
  9321  01950E  6EE6               	movwf	postinc1,c
  9322  019510  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  9323  019514  0060  F007  FFE6   	movff	btemp,postinc1
  9324  01951A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9325  019520  0E00               	movlw	0
  9326  019522  6EE6               	movwf	postinc1,c
  9327  019524  0E00               	movlw	0
  9328  019526  6EE6               	movwf	postinc1,c
  9329  019528  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  9330  01952C  0060  F007  FFE6   	movff	btemp,postinc1
  9331  019532  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9332  019538  0E93               	movlw	low STR_52
  9333  01953A  6EE6               	movwf	postinc1,c
  9334  01953C  0EFF               	movlw	high STR_52
  9335  01953E  6EE6               	movwf	postinc1,c
  9336  019540  0E01               	movlw	low (_V+1)
  9337  019542  6EE6               	movwf	postinc1,c
  9338  019544  0E01               	movlw	high (_V+1)
  9339  019546  6EE6               	movwf	postinc1,c
  9340  019548  0E08               	movlw	8
  9341  01954A  6EE6               	movwf	postinc1,c
  9342  01954C  ECD8  F0CD         	call	_sprintf	;wreg free
  9343                           
  9344                           ; BSR set to: 0
  9345                           ;mconfig.c: 124:  wait_lcd_done();
  9346  019550  EC94  F0DE         	call	_wait_lcd_done	;wreg free
  9347                           
  9348                           ; BSR set to: 0
  9349                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  9350  019554  0E01               	movlw	low (_V+1)
  9351  019556  6EE6               	movwf	postinc1,c
  9352  019558  0E01               	movlw	high (_V+1)
  9353  01955A  6EE6               	movwf	postinc1,c
  9354  01955C  0E00               	movlw	0
  9355  01955E  6EE6               	movwf	postinc1,c
  9356  019560  0E00               	movlw	0
  9357  019562  6EE6               	movwf	postinc1,c
  9358  019564  EC35  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
  9359                           
  9360                           ; BSR set to: 59
  9361                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  9362  019568  0E01               	movlw	1
  9363  01956A  6EE6               	movwf	postinc1,c
  9364  01956C  0E01               	movlw	1
  9365  01956E  6EE6               	movwf	postinc1,c
  9366  019570  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  9367  019574  0060  F007  FFE6   	movff	btemp,postinc1
  9368  01957A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9369  019580  0E00               	movlw	0
  9370  019582  6EE6               	movwf	postinc1,c
  9371  019584  0E01               	movlw	1
  9372  019586  6EE6               	movwf	postinc1,c
  9373  019588  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  9374  01958C  0060  F007  FFE6   	movff	btemp,postinc1
  9375  019592  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9376  019598  0E93               	movlw	low STR_52
  9377  01959A  6EE6               	movwf	postinc1,c
  9378  01959C  0EFF               	movlw	high STR_52
  9379  01959E  6EE6               	movwf	postinc1,c
  9380  0195A0  0E01               	movlw	low (_V+1)
  9381  0195A2  6EE6               	movwf	postinc1,c
  9382  0195A4  0E01               	movlw	high (_V+1)
  9383  0195A6  6EE6               	movwf	postinc1,c
  9384  0195A8  0E08               	movlw	8
  9385  0195AA  6EE6               	movwf	postinc1,c
  9386  0195AC  ECD8  F0CD         	call	_sprintf	;wreg free
  9387                           
  9388                           ; BSR set to: 0
  9389                           ;mconfig.c: 127:  wait_lcd_done();
  9390  0195B0  EC94  F0DE         	call	_wait_lcd_done	;wreg free
  9391                           
  9392                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  9393  0195B4  0E01               	movlw	low (_V+1)
  9394  0195B6  6EE6               	movwf	postinc1,c
  9395  0195B8  0E01               	movlw	high (_V+1)
  9396  0195BA  6EE6               	movwf	postinc1,c
  9397  0195BC  0E00               	movlw	0
  9398  0195BE  6EE6               	movwf	postinc1,c
  9399  0195C0  0E01               	movlw	1
  9400  0195C2  6EE6               	movwf	postinc1,c
  9401  0195C4  EC35  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
  9402                           
  9403                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  9404  0195C8  0E01               	movlw	1
  9405  0195CA  6EE6               	movwf	postinc1,c
  9406  0195CC  0E02               	movlw	2
  9407  0195CE  6EE6               	movwf	postinc1,c
  9408  0195D0  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  9409  0195D4  0060  F007  FFE6   	movff	btemp,postinc1
  9410  0195DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9411  0195E0  0E00               	movlw	0
  9412  0195E2  6EE6               	movwf	postinc1,c
  9413  0195E4  0E02               	movlw	2
  9414  0195E6  6EE6               	movwf	postinc1,c
  9415  0195E8  ECE4  F0DB         	call	_get_vterm_ptr	;wreg free
  9416  0195EC  0060  F007  FFE6   	movff	btemp,postinc1
  9417  0195F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9418  0195F8  0E93               	movlw	low STR_52
  9419  0195FA  6EE6               	movwf	postinc1,c
  9420  0195FC  0EFF               	movlw	high STR_52
  9421  0195FE  6EE6               	movwf	postinc1,c
  9422  019600  0E01               	movlw	low (_V+1)
  9423  019602  6EE6               	movwf	postinc1,c
  9424  019604  0E01               	movlw	high (_V+1)
  9425  019606  6EE6               	movwf	postinc1,c
  9426  019608  0E08               	movlw	8
  9427  01960A  6EE6               	movwf	postinc1,c
  9428  01960C  ECD8  F0CD         	call	_sprintf	;wreg free
  9429                           
  9430                           ; BSR set to: 0
  9431                           ;mconfig.c: 130:  wait_lcd_done();
  9432  019610  EC94  F0DE         	call	_wait_lcd_done	;wreg free
  9433                           
  9434                           ; BSR set to: 0
  9435                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  9436  019614  0E01               	movlw	low (_V+1)
  9437  019616  6EE6               	movwf	postinc1,c
  9438  019618  0E01               	movlw	high (_V+1)
  9439  01961A  6EE6               	movwf	postinc1,c
  9440  01961C  0E00               	movlw	0
  9441  01961E  6EE6               	movwf	postinc1,c
  9442  019620  0E02               	movlw	2
  9443  019622  6EE6               	movwf	postinc1,c
  9444  019624  EC35  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
  9445                           
  9446                           ; BSR set to: 59
  9447                           ;mconfig.c: 132:  WaitMs(3000);
  9448  019628  0EB8               	movlw	184
  9449  01962A  6EE6               	movwf	postinc1,c
  9450  01962C  0E0B               	movlw	11
  9451  01962E  6EE6               	movwf	postinc1,c
  9452  019630  EC1A  F0DB         	call	_WaitMs	;wreg free
  9453                           
  9454                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  9455  019634  0012               	return		;funcret
  9456  019636                     __end_of_vterm_dump:
  9457                           	opt callstack 0
  9458                           
  9459 ;; *************** function _sprintf *****************
  9460 ;; Defined at:
  9461 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  9462 ;; Parameters:    Size  Location     Type
  9463 ;;  s               2  [STACK] PTR unsigned char 
  9464 ;;		 -> D.lcd(480), D(482), port_data(512), V(191), 
  9465 ;;  fmt             2  [STACK] PTR const unsigned char 
  9466 ;;		 -> STR_65(103), STR_63(3), STR_62(3), STR_61(19), 
  9467 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
  9468 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
  9469 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
  9470 ;;		 -> STR_48(19), STR_42(17), STR_41(16), STR_40(16), 
  9471 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
  9472 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
  9473 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  9474 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
  9475 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
  9476 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
  9477 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
  9478 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
  9479 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  9480 ;;		 -> STR_2(15), STR_1(17), 
  9481 ;; Auto vars:     Size  Location     Type
  9482 ;;  f               6  [STACK] struct _IO_FILE
  9483 ;;  ap              2  [STACK] PTR void [1]
  9484 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9485 ;;  ret             2    0        int 
  9486 ;; Return value:  Size  Location     Type
  9487 ;;                  2  [STACK] int 
  9488 ;; Registers used:
  9489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9490 ;; Tracked objects:
  9491 ;;		On entry : 0/2
  9492 ;;		On exit  : 3F/0
  9493 ;;		Unchanged: 0/0
  9494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9499 ;;Total ram usage:        0 bytes
  9500 ;; Hardware stack levels used:    1
  9501 ;; Hardware stack levels required when called:   23
  9502 ;; This function calls:
  9503 ;;		_vfprintf
  9504 ;; This function is called by:
  9505 ;;		_main
  9506 ;;		_check_help
  9507 ;;		_vterm_dump
  9508 ;;		_calc_bsoc
  9509 ;; This function uses a reentrant model
  9510 ;;
  9511                           
  9512                           	psect	text30
  9513  019BB0                     __ptext30:
  9514                           	opt callstack 0
  9515  019BB0                     _sprintf:
  9516                           	opt callstack 0
  9517                           
  9518                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 74, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9519  019BB0  0E08               	movlw	8
  9520  019BB2  26E1               	addwf	fsr1l,f,c
  9521  019BB4  0E00               	movlw	0
  9522  019BB6  22E2               	addwfc	fsr1h,f,c
  9523                           
  9524                           ;incstack = 0
  9525 ;; hardware stack exceeded
  9526  019BB8  0EFE               	movlw	254
  9527  019BBA  6E0B               	movwf	(btemp+10)^0,c
  9528  019BBC  0EFF               	movlw	255
  9529  019BBE  6E0C               	movwf	(btemp+11)^0,c
  9530                           
  9531                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  9532  019BC0  0EF5               	movlw	245
  9533  019BC2  24E1               	addwf	fsr1l,w,c
  9534  019BC4  6E09               	movwf	(btemp+8)^0,c
  9535  019BC6  0EFF               	movlw	255
  9536  019BC8  20E2               	addwfc	fsr1h,w,c
  9537  019BCA  6E0A               	movwf	(btemp+9)^0,c
  9538  019BCC  500B               	movf	(btemp+10)^0,w,c
  9539  019BCE  2609               	addwf	(btemp+8)^0,f,c
  9540  019BD0  500C               	movf	(btemp+11)^0,w,c
  9541  019BD2  220A               	addwfc	(btemp+9)^0,f,c
  9542                           
  9543                           ;stkvar	_ap @ sp[(-8)+6]
  9544  019BD4  0EFF               	movlw	-1
  9545  019BD6  0060  F02B  FFE3   	movff	btemp+9,plusw1
  9546  019BDC  0EFE               	movlw	-2
  9547  019BDE  0060  F027  FFE3   	movff	btemp+8,plusw1
  9548                           
  9549                           ;stkvar	_s @ sp[(-8)+-3]
  9550  019BE4  0EF5               	movlw	-11
  9551  019BE6  006F FF8C  F00B    	movff	plusw1,btemp+10
  9552  019BEC  0EF6               	movlw	-10
  9553  019BEE  006F FF8C  F00C    	movff	plusw1,btemp+11
  9554                           
  9555                           ;stkvar	_f @ sp[(-8)+0]
  9556  019BF4  0EF9               	movlw	-7
  9557  019BF6  0060  F033  FFE3   	movff	btemp+11,plusw1
  9558  019BFC  0EF8               	movlw	-8
  9559  019BFE  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9560                           
  9561                           ;stkvar	_f @ sp[(-8)+0]
  9562  019C04  0EFA               	movlw	250
  9563  019C06  24E1               	addwf	fsr1l,w,c
  9564  019C08  6ED9               	movwf	fsr2l,c
  9565  019C0A  0EFF               	movlw	255
  9566  019C0C  20E2               	addwfc	fsr1h,w,c
  9567  019C0E  6EDA               	movwf	fsr2h,c
  9568  019C10  0E00               	movlw	0
  9569  019C12  6EDE               	movwf	postinc2,c
  9570  019C14  0E00               	movlw	0
  9571  019C16  6EDD               	movwf	postdec2,c
  9572                           
  9573                           ;stkvar	_f @ sp[(-8)+0]
  9574  019C18  0EFC               	movlw	252
  9575  019C1A  24E1               	addwf	fsr1l,w,c
  9576  019C1C  6ED9               	movwf	fsr2l,c
  9577  019C1E  0EFF               	movlw	255
  9578  019C20  20E2               	addwfc	fsr1h,w,c
  9579  019C22  6EDA               	movwf	fsr2h,c
  9580  019C24  0E00               	movlw	0
  9581  019C26  6EDE               	movwf	postinc2,c
  9582  019C28  0E00               	movlw	0
  9583  019C2A  6EDD               	movwf	postdec2,c
  9584                           
  9585                           ;stkvar	_ap @ sp[(-8)+6]
  9586  019C2C  0EFE               	movlw	254
  9587  019C2E  24E1               	addwf	fsr1l,w,c
  9588  019C30  6E01               	movwf	btemp^0,c
  9589  019C32  0EFF               	movlw	255
  9590  019C34  20E2               	addwfc	fsr1h,w,c
  9591  019C36  6E02               	movwf	(btemp+1)^0,c
  9592  019C38  0060  F007  FFE6   	movff	btemp,postinc1
  9593  019C3E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9594                           
  9595                           ;stkvar	_fmt @ sp[(-10)+-5]
  9596  019C44  0EF1               	movlw	-15
  9597  019C46  006F FF8F FFE6     	movff	plusw1,postinc1
  9598  019C4C  006F FF8F FFE6     	movff	plusw1,postinc1
  9599                           
  9600                           ;stkvar	_f @ sp[(-12)+0]
  9601  019C52  0EF4               	movlw	244
  9602  019C54  24E1               	addwf	fsr1l,w,c
  9603  019C56  6E01               	movwf	btemp^0,c
  9604  019C58  0EFF               	movlw	255
  9605  019C5A  20E2               	addwfc	fsr1h,w,c
  9606  019C5C  6E02               	movwf	(btemp+1)^0,c
  9607  019C5E  0060  F007  FFE6   	movff	btemp,postinc1
  9608  019C64  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9609  019C6A  EC8A  F0D2         	call	_vfprintf	;wreg free
  9610                           
  9611                           ; BSR set to: 0
  9612                           ;stkvar	_f @ sp[(-8)+0]
  9613  019C6E  0EFA               	movlw	250
  9614  019C70  24E1               	addwf	fsr1l,w,c
  9615  019C72  6ED9               	movwf	fsr2l,c
  9616  019C74  0EFF               	movlw	255
  9617  019C76  20E2               	addwfc	fsr1h,w,c
  9618  019C78  6EDA               	movwf	fsr2h,c
  9619  019C7A  006F FF78  F00B    	movff	postinc2,btemp+10
  9620  019C80  006F FF74  F00C    	movff	postdec2,btemp+11
  9621                           
  9622                           ;stkvar	_s @ sp[(-8)+-3]
  9623  019C86  0EF5               	movlw	-11
  9624  019C88  006F FF8C  F009    	movff	plusw1,btemp+8
  9625  019C8E  0EF6               	movlw	-10
  9626  019C90  006F FF8C  F00A    	movff	plusw1,btemp+9
  9627  019C96  500B               	movf	(btemp+10)^0,w,c
  9628  019C98  2409               	addwf	(btemp+8)^0,w,c
  9629  019C9A  6ED9               	movwf	fsr2l,c
  9630  019C9C  500C               	movf	(btemp+11)^0,w,c
  9631  019C9E  200A               	addwfc	(btemp+9)^0,w,c
  9632  019CA0  6EDA               	movwf	fsr2h,c
  9633  019CA2  0E00               	movlw	0
  9634  019CA4  6EDF               	movwf	indf2,c
  9635                           
  9636                           ; BSR set to: 0
  9637                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 74, args
      +                          ize = 4, vargsize = 0
  9638  019CA6  0EF8               	movlw	248
  9639  019CA8  26E1               	addwf	fsr1l,f,c
  9640  019CAA  0EFF               	movlw	255
  9641  019CAC  22E2               	addwfc	fsr1h,f,c
  9642  019CAE  52E5               	movf	postdec1,f,c
  9643  019CB0  50E7               	movf	indf1,w,c
  9644  019CB2  5EE1               	subwf	fsr1l,f,c
  9645  019CB4  0E00               	movlw	0
  9646  019CB6  5AE2               	subwfb	fsr1h,f,c
  9647  019CB8  0012               	return		;funcret
  9648  019CBA                     __end_of_sprintf:
  9649                           	opt callstack 0
  9650                           
  9651 ;; *************** function _get_vterm_ptr *****************
  9652 ;; Defined at:
  9653 ;;		line 116 in file "mconfig.c"
  9654 ;; Parameters:    Size  Location     Type
  9655 ;;  line            1  [STACK] const unsigned char 
  9656 ;;  vterm           1  [STACK] const unsigned char 
  9657 ;; Auto vars:     Size  Location     Type
  9658 ;;		None
  9659 ;; Return value:  Size  Location     Type
  9660 ;;                  2  [STACK] PTR unsigned char 
  9661 ;; Registers used:
  9662 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  9663 ;; Tracked objects:
  9664 ;;		On entry : 0/2
  9665 ;;		On exit  : 0/0
  9666 ;;		Unchanged: 0/0
  9667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9672 ;;Total ram usage:        0 bytes
  9673 ;; Hardware stack levels used:    1
  9674 ;; Hardware stack levels required when called:   15
  9675 ;; This function calls:
  9676 ;;		Nothing
  9677 ;; This function is called by:
  9678 ;;		_main
  9679 ;;		_check_help
  9680 ;;		_vterm_dump
  9681 ;; This function uses a reentrant model
  9682 ;;
  9683                           
  9684                           	psect	text31
  9685  01B7C8                     __ptext31:
  9686                           	opt callstack 0
  9687  01B7C8                     _get_vterm_ptr:
  9688                           	opt callstack 15
  9689                           
  9690                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  9691                           ;stkvar	_vterm @ sp[(0)+-2]
  9692                           
  9693                           ; BSR set to: 0
  9694                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9695                           ;incstack = 0
  9696  01B7C8  0EFE               	movlw	-2
  9697  01B7CA  50E3               	movf	plusw1,w,c
  9698  01B7CC  0B03               	andlw	3
  9699  01B7CE  0D78               	mullw	120
  9700  01B7D0  0E26               	movlw	low _D
  9701  01B7D2  6E01               	movwf	btemp^0,c
  9702  01B7D4  0E08               	movlw	high _D
  9703  01B7D6  6E02               	movwf	(btemp+1)^0,c
  9704  01B7D8  50F3               	movf	243,w,c
  9705  01B7DA  2601               	addwf	btemp^0,f,c
  9706  01B7DC  50F4               	movf	244,w,c
  9707  01B7DE  2202               	addwfc	(btemp+1)^0,f,c
  9708                           
  9709                           ;stkvar	_line @ sp[(0)+-1]
  9710  01B7E0  0EFF               	movlw	-1
  9711  01B7E2  50E3               	movf	plusw1,w,c
  9712  01B7E4  0B03               	andlw	3
  9713  01B7E6  0D28               	mullw	40
  9714  01B7E8  50F3               	movf	243,w,c
  9715  01B7EA  2601               	addwf	btemp^0,f,c
  9716  01B7EC  50F4               	movf	244,w,c
  9717  01B7EE  2202               	addwfc	(btemp+1)^0,f,c
  9718                           
  9719                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9720  01B7F0  52E5               	movf	postdec1,f,c
  9721  01B7F2  52E5               	movf	postdec1,f,c
  9722  01B7F4  0012               	return		;funcret
  9723  01B7F6                     __end_of_get_vterm_ptr:
  9724                           	opt callstack 0
  9725                           
  9726 ;; *************** function _WaitMs *****************
  9727 ;; Defined at:
  9728 ;;		line 32 in file "timers.c"
  9729 ;; Parameters:    Size  Location     Type
  9730 ;;  numMilliseco    2  [STACK] const unsigned short 
  9731 ;; Auto vars:     Size  Location     Type
  9732 ;;		None
  9733 ;; Return value:  Size  Location     Type
  9734 ;;                  1  [STACK] void 
  9735 ;; Registers used:
  9736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9737 ;; Tracked objects:
  9738 ;;		On entry : 0/1
  9739 ;;		On exit  : 0/0
  9740 ;;		Unchanged: 0/0
  9741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9746 ;;Total ram usage:        0 bytes
  9747 ;; Hardware stack levels used:    1
  9748 ;; Hardware stack levels required when called:   16
  9749 ;; This function calls:
  9750 ;;		_StartTimer
  9751 ;;		_TimerDone
  9752 ;; This function is called by:
  9753 ;;		_main
  9754 ;;		_vterm_dump
  9755 ;; This function uses a reentrant model
  9756 ;;
  9757                           
  9758                           	psect	text32
  9759  01B634                     __ptext32:
  9760                           	opt callstack 0
  9761  01B634                     _WaitMs:
  9762                           	opt callstack 12
  9763                           
  9764                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  9765                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  9766                           
  9767                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9768                           ;incstack = 0
  9769  01B634  0EFE               	movlw	-2
  9770  01B636  006F FF8F FFE6     	movff	plusw1,postinc1
  9771  01B63C  006F FF8F FFE6     	movff	plusw1,postinc1
  9772  01B642  0E00               	movlw	0
  9773  01B644  6EE6               	movwf	postinc1,c
  9774  01B646  EC27  F0DA         	call	_StartTimer	;wreg free
  9775                           
  9776                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9777  01B64A  D005               	goto	l9787
  9778  01B64C                     l1606:
  9779                           
  9780                           ;timers.c: 36:   __nop();
  9781  01B64C  F000               	nop	
  9782                           
  9783                           ;timers.c: 37:   __nop();
  9784  01B64E  F000               	nop	
  9785                           
  9786                           ;timers.c: 38:   __nop();
  9787  01B650  F000               	nop	
  9788                           
  9789                           ;timers.c: 39:   __nop();
  9790  01B652  F000               	nop	
  9791  01B654  0004               	clrwdt		;# 
  9792  01B656                     l9787:
  9793                           
  9794                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9795  01B656  0E00               	movlw	0
  9796  01B658  6EE6               	movwf	postinc1,c
  9797  01B65A  ECA3  F0DC         	call	_TimerDone	;wreg free
  9798  01B65E  5001               	movf	btemp^0,w,c
  9799  01B660  B4D8               	btfsc	status,2,c
  9800  01B662  D7F4               	goto	l1606
  9801                           
  9802                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9803  01B664  52E5               	movf	postdec1,f,c
  9804  01B666  52E5               	movf	postdec1,f,c
  9805  01B668  0012               	return		;funcret
  9806  01B66A                     __end_of_WaitMs:
  9807                           	opt callstack 0
  9808                           
  9809 ;; *************** function _update_lcd *****************
  9810 ;; Defined at:
  9811 ;;		line 85 in file "mconfig.c"
  9812 ;; Parameters:    Size  Location     Type
  9813 ;;  vterm           1  [STACK] unsigned char 
  9814 ;; Auto vars:     Size  Location     Type
  9815 ;;		None
  9816 ;; Return value:  Size  Location     Type
  9817 ;;                  1  [STACK] unsigned char 
  9818 ;; Registers used:
  9819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9820 ;; Tracked objects:
  9821 ;;		On entry : 0/0
  9822 ;;		On exit  : 0/0
  9823 ;;		Unchanged: 0/0
  9824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9829 ;;Total ram usage:        0 bytes
  9830 ;; Hardware stack levels used:    1
  9831 ;; Hardware stack levels required when called:   26
  9832 ;; This function calls:
  9833 ;;		_eaDogM_WriteStringAtPos
  9834 ;;		_wait_lcd_done
  9835 ;; This function is called by:
  9836 ;;		_main
  9837 ;;		_check_help
  9838 ;; This function uses a reentrant model
  9839 ;;
  9840                           
  9841                           	psect	text33
  9842  019AA0                     __ptext33:
  9843                           	opt callstack 0
  9844  019AA0                     _update_lcd:
  9845                           	opt callstack 4
  9846                           
  9847                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  9848                           ;stkvar	_vterm @ sp[(0)+-1]
  9849                           
  9850                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9851                           ;incstack = 0
  9852  019AA0  0EFF               	movlw	-1
  9853  019AA2  006F FF8C  F001    	movff	plusw1,btemp
  9854  019AA8  0E03               	movlw	3
  9855  019AAA  1601               	andwf	btemp^0,f,c
  9856  019AAC  0EFF               	movlw	-1
  9857  019AAE  0060  F007  FFE3   	movff	btemp,plusw1
  9858                           
  9859                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  9860  019AB4  EE22  F206         	lfsr	2,_D+480
  9861  019AB8  A0DF               	btfss	indf2,0,c
  9862  019ABA  D004               	goto	l12607
  9863                           
  9864                           ;stkvar	_vterm @ sp[(0)+-1]
  9865  019ABC  0EFF               	movlw	-1
  9866  019ABE  50E3               	movf	plusw1,w,c
  9867  019AC0  B4D8               	btfsc	status,2,c
  9868  019AC2  D074               	goto	l1682
  9869  019AC4                     l12607:
  9870                           
  9871                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  9872                           ;stkvar	_vterm @ sp[(0)+-1]
  9873  019AC4  0EFF               	movlw	-1
  9874  019AC6  50E3               	movf	plusw1,w,c
  9875  019AC8  0D78               	mullw	120
  9876  019ACA  0E36               	movlw	low (_D+16)
  9877  019ACC  24F3               	addwf	243,w,c
  9878  019ACE  6ED9               	movwf	fsr2l,c
  9879  019AD0  0E08               	movlw	high (_D+16)
  9880  019AD2  20F4               	addwfc	prodh,w,c
  9881  019AD4  6EDA               	movwf	fsr2h,c
  9882  019AD6  0E00               	movlw	0
  9883  019AD8  6EDF               	movwf	indf2,c
  9884                           
  9885                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  9886                           ;stkvar	_vterm @ sp[(0)+-1]
  9887  019ADA  0EFF               	movlw	-1
  9888  019ADC  50E3               	movf	plusw1,w,c
  9889  019ADE  0D78               	mullw	120
  9890  019AE0  0E5E               	movlw	low (_D+56)
  9891  019AE2  24F3               	addwf	243,w,c
  9892  019AE4  6ED9               	movwf	fsr2l,c
  9893  019AE6  0E08               	movlw	high (_D+56)
  9894  019AE8  20F4               	addwfc	prodh,w,c
  9895  019AEA  6EDA               	movwf	fsr2h,c
  9896  019AEC  0E00               	movlw	0
  9897  019AEE  6EDF               	movwf	indf2,c
  9898                           
  9899                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  9900                           ;stkvar	_vterm @ sp[(0)+-1]
  9901  019AF0  0EFF               	movlw	-1
  9902  019AF2  50E3               	movf	plusw1,w,c
  9903  019AF4  0D78               	mullw	120
  9904  019AF6  0E86               	movlw	low (_D+96)
  9905  019AF8  24F3               	addwf	243,w,c
  9906  019AFA  6ED9               	movwf	fsr2l,c
  9907  019AFC  0E08               	movlw	high (_D+96)
  9908  019AFE  20F4               	addwfc	prodh,w,c
  9909  019B00  6EDA               	movwf	fsr2h,c
  9910  019B02  0E00               	movlw	0
  9911  019B04  6EDF               	movwf	indf2,c
  9912                           
  9913                           ;mconfig.c: 95:  wait_lcd_done();
  9914  019B06  EC94  F0DE         	call	_wait_lcd_done	;wreg free
  9915                           
  9916                           ; BSR set to: 0
  9917                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  9918                           ;stkvar	_vterm @ sp[(0)+-1]
  9919  019B0A  0EFF               	movlw	-1
  9920  019B0C  50E3               	movf	plusw1,w,c
  9921  019B0E  0D78               	mullw	120
  9922  019B10  0E26               	movlw	low _D
  9923  019B12  6E0B               	movwf	(btemp+10)^0,c
  9924  019B14  0E08               	movlw	high _D
  9925  019B16  6E0C               	movwf	(btemp+11)^0,c
  9926  019B18  50F3               	movf	243,w,c
  9927  019B1A  260B               	addwf	(btemp+10)^0,f,c
  9928  019B1C  50F4               	movf	244,w,c
  9929  019B1E  220C               	addwfc	(btemp+11)^0,f,c
  9930  019B20  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9931  019B26  0060  F033  FFE6   	movff	btemp+11,postinc1
  9932  019B2C  0E00               	movlw	0
  9933  019B2E  6EE6               	movwf	postinc1,c
  9934  019B30  0E00               	movlw	0
  9935  019B32  6EE6               	movwf	postinc1,c
  9936  019B34  EC35  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
  9937                           
  9938                           ; BSR set to: 59
  9939                           ;mconfig.c: 97:  wait_lcd_done();
  9940  019B38  EC94  F0DE         	call	_wait_lcd_done	;wreg free
  9941                           
  9942                           ; BSR set to: 0
  9943                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  9944                           ;stkvar	_vterm @ sp[(0)+-1]
  9945  019B3C  0EFF               	movlw	-1
  9946  019B3E  50E3               	movf	plusw1,w,c
  9947  019B40  0D78               	mullw	120
  9948  019B42  0E26               	movlw	low _D
  9949  019B44  6E0B               	movwf	(btemp+10)^0,c
  9950  019B46  0E08               	movlw	high _D
  9951  019B48  6E0C               	movwf	(btemp+11)^0,c
  9952  019B4A  0E28               	movlw	40
  9953  019B4C  260B               	addwf	(btemp+10)^0,f,c
  9954  019B4E  0E00               	movlw	0
  9955  019B50  220C               	addwfc	(btemp+11)^0,f,c
  9956  019B52  50F3               	movf	243,w,c
  9957  019B54  260B               	addwf	(btemp+10)^0,f,c
  9958  019B56  50F4               	movf	244,w,c
  9959  019B58  220C               	addwfc	(btemp+11)^0,f,c
  9960  019B5A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9961  019B60  0060  F033  FFE6   	movff	btemp+11,postinc1
  9962  019B66  0E00               	movlw	0
  9963  019B68  6EE6               	movwf	postinc1,c
  9964  019B6A  0E01               	movlw	1
  9965  019B6C  6EE6               	movwf	postinc1,c
  9966  019B6E  EC35  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
  9967                           
  9968                           ; BSR set to: 59
  9969                           ;mconfig.c: 99:  wait_lcd_done();
  9970  019B72  EC94  F0DE         	call	_wait_lcd_done	;wreg free
  9971                           
  9972                           ; BSR set to: 0
  9973                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  9974                           ;stkvar	_vterm @ sp[(0)+-1]
  9975  019B76  0EFF               	movlw	-1
  9976  019B78  50E3               	movf	plusw1,w,c
  9977  019B7A  0D78               	mullw	120
  9978  019B7C  0E26               	movlw	low _D
  9979  019B7E  6E0B               	movwf	(btemp+10)^0,c
  9980  019B80  0E08               	movlw	high _D
  9981  019B82  6E0C               	movwf	(btemp+11)^0,c
  9982  019B84  0E50               	movlw	80
  9983  019B86  260B               	addwf	(btemp+10)^0,f,c
  9984  019B88  0E00               	movlw	0
  9985  019B8A  220C               	addwfc	(btemp+11)^0,f,c
  9986  019B8C  50F3               	movf	243,w,c
  9987  019B8E  260B               	addwf	(btemp+10)^0,f,c
  9988  019B90  50F4               	movf	244,w,c
  9989  019B92  220C               	addwfc	(btemp+11)^0,f,c
  9990  019B94  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9991  019B9A  0060  F033  FFE6   	movff	btemp+11,postinc1
  9992  019BA0  0E00               	movlw	0
  9993  019BA2  6EE6               	movwf	postinc1,c
  9994  019BA4  0E02               	movlw	2
  9995  019BA6  6EE6               	movwf	postinc1,c
  9996  019BA8  EC35  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
  9997  019BAC                     l1682:
  9998                           
  9999                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10000  019BAC  52E5               	movf	postdec1,f,c
 10001  019BAE  0012               	return		;funcret
 10002  019BB0                     __end_of_update_lcd:
 10003                           	opt callstack 0
 10004                           
 10005 ;; *************** function _eaDogM_WriteStringAtPos *****************
 10006 ;; Defined at:
 10007 ;;		line 278 in file "eadog.c"
 10008 ;; Parameters:    Size  Location     Type
 10009 ;;  r               1  [STACK] const unsigned char 
 10010 ;;  c               1  [STACK] const unsigned char 
 10011 ;;  strPtr          2  [STACK] PTR unsigned char 
 10012 ;;		 -> D.lcd(480), D(482), V(191), 
 10013 ;; Auto vars:     Size  Location     Type
 10014 ;;		None
 10015 ;; Return value:  Size  Location     Type
 10016 ;;                  1  [STACK] void 
 10017 ;; Registers used:
 10018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10019 ;; Tracked objects:
 10020 ;;		On entry : 3F/0
 10021 ;;		On exit  : 3F/3B
 10022 ;;		Unchanged: 0/0
 10023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10028 ;;Total ram usage:        0 bytes
 10029 ;; Hardware stack levels used:    1
 10030 ;; Hardware stack levels required when called:   25
 10031 ;; This function calls:
 10032 ;;		_eaDogM_WriteString
 10033 ;;		_send_lcd_cmd_dma
 10034 ;; This function is called by:
 10035 ;;		_update_lcd
 10036 ;;		_vterm_dump
 10037 ;; This function uses a reentrant model
 10038 ;;
 10039                           
 10040                           	psect	text34
 10041  01B66A                     __ptext34:
 10042                           	opt callstack 0
 10043  01B66A                     _eaDogM_WriteStringAtPos:
 10044                           	opt callstack 4
 10045                           
 10046                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
 10047                           ;stkvar	_c @ sp[(0)+-2]
 10048                           
 10049                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10050                           ;incstack = 0
 10051  01B66A  0EFE               	movlw	-2
 10052  01B66C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10053                           
 10054                           ;stkvar	_r @ sp[(0)+-1]
 10055  01B672  0EFF               	movlw	-1
 10056  01B674  50E3               	movf	plusw1,w,c
 10057  01B676  0D10               	mullw	16
 10058  01B678  50F3               	movf	243,w,c
 10059  01B67A  240C               	addwf	(btemp+11)^0,w,c
 10060  01B67C  0F80               	addlw	128
 10061  01B67E  6EE6               	movwf	postinc1,c
 10062  01B680  EC24  F0D8         	call	_send_lcd_cmd_dma	;wreg free
 10063                           
 10064                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
 10065                           ;stkvar	_strPtr @ sp[(0)+-4]
 10066  01B684  0EFC               	movlw	-4
 10067  01B686  006F FF8F FFE6     	movff	plusw1,postinc1
 10068  01B68C  006F FF8F FFE6     	movff	plusw1,postinc1
 10069  01B692  EC35  F0D3         	call	_eaDogM_WriteString	;wreg free
 10070                           
 10071                           ; BSR set to: 59
 10072                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 10073  01B696  52E5               	movf	postdec1,f,c
 10074  01B698  52E5               	movf	postdec1,f,c
 10075  01B69A  52E5               	movf	postdec1,f,c
 10076  01B69C  52E5               	movf	postdec1,f,c
 10077  01B69E  0012               	return		;funcret
 10078  01B6A0                     __end_of_eaDogM_WriteStringAtPos:
 10079                           	opt callstack 0
 10080                           
 10081 ;; *************** function _send_lcd_cmd_dma *****************
 10082 ;; Defined at:
 10083 ;;		line 220 in file "eadog.c"
 10084 ;; Parameters:    Size  Location     Type
 10085 ;;  strPtr          1  [STACK] unsigned char 
 10086 ;; Auto vars:     Size  Location     Type
 10087 ;;		None
 10088 ;; Return value:  Size  Location     Type
 10089 ;;                  1  [STACK] void 
 10090 ;; Registers used:
 10091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10092 ;; Tracked objects:
 10093 ;;		On entry : 0/3D
 10094 ;;		On exit  : 3F/0
 10095 ;;		Unchanged: 0/0
 10096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10101 ;;Total ram usage:        0 bytes
 10102 ;; Hardware stack levels used:    1
 10103 ;; Hardware stack levels required when called:   24
 10104 ;; This function calls:
 10105 ;;		_printf
 10106 ;;		_ringBufS_flush
 10107 ;;		_start_lcd
 10108 ;;		_wait_lcd_done
 10109 ;;		_wait_lcd_set
 10110 ;; This function is called by:
 10111 ;;		_eaDogM_WriteCommand
 10112 ;;		_eaDogM_WriteStringAtPos
 10113 ;; This function uses a reentrant model
 10114 ;;
 10115                           
 10116                           	psect	text35
 10117  01B048                     __ptext35:
 10118                           	opt callstack 0
 10119  01B048                     _send_lcd_cmd_dma:
 10120                           	opt callstack 4
 10121                           
 10122                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
 10123                           
 10124                           ; BSR set to: 59
 10125                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10126                           ;incstack = 0
 10127  01B048  EC84  F0DF         	call	_wait_lcd_set	;wreg free
 10128                           
 10129                           ; BSR set to: 0
 10130                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
 10131  01B04C  0E00               	movlw	0
 10132  01B04E  6EE6               	movwf	postinc1,c
 10133  01B050  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10134  01B056  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10135  01B05C  EC6F  F0D4         	call	_ringBufS_flush	;wreg free
 10136  01B060  92BC               	bcf	188,1,c	;volatile
 10137  01B062  94BC               	bcf	188,2,c	;volatile
 10138                           
 10139                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
 10140  01B064  013B               	movlb	59	; () banked
 10141  01B066  9FFC               	bcf	252,7,b	;volatile
 10142                           
 10143                           ; BSR set to: 59
 10144                           ;eadog.c: 229:  DMA1SSZ = 1;
 10145  01B068  0E00               	movlw	0
 10146  01B06A  6FF8               	movwf	248,b	;volatile
 10147  01B06C  0E01               	movlw	1
 10148  01B06E  6FF7               	movwf	247,b	;volatile
 10149                           
 10150                           ; BSR set to: 59
 10151                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
 10152  01B070  8FFC               	bsf	252,7,b	;volatile
 10153                           
 10154                           ; BSR set to: 59
 10155                           ;eadog.c: 231:  printf("%c", strPtr);
 10156                           ;stkvar	_strPtr @ sp[(0)+-1]
 10157  01B072  0EFF               	movlw	-1
 10158  01B074  50E3               	movf	plusw1,w,c
 10159  01B076  6EE6               	movwf	postinc1,c
 10160  01B078  0E00               	movlw	0
 10161  01B07A  6EE6               	movwf	postinc1,c
 10162  01B07C  0EF8               	movlw	low STR_44
 10163  01B07E  6EE6               	movwf	postinc1,c
 10164  01B080  0EFF               	movlw	high STR_44
 10165  01B082  6EE6               	movwf	postinc1,c
 10166  01B084  0E04               	movlw	4
 10167  01B086  6EE6               	movwf	postinc1,c
 10168  01B088  EC38  F0D7         	call	_printf	;wreg free
 10169                           
 10170                           ; BSR set to: 0
 10171                           ;eadog.c: 232:  start_lcd();
 10172  01B08C  EC87  F0DF         	call	_start_lcd	;wreg free
 10173                           
 10174                           ; BSR set to: 59
 10175                           ;eadog.c: 233:  wait_lcd_done();
 10176  01B090  EC94  F0DE         	call	_wait_lcd_done	;wreg free
 10177                           
 10178                           ; BSR set to: 0
 10179  01B094  82BC               	bsf	188,1,c	;volatile
 10180                           
 10181                           ; BSR set to: 0
 10182                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 10183  01B096  52E5               	movf	postdec1,f,c
 10184  01B098  0012               	return		;funcret
 10185  01B09A                     __end_of_send_lcd_cmd_dma:
 10186                           	opt callstack 0
 10187                           
 10188 ;; *************** function _wait_lcd_done *****************
 10189 ;; Defined at:
 10190 ;;		line 156 in file "eadog.c"
 10191 ;; Parameters:    Size  Location     Type
 10192 ;;		None
 10193 ;; Auto vars:     Size  Location     Type
 10194 ;;		None
 10195 ;; Return value:  Size  Location     Type
 10196 ;;                  1  [STACK] void 
 10197 ;; Registers used:
 10198 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10199 ;; Tracked objects:
 10200 ;;		On entry : 0/0
 10201 ;;		On exit  : 3F/0
 10202 ;;		Unchanged: 0/0
 10203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10208 ;;Total ram usage:        0 bytes
 10209 ;; Hardware stack levels used:    1
 10210 ;; Hardware stack levels required when called:   16
 10211 ;; This function calls:
 10212 ;;		_wdtdelay
 10213 ;; This function is called by:
 10214 ;;		_send_lcd_cmd_dma
 10215 ;;		_update_lcd
 10216 ;;		_vterm_dump
 10217 ;; This function uses a reentrant model
 10218 ;;
 10219                           
 10220                           	psect	text36
 10221  01BD28                     __ptext36:
 10222                           	opt callstack 0
 10223  01BD28                     _wait_lcd_done:
 10224                           	opt callstack 13
 10225                           
 10226                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
 10227                           
 10228                           ; BSR set to: 0
 10229                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10230                           ;incstack = 0
 10231  01BD28  0100               	movlb	0	; () banked
 10232  01BD2A  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 10233  01BD2C  D7FD               	goto	_wait_lcd_done
 10234                           
 10235                           ; BSR set to: 0
 10236                           ;eadog.c: 159:  wdtdelay(50);
 10237  01BD2E  0E32               	movlw	50
 10238  01BD30  6EE6               	movwf	postinc1,c
 10239  01BD32  0E00               	movlw	0
 10240  01BD34  6EE6               	movwf	postinc1,c
 10241  01BD36  0E00               	movlw	0
 10242  01BD38  6EE6               	movwf	postinc1,c
 10243  01BD3A  0E00               	movlw	0
 10244  01BD3C  6EE6               	movwf	postinc1,c
 10245  01BD3E  ECCA  F0D7         	call	_wdtdelay	;wreg free
 10246                           
 10247                           ; BSR set to: 0
 10248                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 10249  01BD42  0012               	return		;funcret
 10250  01BD44                     __end_of_wait_lcd_done:
 10251                           	opt callstack 0
 10252                           
 10253 ;; *************** function _wdtdelay *****************
 10254 ;; Defined at:
 10255 ;;		line 23 in file "eadog.c"
 10256 ;; Parameters:    Size  Location     Type
 10257 ;;  delay           4  [STACK] const unsigned long 
 10258 ;; Auto vars:     Size  Location     Type
 10259 ;;		None
 10260 ;; Return value:  Size  Location     Type
 10261 ;;                  1  [STACK] void 
 10262 ;; Registers used:
 10263 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10264 ;; Tracked objects:
 10265 ;;		On entry : 0/0
 10266 ;;		On exit  : 3F/0
 10267 ;;		Unchanged: 0/0
 10268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10273 ;;Total ram usage:        0 bytes
 10274 ;; Hardware stack levels used:    1
 10275 ;; Hardware stack levels required when called:   15
 10276 ;; This function calls:
 10277 ;;		Nothing
 10278 ;; This function is called by:
 10279 ;;		_init_display
 10280 ;;		_send_lcd_cmd
 10281 ;;		_send_lcd_cmd_long
 10282 ;;		_wait_lcd_done
 10283 ;; This function uses a reentrant model
 10284 ;;
 10285                           
 10286                           	psect	text37
 10287  01AF94                     __ptext37:
 10288                           	opt callstack 0
 10289  01AF94                     _wdtdelay:
 10290                           	opt callstack 13
 10291                           
 10292                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 10293                           
 10294                           ; BSR set to: 0
 10295                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10296                           ;incstack = 0
 10297  01AF94  0100               	movlb	0	; () banked
 10298  01AF96  6B88               	clrf	wdtdelay@dcount& (0+255),b
 10299  01AF98  6B89               	clrf	(wdtdelay@dcount+1)& (0+255),b
 10300  01AF9A  6B8A               	clrf	(wdtdelay@dcount+2)& (0+255),b
 10301  01AF9C  6B8B               	clrf	(wdtdelay@dcount+3)& (0+255),b
 10302  01AF9E                     l1447:
 10303                           
 10304                           ; BSR set to: 0
 10305                           ;eadog.c: 28:   __nop();
 10306  01AF9E  F000               	nop	
 10307  01AFA0  0004               	clrwdt		;# 
 10308                           
 10309                           ;eadog.c: 30:  };
 10310  01AFA2  0E01               	movlw	1
 10311  01AFA4  0100               	movlb	0	; () banked
 10312  01AFA6  2788               	addwf	wdtdelay@dcount& (0+255),f,b
 10313  01AFA8  0E00               	movlw	0
 10314  01AFAA  2389               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 10315  01AFAC  238A               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 10316  01AFAE  238B               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 10317                           
 10318                           ; BSR set to: 0
 10319                           ;stkvar	_delay @ sp[(0)+-4]
 10320  01AFB0  0EFC               	movlw	-4
 10321  01AFB2  006F FF8C  F001    	movff	plusw1,btemp
 10322  01AFB8  5188               	movf	wdtdelay@dcount& (0+255),w,b
 10323  01AFBA  5C01               	subwf	btemp^0,w,c
 10324  01AFBC  0EFD               	movlw	-3
 10325  01AFBE  006F FF8C  F001    	movff	plusw1,btemp
 10326  01AFC4  5189               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 10327  01AFC6  5801               	subwfb	btemp^0,w,c
 10328  01AFC8  0EFE               	movlw	-2
 10329  01AFCA  006F FF8C  F001    	movff	plusw1,btemp
 10330  01AFD0  518A               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 10331  01AFD2  5801               	subwfb	btemp^0,w,c
 10332  01AFD4  0EFF               	movlw	-1
 10333  01AFD6  006F FF8C  F001    	movff	plusw1,btemp
 10334  01AFDC  518B               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 10335  01AFDE  5801               	subwfb	btemp^0,w,c
 10336  01AFE0  B0D8               	btfsc	status,0,c
 10337  01AFE2  D7DD               	goto	l1447
 10338                           
 10339                           ; BSR set to: 0
 10340                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 10341  01AFE4  52E5               	movf	postdec1,f,c
 10342  01AFE6  52E5               	movf	postdec1,f,c
 10343  01AFE8  52E5               	movf	postdec1,f,c
 10344  01AFEA  52E5               	movf	postdec1,f,c
 10345  01AFEC  0012               	return		;funcret
 10346  01AFEE                     __end_of_wdtdelay:
 10347                           	opt callstack 0
 10348                           
 10349 ;; *************** function _eaDogM_WriteString *****************
 10350 ;; Defined at:
 10351 ;;		line 199 in file "eadog.c"
 10352 ;; Parameters:    Size  Location     Type
 10353 ;;  strPtr          2  [STACK] PTR unsigned char 
 10354 ;;		 -> D.lcd(480), D(482), V(191), 
 10355 ;; Auto vars:     Size  Location     Type
 10356 ;;		None
 10357 ;; Return value:  Size  Location     Type
 10358 ;;                  1  [STACK] void 
 10359 ;; Registers used:
 10360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10361 ;; Tracked objects:
 10362 ;;		On entry : 3F/0
 10363 ;;		On exit  : 3F/3B
 10364 ;;		Unchanged: 0/0
 10365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10370 ;;Total ram usage:        0 bytes
 10371 ;; Hardware stack levels used:    1
 10372 ;; Hardware stack levels required when called:   24
 10373 ;; This function calls:
 10374 ;;		_printf
 10375 ;;		_ringBufS_flush
 10376 ;;		_start_lcd
 10377 ;;		_strlen
 10378 ;;		_wait_lcd_set
 10379 ;; This function is called by:
 10380 ;;		_eaDogM_WriteStringAtPos
 10381 ;; This function uses a reentrant model
 10382 ;;
 10383                           
 10384                           	psect	text38
 10385  01A66A                     __ptext38:
 10386                           	opt callstack 0
 10387  01A66A                     _eaDogM_WriteString:
 10388                           	opt callstack 4
 10389                           
 10390                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
 10391                           
 10392                           ; BSR set to: 0
 10393                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10394                           ;incstack = 0
 10395  01A66A  EC84  F0DF         	call	_wait_lcd_set	;wreg free
 10396                           
 10397                           ; BSR set to: 0
 10398                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
 10399  01A66E  0E00               	movlw	0
 10400  01A670  6EE6               	movwf	postinc1,c
 10401  01A672  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10402  01A678  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10403  01A67E  EC6F  F0D4         	call	_ringBufS_flush	;wreg free
 10404  01A682  94BC               	bcf	188,2,c	;volatile
 10405                           
 10406                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 10407                           ;stkvar	_strPtr @ sp[(0)+-2]
 10408  01A684  0EFE               	movlw	-2
 10409  01A686  006F FF8F FFE6     	movff	plusw1,postinc1
 10410  01A68C  006F FF8F FFE6     	movff	plusw1,postinc1
 10411  01A692  EC88  F0D3         	call	_strlen	;wreg free
 10412  01A696  5002               	movf	(btemp+1)^0,w,c
 10413  01A698  E104               	bnz	u12200
 10414  01A69A  0E41               	movlw	65
 10415  01A69C  5C01               	subwf	btemp^0,w,c
 10416  01A69E  A0D8               	btfss	status,0,c
 10417  01A6A0  D010               	goto	l12519
 10418  01A6A2                     u12200:
 10419                           
 10420                           ;stkvar	_strPtr @ sp[(0)+-2]
 10421  01A6A2  0EFE               	movlw	-2
 10422  01A6A4  006F FF8C  F00B    	movff	plusw1,btemp+10
 10423  01A6AA  0EFF               	movlw	-1
 10424  01A6AC  006F FF8C  F00C    	movff	plusw1,btemp+11
 10425  01A6B2  0E40               	movlw	64
 10426  01A6B4  240B               	addwf	(btemp+10)^0,w,c
 10427  01A6B6  6ED9               	movwf	fsr2l,c
 10428  01A6B8  0E00               	movlw	0
 10429  01A6BA  200C               	addwfc	(btemp+11)^0,w,c
 10430  01A6BC  6EDA               	movwf	fsr2h,c
 10431  01A6BE  0E00               	movlw	0
 10432  01A6C0  6EDF               	movwf	indf2,c
 10433  01A6C2                     l12519:
 10434                           
 10435                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
 10436  01A6C2  013B               	movlb	59	; () banked
 10437  01A6C4  9FFC               	bcf	252,7,b	;volatile
 10438                           
 10439                           ; BSR set to: 59
 10440                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
 10441                           ;stkvar	_strPtr @ sp[(0)+-2]
 10442  01A6C6  0EFE               	movlw	-2
 10443  01A6C8  006F FF8F FFE6     	movff	plusw1,postinc1
 10444  01A6CE  006F FF8F FFE6     	movff	plusw1,postinc1
 10445  01A6D4  EC88  F0D3         	call	_strlen	;wreg free
 10446  01A6D8  0060  F007  FBF7   	movff	btemp,15351	;volatile
 10447  01A6DE  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 10448                           
 10449                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
 10450  01A6E4  013B               	movlb	59	; () banked
 10451  01A6E6  8FFC               	bsf	252,7,b	;volatile
 10452                           
 10453                           ; BSR set to: 59
 10454                           ;eadog.c: 210:  printf("%s", strPtr);
 10455                           ;stkvar	_strPtr @ sp[(0)+-2]
 10456  01A6E8  0EFE               	movlw	-2
 10457  01A6EA  006F FF8F FFE6     	movff	plusw1,postinc1
 10458  01A6F0  006F FF8F FFE6     	movff	plusw1,postinc1
 10459  01A6F6  0EFB               	movlw	low STR_43
 10460  01A6F8  6EE6               	movwf	postinc1,c
 10461  01A6FA  0EFF               	movlw	high STR_43
 10462  01A6FC  6EE6               	movwf	postinc1,c
 10463  01A6FE  0E04               	movlw	4
 10464  01A700  6EE6               	movwf	postinc1,c
 10465  01A702  EC38  F0D7         	call	_printf	;wreg free
 10466                           
 10467                           ; BSR set to: 0
 10468                           ;eadog.c: 211:  start_lcd();
 10469  01A706  EC87  F0DF         	call	_start_lcd	;wreg free
 10470                           
 10471                           ; BSR set to: 59
 10472                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 10473  01A70A  52E5               	movf	postdec1,f,c
 10474  01A70C  52E5               	movf	postdec1,f,c
 10475  01A70E  0012               	return		;funcret
 10476  01A710                     __end_of_eaDogM_WriteString:
 10477                           	opt callstack 0
 10478                           
 10479 ;; *************** function _wait_lcd_set *****************
 10480 ;; Defined at:
 10481 ;;		line 146 in file "eadog.c"
 10482 ;; Parameters:    Size  Location     Type
 10483 ;;		None
 10484 ;; Auto vars:     Size  Location     Type
 10485 ;;		None
 10486 ;; Return value:  Size  Location     Type
 10487 ;;                  1  [STACK] void 
 10488 ;; Registers used:
 10489 ;;		None
 10490 ;; Tracked objects:
 10491 ;;		On entry : 0/3D
 10492 ;;		On exit  : 3F/0
 10493 ;;		Unchanged: 0/0
 10494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10499 ;;Total ram usage:        0 bytes
 10500 ;; Hardware stack levels used:    1
 10501 ;; Hardware stack levels required when called:   15
 10502 ;; This function calls:
 10503 ;;		Nothing
 10504 ;; This function is called by:
 10505 ;;		_eaDogM_WriteString
 10506 ;;		_send_lcd_cmd_dma
 10507 ;; This function uses a reentrant model
 10508 ;;
 10509                           
 10510                           	psect	text39
 10511  01BF08                     __ptext39:
 10512                           	opt callstack 0
 10513  01BF08                     _wait_lcd_set:
 10514                           	opt callstack 12
 10515                           
 10516                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
 10517                           
 10518                           ; BSR set to: 59
 10519                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10520                           ;incstack = 0
 10521  01BF08  0100               	movlb	0	; () banked
 10522  01BF0A  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 10523                           
 10524                           ; BSR set to: 0
 10525                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10526  01BF0C  0012               	return		;funcret
 10527  01BF0E                     __end_of_wait_lcd_set:
 10528                           	opt callstack 0
 10529                           
 10530 ;; *************** function _start_lcd *****************
 10531 ;; Defined at:
 10532 ;;		line 141 in file "eadog.c"
 10533 ;; Parameters:    Size  Location     Type
 10534 ;;		None
 10535 ;; Auto vars:     Size  Location     Type
 10536 ;;		None
 10537 ;; Return value:  Size  Location     Type
 10538 ;;                  1  [STACK] void 
 10539 ;; Registers used:
 10540 ;;		None
 10541 ;; Tracked objects:
 10542 ;;		On entry : 3F/0
 10543 ;;		On exit  : 3F/3B
 10544 ;;		Unchanged: 0/0
 10545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10550 ;;Total ram usage:        0 bytes
 10551 ;; Hardware stack levels used:    1
 10552 ;; Hardware stack levels required when called:   15
 10553 ;; This function calls:
 10554 ;;		Nothing
 10555 ;; This function is called by:
 10556 ;;		_eaDogM_WriteString
 10557 ;;		_send_lcd_cmd_dma
 10558 ;; This function uses a reentrant model
 10559 ;;
 10560                           
 10561                           	psect	text40
 10562  01BF0E                     __ptext40:
 10563                           	opt callstack 0
 10564  01BF0E                     _start_lcd:
 10565                           	opt callstack 12
 10566                           
 10567                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
 10568                           
 10569                           ; BSR set to: 0
 10570                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10571                           ;incstack = 0
 10572  01BF0E  013B               	movlb	59	; () banked
 10573  01BF10  8DFC               	bsf	252,6,b	;volatile
 10574                           
 10575                           ; BSR set to: 59
 10576                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10577  01BF12  0012               	return		;funcret
 10578  01BF14                     __end_of_start_lcd:
 10579                           	opt callstack 0
 10580                           
 10581 ;; *************** function _ringBufS_flush *****************
 10582 ;; Defined at:
 10583 ;;		line 76 in file "ringbufs.c"
 10584 ;; Parameters:    Size  Location     Type
 10585 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10586 ;;		 -> ring_buf1(67), 
 10587 ;;  clearBuffer     1  [STACK] const char 
 10588 ;; Auto vars:     Size  Location     Type
 10589 ;;		None
 10590 ;; Return value:  Size  Location     Type
 10591 ;;                  1  [STACK] void 
 10592 ;; Registers used:
 10593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10594 ;; Tracked objects:
 10595 ;;		On entry : 3F/0
 10596 ;;		On exit  : 0/0
 10597 ;;		Unchanged: 0/0
 10598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10603 ;;Total ram usage:        0 bytes
 10604 ;; Hardware stack levels used:    1
 10605 ;; Hardware stack levels required when called:   16
 10606 ;; This function calls:
 10607 ;;		_memset
 10608 ;; This function is called by:
 10609 ;;		_eaDogM_WriteString
 10610 ;;		_send_lcd_cmd_dma
 10611 ;; This function uses a reentrant model
 10612 ;;
 10613                           
 10614                           	psect	text41
 10615  01A8DE                     __ptext41:
 10616                           	opt callstack 0
 10617  01A8DE                     _ringBufS_flush:
 10618                           	opt callstack 11
 10619                           
 10620                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 10621                           ;stkvar	__this @ sp[(0)+-2]
 10622                           
 10623                           ; BSR set to: 59
 10624                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10625                           ;incstack = 0
 10626  01A8DE  0EFE               	movlw	-2
 10627  01A8E0  006F FF8C  F00B    	movff	plusw1,btemp+10
 10628  01A8E6  0EFF               	movlw	-1
 10629  01A8E8  006F FF8C  F00C    	movff	plusw1,btemp+11
 10630  01A8EE  0E42               	movlw	66
 10631  01A8F0  240B               	addwf	(btemp+10)^0,w,c
 10632  01A8F2  6ED9               	movwf	fsr2l,c
 10633  01A8F4  0E00               	movlw	0
 10634  01A8F6  200C               	addwfc	(btemp+11)^0,w,c
 10635  01A8F8  6EDA               	movwf	fsr2h,c
 10636  01A8FA  0E00               	movlw	0
 10637  01A8FC  6EDF               	movwf	indf2,c
 10638                           
 10639                           ;ringbufs.c: 79:  _this->head = 0;
 10640                           ;stkvar	__this @ sp[(0)+-2]
 10641  01A8FE  0EFE               	movlw	-2
 10642  01A900  006F FF8C  F00B    	movff	plusw1,btemp+10
 10643  01A906  0EFF               	movlw	-1
 10644  01A908  006F FF8C  F00C    	movff	plusw1,btemp+11
 10645  01A90E  0E40               	movlw	64
 10646  01A910  240B               	addwf	(btemp+10)^0,w,c
 10647  01A912  6ED9               	movwf	fsr2l,c
 10648  01A914  0E00               	movlw	0
 10649  01A916  200C               	addwfc	(btemp+11)^0,w,c
 10650  01A918  6EDA               	movwf	fsr2h,c
 10651  01A91A  0E00               	movlw	0
 10652  01A91C  6EDF               	movwf	indf2,c
 10653                           
 10654                           ;ringbufs.c: 80:  _this->tail = 0;
 10655                           ;stkvar	__this @ sp[(0)+-2]
 10656  01A91E  0EFE               	movlw	-2
 10657  01A920  006F FF8C  F00B    	movff	plusw1,btemp+10
 10658  01A926  0EFF               	movlw	-1
 10659  01A928  006F FF8C  F00C    	movff	plusw1,btemp+11
 10660  01A92E  0E41               	movlw	65
 10661  01A930  240B               	addwf	(btemp+10)^0,w,c
 10662  01A932  6ED9               	movwf	fsr2l,c
 10663  01A934  0E00               	movlw	0
 10664  01A936  200C               	addwfc	(btemp+11)^0,w,c
 10665  01A938  6EDA               	movwf	fsr2h,c
 10666  01A93A  0E00               	movlw	0
 10667  01A93C  6EDF               	movwf	indf2,c
 10668                           
 10669                           ;ringbufs.c: 81:  if (clearBuffer) {
 10670                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 10671  01A93E  0EFD               	movlw	-3
 10672  01A940  50E3               	movf	plusw1,w,c
 10673  01A942  B4D8               	btfsc	status,2,c
 10674  01A944  D011               	goto	l1591
 10675                           
 10676                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 10677  01A946  0E40               	movlw	64
 10678  01A948  6EE6               	movwf	postinc1,c
 10679  01A94A  0E00               	movlw	0
 10680  01A94C  6EE6               	movwf	postinc1,c
 10681  01A94E  0E00               	movlw	0
 10682  01A950  6EE6               	movwf	postinc1,c
 10683  01A952  0E00               	movlw	0
 10684  01A954  6EE6               	movwf	postinc1,c
 10685                           
 10686                           ;stkvar	__this @ sp[(-4)+-2]
 10687  01A956  0EFA               	movlw	-6
 10688  01A958  006F FF8F FFE6     	movff	plusw1,postinc1
 10689  01A95E  006F FF8F FFE6     	movff	plusw1,postinc1
 10690  01A964  EC90  F0B5         	call	_memset	;wreg free
 10691  01A968                     l1591:
 10692                           
 10693                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 10694  01A968  52E5               	movf	postdec1,f,c
 10695  01A96A  52E5               	movf	postdec1,f,c
 10696  01A96C  52E5               	movf	postdec1,f,c
 10697  01A96E  0012               	return		;funcret
 10698  01A970                     __end_of_ringBufS_flush:
 10699                           	opt callstack 0
 10700                           
 10701 ;; *************** function _memset *****************
 10702 ;; Defined at:
 10703 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 10704 ;; Parameters:    Size  Location     Type
 10705 ;;  dest            2  [STACK] PTR void 
 10706 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10707 ;;  c               2  [STACK] int 
 10708 ;;  n               2  [STACK] unsigned int 
 10709 ;; Auto vars:     Size  Location     Type
 10710 ;;  s               2  [STACK] PTR unsigned char 
 10711 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10712 ;;  k               2  [STACK] unsigned int 
 10713 ;; Return value:  Size  Location     Type
 10714 ;;                  2  [STACK] PTR void 
 10715 ;; Registers used:
 10716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10717 ;; Tracked objects:
 10718 ;;		On entry : 0/0
 10719 ;;		On exit  : 0/0
 10720 ;;		Unchanged: 0/0
 10721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10726 ;;Total ram usage:        0 bytes
 10727 ;; Hardware stack levels used:    1
 10728 ;; Hardware stack levels required when called:   15
 10729 ;; This function calls:
 10730 ;;		Nothing
 10731 ;; This function is called by:
 10732 ;;		_ringBufS_init
 10733 ;;		_ringBufS_flush
 10734 ;; This function uses a reentrant model
 10735 ;;
 10736                           
 10737                           	psect	text42
 10738  016B20                     __ptext42:
 10739                           	opt callstack 0
 10740  016B20                     _memset:
 10741                           	opt callstack 0
 10742                           
 10743                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10744  016B20  52E6               	movf	postinc1,f,c
 10745  016B22  52E6               	movf	postinc1,f,c
 10746  016B24  52E6               	movf	postinc1,f,c
 10747  016B26  52E6               	movf	postinc1,f,c
 10748                           
 10749                           ;stkvar	_dest @ sp[(-4)+-2]
 10750                           
 10751                           ;incstack = 0
 10752  016B28  0EFA               	movlw	-6
 10753  016B2A  006F FF8C  F00B    	movff	plusw1,btemp+10
 10754  016B30  0EFB               	movlw	-5
 10755  016B32  006F FF8C  F00C    	movff	plusw1,btemp+11
 10756                           
 10757                           ;stkvar	_s @ sp[(-4)+0]
 10758  016B38  0EFD               	movlw	-3
 10759  016B3A  0060  F033  FFE3   	movff	btemp+11,plusw1
 10760  016B40  0EFC               	movlw	-4
 10761  016B42  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10762                           
 10763                           ;stkvar	_n @ sp[(-4)+-6]
 10764  016B48  0EF6               	movlw	-10
 10765  016B4A  006F FF8C  F001    	movff	plusw1,btemp
 10766  016B50  0EF7               	movlw	-9
 10767  016B52  50E3               	movf	plusw1,w,c
 10768  016B54  1001               	iorwf	btemp^0,w,c
 10769  016B56  B4D8               	btfsc	status,2,c
 10770  016B58  D154               	goto	u10810
 10771                           
 10772                           ;stkvar	_c @ sp[(-4)+-4]
 10773                           ;stkvar	_s @ sp[(-4)+0]
 10774  016B5A  0EFC               	movlw	-4
 10775  016B5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10776  016B62  0EFD               	movlw	-3
 10777  016B64  006F FF8F FFDA     	movff	plusw1,fsr2h
 10778  016B6A  0EF8               	movlw	-8
 10779  016B6C  006F FF8F FFDF     	movff	plusw1,indf2
 10780                           
 10781                           ;stkvar	_c @ sp[(-4)+-4]
 10782                           ;stkvar	_n @ sp[(-4)+-6]
 10783                           ;stkvar	_s @ sp[(-4)+0]
 10784  016B72  0EFC               	movlw	-4
 10785  016B74  006F FF8C  F00B    	movff	plusw1,btemp+10
 10786  016B7A  0EFD               	movlw	-3
 10787  016B7C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10788  016B82  0EF6               	movlw	-10
 10789  016B84  50E3               	movf	plusw1,w,c
 10790  016B86  260B               	addwf	(btemp+10)^0,f,c
 10791  016B88  0EF7               	movlw	-9
 10792  016B8A  50E3               	movf	plusw1,w,c
 10793  016B8C  220C               	addwfc	(btemp+11)^0,f,c
 10794  016B8E  0EFF               	movlw	255
 10795  016B90  240B               	addwf	(btemp+10)^0,w,c
 10796  016B92  6ED9               	movwf	fsr2l,c
 10797  016B94  0EFF               	movlw	255
 10798  016B96  200C               	addwfc	(btemp+11)^0,w,c
 10799  016B98  6EDA               	movwf	fsr2h,c
 10800  016B9A  0EF8               	movlw	-8
 10801  016B9C  006F FF8F FFDF     	movff	plusw1,indf2
 10802                           
 10803                           ;stkvar	_n @ sp[(-4)+-6]
 10804  016BA2  0EF7               	movlw	-9
 10805  016BA4  50E3               	movf	plusw1,w,c
 10806  016BA6  E108               	bnz	l11691
 10807  016BA8  0EF6               	movlw	-10
 10808  016BAA  006F FF8C  F001    	movff	plusw1,btemp
 10809  016BB0  0E03               	movlw	3
 10810  016BB2  5E01               	subwf	btemp^0,f,c
 10811  016BB4  A0D8               	btfss	status,0,c
 10812  016BB6  D125               	goto	u10810
 10813  016BB8                     l11691:
 10814                           
 10815                           ;stkvar	_c @ sp[(-4)+-4]
 10816                           ;stkvar	_s @ sp[(-4)+0]
 10817  016BB8  0EFC               	movlw	-4
 10818  016BBA  006F FF8C  F00B    	movff	plusw1,btemp+10
 10819  016BC0  0EFD               	movlw	-3
 10820  016BC2  006F FF8C  F00C    	movff	plusw1,btemp+11
 10821  016BC8  0E01               	movlw	1
 10822  016BCA  240B               	addwf	(btemp+10)^0,w,c
 10823  016BCC  6ED9               	movwf	fsr2l,c
 10824  016BCE  0E00               	movlw	0
 10825  016BD0  200C               	addwfc	(btemp+11)^0,w,c
 10826  016BD2  6EDA               	movwf	fsr2h,c
 10827  016BD4  0EF8               	movlw	-8
 10828  016BD6  006F FF8F FFDF     	movff	plusw1,indf2
 10829                           
 10830                           ;stkvar	_c @ sp[(-4)+-4]
 10831                           ;stkvar	_s @ sp[(-4)+0]
 10832  016BDC  0EFC               	movlw	-4
 10833  016BDE  006F FF8C  F00B    	movff	plusw1,btemp+10
 10834  016BE4  0EFD               	movlw	-3
 10835  016BE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 10836  016BEC  0E02               	movlw	2
 10837  016BEE  240B               	addwf	(btemp+10)^0,w,c
 10838  016BF0  6ED9               	movwf	fsr2l,c
 10839  016BF2  0E00               	movlw	0
 10840  016BF4  200C               	addwfc	(btemp+11)^0,w,c
 10841  016BF6  6EDA               	movwf	fsr2h,c
 10842  016BF8  0EF8               	movlw	-8
 10843  016BFA  006F FF8F FFDF     	movff	plusw1,indf2
 10844                           
 10845                           ;stkvar	_c @ sp[(-4)+-4]
 10846                           ;stkvar	_n @ sp[(-4)+-6]
 10847                           ;stkvar	_s @ sp[(-4)+0]
 10848  016C00  0EFC               	movlw	-4
 10849  016C02  006F FF8C  F00B    	movff	plusw1,btemp+10
 10850  016C08  0EFD               	movlw	-3
 10851  016C0A  006F FF8C  F00C    	movff	plusw1,btemp+11
 10852  016C10  0EF6               	movlw	-10
 10853  016C12  50E3               	movf	plusw1,w,c
 10854  016C14  260B               	addwf	(btemp+10)^0,f,c
 10855  016C16  0EF7               	movlw	-9
 10856  016C18  50E3               	movf	plusw1,w,c
 10857  016C1A  220C               	addwfc	(btemp+11)^0,f,c
 10858  016C1C  0EFE               	movlw	254
 10859  016C1E  240B               	addwf	(btemp+10)^0,w,c
 10860  016C20  6ED9               	movwf	fsr2l,c
 10861  016C22  0EFF               	movlw	255
 10862  016C24  200C               	addwfc	(btemp+11)^0,w,c
 10863  016C26  6EDA               	movwf	fsr2h,c
 10864  016C28  0EF8               	movlw	-8
 10865  016C2A  006F FF8F FFDF     	movff	plusw1,indf2
 10866                           
 10867                           ;stkvar	_c @ sp[(-4)+-4]
 10868                           ;stkvar	_n @ sp[(-4)+-6]
 10869                           ;stkvar	_s @ sp[(-4)+0]
 10870  016C30  0EFC               	movlw	-4
 10871  016C32  006F FF8C  F00B    	movff	plusw1,btemp+10
 10872  016C38  0EFD               	movlw	-3
 10873  016C3A  006F FF8C  F00C    	movff	plusw1,btemp+11
 10874  016C40  0EF6               	movlw	-10
 10875  016C42  50E3               	movf	plusw1,w,c
 10876  016C44  260B               	addwf	(btemp+10)^0,f,c
 10877  016C46  0EF7               	movlw	-9
 10878  016C48  50E3               	movf	plusw1,w,c
 10879  016C4A  220C               	addwfc	(btemp+11)^0,f,c
 10880  016C4C  0EFD               	movlw	253
 10881  016C4E  240B               	addwf	(btemp+10)^0,w,c
 10882  016C50  6ED9               	movwf	fsr2l,c
 10883  016C52  0EFF               	movlw	255
 10884  016C54  200C               	addwfc	(btemp+11)^0,w,c
 10885  016C56  6EDA               	movwf	fsr2h,c
 10886  016C58  0EF8               	movlw	-8
 10887  016C5A  006F FF8F FFDF     	movff	plusw1,indf2
 10888                           
 10889                           ;stkvar	_n @ sp[(-4)+-6]
 10890  016C60  0EF7               	movlw	-9
 10891  016C62  50E3               	movf	plusw1,w,c
 10892  016C64  E108               	bnz	l11697
 10893  016C66  0EF6               	movlw	-10
 10894  016C68  006F FF8C  F001    	movff	plusw1,btemp
 10895  016C6E  0E07               	movlw	7
 10896  016C70  5E01               	subwf	btemp^0,f,c
 10897  016C72  A0D8               	btfss	status,0,c
 10898  016C74  D0C6               	goto	u10810
 10899  016C76                     l11697:
 10900                           
 10901                           ;stkvar	_c @ sp[(-4)+-4]
 10902                           ;stkvar	_s @ sp[(-4)+0]
 10903  016C76  0EFC               	movlw	-4
 10904  016C78  006F FF8C  F00B    	movff	plusw1,btemp+10
 10905  016C7E  0EFD               	movlw	-3
 10906  016C80  006F FF8C  F00C    	movff	plusw1,btemp+11
 10907  016C86  0E03               	movlw	3
 10908  016C88  240B               	addwf	(btemp+10)^0,w,c
 10909  016C8A  6ED9               	movwf	fsr2l,c
 10910  016C8C  0E00               	movlw	0
 10911  016C8E  200C               	addwfc	(btemp+11)^0,w,c
 10912  016C90  6EDA               	movwf	fsr2h,c
 10913  016C92  0EF8               	movlw	-8
 10914  016C94  006F FF8F FFDF     	movff	plusw1,indf2
 10915                           
 10916                           ;stkvar	_c @ sp[(-4)+-4]
 10917                           ;stkvar	_n @ sp[(-4)+-6]
 10918                           ;stkvar	_s @ sp[(-4)+0]
 10919  016C9A  0EFC               	movlw	-4
 10920  016C9C  006F FF8C  F00B    	movff	plusw1,btemp+10
 10921  016CA2  0EFD               	movlw	-3
 10922  016CA4  006F FF8C  F00C    	movff	plusw1,btemp+11
 10923  016CAA  0EF6               	movlw	-10
 10924  016CAC  50E3               	movf	plusw1,w,c
 10925  016CAE  260B               	addwf	(btemp+10)^0,f,c
 10926  016CB0  0EF7               	movlw	-9
 10927  016CB2  50E3               	movf	plusw1,w,c
 10928  016CB4  220C               	addwfc	(btemp+11)^0,f,c
 10929  016CB6  0EFC               	movlw	252
 10930  016CB8  240B               	addwf	(btemp+10)^0,w,c
 10931  016CBA  6ED9               	movwf	fsr2l,c
 10932  016CBC  0EFF               	movlw	255
 10933  016CBE  200C               	addwfc	(btemp+11)^0,w,c
 10934  016CC0  6EDA               	movwf	fsr2h,c
 10935  016CC2  0EF8               	movlw	-8
 10936  016CC4  006F FF8F FFDF     	movff	plusw1,indf2
 10937                           
 10938                           ;stkvar	_n @ sp[(-4)+-6]
 10939  016CCA  0EF7               	movlw	-9
 10940  016CCC  50E3               	movf	plusw1,w,c
 10941  016CCE  E108               	bnz	l11703
 10942  016CD0  0EF6               	movlw	-10
 10943  016CD2  006F FF8C  F001    	movff	plusw1,btemp
 10944  016CD8  0E09               	movlw	9
 10945  016CDA  5E01               	subwf	btemp^0,f,c
 10946  016CDC  A0D8               	btfss	status,0,c
 10947  016CDE  D091               	goto	u10810
 10948  016CE0                     l11703:
 10949                           
 10950                           ;stkvar	_s @ sp[(-4)+0]
 10951  016CE0  0EFC               	movlw	-4
 10952  016CE2  006F FF8C  F00B    	movff	plusw1,btemp+10
 10953  016CE8  1E0B               	comf	(btemp+10)^0,f,c
 10954  016CEA  0EFD               	movlw	-3
 10955  016CEC  006F FF8C  F00C    	movff	plusw1,btemp+11
 10956  016CF2  1E0C               	comf	(btemp+11)^0,f,c
 10957  016CF4  2A0B               	incf	(btemp+10)^0,f,c
 10958  016CF6  B4D8               	btfsc	status,2,c
 10959  016CF8  2A0C               	incf	(btemp+11)^0,f,c
 10960  016CFA  0E03               	movlw	3
 10961  016CFC  160B               	andwf	(btemp+10)^0,f,c
 10962  016CFE  0E00               	movlw	0
 10963  016D00  160C               	andwf	(btemp+11)^0,f,c
 10964                           
 10965                           ;stkvar	_k @ sp[(-4)+2]
 10966  016D02  0EFE               	movlw	-2
 10967  016D04  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10968  016D0A  0EFF               	movlw	-1
 10969  016D0C  0060  F033  FFE3   	movff	btemp+11,plusw1
 10970                           
 10971                           ;stkvar	_k @ sp[(-4)+2]
 10972                           ;stkvar	_s @ sp[(-4)+0]
 10973  016D12  0EFC               	movlw	-4
 10974  016D14  50E3               	movf	plusw1,w,c
 10975  016D16  6E01               	movwf	btemp^0,c
 10976  016D18  0EFE               	movlw	-2
 10977  016D1A  50E3               	movf	plusw1,w,c
 10978  016D1C  2601               	addwf	btemp^0,f,c
 10979  016D1E  0EFC               	movlw	-4
 10980  016D20  0060  F007  FFE3   	movff	btemp,plusw1
 10981  016D26  0EFD               	movlw	-3
 10982  016D28  50E3               	movf	plusw1,w,c
 10983  016D2A  6E01               	movwf	btemp^0,c
 10984  016D2C  0EFF               	movlw	-1
 10985  016D2E  50E3               	movf	plusw1,w,c
 10986  016D30  2201               	addwfc	btemp^0,f,c
 10987  016D32  0EFD               	movlw	-3
 10988  016D34  0060  F007  FFE3   	movff	btemp,plusw1
 10989                           
 10990                           ;stkvar	_k @ sp[(-4)+2]
 10991                           ;stkvar	_n @ sp[(-4)+-6]
 10992  016D3A  0EF6               	movlw	-10
 10993  016D3C  50E3               	movf	plusw1,w,c
 10994  016D3E  6E01               	movwf	btemp^0,c
 10995  016D40  0EFE               	movlw	-2
 10996  016D42  50E3               	movf	plusw1,w,c
 10997  016D44  5E01               	subwf	btemp^0,f,c
 10998  016D46  0EF6               	movlw	-10
 10999  016D48  0060  F007  FFE3   	movff	btemp,plusw1
 11000  016D4E  0EF7               	movlw	-9
 11001  016D50  50E3               	movf	plusw1,w,c
 11002  016D52  6E01               	movwf	btemp^0,c
 11003  016D54  0EFF               	movlw	-1
 11004  016D56  50E3               	movf	plusw1,w,c
 11005  016D58  5A01               	subwfb	btemp^0,f,c
 11006  016D5A  0EF7               	movlw	-9
 11007  016D5C  0060  F007  FFE3   	movff	btemp,plusw1
 11008  016D62  0EFC               	movlw	252
 11009  016D64  6E0B               	movwf	(btemp+10)^0,c
 11010  016D66  0EFF               	movlw	255
 11011  016D68  6E0C               	movwf	(btemp+11)^0,c
 11012                           
 11013                           ;stkvar	_n @ sp[(-4)+-6]
 11014  016D6A  0EF6               	movlw	-10
 11015  016D6C  006F FF8C  F001    	movff	plusw1,btemp
 11016  016D72  500B               	movf	(btemp+10)^0,w,c
 11017  016D74  1601               	andwf	btemp^0,f,c
 11018  016D76  0EF6               	movlw	-10
 11019  016D78  0060  F007  FFE3   	movff	btemp,plusw1
 11020  016D7E  0EF7               	movlw	-9
 11021  016D80  006F FF8C  F001    	movff	plusw1,btemp
 11022  016D86  500C               	movf	(btemp+11)^0,w,c
 11023  016D88  1601               	andwf	btemp^0,f,c
 11024  016D8A  0EF7               	movlw	-9
 11025  016D8C  D02E               	goto	L9
 11026  016D8E                     l11711:
 11027                           
 11028                           ;stkvar	_c @ sp[(-4)+-4]
 11029                           ;stkvar	_s @ sp[(-4)+0]
 11030  016D8E  0EFC               	movlw	-4
 11031  016D90  006F FF8F FFD9     	movff	plusw1,fsr2l
 11032  016D96  0EFD               	movlw	-3
 11033  016D98  006F FF8F FFDA     	movff	plusw1,fsr2h
 11034  016D9E  0EF8               	movlw	-8
 11035  016DA0  006F FF8F FFDF     	movff	plusw1,indf2
 11036                           
 11037                           ;stkvar	_n @ sp[(-4)+-6]
 11038  016DA6  0EF6               	movlw	-10
 11039  016DA8  006F FF8C  F001    	movff	plusw1,btemp
 11040  016DAE  0E01               	movlw	1
 11041  016DB0  5E01               	subwf	btemp^0,f,c
 11042  016DB2  0EF6               	movlw	-10
 11043  016DB4  0060  F007  FFE3   	movff	btemp,plusw1
 11044  016DBA  0EF7               	movlw	-9
 11045  016DBC  006F FF8C  F001    	movff	plusw1,btemp
 11046  016DC2  0E00               	movlw	0
 11047  016DC4  5A01               	subwfb	btemp^0,f,c
 11048  016DC6  0EF7               	movlw	-9
 11049  016DC8  0060  F007  FFE3   	movff	btemp,plusw1
 11050                           
 11051                           ;stkvar	_s @ sp[(-4)+0]
 11052  016DCE  0EFC               	movlw	-4
 11053  016DD0  50E3               	movf	plusw1,w,c
 11054  016DD2  0F01               	addlw	1
 11055  016DD4  6E01               	movwf	btemp^0,c
 11056  016DD6  0EFC               	movlw	-4
 11057  016DD8  0060  F007  FFE3   	movff	btemp,plusw1
 11058  016DDE  6A01               	clrf	btemp^0,c
 11059  016DE0  0EFD               	movlw	-3
 11060  016DE2  50E3               	movf	plusw1,w,c
 11061  016DE4  2001               	addwfc	btemp^0,w,c
 11062  016DE6  6E01               	movwf	btemp^0,c
 11063  016DE8  0EFD               	movlw	-3
 11064  016DEA                     L9:
 11065  016DEA  0060  F007  FFE3   	movff	btemp,plusw1
 11066                           
 11067                           ;stkvar	_n @ sp[(-4)+-6]
 11068  016DF0  0EF6               	movlw	-10
 11069  016DF2  006F FF8C  F001    	movff	plusw1,btemp
 11070  016DF8  0EF7               	movlw	-9
 11071  016DFA  50E3               	movf	plusw1,w,c
 11072  016DFC  1001               	iorwf	btemp^0,w,c
 11073  016DFE  A4D8               	btfss	status,2,c
 11074  016E00  D7C6               	goto	l11711
 11075  016E02                     u10810:
 11076                           
 11077                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 11078  016E02  0EF6               	movlw	246
 11079  016E04  26E1               	addwf	fsr1l,f,c
 11080  016E06  0EFF               	movlw	255
 11081  016E08  22E2               	addwfc	fsr1h,f,c
 11082  016E0A  0012               	return		;funcret
 11083  016E0C                     __end_of_memset:
 11084                           	opt callstack 0
 11085                           
 11086 ;; *************** function _printf *****************
 11087 ;; Defined at:
 11088 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 11089 ;; Parameters:    Size  Location     Type
 11090 ;;  fmt             2  [STACK] PTR const unsigned char 
 11091 ;;		 -> STR_45(3), STR_44(3), STR_43(3), 
 11092 ;; Auto vars:     Size  Location     Type
 11093 ;;  ap              2  [STACK] PTR void [1]
 11094 ;;		 -> ?_printf(2), ?_sprintf(2), 
 11095 ;;  ret             2    0        int 
 11096 ;; Return value:  Size  Location     Type
 11097 ;;                  2  [STACK] int 
 11098 ;; Registers used:
 11099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11100 ;; Tracked objects:
 11101 ;;		On entry : 3F/3B
 11102 ;;		On exit  : 3F/0
 11103 ;;		Unchanged: 0/0
 11104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11109 ;;Total ram usage:        0 bytes
 11110 ;; Hardware stack levels used:    1
 11111 ;; Hardware stack levels required when called:   23
 11112 ;; This function calls:
 11113 ;;		_vfprintf
 11114 ;; This function is called by:
 11115 ;;		_eaDogM_WriteString
 11116 ;;		_send_lcd_cmd_dma
 11117 ;; This function uses a reentrant model
 11118 ;;
 11119                           
 11120                           	psect	text43
 11121  01AE70                     __ptext43:
 11122                           	opt callstack 0
 11123  01AE70                     _printf:
 11124                           	opt callstack 0
 11125                           
 11126                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11127  01AE70  52E6               	movf	postinc1,f,c
 11128  01AE72  52E6               	movf	postinc1,f,c
 11129                           
 11130                           ;stkvar	?_printf @ sp[(-2)+-3]
 11131                           
 11132                           ;incstack = 0
 11133  01AE74  0EFB               	movlw	251
 11134  01AE76  24E1               	addwf	fsr1l,w,c
 11135  01AE78  6E0B               	movwf	(btemp+10)^0,c
 11136  01AE7A  0EFF               	movlw	255
 11137  01AE7C  20E2               	addwfc	fsr1h,w,c
 11138  01AE7E  6E0C               	movwf	(btemp+11)^0,c
 11139                           
 11140                           ;stkvar	_ap @ sp[(-2)+0]
 11141  01AE80  0EFF               	movlw	-1
 11142  01AE82  0060  F033  FFE3   	movff	btemp+11,plusw1
 11143  01AE88  0EFE               	movlw	-2
 11144  01AE8A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11145                           
 11146                           ;stkvar	_ap @ sp[(-2)+0]
 11147  01AE90  0EFE               	movlw	254
 11148  01AE92  24E1               	addwf	fsr1l,w,c
 11149  01AE94  6E01               	movwf	btemp^0,c
 11150  01AE96  0EFF               	movlw	255
 11151  01AE98  20E2               	addwfc	fsr1h,w,c
 11152  01AE9A  6E02               	movwf	(btemp+1)^0,c
 11153  01AE9C  0060  F007  FFE6   	movff	btemp,postinc1
 11154  01AEA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11155                           
 11156                           ;stkvar	_fmt @ sp[(-4)+-3]
 11157  01AEA8  0EF9               	movlw	-7
 11158  01AEAA  006F FF8F FFE6     	movff	plusw1,postinc1
 11159  01AEB0  006F FF8F FFE6     	movff	plusw1,postinc1
 11160  01AEB6  0E00               	movlw	0
 11161  01AEB8  6EE6               	movwf	postinc1,c
 11162  01AEBA  0E00               	movlw	0
 11163  01AEBC  6EE6               	movwf	postinc1,c
 11164  01AEBE  EC8A  F0D2         	call	_vfprintf	;wreg free
 11165                           
 11166                           ; BSR set to: 0
 11167                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 11168  01AEC2  52E5               	movf	postdec1,f,c
 11169  01AEC4  52E5               	movf	postdec1,f,c
 11170  01AEC6  52E5               	movf	postdec1,f,c
 11171  01AEC8  50E7               	movf	indf1,w,c
 11172  01AECA  5EE1               	subwf	fsr1l,f,c
 11173  01AECC  0E00               	movlw	0
 11174  01AECE  5AE2               	subwfb	fsr1h,f,c
 11175  01AED0  0012               	return		;funcret
 11176  01AED2                     __end_of_printf:
 11177                           	opt callstack 0
 11178                           
 11179 ;; *************** function _vfprintf *****************
 11180 ;; Defined at:
 11181 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11182 ;; Parameters:    Size  Location     Type
 11183 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11184 ;;		 -> f(6), NULL(0), 
 11185 ;;  fmt             2  [STACK] PTR const unsigned char 
 11186 ;;		 -> STR_65(103), STR_63(3), STR_62(3), STR_61(19), 
 11187 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 11188 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 11189 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 11190 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 11191 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 11192 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 11193 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 11194 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 11195 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 11196 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 11197 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 11198 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 11199 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 11200 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 11201 ;;		 -> STR_1(17), 
 11202 ;;  ap              2  [STACK] PTR PTR void 
 11203 ;;		 -> ap(2), ap(2), 
 11204 ;; Auto vars:     Size  Location     Type
 11205 ;;  cfmt            2  [STACK] PTR unsigned char 
 11206 ;;		 -> STR_65(103), STR_63(3), STR_62(3), STR_61(19), 
 11207 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 11208 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 11209 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 11210 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 11211 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 11212 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 11213 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 11214 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 11215 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 11216 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 11217 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 11218 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 11219 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 11220 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 11221 ;;		 -> STR_1(17), 
 11222 ;; Return value:  Size  Location     Type
 11223 ;;                  2  [STACK] int 
 11224 ;; Registers used:
 11225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11226 ;; Tracked objects:
 11227 ;;		On entry : 0/2
 11228 ;;		On exit  : 3F/0
 11229 ;;		Unchanged: 0/0
 11230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11235 ;;Total ram usage:        0 bytes
 11236 ;; Hardware stack levels used:    1
 11237 ;; Hardware stack levels required when called:   22
 11238 ;; This function calls:
 11239 ;;		_vfpfcnvrt
 11240 ;; This function is called by:
 11241 ;;		_sprintf
 11242 ;;		_printf
 11243 ;; This function uses a reentrant model
 11244 ;;
 11245                           
 11246                           	psect	text44
 11247  01A514                     __ptext44:
 11248                           	opt callstack 0
 11249  01A514                     _vfprintf:
 11250                           	opt callstack 0
 11251                           
 11252                           ; BSR set to: 0
 11253                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11254  01A514  52E6               	movf	postinc1,f,c
 11255  01A516  52E6               	movf	postinc1,f,c
 11256                           
 11257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 11258                           ;stkvar	_fmt @ sp[(-2)+-4]
 11259                           
 11260                           ;incstack = 0
 11261 ;; hardware stack exceeded
 11262  01A518  0EFA               	movlw	-6
 11263  01A51A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11264  01A520  0EFB               	movlw	-5
 11265  01A522  006F FF8C  F00C    	movff	plusw1,btemp+11
 11266                           
 11267                           ;stkvar	_cfmt @ sp[(-2)+0]
 11268  01A528  0EFF               	movlw	-1
 11269  01A52A  0060  F033  FFE3   	movff	btemp+11,plusw1
 11270  01A530  0EFE               	movlw	-2
 11271  01A532  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11272                           
 11273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 11274  01A538  0100               	movlb	0	; () banked
 11275  01A53A  6BAE               	clrf	_nout& (0+255),b
 11276  01A53C  6BAF               	clrf	(_nout+1)& (0+255),b
 11277                           
 11278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 11279  01A53E  D021               	goto	l12535
 11280  01A540                     l12533:
 11281                           
 11282                           ; BSR set to: 0
 11283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 11284                           ;stkvar	_ap @ sp[(-2)+-6]
 11285  01A540  0EF8               	movlw	-8
 11286  01A542  006F FF8F FFE6     	movff	plusw1,postinc1
 11287  01A548  006F FF8F FFE6     	movff	plusw1,postinc1
 11288                           
 11289                           ;stkvar	_cfmt @ sp[(-4)+0]
 11290  01A54E  0EFC               	movlw	252
 11291  01A550  24E1               	addwf	fsr1l,w,c
 11292  01A552  6E01               	movwf	btemp^0,c
 11293  01A554  0EFF               	movlw	255
 11294  01A556  20E2               	addwfc	fsr1h,w,c
 11295  01A558  6E02               	movwf	(btemp+1)^0,c
 11296  01A55A  0060  F007  FFE6   	movff	btemp,postinc1
 11297  01A560  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11298                           
 11299                           ;stkvar	_fp @ sp[(-6)+-2]
 11300  01A566  0EF8               	movlw	-8
 11301  01A568  006F FF8F FFE6     	movff	plusw1,postinc1
 11302  01A56E  006F FF8F FFE6     	movff	plusw1,postinc1
 11303  01A574  ECC9  F091         	call	_vfpfcnvrt	;wreg free
 11304  01A578  5001               	movf	btemp^0,w,c
 11305  01A57A  0100               	movlb	0	; () banked
 11306  01A57C  27AE               	addwf	_nout& (0+255),f,b
 11307  01A57E  5002               	movf	(btemp+1)^0,w,c
 11308  01A580  23AF               	addwfc	(_nout+1)& (0+255),f,b
 11309  01A582                     l12535:
 11310                           
 11311                           ; BSR set to: 0
 11312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 11313                           ;stkvar	_cfmt @ sp[(-2)+0]
 11314  01A582  50E1               	movf	fsr1l,w,c
 11315  01A584  0FFE               	addlw	-2
 11316  01A586  6ED9               	movwf	fsr2l,c
 11317  01A588  50E2               	movf	fsr1h,w,c
 11318  01A58A  6EDA               	movwf	fsr2h,c
 11319  01A58C  0EFF               	movlw	255
 11320  01A58E  22DA               	addwfc	fsr2h,f,c
 11321  01A590  006F FF7B FFF6     	movff	postinc2,tblptrl
 11322  01A596  006F FF77 FFF7     	movff	postdec2,tblptrh
 11323  01A59C                     	if	0	;tblptru may be non-zero
 11324  01A59C                     	endif
 11325  01A59C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11326  01A59C  0E00               	movlw	low (__mediumconst shr (0+16))
 11327  01A59E  6EF8               	movwf	tblptru,c
 11328  01A5A0                     	endif
 11329  01A5A0  0008               	tblrd		*
 11330  01A5A2  50F5               	movf	tablat,w,c
 11331  01A5A4  0900               	iorlw	0
 11332  01A5A6  A4D8               	btfss	status,2,c
 11333  01A5A8  D7CB               	goto	l12533
 11334                           
 11335                           ; BSR set to: 0
 11336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 11337  01A5AA  0060  F2B8  F001   	movff	_nout,btemp
 11338  01A5B0  0060  F2BC  F002   	movff	_nout+1,btemp+1
 11339                           
 11340                           ; BSR set to: 0
 11341                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 11342  01A5B6  0EF8               	movlw	248
 11343  01A5B8  26E1               	addwf	fsr1l,f,c
 11344  01A5BA  0EFF               	movlw	255
 11345  01A5BC  22E2               	addwfc	fsr1h,f,c
 11346  01A5BE  0012               	return		;funcret
 11347  01A5C0                     __end_of_vfprintf:
 11348                           	opt callstack 0
 11349                           
 11350 ;; *************** function _vfpfcnvrt *****************
 11351 ;; Defined at:
 11352 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11353 ;; Parameters:    Size  Location     Type
 11354 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11355 ;;		 -> f(6), NULL(0), 
 11356 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 11357 ;;		 -> cfmt(2), 
 11358 ;;  ap              2  [STACK] PTR PTR void 
 11359 ;;		 -> ap(2), ap(2), 
 11360 ;; Auto vars:     Size  Location     Type
 11361 ;;  llu             8  [STACK] unsigned long long 
 11362 ;;  ll              8  [STACK] long long 
 11363 ;;  f               4  [STACK] long long 
 11364 ;;  ct              3  [STACK] unsigned char [3]
 11365 ;;  vp              3    0        PTR void 
 11366 ;;  cp              2  [STACK] PTR unsigned char 
 11367 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 11368 ;;		 -> D.lcd(480), D(482), T(144), STR_3(6), 
 11369 ;;		 -> V(191), 
 11370 ;;  i               2    0        int 
 11371 ;;  done            2    0        int 
 11372 ;;  c               1  [STACK] unsigned char 
 11373 ;; Return value:  Size  Location     Type
 11374 ;;                  2  [STACK] int 
 11375 ;; Registers used:
 11376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11377 ;; Tracked objects:
 11378 ;;		On entry : 0/0
 11379 ;;		On exit  : 0/0
 11380 ;;		Unchanged: 0/0
 11381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11386 ;;Total ram usage:        0 bytes
 11387 ;; Hardware stack levels used:    1
 11388 ;; Hardware stack levels required when called:   21
 11389 ;; This function calls:
 11390 ;;		_atoi
 11391 ;;		_ctoa
 11392 ;;		_dtoa
 11393 ;;		_efgtoa
 11394 ;;		_fputc
 11395 ;;		_isdigit
 11396 ;;		_isupper
 11397 ;;		_stoa
 11398 ;;		_strncmp
 11399 ;;		_tolower
 11400 ;;		_utoa
 11401 ;;		_xtoa
 11402 ;; This function is called by:
 11403 ;;		_vfprintf
 11404 ;; This function uses a reentrant model
 11405 ;;
 11406                           
 11407                           	psect	text45
 11408  012392                     __ptext45:
 11409                           	opt callstack 0
 11410  012392                     _vfpfcnvrt:
 11411                           	opt callstack 0
 11412                           
 11413                           ; BSR set to: 0
 11414                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11415  012392  0E20               	movlw	32
 11416  012394  26E1               	addwf	fsr1l,f,c
 11417  012396  0E00               	movlw	0
 11418  012398  22E2               	addwfc	fsr1h,f,c
 11419                           
 11420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 11421                           ;stkvar	_fmt @ sp[(-32)+-4]
 11422                           
 11423                           ;incstack = 0
 11424 ;; hardware stack exceeded
 11425  01239A  0EDC               	movlw	-36
 11426  01239C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11427  0123A2  0EDD               	movlw	-35
 11428  0123A4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11429  0123AA  006F FF7B FFF6     	movff	postinc2,tblptrl
 11430  0123B0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11431  0123B6                     	if	0	;tblptru may be non-zero
 11432  0123B6                     	endif
 11433  0123B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11434  0123B6  0E00               	movlw	low (__mediumconst shr (0+16))
 11435  0123B8  6EF8               	movwf	tblptru,c
 11436  0123BA                     	endif
 11437  0123BA  0008               	tblrd		*
 11438  0123BC  50F5               	movf	tablat,w,c
 11439  0123BE  0A25               	xorlw	37
 11440  0123C0  A4D8               	btfss	status,2,c
 11441  0123C2  EF70  F099         	goto	l12479
 11442                           
 11443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 11444                           ;stkvar	_fmt @ sp[(-32)+-4]
 11445  0123C6  0EDC               	movlw	-36
 11446  0123C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11447  0123CE  0EDD               	movlw	-35
 11448  0123D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11449  0123D6  2ADE               	incf	postinc2,f,c
 11450  0123D8  0E00               	movlw	0
 11451  0123DA  22DD               	addwfc	postdec2,f,c
 11452                           
 11453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 11454  0123DC  6A3A               	clrf	_width^0,c
 11455  0123DE  6A3B               	clrf	(_width+1)^0,c
 11456  0123E0  6A3E               	clrf	_flags^0,c
 11457  0123E2  6A3F               	clrf	(_flags+1)^0,c
 11458                           
 11459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 11460  0123E4  683C               	setf	_prec^0,c
 11461  0123E6  683D               	setf	(_prec+1)^0,c
 11462                           
 11463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 11464                           ;stkvar	_fmt @ sp[(-32)+-4]
 11465  0123E8  0EDC               	movlw	-36
 11466  0123EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11467  0123F0  0EDD               	movlw	-35
 11468  0123F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11469  0123F8  006F FF7B FFF6     	movff	postinc2,tblptrl
 11470  0123FE  006F FF77 FFF7     	movff	postdec2,tblptrh
 11471  012404                     	if	0	;tblptru may be non-zero
 11472  012404                     	endif
 11473  012404                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11474  012404  0E00               	movlw	low (__mediumconst shr (0+16))
 11475  012406  6EF8               	movwf	tblptru,c
 11476  012408                     	endif
 11477  012408  0008               	tblrd		*
 11478  01240A  50F5               	movf	tablat,w,c
 11479  01240C  0A2A               	xorlw	42
 11480  01240E  A4D8               	btfss	status,2,c
 11481  012410  D031               	goto	l12297
 11482                           
 11483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 11484                           ;stkvar	_fmt @ sp[(-32)+-4]
 11485  012412  0EDC               	movlw	-36
 11486  012414  006F FF8F FFD9     	movff	plusw1,fsr2l
 11487  01241A  0EDD               	movlw	-35
 11488  01241C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11489  012422  2ADE               	incf	postinc2,f,c
 11490  012424  0E00               	movlw	0
 11491  012426  22DD               	addwfc	postdec2,f,c
 11492                           
 11493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 11494                           ;stkvar	_ap @ sp[(-32)+-6]
 11495  012428  0EDA               	movlw	-38
 11496  01242A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11497  012430  0EDB               	movlw	-37
 11498  012432  006F FF8F FFDA     	movff	plusw1,fsr2h
 11499  012438  0E02               	movlw	2
 11500  01243A  5EDE               	subwf	postinc2,f,c
 11501  01243C  0E00               	movlw	0
 11502  01243E  5ADD               	subwfb	postdec2,f,c
 11503  012440  006F FF78  F00B    	movff	postinc2,btemp+10
 11504  012446  006F FF74  F00C    	movff	postdec2,btemp+11
 11505  01244C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11506  012452  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11507  012458  006F FF78  F03A    	movff	postinc2,_width
 11508  01245E  006F FF74  F03B    	movff	postdec2,_width+1
 11509                           
 11510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 11511  012464  AE3B               	btfss	(_width+1)^0,7,c
 11512  012466  D066               	goto	u11940
 11513                           
 11514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 11515  012468  803E               	bsf	_flags^0,0,c
 11516                           
 11517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 11518  01246A  6C3A               	negf	_width^0,c
 11519  01246C  1E3B               	comf	(_width+1)^0,f,c
 11520  01246E  B0D8               	btfsc	status,0,c
 11521  012470  2A3B               	incf	(_width+1)^0,f,c
 11522  012472  D060               	goto	u11940
 11523  012474                     l12297:
 11524                           
 11525                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 11526                           ;stkvar	_fmt @ sp[(-32)+-4]
 11527  012474  0EDC               	movlw	-36
 11528  012476  006F FF8F FFD9     	movff	plusw1,fsr2l
 11529  01247C  0EDD               	movlw	-35
 11530  01247E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11531  012484  006F FF78  F00B    	movff	postinc2,btemp+10
 11532  01248A  006F FF74  F00C    	movff	postdec2,btemp+11
 11533  012490  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11534  012496  0060  F033  FFE6   	movff	btemp+11,postinc1
 11535  01249C  EC0D  F0BB         	call	_atoi	;wreg free
 11536  0124A0  0060  F004  F03A   	movff	btemp,_width
 11537  0124A6  0060  F008  F03B   	movff	btemp+1,_width+1
 11538                           
 11539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11540  0124AC  D00B               	goto	l12301
 11541  0124AE                     l12299:
 11542                           
 11543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 11544                           ;stkvar	_fmt @ sp[(-32)+-4]
 11545  0124AE  0EDC               	movlw	-36
 11546  0124B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11547  0124B6  0EDD               	movlw	-35
 11548  0124B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11549  0124BE  2ADE               	incf	postinc2,f,c
 11550  0124C0  0E00               	movlw	0
 11551  0124C2  22DD               	addwfc	postdec2,f,c
 11552  0124C4                     l12301:
 11553  0124C4  0ED0               	movlw	208
 11554  0124C6  6E0B               	movwf	(btemp+10)^0,c
 11555  0124C8  0EFF               	movlw	255
 11556  0124CA  6E0C               	movwf	(btemp+11)^0,c
 11557                           
 11558                           ;stkvar	_fmt @ sp[(-32)+-4]
 11559  0124CC  0EDC               	movlw	-36
 11560  0124CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11561  0124D4  0EDD               	movlw	-35
 11562  0124D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11563  0124DC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11564  0124E2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11565  0124E8                     	if	0	;tblptru may be non-zero
 11566  0124E8                     	endif
 11567  0124E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11568  0124E8  0E00               	movlw	low (__mediumconst shr (0+16))
 11569  0124EA  6EF8               	movwf	tblptru,c
 11570  0124EC                     	endif
 11571  0124EC  0008               	tblrd		*
 11572  0124EE  50F5               	movf	tablat,w,c
 11573  0124F0  6E09               	movwf	(btemp+8)^0,c
 11574  0124F2  6A0A               	clrf	(btemp+9)^0,c
 11575  0124F4  500B               	movf	(btemp+10)^0,w,c
 11576  0124F6  2609               	addwf	(btemp+8)^0,f,c
 11577  0124F8  500C               	movf	(btemp+11)^0,w,c
 11578  0124FA  220A               	addwfc	(btemp+9)^0,f,c
 11579  0124FC  500A               	movf	(btemp+9)^0,w,c
 11580  0124FE  E106               	bnz	u11920
 11581  012500  0E0A               	movlw	10
 11582  012502  5C09               	subwf	(btemp+8)^0,w,c
 11583  012504  B0D8               	btfsc	status,0,c
 11584  012506  D002               	goto	u11920
 11585  012508  0E01               	movlw	1
 11586  01250A  D001               	goto	u11930
 11587  01250C                     u11920:
 11588  01250C  0E00               	movlw	0
 11589  01250E                     u11930:
 11590  01250E  6E0B               	movwf	(btemp+10)^0,c
 11591  012510  6A0C               	clrf	(btemp+11)^0,c
 11592                           
 11593                           ;stkvar	_vfpfcnvrt$5545 @ sp[(-32)+4]
 11594  012512  0EE4               	movlw	-28
 11595  012514  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11596  01251A  0EE5               	movlw	-27
 11597  01251C  0060  F033  FFE3   	movff	btemp+11,plusw1
 11598                           
 11599                           ;stkvar	_vfpfcnvrt$5545 @ sp[(-32)+4]
 11600  012522  0EE4               	movlw	-28
 11601  012524  006F FF8C  F001    	movff	plusw1,btemp
 11602  01252A  0EE5               	movlw	-27
 11603  01252C  50E3               	movf	plusw1,w,c
 11604  01252E  1001               	iorwf	btemp^0,w,c
 11605  012530  A4D8               	btfss	status,2,c
 11606  012532  D7BD               	goto	l12299
 11607  012534                     u11940:
 11608                           
 11609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 11610                           ;stkvar	_fmt @ sp[(-32)+-4]
 11611  012534  0EDC               	movlw	-36
 11612  012536  006F FF8F FFD9     	movff	plusw1,fsr2l
 11613  01253C  0EDD               	movlw	-35
 11614  01253E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11615  012544  006F FF7B FFF6     	movff	postinc2,tblptrl
 11616  01254A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11617  012550                     	if	0	;tblptru may be non-zero
 11618  012550                     	endif
 11619  012550                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11620  012550  0E00               	movlw	low (__mediumconst shr (0+16))
 11621  012552  6EF8               	movwf	tblptru,c
 11622  012554                     	endif
 11623  012554  0008               	tblrd		*
 11624  012556  50F5               	movf	tablat,w,c
 11625  012558  0A2E               	xorlw	46
 11626  01255A  A4D8               	btfss	status,2,c
 11627  01255C  D0AC               	goto	u11990
 11628                           
 11629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 11630  01255E  6A3C               	clrf	_prec^0,c
 11631  012560  6A3D               	clrf	(_prec+1)^0,c
 11632                           
 11633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 11634                           ;stkvar	_fmt @ sp[(-32)+-4]
 11635  012562  0EDC               	movlw	-36
 11636  012564  006F FF8F FFD9     	movff	plusw1,fsr2l
 11637  01256A  0EDD               	movlw	-35
 11638  01256C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11639  012572  2ADE               	incf	postinc2,f,c
 11640  012574  0E00               	movlw	0
 11641  012576  22DD               	addwfc	postdec2,f,c
 11642                           
 11643                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 11644                           ;stkvar	_fmt @ sp[(-32)+-4]
 11645  012578  0EDC               	movlw	-36
 11646  01257A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11647  012580  0EDD               	movlw	-35
 11648  012582  006F FF8F FFDA     	movff	plusw1,fsr2h
 11649  012588  006F FF7B FFF6     	movff	postinc2,tblptrl
 11650  01258E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11651  012594                     	if	0	;tblptru may be non-zero
 11652  012594                     	endif
 11653  012594                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11654  012594  0E00               	movlw	low (__mediumconst shr (0+16))
 11655  012596  6EF8               	movwf	tblptru,c
 11656  012598                     	endif
 11657  012598  0008               	tblrd		*
 11658  01259A  50F5               	movf	tablat,w,c
 11659  01259C  0A2A               	xorlw	42
 11660  01259E  A4D8               	btfss	status,2,c
 11661  0125A0  D02A               	goto	l12319
 11662                           
 11663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 11664                           ;stkvar	_fmt @ sp[(-32)+-4]
 11665  0125A2  0EDC               	movlw	-36
 11666  0125A4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11667  0125AA  0EDD               	movlw	-35
 11668  0125AC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11669  0125B2  2ADE               	incf	postinc2,f,c
 11670  0125B4  0E00               	movlw	0
 11671  0125B6  22DD               	addwfc	postdec2,f,c
 11672                           
 11673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 11674                           ;stkvar	_ap @ sp[(-32)+-6]
 11675  0125B8  0EDA               	movlw	-38
 11676  0125BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11677  0125C0  0EDB               	movlw	-37
 11678  0125C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11679  0125C8  0E02               	movlw	2
 11680  0125CA  5EDE               	subwf	postinc2,f,c
 11681  0125CC  0E00               	movlw	0
 11682  0125CE  5ADD               	subwfb	postdec2,f,c
 11683  0125D0  006F FF78  F00B    	movff	postinc2,btemp+10
 11684  0125D6  006F FF74  F00C    	movff	postdec2,btemp+11
 11685  0125DC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11686  0125E2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11687  0125E8  006F FF78  F03C    	movff	postinc2,_prec
 11688  0125EE  006F FF74  F03D    	movff	postdec2,_prec+1
 11689                           
 11690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 11691  0125F4  D060               	goto	u11990
 11692  0125F6                     l12319:
 11693                           
 11694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 11695                           ;stkvar	_fmt @ sp[(-32)+-4]
 11696  0125F6  0EDC               	movlw	-36
 11697  0125F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11698  0125FE  0EDD               	movlw	-35
 11699  012600  006F FF8F FFDA     	movff	plusw1,fsr2h
 11700  012606  006F FF78  F00B    	movff	postinc2,btemp+10
 11701  01260C  006F FF74  F00C    	movff	postdec2,btemp+11
 11702  012612  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11703  012618  0060  F033  FFE6   	movff	btemp+11,postinc1
 11704  01261E  EC0D  F0BB         	call	_atoi	;wreg free
 11705  012622  0060  F004  F03C   	movff	btemp,_prec
 11706  012628  0060  F008  F03D   	movff	btemp+1,_prec+1
 11707                           
 11708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11709  01262E  D00B               	goto	l12323
 11710  012630                     l12321:
 11711                           
 11712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 11713                           ;stkvar	_fmt @ sp[(-32)+-4]
 11714  012630  0EDC               	movlw	-36
 11715  012632  006F FF8F FFD9     	movff	plusw1,fsr2l
 11716  012638  0EDD               	movlw	-35
 11717  01263A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11718  012640  2ADE               	incf	postinc2,f,c
 11719  012642  0E00               	movlw	0
 11720  012644  22DD               	addwfc	postdec2,f,c
 11721  012646                     l12323:
 11722  012646  0ED0               	movlw	208
 11723  012648  6E0B               	movwf	(btemp+10)^0,c
 11724  01264A  0EFF               	movlw	255
 11725  01264C  6E0C               	movwf	(btemp+11)^0,c
 11726                           
 11727                           ;stkvar	_fmt @ sp[(-32)+-4]
 11728  01264E  0EDC               	movlw	-36
 11729  012650  006F FF8F FFD9     	movff	plusw1,fsr2l
 11730  012656  0EDD               	movlw	-35
 11731  012658  006F FF8F FFDA     	movff	plusw1,fsr2h
 11732  01265E  006F FF7B FFF6     	movff	postinc2,tblptrl
 11733  012664  006F FF77 FFF7     	movff	postdec2,tblptrh
 11734  01266A                     	if	0	;tblptru may be non-zero
 11735  01266A                     	endif
 11736  01266A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11737  01266A  0E00               	movlw	low (__mediumconst shr (0+16))
 11738  01266C  6EF8               	movwf	tblptru,c
 11739  01266E                     	endif
 11740  01266E  0008               	tblrd		*
 11741  012670  50F5               	movf	tablat,w,c
 11742  012672  6E09               	movwf	(btemp+8)^0,c
 11743  012674  6A0A               	clrf	(btemp+9)^0,c
 11744  012676  500B               	movf	(btemp+10)^0,w,c
 11745  012678  2609               	addwf	(btemp+8)^0,f,c
 11746  01267A  500C               	movf	(btemp+11)^0,w,c
 11747  01267C  220A               	addwfc	(btemp+9)^0,f,c
 11748  01267E  500A               	movf	(btemp+9)^0,w,c
 11749  012680  E106               	bnz	u11970
 11750  012682  0E0A               	movlw	10
 11751  012684  5C09               	subwf	(btemp+8)^0,w,c
 11752  012686  B0D8               	btfsc	status,0,c
 11753  012688  D002               	goto	u11970
 11754  01268A  0E01               	movlw	1
 11755  01268C  D001               	goto	u11980
 11756  01268E                     u11970:
 11757  01268E  0E00               	movlw	0
 11758  012690                     u11980:
 11759  012690  6E0B               	movwf	(btemp+10)^0,c
 11760  012692  6A0C               	clrf	(btemp+11)^0,c
 11761                           
 11762                           ;stkvar	_vfpfcnvrt$5546 @ sp[(-32)+0]
 11763  012694  0EE0               	movlw	-32
 11764  012696  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11765  01269C  0EE1               	movlw	-31
 11766  01269E  0060  F033  FFE3   	movff	btemp+11,plusw1
 11767                           
 11768                           ;stkvar	_vfpfcnvrt$5546 @ sp[(-32)+0]
 11769  0126A4  0EE0               	movlw	-32
 11770  0126A6  006F FF8C  F001    	movff	plusw1,btemp
 11771  0126AC  0EE1               	movlw	-31
 11772  0126AE  50E3               	movf	plusw1,w,c
 11773  0126B0  1001               	iorwf	btemp^0,w,c
 11774  0126B2  A4D8               	btfss	status,2,c
 11775  0126B4  D7BD               	goto	l12321
 11776  0126B6                     u11990:
 11777                           
 11778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 11779                           ;stkvar	_fmt @ sp[(-32)+-4]
 11780  0126B6  0EDC               	movlw	-36
 11781  0126B8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11782  0126BE  0EDD               	movlw	-35
 11783  0126C0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11784  0126C6  006F FF7B FFF6     	movff	postinc2,tblptrl
 11785  0126CC  006F FF77 FFF7     	movff	postdec2,tblptrh
 11786  0126D2                     	if	0	;tblptru may be non-zero
 11787  0126D2                     	endif
 11788  0126D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11789  0126D2  0E00               	movlw	low (__mediumconst shr (0+16))
 11790  0126D4  6EF8               	movwf	tblptru,c
 11791  0126D6                     	endif
 11792  0126D6  0008               	tblrd		*
 11793  0126D8  50F5               	movf	tablat,w,c
 11794  0126DA  6EE6               	movwf	postinc1,c
 11795  0126DC  0E00               	movlw	0
 11796  0126DE  6EE6               	movwf	postinc1,c
 11797  0126E0  EC3E  F0D5         	call	_tolower	;wreg free
 11798                           
 11799                           ;stkvar	_ct @ sp[(-32)+26]
 11800  0126E4  0EFA               	movlw	-6
 11801  0126E6  0060  F007  FFE3   	movff	btemp,plusw1
 11802                           
 11803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 11804                           ;stkvar	_ct @ sp[(-32)+26]
 11805  0126EC  0EFA               	movlw	-6
 11806  0126EE  50E3               	movf	plusw1,w,c
 11807  0126F0  B4D8               	btfsc	status,2,c
 11808  0126F2  D05B               	goto	l12339
 11809                           
 11810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 11811                           ;stkvar	_ct @ sp[(-32)+26]
 11812  0126F4  0EFB               	movlw	251
 11813  0126F6  24E1               	addwf	fsr1l,w,c
 11814  0126F8  6ED9               	movwf	fsr2l,c
 11815  0126FA  0EFF               	movlw	255
 11816  0126FC  20E2               	addwfc	fsr1h,w,c
 11817  0126FE  6EDA               	movwf	fsr2h,c
 11818                           
 11819                           ;stkvar	_fmt @ sp[(-32)+-4]
 11820  012700  0EDC               	movlw	-36
 11821  012702  006F FF8F FFE9     	movff	plusw1,fsr0l
 11822  012708  0EDD               	movlw	-35
 11823  01270A  006F FF8F FFEA     	movff	plusw1,fsr0h
 11824  012710  006F FFB8  F00B    	movff	postinc0,btemp+10
 11825  012716  006F FFB4  F00C    	movff	postdec0,btemp+11
 11826  01271C  0E01               	movlw	1
 11827  01271E  260B               	addwf	(btemp+10)^0,f,c
 11828  012720  0E00               	movlw	0
 11829  012722  220C               	addwfc	(btemp+11)^0,f,c
 11830  012724  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11831  01272A  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11832  012730                     	if	0	;tblptru may be non-zero
 11833  012730                     	endif
 11834  012730                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11835  012730  0E00               	movlw	low (__mediumconst shr (0+16))
 11836  012732  6EF8               	movwf	tblptru,c
 11837  012734                     	endif
 11838  012734  0008               	tblrd		*
 11839  012736  50F5               	movf	tablat,w,c
 11840  012738  6EE6               	movwf	postinc1,c
 11841  01273A  0E00               	movlw	0
 11842  01273C  6EE6               	movwf	postinc1,c
 11843  01273E  EC3E  F0D5         	call	_tolower	;wreg free
 11844  012742  5001               	movf	btemp^0,w,c
 11845  012744  6EDF               	movwf	indf2,c
 11846                           
 11847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 11848                           ;stkvar	_ct @ sp[(-32)+26]
 11849  012746  0EFB               	movlw	251
 11850  012748  24E1               	addwf	fsr1l,w,c
 11851  01274A  6ED9               	movwf	fsr2l,c
 11852  01274C  0EFF               	movlw	255
 11853  01274E  20E2               	addwfc	fsr1h,w,c
 11854  012750  6EDA               	movwf	fsr2h,c
 11855  012752  50DF               	movf	indf2,w,c
 11856  012754  B4D8               	btfsc	status,2,c
 11857  012756  D029               	goto	l12339
 11858                           
 11859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 11860                           ;stkvar	_ct @ sp[(-32)+26]
 11861  012758  0EFC               	movlw	252
 11862  01275A  24E1               	addwf	fsr1l,w,c
 11863  01275C  6ED9               	movwf	fsr2l,c
 11864  01275E  0EFF               	movlw	255
 11865  012760  20E2               	addwfc	fsr1h,w,c
 11866  012762  6EDA               	movwf	fsr2h,c
 11867                           
 11868                           ;stkvar	_fmt @ sp[(-32)+-4]
 11869  012764  0EDC               	movlw	-36
 11870  012766  006F FF8F FFE9     	movff	plusw1,fsr0l
 11871  01276C  0EDD               	movlw	-35
 11872  01276E  006F FF8F FFEA     	movff	plusw1,fsr0h
 11873  012774  006F FFB8  F00B    	movff	postinc0,btemp+10
 11874  01277A  006F FFB4  F00C    	movff	postdec0,btemp+11
 11875  012780  0E02               	movlw	2
 11876  012782  260B               	addwf	(btemp+10)^0,f,c
 11877  012784  0E00               	movlw	0
 11878  012786  220C               	addwfc	(btemp+11)^0,f,c
 11879  012788  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11880  01278E  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11881  012794                     	if	0	;tblptru may be non-zero
 11882  012794                     	endif
 11883  012794                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11884  012794  0E00               	movlw	low (__mediumconst shr (0+16))
 11885  012796  6EF8               	movwf	tblptru,c
 11886  012798                     	endif
 11887  012798  0008               	tblrd		*
 11888  01279A  50F5               	movf	tablat,w,c
 11889  01279C  6EE6               	movwf	postinc1,c
 11890  01279E  0E00               	movlw	0
 11891  0127A0  6EE6               	movwf	postinc1,c
 11892  0127A2  EC3E  F0D5         	call	_tolower	;wreg free
 11893  0127A6  5001               	movf	btemp^0,w,c
 11894  0127A8  6EDF               	movwf	indf2,c
 11895  0127AA                     l12339:
 11896                           
 11897                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 11898                           ;stkvar	_fmt @ sp[(-32)+-4]
 11899  0127AA  0EDC               	movlw	-36
 11900  0127AC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11901  0127B2  0EDD               	movlw	-35
 11902  0127B4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11903  0127BA  006F FF7B FFF6     	movff	postinc2,tblptrl
 11904  0127C0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11905  0127C6                     	if	0	;tblptru may be non-zero
 11906  0127C6                     	endif
 11907  0127C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11908  0127C6  0E00               	movlw	low (__mediumconst shr (0+16))
 11909  0127C8  6EF8               	movwf	tblptru,c
 11910  0127CA                     	endif
 11911  0127CA  0008               	tblrd		*
 11912  0127CC  50F5               	movf	tablat,w,c
 11913  0127CE  0A63               	xorlw	99
 11914  0127D0  A4D8               	btfss	status,2,c
 11915  0127D2  D037               	goto	l12349
 11916                           
 11917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 11918                           ;stkvar	_fmt @ sp[(-32)+-4]
 11919  0127D4  0EDC               	movlw	-36
 11920  0127D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11921  0127DC  0EDD               	movlw	-35
 11922  0127DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11923  0127E4  2ADE               	incf	postinc2,f,c
 11924  0127E6  0E00               	movlw	0
 11925  0127E8  22DD               	addwfc	postdec2,f,c
 11926                           
 11927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 11928                           ;stkvar	_ap @ sp[(-32)+-6]
 11929  0127EA  0EDA               	movlw	-38
 11930  0127EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11931  0127F2  0EDB               	movlw	-37
 11932  0127F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11933  0127FA  0E02               	movlw	2
 11934  0127FC  5EDE               	subwf	postinc2,f,c
 11935  0127FE  0E00               	movlw	0
 11936  012800  5ADD               	subwfb	postdec2,f,c
 11937  012802  006F FF78  F00B    	movff	postinc2,btemp+10
 11938  012808  006F FF74  F00C    	movff	postdec2,btemp+11
 11939  01280E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11940  012814  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11941  01281A  50DF               	movf	indf2,w,c
 11942  01281C  6E0C               	movwf	(btemp+11)^0,c
 11943                           
 11944                           ;stkvar	_c @ sp[(-32)+31]
 11945  01281E  0EFF               	movlw	-1
 11946  012820  0060  F033  FFE3   	movff	btemp+11,plusw1
 11947                           
 11948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 11949                           ;stkvar	_c @ sp[(-32)+31]
 11950  012826  0EFF               	movlw	-1
 11951  012828  50E3               	movf	plusw1,w,c
 11952  01282A  6EE6               	movwf	postinc1,c
 11953                           
 11954                           ;stkvar	_fp @ sp[(-33)+-2]
 11955  01282C  0EDD               	movlw	-35
 11956  01282E  006F FF8F FFE6     	movff	plusw1,postinc1
 11957  012834  006F FF8F FFE6     	movff	plusw1,postinc1
 11958  01283A  ECB8  F0D4         	call	_ctoa	;wreg free
 11959  01283E  EF9A  F099         	goto	l2367
 11960  012842                     l12349:
 11961                           
 11962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 11963                           ;stkvar	_fmt @ sp[(-32)+-4]
 11964  012842  0EDC               	movlw	-36
 11965  012844  006F FF8F FFD9     	movff	plusw1,fsr2l
 11966  01284A  0EDD               	movlw	-35
 11967  01284C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11968  012852  006F FF7B FFF6     	movff	postinc2,tblptrl
 11969  012858  006F FF77 FFF7     	movff	postdec2,tblptrh
 11970  01285E                     	if	0	;tblptru may be non-zero
 11971  01285E                     	endif
 11972  01285E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11973  01285E  0E00               	movlw	low (__mediumconst shr (0+16))
 11974  012860  6EF8               	movwf	tblptru,c
 11975  012862                     	endif
 11976  012862  0008               	tblrd		*
 11977  012864  50F5               	movf	tablat,w,c
 11978  012866  0A64               	xorlw	100
 11979  012868  B4D8               	btfsc	status,2,c
 11980  01286A  D015               	goto	u12040
 11981                           
 11982                           ;stkvar	_fmt @ sp[(-32)+-4]
 11983  01286C  0EDC               	movlw	-36
 11984  01286E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11985  012874  0EDD               	movlw	-35
 11986  012876  006F FF8F FFDA     	movff	plusw1,fsr2h
 11987  01287C  006F FF7B FFF6     	movff	postinc2,tblptrl
 11988  012882  006F FF77 FFF7     	movff	postdec2,tblptrh
 11989  012888                     	if	0	;tblptru may be non-zero
 11990  012888                     	endif
 11991  012888                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11992  012888  0E00               	movlw	low (__mediumconst shr (0+16))
 11993  01288A  6EF8               	movwf	tblptru,c
 11994  01288C                     	endif
 11995  01288C  0008               	tblrd		*
 11996  01288E  50F5               	movf	tablat,w,c
 11997  012890  0A69               	xorlw	105
 11998  012892  A4D8               	btfss	status,2,c
 11999  012894  D076               	goto	l12361
 12000  012896                     u12040:
 12001                           
 12002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 12003                           ;stkvar	_fmt @ sp[(-32)+-4]
 12004  012896  0EDC               	movlw	-36
 12005  012898  006F FF8F FFD9     	movff	plusw1,fsr2l
 12006  01289E  0EDD               	movlw	-35
 12007  0128A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12008  0128A6  2ADE               	incf	postinc2,f,c
 12009  0128A8  0E00               	movlw	0
 12010  0128AA  22DD               	addwfc	postdec2,f,c
 12011                           
 12012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 12013                           ;stkvar	_ap @ sp[(-32)+-6]
 12014  0128AC  0EDA               	movlw	-38
 12015  0128AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12016  0128B4  0EDB               	movlw	-37
 12017  0128B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12018  0128BC  0E02               	movlw	2
 12019  0128BE  5EDE               	subwf	postinc2,f,c
 12020  0128C0  0E00               	movlw	0
 12021  0128C2  5ADD               	subwfb	postdec2,f,c
 12022  0128C4  006F FF78  F00B    	movff	postinc2,btemp+10
 12023  0128CA  006F FF74  F00C    	movff	postdec2,btemp+11
 12024  0128D0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12025  0128D6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12026  0128DC  006F FF78  F00B    	movff	postinc2,btemp+10
 12027  0128E2  006F FF74  F00C    	movff	postdec2,btemp+11
 12028                           
 12029                           ;stkvar	_ll @ sp[(-32)+14]
 12030  0128E8  0EEE               	movlw	-18
 12031  0128EA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12032  0128F0  0EEF               	movlw	-17
 12033  0128F2  0060  F033  FFE3   	movff	btemp+11,plusw1
 12034  0128F8  6A01               	clrf	btemp^0,c
 12035  0128FA  BEE3               	btfsc	plusw1,7,c
 12036  0128FC  6801               	setf	btemp^0,c
 12037  0128FE  0EF0               	movlw	-16
 12038  012900  0060  F007  FFE3   	movff	btemp,plusw1
 12039  012906  0EF1               	movlw	-15
 12040  012908  0060  F007  FFE3   	movff	btemp,plusw1
 12041  01290E  0EF2               	movlw	-14
 12042  012910  0060  F007  FFE3   	movff	btemp,plusw1
 12043  012916  0EF3               	movlw	-13
 12044  012918  0060  F007  FFE3   	movff	btemp,plusw1
 12045  01291E  0EF4               	movlw	-12
 12046  012920  0060  F007  FFE3   	movff	btemp,plusw1
 12047  012926  0EF5               	movlw	-11
 12048  012928  0060  F007  FFE3   	movff	btemp,plusw1
 12049  01292E                     l12357:
 12050                           
 12051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 12052                           ;stkvar	_ll @ sp[(-32)+14]
 12053  01292E  50E1               	movf	fsr1l,w,c
 12054  012930  0FEE               	addlw	-18
 12055  012932  6ED9               	movwf	fsr2l,c
 12056  012934  50E2               	movf	fsr1h,w,c
 12057  012936  6EDA               	movwf	fsr2h,c
 12058  012938  0EFF               	movlw	255
 12059  01293A  22DA               	addwfc	fsr2h,f,c
 12060  01293C  006F FF7B FFE6     	movff	postinc2,postinc1
 12061  012942  006F FF7B FFE6     	movff	postinc2,postinc1
 12062  012948  006F FF7B FFE6     	movff	postinc2,postinc1
 12063  01294E  006F FF7B FFE6     	movff	postinc2,postinc1
 12064  012954  006F FF7B FFE6     	movff	postinc2,postinc1
 12065  01295A  006F FF7B FFE6     	movff	postinc2,postinc1
 12066  012960  006F FF7B FFE6     	movff	postinc2,postinc1
 12067  012966  006F FF7B FFE6     	movff	postinc2,postinc1
 12068                           
 12069                           ;stkvar	_fp @ sp[(-40)+-2]
 12070  01296C  0ED6               	movlw	-42
 12071  01296E  006F FF8F FFE6     	movff	plusw1,postinc1
 12072  012974  006F FF8F FFE6     	movff	plusw1,postinc1
 12073  01297A  EC63  F0AA         	call	_dtoa	;wreg free
 12074  01297E  EF9A  F099         	goto	l2367
 12075  012982                     l12361:
 12076                           
 12077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 12078  012982  0E02               	movlw	2
 12079  012984  6EE6               	movwf	postinc1,c
 12080  012986  0E00               	movlw	0
 12081  012988  6EE6               	movwf	postinc1,c
 12082  01298A  0EE9               	movlw	low STR_74
 12083  01298C  6EE6               	movwf	postinc1,c
 12084  01298E  0EFF               	movlw	high STR_74
 12085  012990  6EE6               	movwf	postinc1,c
 12086                           
 12087                           ;stkvar	_fmt @ sp[(-36)+-4]
 12088  012992  0ED8               	movlw	-40
 12089  012994  006F FF8F FFD9     	movff	plusw1,fsr2l
 12090  01299A  0ED9               	movlw	-39
 12091  01299C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12092  0129A2  006F FF78  F00B    	movff	postinc2,btemp+10
 12093  0129A8  006F FF74  F00C    	movff	postdec2,btemp+11
 12094  0129AE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12095  0129B4  0060  F033  FFE6   	movff	btemp+11,postinc1
 12096  0129BA  EC7C  F0BE         	call	_strncmp	;wreg free
 12097  0129BE  5001               	movf	btemp^0,w,c
 12098  0129C0  1002               	iorwf	(btemp+1)^0,w,c
 12099  0129C2  B4D8               	btfsc	status,2,c
 12100  0129C4  D022               	goto	u12060
 12101  0129C6  0E02               	movlw	2
 12102  0129C8  6EE6               	movwf	postinc1,c
 12103  0129CA  0E00               	movlw	0
 12104  0129CC  6EE6               	movwf	postinc1,c
 12105  0129CE  0EEF               	movlw	low STR_78
 12106  0129D0  6EE6               	movwf	postinc1,c
 12107  0129D2  0EFF               	movlw	high STR_78
 12108  0129D4  6EE6               	movwf	postinc1,c
 12109                           
 12110                           ;stkvar	_fmt @ sp[(-36)+-4]
 12111  0129D6  0ED8               	movlw	-40
 12112  0129D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12113  0129DE  0ED9               	movlw	-39
 12114  0129E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12115  0129E6  006F FF78  F00B    	movff	postinc2,btemp+10
 12116  0129EC  006F FF74  F00C    	movff	postdec2,btemp+11
 12117  0129F2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12118  0129F8  0060  F033  FFE6   	movff	btemp+11,postinc1
 12119  0129FE  EC7C  F0BE         	call	_strncmp	;wreg free
 12120  012A02  5001               	movf	btemp^0,w,c
 12121  012A04  1002               	iorwf	(btemp+1)^0,w,c
 12122  012A06  A4D8               	btfss	status,2,c
 12123  012A08  D069               	goto	l12373
 12124  012A0A                     u12060:
 12125                           
 12126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 12127                           ;stkvar	_fmt @ sp[(-32)+-4]
 12128  012A0A  0EDC               	movlw	-36
 12129  012A0C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12130  012A12  0EDD               	movlw	-35
 12131  012A14  006F FF8F FFDA     	movff	plusw1,fsr2h
 12132  012A1A  0E02               	movlw	2
 12133  012A1C  26DE               	addwf	postinc2,f,c
 12134  012A1E  0E00               	movlw	0
 12135  012A20  22DD               	addwfc	postdec2,f,c
 12136                           
 12137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 12138                           ;stkvar	_ap @ sp[(-32)+-6]
 12139  012A22  0EDA               	movlw	-38
 12140  012A24  006F FF8F FFD9     	movff	plusw1,fsr2l
 12141  012A2A  0EDB               	movlw	-37
 12142  012A2C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12143  012A32  0E04               	movlw	4
 12144  012A34  5EDE               	subwf	postinc2,f,c
 12145  012A36  0E00               	movlw	0
 12146  012A38  5ADD               	subwfb	postdec2,f,c
 12147  012A3A  006F FF78  F00B    	movff	postinc2,btemp+10
 12148  012A40  006F FF74  F00C    	movff	postdec2,btemp+11
 12149  012A46  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12150  012A4C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12151  012A52  006F FF78  F009    	movff	postinc2,btemp+8
 12152  012A58  006F FF78  F00A    	movff	postinc2,btemp+9
 12153  012A5E  006F FF78  F00B    	movff	postinc2,btemp+10
 12154  012A64  006F FF78  F00C    	movff	postinc2,btemp+11
 12155  012A6A  0060  F024  F011   	movff	btemp+8,btemp+16
 12156  012A70  0060  F028  F012   	movff	btemp+9,btemp+17
 12157  012A76  0060  F02C  F013   	movff	btemp+10,btemp+18
 12158  012A7C  0060  F030  F014   	movff	btemp+11,btemp+19
 12159  012A82  6A15               	clrf	(btemp+20)^0,c
 12160  012A84  BE14               	btfsc	(btemp+19)^0,7,c
 12161  012A86  6815               	setf	(btemp+20)^0,c
 12162  012A88  0060  F054  F016   	movff	btemp+20,btemp+21
 12163  012A8E  0060  F054  F017   	movff	btemp+20,btemp+22
 12164  012A94  0060  F054  F018   	movff	btemp+20,btemp+23
 12165                           
 12166                           ;stkvar	_ll @ sp[(-32)+14]
 12167  012A9A  0EEE               	movlw	-18
 12168  012A9C  0060  F047  FFE3   	movff	btemp+16,plusw1
 12169  012AA2  0EEF               	movlw	-17
 12170  012AA4  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12171  012AAA  0EF0               	movlw	-16
 12172  012AAC  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12173  012AB2  0EF1               	movlw	-15
 12174  012AB4  0060  F053  FFE3   	movff	btemp+19,plusw1
 12175  012ABA  0EF2               	movlw	-14
 12176  012ABC  0060  F057  FFE3   	movff	btemp+20,plusw1
 12177  012AC2  0EF3               	movlw	-13
 12178  012AC4  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12179  012ACA  0EF4               	movlw	-12
 12180  012ACC  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12181  012AD2  0EF5               	movlw	-11
 12182  012AD4  0060  F063  FFE3   	movff	btemp+23,plusw1
 12183  012ADA  D729               	goto	l12357
 12184  012ADC                     l12373:
 12185                           
 12186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 12187                           ;stkvar	_ct @ sp[(-32)+26]
 12188  012ADC  0EFA               	movlw	-6
 12189  012ADE  006F FF8C  F001    	movff	plusw1,btemp
 12190  012AE4  0E66               	movlw	102
 12191  012AE6  1801               	xorwf	btemp^0,w,c
 12192  012AE8  A4D8               	btfss	status,2,c
 12193  012AEA  D06E               	goto	l12385
 12194                           
 12195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 12196                           ;stkvar	_fmt @ sp[(-32)+-4]
 12197  012AEC  0EDC               	movlw	-36
 12198  012AEE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12199  012AF4  0EDD               	movlw	-35
 12200  012AF6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12201  012AFC  006F FF7B FFF6     	movff	postinc2,tblptrl
 12202  012B02  006F FF77 FFF7     	movff	postdec2,tblptrh
 12203  012B08                     	if	0	;tblptru may be non-zero
 12204  012B08                     	endif
 12205  012B08                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12206  012B08  0E00               	movlw	low (__mediumconst shr (0+16))
 12207  012B0A  6EF8               	movwf	tblptru,c
 12208  012B0C                     	endif
 12209                           
 12210                           ;stkvar	_c @ sp[(-32)+31]
 12211  012B0C  0008               	tblrd		*
 12212  012B0E  0EFF               	movlw	-1
 12213  012B10  006F FFD7 FFE3     	movff	tablat,plusw1
 12214                           
 12215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 12216                           ;stkvar	_fmt @ sp[(-32)+-4]
 12217  012B16  0EDC               	movlw	-36
 12218  012B18  006F FF8F FFD9     	movff	plusw1,fsr2l
 12219  012B1E  0EDD               	movlw	-35
 12220  012B20  006F FF8F FFDA     	movff	plusw1,fsr2h
 12221  012B26  2ADE               	incf	postinc2,f,c
 12222  012B28  0E00               	movlw	0
 12223  012B2A  22DD               	addwfc	postdec2,f,c
 12224                           
 12225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 12226                           ;stkvar	_ap @ sp[(-32)+-6]
 12227  012B2C  0EDA               	movlw	-38
 12228  012B2E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12229  012B34  0EDB               	movlw	-37
 12230  012B36  006F FF8F FFDA     	movff	plusw1,fsr2h
 12231  012B3C  0E04               	movlw	4
 12232  012B3E  5EDE               	subwf	postinc2,f,c
 12233  012B40  0E00               	movlw	0
 12234  012B42  5ADD               	subwfb	postdec2,f,c
 12235  012B44  006F FF78  F00B    	movff	postinc2,btemp+10
 12236  012B4A  006F FF74  F00C    	movff	postdec2,btemp+11
 12237  012B50  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12238  012B56  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12239  012B5C  006F FF78  F009    	movff	postinc2,btemp+8
 12240  012B62  006F FF78  F00A    	movff	postinc2,btemp+9
 12241  012B68  006F FF78  F00B    	movff	postinc2,btemp+10
 12242  012B6E  006F FF78  F00C    	movff	postinc2,btemp+11
 12243                           
 12244                           ;stkvar	_f @ sp[(-32)+22]
 12245  012B74  0EF6               	movlw	-10
 12246  012B76  0060  F027  FFE3   	movff	btemp+8,plusw1
 12247  012B7C  0EF7               	movlw	-9
 12248  012B7E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12249  012B84  0EF8               	movlw	-8
 12250  012B86  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12251  012B8C  0EF9               	movlw	-7
 12252  012B8E  0060  F033  FFE3   	movff	btemp+11,plusw1
 12253  012B94                     l12381:
 12254                           
 12255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 12256                           ;stkvar	_c @ sp[(-32)+31]
 12257  012B94  0EFF               	movlw	-1
 12258  012B96  50E3               	movf	plusw1,w,c
 12259  012B98  6EE6               	movwf	postinc1,c
 12260                           
 12261                           ;stkvar	_f @ sp[(-33)+22]
 12262  012B9A  0EF5               	movlw	-11
 12263  012B9C  006F FF8F FFE6     	movff	plusw1,postinc1
 12264  012BA2  006F FF8F FFE6     	movff	plusw1,postinc1
 12265  012BA8  006F FF8F FFE6     	movff	plusw1,postinc1
 12266  012BAE  006F FF8F FFE6     	movff	plusw1,postinc1
 12267                           
 12268                           ;stkvar	_fp @ sp[(-37)+-2]
 12269  012BB4  0ED9               	movlw	-39
 12270  012BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12271  012BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12272  012BC2  EC00  F080         	call	_efgtoa	;wreg free
 12273  012BC6  D3B6               	goto	l2367
 12274  012BC8                     l12385:
 12275                           
 12276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 12277  012BC8  0E02               	movlw	2
 12278  012BCA  6EE6               	movwf	postinc1,c
 12279  012BCC  0E00               	movlw	0
 12280  012BCE  6EE6               	movwf	postinc1,c
 12281  012BD0  0EEC               	movlw	low STR_83
 12282  012BD2  6EE6               	movwf	postinc1,c
 12283  012BD4  0EFF               	movlw	high STR_83
 12284  012BD6  6EE6               	movwf	postinc1,c
 12285                           
 12286                           ;stkvar	_ct @ sp[(-36)+26]
 12287  012BD8  0EF6               	movlw	246
 12288  012BDA  24E1               	addwf	fsr1l,w,c
 12289  012BDC  6E01               	movwf	btemp^0,c
 12290  012BDE  0EFF               	movlw	255
 12291  012BE0  20E2               	addwfc	fsr1h,w,c
 12292  012BE2  6E02               	movwf	(btemp+1)^0,c
 12293  012BE4  0060  F007  FFE6   	movff	btemp,postinc1
 12294  012BEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12295  012BF0  EC7C  F0BE         	call	_strncmp	;wreg free
 12296  012BF4  5001               	movf	btemp^0,w,c
 12297  012BF6  1002               	iorwf	(btemp+1)^0,w,c
 12298  012BF8  A4D8               	btfss	status,2,c
 12299  012BFA  D096               	goto	l12405
 12300                           
 12301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 12302                           ;stkvar	_fmt @ sp[(-32)+-4]
 12303  012BFC  0EDC               	movlw	-36
 12304  012BFE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12305  012C04  0EDD               	movlw	-35
 12306  012C06  006F FF8F FFDA     	movff	plusw1,fsr2h
 12307  012C0C  006F FF78  F00B    	movff	postinc2,btemp+10
 12308  012C12  006F FF74  F00C    	movff	postdec2,btemp+11
 12309  012C18  0E01               	movlw	1
 12310  012C1A  260B               	addwf	(btemp+10)^0,f,c
 12311  012C1C  0E00               	movlw	0
 12312  012C1E  220C               	addwfc	(btemp+11)^0,f,c
 12313  012C20  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12314  012C26  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12315  012C2C                     	if	0	;tblptru may be non-zero
 12316  012C2C                     	endif
 12317  012C2C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12318  012C2C  0E00               	movlw	low (__mediumconst shr (0+16))
 12319  012C2E  6EF8               	movwf	tblptru,c
 12320  012C30                     	endif
 12321                           
 12322                           ;stkvar	_c @ sp[(-32)+31]
 12323  012C30  0008               	tblrd		*
 12324  012C32  0EFF               	movlw	-1
 12325  012C34  006F FFD7 FFE3     	movff	tablat,plusw1
 12326  012C3A  0EBF               	movlw	191
 12327  012C3C  6E0B               	movwf	(btemp+10)^0,c
 12328  012C3E  0EFF               	movlw	255
 12329  012C40  6E0C               	movwf	(btemp+11)^0,c
 12330                           
 12331                           ;stkvar	_fmt @ sp[(-32)+-4]
 12332  012C42  0EDC               	movlw	-36
 12333  012C44  006F FF8F FFD9     	movff	plusw1,fsr2l
 12334  012C4A  0EDD               	movlw	-35
 12335  012C4C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12336  012C52  006F FF7B FFF6     	movff	postinc2,tblptrl
 12337  012C58  006F FF77 FFF7     	movff	postdec2,tblptrh
 12338  012C5E                     	if	0	;tblptru may be non-zero
 12339  012C5E                     	endif
 12340  012C5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12341  012C5E  0E00               	movlw	low (__mediumconst shr (0+16))
 12342  012C60  6EF8               	movwf	tblptru,c
 12343  012C62                     	endif
 12344  012C62  0008               	tblrd		*
 12345  012C64  50F5               	movf	tablat,w,c
 12346  012C66  6E09               	movwf	(btemp+8)^0,c
 12347  012C68  6A0A               	clrf	(btemp+9)^0,c
 12348  012C6A  500B               	movf	(btemp+10)^0,w,c
 12349  012C6C  2609               	addwf	(btemp+8)^0,f,c
 12350  012C6E  500C               	movf	(btemp+11)^0,w,c
 12351  012C70  220A               	addwfc	(btemp+9)^0,f,c
 12352  012C72  500A               	movf	(btemp+9)^0,w,c
 12353  012C74  E106               	bnz	u12090
 12354  012C76  0E1A               	movlw	26
 12355  012C78  5C09               	subwf	(btemp+8)^0,w,c
 12356  012C7A  B0D8               	btfsc	status,0,c
 12357  012C7C  D002               	goto	u12090
 12358  012C7E  0E01               	movlw	1
 12359  012C80  D001               	goto	u12100
 12360  012C82                     u12090:
 12361  012C82  0E00               	movlw	0
 12362  012C84                     u12100:
 12363  012C84  6E0B               	movwf	(btemp+10)^0,c
 12364  012C86  6A0C               	clrf	(btemp+11)^0,c
 12365                           
 12366                           ;stkvar	_vfpfcnvrt$5557 @ sp[(-32)+2]
 12367  012C88  0EE2               	movlw	-30
 12368  012C8A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12369  012C90  0EE3               	movlw	-29
 12370  012C92  0060  F033  FFE3   	movff	btemp+11,plusw1
 12371                           
 12372                           ;stkvar	_vfpfcnvrt$5557 @ sp[(-32)+2]
 12373  012C98  0EE2               	movlw	-30
 12374  012C9A  006F FF8C  F001    	movff	plusw1,btemp
 12375  012CA0  0EE3               	movlw	-29
 12376  012CA2  50E3               	movf	plusw1,w,c
 12377  012CA4  1001               	iorwf	btemp^0,w,c
 12378                           
 12379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 12380                           ;stkvar	_ap @ sp[(-32)+-6]
 12381                           
 12382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 12383                           
 12384                           ;stkvar	_f @ sp[(-32)+22]
 12385                           
 12386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 12387                           ;stkvar	_ap @ sp[(-32)+-6]
 12388  012CA6  0EDA               	movlw	-38
 12389  012CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12390  012CAE  0EDB               	movlw	-37
 12391  012CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12392  012CB6  0E04               	movlw	4
 12393  012CB8  5EDE               	subwf	postinc2,f,c
 12394  012CBA  0E00               	movlw	0
 12395  012CBC  5ADD               	subwfb	postdec2,f,c
 12396  012CBE  006F FF78  F00B    	movff	postinc2,btemp+10
 12397  012CC4  006F FF74  F00C    	movff	postdec2,btemp+11
 12398  012CCA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12399  012CD0  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12400  012CD6  006F FF78  F009    	movff	postinc2,btemp+8
 12401  012CDC  006F FF78  F00A    	movff	postinc2,btemp+9
 12402  012CE2  006F FF78  F00B    	movff	postinc2,btemp+10
 12403  012CE8  006F FF78  F00C    	movff	postinc2,btemp+11
 12404                           
 12405                           ;stkvar	_f @ sp[(-32)+22]
 12406  012CEE  0EF6               	movlw	-10
 12407  012CF0  0060  F027  FFE3   	movff	btemp+8,plusw1
 12408  012CF6  0EF7               	movlw	-9
 12409  012CF8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12410  012CFE  0EF8               	movlw	-8
 12411  012D00  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12412  012D06  0EF9               	movlw	-7
 12413  012D08  0060  F033  FFE3   	movff	btemp+11,plusw1
 12414                           
 12415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 12416                           ;stkvar	_fmt @ sp[(-32)+-4]
 12417  012D0E  0EDC               	movlw	-36
 12418  012D10  006F FF8F FFD9     	movff	plusw1,fsr2l
 12419  012D16  0EDD               	movlw	-35
 12420  012D18  006F FF8F FFDA     	movff	plusw1,fsr2h
 12421  012D1E  0E02               	movlw	2
 12422  012D20  26DE               	addwf	postinc2,f,c
 12423  012D22  0E00               	movlw	0
 12424  012D24  22DD               	addwfc	postdec2,f,c
 12425  012D26  D736               	goto	l12381
 12426  012D28                     l12405:
 12427                           
 12428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 12429                           ;stkvar	_fmt @ sp[(-32)+-4]
 12430  012D28  0EDC               	movlw	-36
 12431  012D2A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12432  012D30  0EDD               	movlw	-35
 12433  012D32  006F FF8F FFDA     	movff	plusw1,fsr2h
 12434  012D38  006F FF7B FFF6     	movff	postinc2,tblptrl
 12435  012D3E  006F FF77 FFF7     	movff	postdec2,tblptrh
 12436  012D44                     	if	0	;tblptru may be non-zero
 12437  012D44                     	endif
 12438  012D44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12439  012D44  0E00               	movlw	low (__mediumconst shr (0+16))
 12440  012D46  6EF8               	movwf	tblptru,c
 12441  012D48                     	endif
 12442  012D48  0008               	tblrd		*
 12443  012D4A  50F5               	movf	tablat,w,c
 12444  012D4C  0A73               	xorlw	115
 12445  012D4E  A4D8               	btfss	status,2,c
 12446  012D50  D042               	goto	l12415
 12447                           
 12448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 12449                           ;stkvar	_fmt @ sp[(-32)+-4]
 12450  012D52  0EDC               	movlw	-36
 12451  012D54  006F FF8F FFD9     	movff	plusw1,fsr2l
 12452  012D5A  0EDD               	movlw	-35
 12453  012D5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12454  012D62  2ADE               	incf	postinc2,f,c
 12455  012D64  0E00               	movlw	0
 12456  012D66  22DD               	addwfc	postdec2,f,c
 12457                           
 12458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 12459                           ;stkvar	_ap @ sp[(-32)+-6]
 12460  012D68  0EDA               	movlw	-38
 12461  012D6A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12462  012D70  0EDB               	movlw	-37
 12463  012D72  006F FF8F FFDA     	movff	plusw1,fsr2h
 12464  012D78  0E02               	movlw	2
 12465  012D7A  5EDE               	subwf	postinc2,f,c
 12466  012D7C  0E00               	movlw	0
 12467  012D7E  5ADD               	subwfb	postdec2,f,c
 12468  012D80  006F FF78  F00B    	movff	postinc2,btemp+10
 12469  012D86  006F FF74  F00C    	movff	postdec2,btemp+11
 12470  012D8C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12471  012D92  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12472  012D98  006F FF78  F00B    	movff	postinc2,btemp+10
 12473  012D9E  006F FF74  F00C    	movff	postdec2,btemp+11
 12474                           
 12475                           ;stkvar	_cp @ sp[(-32)+29]
 12476  012DA4  0EFE               	movlw	-2
 12477  012DA6  0060  F033  FFE3   	movff	btemp+11,plusw1
 12478  012DAC  0EFD               	movlw	-3
 12479  012DAE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12480                           
 12481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 12482                           ;stkvar	_cp @ sp[(-32)+29]
 12483  012DB4  0EFD               	movlw	-3
 12484  012DB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12485  012DBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12486                           
 12487                           ;stkvar	_fp @ sp[(-34)+-2]
 12488  012DC2  0EDC               	movlw	-36
 12489  012DC4  006F FF8F FFE6     	movff	plusw1,postinc1
 12490  012DCA  006F FF8F FFE6     	movff	plusw1,postinc1
 12491  012DD0  EC6E  F0B8         	call	_stoa	;wreg free
 12492  012DD4  D2AF               	goto	l2367
 12493  012DD6                     l12415:
 12494                           
 12495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 12496                           ;stkvar	_fmt @ sp[(-32)+-4]
 12497  012DD6  0EDC               	movlw	-36
 12498  012DD8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12499  012DDE  0EDD               	movlw	-35
 12500  012DE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12501  012DE6  006F FF7B FFF6     	movff	postinc2,tblptrl
 12502  012DEC  006F FF77 FFF7     	movff	postdec2,tblptrh
 12503  012DF2                     	if	0	;tblptru may be non-zero
 12504  012DF2                     	endif
 12505  012DF2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12506  012DF2  0E00               	movlw	low (__mediumconst shr (0+16))
 12507  012DF4  6EF8               	movwf	tblptru,c
 12508  012DF6                     	endif
 12509  012DF6  0008               	tblrd		*
 12510  012DF8  50F5               	movf	tablat,w,c
 12511  012DFA  0A75               	xorlw	117
 12512  012DFC  A4D8               	btfss	status,2,c
 12513  012DFE  D07C               	goto	l12425
 12514                           
 12515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 12516                           ;stkvar	_fmt @ sp[(-32)+-4]
 12517  012E00  0EDC               	movlw	-36
 12518  012E02  006F FF8F FFD9     	movff	plusw1,fsr2l
 12519  012E08  0EDD               	movlw	-35
 12520  012E0A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12521  012E10  2ADE               	incf	postinc2,f,c
 12522  012E12  0E00               	movlw	0
 12523  012E14  22DD               	addwfc	postdec2,f,c
 12524                           
 12525                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12526                           ;stkvar	_ap @ sp[(-32)+-6]
 12527  012E16  0EDA               	movlw	-38
 12528  012E18  006F FF8F FFD9     	movff	plusw1,fsr2l
 12529  012E1E  0EDB               	movlw	-37
 12530  012E20  006F FF8F FFDA     	movff	plusw1,fsr2h
 12531  012E26  0E02               	movlw	2
 12532  012E28  5EDE               	subwf	postinc2,f,c
 12533  012E2A  0E00               	movlw	0
 12534  012E2C  5ADD               	subwfb	postdec2,f,c
 12535  012E2E  006F FF78  F00B    	movff	postinc2,btemp+10
 12536  012E34  006F FF74  F00C    	movff	postdec2,btemp+11
 12537  012E3A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12538  012E40  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12539  012E46  006F FF78  F00B    	movff	postinc2,btemp+10
 12540  012E4C  006F FF74  F00C    	movff	postdec2,btemp+11
 12541  012E52  500B               	movf	(btemp+10)^0,w,c
 12542  012E54  6E11               	movwf	(btemp+16)^0,c
 12543  012E56  500C               	movf	(btemp+11)^0,w,c
 12544  012E58  6E12               	movwf	(btemp+17)^0,c
 12545  012E5A  6A13               	clrf	(btemp+18)^0,c
 12546  012E5C  6A14               	clrf	(btemp+19)^0,c
 12547  012E5E  6A15               	clrf	(btemp+20)^0,c
 12548  012E60  6A16               	clrf	(btemp+21)^0,c
 12549  012E62  6A17               	clrf	(btemp+22)^0,c
 12550  012E64  6A18               	clrf	(btemp+23)^0,c
 12551                           
 12552                           ;stkvar	_llu @ sp[(-32)+6]
 12553  012E66  0EE6               	movlw	-26
 12554  012E68  0060  F047  FFE3   	movff	btemp+16,plusw1
 12555  012E6E  0EE7               	movlw	-25
 12556  012E70  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12557  012E76  0EE8               	movlw	-24
 12558  012E78  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12559  012E7E  0EE9               	movlw	-23
 12560  012E80  0060  F053  FFE3   	movff	btemp+19,plusw1
 12561  012E86  0EEA               	movlw	-22
 12562  012E88  0060  F057  FFE3   	movff	btemp+20,plusw1
 12563  012E8E  0EEB               	movlw	-21
 12564  012E90  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12565  012E96  0EEC               	movlw	-20
 12566  012E98  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12567  012E9E  0EED               	movlw	-19
 12568  012EA0  0060  F063  FFE3   	movff	btemp+23,plusw1
 12569                           
 12570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 12571                           ;stkvar	_llu @ sp[(-32)+6]
 12572  012EA6  50E1               	movf	fsr1l,w,c
 12573  012EA8  0FE6               	addlw	-26
 12574  012EAA  6ED9               	movwf	fsr2l,c
 12575  012EAC  50E2               	movf	fsr1h,w,c
 12576  012EAE  6EDA               	movwf	fsr2h,c
 12577  012EB0  0EFF               	movlw	255
 12578  012EB2  22DA               	addwfc	fsr2h,f,c
 12579  012EB4  006F FF7B FFE6     	movff	postinc2,postinc1
 12580  012EBA  006F FF7B FFE6     	movff	postinc2,postinc1
 12581  012EC0  006F FF7B FFE6     	movff	postinc2,postinc1
 12582  012EC6  006F FF7B FFE6     	movff	postinc2,postinc1
 12583  012ECC  006F FF7B FFE6     	movff	postinc2,postinc1
 12584  012ED2  006F FF7B FFE6     	movff	postinc2,postinc1
 12585  012ED8  006F FF7B FFE6     	movff	postinc2,postinc1
 12586  012EDE  006F FF7B FFE6     	movff	postinc2,postinc1
 12587                           
 12588                           ;stkvar	_fp @ sp[(-40)+-2]
 12589  012EE4  0ED6               	movlw	-42
 12590  012EE6  006F FF8F FFE6     	movff	plusw1,postinc1
 12591  012EEC  006F FF8F FFE6     	movff	plusw1,postinc1
 12592  012EF2  EC5C  F0B2         	call	_utoa	;wreg free
 12593  012EF6  D21E               	goto	l2367
 12594  012EF8                     l12425:
 12595                           
 12596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 12597  012EF8  0E02               	movlw	2
 12598  012EFA  6EE6               	movwf	postinc1,c
 12599  012EFC  0E00               	movlw	0
 12600  012EFE  6EE6               	movwf	postinc1,c
 12601  012F00  0EF2               	movlw	low STR_88
 12602  012F02  6EE6               	movwf	postinc1,c
 12603  012F04  0EFF               	movlw	high STR_88
 12604  012F06  6EE6               	movwf	postinc1,c
 12605                           
 12606                           ;stkvar	_fmt @ sp[(-36)+-4]
 12607  012F08  0ED8               	movlw	-40
 12608  012F0A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12609  012F10  0ED9               	movlw	-39
 12610  012F12  006F FF8F FFDA     	movff	plusw1,fsr2h
 12611  012F18  006F FF78  F00B    	movff	postinc2,btemp+10
 12612  012F1E  006F FF74  F00C    	movff	postdec2,btemp+11
 12613  012F24  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12614  012F2A  0060  F033  FFE6   	movff	btemp+11,postinc1
 12615  012F30  EC7C  F0BE         	call	_strncmp	;wreg free
 12616  012F34  5001               	movf	btemp^0,w,c
 12617  012F36  1002               	iorwf	(btemp+1)^0,w,c
 12618  012F38  A4D8               	btfss	status,2,c
 12619  012F3A  D039               	goto	l12435
 12620                           
 12621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 12622                           ;stkvar	_fmt @ sp[(-32)+-4]
 12623  012F3C  0EDC               	movlw	-36
 12624  012F3E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12625  012F44  0EDD               	movlw	-35
 12626  012F46  006F FF8F FFDA     	movff	plusw1,fsr2h
 12627  012F4C  0E02               	movlw	2
 12628  012F4E  26DE               	addwf	postinc2,f,c
 12629  012F50  0E00               	movlw	0
 12630  012F52  22DD               	addwfc	postdec2,f,c
 12631                           
 12632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12633                           ;stkvar	_ap @ sp[(-32)+-6]
 12634  012F54  0EDA               	movlw	-38
 12635  012F56  006F FF8F FFD9     	movff	plusw1,fsr2l
 12636  012F5C  0EDB               	movlw	-37
 12637  012F5E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12638  012F64  0E04               	movlw	4
 12639  012F66  5EDE               	subwf	postinc2,f,c
 12640  012F68  0E00               	movlw	0
 12641  012F6A  5ADD               	subwfb	postdec2,f,c
 12642  012F6C  006F FF78  F00B    	movff	postinc2,btemp+10
 12643  012F72  006F FF74  F00C    	movff	postdec2,btemp+11
 12644  012F78  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12645  012F7E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12646  012F84  006F FF78  F009    	movff	postinc2,btemp+8
 12647  012F8A  006F FF78  F00A    	movff	postinc2,btemp+9
 12648  012F90  006F FF78  F00B    	movff	postinc2,btemp+10
 12649  012F96  006F FF78  F00C    	movff	postinc2,btemp+11
 12650  012F9C  5009               	movf	(btemp+8)^0,w,c
 12651  012F9E  6E11               	movwf	(btemp+16)^0,c
 12652  012FA0  500A               	movf	(btemp+9)^0,w,c
 12653  012FA2  6E12               	movwf	(btemp+17)^0,c
 12654  012FA4  500B               	movf	(btemp+10)^0,w,c
 12655  012FA6  6E13               	movwf	(btemp+18)^0,c
 12656  012FA8  500C               	movf	(btemp+11)^0,w,c
 12657  012FAA  6E14               	movwf	(btemp+19)^0,c
 12658  012FAC  D758               	goto	L10
 12659  012FAE                     l12435:
 12660                           
 12661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 12662                           ;stkvar	_fmt @ sp[(-32)+-4]
 12663  012FAE  0EDC               	movlw	-36
 12664  012FB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12665  012FB6  0EDD               	movlw	-35
 12666  012FB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12667  012FBE  006F FF7B FFF6     	movff	postinc2,tblptrl
 12668  012FC4  006F FF77 FFF7     	movff	postdec2,tblptrh
 12669  012FCA                     	if	0	;tblptru may be non-zero
 12670  012FCA                     	endif
 12671  012FCA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12672  012FCA  0E00               	movlw	low (__mediumconst shr (0+16))
 12673  012FCC  6EF8               	movwf	tblptru,c
 12674  012FCE                     	endif
 12675  012FCE  0008               	tblrd		*
 12676  012FD0  50F5               	movf	tablat,w,c
 12677  012FD2  0A78               	xorlw	120
 12678  012FD4  B4D8               	btfsc	status,2,c
 12679  012FD6  D015               	goto	u12160
 12680                           
 12681                           ;stkvar	_fmt @ sp[(-32)+-4]
 12682  012FD8  0EDC               	movlw	-36
 12683  012FDA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12684  012FE0  0EDD               	movlw	-35
 12685  012FE2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12686  012FE8  006F FF7B FFF6     	movff	postinc2,tblptrl
 12687  012FEE  006F FF77 FFF7     	movff	postdec2,tblptrh
 12688  012FF4                     	if	0	;tblptru may be non-zero
 12689  012FF4                     	endif
 12690  012FF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12691  012FF4  0E00               	movlw	low (__mediumconst shr (0+16))
 12692  012FF6  6EF8               	movwf	tblptru,c
 12693  012FF8                     	endif
 12694  012FF8  0008               	tblrd		*
 12695  012FFA  50F5               	movf	tablat,w,c
 12696  012FFC  0A58               	xorlw	88
 12697  012FFE  A4D8               	btfss	status,2,c
 12698  013000  D094               	goto	l12449
 12699  013002                     u12160:
 12700                           
 12701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 12702                           ;stkvar	_fmt @ sp[(-32)+-4]
 12703  013002  0EDC               	movlw	-36
 12704  013004  006F FF8F FFD9     	movff	plusw1,fsr2l
 12705  01300A  0EDD               	movlw	-35
 12706  01300C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12707  013012  006F FF7B FFF6     	movff	postinc2,tblptrl
 12708  013018  006F FF77 FFF7     	movff	postdec2,tblptrh
 12709  01301E                     	if	0	;tblptru may be non-zero
 12710  01301E                     	endif
 12711  01301E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12712  01301E  0E00               	movlw	low (__mediumconst shr (0+16))
 12713  013020  6EF8               	movwf	tblptru,c
 12714  013022                     	endif
 12715                           
 12716                           ;stkvar	_c @ sp[(-32)+31]
 12717  013022  0008               	tblrd		*
 12718  013024  0EFF               	movlw	-1
 12719  013026  006F FFD7 FFE3     	movff	tablat,plusw1
 12720                           
 12721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 12722                           ;stkvar	_fmt @ sp[(-32)+-4]
 12723  01302C  0EDC               	movlw	-36
 12724  01302E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12725  013034  0EDD               	movlw	-35
 12726  013036  006F FF8F FFDA     	movff	plusw1,fsr2h
 12727  01303C  2ADE               	incf	postinc2,f,c
 12728  01303E  0E00               	movlw	0
 12729  013040  22DD               	addwfc	postdec2,f,c
 12730                           
 12731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12732                           ;stkvar	_ap @ sp[(-32)+-6]
 12733  013042  0EDA               	movlw	-38
 12734  013044  006F FF8F FFD9     	movff	plusw1,fsr2l
 12735  01304A  0EDB               	movlw	-37
 12736  01304C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12737  013052  0E02               	movlw	2
 12738  013054  5EDE               	subwf	postinc2,f,c
 12739  013056  0E00               	movlw	0
 12740  013058  5ADD               	subwfb	postdec2,f,c
 12741  01305A  006F FF78  F00B    	movff	postinc2,btemp+10
 12742  013060  006F FF74  F00C    	movff	postdec2,btemp+11
 12743  013066  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12744  01306C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12745  013072  006F FF78  F00B    	movff	postinc2,btemp+10
 12746  013078  006F FF74  F00C    	movff	postdec2,btemp+11
 12747  01307E  500B               	movf	(btemp+10)^0,w,c
 12748  013080  6E11               	movwf	(btemp+16)^0,c
 12749  013082  500C               	movf	(btemp+11)^0,w,c
 12750  013084  6E12               	movwf	(btemp+17)^0,c
 12751  013086  6A13               	clrf	(btemp+18)^0,c
 12752  013088  6A14               	clrf	(btemp+19)^0,c
 12753  01308A  6A15               	clrf	(btemp+20)^0,c
 12754  01308C  6A16               	clrf	(btemp+21)^0,c
 12755  01308E  6A17               	clrf	(btemp+22)^0,c
 12756  013090  6A18               	clrf	(btemp+23)^0,c
 12757                           
 12758                           ;stkvar	_llu @ sp[(-32)+6]
 12759  013092  0EE6               	movlw	-26
 12760  013094  0060  F047  FFE3   	movff	btemp+16,plusw1
 12761  01309A  0EE7               	movlw	-25
 12762  01309C  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12763  0130A2  0EE8               	movlw	-24
 12764  0130A4  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12765  0130AA  0EE9               	movlw	-23
 12766  0130AC  0060  F053  FFE3   	movff	btemp+19,plusw1
 12767  0130B2  0EEA               	movlw	-22
 12768  0130B4  0060  F057  FFE3   	movff	btemp+20,plusw1
 12769  0130BA  0EEB               	movlw	-21
 12770  0130BC  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12771  0130C2  0EEC               	movlw	-20
 12772  0130C4  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12773  0130CA  0EED               	movlw	-19
 12774  0130CC  0060  F063  FFE3   	movff	btemp+23,plusw1
 12775                           
 12776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 12777                           ;stkvar	_c @ sp[(-32)+31]
 12778  0130D2  0EFF               	movlw	-1
 12779  0130D4  50E3               	movf	plusw1,w,c
 12780  0130D6  6EE6               	movwf	postinc1,c
 12781                           
 12782                           ;stkvar	_llu @ sp[(-33)+6]
 12783  0130D8  50E1               	movf	fsr1l,w,c
 12784  0130DA  0FE5               	addlw	-27
 12785  0130DC  6ED9               	movwf	fsr2l,c
 12786  0130DE  50E2               	movf	fsr1h,w,c
 12787  0130E0  6EDA               	movwf	fsr2h,c
 12788  0130E2  0EFF               	movlw	255
 12789  0130E4  22DA               	addwfc	fsr2h,f,c
 12790  0130E6  006F FF7B FFE6     	movff	postinc2,postinc1
 12791  0130EC  006F FF7B FFE6     	movff	postinc2,postinc1
 12792  0130F2  006F FF7B FFE6     	movff	postinc2,postinc1
 12793  0130F8  006F FF7B FFE6     	movff	postinc2,postinc1
 12794  0130FE  006F FF7B FFE6     	movff	postinc2,postinc1
 12795  013104  006F FF7B FFE6     	movff	postinc2,postinc1
 12796  01310A  006F FF7B FFE6     	movff	postinc2,postinc1
 12797  013110  006F FF7B FFE6     	movff	postinc2,postinc1
 12798                           
 12799                           ;stkvar	_fp @ sp[(-41)+-2]
 12800  013116  0ED5               	movlw	-43
 12801  013118  006F FF8F FFE6     	movff	plusw1,postinc1
 12802  01311E  006F FF8F FFE6     	movff	plusw1,postinc1
 12803  013124  ECC9  F0AE         	call	_xtoa	;wreg free
 12804  013128  D105               	goto	l2367
 12805  01312A                     l12449:
 12806                           
 12807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 12808  01312A  0E02               	movlw	2
 12809  01312C  6EE6               	movwf	postinc1,c
 12810  01312E  0E00               	movlw	0
 12811  013130  6EE6               	movwf	postinc1,c
 12812  013132  0EF5               	movlw	low STR_93
 12813  013134  6EE6               	movwf	postinc1,c
 12814  013136  0EFF               	movlw	high STR_93
 12815  013138  6EE6               	movwf	postinc1,c
 12816                           
 12817                           ;stkvar	_fmt @ sp[(-36)+-4]
 12818  01313A  0ED8               	movlw	-40
 12819  01313C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12820  013142  0ED9               	movlw	-39
 12821  013144  006F FF8F FFDA     	movff	plusw1,fsr2h
 12822  01314A  006F FF78  F00B    	movff	postinc2,btemp+10
 12823  013150  006F FF74  F00C    	movff	postdec2,btemp+11
 12824  013156  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12825  01315C  0060  F033  FFE6   	movff	btemp+11,postinc1
 12826  013162  EC7C  F0BE         	call	_strncmp	;wreg free
 12827  013166  5001               	movf	btemp^0,w,c
 12828  013168  1002               	iorwf	(btemp+1)^0,w,c
 12829  01316A  B4D8               	btfsc	status,2,c
 12830  01316C  D022               	goto	u12180
 12831  01316E  0E02               	movlw	2
 12832  013170  6EE6               	movwf	postinc1,c
 12833  013172  0E00               	movlw	0
 12834  013174  6EE6               	movwf	postinc1,c
 12835  013176  0EE6               	movlw	low STR_97
 12836  013178  6EE6               	movwf	postinc1,c
 12837  01317A  0EFF               	movlw	high STR_97
 12838  01317C  6EE6               	movwf	postinc1,c
 12839                           
 12840                           ;stkvar	_fmt @ sp[(-36)+-4]
 12841  01317E  0ED8               	movlw	-40
 12842  013180  006F FF8F FFD9     	movff	plusw1,fsr2l
 12843  013186  0ED9               	movlw	-39
 12844  013188  006F FF8F FFDA     	movff	plusw1,fsr2h
 12845  01318E  006F FF78  F00B    	movff	postinc2,btemp+10
 12846  013194  006F FF74  F00C    	movff	postdec2,btemp+11
 12847  01319A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12848  0131A0  0060  F033  FFE6   	movff	btemp+11,postinc1
 12849  0131A6  EC7C  F0BE         	call	_strncmp	;wreg free
 12850  0131AA  5001               	movf	btemp^0,w,c
 12851  0131AC  1002               	iorwf	(btemp+1)^0,w,c
 12852  0131AE  A4D8               	btfss	status,2,c
 12853  0131B0  D058               	goto	l12463
 12854  0131B2                     u12180:
 12855                           
 12856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 12857                           ;stkvar	_fmt @ sp[(-32)+-4]
 12858  0131B2  0EDC               	movlw	-36
 12859  0131B4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12860  0131BA  0EDD               	movlw	-35
 12861  0131BC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12862  0131C2  006F FF78  F00B    	movff	postinc2,btemp+10
 12863  0131C8  006F FF74  F00C    	movff	postdec2,btemp+11
 12864  0131CE  0E01               	movlw	1
 12865  0131D0  260B               	addwf	(btemp+10)^0,f,c
 12866  0131D2  0E00               	movlw	0
 12867  0131D4  220C               	addwfc	(btemp+11)^0,f,c
 12868  0131D6  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12869  0131DC  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12870  0131E2                     	if	0	;tblptru may be non-zero
 12871  0131E2                     	endif
 12872  0131E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12873  0131E2  0E00               	movlw	low (__mediumconst shr (0+16))
 12874  0131E4  6EF8               	movwf	tblptru,c
 12875  0131E6                     	endif
 12876                           
 12877                           ;stkvar	_c @ sp[(-32)+31]
 12878  0131E6  0008               	tblrd		*
 12879  0131E8  0EFF               	movlw	-1
 12880  0131EA  006F FFD7 FFE3     	movff	tablat,plusw1
 12881                           
 12882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 12883                           ;stkvar	_fmt @ sp[(-32)+-4]
 12884  0131F0  0EDC               	movlw	-36
 12885  0131F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12886  0131F8  0EDD               	movlw	-35
 12887  0131FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12888  013200  0E02               	movlw	2
 12889  013202  26DE               	addwf	postinc2,f,c
 12890  013204  0E00               	movlw	0
 12891  013206  22DD               	addwfc	postdec2,f,c
 12892                           
 12893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12894                           ;stkvar	_ap @ sp[(-32)+-6]
 12895  013208  0EDA               	movlw	-38
 12896  01320A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12897  013210  0EDB               	movlw	-37
 12898  013212  006F FF8F FFDA     	movff	plusw1,fsr2h
 12899  013218  0E04               	movlw	4
 12900  01321A  5EDE               	subwf	postinc2,f,c
 12901  01321C  0E00               	movlw	0
 12902  01321E  5ADD               	subwfb	postdec2,f,c
 12903  013220  006F FF78  F00B    	movff	postinc2,btemp+10
 12904  013226  006F FF74  F00C    	movff	postdec2,btemp+11
 12905  01322C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12906  013232  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12907  013238  006F FF78  F009    	movff	postinc2,btemp+8
 12908  01323E  006F FF78  F00A    	movff	postinc2,btemp+9
 12909  013244  006F FF78  F00B    	movff	postinc2,btemp+10
 12910  01324A  006F FF78  F00C    	movff	postinc2,btemp+11
 12911  013250  5009               	movf	(btemp+8)^0,w,c
 12912  013252  6E11               	movwf	(btemp+16)^0,c
 12913  013254  500A               	movf	(btemp+9)^0,w,c
 12914  013256  6E12               	movwf	(btemp+17)^0,c
 12915  013258  500B               	movf	(btemp+10)^0,w,c
 12916  01325A  6E13               	movwf	(btemp+18)^0,c
 12917  01325C  500C               	movf	(btemp+11)^0,w,c
 12918  01325E  6E14               	movwf	(btemp+19)^0,c
 12919  013260  D714               	goto	L11
 12920  013262                     l12463:
 12921                           
 12922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 12923                           ;stkvar	_fmt @ sp[(-32)+-4]
 12924  013262  0EDC               	movlw	-36
 12925  013264  006F FF8F FFD9     	movff	plusw1,fsr2l
 12926  01326A  0EDD               	movlw	-35
 12927  01326C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12928  013272  006F FF7B FFF6     	movff	postinc2,tblptrl
 12929  013278  006F FF77 FFF7     	movff	postdec2,tblptrh
 12930  01327E                     	if	0	;tblptru may be non-zero
 12931  01327E                     	endif
 12932  01327E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12933  01327E  0E00               	movlw	low (__mediumconst shr (0+16))
 12934  013280  6EF8               	movwf	tblptru,c
 12935  013282                     	endif
 12936  013282  0008               	tblrd		*
 12937  013284  50F5               	movf	tablat,w,c
 12938  013286  0A25               	xorlw	37
 12939  013288  A4D8               	btfss	status,2,c
 12940  01328A  D01A               	goto	l12473
 12941                           
 12942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 12943                           ;stkvar	_fmt @ sp[(-32)+-4]
 12944  01328C  0EDC               	movlw	-36
 12945  01328E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12946  013294  0EDD               	movlw	-35
 12947  013296  006F FF8F FFDA     	movff	plusw1,fsr2h
 12948  01329C  2ADE               	incf	postinc2,f,c
 12949  01329E  0E00               	movlw	0
 12950  0132A0  22DD               	addwfc	postdec2,f,c
 12951                           
 12952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 12953                           ;stkvar	_fp @ sp[(-32)+-2]
 12954  0132A2  0EDE               	movlw	-34
 12955  0132A4  006F FF8F FFE6     	movff	plusw1,postinc1
 12956  0132AA  006F FF8F FFE6     	movff	plusw1,postinc1
 12957  0132B0  0E25               	movlw	37
 12958  0132B2  6EE6               	movwf	postinc1,c
 12959  0132B4  0E00               	movlw	0
 12960  0132B6  6EE6               	movwf	postinc1,c
 12961  0132B8  EC1B  F0CB         	call	_fputc	;wreg free
 12962  0132BC                     l12469:
 12963                           
 12964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 12965  0132BC  0E01               	movlw	1
 12966  0132BE  D00C               	goto	L12
 12967  0132C0                     l12473:
 12968                           
 12969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 12970                           ;stkvar	_fmt @ sp[(-32)+-4]
 12971  0132C0  0EDC               	movlw	-36
 12972  0132C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12973  0132C8  0EDD               	movlw	-35
 12974  0132CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12975  0132D0  2ADE               	incf	postinc2,f,c
 12976  0132D2  0E00               	movlw	0
 12977  0132D4  22DD               	addwfc	postdec2,f,c
 12978                           
 12979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 12980  0132D6  0E00               	movlw	0
 12981  0132D8                     L12:
 12982  0132D8  6E01               	movwf	btemp^0,c
 12983  0132DA  0E00               	movlw	0
 12984  0132DC  6E02               	movwf	(btemp+1)^0,c
 12985  0132DE  D02A               	goto	l2367
 12986  0132E0                     l12479:
 12987                           
 12988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 12989                           ;stkvar	_fp @ sp[(-32)+-2]
 12990  0132E0  0EDE               	movlw	-34
 12991  0132E2  006F FF8F FFE6     	movff	plusw1,postinc1
 12992  0132E8  006F FF8F FFE6     	movff	plusw1,postinc1
 12993                           
 12994                           ;stkvar	_fmt @ sp[(-34)+-4]
 12995  0132EE  0EDA               	movlw	-38
 12996  0132F0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12997  0132F6  0EDB               	movlw	-37
 12998  0132F8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12999  0132FE  006F FF7B FFF6     	movff	postinc2,tblptrl
 13000  013304  006F FF77 FFF7     	movff	postdec2,tblptrh
 13001  01330A                     	if	0	;tblptru may be non-zero
 13002  01330A                     	endif
 13003  01330A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13004  01330A  0E00               	movlw	low (__mediumconst shr (0+16))
 13005  01330C  6EF8               	movwf	tblptru,c
 13006  01330E                     	endif
 13007  01330E  0008               	tblrd		*
 13008  013310  50F5               	movf	tablat,w,c
 13009  013312  6EE6               	movwf	postinc1,c
 13010  013314  0E00               	movlw	0
 13011  013316  6EE6               	movwf	postinc1,c
 13012  013318  EC1B  F0CB         	call	_fputc	;wreg free
 13013                           
 13014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 13015                           ;stkvar	_fmt @ sp[(-32)+-4]
 13016  01331C  0EDC               	movlw	-36
 13017  01331E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13018  013324  0EDD               	movlw	-35
 13019  013326  006F FF8F FFDA     	movff	plusw1,fsr2h
 13020  01332C  2ADE               	incf	postinc2,f,c
 13021  01332E  0E00               	movlw	0
 13022  013330  22DD               	addwfc	postdec2,f,c
 13023  013332  D7C4               	goto	l12469
 13024  013334                     l2367:
 13025                           
 13026                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 13027  013334  0EDA               	movlw	218
 13028  013336  26E1               	addwf	fsr1l,f,c
 13029  013338  0EFF               	movlw	255
 13030  01333A  22E2               	addwfc	fsr1h,f,c
 13031  01333C  0012               	return		;funcret
 13032  01333E                     __end_of_vfpfcnvrt:
 13033                           	opt callstack 0
 13034                           
 13035 ;; *************** function _xtoa *****************
 13036 ;; Defined at:
 13037 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13038 ;; Parameters:    Size  Location     Type
 13039 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13040 ;;		 -> f(6), NULL(0), 
 13041 ;;  d               8  [STACK] unsigned long long 
 13042 ;;  x               1  [STACK] unsigned char 
 13043 ;; Auto vars:     Size  Location     Type
 13044 ;;  n               8  [STACK] unsigned long long 
 13045 ;;  c               2  [STACK] int 
 13046 ;;  i               2  [STACK] int 
 13047 ;;  w               2  [STACK] int 
 13048 ;;  p               2  [STACK] int 
 13049 ;; Return value:  Size  Location     Type
 13050 ;;                  2  [STACK] int 
 13051 ;; Registers used:
 13052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 13053 ;; Tracked objects:
 13054 ;;		On entry : 0/0
 13055 ;;		On exit  : 0/0
 13056 ;;		Unchanged: 0/0
 13057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13062 ;;Total ram usage:        0 bytes
 13063 ;; Hardware stack levels used:    1
 13064 ;; Hardware stack levels required when called:   20
 13065 ;; This function calls:
 13066 ;;		_isalpha
 13067 ;;		_isupper
 13068 ;;		_pad
 13069 ;;		_toupper
 13070 ;; This function is called by:
 13071 ;;		_vfpfcnvrt
 13072 ;; This function uses a reentrant model
 13073 ;;
 13074                           
 13075                           	psect	text46
 13076  015D92                     __ptext46:
 13077                           	opt callstack 0
 13078  015D92                     _xtoa:
 13079                           	opt callstack 0
 13080                           
 13081                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13082  015D92  0E14               	movlw	20
 13083  015D94  26E1               	addwf	fsr1l,f,c
 13084  015D96  0E00               	movlw	0
 13085  015D98  22E2               	addwfc	fsr1h,f,c
 13086                           
 13087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 13088                           
 13089                           ;incstack = 0
 13090 ;; hardware stack exceeded
 13091  015D9A  AE3D               	btfss	(_prec+1)^0,7,c
 13092                           
 13093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 13094  015D9C  923E               	bcf	_flags^0,1,c
 13095                           
 13096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 13097  015D9E  BE3D               	btfsc	(_prec+1)^0,7,c
 13098  015DA0  D005               	goto	u11710
 13099  015DA2  503D               	movf	(_prec+1)^0,w,c
 13100  015DA4  E110               	bnz	l12203
 13101  015DA6  043C               	decf	_prec^0,w,c
 13102  015DA8  B0D8               	btfsc	status,0,c
 13103  015DAA  D00D               	goto	l12203
 13104  015DAC                     u11710:
 13105  015DAC  0E01               	movlw	1
 13106  015DAE  6E0B               	movwf	(btemp+10)^0,c
 13107  015DB0  0E00               	movlw	0
 13108  015DB2  6E0C               	movwf	(btemp+11)^0,c
 13109                           
 13110                           ;stkvar	_p @ sp[(-20)+18]
 13111  015DB4  0EFE               	movlw	-2
 13112  015DB6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13113  015DBC  0EFF               	movlw	-1
 13114  015DBE  0060  F033  FFE3   	movff	btemp+11,plusw1
 13115  015DC4  D008               	goto	l2317
 13116  015DC6                     l12203:
 13117                           
 13118                           ;stkvar	_p @ sp[(-20)+18]
 13119  015DC6  0EFE               	movlw	-2
 13120  015DC8  0060  F0F3  FFE3   	movff	_prec,plusw1
 13121  015DCE  0EFF               	movlw	-1
 13122  015DD0  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 13123  015DD6                     l2317:
 13124                           
 13125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 13126                           ;stkvar	_w @ sp[(-20)+16]
 13127  015DD6  0EFC               	movlw	-4
 13128  015DD8  0060  F0EB  FFE3   	movff	_width,plusw1
 13129  015DDE  0EFD               	movlw	-3
 13130  015DE0  0060  F0EF  FFE3   	movff	_width+1,plusw1
 13131                           
 13132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 13133  015DE6  A83E               	btfss	_flags^0,4,c
 13134  015DE8  D00B               	goto	l12209
 13135                           
 13136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 13137                           ;stkvar	_w @ sp[(-20)+16]
 13138  015DEA  50E1               	movf	fsr1l,w,c
 13139  015DEC  0FFC               	addlw	-4
 13140  015DEE  6ED9               	movwf	fsr2l,c
 13141  015DF0  50E2               	movf	fsr1h,w,c
 13142  015DF2  6EDA               	movwf	fsr2h,c
 13143  015DF4  0EFF               	movlw	255
 13144  015DF6  22DA               	addwfc	fsr2h,f,c
 13145  015DF8  0EFE               	movlw	254
 13146  015DFA  26DE               	addwf	postinc2,f,c
 13147  015DFC  0EFF               	movlw	255
 13148  015DFE  22DD               	addwfc	postdec2,f,c
 13149  015E00                     l12209:
 13150                           
 13151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 13152                           ;stkvar	_d @ sp[(-20)+-10]
 13153  015E00  0EE2               	movlw	226
 13154  015E02  24E1               	addwf	fsr1l,w,c
 13155  015E04  6ED9               	movwf	fsr2l,c
 13156  015E06  0EFF               	movlw	255
 13157  015E08  20E2               	addwfc	fsr1h,w,c
 13158  015E0A  6EDA               	movwf	fsr2h,c
 13159                           
 13160                           ;stkvar	_n @ sp[(-20)+4]
 13161  015E0C  0E08               	movlw	8
 13162  015E0E  6E01               	movwf	btemp^0,c
 13163  015E10  0EF0               	movlw	-16
 13164  015E12                     us1173999:
 13165  015E12  006F FF7B FFE3     	movff	postinc2,plusw1
 13166  015E18  28E8               	incf	wreg,w,c
 13167  015E1A  2E01               	decfsz	btemp^0,f,c
 13168  015E1C  D7FA               	bra	us1173999
 13169                           
 13170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 13171  015E1E  0E4F               	movlw	79
 13172  015E20  6E0B               	movwf	(btemp+10)^0,c
 13173  015E22  0E00               	movlw	0
 13174  015E24  6E0C               	movwf	(btemp+11)^0,c
 13175                           
 13176                           ;stkvar	_i @ sp[(-20)+14]
 13177  015E26  0EFA               	movlw	-6
 13178  015E28  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13179  015E2E  0EFB               	movlw	-5
 13180  015E30  0060  F033  FFE3   	movff	btemp+11,plusw1
 13181                           
 13182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 13183  015E36  0102               	movlb	2	; () banked
 13184  015E38  6BC5               	clrf	(_dbuf+79)& (0+255),b
 13185                           
 13186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13187  015E3A  D0EE               	goto	l12247
 13188  015E3C                     l12215:
 13189                           
 13190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 13191                           ;stkvar	_i @ sp[(-20)+14]
 13192  015E3C  50E1               	movf	fsr1l,w,c
 13193  015E3E  0FFA               	addlw	-6
 13194  015E40  6ED9               	movwf	fsr2l,c
 13195  015E42  50E2               	movf	fsr1h,w,c
 13196  015E44  6EDA               	movwf	fsr2h,c
 13197  015E46  0EFF               	movlw	255
 13198  015E48  22DA               	addwfc	fsr2h,f,c
 13199  015E4A  06DE               	decf	postinc2,f,c
 13200  015E4C  0E00               	movlw	0
 13201  015E4E  5ADD               	subwfb	postdec2,f,c
 13202                           
 13203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 13204                           ;stkvar	_n @ sp[(-20)+4]
 13205  015E50  0EF0               	movlw	-16
 13206  015E52  006F FF8C  F00B    	movff	plusw1,btemp+10
 13207  015E58  0EF1               	movlw	-15
 13208  015E5A  006F FF8C  F00C    	movff	plusw1,btemp+11
 13209  015E60  0E0F               	movlw	15
 13210  015E62  160B               	andwf	(btemp+10)^0,f,c
 13211  015E64  0E00               	movlw	0
 13212  015E66  160C               	andwf	(btemp+11)^0,f,c
 13213                           
 13214                           ;stkvar	_c @ sp[(-20)+12]
 13215  015E68  0EF8               	movlw	-8
 13216  015E6A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13217  015E70  0EF9               	movlw	-7
 13218  015E72  0060  F033  FFE3   	movff	btemp+11,plusw1
 13219                           
 13220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 13221                           ;stkvar	_c @ sp[(-20)+12]
 13222  015E78  0EF9               	movlw	-7
 13223  015E7A  BEE3               	btfsc	plusw1,7,c
 13224  015E7C  D00F               	goto	l12223
 13225  015E7E  0EF9               	movlw	-7
 13226  015E80  50E3               	movf	plusw1,w,c
 13227  015E82  E108               	bnz	u11740
 13228  015E84  0EF8               	movlw	-8
 13229  015E86  006F FF8C  F001    	movff	plusw1,btemp
 13230  015E8C  0E0A               	movlw	10
 13231  015E8E  5E01               	subwf	btemp^0,f,c
 13232  015E90  A0D8               	btfss	status,0,c
 13233  015E92  D004               	goto	l12223
 13234  015E94                     u11740:
 13235                           
 13236                           ;stkvar	_c @ sp[(-20)+12]
 13237  015E94  0EF8               	movlw	-8
 13238  015E96  50E3               	movf	plusw1,w,c
 13239  015E98  0F57               	addlw	87
 13240  015E9A  D003               	goto	L13
 13241  015E9C                     l12223:
 13242                           
 13243                           ;stkvar	_c @ sp[(-20)+12]
 13244  015E9C  0EF8               	movlw	-8
 13245  015E9E  50E3               	movf	plusw1,w,c
 13246  015EA0  0F30               	addlw	48
 13247  015EA2                     L13:
 13248  015EA2  6E0B               	movwf	(btemp+10)^0,c
 13249  015EA4  0EF9               	movlw	-7
 13250  015EA6  006F FF8C  F00C    	movff	plusw1,btemp+11
 13251  015EAC  0E00               	movlw	0
 13252  015EAE  220C               	addwfc	(btemp+11)^0,f,c
 13253                           
 13254                           ;stkvar	_c @ sp[(-20)+12]
 13255  015EB0  0EF8               	movlw	-8
 13256  015EB2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13257  015EB8  0EF9               	movlw	-7
 13258  015EBA  0060  F033  FFE3   	movff	btemp+11,plusw1
 13259  015EC0  0EBF               	movlw	191
 13260  015EC2  6E0B               	movwf	(btemp+10)^0,c
 13261  015EC4  0EFF               	movlw	255
 13262  015EC6  6E0C               	movwf	(btemp+11)^0,c
 13263                           
 13264                           ;stkvar	_x @ sp[(-20)+-11]
 13265  015EC8  0EE1               	movlw	-31
 13266  015ECA  50E3               	movf	plusw1,w,c
 13267  015ECC  6E09               	movwf	(btemp+8)^0,c
 13268  015ECE  6A0A               	clrf	(btemp+9)^0,c
 13269  015ED0  500B               	movf	(btemp+10)^0,w,c
 13270  015ED2  2609               	addwf	(btemp+8)^0,f,c
 13271  015ED4  500C               	movf	(btemp+11)^0,w,c
 13272  015ED6  220A               	addwfc	(btemp+9)^0,f,c
 13273  015ED8  500A               	movf	(btemp+9)^0,w,c
 13274  015EDA  E106               	bnz	u11750
 13275  015EDC  0E1A               	movlw	26
 13276  015EDE  5C09               	subwf	(btemp+8)^0,w,c
 13277  015EE0  B0D8               	btfsc	status,0,c
 13278  015EE2  D002               	goto	u11750
 13279  015EE4  0E01               	movlw	1
 13280  015EE6  D001               	goto	u11760
 13281  015EE8                     u11750:
 13282  015EE8  0E00               	movlw	0
 13283  015EEA                     u11760:
 13284  015EEA  6E0B               	movwf	(btemp+10)^0,c
 13285  015EEC  6A0C               	clrf	(btemp+11)^0,c
 13286                           
 13287                           ;stkvar	_xtoa$5530 @ sp[(-20)+2]
 13288  015EEE  0EEE               	movlw	-18
 13289  015EF0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13290  015EF6  0EEF               	movlw	-17
 13291  015EF8  0060  F033  FFE3   	movff	btemp+11,plusw1
 13292                           
 13293                           ;stkvar	_xtoa$5530 @ sp[(-20)+2]
 13294  015EFE  0EEE               	movlw	-18
 13295  015F00  006F FF8C  F001    	movff	plusw1,btemp
 13296  015F06  0EEF               	movlw	-17
 13297  015F08  50E3               	movf	plusw1,w,c
 13298  015F0A  1001               	iorwf	btemp^0,w,c
 13299  015F0C  B4D8               	btfsc	status,2,c
 13300  015F0E  D041               	goto	l12239
 13301  015F10  0E9F               	movlw	159
 13302  015F12  6E0B               	movwf	(btemp+10)^0,c
 13303  015F14  0EFF               	movlw	255
 13304  015F16  6E0C               	movwf	(btemp+11)^0,c
 13305                           
 13306                           ;stkvar	_c @ sp[(-20)+12]
 13307  015F18  0EF8               	movlw	-8
 13308  015F1A  006F FF8C  F009    	movff	plusw1,btemp+8
 13309  015F20  0EF9               	movlw	-7
 13310  015F22  006F FF8C  F00A    	movff	plusw1,btemp+9
 13311  015F28  0E20               	movlw	32
 13312  015F2A  1209               	iorwf	(btemp+8)^0,f,c
 13313  015F2C  0E00               	movlw	0
 13314  015F2E  120A               	iorwf	(btemp+9)^0,f,c
 13315  015F30  500B               	movf	(btemp+10)^0,w,c
 13316  015F32  2609               	addwf	(btemp+8)^0,f,c
 13317  015F34  500C               	movf	(btemp+11)^0,w,c
 13318  015F36  220A               	addwfc	(btemp+9)^0,f,c
 13319  015F38  500A               	movf	(btemp+9)^0,w,c
 13320  015F3A  E106               	bnz	u11780
 13321  015F3C  0E1A               	movlw	26
 13322  015F3E  5C09               	subwf	(btemp+8)^0,w,c
 13323  015F40  B0D8               	btfsc	status,0,c
 13324  015F42  D002               	goto	u11780
 13325  015F44  0E01               	movlw	1
 13326  015F46  D001               	goto	u11790
 13327  015F48                     u11780:
 13328  015F48  0E00               	movlw	0
 13329  015F4A                     u11790:
 13330  015F4A  6E0B               	movwf	(btemp+10)^0,c
 13331  015F4C  6A0C               	clrf	(btemp+11)^0,c
 13332                           
 13333                           ;stkvar	_xtoa$5531 @ sp[(-20)+0]
 13334  015F4E  0EEC               	movlw	-20
 13335  015F50  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13336  015F56  0EED               	movlw	-19
 13337  015F58  0060  F033  FFE3   	movff	btemp+11,plusw1
 13338                           
 13339                           ;stkvar	_xtoa$5531 @ sp[(-20)+0]
 13340  015F5E  0EEC               	movlw	-20
 13341  015F60  006F FF8C  F001    	movff	plusw1,btemp
 13342  015F66  0EED               	movlw	-19
 13343  015F68  50E3               	movf	plusw1,w,c
 13344  015F6A  1001               	iorwf	btemp^0,w,c
 13345  015F6C  B4D8               	btfsc	status,2,c
 13346  015F6E  D011               	goto	l12239
 13347                           
 13348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 13349                           ;stkvar	_c @ sp[(-20)+12]
 13350  015F70  0EF8               	movlw	-8
 13351  015F72  006F FF8F FFE6     	movff	plusw1,postinc1
 13352  015F78  006F FF8F FFE6     	movff	plusw1,postinc1
 13353  015F7E  ECFC  F0D4         	call	_toupper	;wreg free
 13354                           
 13355                           ;stkvar	_c @ sp[(-20)+12]
 13356  015F82  0EF8               	movlw	-8
 13357  015F84  0060  F007  FFE3   	movff	btemp,plusw1
 13358  015F8A  0EF9               	movlw	-7
 13359  015F8C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13360  015F92                     l12239:
 13361                           
 13362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 13363                           ;stkvar	_c @ sp[(-20)+12]
 13364                           ;stkvar	_i @ sp[(-20)+14]
 13365  015F92  0EFA               	movlw	-6
 13366  015F94  006F FF8C  F00B    	movff	plusw1,btemp+10
 13367  015F9A  0EFB               	movlw	-5
 13368  015F9C  006F FF8C  F00C    	movff	plusw1,btemp+11
 13369  015FA2  0E76               	movlw	low _dbuf
 13370  015FA4  240B               	addwf	(btemp+10)^0,w,c
 13371  015FA6  6ED9               	movwf	fsr2l,c
 13372  015FA8  0E02               	movlw	high _dbuf
 13373  015FAA  200C               	addwfc	(btemp+11)^0,w,c
 13374  015FAC  6EDA               	movwf	fsr2h,c
 13375  015FAE  0EF8               	movlw	-8
 13376  015FB0  006F FF8F FFDF     	movff	plusw1,indf2
 13377                           
 13378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 13379                           ;stkvar	_p @ sp[(-20)+18]
 13380  015FB6  50E1               	movf	fsr1l,w,c
 13381  015FB8  0FFE               	addlw	-2
 13382  015FBA  6ED9               	movwf	fsr2l,c
 13383  015FBC  50E2               	movf	fsr1h,w,c
 13384  015FBE  6EDA               	movwf	fsr2h,c
 13385  015FC0  0EFF               	movlw	255
 13386  015FC2  22DA               	addwfc	fsr2h,f,c
 13387  015FC4  06DE               	decf	postinc2,f,c
 13388  015FC6  0E00               	movlw	0
 13389  015FC8  5ADD               	subwfb	postdec2,f,c
 13390                           
 13391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 13392                           ;stkvar	_w @ sp[(-20)+16]
 13393  015FCA  50E1               	movf	fsr1l,w,c
 13394  015FCC  0FFC               	addlw	-4
 13395  015FCE  6ED9               	movwf	fsr2l,c
 13396  015FD0  50E2               	movf	fsr1h,w,c
 13397  015FD2  6EDA               	movwf	fsr2h,c
 13398  015FD4  0EFF               	movlw	255
 13399  015FD6  22DA               	addwfc	fsr2h,f,c
 13400  015FD8  06DE               	decf	postinc2,f,c
 13401  015FDA  0E00               	movlw	0
 13402  015FDC  5ADD               	subwfb	postdec2,f,c
 13403                           
 13404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 13405  015FDE  0E04               	movlw	4
 13406  015FE0  6E0C               	movwf	(btemp+11)^0,c
 13407                           
 13408                           ;stkvar	_n @ sp[(-20)+4]
 13409  015FE2  50E1               	movf	fsr1l,w,c
 13410  015FE4  0FF0               	addlw	-16
 13411  015FE6  6ED9               	movwf	fsr2l,c
 13412  015FE8  50E2               	movf	fsr1h,w,c
 13413  015FEA  6EDA               	movwf	fsr2h,c
 13414  015FEC  0EFF               	movlw	255
 13415  015FEE  22DA               	addwfc	fsr2h,f,c
 13416  015FF0  280C               	incf	(btemp+11)^0,w,c
 13417  015FF2  52DE               	movf	postinc2,f,c
 13418  015FF4  D00F               	goto	u11810
 13419  015FF6                     u11815:
 13420  015FF6  52DE               	movf	postinc2,f,c
 13421  015FF8  52DE               	movf	postinc2,f,c
 13422  015FFA  52DE               	movf	postinc2,f,c
 13423  015FFC  52DE               	movf	postinc2,f,c
 13424  015FFE  52DE               	movf	postinc2,f,c
 13425  016000  52DE               	movf	postinc2,f,c
 13426  016002  90D8               	bcf	status,0,c
 13427  016004  32DD               	rrcf	postdec2,f,c
 13428  016006  32DD               	rrcf	postdec2,f,c
 13429  016008  32DD               	rrcf	postdec2,f,c
 13430  01600A  32DD               	rrcf	postdec2,f,c
 13431  01600C  32DD               	rrcf	postdec2,f,c
 13432  01600E  32DD               	rrcf	postdec2,f,c
 13433  016010  32DD               	rrcf	postdec2,f,c
 13434  016012  32DE               	rrcf	postinc2,f,c
 13435  016014                     u11810:
 13436  016014  2EE8               	decfsz	wreg,f,c
 13437  016016  D7EF               	goto	u11815
 13438  016018                     l12247:
 13439                           
 13440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13441                           ;stkvar	_i @ sp[(-20)+14]
 13442  016018  0EFB               	movlw	-5
 13443  01601A  BEE3               	btfsc	plusw1,7,c
 13444  01601C  D03A               	goto	u11860
 13445  01601E  0EFB               	movlw	-5
 13446  016020  50E3               	movf	plusw1,w,c
 13447  016022  E108               	bnz	u11820
 13448  016024  0EFA               	movlw	-6
 13449  016026  006F FF8C  F001    	movff	plusw1,btemp
 13450  01602C  0E02               	movlw	2
 13451  01602E  5E01               	subwf	btemp^0,f,c
 13452  016030  A0D8               	btfss	status,0,c
 13453  016032  D02F               	goto	u11860
 13454  016034                     u11820:
 13455                           
 13456                           ;stkvar	_n @ sp[(-20)+4]
 13457  016034  0EF0               	movlw	-16
 13458  016036  50E3               	movf	plusw1,w,c
 13459  016038  E115               	bnz	u11831
 13460  01603A  0EF1               	movlw	-15
 13461  01603C  50E3               	movf	plusw1,w,c
 13462  01603E  E112               	bnz	u11831
 13463  016040  0EF2               	movlw	-14
 13464  016042  50E3               	movf	plusw1,w,c
 13465  016044  E10F               	bnz	u11831
 13466  016046  0EF3               	movlw	-13
 13467  016048  50E3               	movf	plusw1,w,c
 13468  01604A  E10C               	bnz	u11831
 13469  01604C  0EF4               	movlw	-12
 13470  01604E  50E3               	movf	plusw1,w,c
 13471  016050  E109               	bnz	u11831
 13472  016052  0EF5               	movlw	-11
 13473  016054  50E3               	movf	plusw1,w,c
 13474  016056  E106               	bnz	u11831
 13475  016058  0EF6               	movlw	-10
 13476  01605A  50E3               	movf	plusw1,w,c
 13477  01605C  E103               	bnz	u11831
 13478  01605E  0EF7               	movlw	-9
 13479  016060  50E3               	movf	plusw1,w,c
 13480  016062  A4D8               	btfss	status,2,c
 13481  016064                     u11831:
 13482  016064  D6EB               	goto	l12215
 13483                           
 13484                           ;stkvar	_p @ sp[(-20)+18]
 13485  016066  0EFF               	movlw	-1
 13486  016068  BEE3               	btfsc	plusw1,7,c
 13487  01606A  D007               	goto	u11840
 13488  01606C  0EFF               	movlw	-1
 13489  01606E  50E3               	movf	plusw1,w,c
 13490  016070  E103               	bnz	u11841
 13491  016072  0EFE               	movlw	-2
 13492  016074  04E3               	decf	plusw1,w,c
 13493  016076  B0D8               	btfsc	status,0,c
 13494  016078                     u11841:
 13495  016078  D6E1               	goto	l12215
 13496  01607A                     u11840:
 13497                           
 13498                           ;stkvar	_w @ sp[(-20)+16]
 13499  01607A  0EFD               	movlw	-3
 13500  01607C  BEE3               	btfsc	plusw1,7,c
 13501  01607E  D009               	goto	u11860
 13502  016080  0EFD               	movlw	-3
 13503  016082  50E3               	movf	plusw1,w,c
 13504  016084  E104               	bnz	u11850
 13505  016086  0EFC               	movlw	-4
 13506  016088  04E3               	decf	plusw1,w,c
 13507  01608A  A0D8               	btfss	status,0,c
 13508  01608C  D002               	goto	u11860
 13509  01608E                     u11850:
 13510  01608E  B23E               	btfsc	_flags^0,1,c
 13511  016090  D6D5               	goto	l12215
 13512  016092                     u11860:
 13513                           
 13514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 13515  016092  A83E               	btfss	_flags^0,4,c
 13516  016094  D036               	goto	l12263
 13517                           
 13518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 13519                           ;stkvar	_i @ sp[(-20)+14]
 13520  016096  50E1               	movf	fsr1l,w,c
 13521  016098  0FFA               	addlw	-6
 13522  01609A  6ED9               	movwf	fsr2l,c
 13523  01609C  50E2               	movf	fsr1h,w,c
 13524  01609E  6EDA               	movwf	fsr2h,c
 13525  0160A0  0EFF               	movlw	255
 13526  0160A2  22DA               	addwfc	fsr2h,f,c
 13527  0160A4  06DE               	decf	postinc2,f,c
 13528  0160A6  0E00               	movlw	0
 13529  0160A8  5ADD               	subwfb	postdec2,f,c
 13530                           
 13531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 13532                           ;stkvar	_x @ sp[(-20)+-11]
 13533                           ;stkvar	_i @ sp[(-20)+14]
 13534  0160AA  0EFA               	movlw	-6
 13535  0160AC  006F FF8C  F00B    	movff	plusw1,btemp+10
 13536  0160B2  0EFB               	movlw	-5
 13537  0160B4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13538  0160BA  0E76               	movlw	low _dbuf
 13539  0160BC  240B               	addwf	(btemp+10)^0,w,c
 13540  0160BE  6ED9               	movwf	fsr2l,c
 13541  0160C0  0E02               	movlw	high _dbuf
 13542  0160C2  200C               	addwfc	(btemp+11)^0,w,c
 13543  0160C4  6EDA               	movwf	fsr2h,c
 13544  0160C6  0EE1               	movlw	-31
 13545  0160C8  006F FF8F FFDF     	movff	plusw1,indf2
 13546                           
 13547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 13548                           ;stkvar	_i @ sp[(-20)+14]
 13549  0160CE  50E1               	movf	fsr1l,w,c
 13550  0160D0  0FFA               	addlw	-6
 13551  0160D2  6ED9               	movwf	fsr2l,c
 13552  0160D4  50E2               	movf	fsr1h,w,c
 13553  0160D6  6EDA               	movwf	fsr2h,c
 13554  0160D8  0EFF               	movlw	255
 13555  0160DA  22DA               	addwfc	fsr2h,f,c
 13556  0160DC  06DE               	decf	postinc2,f,c
 13557  0160DE  0E00               	movlw	0
 13558  0160E0  5ADD               	subwfb	postdec2,f,c
 13559                           
 13560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 13561                           ;stkvar	_i @ sp[(-20)+14]
 13562  0160E2  0EFA               	movlw	-6
 13563  0160E4  006F FF8C  F00B    	movff	plusw1,btemp+10
 13564  0160EA  0EFB               	movlw	-5
 13565  0160EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 13566  0160F2  0E76               	movlw	low _dbuf
 13567  0160F4  240B               	addwf	(btemp+10)^0,w,c
 13568  0160F6  6ED9               	movwf	fsr2l,c
 13569  0160F8  0E02               	movlw	high _dbuf
 13570  0160FA  200C               	addwfc	(btemp+11)^0,w,c
 13571  0160FC  6EDA               	movwf	fsr2h,c
 13572  0160FE  0E30               	movlw	48
 13573  016100  6EDF               	movwf	indf2,c
 13574  016102                     l12263:
 13575                           
 13576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 13577                           ;stkvar	_w @ sp[(-20)+16]
 13578  016102  0EFC               	movlw	-4
 13579  016104  006F FF8F FFE6     	movff	plusw1,postinc1
 13580  01610A  006F FF8F FFE6     	movff	plusw1,postinc1
 13581                           
 13582                           ;stkvar	_i @ sp[(-22)+14]
 13583  016110  0E76               	movlw	low _dbuf
 13584  016112  6E0B               	movwf	(btemp+10)^0,c
 13585  016114  0E02               	movlw	high _dbuf
 13586  016116  6E0C               	movwf	(btemp+11)^0,c
 13587  016118  0EF8               	movlw	-8
 13588  01611A  50E3               	movf	plusw1,w,c
 13589  01611C  260B               	addwf	(btemp+10)^0,f,c
 13590  01611E  0EF9               	movlw	-7
 13591  016120  50E3               	movf	plusw1,w,c
 13592  016122  220C               	addwfc	(btemp+11)^0,f,c
 13593  016124  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13594  01612A  0060  F033  FFE6   	movff	btemp+11,postinc1
 13595                           
 13596                           ;stkvar	_fp @ sp[(-24)+-2]
 13597  016130  0EE6               	movlw	-26
 13598  016132  006F FF8F FFE6     	movff	plusw1,postinc1
 13599  016138  006F FF8F FFE6     	movff	plusw1,postinc1
 13600  01613E  ECC6  F0CC         	call	_pad	;wreg free
 13601                           
 13602                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 13603  016142  0EE1               	movlw	225
 13604  016144  26E1               	addwf	fsr1l,f,c
 13605  016146  0EFF               	movlw	255
 13606  016148  22E2               	addwfc	fsr1h,f,c
 13607  01614A  0012               	return		;funcret
 13608  01614C                     __end_of_xtoa:
 13609                           	opt callstack 0
 13610                           
 13611 ;; *************** function _toupper *****************
 13612 ;; Defined at:
 13613 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 13614 ;; Parameters:    Size  Location     Type
 13615 ;;  c               2  [STACK] int 
 13616 ;; Auto vars:     Size  Location     Type
 13617 ;;		None
 13618 ;; Return value:  Size  Location     Type
 13619 ;;                  2  [STACK] int 
 13620 ;; Registers used:
 13621 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13622 ;; Tracked objects:
 13623 ;;		On entry : 0/2
 13624 ;;		On exit  : 0/0
 13625 ;;		Unchanged: 0/0
 13626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13631 ;;Total ram usage:        0 bytes
 13632 ;; Hardware stack levels used:    1
 13633 ;; Hardware stack levels required when called:   16
 13634 ;; This function calls:
 13635 ;;		_islower
 13636 ;; This function is called by:
 13637 ;;		_xtoa
 13638 ;; This function uses a reentrant model
 13639 ;;
 13640                           
 13641                           	psect	text47
 13642  01A9F8                     __ptext47:
 13643                           	opt callstack 0
 13644  01A9F8                     _toupper:
 13645                           	opt callstack 0
 13646                           
 13647                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13648  01A9F8  52E6               	movf	postinc1,f,c
 13649  01A9FA  52E6               	movf	postinc1,f,c
 13650                           
 13651                           ;stkvar	_c @ sp[(-2)+-2]
 13652                           
 13653                           ;incstack = 0
 13654 ;; hardware stack exceeded
 13655  01A9FC  0EFC               	movlw	-4
 13656  01A9FE  50E3               	movf	plusw1,w,c
 13657  01AA00  0F9F               	addlw	159
 13658  01AA02  6E0B               	movwf	(btemp+10)^0,c
 13659  01AA04  0EFD               	movlw	-3
 13660  01AA06  006F FF8C  F00C    	movff	plusw1,btemp+11
 13661  01AA0C  0EFF               	movlw	255
 13662  01AA0E  220C               	addwfc	(btemp+11)^0,f,c
 13663  01AA10  500C               	movf	(btemp+11)^0,w,c
 13664  01AA12  E106               	bnz	u6160
 13665  01AA14  0E1A               	movlw	26
 13666  01AA16  5C0B               	subwf	(btemp+10)^0,w,c
 13667  01AA18  B0D8               	btfsc	status,0,c
 13668  01AA1A  D002               	goto	u6160
 13669  01AA1C  0E01               	movlw	1
 13670  01AA1E  D001               	goto	u6170
 13671  01AA20                     u6160:
 13672  01AA20  0E00               	movlw	0
 13673  01AA22                     u6170:
 13674  01AA22  6E0B               	movwf	(btemp+10)^0,c
 13675  01AA24  6A0C               	clrf	(btemp+11)^0,c
 13676                           
 13677                           ;stkvar	_toupper$6337 @ sp[(-2)+0]
 13678  01AA26  0EFE               	movlw	-2
 13679  01AA28  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13680  01AA2E  0EFF               	movlw	-1
 13681  01AA30  0060  F033  FFE3   	movff	btemp+11,plusw1
 13682                           
 13683                           ;stkvar	_toupper$6337 @ sp[(-2)+0]
 13684  01AA36  0EFE               	movlw	-2
 13685  01AA38  006F FF8C  F001    	movff	plusw1,btemp
 13686  01AA3E  0EFF               	movlw	-1
 13687  01AA40  50E3               	movf	plusw1,w,c
 13688  01AA42  1001               	iorwf	btemp^0,w,c
 13689  01AA44  B4D8               	btfsc	status,2,c
 13690  01AA46  D00D               	goto	l7979
 13691                           
 13692                           ;stkvar	_c @ sp[(-2)+-2]
 13693  01AA48  0EFC               	movlw	-4
 13694  01AA4A  006F FF8C  F001    	movff	plusw1,btemp
 13695  01AA50  0EFD               	movlw	-3
 13696  01AA52  006F FF8C  F002    	movff	plusw1,btemp+1
 13697  01AA58  0E5F               	movlw	95
 13698  01AA5A  1601               	andwf	btemp^0,f,c
 13699  01AA5C  0E00               	movlw	0
 13700  01AA5E  1602               	andwf	(btemp+1)^0,f,c
 13701  01AA60  D008               	goto	l3484
 13702  01AA62                     l7979:
 13703                           
 13704                           ;stkvar	_c @ sp[(-2)+-2]
 13705  01AA62  0EFC               	movlw	-4
 13706  01AA64  006F FF8C  F001    	movff	plusw1,btemp
 13707  01AA6A  0EFD               	movlw	-3
 13708  01AA6C  006F FF8C  F002    	movff	plusw1,btemp+1
 13709  01AA72                     l3484:
 13710                           
 13711                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13712  01AA72  52E5               	movf	postdec1,f,c
 13713  01AA74  52E5               	movf	postdec1,f,c
 13714  01AA76  52E5               	movf	postdec1,f,c
 13715  01AA78  52E5               	movf	postdec1,f,c
 13716  01AA7A  0012               	return		;funcret
 13717  01AA7C                     __end_of_toupper:
 13718                           	opt callstack 0
 13719                           
 13720 ;; *************** function _islower *****************
 13721 ;; Defined at:
 13722 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 13723 ;; Parameters:    Size  Location     Type
 13724 ;;  c               2  [STACK] int 
 13725 ;; Auto vars:     Size  Location     Type
 13726 ;;		None
 13727 ;; Return value:  Size  Location     Type
 13728 ;;                  2  [STACK] int 
 13729 ;; Registers used:
 13730 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13731 ;; Tracked objects:
 13732 ;;		On entry : 0/0
 13733 ;;		On exit  : 0/0
 13734 ;;		Unchanged: 0/0
 13735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13740 ;;Total ram usage:        0 bytes
 13741 ;; Hardware stack levels used:    1
 13742 ;; Hardware stack levels required when called:   15
 13743 ;; This function calls:
 13744 ;;		Nothing
 13745 ;; This function is called by:
 13746 ;;		_toupper
 13747 ;; This function uses a reentrant model
 13748 ;;
 13749                           
 13750                           	psect	text48
 13751  01B738                     __ptext48:
 13752                           	opt callstack 0
 13753  01B738                     _islower:
 13754                           	opt callstack 0
 13755                           
 13756                           ;stkvar	_c @ sp[(0)+-2]
 13757                           
 13758                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13759                           ;incstack = 0
 13760 ;; hardware stack exceeded
 13761  01B738  0EFE               	movlw	-2
 13762  01B73A  50E3               	movf	plusw1,w,c
 13763  01B73C  0F9F               	addlw	159
 13764  01B73E  6E0B               	movwf	(btemp+10)^0,c
 13765  01B740  0EFF               	movlw	-1
 13766  01B742  006F FF8C  F00C    	movff	plusw1,btemp+11
 13767  01B748  0EFF               	movlw	255
 13768  01B74A  220C               	addwfc	(btemp+11)^0,f,c
 13769  01B74C  500C               	movf	(btemp+11)^0,w,c
 13770  01B74E  E106               	bnz	u5850
 13771  01B750  0E1A               	movlw	26
 13772  01B752  5C0B               	subwf	(btemp+10)^0,w,c
 13773  01B754  B0D8               	btfsc	status,0,c
 13774  01B756  D002               	goto	u5850
 13775  01B758  0E01               	movlw	1
 13776  01B75A  D001               	goto	u5860
 13777  01B75C                     u5850:
 13778  01B75C  0E00               	movlw	0
 13779  01B75E                     u5860:
 13780  01B75E  6E01               	movwf	btemp^0,c
 13781  01B760  6A02               	clrf	(btemp+1)^0,c
 13782                           
 13783                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13784  01B762  52E5               	movf	postdec1,f,c
 13785  01B764  52E5               	movf	postdec1,f,c
 13786  01B766  0012               	return		;funcret
 13787  01B768                     __end_of_islower:
 13788                           	opt callstack 0
 13789                           
 13790 ;; *************** function _isalpha *****************
 13791 ;; Defined at:
 13792 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 13793 ;; Parameters:    Size  Location     Type
 13794 ;;  c               2  [STACK] int 
 13795 ;; Auto vars:     Size  Location     Type
 13796 ;;		None
 13797 ;; Return value:  Size  Location     Type
 13798 ;;                  2  [STACK] int 
 13799 ;; Registers used:
 13800 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 13801 ;; Tracked objects:
 13802 ;;		On entry : 0/0
 13803 ;;		On exit  : 0/0
 13804 ;;		Unchanged: 0/0
 13805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13810 ;;Total ram usage:        0 bytes
 13811 ;; Hardware stack levels used:    1
 13812 ;; Hardware stack levels required when called:   15
 13813 ;; This function calls:
 13814 ;;		Nothing
 13815 ;; This function is called by:
 13816 ;;		_xtoa
 13817 ;; This function uses a reentrant model
 13818 ;;
 13819                           
 13820                           	psect	text49
 13821  01B3C8                     __ptext49:
 13822                           	opt callstack 0
 13823  01B3C8                     _isalpha:
 13824                           	opt callstack 0
 13825                           
 13826                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13827                           ;incstack = 0
 13828 ;; hardware stack exceeded
 13829  01B3C8  0E9F               	movlw	159
 13830  01B3CA  6E0B               	movwf	(btemp+10)^0,c
 13831  01B3CC  0EFF               	movlw	255
 13832  01B3CE  6E0C               	movwf	(btemp+11)^0,c
 13833                           
 13834                           ;stkvar	_c @ sp[(0)+-2]
 13835  01B3D0  0EFE               	movlw	-2
 13836  01B3D2  006F FF8C  F009    	movff	plusw1,btemp+8
 13837  01B3D8  0EFF               	movlw	-1
 13838  01B3DA  006F FF8C  F00A    	movff	plusw1,btemp+9
 13839  01B3E0  0E20               	movlw	32
 13840  01B3E2  1209               	iorwf	(btemp+8)^0,f,c
 13841  01B3E4  0E00               	movlw	0
 13842  01B3E6  120A               	iorwf	(btemp+9)^0,f,c
 13843  01B3E8  500B               	movf	(btemp+10)^0,w,c
 13844  01B3EA  2609               	addwf	(btemp+8)^0,f,c
 13845  01B3EC  500C               	movf	(btemp+11)^0,w,c
 13846  01B3EE  220A               	addwfc	(btemp+9)^0,f,c
 13847  01B3F0  500A               	movf	(btemp+9)^0,w,c
 13848  01B3F2  E106               	bnz	u6140
 13849  01B3F4  0E1A               	movlw	26
 13850  01B3F6  5C09               	subwf	(btemp+8)^0,w,c
 13851  01B3F8  B0D8               	btfsc	status,0,c
 13852  01B3FA  D002               	goto	u6140
 13853  01B3FC  0E01               	movlw	1
 13854  01B3FE  D001               	goto	u6150
 13855  01B400                     u6140:
 13856  01B400  0E00               	movlw	0
 13857  01B402                     u6150:
 13858  01B402  6E01               	movwf	btemp^0,c
 13859  01B404  6A02               	clrf	(btemp+1)^0,c
 13860                           
 13861                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13862  01B406  52E5               	movf	postdec1,f,c
 13863  01B408  52E5               	movf	postdec1,f,c
 13864  01B40A  0012               	return		;funcret
 13865  01B40C                     __end_of_isalpha:
 13866                           	opt callstack 0
 13867                           
 13868 ;; *************** function _utoa *****************
 13869 ;; Defined at:
 13870 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13871 ;; Parameters:    Size  Location     Type
 13872 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13873 ;;		 -> f(6), NULL(0), 
 13874 ;;  d               8  [STACK] unsigned long long 
 13875 ;; Auto vars:     Size  Location     Type
 13876 ;;  n               8  [STACK] unsigned long long 
 13877 ;;  i               2  [STACK] int 
 13878 ;;  w               2  [STACK] int 
 13879 ;;  p               2  [STACK] int 
 13880 ;; Return value:  Size  Location     Type
 13881 ;;                  2  [STACK] int 
 13882 ;; Registers used:
 13883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 13884 ;; Tracked objects:
 13885 ;;		On entry : 0/0
 13886 ;;		On exit  : 0/0
 13887 ;;		Unchanged: 0/0
 13888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13893 ;;Total ram usage:        0 bytes
 13894 ;; Hardware stack levels used:    1
 13895 ;; Hardware stack levels required when called:   20
 13896 ;; This function calls:
 13897 ;;		___lodiv
 13898 ;;		___lomod
 13899 ;;		_pad
 13900 ;; This function is called by:
 13901 ;;		_vfpfcnvrt
 13902 ;; This function uses a reentrant model
 13903 ;;
 13904                           
 13905                           	psect	text50
 13906  0164B8                     __ptext50:
 13907                           	opt callstack 0
 13908  0164B8                     _utoa:
 13909                           	opt callstack 0
 13910                           
 13911                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13912  0164B8  0E0E               	movlw	14
 13913  0164BA  26E1               	addwf	fsr1l,f,c
 13914  0164BC  0E00               	movlw	0
 13915  0164BE  22E2               	addwfc	fsr1h,f,c
 13916                           
 13917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 13918                           
 13919                           ;incstack = 0
 13920 ;; hardware stack exceeded
 13921  0164C0  AE3D               	btfss	(_prec+1)^0,7,c
 13922                           
 13923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 13924  0164C2  923E               	bcf	_flags^0,1,c
 13925                           
 13926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 13927  0164C4  BE3D               	btfsc	(_prec+1)^0,7,c
 13928  0164C6  D005               	goto	u11630
 13929  0164C8  503D               	movf	(_prec+1)^0,w,c
 13930  0164CA  E110               	bnz	l12163
 13931  0164CC  043C               	decf	_prec^0,w,c
 13932  0164CE  B0D8               	btfsc	status,0,c
 13933  0164D0  D00D               	goto	l12163
 13934  0164D2                     u11630:
 13935  0164D2  0E01               	movlw	1
 13936  0164D4  6E0B               	movwf	(btemp+10)^0,c
 13937  0164D6  0E00               	movlw	0
 13938  0164D8  6E0C               	movwf	(btemp+11)^0,c
 13939                           
 13940                           ;stkvar	_p @ sp[(-14)+12]
 13941  0164DA  0EFE               	movlw	-2
 13942  0164DC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13943  0164E2  0EFF               	movlw	-1
 13944  0164E4  0060  F033  FFE3   	movff	btemp+11,plusw1
 13945  0164EA  D008               	goto	l2302
 13946  0164EC                     l12163:
 13947                           
 13948                           ;stkvar	_p @ sp[(-14)+12]
 13949  0164EC  0EFE               	movlw	-2
 13950  0164EE  0060  F0F3  FFE3   	movff	_prec,plusw1
 13951  0164F4  0EFF               	movlw	-1
 13952  0164F6  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 13953  0164FC                     l2302:
 13954                           
 13955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 13956                           ;stkvar	_w @ sp[(-14)+10]
 13957  0164FC  0EFC               	movlw	-4
 13958  0164FE  0060  F0EB  FFE3   	movff	_width,plusw1
 13959  016504  0EFD               	movlw	-3
 13960  016506  0060  F0EF  FFE3   	movff	_width+1,plusw1
 13961                           
 13962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 13963                           ;stkvar	_d @ sp[(-14)+-10]
 13964  01650C  0EE8               	movlw	232
 13965  01650E  24E1               	addwf	fsr1l,w,c
 13966  016510  6ED9               	movwf	fsr2l,c
 13967  016512  0EFF               	movlw	255
 13968  016514  20E2               	addwfc	fsr1h,w,c
 13969  016516  6EDA               	movwf	fsr2h,c
 13970                           
 13971                           ;stkvar	_n @ sp[(-14)+0]
 13972  016518  0E08               	movlw	8
 13973  01651A  6E01               	movwf	btemp^0,c
 13974  01651C  0EF2               	movlw	-14
 13975  01651E                     us1164999:
 13976  01651E  006F FF7B FFE3     	movff	postinc2,plusw1
 13977  016524  28E8               	incf	wreg,w,c
 13978  016526  2E01               	decfsz	btemp^0,f,c
 13979  016528  D7FA               	bra	us1164999
 13980                           
 13981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 13982  01652A  0E4F               	movlw	79
 13983  01652C  6E0B               	movwf	(btemp+10)^0,c
 13984  01652E  0E00               	movlw	0
 13985  016530  6E0C               	movwf	(btemp+11)^0,c
 13986                           
 13987                           ;stkvar	_i @ sp[(-14)+8]
 13988  016532  0EFA               	movlw	-6
 13989  016534  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13990  01653A  0EFB               	movlw	-5
 13991  01653C  0060  F033  FFE3   	movff	btemp+11,plusw1
 13992                           
 13993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 13994  016542  0102               	movlb	2	; () banked
 13995  016544  6BC5               	clrf	(_dbuf+79)& (0+255),b
 13996                           
 13997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13998  016546  D0FB               	goto	l12181
 13999  016548                     l12171:
 14000                           
 14001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 14002                           ;stkvar	_i @ sp[(-14)+8]
 14003  016548  50E1               	movf	fsr1l,w,c
 14004  01654A  0FFA               	addlw	-6
 14005  01654C  6ED9               	movwf	fsr2l,c
 14006  01654E  50E2               	movf	fsr1h,w,c
 14007  016550  6EDA               	movwf	fsr2h,c
 14008  016552  0EFF               	movlw	255
 14009  016554  22DA               	addwfc	fsr2h,f,c
 14010  016556  06DE               	decf	postinc2,f,c
 14011  016558  0E00               	movlw	0
 14012  01655A  5ADD               	subwfb	postdec2,f,c
 14013                           
 14014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 14015  01655C  0E0A               	movlw	10
 14016  01655E  6EE6               	movwf	postinc1,c
 14017  016560  0E00               	movlw	0
 14018  016562  6EE6               	movwf	postinc1,c
 14019  016564  0E00               	movlw	0
 14020  016566  6EE6               	movwf	postinc1,c
 14021  016568  0E00               	movlw	0
 14022  01656A  6EE6               	movwf	postinc1,c
 14023  01656C  0E00               	movlw	0
 14024  01656E  6EE6               	movwf	postinc1,c
 14025  016570  0E00               	movlw	0
 14026  016572  6EE6               	movwf	postinc1,c
 14027  016574  0E00               	movlw	0
 14028  016576  6EE6               	movwf	postinc1,c
 14029  016578  0E00               	movlw	0
 14030  01657A  6EE6               	movwf	postinc1,c
 14031                           
 14032                           ;stkvar	_n @ sp[(-22)+0]
 14033  01657C  50E1               	movf	fsr1l,w,c
 14034  01657E  0FEA               	addlw	-22
 14035  016580  6ED9               	movwf	fsr2l,c
 14036  016582  50E2               	movf	fsr1h,w,c
 14037  016584  6EDA               	movwf	fsr2h,c
 14038  016586  0EFF               	movlw	255
 14039  016588  22DA               	addwfc	fsr2h,f,c
 14040  01658A  006F FF7B FFE6     	movff	postinc2,postinc1
 14041  016590  006F FF7B FFE6     	movff	postinc2,postinc1
 14042  016596  006F FF7B FFE6     	movff	postinc2,postinc1
 14043  01659C  006F FF7B FFE6     	movff	postinc2,postinc1
 14044  0165A2  006F FF7B FFE6     	movff	postinc2,postinc1
 14045  0165A8  006F FF7B FFE6     	movff	postinc2,postinc1
 14046  0165AE  006F FF7B FFE6     	movff	postinc2,postinc1
 14047  0165B4  006F FF7B FFE6     	movff	postinc2,postinc1
 14048  0165BA  EC44  F0C9         	call	___lomod	;wreg free
 14049  0165BE  52E5               	movf	postdec1,f,c
 14050  0165C0  006F FF9C  F018    	movff	indf1,btemp+23
 14051  0165C6  52E5               	movf	postdec1,f,c
 14052  0165C8  006F FF9C  F017    	movff	indf1,btemp+22
 14053  0165CE  52E5               	movf	postdec1,f,c
 14054  0165D0  006F FF9C  F016    	movff	indf1,btemp+21
 14055  0165D6  52E5               	movf	postdec1,f,c
 14056  0165D8  006F FF9C  F015    	movff	indf1,btemp+20
 14057  0165DE  52E5               	movf	postdec1,f,c
 14058  0165E0  006F FF9C  F014    	movff	indf1,btemp+19
 14059  0165E6  52E5               	movf	postdec1,f,c
 14060  0165E8  006F FF9C  F013    	movff	indf1,btemp+18
 14061  0165EE  52E5               	movf	postdec1,f,c
 14062  0165F0  006F FF9C  F012    	movff	indf1,btemp+17
 14063  0165F6  52E5               	movf	postdec1,f,c
 14064  0165F8  006F FF9C  F011    	movff	indf1,btemp+16
 14065  0165FE  0EF8               	movlw	248
 14066  016600  26E1               	addwf	fsr1l,f,c
 14067  016602  0EFF               	movlw	255
 14068  016604  22E2               	addwfc	fsr1h,f,c
 14069  016606  0E30               	movlw	48
 14070  016608  2611               	addwf	(btemp+16)^0,f,c
 14071                           
 14072                           ;stkvar	_i @ sp[(-14)+8]
 14073  01660A  0EFA               	movlw	-6
 14074  01660C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14075  016612  0EFB               	movlw	-5
 14076  016614  006F FF8C  F00C    	movff	plusw1,btemp+11
 14077  01661A  0E76               	movlw	low _dbuf
 14078  01661C  240B               	addwf	(btemp+10)^0,w,c
 14079  01661E  6ED9               	movwf	fsr2l,c
 14080  016620  0E02               	movlw	high _dbuf
 14081  016622  200C               	addwfc	(btemp+11)^0,w,c
 14082  016624  6EDA               	movwf	fsr2h,c
 14083  016626  0060  F047  FFDF   	movff	btemp+16,indf2
 14084                           
 14085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 14086                           ;stkvar	_p @ sp[(-14)+12]
 14087  01662C  50E1               	movf	fsr1l,w,c
 14088  01662E  0FFE               	addlw	-2
 14089  016630  6ED9               	movwf	fsr2l,c
 14090  016632  50E2               	movf	fsr1h,w,c
 14091  016634  6EDA               	movwf	fsr2h,c
 14092  016636  0EFF               	movlw	255
 14093  016638  22DA               	addwfc	fsr2h,f,c
 14094  01663A  06DE               	decf	postinc2,f,c
 14095  01663C  0E00               	movlw	0
 14096  01663E  5ADD               	subwfb	postdec2,f,c
 14097                           
 14098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 14099                           ;stkvar	_w @ sp[(-14)+10]
 14100  016640  50E1               	movf	fsr1l,w,c
 14101  016642  0FFC               	addlw	-4
 14102  016644  6ED9               	movwf	fsr2l,c
 14103  016646  50E2               	movf	fsr1h,w,c
 14104  016648  6EDA               	movwf	fsr2h,c
 14105  01664A  0EFF               	movlw	255
 14106  01664C  22DA               	addwfc	fsr2h,f,c
 14107  01664E  06DE               	decf	postinc2,f,c
 14108  016650  0E00               	movlw	0
 14109  016652  5ADD               	subwfb	postdec2,f,c
 14110                           
 14111                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 14112  016654  0E0A               	movlw	10
 14113  016656  6EE6               	movwf	postinc1,c
 14114  016658  0E00               	movlw	0
 14115  01665A  6EE6               	movwf	postinc1,c
 14116  01665C  0E00               	movlw	0
 14117  01665E  6EE6               	movwf	postinc1,c
 14118  016660  0E00               	movlw	0
 14119  016662  6EE6               	movwf	postinc1,c
 14120  016664  0E00               	movlw	0
 14121  016666  6EE6               	movwf	postinc1,c
 14122  016668  0E00               	movlw	0
 14123  01666A  6EE6               	movwf	postinc1,c
 14124  01666C  0E00               	movlw	0
 14125  01666E  6EE6               	movwf	postinc1,c
 14126  016670  0E00               	movlw	0
 14127  016672  6EE6               	movwf	postinc1,c
 14128                           
 14129                           ;stkvar	_n @ sp[(-22)+0]
 14130  016674  50E1               	movf	fsr1l,w,c
 14131  016676  0FEA               	addlw	-22
 14132  016678  6ED9               	movwf	fsr2l,c
 14133  01667A  50E2               	movf	fsr1h,w,c
 14134  01667C  6EDA               	movwf	fsr2h,c
 14135  01667E  0EFF               	movlw	255
 14136  016680  22DA               	addwfc	fsr2h,f,c
 14137  016682  006F FF7B FFE6     	movff	postinc2,postinc1
 14138  016688  006F FF7B FFE6     	movff	postinc2,postinc1
 14139  01668E  006F FF7B FFE6     	movff	postinc2,postinc1
 14140  016694  006F FF7B FFE6     	movff	postinc2,postinc1
 14141  01669A  006F FF7B FFE6     	movff	postinc2,postinc1
 14142  0166A0  006F FF7B FFE6     	movff	postinc2,postinc1
 14143  0166A6  006F FF7B FFE6     	movff	postinc2,postinc1
 14144  0166AC  006F FF7B FFE6     	movff	postinc2,postinc1
 14145  0166B2  ECC1  F0C5         	call	___lodiv	;wreg free
 14146  0166B6  52E5               	movf	postdec1,f,c
 14147  0166B8  006F FF9C  F018    	movff	indf1,btemp+23
 14148  0166BE  52E5               	movf	postdec1,f,c
 14149  0166C0  006F FF9C  F017    	movff	indf1,btemp+22
 14150  0166C6  52E5               	movf	postdec1,f,c
 14151  0166C8  006F FF9C  F016    	movff	indf1,btemp+21
 14152  0166CE  52E5               	movf	postdec1,f,c
 14153  0166D0  006F FF9C  F015    	movff	indf1,btemp+20
 14154  0166D6  52E5               	movf	postdec1,f,c
 14155  0166D8  006F FF9C  F014    	movff	indf1,btemp+19
 14156  0166DE  52E5               	movf	postdec1,f,c
 14157  0166E0  006F FF9C  F013    	movff	indf1,btemp+18
 14158  0166E6  52E5               	movf	postdec1,f,c
 14159  0166E8  006F FF9C  F012    	movff	indf1,btemp+17
 14160  0166EE  52E5               	movf	postdec1,f,c
 14161  0166F0  006F FF9C  F011    	movff	indf1,btemp+16
 14162  0166F6  0EF8               	movlw	248
 14163  0166F8  26E1               	addwf	fsr1l,f,c
 14164  0166FA  0EFF               	movlw	255
 14165  0166FC  22E2               	addwfc	fsr1h,f,c
 14166                           
 14167                           ;stkvar	_n @ sp[(-14)+0]
 14168  0166FE  0EF2               	movlw	-14
 14169  016700  0060  F047  FFE3   	movff	btemp+16,plusw1
 14170  016706  0EF3               	movlw	-13
 14171  016708  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14172  01670E  0EF4               	movlw	-12
 14173  016710  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14174  016716  0EF5               	movlw	-11
 14175  016718  0060  F053  FFE3   	movff	btemp+19,plusw1
 14176  01671E  0EF6               	movlw	-10
 14177  016720  0060  F057  FFE3   	movff	btemp+20,plusw1
 14178  016726  0EF7               	movlw	-9
 14179  016728  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14180  01672E  0EF8               	movlw	-8
 14181  016730  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14182  016736  0EF9               	movlw	-7
 14183  016738  0060  F063  FFE3   	movff	btemp+23,plusw1
 14184  01673E                     l12181:
 14185                           
 14186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 14187                           ;stkvar	_i @ sp[(-14)+8]
 14188  01673E  0EFA               	movlw	-6
 14189  016740  006F FF8C  F001    	movff	plusw1,btemp
 14190  016746  0EFB               	movlw	-5
 14191  016748  50E3               	movf	plusw1,w,c
 14192  01674A  1001               	iorwf	btemp^0,w,c
 14193  01674C  B4D8               	btfsc	status,2,c
 14194  01674E  D02F               	goto	u11690
 14195                           
 14196                           ;stkvar	_n @ sp[(-14)+0]
 14197  016750  0EF2               	movlw	-14
 14198  016752  50E3               	movf	plusw1,w,c
 14199  016754  E115               	bnz	u11661
 14200  016756  0EF3               	movlw	-13
 14201  016758  50E3               	movf	plusw1,w,c
 14202  01675A  E112               	bnz	u11661
 14203  01675C  0EF4               	movlw	-12
 14204  01675E  50E3               	movf	plusw1,w,c
 14205  016760  E10F               	bnz	u11661
 14206  016762  0EF5               	movlw	-11
 14207  016764  50E3               	movf	plusw1,w,c
 14208  016766  E10C               	bnz	u11661
 14209  016768  0EF6               	movlw	-10
 14210  01676A  50E3               	movf	plusw1,w,c
 14211  01676C  E109               	bnz	u11661
 14212  01676E  0EF7               	movlw	-9
 14213  016770  50E3               	movf	plusw1,w,c
 14214  016772  E106               	bnz	u11661
 14215  016774  0EF8               	movlw	-8
 14216  016776  50E3               	movf	plusw1,w,c
 14217  016778  E103               	bnz	u11661
 14218  01677A  0EF9               	movlw	-7
 14219  01677C  50E3               	movf	plusw1,w,c
 14220  01677E  A4D8               	btfss	status,2,c
 14221  016780                     u11661:
 14222  016780  D6E3               	goto	l12171
 14223                           
 14224                           ;stkvar	_p @ sp[(-14)+12]
 14225  016782  0EFF               	movlw	-1
 14226  016784  BEE3               	btfsc	plusw1,7,c
 14227  016786  D007               	goto	u11670
 14228  016788  0EFF               	movlw	-1
 14229  01678A  50E3               	movf	plusw1,w,c
 14230  01678C  E103               	bnz	u11671
 14231  01678E  0EFE               	movlw	-2
 14232  016790  04E3               	decf	plusw1,w,c
 14233  016792  B0D8               	btfsc	status,0,c
 14234  016794                     u11671:
 14235  016794  D6D9               	goto	l12171
 14236  016796                     u11670:
 14237                           
 14238                           ;stkvar	_w @ sp[(-14)+10]
 14239  016796  0EFD               	movlw	-3
 14240  016798  BEE3               	btfsc	plusw1,7,c
 14241  01679A  D009               	goto	u11690
 14242  01679C  0EFD               	movlw	-3
 14243  01679E  50E3               	movf	plusw1,w,c
 14244  0167A0  E104               	bnz	u11680
 14245  0167A2  0EFC               	movlw	-4
 14246  0167A4  04E3               	decf	plusw1,w,c
 14247  0167A6  A0D8               	btfss	status,0,c
 14248  0167A8  D002               	goto	u11690
 14249  0167AA                     u11680:
 14250  0167AA  B23E               	btfsc	_flags^0,1,c
 14251  0167AC  D6CD               	goto	l12171
 14252  0167AE                     u11690:
 14253                           
 14254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 14255                           ;stkvar	_w @ sp[(-14)+10]
 14256  0167AE  0EFC               	movlw	-4
 14257  0167B0  006F FF8F FFE6     	movff	plusw1,postinc1
 14258  0167B6  006F FF8F FFE6     	movff	plusw1,postinc1
 14259                           
 14260                           ;stkvar	_i @ sp[(-16)+8]
 14261  0167BC  0E76               	movlw	low _dbuf
 14262  0167BE  6E0B               	movwf	(btemp+10)^0,c
 14263  0167C0  0E02               	movlw	high _dbuf
 14264  0167C2  6E0C               	movwf	(btemp+11)^0,c
 14265  0167C4  0EF8               	movlw	-8
 14266  0167C6  50E3               	movf	plusw1,w,c
 14267  0167C8  260B               	addwf	(btemp+10)^0,f,c
 14268  0167CA  0EF9               	movlw	-7
 14269  0167CC  50E3               	movf	plusw1,w,c
 14270  0167CE  220C               	addwfc	(btemp+11)^0,f,c
 14271  0167D0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14272  0167D6  0060  F033  FFE6   	movff	btemp+11,postinc1
 14273                           
 14274                           ;stkvar	_fp @ sp[(-18)+-2]
 14275  0167DC  0EEC               	movlw	-20
 14276  0167DE  006F FF8F FFE6     	movff	plusw1,postinc1
 14277  0167E4  006F FF8F FFE6     	movff	plusw1,postinc1
 14278  0167EA  ECC6  F0CC         	call	_pad	;wreg free
 14279                           
 14280                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 14281  0167EE  0EE8               	movlw	232
 14282  0167F0  26E1               	addwf	fsr1l,f,c
 14283  0167F2  0EFF               	movlw	255
 14284  0167F4  22E2               	addwfc	fsr1h,f,c
 14285  0167F6  0012               	return		;funcret
 14286  0167F8                     __end_of_utoa:
 14287                           	opt callstack 0
 14288                           
 14289 ;; *************** function ___lomod *****************
 14290 ;; Defined at:
 14291 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 14292 ;; Parameters:    Size  Location     Type
 14293 ;;  dividend        8  [STACK] unsigned long long 
 14294 ;;  divisor         8  [STACK] unsigned long long 
 14295 ;; Auto vars:     Size  Location     Type
 14296 ;;  counter         1  [STACK] unsigned char 
 14297 ;; Return value:  Size  Location     Type
 14298 ;;                  8  [STACK] unsigned long long 
 14299 ;; Registers used:
 14300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14301 ;; Tracked objects:
 14302 ;;		On entry : 0/2
 14303 ;;		On exit  : 0/0
 14304 ;;		Unchanged: 0/0
 14305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14310 ;;Total ram usage:        0 bytes
 14311 ;; Hardware stack levels used:    1
 14312 ;; Hardware stack levels required when called:   15
 14313 ;; This function calls:
 14314 ;;		Nothing
 14315 ;; This function is called by:
 14316 ;;		_utoa
 14317 ;; This function uses a reentrant model
 14318 ;;
 14319                           
 14320                           	psect	text51
 14321  019288                     __ptext51:
 14322                           	opt callstack 0
 14323  019288                     ___lomod:
 14324                           	opt callstack 0
 14325                           
 14326                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14327  019288  52E6               	movf	postinc1,f,c
 14328                           
 14329                           ;stkvar	_divisor @ sp[(-1)+-16]
 14330                           
 14331                           ;incstack = 0
 14332 ;; hardware stack exceeded
 14333  01928A  0EEF               	movlw	-17
 14334  01928C  50E3               	movf	plusw1,w,c
 14335  01928E  E116               	bnz	u7290
 14336  019290  0EF0               	movlw	-16
 14337  019292  50E3               	movf	plusw1,w,c
 14338  019294  E113               	bnz	u7290
 14339  019296  0EF1               	movlw	-15
 14340  019298  50E3               	movf	plusw1,w,c
 14341  01929A  E110               	bnz	u7290
 14342  01929C  0EF2               	movlw	-14
 14343  01929E  50E3               	movf	plusw1,w,c
 14344  0192A0  E10D               	bnz	u7290
 14345  0192A2  0EF3               	movlw	-13
 14346  0192A4  50E3               	movf	plusw1,w,c
 14347  0192A6  E10A               	bnz	u7290
 14348  0192A8  0EF4               	movlw	-12
 14349  0192AA  50E3               	movf	plusw1,w,c
 14350  0192AC  E107               	bnz	u7290
 14351  0192AE  0EF5               	movlw	-11
 14352  0192B0  50E3               	movf	plusw1,w,c
 14353  0192B2  E104               	bnz	u7290
 14354  0192B4  0EF6               	movlw	-10
 14355  0192B6  50E3               	movf	plusw1,w,c
 14356  0192B8  B4D8               	btfsc	status,2,c
 14357  0192BA  D075               	goto	u7320
 14358  0192BC                     u7290:
 14359                           
 14360                           ;stkvar	_counter @ sp[(-1)+0]
 14361  0192BC  0EFF               	movlw	-1
 14362  0192BE  6AE3               	clrf	plusw1,c
 14363  0192C0  D012               	goto	L14
 14364  0192C2                     l8589:
 14365                           
 14366                           ;stkvar	_divisor @ sp[(-1)+-16]
 14367  0192C2  90D8               	bcf	status,0,c
 14368  0192C4  0EEF               	movlw	-17
 14369  0192C6  36E3               	rlcf	plusw1,f,c
 14370  0192C8  0EF0               	movlw	-16
 14371  0192CA  36E3               	rlcf	plusw1,f,c
 14372  0192CC  0EF1               	movlw	-15
 14373  0192CE  36E3               	rlcf	plusw1,f,c
 14374  0192D0  0EF2               	movlw	-14
 14375  0192D2  36E3               	rlcf	plusw1,f,c
 14376  0192D4  0EF3               	movlw	-13
 14377  0192D6  36E3               	rlcf	plusw1,f,c
 14378  0192D8  0EF4               	movlw	-12
 14379  0192DA  36E3               	rlcf	plusw1,f,c
 14380  0192DC  0EF5               	movlw	-11
 14381  0192DE  36E3               	rlcf	plusw1,f,c
 14382  0192E0  0EF6               	movlw	-10
 14383  0192E2  36E3               	rlcf	plusw1,f,c
 14384                           
 14385                           ;stkvar	_counter @ sp[(-1)+0]
 14386  0192E4  0EFF               	movlw	-1
 14387  0192E6                     L14:
 14388  0192E6  2AE3               	incf	plusw1,f,c
 14389                           
 14390                           ;stkvar	_divisor @ sp[(-1)+-16]
 14391  0192E8  0EF6               	movlw	-10
 14392  0192EA  AEE3               	btfss	plusw1,7,c
 14393  0192EC  D7EA               	goto	l8589
 14394  0192EE                     u7300:
 14395                           
 14396                           ;stkvar	_divisor @ sp[(-1)+-16]
 14397                           ;stkvar	_dividend @ sp[(-1)+-8]
 14398  0192EE  50E1               	movf	fsr1l,w,c
 14399  0192F0  0FF7               	addlw	-9
 14400  0192F2  6ED9               	movwf	fsr2l,c
 14401  0192F4  50E2               	movf	fsr1h,w,c
 14402  0192F6  6EDA               	movwf	fsr2h,c
 14403  0192F8  0EFF               	movlw	255
 14404  0192FA  22DA               	addwfc	fsr2h,f,c
 14405  0192FC  0EEF               	movlw	-17
 14406  0192FE  50E3               	movf	plusw1,w,c
 14407  019300  5CDE               	subwf	postinc2,w,c
 14408  019302  0EF0               	movlw	-16
 14409  019304  50E3               	movf	plusw1,w,c
 14410  019306  58DE               	subwfb	postinc2,w,c
 14411  019308  0EF1               	movlw	-15
 14412  01930A  50E3               	movf	plusw1,w,c
 14413  01930C  58DE               	subwfb	postinc2,w,c
 14414  01930E  0EF2               	movlw	-14
 14415  019310  50E3               	movf	plusw1,w,c
 14416  019312  58DE               	subwfb	postinc2,w,c
 14417  019314  0EF3               	movlw	-13
 14418  019316  50E3               	movf	plusw1,w,c
 14419  019318  58DE               	subwfb	postinc2,w,c
 14420  01931A  0EF4               	movlw	-12
 14421  01931C  50E3               	movf	plusw1,w,c
 14422  01931E  58DE               	subwfb	postinc2,w,c
 14423  019320  0EF5               	movlw	-11
 14424  019322  50E3               	movf	plusw1,w,c
 14425  019324  58DE               	subwfb	postinc2,w,c
 14426  019326  0EF6               	movlw	-10
 14427  019328  50E3               	movf	plusw1,w,c
 14428  01932A  58DE               	subwfb	postinc2,w,c
 14429  01932C  A0D8               	btfss	status,0,c
 14430  01932E  D01F               	goto	l8597
 14431                           
 14432                           ;stkvar	_divisor @ sp[(-1)+-16]
 14433                           ;stkvar	_dividend @ sp[(-1)+-8]
 14434  019330  50E1               	movf	fsr1l,w,c
 14435  019332  0FF7               	addlw	-9
 14436  019334  6ED9               	movwf	fsr2l,c
 14437  019336  50E2               	movf	fsr1h,w,c
 14438  019338  6EDA               	movwf	fsr2h,c
 14439  01933A  0EFF               	movlw	255
 14440  01933C  22DA               	addwfc	fsr2h,f,c
 14441  01933E  0EEF               	movlw	-17
 14442  019340  50E3               	movf	plusw1,w,c
 14443  019342  5EDE               	subwf	postinc2,f,c
 14444  019344  0EF0               	movlw	-16
 14445  019346  50E3               	movf	plusw1,w,c
 14446  019348  5ADE               	subwfb	postinc2,f,c
 14447  01934A  0EF1               	movlw	-15
 14448  01934C  50E3               	movf	plusw1,w,c
 14449  01934E  5ADE               	subwfb	postinc2,f,c
 14450  019350  0EF2               	movlw	-14
 14451  019352  50E3               	movf	plusw1,w,c
 14452  019354  5ADE               	subwfb	postinc2,f,c
 14453  019356  0EF3               	movlw	-13
 14454  019358  50E3               	movf	plusw1,w,c
 14455  01935A  5ADE               	subwfb	postinc2,f,c
 14456  01935C  0EF4               	movlw	-12
 14457  01935E  50E3               	movf	plusw1,w,c
 14458  019360  5ADE               	subwfb	postinc2,f,c
 14459  019362  0EF5               	movlw	-11
 14460  019364  50E3               	movf	plusw1,w,c
 14461  019366  5ADE               	subwfb	postinc2,f,c
 14462  019368  0EF6               	movlw	-10
 14463  01936A  50E3               	movf	plusw1,w,c
 14464  01936C  5ADE               	subwfb	postinc2,f,c
 14465  01936E                     l8597:
 14466                           
 14467                           ;stkvar	_divisor @ sp[(-1)+-16]
 14468  01936E  90D8               	bcf	status,0,c
 14469  019370  0EF6               	movlw	-10
 14470  019372  32E3               	rrcf	plusw1,f,c
 14471  019374  0EF5               	movlw	-11
 14472  019376  32E3               	rrcf	plusw1,f,c
 14473  019378  0EF4               	movlw	-12
 14474  01937A  32E3               	rrcf	plusw1,f,c
 14475  01937C  0EF3               	movlw	-13
 14476  01937E  32E3               	rrcf	plusw1,f,c
 14477  019380  0EF2               	movlw	-14
 14478  019382  32E3               	rrcf	plusw1,f,c
 14479  019384  0EF1               	movlw	-15
 14480  019386  32E3               	rrcf	plusw1,f,c
 14481  019388  0EF0               	movlw	-16
 14482  01938A  32E3               	rrcf	plusw1,f,c
 14483  01938C  0EEF               	movlw	-17
 14484  01938E  32E3               	rrcf	plusw1,f,c
 14485                           
 14486                           ;stkvar	_counter @ sp[(-1)+0]
 14487  019390  0EFF               	movlw	-1
 14488  019392  50E3               	movf	plusw1,w,c
 14489  019394  6E01               	movwf	btemp^0,c
 14490  019396  0E01               	movlw	1
 14491  019398  5E01               	subwf	btemp^0,f,c
 14492  01939A  0EFF               	movlw	-1
 14493  01939C  0060  F007  FFE3   	movff	btemp,plusw1
 14494  0193A2  A4D8               	btfss	status,2,c
 14495  0193A4  D7A4               	goto	u7300
 14496  0193A6                     u7320:
 14497                           
 14498                           ;stkvar	_dividend @ sp[(-1)+-8]
 14499  0193A6  0EF7               	movlw	247
 14500  0193A8  24E1               	addwf	fsr1l,w,c
 14501  0193AA  6ED9               	movwf	fsr2l,c
 14502  0193AC  0EFF               	movlw	255
 14503  0193AE  20E2               	addwfc	fsr1h,w,c
 14504  0193B0  6EDA               	movwf	fsr2h,c
 14505                           
 14506                           ;stkvar	?___lomod @ sp[(-1)+-8]
 14507  0193B2  0E08               	movlw	8
 14508  0193B4  6E01               	movwf	btemp^0,c
 14509  0193B6  0EF7               	movlw	-9
 14510  0193B8                     us733999:
 14511  0193B8  006F FF7B FFE3     	movff	postinc2,plusw1
 14512  0193BE  28E8               	incf	wreg,w,c
 14513  0193C0  2E01               	decfsz	btemp^0,f,c
 14514  0193C2  D7FA               	bra	us733999
 14515                           
 14516                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14517  0193C4  52E5               	movf	postdec1,f,c
 14518  0193C6  0012               	return		;funcret
 14519  0193C8                     __end_of___lomod:
 14520                           	opt callstack 0
 14521                           
 14522 ;; *************** function ___lodiv *****************
 14523 ;; Defined at:
 14524 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 14525 ;; Parameters:    Size  Location     Type
 14526 ;;  dividend        8  [STACK] unsigned long long 
 14527 ;;  divisor         8  [STACK] unsigned long long 
 14528 ;; Auto vars:     Size  Location     Type
 14529 ;;  quotient        8  [STACK] unsigned long long 
 14530 ;;  counter         1  [STACK] unsigned char 
 14531 ;; Return value:  Size  Location     Type
 14532 ;;                  8  [STACK] unsigned long long 
 14533 ;; Registers used:
 14534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14535 ;; Tracked objects:
 14536 ;;		On entry : 0/2
 14537 ;;		On exit  : 0/0
 14538 ;;		Unchanged: 0/0
 14539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14544 ;;Total ram usage:        0 bytes
 14545 ;; Hardware stack levels used:    1
 14546 ;; Hardware stack levels required when called:   15
 14547 ;; This function calls:
 14548 ;;		Nothing
 14549 ;; This function is called by:
 14550 ;;		_utoa
 14551 ;; This function uses a reentrant model
 14552 ;;
 14553                           
 14554                           	psect	text52
 14555  018B82                     __ptext52:
 14556                           	opt callstack 0
 14557  018B82                     ___lodiv:
 14558                           	opt callstack 0
 14559                           
 14560                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14561  018B82  0E09               	movlw	9
 14562  018B84  26E1               	addwf	fsr1l,f,c
 14563  018B86  0E00               	movlw	0
 14564  018B88  22E2               	addwfc	fsr1h,f,c
 14565                           
 14566                           ;stkvar	_quotient @ sp[(-9)+0]
 14567                           
 14568                           ;incstack = 0
 14569 ;; hardware stack exceeded
 14570  018B8A  0E07               	movlw	7
 14571  018B8C  6E01               	movwf	btemp^0,c
 14572  018B8E  0EF7               	movlw	-9
 14573  018B90                     u7231:
 14574  018B90  6AE3               	clrf	plusw1,c
 14575  018B92  2AE8               	incf	wreg,f,c
 14576  018B94  0601               	decf	btemp^0,f,c
 14577  018B96  E2FC               	bc	u7231
 14578                           
 14579                           ;stkvar	_divisor @ sp[(-9)+-16]
 14580  018B98  0EE7               	movlw	-25
 14581  018B9A  50E3               	movf	plusw1,w,c
 14582  018B9C  E116               	bnz	u7240
 14583  018B9E  0EE8               	movlw	-24
 14584  018BA0  50E3               	movf	plusw1,w,c
 14585  018BA2  E113               	bnz	u7240
 14586  018BA4  0EE9               	movlw	-23
 14587  018BA6  50E3               	movf	plusw1,w,c
 14588  018BA8  E110               	bnz	u7240
 14589  018BAA  0EEA               	movlw	-22
 14590  018BAC  50E3               	movf	plusw1,w,c
 14591  018BAE  E10D               	bnz	u7240
 14592  018BB0  0EEB               	movlw	-21
 14593  018BB2  50E3               	movf	plusw1,w,c
 14594  018BB4  E10A               	bnz	u7240
 14595  018BB6  0EEC               	movlw	-20
 14596  018BB8  50E3               	movf	plusw1,w,c
 14597  018BBA  E107               	bnz	u7240
 14598  018BBC  0EED               	movlw	-19
 14599  018BBE  50E3               	movf	plusw1,w,c
 14600  018BC0  E104               	bnz	u7240
 14601  018BC2  0EEE               	movlw	-18
 14602  018BC4  50E3               	movf	plusw1,w,c
 14603  018BC6  B4D8               	btfsc	status,2,c
 14604  018BC8  D088               	goto	u7270
 14605  018BCA                     u7240:
 14606                           
 14607                           ;stkvar	_counter @ sp[(-9)+8]
 14608  018BCA  0EFF               	movlw	-1
 14609  018BCC  6AE3               	clrf	plusw1,c
 14610  018BCE  D012               	goto	L15
 14611  018BD0                     l8565:
 14612                           
 14613                           ;stkvar	_divisor @ sp[(-9)+-16]
 14614  018BD0  90D8               	bcf	status,0,c
 14615  018BD2  0EE7               	movlw	-25
 14616  018BD4  36E3               	rlcf	plusw1,f,c
 14617  018BD6  0EE8               	movlw	-24
 14618  018BD8  36E3               	rlcf	plusw1,f,c
 14619  018BDA  0EE9               	movlw	-23
 14620  018BDC  36E3               	rlcf	plusw1,f,c
 14621  018BDE  0EEA               	movlw	-22
 14622  018BE0  36E3               	rlcf	plusw1,f,c
 14623  018BE2  0EEB               	movlw	-21
 14624  018BE4  36E3               	rlcf	plusw1,f,c
 14625  018BE6  0EEC               	movlw	-20
 14626  018BE8  36E3               	rlcf	plusw1,f,c
 14627  018BEA  0EED               	movlw	-19
 14628  018BEC  36E3               	rlcf	plusw1,f,c
 14629  018BEE  0EEE               	movlw	-18
 14630  018BF0  36E3               	rlcf	plusw1,f,c
 14631                           
 14632                           ;stkvar	_counter @ sp[(-9)+8]
 14633  018BF2  0EFF               	movlw	-1
 14634  018BF4                     L15:
 14635  018BF4  2AE3               	incf	plusw1,f,c
 14636                           
 14637                           ;stkvar	_divisor @ sp[(-9)+-16]
 14638  018BF6  0EEE               	movlw	-18
 14639  018BF8  AEE3               	btfss	plusw1,7,c
 14640  018BFA  D7EA               	goto	l8565
 14641  018BFC                     u7250:
 14642                           
 14643                           ;stkvar	_quotient @ sp[(-9)+0]
 14644  018BFC  90D8               	bcf	status,0,c
 14645  018BFE  0EF7               	movlw	-9
 14646  018C00  36E3               	rlcf	plusw1,f,c
 14647  018C02  0EF8               	movlw	-8
 14648  018C04  36E3               	rlcf	plusw1,f,c
 14649  018C06  0EF9               	movlw	-7
 14650  018C08  36E3               	rlcf	plusw1,f,c
 14651  018C0A  0EFA               	movlw	-6
 14652  018C0C  36E3               	rlcf	plusw1,f,c
 14653  018C0E  0EFB               	movlw	-5
 14654  018C10  36E3               	rlcf	plusw1,f,c
 14655  018C12  0EFC               	movlw	-4
 14656  018C14  36E3               	rlcf	plusw1,f,c
 14657  018C16  0EFD               	movlw	-3
 14658  018C18  36E3               	rlcf	plusw1,f,c
 14659  018C1A  0EFE               	movlw	-2
 14660  018C1C  36E3               	rlcf	plusw1,f,c
 14661                           
 14662                           ;stkvar	_divisor @ sp[(-9)+-16]
 14663                           ;stkvar	_dividend @ sp[(-9)+-8]
 14664  018C1E  50E1               	movf	fsr1l,w,c
 14665  018C20  0FEF               	addlw	-17
 14666  018C22  6ED9               	movwf	fsr2l,c
 14667  018C24  50E2               	movf	fsr1h,w,c
 14668  018C26  6EDA               	movwf	fsr2h,c
 14669  018C28  0EFF               	movlw	255
 14670  018C2A  22DA               	addwfc	fsr2h,f,c
 14671  018C2C  0EE7               	movlw	-25
 14672  018C2E  50E3               	movf	plusw1,w,c
 14673  018C30  5CDE               	subwf	postinc2,w,c
 14674  018C32  0EE8               	movlw	-24
 14675  018C34  50E3               	movf	plusw1,w,c
 14676  018C36  58DE               	subwfb	postinc2,w,c
 14677  018C38  0EE9               	movlw	-23
 14678  018C3A  50E3               	movf	plusw1,w,c
 14679  018C3C  58DE               	subwfb	postinc2,w,c
 14680  018C3E  0EEA               	movlw	-22
 14681  018C40  50E3               	movf	plusw1,w,c
 14682  018C42  58DE               	subwfb	postinc2,w,c
 14683  018C44  0EEB               	movlw	-21
 14684  018C46  50E3               	movf	plusw1,w,c
 14685  018C48  58DE               	subwfb	postinc2,w,c
 14686  018C4A  0EEC               	movlw	-20
 14687  018C4C  50E3               	movf	plusw1,w,c
 14688  018C4E  58DE               	subwfb	postinc2,w,c
 14689  018C50  0EED               	movlw	-19
 14690  018C52  50E3               	movf	plusw1,w,c
 14691  018C54  58DE               	subwfb	postinc2,w,c
 14692  018C56  0EEE               	movlw	-18
 14693  018C58  50E3               	movf	plusw1,w,c
 14694  018C5A  58DE               	subwfb	postinc2,w,c
 14695  018C5C  A0D8               	btfss	status,0,c
 14696  018C5E  D021               	goto	l8577
 14697                           
 14698                           ;stkvar	_divisor @ sp[(-9)+-16]
 14699                           ;stkvar	_dividend @ sp[(-9)+-8]
 14700  018C60  50E1               	movf	fsr1l,w,c
 14701  018C62  0FEF               	addlw	-17
 14702  018C64  6ED9               	movwf	fsr2l,c
 14703  018C66  50E2               	movf	fsr1h,w,c
 14704  018C68  6EDA               	movwf	fsr2h,c
 14705  018C6A  0EFF               	movlw	255
 14706  018C6C  22DA               	addwfc	fsr2h,f,c
 14707  018C6E  0EE7               	movlw	-25
 14708  018C70  50E3               	movf	plusw1,w,c
 14709  018C72  5EDE               	subwf	postinc2,f,c
 14710  018C74  0EE8               	movlw	-24
 14711  018C76  50E3               	movf	plusw1,w,c
 14712  018C78  5ADE               	subwfb	postinc2,f,c
 14713  018C7A  0EE9               	movlw	-23
 14714  018C7C  50E3               	movf	plusw1,w,c
 14715  018C7E  5ADE               	subwfb	postinc2,f,c
 14716  018C80  0EEA               	movlw	-22
 14717  018C82  50E3               	movf	plusw1,w,c
 14718  018C84  5ADE               	subwfb	postinc2,f,c
 14719  018C86  0EEB               	movlw	-21
 14720  018C88  50E3               	movf	plusw1,w,c
 14721  018C8A  5ADE               	subwfb	postinc2,f,c
 14722  018C8C  0EEC               	movlw	-20
 14723  018C8E  50E3               	movf	plusw1,w,c
 14724  018C90  5ADE               	subwfb	postinc2,f,c
 14725  018C92  0EED               	movlw	-19
 14726  018C94  50E3               	movf	plusw1,w,c
 14727  018C96  5ADE               	subwfb	postinc2,f,c
 14728  018C98  0EEE               	movlw	-18
 14729  018C9A  50E3               	movf	plusw1,w,c
 14730  018C9C  5ADE               	subwfb	postinc2,f,c
 14731                           
 14732                           ;stkvar	_quotient @ sp[(-9)+0]
 14733  018C9E  0EF7               	movlw	-9
 14734  018CA0  80E3               	bsf	plusw1,0,c
 14735  018CA2                     l8577:
 14736                           
 14737                           ;stkvar	_divisor @ sp[(-9)+-16]
 14738  018CA2  90D8               	bcf	status,0,c
 14739  018CA4  0EEE               	movlw	-18
 14740  018CA6  32E3               	rrcf	plusw1,f,c
 14741  018CA8  0EED               	movlw	-19
 14742  018CAA  32E3               	rrcf	plusw1,f,c
 14743  018CAC  0EEC               	movlw	-20
 14744  018CAE  32E3               	rrcf	plusw1,f,c
 14745  018CB0  0EEB               	movlw	-21
 14746  018CB2  32E3               	rrcf	plusw1,f,c
 14747  018CB4  0EEA               	movlw	-22
 14748  018CB6  32E3               	rrcf	plusw1,f,c
 14749  018CB8  0EE9               	movlw	-23
 14750  018CBA  32E3               	rrcf	plusw1,f,c
 14751  018CBC  0EE8               	movlw	-24
 14752  018CBE  32E3               	rrcf	plusw1,f,c
 14753  018CC0  0EE7               	movlw	-25
 14754  018CC2  32E3               	rrcf	plusw1,f,c
 14755                           
 14756                           ;stkvar	_counter @ sp[(-9)+8]
 14757  018CC4  0EFF               	movlw	-1
 14758  018CC6  50E3               	movf	plusw1,w,c
 14759  018CC8  6E01               	movwf	btemp^0,c
 14760  018CCA  0E01               	movlw	1
 14761  018CCC  5E01               	subwf	btemp^0,f,c
 14762  018CCE  0EFF               	movlw	-1
 14763  018CD0  0060  F007  FFE3   	movff	btemp,plusw1
 14764  018CD6  A4D8               	btfss	status,2,c
 14765  018CD8  D791               	goto	u7250
 14766  018CDA                     u7270:
 14767                           
 14768                           ;stkvar	_quotient @ sp[(-9)+0]
 14769  018CDA  0EF7               	movlw	247
 14770  018CDC  24E1               	addwf	fsr1l,w,c
 14771  018CDE  6ED9               	movwf	fsr2l,c
 14772  018CE0  0EFF               	movlw	255
 14773  018CE2  20E2               	addwfc	fsr1h,w,c
 14774  018CE4  6EDA               	movwf	fsr2h,c
 14775                           
 14776                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 14777  018CE6  0E08               	movlw	8
 14778  018CE8  6E01               	movwf	btemp^0,c
 14779  018CEA  0EEF               	movlw	-17
 14780  018CEC                     us728999:
 14781  018CEC  006F FF7B FFE3     	movff	postinc2,plusw1
 14782  018CF2  28E8               	incf	wreg,w,c
 14783  018CF4  2E01               	decfsz	btemp^0,f,c
 14784  018CF6  D7FA               	bra	us728999
 14785                           
 14786                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14787  018CF8  0EF7               	movlw	247
 14788  018CFA  26E1               	addwf	fsr1l,f,c
 14789  018CFC  0EFF               	movlw	255
 14790  018CFE  22E2               	addwfc	fsr1h,f,c
 14791  018D00  0012               	return		;funcret
 14792  018D02                     __end_of___lodiv:
 14793                           	opt callstack 0
 14794                           
 14795 ;; *************** function _strncmp *****************
 14796 ;; Defined at:
 14797 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 14798 ;; Parameters:    Size  Location     Type
 14799 ;;  _l              2  [STACK] PTR const unsigned char 
 14800 ;;		 -> ct(3), STR_65(103), STR_63(3), STR_62(3), 
 14801 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14802 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14803 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14804 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14805 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14806 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14807 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14808 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14809 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
 14810 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
 14811 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14812 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14813 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14814 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14815 ;;		 -> STR_2(15), STR_1(17), 
 14816 ;;  _r              2  [STACK] PTR const unsigned char 
 14817 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14818 ;;		 -> STR_80(3), STR_76(3), 
 14819 ;;  n               2  [STACK] unsigned int 
 14820 ;; Auto vars:     Size  Location     Type
 14821 ;;  r               2  [STACK] PTR const unsigned char 
 14822 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14823 ;;		 -> STR_80(3), STR_76(3), 
 14824 ;;  l               2  [STACK] PTR const unsigned char 
 14825 ;;		 -> ct(3), STR_65(103), STR_63(3), STR_62(3), 
 14826 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14827 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14828 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14829 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14830 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14831 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14832 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14833 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14834 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
 14835 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
 14836 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14837 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14838 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14839 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14840 ;;		 -> STR_2(15), STR_1(17), 
 14841 ;; Return value:  Size  Location     Type
 14842 ;;                  2  [STACK] int 
 14843 ;; Registers used:
 14844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 14845 ;; Tracked objects:
 14846 ;;		On entry : 0/0
 14847 ;;		On exit  : 0/0
 14848 ;;		Unchanged: 0/0
 14849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14854 ;;Total ram usage:        0 bytes
 14855 ;; Hardware stack levels used:    1
 14856 ;; Hardware stack levels required when called:   15
 14857 ;; This function calls:
 14858 ;;		Nothing
 14859 ;; This function is called by:
 14860 ;;		_vfpfcnvrt
 14861 ;; This function uses a reentrant model
 14862 ;;
 14863                           
 14864                           	psect	text53
 14865  017CF8                     __ptext53:
 14866                           	opt callstack 0
 14867  017CF8                     _strncmp:
 14868                           	opt callstack 0
 14869                           
 14870                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14871  017CF8  52E6               	movf	postinc1,f,c
 14872  017CFA  52E6               	movf	postinc1,f,c
 14873  017CFC  52E6               	movf	postinc1,f,c
 14874  017CFE  52E6               	movf	postinc1,f,c
 14875                           
 14876                           ;stkvar	__l @ sp[(-4)+-2]
 14877                           
 14878                           ;incstack = 0
 14879 ;; hardware stack exceeded
 14880  017D00  0EFA               	movlw	-6
 14881  017D02  006F FF8C  F00B    	movff	plusw1,btemp+10
 14882  017D08  0EFB               	movlw	-5
 14883  017D0A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14884                           
 14885                           ;stkvar	_l @ sp[(-4)+2]
 14886  017D10  0EFF               	movlw	-1
 14887  017D12  0060  F033  FFE3   	movff	btemp+11,plusw1
 14888  017D18  0EFE               	movlw	-2
 14889  017D1A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14890                           
 14891                           ;stkvar	__r @ sp[(-4)+-4]
 14892  017D20  0EF8               	movlw	-8
 14893  017D22  006F FF8C  F00B    	movff	plusw1,btemp+10
 14894  017D28  0EF9               	movlw	-7
 14895  017D2A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14896                           
 14897                           ;stkvar	_r @ sp[(-4)+0]
 14898  017D30  0EFD               	movlw	-3
 14899  017D32  0060  F033  FFE3   	movff	btemp+11,plusw1
 14900  017D38  0EFC               	movlw	-4
 14901  017D3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14902                           
 14903                           ;stkvar	_n @ sp[(-4)+-6]
 14904  017D40  0EF6               	movlw	-10
 14905  017D42  006F FF8C  F001    	movff	plusw1,btemp
 14906  017D48  0E01               	movlw	1
 14907  017D4A  5E01               	subwf	btemp^0,f,c
 14908  017D4C  0EF6               	movlw	-10
 14909  017D4E  0060  F007  FFE3   	movff	btemp,plusw1
 14910  017D54  0EF7               	movlw	-9
 14911  017D56  006F FF8C  F001    	movff	plusw1,btemp
 14912  017D5C  0E00               	movlw	0
 14913  017D5E  5A01               	subwfb	btemp^0,f,c
 14914  017D60  0EF7               	movlw	-9
 14915  017D62  0060  F007  FFE3   	movff	btemp,plusw1
 14916  017D68  0EF6               	movlw	-10
 14917  017D6A  28E3               	incf	plusw1,w,c
 14918  017D6C  E13F               	bnz	l9273
 14919  017D6E  0EF7               	movlw	-9
 14920  017D70  28E3               	incf	plusw1,w,c
 14921  017D72  A4D8               	btfss	status,2,c
 14922  017D74  D03B               	goto	l9273
 14923  017D76  0E00               	movlw	0
 14924  017D78  6E01               	movwf	btemp^0,c
 14925  017D7A  0E00               	movlw	0
 14926  017D7C  6E02               	movwf	(btemp+1)^0,c
 14927  017D7E  D0C7               	goto	l3456
 14928  017D80                     l9271:
 14929                           
 14930                           ;stkvar	_l @ sp[(-4)+2]
 14931  017D80  0EFE               	movlw	-2
 14932  017D82  50E3               	movf	plusw1,w,c
 14933  017D84  0F01               	addlw	1
 14934  017D86  6E01               	movwf	btemp^0,c
 14935  017D88  0EFE               	movlw	-2
 14936  017D8A  0060  F007  FFE3   	movff	btemp,plusw1
 14937  017D90  6A01               	clrf	btemp^0,c
 14938  017D92  0EFF               	movlw	-1
 14939  017D94  50E3               	movf	plusw1,w,c
 14940  017D96  2001               	addwfc	btemp^0,w,c
 14941  017D98  6E01               	movwf	btemp^0,c
 14942  017D9A  0EFF               	movlw	-1
 14943  017D9C  0060  F007  FFE3   	movff	btemp,plusw1
 14944                           
 14945                           ;stkvar	_r @ sp[(-4)+0]
 14946  017DA2  0EFC               	movlw	-4
 14947  017DA4  50E3               	movf	plusw1,w,c
 14948  017DA6  0F01               	addlw	1
 14949  017DA8  6E01               	movwf	btemp^0,c
 14950  017DAA  0EFC               	movlw	-4
 14951  017DAC  0060  F007  FFE3   	movff	btemp,plusw1
 14952  017DB2  6A01               	clrf	btemp^0,c
 14953  017DB4  0EFD               	movlw	-3
 14954  017DB6  50E3               	movf	plusw1,w,c
 14955  017DB8  2001               	addwfc	btemp^0,w,c
 14956  017DBA  6E01               	movwf	btemp^0,c
 14957  017DBC  0EFD               	movlw	-3
 14958  017DBE  0060  F007  FFE3   	movff	btemp,plusw1
 14959                           
 14960                           ;stkvar	_n @ sp[(-4)+-6]
 14961  017DC4  0EF6               	movlw	-10
 14962  017DC6  006F FF8C  F001    	movff	plusw1,btemp
 14963  017DCC  0E01               	movlw	1
 14964  017DCE  5E01               	subwf	btemp^0,f,c
 14965  017DD0  0EF6               	movlw	-10
 14966  017DD2  0060  F007  FFE3   	movff	btemp,plusw1
 14967  017DD8  0EF7               	movlw	-9
 14968  017DDA  006F FF8C  F001    	movff	plusw1,btemp
 14969  017DE0  0E00               	movlw	0
 14970  017DE2  5A01               	subwfb	btemp^0,f,c
 14971  017DE4  0EF7               	movlw	-9
 14972  017DE6  0060  F007  FFE3   	movff	btemp,plusw1
 14973  017DEC                     l9273:
 14974                           
 14975                           ;stkvar	_l @ sp[(-4)+2]
 14976  017DEC  0EFE               	movlw	-2
 14977  017DEE  006F FF8F FFF6     	movff	plusw1,tblptrl
 14978  017DF4  0EFF               	movlw	-1
 14979  017DF6  006F FF8F FFF7     	movff	plusw1,tblptrh
 14980  017DFC  0E00               	movlw	low (__mediumconst shr (0+16))
 14981  017DFE  6EF8               	movwf	tblptru,c
 14982  017E00  0E1F               	movlw	(high __ramtop+-1)
 14983  017E02  64F7               	cpfsgt	tblptrh,c
 14984  017E04  D003               	bra	u8567
 14985  017E06  0008               	tblrd		*
 14986  017E08  50F5               	movf	tablat,w,c
 14987  017E0A  D007               	bra	u8560
 14988  017E0C                     u8567:
 14989  017E0C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14990  017E12  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14991  017E18  50EF               	movf	indf0,w,c
 14992  017E1A                     u8560:
 14993  017E1A  0900               	iorlw	0
 14994  017E1C  B4D8               	btfsc	status,2,c
 14995  017E1E  D04A               	goto	u8600
 14996                           
 14997                           ;stkvar	_r @ sp[(-4)+0]
 14998  017E20  50E1               	movf	fsr1l,w,c
 14999  017E22  0FFC               	addlw	-4
 15000  017E24  6ED9               	movwf	fsr2l,c
 15001  017E26  50E2               	movf	fsr1h,w,c
 15002  017E28  6EDA               	movwf	fsr2h,c
 15003  017E2A  0EFF               	movlw	255
 15004  017E2C  22DA               	addwfc	fsr2h,f,c
 15005  017E2E  006F FF7B FFF6     	movff	postinc2,tblptrl
 15006  017E34  006F FF77 FFF7     	movff	postdec2,tblptrh
 15007  017E3A                     	if	0	;tblptru may be non-zero
 15008  017E3A                     	endif
 15009  017E3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15010  017E3A  0E00               	movlw	low (__mediumconst shr (0+16))
 15011  017E3C  6EF8               	movwf	tblptru,c
 15012  017E3E                     	endif
 15013  017E3E  0008               	tblrd		*
 15014  017E40  50F5               	movf	tablat,w,c
 15015  017E42  0900               	iorlw	0
 15016  017E44  B4D8               	btfsc	status,2,c
 15017  017E46  D036               	goto	u8600
 15018                           
 15019                           ;stkvar	_n @ sp[(-4)+-6]
 15020  017E48  0EF6               	movlw	-10
 15021  017E4A  006F FF8C  F001    	movff	plusw1,btemp
 15022  017E50  0EF7               	movlw	-9
 15023  017E52  50E3               	movf	plusw1,w,c
 15024  017E54  1001               	iorwf	btemp^0,w,c
 15025  017E56  B4D8               	btfsc	status,2,c
 15026  017E58  D02D               	goto	u8600
 15027                           
 15028                           ;stkvar	_r @ sp[(-4)+0]
 15029  017E5A  50E1               	movf	fsr1l,w,c
 15030  017E5C  0FFC               	addlw	-4
 15031  017E5E  6ED9               	movwf	fsr2l,c
 15032  017E60  50E2               	movf	fsr1h,w,c
 15033  017E62  6EDA               	movwf	fsr2h,c
 15034  017E64  0EFF               	movlw	255
 15035  017E66  22DA               	addwfc	fsr2h,f,c
 15036  017E68  006F FF7B FFF6     	movff	postinc2,tblptrl
 15037  017E6E  006F FF77 FFF7     	movff	postdec2,tblptrh
 15038  017E74                     	if	0	;tblptru may be non-zero
 15039  017E74                     	endif
 15040  017E74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15041  017E74  0E00               	movlw	low (__mediumconst shr (0+16))
 15042  017E76  6EF8               	movwf	tblptru,c
 15043  017E78                     	endif
 15044  017E78  0008               	tblrd		*
 15045  017E7A  006F FFD4  F00C    	movff	tablat,btemp+11
 15046                           
 15047                           ;stkvar	_l @ sp[(-4)+2]
 15048  017E80  0EFE               	movlw	-2
 15049  017E82  006F FF8F FFF6     	movff	plusw1,tblptrl
 15050  017E88  0EFF               	movlw	-1
 15051  017E8A  006F FF8F FFF7     	movff	plusw1,tblptrh
 15052  017E90  0E00               	movlw	low (__mediumconst shr (0+16))
 15053  017E92  6EF8               	movwf	tblptru,c
 15054  017E94  0E1F               	movlw	(high __ramtop+-1)
 15055  017E96  64F7               	cpfsgt	tblptrh,c
 15056  017E98  D003               	bra	u8607
 15057  017E9A  0008               	tblrd		*
 15058  017E9C  50F5               	movf	tablat,w,c
 15059  017E9E  D007               	bra	u8605
 15060  017EA0                     u8607:
 15061  017EA0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15062  017EA6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15063  017EAC  50EF               	movf	indf0,w,c
 15064  017EAE                     u8605:
 15065  017EAE  180C               	xorwf	(btemp+11)^0,w,c
 15066  017EB0  B4D8               	btfsc	status,2,c
 15067  017EB2  D766               	goto	l9271
 15068  017EB4                     u8600:
 15069                           
 15070                           ;stkvar	_l @ sp[(-4)+2]
 15071  017EB4  0EFE               	movlw	-2
 15072  017EB6  006F FF8F FFF6     	movff	plusw1,tblptrl
 15073  017EBC  0EFF               	movlw	-1
 15074  017EBE  006F FF8F FFF7     	movff	plusw1,tblptrh
 15075  017EC4  0E00               	movlw	low (__mediumconst shr (0+16))
 15076  017EC6  6EF8               	movwf	tblptru,c
 15077  017EC8  0E1F               	movlw	(high __ramtop+-1)
 15078  017ECA  64F7               	cpfsgt	tblptrh,c
 15079  017ECC  D003               	bra	u8617
 15080  017ECE  0008               	tblrd		*
 15081  017ED0  50F5               	movf	tablat,w,c
 15082  017ED2  D007               	bra	u8610
 15083  017ED4                     u8617:
 15084  017ED4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15085  017EDA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15086  017EE0  50EF               	movf	indf0,w,c
 15087  017EE2                     u8610:
 15088  017EE2  6E01               	movwf	btemp^0,c
 15089  017EE4  6A02               	clrf	(btemp+1)^0,c
 15090                           
 15091                           ;stkvar	_r @ sp[(-4)+0]
 15092  017EE6  50E1               	movf	fsr1l,w,c
 15093  017EE8  0FFC               	addlw	-4
 15094  017EEA  6ED9               	movwf	fsr2l,c
 15095  017EEC  50E2               	movf	fsr1h,w,c
 15096  017EEE  6EDA               	movwf	fsr2h,c
 15097  017EF0  0EFF               	movlw	255
 15098  017EF2  22DA               	addwfc	fsr2h,f,c
 15099  017EF4  006F FF7B FFF6     	movff	postinc2,tblptrl
 15100  017EFA  006F FF77 FFF7     	movff	postdec2,tblptrh
 15101  017F00                     	if	0	;tblptru may be non-zero
 15102  017F00                     	endif
 15103  017F00                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15104  017F00  0E00               	movlw	low (__mediumconst shr (0+16))
 15105  017F02  6EF8               	movwf	tblptru,c
 15106  017F04                     	endif
 15107  017F04  0008               	tblrd		*
 15108  017F06  50F5               	movf	tablat,w,c
 15109  017F08  5E01               	subwf	btemp^0,f,c
 15110  017F0A  0E00               	movlw	0
 15111  017F0C  5A02               	subwfb	(btemp+1)^0,f,c
 15112  017F0E                     l3456:
 15113                           
 15114                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 15115  017F0E  0EF6               	movlw	246
 15116  017F10  26E1               	addwf	fsr1l,f,c
 15117  017F12  0EFF               	movlw	255
 15118  017F14  22E2               	addwfc	fsr1h,f,c
 15119  017F16  0012               	return		;funcret
 15120  017F18                     __end_of_strncmp:
 15121                           	opt callstack 0
 15122                           
 15123 ;; *************** function _stoa *****************
 15124 ;; Defined at:
 15125 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15126 ;; Parameters:    Size  Location     Type
 15127 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15128 ;;		 -> f(6), NULL(0), 
 15129 ;;  s               2  [STACK] PTR unsigned char 
 15130 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 15131 ;;		 -> D.lcd(480), D(482), T(144), STR_3(6), 
 15132 ;;		 -> V(191), 
 15133 ;; Auto vars:     Size  Location     Type
 15134 ;;  nuls            7  [STACK] unsigned char [7]
 15135 ;;  l               2  [STACK] int 
 15136 ;;  p               2  [STACK] int 
 15137 ;;  cp              2  [STACK] PTR unsigned char 
 15138 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_47(9), 
 15139 ;;		 -> STR_46(12), D.lcd(480), D(482), T(144), 
 15140 ;;		 -> STR_3(6), V(191), 
 15141 ;;  w               2  [STACK] int 
 15142 ;;  i               2  [STACK] int 
 15143 ;; Return value:  Size  Location     Type
 15144 ;;                  2  [STACK] int 
 15145 ;; Registers used:
 15146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 15147 ;; Tracked objects:
 15148 ;;		On entry : 0/0
 15149 ;;		On exit  : 0/0
 15150 ;;		Unchanged: 0/0
 15151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15156 ;;Total ram usage:        0 bytes
 15157 ;; Hardware stack levels used:    1
 15158 ;; Hardware stack levels required when called:   18
 15159 ;; This function calls:
 15160 ;;		_fputc
 15161 ;;		_strlen
 15162 ;; This function is called by:
 15163 ;;		_vfpfcnvrt
 15164 ;; This function uses a reentrant model
 15165 ;;
 15166                           
 15167                           	psect	text54
 15168  0170DC                     __ptext54:
 15169                           	opt callstack 0
 15170  0170DC                     _stoa:
 15171                           	opt callstack 0
 15172                           
 15173                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15174  0170DC  0E11               	movlw	17
 15175  0170DE  26E1               	addwf	fsr1l,f,c
 15176  0170E0  0E00               	movlw	0
 15177  0170E2  22E2               	addwfc	fsr1h,f,c
 15178                           
 15179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 15180                           
 15181                           ;incstack = 0
 15182 ;; hardware stack exceeded
 15183  0170E4  EE20  F2CE         	lfsr	2,stoa@F1166
 15184                           
 15185                           ;stkvar	_nuls @ sp[(-17)+0]
 15186  0170E8  0E07               	movlw	7
 15187  0170EA  6E01               	movwf	btemp^0,c
 15188  0170EC  0EEF               	movlw	-17
 15189  0170EE                     us1152999:
 15190  0170EE  006F FF7B FFE3     	movff	postinc2,plusw1
 15191  0170F4  28E8               	incf	wreg,w,c
 15192  0170F6  2E01               	decfsz	btemp^0,f,c
 15193  0170F8  D7FA               	bra	us1152999
 15194                           
 15195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 15196                           ;stkvar	_s @ sp[(-17)+-4]
 15197  0170FA  0EEB               	movlw	-21
 15198  0170FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 15199  017102  0EEC               	movlw	-20
 15200  017104  006F FF8C  F00C    	movff	plusw1,btemp+11
 15201                           
 15202                           ;stkvar	_cp @ sp[(-17)+11]
 15203  01710A  0EFB               	movlw	-5
 15204  01710C  0060  F033  FFE3   	movff	btemp+11,plusw1
 15205  017112  0EFA               	movlw	-6
 15206  017114  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15207                           
 15208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 15209                           ;stkvar	_cp @ sp[(-17)+11]
 15210  01711A  0EFA               	movlw	-6
 15211  01711C  006F FF8C  F001    	movff	plusw1,btemp
 15212  017122  0EFB               	movlw	-5
 15213  017124  50E3               	movf	plusw1,w,c
 15214  017126  1001               	iorwf	btemp^0,w,c
 15215  017128  A4D8               	btfss	status,2,c
 15216  01712A  D00E               	goto	l12111
 15217                           
 15218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 15219                           ;stkvar	_nuls @ sp[(-17)+0]
 15220  01712C  0EEF               	movlw	239
 15221  01712E  24E1               	addwf	fsr1l,w,c
 15222  017130  6E0B               	movwf	(btemp+10)^0,c
 15223  017132  0EFF               	movlw	255
 15224  017134  20E2               	addwfc	fsr1h,w,c
 15225  017136  6E0C               	movwf	(btemp+11)^0,c
 15226                           
 15227                           ;stkvar	_cp @ sp[(-17)+11]
 15228  017138  0EFB               	movlw	-5
 15229  01713A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15230  017140  0EFA               	movlw	-6
 15231  017142  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15232  017148                     l12111:
 15233                           
 15234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 15235                           ;stkvar	_cp @ sp[(-17)+11]
 15236  017148  0EFA               	movlw	-6
 15237  01714A  006F FF8F FFE6     	movff	plusw1,postinc1
 15238  017150  006F FF8F FFE6     	movff	plusw1,postinc1
 15239  017156  EC88  F0D3         	call	_strlen	;wreg free
 15240                           
 15241                           ;stkvar	_l @ sp[(-17)+7]
 15242  01715A  0EF6               	movlw	-10
 15243  01715C  0060  F007  FFE3   	movff	btemp,plusw1
 15244  017162  0EF7               	movlw	-9
 15245  017164  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15246                           
 15247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 15248                           ;stkvar	_p @ sp[(-17)+9]
 15249  01716A  0EF8               	movlw	-8
 15250  01716C  0060  F0F3  FFE3   	movff	_prec,plusw1
 15251  017172  0EF9               	movlw	-7
 15252  017174  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 15253                           
 15254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 15255                           ;stkvar	_p @ sp[(-17)+9]
 15256  01717A  0EF9               	movlw	-7
 15257  01717C  BEE3               	btfsc	plusw1,7,c
 15258  01717E  D023               	goto	l2281
 15259                           
 15260                           ;stkvar	_l @ sp[(-17)+7]
 15261                           ;stkvar	_p @ sp[(-17)+9]
 15262  017180  50E1               	movf	fsr1l,w,c
 15263  017182  0FF8               	addlw	-8
 15264  017184  6ED9               	movwf	fsr2l,c
 15265  017186  50E2               	movf	fsr1h,w,c
 15266  017188  6EDA               	movwf	fsr2h,c
 15267  01718A  0EFF               	movlw	255
 15268  01718C  22DA               	addwfc	fsr2h,f,c
 15269  01718E  0EF6               	movlw	-10
 15270  017190  50E3               	movf	plusw1,w,c
 15271  017192  5CDE               	subwf	postinc2,w,c
 15272  017194  50DE               	movf	postinc2,w,c
 15273  017196  0A80               	xorlw	128
 15274  017198  6E01               	movwf	btemp^0,c
 15275  01719A  0EF7               	movlw	-9
 15276  01719C  50E3               	movf	plusw1,w,c
 15277  01719E  0A80               	xorlw	128
 15278  0171A0  5801               	subwfb	btemp^0,w,c
 15279  0171A2  B0D8               	btfsc	status,0,c
 15280  0171A4  D010               	goto	l2281
 15281                           
 15282                           ;stkvar	_p @ sp[(-17)+9]
 15283                           ;stkvar	_l @ sp[(-17)+7]
 15284  0171A6  0EF8               	movlw	-8
 15285  0171A8  006F FF8C  F001    	movff	plusw1,btemp
 15286  0171AE  0EF6               	movlw	-10
 15287  0171B0  0060  F007  FFE3   	movff	btemp,plusw1
 15288  0171B6  0EF9               	movlw	-7
 15289  0171B8  006F FF8C  F001    	movff	plusw1,btemp
 15290  0171BE  0EF7               	movlw	-9
 15291  0171C0  0060  F007  FFE3   	movff	btemp,plusw1
 15292  0171C6                     l2281:
 15293                           
 15294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 15295                           ;stkvar	_l @ sp[(-17)+7]
 15296                           ;stkvar	_p @ sp[(-17)+9]
 15297  0171C6  0EF6               	movlw	-10
 15298  0171C8  006F FF8C  F001    	movff	plusw1,btemp
 15299  0171CE  0EF8               	movlw	-8
 15300  0171D0  0060  F007  FFE3   	movff	btemp,plusw1
 15301  0171D6  0EF7               	movlw	-9
 15302  0171D8  006F FF8C  F001    	movff	plusw1,btemp
 15303  0171DE  0EF9               	movlw	-7
 15304  0171E0  0060  F007  FFE3   	movff	btemp,plusw1
 15305                           
 15306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 15307                           ;stkvar	_w @ sp[(-17)+13]
 15308  0171E6  0EFC               	movlw	-4
 15309  0171E8  0060  F0EB  FFE3   	movff	_width,plusw1
 15310  0171EE  0EFD               	movlw	-3
 15311  0171F0  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15312                           
 15313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 15314  0171F6  A03E               	btfss	_flags^0,0,c
 15315  0171F8  D01F               	goto	l12131
 15316  0171FA  D031               	goto	u11570
 15317  0171FC                     l12127:
 15318                           
 15319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 15320                           ;stkvar	_fp @ sp[(-17)+-2]
 15321  0171FC  0EED               	movlw	-19
 15322  0171FE  006F FF8F FFE6     	movff	plusw1,postinc1
 15323  017204  006F FF8F FFE6     	movff	plusw1,postinc1
 15324  01720A  0E20               	movlw	32
 15325  01720C  6EE6               	movwf	postinc1,c
 15326  01720E  0E00               	movlw	0
 15327  017210  6EE6               	movwf	postinc1,c
 15328  017212  EC1B  F0CB         	call	_fputc	;wreg free
 15329                           
 15330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 15331                           ;stkvar	_l @ sp[(-17)+7]
 15332  017216  0EF6               	movlw	-10
 15333  017218  50E3               	movf	plusw1,w,c
 15334  01721A  0F01               	addlw	1
 15335  01721C  6E01               	movwf	btemp^0,c
 15336  01721E  0EF6               	movlw	-10
 15337  017220  0060  F007  FFE3   	movff	btemp,plusw1
 15338  017226  6A01               	clrf	btemp^0,c
 15339  017228  0EF7               	movlw	-9
 15340  01722A  50E3               	movf	plusw1,w,c
 15341  01722C  2001               	addwfc	btemp^0,w,c
 15342  01722E  6E01               	movwf	btemp^0,c
 15343  017230  0EF7               	movlw	-9
 15344  017232  0060  F007  FFE3   	movff	btemp,plusw1
 15345  017238                     l12131:
 15346                           
 15347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 15348                           ;stkvar	_w @ sp[(-17)+13]
 15349                           ;stkvar	_l @ sp[(-17)+7]
 15350  017238  50E1               	movf	fsr1l,w,c
 15351  01723A  0FF6               	addlw	-10
 15352  01723C  6ED9               	movwf	fsr2l,c
 15353  01723E  50E2               	movf	fsr1h,w,c
 15354  017240  6EDA               	movwf	fsr2h,c
 15355  017242  0EFF               	movlw	255
 15356  017244  22DA               	addwfc	fsr2h,f,c
 15357  017246  0EFC               	movlw	-4
 15358  017248  50E3               	movf	plusw1,w,c
 15359  01724A  5CDE               	subwf	postinc2,w,c
 15360  01724C  50DE               	movf	postinc2,w,c
 15361  01724E  0A80               	xorlw	128
 15362  017250  6E01               	movwf	btemp^0,c
 15363  017252  0EFD               	movlw	-3
 15364  017254  50E3               	movf	plusw1,w,c
 15365  017256  0A80               	xorlw	128
 15366  017258  5801               	subwfb	btemp^0,w,c
 15367  01725A  A0D8               	btfss	status,0,c
 15368  01725C  D7CF               	goto	l12127
 15369  01725E                     u11570:
 15370                           
 15371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 15372                           ;stkvar	_i @ sp[(-17)+15]
 15373  01725E  0EFE               	movlw	-2
 15374  017260  6AE3               	clrf	plusw1,c
 15375  017262  0EFF               	movlw	-1
 15376  017264  6AE3               	clrf	plusw1,c
 15377                           
 15378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15379  017266  D045               	goto	l12141
 15380  017268                     l12135:
 15381                           
 15382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 15383                           ;stkvar	_fp @ sp[(-17)+-2]
 15384  017268  0EED               	movlw	-19
 15385  01726A  006F FF8F FFE6     	movff	plusw1,postinc1
 15386  017270  006F FF8F FFE6     	movff	plusw1,postinc1
 15387                           
 15388                           ;stkvar	_cp @ sp[(-19)+11]
 15389  017276  0EF8               	movlw	-8
 15390  017278  006F FF8F FFF6     	movff	plusw1,tblptrl
 15391  01727E  0EF9               	movlw	-7
 15392  017280  006F FF8F FFF7     	movff	plusw1,tblptrh
 15393  017286  0E00               	movlw	low (__mediumconst shr (0+16))
 15394  017288  6EF8               	movwf	tblptru,c
 15395  01728A  0E1F               	movlw	(high __ramtop+-1)
 15396  01728C  64F7               	cpfsgt	tblptrh,c
 15397  01728E  D003               	bra	u11587
 15398  017290  0008               	tblrd		*
 15399  017292  50F5               	movf	tablat,w,c
 15400  017294  D007               	bra	u11580
 15401  017296                     u11587:
 15402  017296  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15403  01729C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15404  0172A2  50EF               	movf	indf0,w,c
 15405  0172A4                     u11580:
 15406  0172A4  6EE6               	movwf	postinc1,c
 15407  0172A6  0E00               	movlw	0
 15408  0172A8  6EE6               	movwf	postinc1,c
 15409  0172AA  EC1B  F0CB         	call	_fputc	;wreg free
 15410                           
 15411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 15412                           ;stkvar	_cp @ sp[(-17)+11]
 15413  0172AE  0EFA               	movlw	-6
 15414  0172B0  50E3               	movf	plusw1,w,c
 15415  0172B2  0F01               	addlw	1
 15416  0172B4  6E01               	movwf	btemp^0,c
 15417  0172B6  0EFA               	movlw	-6
 15418  0172B8  0060  F007  FFE3   	movff	btemp,plusw1
 15419  0172BE  6A01               	clrf	btemp^0,c
 15420  0172C0  0EFB               	movlw	-5
 15421  0172C2  50E3               	movf	plusw1,w,c
 15422  0172C4  2001               	addwfc	btemp^0,w,c
 15423  0172C6  6E01               	movwf	btemp^0,c
 15424  0172C8  0EFB               	movlw	-5
 15425  0172CA  0060  F007  FFE3   	movff	btemp,plusw1
 15426                           
 15427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 15428                           ;stkvar	_i @ sp[(-17)+15]
 15429  0172D0  0EFE               	movlw	-2
 15430  0172D2  50E3               	movf	plusw1,w,c
 15431  0172D4  0F01               	addlw	1
 15432  0172D6  6E01               	movwf	btemp^0,c
 15433  0172D8  0EFE               	movlw	-2
 15434  0172DA  0060  F007  FFE3   	movff	btemp,plusw1
 15435  0172E0  6A01               	clrf	btemp^0,c
 15436  0172E2  0EFF               	movlw	-1
 15437  0172E4  50E3               	movf	plusw1,w,c
 15438  0172E6  2001               	addwfc	btemp^0,w,c
 15439  0172E8  6E01               	movwf	btemp^0,c
 15440  0172EA  0EFF               	movlw	-1
 15441  0172EC  0060  F007  FFE3   	movff	btemp,plusw1
 15442  0172F2                     l12141:
 15443                           
 15444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15445                           ;stkvar	_p @ sp[(-17)+9]
 15446                           ;stkvar	_i @ sp[(-17)+15]
 15447  0172F2  50E1               	movf	fsr1l,w,c
 15448  0172F4  0FFE               	addlw	-2
 15449  0172F6  6ED9               	movwf	fsr2l,c
 15450  0172F8  50E2               	movf	fsr1h,w,c
 15451  0172FA  6EDA               	movwf	fsr2h,c
 15452  0172FC  0EFF               	movlw	255
 15453  0172FE  22DA               	addwfc	fsr2h,f,c
 15454  017300  0EF8               	movlw	-8
 15455  017302  50E3               	movf	plusw1,w,c
 15456  017304  5CDE               	subwf	postinc2,w,c
 15457  017306  50DE               	movf	postinc2,w,c
 15458  017308  0A80               	xorlw	128
 15459  01730A  6E01               	movwf	btemp^0,c
 15460  01730C  0EF9               	movlw	-7
 15461  01730E  50E3               	movf	plusw1,w,c
 15462  017310  0A80               	xorlw	128
 15463  017312  5801               	subwfb	btemp^0,w,c
 15464  017314  A0D8               	btfss	status,0,c
 15465  017316  D7A8               	goto	l12135
 15466                           
 15467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 15468  017318  B03E               	btfsc	_flags^0,0,c
 15469  01731A  D01F               	goto	l12149
 15470  01731C  D031               	goto	u11610
 15471  01731E                     l12145:
 15472                           
 15473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 15474                           ;stkvar	_fp @ sp[(-17)+-2]
 15475  01731E  0EED               	movlw	-19
 15476  017320  006F FF8F FFE6     	movff	plusw1,postinc1
 15477  017326  006F FF8F FFE6     	movff	plusw1,postinc1
 15478  01732C  0E20               	movlw	32
 15479  01732E  6EE6               	movwf	postinc1,c
 15480  017330  0E00               	movlw	0
 15481  017332  6EE6               	movwf	postinc1,c
 15482  017334  EC1B  F0CB         	call	_fputc	;wreg free
 15483                           
 15484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 15485                           ;stkvar	_l @ sp[(-17)+7]
 15486  017338  0EF6               	movlw	-10
 15487  01733A  50E3               	movf	plusw1,w,c
 15488  01733C  0F01               	addlw	1
 15489  01733E  6E01               	movwf	btemp^0,c
 15490  017340  0EF6               	movlw	-10
 15491  017342  0060  F007  FFE3   	movff	btemp,plusw1
 15492  017348  6A01               	clrf	btemp^0,c
 15493  01734A  0EF7               	movlw	-9
 15494  01734C  50E3               	movf	plusw1,w,c
 15495  01734E  2001               	addwfc	btemp^0,w,c
 15496  017350  6E01               	movwf	btemp^0,c
 15497  017352  0EF7               	movlw	-9
 15498  017354  0060  F007  FFE3   	movff	btemp,plusw1
 15499  01735A                     l12149:
 15500                           
 15501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 15502                           ;stkvar	_w @ sp[(-17)+13]
 15503                           ;stkvar	_l @ sp[(-17)+7]
 15504  01735A  50E1               	movf	fsr1l,w,c
 15505  01735C  0FF6               	addlw	-10
 15506  01735E  6ED9               	movwf	fsr2l,c
 15507  017360  50E2               	movf	fsr1h,w,c
 15508  017362  6EDA               	movwf	fsr2h,c
 15509  017364  0EFF               	movlw	255
 15510  017366  22DA               	addwfc	fsr2h,f,c
 15511  017368  0EFC               	movlw	-4
 15512  01736A  50E3               	movf	plusw1,w,c
 15513  01736C  5CDE               	subwf	postinc2,w,c
 15514  01736E  50DE               	movf	postinc2,w,c
 15515  017370  0A80               	xorlw	128
 15516  017372  6E01               	movwf	btemp^0,c
 15517  017374  0EFD               	movlw	-3
 15518  017376  50E3               	movf	plusw1,w,c
 15519  017378  0A80               	xorlw	128
 15520  01737A  5801               	subwfb	btemp^0,w,c
 15521  01737C  A0D8               	btfss	status,0,c
 15522  01737E  D7CF               	goto	l12145
 15523  017380                     u11610:
 15524                           
 15525                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 15526                           ;stkvar	_l @ sp[(-17)+7]
 15527  017380  0EF6               	movlw	-10
 15528  017382  006F FF8C  F001    	movff	plusw1,btemp
 15529  017388  0EF7               	movlw	-9
 15530  01738A  006F FF8C  F002    	movff	plusw1,btemp+1
 15531                           
 15532                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 15533  017390  0EEB               	movlw	235
 15534  017392  26E1               	addwf	fsr1l,f,c
 15535  017394  0EFF               	movlw	255
 15536  017396  22E2               	addwfc	fsr1h,f,c
 15537  017398  0012               	return		;funcret
 15538  01739A                     __end_of_stoa:
 15539                           	opt callstack 0
 15540                           
 15541 ;; *************** function _efgtoa *****************
 15542 ;; Defined at:
 15543 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15544 ;; Parameters:    Size  Location     Type
 15545 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15546 ;;		 -> f(6), NULL(0), 
 15547 ;;  f               4  [STACK] PTR struct _IO_FILE
 15548 ;;  c               1  [STACK] unsigned char 
 15549 ;; Auto vars:     Size  Location     Type
 15550 ;;  u               4  [STACK] unsigned char 
 15551 ;;  g               4  [STACK] unsigned char 
 15552 ;;  l               4  [STACK] unsigned char 
 15553 ;;  h               4  [STACK] unsigned char 
 15554 ;;  ou              4  [STACK] unsigned char 
 15555 ;;  n               2  [STACK] int 
 15556 ;;  e               2  [STACK] int 
 15557 ;;  i               2  [STACK] int 
 15558 ;;  w               2  [STACK] int 
 15559 ;;  p               2  [STACK] int 
 15560 ;;  sign            2  [STACK] int 
 15561 ;;  d               2  [STACK] int 
 15562 ;;  ne              2  [STACK] int 
 15563 ;;  m               2  [STACK] int 
 15564 ;;  pp              2  [STACK] int 
 15565 ;;  t               2  [STACK] int 
 15566 ;;  mode            1  [STACK] unsigned char 
 15567 ;;  nmode           1  [STACK] unsigned char 
 15568 ;; Return value:  Size  Location     Type
 15569 ;;                  2  [STACK] int 
 15570 ;; Registers used:
 15571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15572 ;; Tracked objects:
 15573 ;;		On entry : 0/0
 15574 ;;		On exit  : 0/0
 15575 ;;		Unchanged: 0/0
 15576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15581 ;;Total ram usage:        0 bytes
 15582 ;; Hardware stack levels used:    1
 15583 ;; Hardware stack levels required when called:   20
 15584 ;; This function calls:
 15585 ;;		___awdiv
 15586 ;;		___awmod
 15587 ;;		___fladd
 15588 ;;		___fldiv
 15589 ;;		___fleq
 15590 ;;		___flge
 15591 ;;		___flmul
 15592 ;;		___flneg
 15593 ;;		___flsub
 15594 ;;		___fltol
 15595 ;;		___fpclassifyf
 15596 ;;		_floorf
 15597 ;;		_isupper
 15598 ;;		_pad
 15599 ;;		_strcpy
 15600 ;;		_tolower
 15601 ;; This function is called by:
 15602 ;;		_vfpfcnvrt
 15603 ;; This function uses a reentrant model
 15604 ;;
 15605                           
 15606                           	psect	text55
 15607  010000                     __ptext55:
 15608                           	opt callstack 0
 15609  010000                     _efgtoa:
 15610                           	opt callstack 0
 15611                           
 15612                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15613  010000  0E38               	movlw	56
 15614  010002  26E1               	addwf	fsr1l,f,c
 15615  010004  0E00               	movlw	0
 15616  010006  22E2               	addwfc	fsr1h,f,c
 15617                           
 15618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 15619                           ;stkvar	_sign @ sp[(-56)+42]
 15620                           
 15621                           ;incstack = 0
 15622 ;; hardware stack exceeded
 15623  010008  0EF2               	movlw	-14
 15624  01000A  6AE3               	clrf	plusw1,c
 15625  01000C  0EF3               	movlw	-13
 15626  01000E  6AE3               	clrf	plusw1,c
 15627                           
 15628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 15629                           ;stkvar	_f @ sp[(-56)+-6]
 15630  010010  0EC2               	movlw	-62
 15631  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 15632  010018  0EC3               	movlw	-61
 15633  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 15634  010020  0EC4               	movlw	-60
 15635  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 15636  010028  0EC5               	movlw	-59
 15637  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15638                           
 15639                           ;stkvar	_g @ sp[(-56)+16]
 15640  010030  0ED8               	movlw	-40
 15641  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 15642  010038  0ED9               	movlw	-39
 15643  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15644  010040  0EDA               	movlw	-38
 15645  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15646  010048  0EDB               	movlw	-37
 15647  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15648                           
 15649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 15650                           ;stkvar	_g @ sp[(-56)+16]
 15651  010050  0EDB               	movlw	-37
 15652  010052  AEE3               	btfss	plusw1,7,c
 15653  010054  D02B               	goto	l11809
 15654                           
 15655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 15656  010056  0E01               	movlw	1
 15657  010058  6E0B               	movwf	(btemp+10)^0,c
 15658  01005A  0E00               	movlw	0
 15659  01005C  6E0C               	movwf	(btemp+11)^0,c
 15660                           
 15661                           ;stkvar	_sign @ sp[(-56)+42]
 15662  01005E  0EF2               	movlw	-14
 15663  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15664  010066  0EF3               	movlw	-13
 15665  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 15666                           
 15667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 15668                           ;stkvar	_g @ sp[(-56)+16]
 15669  01006E  0ED8               	movlw	-40
 15670  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 15671  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 15672  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 15673  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 15674  010088  ECEB  F0D8         	call	___flneg	;wreg free
 15675                           
 15676                           ;stkvar	_g @ sp[(-56)+16]
 15677  01008C  0ED8               	movlw	-40
 15678  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 15679  010094  0ED9               	movlw	-39
 15680  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15681  01009C  0EDA               	movlw	-38
 15682  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15683  0100A4  0EDB               	movlw	-37
 15684  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 15685  0100AC                     l11809:
 15686                           
 15687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 15688                           ;stkvar	_n @ sp[(-56)+32]
 15689  0100AC  0EE8               	movlw	-24
 15690  0100AE  6AE3               	clrf	plusw1,c
 15691  0100B0  0EE9               	movlw	-23
 15692  0100B2  6AE3               	clrf	plusw1,c
 15693                           
 15694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 15695                           ;stkvar	_w @ sp[(-56)+38]
 15696  0100B4  0EEE               	movlw	-18
 15697  0100B6  0060  F0EB  FFE3   	movff	_width,plusw1
 15698  0100BC  0EEF               	movlw	-17
 15699  0100BE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15700                           
 15701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 15702                           ;stkvar	_sign @ sp[(-56)+42]
 15703  0100C4  0EF2               	movlw	-14
 15704  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 15705  0100CC  0EF3               	movlw	-13
 15706  0100CE  50E3               	movf	plusw1,w,c
 15707  0100D0  1001               	iorwf	btemp^0,w,c
 15708  0100D2  A4D8               	btfss	status,2,c
 15709  0100D4  D002               	goto	u11020
 15710  0100D6  A43E               	btfss	_flags^0,2,c
 15711  0100D8  D036               	goto	l11829
 15712  0100DA                     u11020:
 15713                           
 15714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 15715                           ;stkvar	_sign @ sp[(-56)+42]
 15716  0100DA  0EF2               	movlw	-14
 15717  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 15718  0100E2  0EF3               	movlw	-13
 15719  0100E4  50E3               	movf	plusw1,w,c
 15720  0100E6  1001               	iorwf	btemp^0,w,c
 15721  0100E8  A4D8               	btfss	status,2,c
 15722  0100EA  D002               	goto	l11821
 15723  0100EC  0E2B               	movlw	43
 15724  0100EE  D001               	goto	L16
 15725  0100F0                     l11821:
 15726  0100F0  0E2D               	movlw	45
 15727  0100F2                     L16:
 15728  0100F2  6E0B               	movwf	(btemp+10)^0,c
 15729  0100F4  0E00               	movlw	0
 15730  0100F6  6E0C               	movwf	(btemp+11)^0,c
 15731                           
 15732                           ;stkvar	_efgtoa$5492 @ sp[(-56)+10]
 15733  0100F8  0ED2               	movlw	-46
 15734  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15735  010100  0ED3               	movlw	-45
 15736  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 15737                           
 15738                           ;stkvar	_efgtoa$5492 @ sp[(-56)+10]
 15739  010108  0ED2               	movlw	-46
 15740  01010A  006F FF8C  F276    	movff	plusw1,_dbuf
 15741                           
 15742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 15743                           ;stkvar	_n @ sp[(-56)+32]
 15744  010110  0EE8               	movlw	-24
 15745  010112  50E3               	movf	plusw1,w,c
 15746  010114  0F01               	addlw	1
 15747  010116  6E01               	movwf	btemp^0,c
 15748  010118  0EE8               	movlw	-24
 15749  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 15750  010120  6A01               	clrf	btemp^0,c
 15751  010122  0EE9               	movlw	-23
 15752  010124  50E3               	movf	plusw1,w,c
 15753  010126  2001               	addwfc	btemp^0,w,c
 15754  010128  6E01               	movwf	btemp^0,c
 15755  01012A  0EE9               	movlw	-23
 15756  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 15757                           
 15758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 15759                           ;stkvar	_w @ sp[(-56)+38]
 15760  010132  50E1               	movf	fsr1l,w,c
 15761  010134  0FEE               	addlw	-18
 15762  010136  6ED9               	movwf	fsr2l,c
 15763  010138  50E2               	movf	fsr1h,w,c
 15764  01013A  6EDA               	movwf	fsr2h,c
 15765  01013C  0EFF               	movlw	255
 15766  01013E  22DA               	addwfc	fsr2h,f,c
 15767  010140  06DE               	decf	postinc2,f,c
 15768  010142  0E00               	movlw	0
 15769  010144  5ADD               	subwfb	postdec2,f,c
 15770  010146                     l11829:
 15771                           
 15772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15773                           ;stkvar	_g @ sp[(-56)+16]
 15774  010146  0ED8               	movlw	-40
 15775  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 15776  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 15777  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 15778  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 15779  010160  EC33  F0C4         	call	___fpclassifyf	;wreg free
 15780  010164  0401               	decf	btemp^0,w,c
 15781  010166  1002               	iorwf	(btemp+1)^0,w,c
 15782  010168  A4D8               	btfss	status,2,c
 15783  01016A  D076               	goto	l11847
 15784  01016C  0EBF               	movlw	191
 15785  01016E  6E0B               	movwf	(btemp+10)^0,c
 15786  010170  0EFF               	movlw	255
 15787  010172  6E0C               	movwf	(btemp+11)^0,c
 15788                           
 15789                           ;stkvar	_c @ sp[(-56)+-7]
 15790  010174  0EC1               	movlw	-63
 15791  010176  50E3               	movf	plusw1,w,c
 15792  010178  6E09               	movwf	(btemp+8)^0,c
 15793  01017A  6A0A               	clrf	(btemp+9)^0,c
 15794  01017C  500B               	movf	(btemp+10)^0,w,c
 15795  01017E  2609               	addwf	(btemp+8)^0,f,c
 15796  010180  500C               	movf	(btemp+11)^0,w,c
 15797  010182  220A               	addwfc	(btemp+9)^0,f,c
 15798  010184  500A               	movf	(btemp+9)^0,w,c
 15799  010186  E106               	bnz	u11050
 15800  010188  0E1A               	movlw	26
 15801  01018A  5C09               	subwf	(btemp+8)^0,w,c
 15802  01018C  B0D8               	btfsc	status,0,c
 15803  01018E  D002               	goto	u11050
 15804  010190  0E01               	movlw	1
 15805  010192  D001               	goto	u11060
 15806  010194                     u11050:
 15807  010194  0E00               	movlw	0
 15808  010196                     u11060:
 15809  010196  6E0B               	movwf	(btemp+10)^0,c
 15810  010198  6A0C               	clrf	(btemp+11)^0,c
 15811                           
 15812                           ;stkvar	_efgtoa$5493 @ sp[(-56)+8]
 15813  01019A  0ED0               	movlw	-48
 15814  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15815  0101A2  0ED1               	movlw	-47
 15816  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15817                           
 15818                           ;stkvar	_efgtoa$5493 @ sp[(-56)+8]
 15819  0101AA  0ED0               	movlw	-48
 15820  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 15821  0101B2  0ED1               	movlw	-47
 15822  0101B4  50E3               	movf	plusw1,w,c
 15823  0101B6  1001               	iorwf	btemp^0,w,c
 15824  0101B8  B4D8               	btfsc	status,2,c
 15825  0101BA  D017               	goto	l11839
 15826                           
 15827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 15828  0101BC  0ED6               	movlw	low STR_66
 15829  0101BE  6EE6               	movwf	postinc1,c
 15830  0101C0  0EFF               	movlw	high STR_66
 15831  0101C2  6EE6               	movwf	postinc1,c
 15832                           
 15833                           ;stkvar	_n @ sp[(-58)+32]
 15834  0101C4  0E76               	movlw	low _dbuf
 15835  0101C6  6E0B               	movwf	(btemp+10)^0,c
 15836  0101C8  0E02               	movlw	high _dbuf
 15837  0101CA  6E0C               	movwf	(btemp+11)^0,c
 15838  0101CC  0EE6               	movlw	-26
 15839  0101CE  50E3               	movf	plusw1,w,c
 15840  0101D0  260B               	addwf	(btemp+10)^0,f,c
 15841  0101D2  0EE7               	movlw	-25
 15842  0101D4  50E3               	movf	plusw1,w,c
 15843  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 15844  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15845  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 15846  0101E4  EC3F  F0D0         	call	_strcpy	;wreg free
 15847                           
 15848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 15849  0101E8  D016               	goto	l11841
 15850  0101EA                     l11839:
 15851                           
 15852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 15853  0101EA  0EDE               	movlw	low STR_67
 15854  0101EC  6EE6               	movwf	postinc1,c
 15855  0101EE  0EFF               	movlw	high STR_67
 15856  0101F0  6EE6               	movwf	postinc1,c
 15857                           
 15858                           ;stkvar	_n @ sp[(-58)+32]
 15859  0101F2  0E76               	movlw	low _dbuf
 15860  0101F4  6E0B               	movwf	(btemp+10)^0,c
 15861  0101F6  0E02               	movlw	high _dbuf
 15862  0101F8  6E0C               	movwf	(btemp+11)^0,c
 15863  0101FA  0EE6               	movlw	-26
 15864  0101FC  50E3               	movf	plusw1,w,c
 15865  0101FE  260B               	addwf	(btemp+10)^0,f,c
 15866  010200  0EE7               	movlw	-25
 15867  010202  50E3               	movf	plusw1,w,c
 15868  010204  220C               	addwfc	(btemp+11)^0,f,c
 15869  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15870  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 15871  010212  EC3F  F0D0         	call	_strcpy	;wreg free
 15872  010216                     l11841:
 15873                           
 15874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 15875                           ;stkvar	_w @ sp[(-56)+38]
 15876  010216  50E1               	movf	fsr1l,w,c
 15877  010218  0FEE               	addlw	-18
 15878  01021A  6ED9               	movwf	fsr2l,c
 15879  01021C  50E2               	movf	fsr1h,w,c
 15880  01021E  6EDA               	movwf	fsr2h,c
 15881  010220  0EFF               	movlw	255
 15882  010222  22DA               	addwfc	fsr2h,f,c
 15883  010224  0EFD               	movlw	253
 15884  010226  26DE               	addwf	postinc2,f,c
 15885  010228  0EFF               	movlw	255
 15886  01022A  22DD               	addwfc	postdec2,f,c
 15887  01022C                     l11843:
 15888                           
 15889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 15890                           ;stkvar	_w @ sp[(-56)+38]
 15891  01022C  0EEE               	movlw	-18
 15892  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 15893  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 15894  01023A  0E76               	movlw	low _dbuf
 15895  01023C  6EE6               	movwf	postinc1,c
 15896  01023E  0E02               	movlw	high _dbuf
 15897  010240  6EE6               	movwf	postinc1,c
 15898                           
 15899                           ;stkvar	_fp @ sp[(-60)+-2]
 15900  010242  0EC2               	movlw	-62
 15901  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 15902  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 15903  010250  ECC6  F0CC         	call	_pad	;wreg free
 15904  010254  EF1D  F089         	goto	l2199
 15905  010258                     l11847:
 15906                           
 15907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15908                           ;stkvar	_g @ sp[(-56)+16]
 15909  010258  0ED8               	movlw	-40
 15910  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 15911  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 15912  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 15913  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 15914  010272  EC33  F0C4         	call	___fpclassifyf	;wreg free
 15915  010276  5001               	movf	btemp^0,w,c
 15916  010278  1002               	iorwf	(btemp+1)^0,w,c
 15917  01027A  A4D8               	btfss	status,2,c
 15918  01027C  D056               	goto	l11865
 15919  01027E  0EBF               	movlw	191
 15920  010280  6E0B               	movwf	(btemp+10)^0,c
 15921  010282  0EFF               	movlw	255
 15922  010284  6E0C               	movwf	(btemp+11)^0,c
 15923                           
 15924                           ;stkvar	_c @ sp[(-56)+-7]
 15925  010286  0EC1               	movlw	-63
 15926  010288  50E3               	movf	plusw1,w,c
 15927  01028A  6E09               	movwf	(btemp+8)^0,c
 15928  01028C  6A0A               	clrf	(btemp+9)^0,c
 15929  01028E  500B               	movf	(btemp+10)^0,w,c
 15930  010290  2609               	addwf	(btemp+8)^0,f,c
 15931  010292  500C               	movf	(btemp+11)^0,w,c
 15932  010294  220A               	addwfc	(btemp+9)^0,f,c
 15933  010296  500A               	movf	(btemp+9)^0,w,c
 15934  010298  E106               	bnz	u11090
 15935  01029A  0E1A               	movlw	26
 15936  01029C  5C09               	subwf	(btemp+8)^0,w,c
 15937  01029E  B0D8               	btfsc	status,0,c
 15938  0102A0  D002               	goto	u11090
 15939  0102A2  0E01               	movlw	1
 15940  0102A4  D001               	goto	u11100
 15941  0102A6                     u11090:
 15942  0102A6  0E00               	movlw	0
 15943  0102A8                     u11100:
 15944  0102A8  6E0B               	movwf	(btemp+10)^0,c
 15945  0102AA  6A0C               	clrf	(btemp+11)^0,c
 15946                           
 15947                           ;stkvar	_efgtoa$5497 @ sp[(-56)+6]
 15948  0102AC  0ECE               	movlw	-50
 15949  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15950  0102B4  0ECF               	movlw	-49
 15951  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 15952                           
 15953                           ;stkvar	_efgtoa$5497 @ sp[(-56)+6]
 15954  0102BC  0ECE               	movlw	-50
 15955  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 15956  0102C4  0ECF               	movlw	-49
 15957  0102C6  50E3               	movf	plusw1,w,c
 15958  0102C8  1001               	iorwf	btemp^0,w,c
 15959  0102CA  B4D8               	btfsc	status,2,c
 15960  0102CC  D017               	goto	l11857
 15961                           
 15962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 15963  0102CE  0EDA               	movlw	low STR_70
 15964  0102D0  6EE6               	movwf	postinc1,c
 15965  0102D2  0EFF               	movlw	high STR_70
 15966  0102D4  6EE6               	movwf	postinc1,c
 15967                           
 15968                           ;stkvar	_n @ sp[(-58)+32]
 15969  0102D6  0E76               	movlw	low _dbuf
 15970  0102D8  6E0B               	movwf	(btemp+10)^0,c
 15971  0102DA  0E02               	movlw	high _dbuf
 15972  0102DC  6E0C               	movwf	(btemp+11)^0,c
 15973  0102DE  0EE6               	movlw	-26
 15974  0102E0  50E3               	movf	plusw1,w,c
 15975  0102E2  260B               	addwf	(btemp+10)^0,f,c
 15976  0102E4  0EE7               	movlw	-25
 15977  0102E6  50E3               	movf	plusw1,w,c
 15978  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 15979  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15980  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 15981  0102F6  EC3F  F0D0         	call	_strcpy	;wreg free
 15982                           
 15983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 15984  0102FA  D78D               	goto	l11841
 15985  0102FC                     l11857:
 15986                           
 15987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 15988  0102FC  0EE2               	movlw	low STR_71
 15989  0102FE  6EE6               	movwf	postinc1,c
 15990  010300  0EFF               	movlw	high STR_71
 15991  010302  6EE6               	movwf	postinc1,c
 15992                           
 15993                           ;stkvar	_n @ sp[(-58)+32]
 15994  010304  0E76               	movlw	low _dbuf
 15995  010306  6E0B               	movwf	(btemp+10)^0,c
 15996  010308  0E02               	movlw	high _dbuf
 15997  01030A  6E0C               	movwf	(btemp+11)^0,c
 15998  01030C  0EE6               	movlw	-26
 15999  01030E  50E3               	movf	plusw1,w,c
 16000  010310  260B               	addwf	(btemp+10)^0,f,c
 16001  010312  0EE7               	movlw	-25
 16002  010314  50E3               	movf	plusw1,w,c
 16003  010316  220C               	addwfc	(btemp+11)^0,f,c
 16004  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16005  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 16006  010324  EC3F  F0D0         	call	_strcpy	;wreg free
 16007  010328  D776               	goto	l11841
 16008  01032A                     l11865:
 16009                           
 16010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 16011  01032A  0E00               	movlw	0
 16012  01032C  6E09               	movwf	(btemp+8)^0,c
 16013  01032E  0E00               	movlw	0
 16014  010330  6E0A               	movwf	(btemp+9)^0,c
 16015  010332  0E80               	movlw	128
 16016  010334  6E0B               	movwf	(btemp+10)^0,c
 16017  010336  0E3F               	movlw	63
 16018  010338  6E0C               	movwf	(btemp+11)^0,c
 16019                           
 16020                           ;stkvar	_u @ sp[(-56)+12]
 16021  01033A  0ED4               	movlw	-44
 16022  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 16023  010342  0ED5               	movlw	-43
 16024  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16025  01034A  0ED6               	movlw	-42
 16026  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16027  010352  0ED7               	movlw	-41
 16028  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 16029                           
 16030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 16031                           ;stkvar	_e @ sp[(-56)+34]
 16032  01035A  0EEA               	movlw	-22
 16033  01035C  6AE3               	clrf	plusw1,c
 16034  01035E  0EEB               	movlw	-21
 16035  010360  6AE3               	clrf	plusw1,c
 16036                           
 16037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 16038  010362  0E00               	movlw	0
 16039  010364  6EE6               	movwf	postinc1,c
 16040  010366  0E00               	movlw	0
 16041  010368  6EE6               	movwf	postinc1,c
 16042  01036A  0E00               	movlw	0
 16043  01036C  6EE6               	movwf	postinc1,c
 16044  01036E  0E00               	movlw	0
 16045  010370  6EE6               	movwf	postinc1,c
 16046                           
 16047                           ;stkvar	_g @ sp[(-60)+16]
 16048  010372  0ED4               	movlw	-44
 16049  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 16050  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 16051  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 16052  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 16053  01038C  EC75  F0D1         	call	___fleq	;wreg free
 16054  010390  A001               	btfss	btemp& (0+255),0,c
 16055  010392  D039               	goto	l11877
 16056  010394  D0BC               	goto	u11140
 16057  010396                     l11873:
 16058                           
 16059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 16060  010396  0E00               	movlw	0
 16061  010398  6EE6               	movwf	postinc1,c
 16062  01039A  0E00               	movlw	0
 16063  01039C  6EE6               	movwf	postinc1,c
 16064  01039E  0E20               	movlw	32
 16065  0103A0  6EE6               	movwf	postinc1,c
 16066  0103A2  0E41               	movlw	65
 16067  0103A4  6EE6               	movwf	postinc1,c
 16068                           
 16069                           ;stkvar	_u @ sp[(-60)+12]
 16070  0103A6  0ED0               	movlw	-48
 16071  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16072  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16073  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 16074  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 16075  0103C0  EC9F  F099         	call	___flmul	;wreg free
 16076                           
 16077                           ;stkvar	_u @ sp[(-56)+12]
 16078  0103C4  0ED4               	movlw	-44
 16079  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 16080  0103CC  0ED5               	movlw	-43
 16081  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16082  0103D4  0ED6               	movlw	-42
 16083  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16084  0103DC  0ED7               	movlw	-41
 16085  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 16086                           
 16087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 16088                           ;stkvar	_e @ sp[(-56)+34]
 16089  0103E4  0EEA               	movlw	-22
 16090  0103E6  50E3               	movf	plusw1,w,c
 16091  0103E8  0F01               	addlw	1
 16092  0103EA  6E01               	movwf	btemp^0,c
 16093  0103EC  0EEA               	movlw	-22
 16094  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 16095  0103F4  6A01               	clrf	btemp^0,c
 16096  0103F6  0EEB               	movlw	-21
 16097  0103F8  50E3               	movf	plusw1,w,c
 16098  0103FA  2001               	addwfc	btemp^0,w,c
 16099  0103FC  6E01               	movwf	btemp^0,c
 16100  0103FE  0EEB               	movlw	-21
 16101  010400  0060  F007  FFE3   	movff	btemp,plusw1
 16102  010406                     l11877:
 16103                           
 16104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 16105  010406  0E00               	movlw	0
 16106  010408  6EE6               	movwf	postinc1,c
 16107  01040A  0E00               	movlw	0
 16108  01040C  6EE6               	movwf	postinc1,c
 16109  01040E  0E20               	movlw	32
 16110  010410  6EE6               	movwf	postinc1,c
 16111  010412  0E41               	movlw	65
 16112  010414  6EE6               	movwf	postinc1,c
 16113                           
 16114                           ;stkvar	_u @ sp[(-60)+12]
 16115  010416  0ED0               	movlw	-48
 16116  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 16117  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 16118  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 16119  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 16120  010430  EC9F  F099         	call	___flmul	;wreg free
 16121  010434  0060  F007  FFE6   	movff	btemp,postinc1
 16122  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16123  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16124  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 16125                           
 16126                           ;stkvar	_g @ sp[(-60)+16]
 16127  01044C  0ED4               	movlw	-44
 16128  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 16129  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 16130  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 16131  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 16132  010466  EC3A  F0C7         	call	___flge	;wreg free
 16133  01046A  A001               	btfss	btemp& (0+255),0,c
 16134  01046C  D032               	goto	l11883
 16135  01046E  D793               	goto	l11873
 16136  010470                     l11879:
 16137                           
 16138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 16139  010470  0E00               	movlw	0
 16140  010472  6EE6               	movwf	postinc1,c
 16141  010474  0E00               	movlw	0
 16142  010476  6EE6               	movwf	postinc1,c
 16143  010478  0E20               	movlw	32
 16144  01047A  6EE6               	movwf	postinc1,c
 16145  01047C  0E41               	movlw	65
 16146  01047E  6EE6               	movwf	postinc1,c
 16147                           
 16148                           ;stkvar	_u @ sp[(-60)+12]
 16149  010480  0ED0               	movlw	-48
 16150  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 16151  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 16152  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 16153  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 16154  01049A  EC50  F0A5         	call	___fldiv	;wreg free
 16155                           
 16156                           ;stkvar	_u @ sp[(-56)+12]
 16157  01049E  0ED4               	movlw	-44
 16158  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 16159  0104A6  0ED5               	movlw	-43
 16160  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16161  0104AE  0ED6               	movlw	-42
 16162  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16163  0104B6  0ED7               	movlw	-41
 16164  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 16165                           
 16166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 16167                           ;stkvar	_e @ sp[(-56)+34]
 16168  0104BE  50E1               	movf	fsr1l,w,c
 16169  0104C0  0FEA               	addlw	-22
 16170  0104C2  6ED9               	movwf	fsr2l,c
 16171  0104C4  50E2               	movf	fsr1h,w,c
 16172  0104C6  6EDA               	movwf	fsr2h,c
 16173  0104C8  0EFF               	movlw	255
 16174  0104CA  22DA               	addwfc	fsr2h,f,c
 16175  0104CC  06DE               	decf	postinc2,f,c
 16176  0104CE  0E00               	movlw	0
 16177  0104D0  5ADD               	subwfb	postdec2,f,c
 16178  0104D2                     l11883:
 16179                           
 16180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 16181                           ;stkvar	_u @ sp[(-56)+12]
 16182  0104D2  0ED4               	movlw	-44
 16183  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16184  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16185  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 16186  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 16187                           
 16188                           ;stkvar	_g @ sp[(-60)+16]
 16189  0104EC  0ED4               	movlw	-44
 16190  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 16191  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 16192  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 16193  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 16194  010506  EC3A  F0C7         	call	___flge	;wreg free
 16195  01050A  A001               	btfss	btemp& (0+255),0,c
 16196  01050C  D7B1               	goto	l11879
 16197  01050E                     u11140:
 16198                           
 16199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 16200                           ;stkvar	_c @ sp[(-56)+-7]
 16201  01050E  0EC1               	movlw	-63
 16202  010510  50E3               	movf	plusw1,w,c
 16203  010512  6EE6               	movwf	postinc1,c
 16204  010514  0E00               	movlw	0
 16205  010516  6EE6               	movwf	postinc1,c
 16206  010518  EC3E  F0D5         	call	_tolower	;wreg free
 16207                           
 16208                           ;stkvar	_mode @ sp[(-56)+54]
 16209  01051C  0EFE               	movlw	-2
 16210  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 16211                           
 16212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 16213                           ;stkvar	_mode @ sp[(-56)+54]
 16214                           ;stkvar	_nmode @ sp[(-56)+55]
 16215  010524  0EFE               	movlw	-2
 16216  010526  006F FF8C  F001    	movff	plusw1,btemp
 16217  01052C  0EFF               	movlw	-1
 16218  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 16219                           
 16220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 16221                           ;stkvar	_mode @ sp[(-56)+54]
 16222  010534  0EFE               	movlw	-2
 16223  010536  006F FF8C  F001    	movff	plusw1,btemp
 16224  01053C  0E67               	movlw	103
 16225  01053E  1801               	xorwf	btemp^0,w,c
 16226  010540  A4D8               	btfss	status,2,c
 16227  010542  D025               	goto	l11901
 16228                           
 16229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 16230  010544  503C               	movf	_prec^0,w,c
 16231  010546  103D               	iorwf	(_prec+1)^0,w,c
 16232  010548  A4D8               	btfss	status,2,c
 16233  01054A  D004               	goto	l11895
 16234                           
 16235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 16236  01054C  0E00               	movlw	0
 16237  01054E  6E3D               	movwf	(_prec+1)^0,c
 16238  010550  0E01               	movlw	1
 16239  010552  6E3C               	movwf	_prec^0,c
 16240  010554                     l11895:
 16241                           
 16242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 16243  010554  BE3D               	btfsc	(_prec+1)^0,7,c
 16244  010556  D005               	goto	u11170
 16245  010558  503D               	movf	(_prec+1)^0,w,c
 16246  01055A  E110               	bnz	l11899
 16247  01055C  043C               	decf	_prec^0,w,c
 16248  01055E  B0D8               	btfsc	status,0,c
 16249  010560  D00D               	goto	l11899
 16250  010562                     u11170:
 16251  010562  0E06               	movlw	6
 16252  010564  6E0B               	movwf	(btemp+10)^0,c
 16253  010566  0E00               	movlw	0
 16254  010568  6E0C               	movwf	(btemp+11)^0,c
 16255                           
 16256                           ;stkvar	_p @ sp[(-56)+40]
 16257  01056A  0EF0               	movlw	-16
 16258  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16259  010572  0EF1               	movlw	-15
 16260  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 16261  01057A  D00C               	goto	l11907
 16262  01057C                     l11899:
 16263                           
 16264                           ;stkvar	_p @ sp[(-56)+40]
 16265  01057C  0EF0               	movlw	-16
 16266  01057E  0060  F0F3  FFE3   	movff	_prec,plusw1
 16267  010584  0EF1               	movlw	-15
 16268  010586  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16269  01058C  D003               	goto	l11907
 16270  01058E                     l11901:
 16271                           
 16272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 16273  01058E  AE3D               	btfss	(_prec+1)^0,7,c
 16274  010590  D7F5               	goto	l11899
 16275  010592  D7E7               	goto	u11170
 16276  010594                     l11907:
 16277                           
 16278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 16279                           ;stkvar	_mode @ sp[(-56)+54]
 16280  010594  0EFE               	movlw	-2
 16281  010596  006F FF8C  F001    	movff	plusw1,btemp
 16282  01059C  0E67               	movlw	103
 16283  01059E  1801               	xorwf	btemp^0,w,c
 16284  0105A0  A4D8               	btfss	status,2,c
 16285  0105A2  D02F               	goto	l11917
 16286                           
 16287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 16288                           ;stkvar	_e @ sp[(-56)+34]
 16289  0105A4  0EEB               	movlw	-21
 16290  0105A6  AEE3               	btfss	plusw1,7,c
 16291  0105A8  D00E               	goto	u11200
 16292  0105AA  0EEA               	movlw	-22
 16293  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 16294  0105B2  0EFC               	movlw	252
 16295  0105B4  5E01               	subwf	btemp^0,f,c
 16296  0105B6  0EEB               	movlw	-21
 16297  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 16298  0105BE  0EFF               	movlw	255
 16299  0105C0  5A01               	subwfb	btemp^0,f,c
 16300  0105C2  A0D8               	btfss	status,0,c
 16301  0105C4  D018               	goto	l11915
 16302  0105C6                     u11200:
 16303                           
 16304                           ;stkvar	_e @ sp[(-56)+34]
 16305                           ;stkvar	_p @ sp[(-56)+40]
 16306  0105C6  0EF0               	movlw	-16
 16307  0105C8  50E3               	movf	plusw1,w,c
 16308  0105CA  0FFF               	addlw	255
 16309  0105CC  6E0B               	movwf	(btemp+10)^0,c
 16310  0105CE  0EF1               	movlw	-15
 16311  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 16312  0105D6  0EFF               	movlw	255
 16313  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 16314  0105DA  0EEA               	movlw	-22
 16315  0105DC  50E3               	movf	plusw1,w,c
 16316  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 16317  0105E0  500C               	movf	(btemp+11)^0,w,c
 16318  0105E2  0A80               	xorlw	128
 16319  0105E4  6E01               	movwf	btemp^0,c
 16320  0105E6  0EEB               	movlw	-21
 16321  0105E8  50E3               	movf	plusw1,w,c
 16322  0105EA  0A80               	xorlw	128
 16323  0105EC  5801               	subwfb	btemp^0,w,c
 16324  0105EE  A0D8               	btfss	status,0,c
 16325  0105F0  D002               	goto	l11915
 16326                           
 16327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 16328  0105F2  0E66               	movlw	102
 16329  0105F4  D001               	goto	L17
 16330  0105F6                     l11915:
 16331                           
 16332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 16333  0105F6  0E65               	movlw	101
 16334  0105F8                     L17:
 16335  0105F8  6E0C               	movwf	(btemp+11)^0,c
 16336                           
 16337                           ;stkvar	_nmode @ sp[(-56)+55]
 16338  0105FA  0EFF               	movlw	-1
 16339  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16340  010602                     l11917:
 16341                           
 16342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 16343                           ;stkvar	_p @ sp[(-56)+40]
 16344                           ;stkvar	_m @ sp[(-56)+48]
 16345  010602  0EF0               	movlw	-16
 16346  010604  006F FF8C  F001    	movff	plusw1,btemp
 16347  01060A  0EF8               	movlw	-8
 16348  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 16349  010612  0EF1               	movlw	-15
 16350  010614  006F FF8C  F001    	movff	plusw1,btemp
 16351  01061A  0EF9               	movlw	-7
 16352  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 16353                           
 16354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 16355                           ;stkvar	_mode @ sp[(-56)+54]
 16356  010622  0EFE               	movlw	-2
 16357  010624  006F FF8C  F001    	movff	plusw1,btemp
 16358  01062A  0E67               	movlw	103
 16359  01062C  1801               	xorwf	btemp^0,w,c
 16360  01062E  A4D8               	btfss	status,2,c
 16361  010630  D00B               	goto	u11240
 16362                           
 16363                           ;stkvar	_nmode @ sp[(-56)+55]
 16364  010632  0EFF               	movlw	-1
 16365  010634  006F FF8C  F001    	movff	plusw1,btemp
 16366  01063A  0E66               	movlw	102
 16367  01063C  1801               	xorwf	btemp^0,w,c
 16368  01063E  A4D8               	btfss	status,2,c
 16369  010640  D014               	goto	l2228
 16370                           
 16371                           ;stkvar	_e @ sp[(-56)+34]
 16372  010642  0EEB               	movlw	-21
 16373  010644  AEE3               	btfss	plusw1,7,c
 16374  010646  D011               	goto	l2228
 16375  010648                     u11240:
 16376                           
 16377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 16378                           ;stkvar	_m @ sp[(-56)+48]
 16379  010648  0EF8               	movlw	-8
 16380  01064A  50E3               	movf	plusw1,w,c
 16381  01064C  0F01               	addlw	1
 16382  01064E  6E01               	movwf	btemp^0,c
 16383  010650  0EF8               	movlw	-8
 16384  010652  0060  F007  FFE3   	movff	btemp,plusw1
 16385  010658  6A01               	clrf	btemp^0,c
 16386  01065A  0EF9               	movlw	-7
 16387  01065C  50E3               	movf	plusw1,w,c
 16388  01065E  2001               	addwfc	btemp^0,w,c
 16389  010660  6E01               	movwf	btemp^0,c
 16390  010662  0EF9               	movlw	-7
 16391  010664  0060  F007  FFE3   	movff	btemp,plusw1
 16392  01066A                     l2228:
 16393                           
 16394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 16395                           ;stkvar	_nmode @ sp[(-56)+55]
 16396  01066A  0EFF               	movlw	-1
 16397  01066C  006F FF8C  F001    	movff	plusw1,btemp
 16398  010672  0E66               	movlw	102
 16399  010674  1801               	xorwf	btemp^0,w,c
 16400  010676  A4D8               	btfss	status,2,c
 16401  010678  D03B               	goto	l11937
 16402                           
 16403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 16404                           ;stkvar	_e @ sp[(-56)+34]
 16405  01067A  0EEB               	movlw	-21
 16406  01067C  AEE3               	btfss	plusw1,7,c
 16407  01067E  D01C               	goto	l11933
 16408                           
 16409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 16410  010680  0E00               	movlw	0
 16411  010682  6E09               	movwf	(btemp+8)^0,c
 16412  010684  0E00               	movlw	0
 16413  010686  6E0A               	movwf	(btemp+9)^0,c
 16414  010688  0E80               	movlw	128
 16415  01068A  6E0B               	movwf	(btemp+10)^0,c
 16416  01068C  0E3F               	movlw	63
 16417  01068E  6E0C               	movwf	(btemp+11)^0,c
 16418                           
 16419                           ;stkvar	_u @ sp[(-56)+12]
 16420  010690  0ED4               	movlw	-44
 16421  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 16422  010698  0ED5               	movlw	-43
 16423  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16424  0106A0  0ED6               	movlw	-42
 16425  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16426  0106A8  0ED7               	movlw	-41
 16427  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16428                           
 16429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 16430                           ;stkvar	_e @ sp[(-56)+34]
 16431  0106B0  0EEA               	movlw	-22
 16432  0106B2  6AE3               	clrf	plusw1,c
 16433  0106B4  0EEB               	movlw	-21
 16434  0106B6  6AE3               	clrf	plusw1,c
 16435  0106B8                     l11933:
 16436                           
 16437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 16438                           ;stkvar	_mode @ sp[(-56)+54]
 16439  0106B8  0EFE               	movlw	-2
 16440  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 16441  0106C0  0E67               	movlw	103
 16442  0106C2  1801               	xorwf	btemp^0,w,c
 16443  0106C4  B4D8               	btfsc	status,2,c
 16444  0106C6  D014               	goto	l11937
 16445                           
 16446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 16447                           ;stkvar	_e @ sp[(-56)+34]
 16448                           ;stkvar	_m @ sp[(-56)+48]
 16449  0106C8  0EF8               	movlw	-8
 16450  0106CA  50E3               	movf	plusw1,w,c
 16451  0106CC  6E01               	movwf	btemp^0,c
 16452  0106CE  0EEA               	movlw	-22
 16453  0106D0  50E3               	movf	plusw1,w,c
 16454  0106D2  2601               	addwf	btemp^0,f,c
 16455  0106D4  0EF8               	movlw	-8
 16456  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 16457  0106DC  0EF9               	movlw	-7
 16458  0106DE  50E3               	movf	plusw1,w,c
 16459  0106E0  6E01               	movwf	btemp^0,c
 16460  0106E2  0EEB               	movlw	-21
 16461  0106E4  50E3               	movf	plusw1,w,c
 16462  0106E6  2201               	addwfc	btemp^0,f,c
 16463  0106E8  0EF9               	movlw	-7
 16464  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 16465  0106F0                     l11937:
 16466                           
 16467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 16468                           ;stkvar	_i @ sp[(-56)+36]
 16469  0106F0  0EEC               	movlw	-20
 16470  0106F2  6AE3               	clrf	plusw1,c
 16471  0106F4  0EED               	movlw	-19
 16472  0106F6  6AE3               	clrf	plusw1,c
 16473                           
 16474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 16475                           ;stkvar	_g @ sp[(-56)+16]
 16476  0106F8  0ED8               	movlw	-40
 16477  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 16478  010700  0ED9               	movlw	-39
 16479  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 16480  010708  0EDA               	movlw	-38
 16481  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16482  010710  0EDB               	movlw	-37
 16483  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 16484                           
 16485                           ;stkvar	_h @ sp[(-56)+24]
 16486  010718  0EE0               	movlw	-32
 16487  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16488  010720  0EE1               	movlw	-31
 16489  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16490  010728  0EE2               	movlw	-30
 16491  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16492  010730  0EE3               	movlw	-29
 16493  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 16494                           
 16495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 16496                           ;stkvar	_u @ sp[(-56)+12]
 16497  010738  0ED4               	movlw	-44
 16498  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 16499  010740  0ED5               	movlw	-43
 16500  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 16501  010748  0ED6               	movlw	-42
 16502  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16503  010750  0ED7               	movlw	-41
 16504  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 16505                           
 16506                           ;stkvar	_ou @ sp[(-56)+28]
 16507  010758  0EE4               	movlw	-28
 16508  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16509  010760  0EE5               	movlw	-27
 16510  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16511  010768  0EE6               	movlw	-26
 16512  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16513  010770  0EE7               	movlw	-25
 16514  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 16515                           
 16516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16517  010778  D0D6               	goto	l11953
 16518  01077A                     l11943:
 16519                           
 16520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 16521                           ;stkvar	_u @ sp[(-56)+12]
 16522  01077A  0ED4               	movlw	-44
 16523  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 16524  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 16525  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 16526  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 16527                           
 16528                           ;stkvar	_h @ sp[(-60)+24]
 16529  010794  0EDC               	movlw	-36
 16530  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 16531  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 16532  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16533  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16534  0107AE  EC50  F0A5         	call	___fldiv	;wreg free
 16535  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 16536  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16537  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16538  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 16539  0107CA  ECA6  F0B0         	call	_floorf	;wreg free
 16540                           
 16541                           ;stkvar	_l @ sp[(-56)+20]
 16542  0107CE  0EDC               	movlw	-36
 16543  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 16544  0107D6  0EDD               	movlw	-35
 16545  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16546  0107DE  0EDE               	movlw	-34
 16547  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16548  0107E6  0EDF               	movlw	-33
 16549  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 16550                           
 16551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 16552                           ;stkvar	_l @ sp[(-56)+20]
 16553  0107EE  0EDC               	movlw	-36
 16554  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 16555  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 16556  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 16557  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 16558  010808  EC81  F0C6         	call	___fltol	;wreg free
 16559  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 16560  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 16561                           
 16562                           ;stkvar	_d @ sp[(-56)+44]
 16563  010818  0EF4               	movlw	-12
 16564  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16565  010820  0EF5               	movlw	-11
 16566  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 16567                           
 16568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 16569                           ;stkvar	_u @ sp[(-56)+12]
 16570  010828  0ED4               	movlw	-44
 16571  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 16572  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 16573  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 16574  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 16575                           
 16576                           ;stkvar	_l @ sp[(-60)+20]
 16577  010842  0ED8               	movlw	-40
 16578  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 16579  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 16580  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 16581  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 16582  01085C  EC9F  F099         	call	___flmul	;wreg free
 16583  010860  0060  F007  FFE6   	movff	btemp,postinc1
 16584  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16585  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16586  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 16587                           
 16588                           ;stkvar	_h @ sp[(-60)+24]
 16589  010878  0EDC               	movlw	-36
 16590  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 16591  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 16592  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 16593  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 16594  010892  ECC1  F0D9         	call	___flsub	;wreg free
 16595                           
 16596                           ;stkvar	_h @ sp[(-56)+24]
 16597  010896  0EE0               	movlw	-32
 16598  010898  0060  F007  FFE3   	movff	btemp,plusw1
 16599  01089E  0EE1               	movlw	-31
 16600  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16601  0108A6  0EE2               	movlw	-30
 16602  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16603  0108AE  0EE3               	movlw	-29
 16604  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 16605                           
 16606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 16607  0108B6  0E00               	movlw	0
 16608  0108B8  6EE6               	movwf	postinc1,c
 16609  0108BA  0E00               	movlw	0
 16610  0108BC  6EE6               	movwf	postinc1,c
 16611  0108BE  0E20               	movlw	32
 16612  0108C0  6EE6               	movwf	postinc1,c
 16613  0108C2  0E41               	movlw	65
 16614  0108C4  6EE6               	movwf	postinc1,c
 16615                           
 16616                           ;stkvar	_u @ sp[(-60)+12]
 16617  0108C6  0ED0               	movlw	-48
 16618  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16619  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16620  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16621  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16622  0108E0  EC50  F0A5         	call	___fldiv	;wreg free
 16623                           
 16624                           ;stkvar	_u @ sp[(-56)+12]
 16625  0108E4  0ED4               	movlw	-44
 16626  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 16627  0108EC  0ED5               	movlw	-43
 16628  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16629  0108F4  0ED6               	movlw	-42
 16630  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16631  0108FC  0ED7               	movlw	-41
 16632  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 16633                           
 16634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 16635                           ;stkvar	_i @ sp[(-56)+36]
 16636  010904  0EEC               	movlw	-20
 16637  010906  50E3               	movf	plusw1,w,c
 16638  010908  0F01               	addlw	1
 16639  01090A  6E01               	movwf	btemp^0,c
 16640  01090C  0EEC               	movlw	-20
 16641  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 16642  010914  6A01               	clrf	btemp^0,c
 16643  010916  0EED               	movlw	-19
 16644  010918  50E3               	movf	plusw1,w,c
 16645  01091A  2001               	addwfc	btemp^0,w,c
 16646  01091C  6E01               	movwf	btemp^0,c
 16647  01091E  0EED               	movlw	-19
 16648  010920  0060  F007  FFE3   	movff	btemp,plusw1
 16649  010926                     l11953:
 16650                           
 16651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16652                           ;stkvar	_m @ sp[(-56)+48]
 16653                           ;stkvar	_i @ sp[(-56)+36]
 16654  010926  50E1               	movf	fsr1l,w,c
 16655  010928  0FEC               	addlw	-20
 16656  01092A  6ED9               	movwf	fsr2l,c
 16657  01092C  50E2               	movf	fsr1h,w,c
 16658  01092E  6EDA               	movwf	fsr2h,c
 16659  010930  0EFF               	movlw	255
 16660  010932  22DA               	addwfc	fsr2h,f,c
 16661  010934  0EF8               	movlw	-8
 16662  010936  50E3               	movf	plusw1,w,c
 16663  010938  5CDE               	subwf	postinc2,w,c
 16664  01093A  50DE               	movf	postinc2,w,c
 16665  01093C  0A80               	xorlw	128
 16666  01093E  6E01               	movwf	btemp^0,c
 16667  010940  0EF9               	movlw	-7
 16668  010942  50E3               	movf	plusw1,w,c
 16669  010944  0A80               	xorlw	128
 16670  010946  5801               	subwfb	btemp^0,w,c
 16671  010948  A0D8               	btfss	status,0,c
 16672  01094A  D717               	goto	l11943
 16673                           
 16674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 16675  01094C  0E00               	movlw	0
 16676  01094E  6EE6               	movwf	postinc1,c
 16677  010950  0E00               	movlw	0
 16678  010952  6EE6               	movwf	postinc1,c
 16679  010954  0EA0               	movlw	160
 16680  010956  6EE6               	movwf	postinc1,c
 16681  010958  0E40               	movlw	64
 16682  01095A  6EE6               	movwf	postinc1,c
 16683                           
 16684                           ;stkvar	_u @ sp[(-60)+12]
 16685  01095C  0ED0               	movlw	-48
 16686  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 16687  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 16688  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 16689  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 16690  010976  EC9F  F099         	call	___flmul	;wreg free
 16691                           
 16692                           ;stkvar	_l @ sp[(-56)+20]
 16693  01097A  0EDC               	movlw	-36
 16694  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 16695  010982  0EDD               	movlw	-35
 16696  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16697  01098A  0EDE               	movlw	-34
 16698  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16699  010992  0EDF               	movlw	-33
 16700  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 16701                           
 16702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 16703                           ;stkvar	_l @ sp[(-56)+20]
 16704  01099A  0EDC               	movlw	-36
 16705  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 16706  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16707  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16708  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16709                           
 16710                           ;stkvar	_h @ sp[(-60)+24]
 16711  0109B4  0EDC               	movlw	-36
 16712  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 16713  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 16714  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 16715  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16716  0109CE  EC3A  F0C7         	call	___flge	;wreg free
 16717  0109D2  A001               	btfss	btemp& (0+255),0,c
 16718  0109D4  D021               	goto	u11310
 16719                           
 16720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 16721                           ;stkvar	_l @ sp[(-56)+20]
 16722                           
 16723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 16724                           
 16725                           ;stkvar	_l @ sp[(-56)+20]
 16726                           
 16727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 16728  0109D6  0EDC               	movlw	-36
 16729  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 16730  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 16731  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 16732  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 16733                           
 16734                           ;stkvar	_h @ sp[(-60)+24]
 16735  0109F0  0EDC               	movlw	-36
 16736  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 16737  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 16738  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 16739  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 16740  010A0A  EC75  F0D1         	call	___fleq	;wreg free
 16741  010A0E  A001               	btfss	btemp& (0+255),0,c
 16742  010A10  D01B               	goto	l11967
 16743                           
 16744                           ;stkvar	_d @ sp[(-56)+44]
 16745  010A12  0EF4               	movlw	-12
 16746  010A14  B0E3               	btfsc	plusw1,0,c
 16747  010A16  D018               	goto	l11967
 16748  010A18                     u11310:
 16749                           
 16750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 16751  010A18  0E00               	movlw	0
 16752  010A1A  6E09               	movwf	(btemp+8)^0,c
 16753  010A1C  0E00               	movlw	0
 16754  010A1E  6E0A               	movwf	(btemp+9)^0,c
 16755  010A20  0E00               	movlw	0
 16756  010A22  6E0B               	movwf	(btemp+10)^0,c
 16757  010A24  0E00               	movlw	0
 16758  010A26  6E0C               	movwf	(btemp+11)^0,c
 16759                           
 16760                           ;stkvar	_l @ sp[(-56)+20]
 16761  010A28  0EDC               	movlw	-36
 16762  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16763  010A30  0EDD               	movlw	-35
 16764  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16765  010A38  0EDE               	movlw	-34
 16766  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16767  010A40  0EDF               	movlw	-33
 16768  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 16769  010A48                     l11967:
 16770                           
 16771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 16772                           ;stkvar	_l @ sp[(-56)+20]
 16773  010A48  0EDC               	movlw	-36
 16774  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 16775  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 16776  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 16777  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16778                           
 16779                           ;stkvar	_g @ sp[(-60)+16]
 16780  010A62  0ED4               	movlw	-44
 16781  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 16782  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 16783  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 16784  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 16785  010A7C  ECB4  F09D         	call	___fladd	;wreg free
 16786                           
 16787                           ;stkvar	_h @ sp[(-56)+24]
 16788  010A80  0EE0               	movlw	-32
 16789  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 16790  010A88  0EE1               	movlw	-31
 16791  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16792  010A90  0EE2               	movlw	-30
 16793  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16794  010A98  0EE3               	movlw	-29
 16795  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 16796                           
 16797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 16798                           ;stkvar	_ou @ sp[(-56)+28]
 16799  010AA0  0EE4               	movlw	-28
 16800  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 16801  010AA8  0EE5               	movlw	-27
 16802  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 16803  010AB0  0EE6               	movlw	-26
 16804  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 16805  010AB8  0EE7               	movlw	-25
 16806  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 16807                           
 16808                           ;stkvar	_u @ sp[(-56)+12]
 16809  010AC0  0ED4               	movlw	-44
 16810  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 16811  010AC8  0ED5               	movlw	-43
 16812  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16813  010AD0  0ED6               	movlw	-42
 16814  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16815  010AD8  0ED7               	movlw	-41
 16816  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16817                           
 16818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 16819                           ;stkvar	_nmode @ sp[(-56)+55]
 16820  010AE0  0EFF               	movlw	-1
 16821  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 16822  010AE8  0E65               	movlw	101
 16823  010AEA  1801               	xorwf	btemp^0,w,c
 16824  010AEC  B4D8               	btfsc	status,2,c
 16825  010AEE  D011               	goto	l11975
 16826                           
 16827                           ;stkvar	_e @ sp[(-56)+34]
 16828                           ;stkvar	_ne @ sp[(-56)+46]
 16829  010AF0  0EEA               	movlw	-22
 16830  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 16831  010AF8  0EF6               	movlw	-10
 16832  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 16833  010B00  0EEB               	movlw	-21
 16834  010B02  006F FF8C  F001    	movff	plusw1,btemp
 16835  010B08  0EF7               	movlw	-9
 16836  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 16837  010B10  D004               	goto	l2243
 16838  010B12                     l11975:
 16839                           
 16840                           ;stkvar	_ne @ sp[(-56)+46]
 16841  010B12  0EF6               	movlw	-10
 16842  010B14  6AE3               	clrf	plusw1,c
 16843  010B16  0EF7               	movlw	-9
 16844  010B18  6AE3               	clrf	plusw1,c
 16845  010B1A                     l2243:
 16846                           
 16847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 16848                           ;stkvar	_pp @ sp[(-56)+50]
 16849  010B1A  0EFA               	movlw	-6
 16850  010B1C  6AE3               	clrf	plusw1,c
 16851  010B1E  0EFB               	movlw	-5
 16852  010B20  6AE3               	clrf	plusw1,c
 16853                           
 16854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 16855                           ;stkvar	_t @ sp[(-56)+52]
 16856  010B22  0EFC               	movlw	-4
 16857  010B24  6AE3               	clrf	plusw1,c
 16858  010B26  0EFD               	movlw	-3
 16859  010B28  6AE3               	clrf	plusw1,c
 16860                           
 16861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 16862                           ;stkvar	_i @ sp[(-56)+36]
 16863  010B2A  0EEC               	movlw	-20
 16864  010B2C  6AE3               	clrf	plusw1,c
 16865  010B2E  0EED               	movlw	-19
 16866  010B30  6AE3               	clrf	plusw1,c
 16867                           
 16868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16869  010B32  D1B7               	goto	l12027
 16870  010B34                     l11977:
 16871                           
 16872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 16873                           ;stkvar	_u @ sp[(-56)+12]
 16874  010B34  0ED4               	movlw	-44
 16875  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 16876  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16877  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 16878  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 16879                           
 16880                           ;stkvar	_h @ sp[(-60)+24]
 16881  010B4E  0EDC               	movlw	-36
 16882  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 16883  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 16884  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16885  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 16886  010B68  EC50  F0A5         	call	___fldiv	;wreg free
 16887  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 16888  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16889  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16890  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 16891  010B84  ECA6  F0B0         	call	_floorf	;wreg free
 16892                           
 16893                           ;stkvar	_l @ sp[(-56)+20]
 16894  010B88  0EDC               	movlw	-36
 16895  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 16896  010B90  0EDD               	movlw	-35
 16897  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16898  010B98  0EDE               	movlw	-34
 16899  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16900  010BA0  0EDF               	movlw	-33
 16901  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 16902                           
 16903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 16904                           ;stkvar	_l @ sp[(-56)+20]
 16905  010BA8  0EDC               	movlw	-36
 16906  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 16907  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 16908  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 16909  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 16910  010BC2  EC81  F0C6         	call	___fltol	;wreg free
 16911  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 16912  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 16913                           
 16914                           ;stkvar	_d @ sp[(-56)+44]
 16915  010BD2  0EF4               	movlw	-12
 16916  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16917  010BDA  0EF5               	movlw	-11
 16918  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16919                           
 16920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 16921  010BE2  B83E               	btfsc	_flags^0,4,c
 16922  010BE4  D026               	goto	l11991
 16923                           
 16924                           ;stkvar	_d @ sp[(-56)+44]
 16925  010BE6  0EF4               	movlw	-12
 16926  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 16927  010BEE  0EF5               	movlw	-11
 16928  010BF0  50E3               	movf	plusw1,w,c
 16929  010BF2  1001               	iorwf	btemp^0,w,c
 16930  010BF4  A4D8               	btfss	status,2,c
 16931  010BF6  D01D               	goto	l11991
 16932                           
 16933                           ;stkvar	_mode @ sp[(-56)+54]
 16934  010BF8  0EFE               	movlw	-2
 16935  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 16936  010C00  0E67               	movlw	103
 16937  010C02  1801               	xorwf	btemp^0,w,c
 16938  010C04  A4D8               	btfss	status,2,c
 16939  010C06  D015               	goto	l11991
 16940                           
 16941                           ;stkvar	_ne @ sp[(-56)+46]
 16942  010C08  0EF7               	movlw	-9
 16943  010C0A  AEE3               	btfss	plusw1,7,c
 16944  010C0C  D012               	goto	l11991
 16945                           
 16946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 16947                           ;stkvar	_t @ sp[(-56)+52]
 16948  010C0E  0EFC               	movlw	-4
 16949  010C10  50E3               	movf	plusw1,w,c
 16950  010C12  0F01               	addlw	1
 16951  010C14  6E01               	movwf	btemp^0,c
 16952  010C16  0EFC               	movlw	-4
 16953  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 16954  010C1E  6A01               	clrf	btemp^0,c
 16955  010C20  0EFD               	movlw	-3
 16956  010C22  50E3               	movf	plusw1,w,c
 16957  010C24  2001               	addwfc	btemp^0,w,c
 16958  010C26  6E01               	movwf	btemp^0,c
 16959  010C28  0EFD               	movlw	-3
 16960  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 16961                           
 16962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 16963  010C30  D0AF               	goto	l12019
 16964  010C32                     l11991:
 16965                           
 16966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 16967                           ;stkvar	_pp @ sp[(-56)+50]
 16968  010C32  0EFA               	movlw	-6
 16969  010C34  006F FF8C  F001    	movff	plusw1,btemp
 16970  010C3A  0EFB               	movlw	-5
 16971  010C3C  50E3               	movf	plusw1,w,c
 16972  010C3E  1001               	iorwf	btemp^0,w,c
 16973  010C40  A4D8               	btfss	status,2,c
 16974  010C42  D070               	goto	l12011
 16975                           
 16976                           ;stkvar	_ne @ sp[(-56)+46]
 16977  010C44  0EF7               	movlw	-9
 16978  010C46  AEE3               	btfss	plusw1,7,c
 16979  010C48  D06D               	goto	l12011
 16980                           
 16981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 16982                           ;stkvar	_n @ sp[(-56)+32]
 16983  010C4A  0EE8               	movlw	-24
 16984  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 16985  010C52  0EE9               	movlw	-23
 16986  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 16987  010C5A  0E76               	movlw	low _dbuf
 16988  010C5C  240B               	addwf	(btemp+10)^0,w,c
 16989  010C5E  6ED9               	movwf	fsr2l,c
 16990  010C60  0E02               	movlw	high _dbuf
 16991  010C62  200C               	addwfc	(btemp+11)^0,w,c
 16992  010C64  6EDA               	movwf	fsr2h,c
 16993  010C66  0E2E               	movlw	46
 16994  010C68  6EDF               	movwf	indf2,c
 16995                           
 16996                           ;stkvar	_n @ sp[(-56)+32]
 16997  010C6A  0EE8               	movlw	-24
 16998  010C6C  50E3               	movf	plusw1,w,c
 16999  010C6E  0F01               	addlw	1
 17000  010C70  6E01               	movwf	btemp^0,c
 17001  010C72  0EE8               	movlw	-24
 17002  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 17003  010C7A  6A01               	clrf	btemp^0,c
 17004  010C7C  0EE9               	movlw	-23
 17005  010C7E  50E3               	movf	plusw1,w,c
 17006  010C80  2001               	addwfc	btemp^0,w,c
 17007  010C82  6E01               	movwf	btemp^0,c
 17008  010C84  0EE9               	movlw	-23
 17009  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 17010                           
 17011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 17012                           ;stkvar	_w @ sp[(-56)+38]
 17013  010C8C  50E1               	movf	fsr1l,w,c
 17014  010C8E  0FEE               	addlw	-18
 17015  010C90  6ED9               	movwf	fsr2l,c
 17016  010C92  50E2               	movf	fsr1h,w,c
 17017  010C94  6EDA               	movwf	fsr2h,c
 17018  010C96  0EFF               	movlw	255
 17019  010C98  22DA               	addwfc	fsr2h,f,c
 17020  010C9A  06DE               	decf	postinc2,f,c
 17021  010C9C  0E00               	movlw	0
 17022  010C9E  5ADD               	subwfb	postdec2,f,c
 17023                           
 17024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 17025  010CA0  0E01               	movlw	1
 17026  010CA2  6E0B               	movwf	(btemp+10)^0,c
 17027  010CA4  0E00               	movlw	0
 17028  010CA6  6E0C               	movwf	(btemp+11)^0,c
 17029                           
 17030                           ;stkvar	_pp @ sp[(-56)+50]
 17031  010CA8  0EFA               	movlw	-6
 17032  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17033  010CB0  0EFB               	movlw	-5
 17034  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 17035  010CB8  D035               	goto	l12011
 17036  010CBA                     l12003:
 17037                           
 17038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 17039                           ;stkvar	_n @ sp[(-56)+32]
 17040  010CBA  0EE8               	movlw	-24
 17041  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17042  010CC2  0EE9               	movlw	-23
 17043  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17044  010CCA  0E76               	movlw	low _dbuf
 17045  010CCC  240B               	addwf	(btemp+10)^0,w,c
 17046  010CCE  6ED9               	movwf	fsr2l,c
 17047  010CD0  0E02               	movlw	high _dbuf
 17048  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 17049  010CD4  6EDA               	movwf	fsr2h,c
 17050  010CD6  0E30               	movlw	48
 17051  010CD8  6EDF               	movwf	indf2,c
 17052                           
 17053                           ;stkvar	_n @ sp[(-56)+32]
 17054  010CDA  0EE8               	movlw	-24
 17055  010CDC  50E3               	movf	plusw1,w,c
 17056  010CDE  0F01               	addlw	1
 17057  010CE0  6E01               	movwf	btemp^0,c
 17058  010CE2  0EE8               	movlw	-24
 17059  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 17060  010CEA  6A01               	clrf	btemp^0,c
 17061  010CEC  0EE9               	movlw	-23
 17062  010CEE  50E3               	movf	plusw1,w,c
 17063  010CF0  2001               	addwfc	btemp^0,w,c
 17064  010CF2  6E01               	movwf	btemp^0,c
 17065  010CF4  0EE9               	movlw	-23
 17066  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 17067                           
 17068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 17069                           ;stkvar	_w @ sp[(-56)+38]
 17070  010CFC  50E1               	movf	fsr1l,w,c
 17071  010CFE  0FEE               	addlw	-18
 17072  010D00  6ED9               	movwf	fsr2l,c
 17073  010D02  50E2               	movf	fsr1h,w,c
 17074  010D04  6EDA               	movwf	fsr2h,c
 17075  010D06  0EFF               	movlw	255
 17076  010D08  22DA               	addwfc	fsr2h,f,c
 17077  010D0A  06DE               	decf	postinc2,f,c
 17078  010D0C  0E00               	movlw	0
 17079  010D0E  5ADD               	subwfb	postdec2,f,c
 17080                           
 17081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 17082                           ;stkvar	_t @ sp[(-56)+52]
 17083  010D10  50E1               	movf	fsr1l,w,c
 17084  010D12  0FFC               	addlw	-4
 17085  010D14  6ED9               	movwf	fsr2l,c
 17086  010D16  50E2               	movf	fsr1h,w,c
 17087  010D18  6EDA               	movwf	fsr2h,c
 17088  010D1A  0EFF               	movlw	255
 17089  010D1C  22DA               	addwfc	fsr2h,f,c
 17090  010D1E  06DE               	decf	postinc2,f,c
 17091  010D20  0E00               	movlw	0
 17092  010D22  5ADD               	subwfb	postdec2,f,c
 17093  010D24                     l12011:
 17094                           
 17095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 17096                           ;stkvar	_t @ sp[(-56)+52]
 17097  010D24  0EFC               	movlw	-4
 17098  010D26  006F FF8C  F001    	movff	plusw1,btemp
 17099  010D2C  0EFD               	movlw	-3
 17100  010D2E  50E3               	movf	plusw1,w,c
 17101  010D30  1001               	iorwf	btemp^0,w,c
 17102  010D32  A4D8               	btfss	status,2,c
 17103  010D34  D7C2               	goto	l12003
 17104                           
 17105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 17106                           ;stkvar	_n @ sp[(-56)+32]
 17107  010D36  0EE8               	movlw	-24
 17108  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 17109  010D3E  0EE9               	movlw	-23
 17110  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 17111  010D46  0E76               	movlw	low _dbuf
 17112  010D48  240B               	addwf	(btemp+10)^0,w,c
 17113  010D4A  6ED9               	movwf	fsr2l,c
 17114  010D4C  0E02               	movlw	high _dbuf
 17115  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 17116  010D50  6EDA               	movwf	fsr2h,c
 17117                           
 17118                           ;stkvar	_d @ sp[(-56)+44]
 17119  010D52  0EF4               	movlw	-12
 17120  010D54  50E3               	movf	plusw1,w,c
 17121  010D56  0F30               	addlw	48
 17122  010D58  6EDF               	movwf	indf2,c
 17123                           
 17124                           ;stkvar	_n @ sp[(-56)+32]
 17125  010D5A  0EE8               	movlw	-24
 17126  010D5C  50E3               	movf	plusw1,w,c
 17127  010D5E  0F01               	addlw	1
 17128  010D60  6E01               	movwf	btemp^0,c
 17129  010D62  0EE8               	movlw	-24
 17130  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 17131  010D6A  6A01               	clrf	btemp^0,c
 17132  010D6C  0EE9               	movlw	-23
 17133  010D6E  50E3               	movf	plusw1,w,c
 17134  010D70  2001               	addwfc	btemp^0,w,c
 17135  010D72  6E01               	movwf	btemp^0,c
 17136  010D74  0EE9               	movlw	-23
 17137  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 17138                           
 17139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 17140                           ;stkvar	_w @ sp[(-56)+38]
 17141  010D7C  50E1               	movf	fsr1l,w,c
 17142  010D7E  0FEE               	addlw	-18
 17143  010D80  6ED9               	movwf	fsr2l,c
 17144  010D82  50E2               	movf	fsr1h,w,c
 17145  010D84  6EDA               	movwf	fsr2h,c
 17146  010D86  0EFF               	movlw	255
 17147  010D88  22DA               	addwfc	fsr2h,f,c
 17148  010D8A  06DE               	decf	postinc2,f,c
 17149  010D8C  0E00               	movlw	0
 17150  010D8E  5ADD               	subwfb	postdec2,f,c
 17151  010D90                     l12019:
 17152                           
 17153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 17154                           ;stkvar	_u @ sp[(-56)+12]
 17155  010D90  0ED4               	movlw	-44
 17156  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 17157  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 17158  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 17159  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 17160                           
 17161                           ;stkvar	_l @ sp[(-60)+20]
 17162  010DAA  0ED8               	movlw	-40
 17163  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 17164  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 17165  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 17166  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 17167  010DC4  EC9F  F099         	call	___flmul	;wreg free
 17168  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 17169  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17170  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17171  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 17172                           
 17173                           ;stkvar	_h @ sp[(-60)+24]
 17174  010DE0  0EDC               	movlw	-36
 17175  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 17176  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 17177  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 17178  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 17179  010DFA  ECC1  F0D9         	call	___flsub	;wreg free
 17180                           
 17181                           ;stkvar	_h @ sp[(-56)+24]
 17182  010DFE  0EE0               	movlw	-32
 17183  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 17184  010E06  0EE1               	movlw	-31
 17185  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17186  010E0E  0EE2               	movlw	-30
 17187  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17188  010E16  0EE3               	movlw	-29
 17189  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 17190                           
 17191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 17192  010E1E  0E00               	movlw	0
 17193  010E20  6EE6               	movwf	postinc1,c
 17194  010E22  0E00               	movlw	0
 17195  010E24  6EE6               	movwf	postinc1,c
 17196  010E26  0E20               	movlw	32
 17197  010E28  6EE6               	movwf	postinc1,c
 17198  010E2A  0E41               	movlw	65
 17199  010E2C  6EE6               	movwf	postinc1,c
 17200                           
 17201                           ;stkvar	_u @ sp[(-60)+12]
 17202  010E2E  0ED0               	movlw	-48
 17203  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 17204  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 17205  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 17206  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 17207  010E48  EC50  F0A5         	call	___fldiv	;wreg free
 17208                           
 17209                           ;stkvar	_u @ sp[(-56)+12]
 17210  010E4C  0ED4               	movlw	-44
 17211  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 17212  010E54  0ED5               	movlw	-43
 17213  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17214  010E5C  0ED6               	movlw	-42
 17215  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17216  010E64  0ED7               	movlw	-41
 17217  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 17218                           
 17219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 17220                           ;stkvar	_ne @ sp[(-56)+46]
 17221  010E6C  50E1               	movf	fsr1l,w,c
 17222  010E6E  0FF6               	addlw	-10
 17223  010E70  6ED9               	movwf	fsr2l,c
 17224  010E72  50E2               	movf	fsr1h,w,c
 17225  010E74  6EDA               	movwf	fsr2h,c
 17226  010E76  0EFF               	movlw	255
 17227  010E78  22DA               	addwfc	fsr2h,f,c
 17228  010E7A  06DE               	decf	postinc2,f,c
 17229  010E7C  0E00               	movlw	0
 17230  010E7E  5ADD               	subwfb	postdec2,f,c
 17231                           
 17232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 17233                           ;stkvar	_i @ sp[(-56)+36]
 17234  010E80  0EEC               	movlw	-20
 17235  010E82  50E3               	movf	plusw1,w,c
 17236  010E84  0F01               	addlw	1
 17237  010E86  6E01               	movwf	btemp^0,c
 17238  010E88  0EEC               	movlw	-20
 17239  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 17240  010E90  6A01               	clrf	btemp^0,c
 17241  010E92  0EED               	movlw	-19
 17242  010E94  50E3               	movf	plusw1,w,c
 17243  010E96  2001               	addwfc	btemp^0,w,c
 17244  010E98  6E01               	movwf	btemp^0,c
 17245  010E9A  0EED               	movlw	-19
 17246  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 17247  010EA2                     l12027:
 17248                           
 17249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 17250                           ;stkvar	_m @ sp[(-56)+48]
 17251                           ;stkvar	_i @ sp[(-56)+36]
 17252  010EA2  50E1               	movf	fsr1l,w,c
 17253  010EA4  0FEC               	addlw	-20
 17254  010EA6  6ED9               	movwf	fsr2l,c
 17255  010EA8  50E2               	movf	fsr1h,w,c
 17256  010EAA  6EDA               	movwf	fsr2h,c
 17257  010EAC  0EFF               	movlw	255
 17258  010EAE  22DA               	addwfc	fsr2h,f,c
 17259  010EB0  0EF8               	movlw	-8
 17260  010EB2  50E3               	movf	plusw1,w,c
 17261  010EB4  5CDE               	subwf	postinc2,w,c
 17262  010EB6  50DE               	movf	postinc2,w,c
 17263  010EB8  0A80               	xorlw	128
 17264  010EBA  6E01               	movwf	btemp^0,c
 17265  010EBC  0EF9               	movlw	-7
 17266  010EBE  50E3               	movf	plusw1,w,c
 17267  010EC0  0A80               	xorlw	128
 17268  010EC2  5801               	subwfb	btemp^0,w,c
 17269  010EC4  B0D8               	btfsc	status,0,c
 17270  010EC6  D00E               	goto	u11410
 17271                           
 17272                           ;stkvar	_n @ sp[(-56)+32]
 17273  010EC8  0EE9               	movlw	-23
 17274  010ECA  BEE3               	btfsc	plusw1,7,c
 17275  010ECC  D633               	goto	l11977
 17276  010ECE  0EE9               	movlw	-23
 17277  010ED0  50E3               	movf	plusw1,w,c
 17278  010ED2  E108               	bnz	u11410
 17279  010ED4  0EE8               	movlw	-24
 17280  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 17281  010EDC  0E4B               	movlw	75
 17282  010EDE  5E01               	subwf	btemp^0,f,c
 17283  010EE0  A0D8               	btfss	status,0,c
 17284  010EE2  D628               	goto	l11977
 17285  010EE4                     u11410:
 17286                           
 17287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 17288                           ;stkvar	_pp @ sp[(-56)+50]
 17289  010EE4  0EFA               	movlw	-6
 17290  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 17291  010EEC  0EFB               	movlw	-5
 17292  010EEE  50E3               	movf	plusw1,w,c
 17293  010EF0  1001               	iorwf	btemp^0,w,c
 17294  010EF2  B4D8               	btfsc	status,2,c
 17295  010EF4  A83E               	btfss	_flags^0,4,c
 17296  010EF6  D021               	goto	l12039
 17297                           
 17298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 17299                           ;stkvar	_n @ sp[(-56)+32]
 17300  010EF8  0EE8               	movlw	-24
 17301  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 17302  010F00  0EE9               	movlw	-23
 17303  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 17304  010F08  0E76               	movlw	low _dbuf
 17305  010F0A  240B               	addwf	(btemp+10)^0,w,c
 17306  010F0C  6ED9               	movwf	fsr2l,c
 17307  010F0E  0E02               	movlw	high _dbuf
 17308  010F10  200C               	addwfc	(btemp+11)^0,w,c
 17309  010F12  6EDA               	movwf	fsr2h,c
 17310  010F14  0E2E               	movlw	46
 17311  010F16  6EDF               	movwf	indf2,c
 17312                           
 17313                           ;stkvar	_n @ sp[(-56)+32]
 17314  010F18  0EE8               	movlw	-24
 17315  010F1A  50E3               	movf	plusw1,w,c
 17316  010F1C  0F01               	addlw	1
 17317  010F1E  6E01               	movwf	btemp^0,c
 17318  010F20  0EE8               	movlw	-24
 17319  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 17320  010F28  6A01               	clrf	btemp^0,c
 17321  010F2A  0EE9               	movlw	-23
 17322  010F2C  50E3               	movf	plusw1,w,c
 17323  010F2E  2001               	addwfc	btemp^0,w,c
 17324  010F30  6E01               	movwf	btemp^0,c
 17325  010F32  0EE9               	movlw	-23
 17326  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 17327  010F3A                     l12039:
 17328                           
 17329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 17330                           ;stkvar	_n @ sp[(-56)+32]
 17331  010F3A  0EE8               	movlw	-24
 17332  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17333  010F42  0EE9               	movlw	-23
 17334  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 17335  010F4A  0E76               	movlw	low _dbuf
 17336  010F4C  240B               	addwf	(btemp+10)^0,w,c
 17337  010F4E  6ED9               	movwf	fsr2l,c
 17338  010F50  0E02               	movlw	high _dbuf
 17339  010F52  200C               	addwfc	(btemp+11)^0,w,c
 17340  010F54  6EDA               	movwf	fsr2h,c
 17341  010F56  0E00               	movlw	0
 17342  010F58  6EDF               	movwf	indf2,c
 17343                           
 17344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 17345                           ;stkvar	_nmode @ sp[(-56)+55]
 17346  010F5A  0EFF               	movlw	-1
 17347  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 17348  010F62  0E65               	movlw	101
 17349  010F64  1801               	xorwf	btemp^0,w,c
 17350  010F66  A4D8               	btfss	status,2,c
 17351  010F68  EF16  F081         	goto	l11843
 17352                           
 17353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 17354  010F6C  0E4F               	movlw	79
 17355  010F6E  6E0B               	movwf	(btemp+10)^0,c
 17356  010F70  0E00               	movlw	0
 17357  010F72  6E0C               	movwf	(btemp+11)^0,c
 17358                           
 17359                           ;stkvar	_i @ sp[(-56)+36]
 17360  010F74  0EEC               	movlw	-20
 17361  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17362  010F7C  0EED               	movlw	-19
 17363  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17364                           
 17365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 17366                           ;stkvar	_i @ sp[(-56)+36]
 17367  010F84  0EEC               	movlw	-20
 17368  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 17369  010F8C  0EED               	movlw	-19
 17370  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17371  010F94  0E76               	movlw	low _dbuf
 17372  010F96  240B               	addwf	(btemp+10)^0,w,c
 17373  010F98  6ED9               	movwf	fsr2l,c
 17374  010F9A  0E02               	movlw	high _dbuf
 17375  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 17376  010F9E  6EDA               	movwf	fsr2h,c
 17377  010FA0  0E00               	movlw	0
 17378  010FA2  6EDF               	movwf	indf2,c
 17379                           
 17380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 17381                           ;stkvar	_sign @ sp[(-56)+42]
 17382  010FA4  0EF2               	movlw	-14
 17383  010FA6  6AE3               	clrf	plusw1,c
 17384  010FA8  0EF3               	movlw	-13
 17385  010FAA  6AE3               	clrf	plusw1,c
 17386                           
 17387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 17388                           ;stkvar	_e @ sp[(-56)+34]
 17389  010FAC  0EEB               	movlw	-21
 17390  010FAE  AEE3               	btfss	plusw1,7,c
 17391  010FB0  D012               	goto	l12053
 17392                           
 17393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 17394  010FB2  0E01               	movlw	1
 17395  010FB4  6E0B               	movwf	(btemp+10)^0,c
 17396  010FB6  0E00               	movlw	0
 17397  010FB8  6E0C               	movwf	(btemp+11)^0,c
 17398                           
 17399                           ;stkvar	_sign @ sp[(-56)+42]
 17400  010FBA  0EF2               	movlw	-14
 17401  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17402  010FC2  0EF3               	movlw	-13
 17403  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17404                           
 17405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 17406                           ;stkvar	_e @ sp[(-56)+34]
 17407                           ;stkvar	_e @ sp[(-56)+34]
 17408  010FCA  0EEA               	movlw	-22
 17409  010FCC  6CE3               	negf	plusw1,c
 17410  010FCE  0EEB               	movlw	-21
 17411  010FD0  1EE3               	comf	plusw1,f,c
 17412  010FD2  B0D8               	btfsc	status,0,c
 17413  010FD4  2AE3               	incf	plusw1,f,c
 17414  010FD6                     l12053:
 17415                           
 17416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 17417  010FD6  0E02               	movlw	2
 17418  010FD8  6E0B               	movwf	(btemp+10)^0,c
 17419  010FDA  0E00               	movlw	0
 17420  010FDC  6E0C               	movwf	(btemp+11)^0,c
 17421                           
 17422                           ;stkvar	_p @ sp[(-56)+40]
 17423  010FDE  0EF0               	movlw	-16
 17424  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17425  010FE6  0EF1               	movlw	-15
 17426  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 17427                           
 17428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17429  010FEE  D051               	goto	l12065
 17430  010FF0                     l12055:
 17431                           
 17432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 17433                           ;stkvar	_i @ sp[(-56)+36]
 17434  010FF0  50E1               	movf	fsr1l,w,c
 17435  010FF2  0FEC               	addlw	-20
 17436  010FF4  6ED9               	movwf	fsr2l,c
 17437  010FF6  50E2               	movf	fsr1h,w,c
 17438  010FF8  6EDA               	movwf	fsr2h,c
 17439  010FFA  0EFF               	movlw	255
 17440  010FFC  22DA               	addwfc	fsr2h,f,c
 17441  010FFE  06DE               	decf	postinc2,f,c
 17442  011000  0E00               	movlw	0
 17443  011002  5ADD               	subwfb	postdec2,f,c
 17444                           
 17445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 17446                           ;stkvar	_i @ sp[(-56)+36]
 17447  011004  0EEC               	movlw	-20
 17448  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 17449  01100C  0EED               	movlw	-19
 17450  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17451  011014  0E76               	movlw	low _dbuf
 17452  011016  240B               	addwf	(btemp+10)^0,w,c
 17453  011018  6ED9               	movwf	fsr2l,c
 17454  01101A  0E02               	movlw	high _dbuf
 17455  01101C  200C               	addwfc	(btemp+11)^0,w,c
 17456  01101E  6EDA               	movwf	fsr2h,c
 17457  011020  0E0A               	movlw	10
 17458  011022  6EE6               	movwf	postinc1,c
 17459  011024  0E00               	movlw	0
 17460  011026  6EE6               	movwf	postinc1,c
 17461                           
 17462                           ;stkvar	_e @ sp[(-58)+34]
 17463  011028  0EE8               	movlw	-24
 17464  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 17465  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 17466  011036  EC3A  F0CC         	call	___awmod	;wreg free
 17467  01103A  5001               	movf	btemp^0,w,c
 17468  01103C  0F30               	addlw	48
 17469  01103E  6EDF               	movwf	indf2,c
 17470                           
 17471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 17472  011040  0E0A               	movlw	10
 17473  011042  6EE6               	movwf	postinc1,c
 17474  011044  0E00               	movlw	0
 17475  011046  6EE6               	movwf	postinc1,c
 17476                           
 17477                           ;stkvar	_e @ sp[(-58)+34]
 17478  011048  0EE8               	movlw	-24
 17479  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 17480  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 17481  011056  EC9D  F0C8         	call	___awdiv	;wreg free
 17482                           
 17483                           ;stkvar	_e @ sp[(-56)+34]
 17484  01105A  0EEA               	movlw	-22
 17485  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 17486  011062  0EEB               	movlw	-21
 17487  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17488                           
 17489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 17490                           ;stkvar	_p @ sp[(-56)+40]
 17491  01106A  50E1               	movf	fsr1l,w,c
 17492  01106C  0FF0               	addlw	-16
 17493  01106E  6ED9               	movwf	fsr2l,c
 17494  011070  50E2               	movf	fsr1h,w,c
 17495  011072  6EDA               	movwf	fsr2h,c
 17496  011074  0EFF               	movlw	255
 17497  011076  22DA               	addwfc	fsr2h,f,c
 17498  011078  06DE               	decf	postinc2,f,c
 17499  01107A  0E00               	movlw	0
 17500  01107C  5ADD               	subwfb	postdec2,f,c
 17501                           
 17502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 17503                           ;stkvar	_w @ sp[(-56)+38]
 17504  01107E  50E1               	movf	fsr1l,w,c
 17505  011080  0FEE               	addlw	-18
 17506  011082  6ED9               	movwf	fsr2l,c
 17507  011084  50E2               	movf	fsr1h,w,c
 17508  011086  6EDA               	movwf	fsr2h,c
 17509  011088  0EFF               	movlw	255
 17510  01108A  22DA               	addwfc	fsr2h,f,c
 17511  01108C  06DE               	decf	postinc2,f,c
 17512  01108E  0E00               	movlw	0
 17513  011090  5ADD               	subwfb	postdec2,f,c
 17514  011092                     l12065:
 17515                           
 17516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17517                           ;stkvar	_e @ sp[(-56)+34]
 17518  011092  0EEA               	movlw	-22
 17519  011094  006F FF8C  F001    	movff	plusw1,btemp
 17520  01109A  0EEB               	movlw	-21
 17521  01109C  50E3               	movf	plusw1,w,c
 17522  01109E  1001               	iorwf	btemp^0,w,c
 17523  0110A0  A4D8               	btfss	status,2,c
 17524  0110A2  D7A6               	goto	l12055
 17525                           
 17526                           ;stkvar	_p @ sp[(-56)+40]
 17527  0110A4  0EF1               	movlw	-15
 17528  0110A6  BEE3               	btfsc	plusw1,7,c
 17529  0110A8  D007               	goto	u11470
 17530  0110AA  0EF1               	movlw	-15
 17531  0110AC  50E3               	movf	plusw1,w,c
 17532  0110AE  E1A0               	bnz	l12055
 17533  0110B0  0EF0               	movlw	-16
 17534  0110B2  04E3               	decf	plusw1,w,c
 17535  0110B4  B0D8               	btfsc	status,0,c
 17536  0110B6  D79C               	goto	l12055
 17537  0110B8                     u11470:
 17538                           
 17539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 17540                           ;stkvar	_i @ sp[(-56)+36]
 17541  0110B8  50E1               	movf	fsr1l,w,c
 17542  0110BA  0FEC               	addlw	-20
 17543  0110BC  6ED9               	movwf	fsr2l,c
 17544  0110BE  50E2               	movf	fsr1h,w,c
 17545  0110C0  6EDA               	movwf	fsr2h,c
 17546  0110C2  0EFF               	movlw	255
 17547  0110C4  22DA               	addwfc	fsr2h,f,c
 17548  0110C6  06DE               	decf	postinc2,f,c
 17549  0110C8  0E00               	movlw	0
 17550  0110CA  5ADD               	subwfb	postdec2,f,c
 17551                           
 17552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 17553                           ;stkvar	_sign @ sp[(-56)+42]
 17554  0110CC  0EF2               	movlw	-14
 17555  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 17556  0110D4  0EF3               	movlw	-13
 17557  0110D6  50E3               	movf	plusw1,w,c
 17558  0110D8  1001               	iorwf	btemp^0,w,c
 17559  0110DA  A4D8               	btfss	status,2,c
 17560  0110DC  D002               	goto	l12075
 17561  0110DE  0E2B               	movlw	43
 17562  0110E0  D001               	goto	L18
 17563  0110E2                     l12075:
 17564  0110E2  0E2D               	movlw	45
 17565  0110E4                     L18:
 17566  0110E4  6E0B               	movwf	(btemp+10)^0,c
 17567  0110E6  0E00               	movlw	0
 17568  0110E8  6E0C               	movwf	(btemp+11)^0,c
 17569                           
 17570                           ;stkvar	_efgtoa$5501 @ sp[(-56)+4]
 17571  0110EA  0ECC               	movlw	-52
 17572  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17573  0110F2  0ECD               	movlw	-51
 17574  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17575                           
 17576                           ;stkvar	_efgtoa$5501 @ sp[(-56)+4]
 17577                           ;stkvar	_i @ sp[(-56)+36]
 17578  0110FA  0EEC               	movlw	-20
 17579  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17580  011102  0EED               	movlw	-19
 17581  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 17582  01110A  0E76               	movlw	low _dbuf
 17583  01110C  240B               	addwf	(btemp+10)^0,w,c
 17584  01110E  6ED9               	movwf	fsr2l,c
 17585  011110  0E02               	movlw	high _dbuf
 17586  011112  200C               	addwfc	(btemp+11)^0,w,c
 17587  011114  6EDA               	movwf	fsr2h,c
 17588  011116  0ECC               	movlw	-52
 17589  011118  006F FF8F FFDF     	movff	plusw1,indf2
 17590                           
 17591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 17592                           ;stkvar	_w @ sp[(-56)+38]
 17593  01111E  50E1               	movf	fsr1l,w,c
 17594  011120  0FEE               	addlw	-18
 17595  011122  6ED9               	movwf	fsr2l,c
 17596  011124  50E2               	movf	fsr1h,w,c
 17597  011126  6EDA               	movwf	fsr2h,c
 17598  011128  0EFF               	movlw	255
 17599  01112A  22DA               	addwfc	fsr2h,f,c
 17600  01112C  06DE               	decf	postinc2,f,c
 17601  01112E  0E00               	movlw	0
 17602  011130  5ADD               	subwfb	postdec2,f,c
 17603                           
 17604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 17605                           ;stkvar	_i @ sp[(-56)+36]
 17606  011132  50E1               	movf	fsr1l,w,c
 17607  011134  0FEC               	addlw	-20
 17608  011136  6ED9               	movwf	fsr2l,c
 17609  011138  50E2               	movf	fsr1h,w,c
 17610  01113A  6EDA               	movwf	fsr2h,c
 17611  01113C  0EFF               	movlw	255
 17612  01113E  22DA               	addwfc	fsr2h,f,c
 17613  011140  06DE               	decf	postinc2,f,c
 17614  011142  0E00               	movlw	0
 17615  011144  5ADD               	subwfb	postdec2,f,c
 17616  011146  0EBF               	movlw	191
 17617  011148  6E0B               	movwf	(btemp+10)^0,c
 17618  01114A  0EFF               	movlw	255
 17619  01114C  6E0C               	movwf	(btemp+11)^0,c
 17620                           
 17621                           ;stkvar	_c @ sp[(-56)+-7]
 17622  01114E  0EC1               	movlw	-63
 17623  011150  50E3               	movf	plusw1,w,c
 17624  011152  6E09               	movwf	(btemp+8)^0,c
 17625  011154  6A0A               	clrf	(btemp+9)^0,c
 17626  011156  500B               	movf	(btemp+10)^0,w,c
 17627  011158  2609               	addwf	(btemp+8)^0,f,c
 17628  01115A  500C               	movf	(btemp+11)^0,w,c
 17629  01115C  220A               	addwfc	(btemp+9)^0,f,c
 17630  01115E  500A               	movf	(btemp+9)^0,w,c
 17631  011160  E106               	bnz	u11490
 17632  011162  0E1A               	movlw	26
 17633  011164  5C09               	subwf	(btemp+8)^0,w,c
 17634  011166  B0D8               	btfsc	status,0,c
 17635  011168  D002               	goto	u11490
 17636  01116A  0E01               	movlw	1
 17637  01116C  D001               	goto	u11500
 17638  01116E                     u11490:
 17639  01116E  0E00               	movlw	0
 17640  011170                     u11500:
 17641  011170  6E0B               	movwf	(btemp+10)^0,c
 17642  011172  6A0C               	clrf	(btemp+11)^0,c
 17643                           
 17644                           ;stkvar	_efgtoa$5503 @ sp[(-56)+0]
 17645  011174  0EC8               	movlw	-56
 17646  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17647  01117C  0EC9               	movlw	-55
 17648  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17649                           
 17650                           ;stkvar	_efgtoa$5503 @ sp[(-56)+0]
 17651  011184  0EC8               	movlw	-56
 17652  011186  006F FF8C  F001    	movff	plusw1,btemp
 17653  01118C  0EC9               	movlw	-55
 17654  01118E  50E3               	movf	plusw1,w,c
 17655  011190  1001               	iorwf	btemp^0,w,c
 17656  011192  A4D8               	btfss	status,2,c
 17657  011194  D002               	goto	l12091
 17658  011196  0E65               	movlw	101
 17659  011198  D001               	goto	L19
 17660  01119A                     l12091:
 17661  01119A  0E45               	movlw	69
 17662  01119C                     L19:
 17663  01119C  6E0B               	movwf	(btemp+10)^0,c
 17664  01119E  0E00               	movlw	0
 17665  0111A0  6E0C               	movwf	(btemp+11)^0,c
 17666                           
 17667                           ;stkvar	_efgtoa$5502 @ sp[(-56)+2]
 17668  0111A2  0ECA               	movlw	-54
 17669  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17670  0111AA  0ECB               	movlw	-53
 17671  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17672                           
 17673                           ;stkvar	_efgtoa$5502 @ sp[(-56)+2]
 17674                           ;stkvar	_i @ sp[(-56)+36]
 17675  0111B2  0EEC               	movlw	-20
 17676  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 17677  0111BA  0EED               	movlw	-19
 17678  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 17679  0111C2  0E76               	movlw	low _dbuf
 17680  0111C4  240B               	addwf	(btemp+10)^0,w,c
 17681  0111C6  6ED9               	movwf	fsr2l,c
 17682  0111C8  0E02               	movlw	high _dbuf
 17683  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 17684  0111CC  6EDA               	movwf	fsr2h,c
 17685  0111CE  0ECA               	movlw	-54
 17686  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 17687                           
 17688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 17689                           ;stkvar	_w @ sp[(-56)+38]
 17690  0111D6  50E1               	movf	fsr1l,w,c
 17691  0111D8  0FEE               	addlw	-18
 17692  0111DA  6ED9               	movwf	fsr2l,c
 17693  0111DC  50E2               	movf	fsr1h,w,c
 17694  0111DE  6EDA               	movwf	fsr2h,c
 17695  0111E0  0EFF               	movlw	255
 17696  0111E2  22DA               	addwfc	fsr2h,f,c
 17697  0111E4  06DE               	decf	postinc2,f,c
 17698  0111E6  0E00               	movlw	0
 17699  0111E8  5ADD               	subwfb	postdec2,f,c
 17700                           
 17701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 17702                           ;stkvar	_i @ sp[(-56)+36]
 17703  0111EA  0EEC               	movlw	-20
 17704  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17705  0111F2  0EED               	movlw	-19
 17706  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17707  0111FA  0E76               	movlw	low _dbuf
 17708  0111FC  240B               	addwf	(btemp+10)^0,w,c
 17709  0111FE  6E09               	movwf	(btemp+8)^0,c
 17710  011200  0E02               	movlw	high _dbuf
 17711  011202  200C               	addwfc	(btemp+11)^0,w,c
 17712  011204  6E0A               	movwf	(btemp+9)^0,c
 17713  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 17714  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 17715                           
 17716                           ;stkvar	_n @ sp[(-58)+32]
 17717  011212  0E76               	movlw	low _dbuf
 17718  011214  6E0B               	movwf	(btemp+10)^0,c
 17719  011216  0E02               	movlw	high _dbuf
 17720  011218  6E0C               	movwf	(btemp+11)^0,c
 17721  01121A  0EE6               	movlw	-26
 17722  01121C  50E3               	movf	plusw1,w,c
 17723  01121E  260B               	addwf	(btemp+10)^0,f,c
 17724  011220  0EE7               	movlw	-25
 17725  011222  50E3               	movf	plusw1,w,c
 17726  011224  220C               	addwfc	(btemp+11)^0,f,c
 17727  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17728  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 17729  011232  EC3F  F0D0         	call	_strcpy	;wreg free
 17730  011236  EF16  F081         	goto	l11843
 17731  01123A                     l2199:
 17732                           
 17733                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 17734  01123A  0EC1               	movlw	193
 17735  01123C  26E1               	addwf	fsr1l,f,c
 17736  01123E  0EFF               	movlw	255
 17737  011240  22E2               	addwfc	fsr1h,f,c
 17738  011242  0012               	return		;funcret
 17739  011244                     __end_of_efgtoa:
 17740                           	opt callstack 0
 17741                           
 17742 ;; *************** function _tolower *****************
 17743 ;; Defined at:
 17744 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 17745 ;; Parameters:    Size  Location     Type
 17746 ;;  c               2  [STACK] int 
 17747 ;; Auto vars:     Size  Location     Type
 17748 ;;		None
 17749 ;; Return value:  Size  Location     Type
 17750 ;;                  2  [STACK] int 
 17751 ;; Registers used:
 17752 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 17753 ;; Tracked objects:
 17754 ;;		On entry : 0/0
 17755 ;;		On exit  : 0/0
 17756 ;;		Unchanged: 0/0
 17757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17762 ;;Total ram usage:        0 bytes
 17763 ;; Hardware stack levels used:    1
 17764 ;; Hardware stack levels required when called:   16
 17765 ;; This function calls:
 17766 ;;		_isupper
 17767 ;; This function is called by:
 17768 ;;		_efgtoa
 17769 ;;		_vfpfcnvrt
 17770 ;; This function uses a reentrant model
 17771 ;;
 17772                           
 17773                           	psect	text56
 17774  01AA7C                     __ptext56:
 17775                           	opt callstack 0
 17776  01AA7C                     _tolower:
 17777                           	opt callstack 0
 17778                           
 17779                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17780  01AA7C  52E6               	movf	postinc1,f,c
 17781  01AA7E  52E6               	movf	postinc1,f,c
 17782                           
 17783                           ;stkvar	_c @ sp[(-2)+-2]
 17784                           
 17785                           ;incstack = 0
 17786 ;; hardware stack exceeded
 17787  01AA80  0EFC               	movlw	-4
 17788  01AA82  50E3               	movf	plusw1,w,c
 17789  01AA84  0FBF               	addlw	191
 17790  01AA86  6E0B               	movwf	(btemp+10)^0,c
 17791  01AA88  0EFD               	movlw	-3
 17792  01AA8A  006F FF8C  F00C    	movff	plusw1,btemp+11
 17793  01AA90  0EFF               	movlw	255
 17794  01AA92  220C               	addwfc	(btemp+11)^0,f,c
 17795  01AA94  500C               	movf	(btemp+11)^0,w,c
 17796  01AA96  E106               	bnz	u6010
 17797  01AA98  0E1A               	movlw	26
 17798  01AA9A  5C0B               	subwf	(btemp+10)^0,w,c
 17799  01AA9C  B0D8               	btfsc	status,0,c
 17800  01AA9E  D002               	goto	u6010
 17801  01AAA0  0E01               	movlw	1
 17802  01AAA2  D001               	goto	u6020
 17803  01AAA4                     u6010:
 17804  01AAA4  0E00               	movlw	0
 17805  01AAA6                     u6020:
 17806  01AAA6  6E0B               	movwf	(btemp+10)^0,c
 17807  01AAA8  6A0C               	clrf	(btemp+11)^0,c
 17808                           
 17809                           ;stkvar	_tolower$6322 @ sp[(-2)+0]
 17810  01AAAA  0EFE               	movlw	-2
 17811  01AAAC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17812  01AAB2  0EFF               	movlw	-1
 17813  01AAB4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17814                           
 17815                           ;stkvar	_tolower$6322 @ sp[(-2)+0]
 17816  01AABA  0EFE               	movlw	-2
 17817  01AABC  006F FF8C  F001    	movff	plusw1,btemp
 17818  01AAC2  0EFF               	movlw	-1
 17819  01AAC4  50E3               	movf	plusw1,w,c
 17820  01AAC6  1001               	iorwf	btemp^0,w,c
 17821  01AAC8  B4D8               	btfsc	status,2,c
 17822  01AACA  D00D               	goto	l7923
 17823                           
 17824                           ;stkvar	_c @ sp[(-2)+-2]
 17825  01AACC  0EFC               	movlw	-4
 17826  01AACE  006F FF8C  F001    	movff	plusw1,btemp
 17827  01AAD4  0EFD               	movlw	-3
 17828  01AAD6  006F FF8C  F002    	movff	plusw1,btemp+1
 17829  01AADC  0E20               	movlw	32
 17830  01AADE  1201               	iorwf	btemp^0,f,c
 17831  01AAE0  0E00               	movlw	0
 17832  01AAE2  1202               	iorwf	(btemp+1)^0,f,c
 17833  01AAE4  D008               	goto	l3471
 17834  01AAE6                     l7923:
 17835                           
 17836                           ;stkvar	_c @ sp[(-2)+-2]
 17837  01AAE6  0EFC               	movlw	-4
 17838  01AAE8  006F FF8C  F001    	movff	plusw1,btemp
 17839  01AAEE  0EFD               	movlw	-3
 17840  01AAF0  006F FF8C  F002    	movff	plusw1,btemp+1
 17841  01AAF6                     l3471:
 17842                           
 17843                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17844  01AAF6  52E5               	movf	postdec1,f,c
 17845  01AAF8  52E5               	movf	postdec1,f,c
 17846  01AAFA  52E5               	movf	postdec1,f,c
 17847  01AAFC  52E5               	movf	postdec1,f,c
 17848  01AAFE  0012               	return		;funcret
 17849  01AB00                     __end_of_tolower:
 17850                           	opt callstack 0
 17851                           
 17852 ;; *************** function _isupper *****************
 17853 ;; Defined at:
 17854 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 17855 ;; Parameters:    Size  Location     Type
 17856 ;;  c               2  [STACK] int 
 17857 ;; Auto vars:     Size  Location     Type
 17858 ;;		None
 17859 ;; Return value:  Size  Location     Type
 17860 ;;                  2  [STACK] int 
 17861 ;; Registers used:
 17862 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 17863 ;; Tracked objects:
 17864 ;;		On entry : 0/0
 17865 ;;		On exit  : 0/0
 17866 ;;		Unchanged: 0/0
 17867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17872 ;;Total ram usage:        0 bytes
 17873 ;; Hardware stack levels used:    1
 17874 ;; Hardware stack levels required when called:   15
 17875 ;; This function calls:
 17876 ;;		Nothing
 17877 ;; This function is called by:
 17878 ;;		_efgtoa
 17879 ;;		_xtoa
 17880 ;;		_vfpfcnvrt
 17881 ;;		_tolower
 17882 ;; This function uses a reentrant model
 17883 ;;
 17884                           
 17885                           	psect	text57
 17886  01B768                     __ptext57:
 17887                           	opt callstack 0
 17888  01B768                     _isupper:
 17889                           	opt callstack 0
 17890                           
 17891                           ;stkvar	_c @ sp[(0)+-2]
 17892                           
 17893                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17894                           ;incstack = 0
 17895 ;; hardware stack exceeded
 17896  01B768  0EFE               	movlw	-2
 17897  01B76A  50E3               	movf	plusw1,w,c
 17898  01B76C  0FBF               	addlw	191
 17899  01B76E  6E0B               	movwf	(btemp+10)^0,c
 17900  01B770  0EFF               	movlw	-1
 17901  01B772  006F FF8C  F00C    	movff	plusw1,btemp+11
 17902  01B778  0EFF               	movlw	255
 17903  01B77A  220C               	addwfc	(btemp+11)^0,f,c
 17904  01B77C  500C               	movf	(btemp+11)^0,w,c
 17905  01B77E  E106               	bnz	u5410
 17906  01B780  0E1A               	movlw	26
 17907  01B782  5C0B               	subwf	(btemp+10)^0,w,c
 17908  01B784  B0D8               	btfsc	status,0,c
 17909  01B786  D002               	goto	u5410
 17910  01B788  0E01               	movlw	1
 17911  01B78A  D001               	goto	u5420
 17912  01B78C                     u5410:
 17913  01B78C  0E00               	movlw	0
 17914  01B78E                     u5420:
 17915  01B78E  6E01               	movwf	btemp^0,c
 17916  01B790  6A02               	clrf	(btemp+1)^0,c
 17917                           
 17918                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17919  01B792  52E5               	movf	postdec1,f,c
 17920  01B794  52E5               	movf	postdec1,f,c
 17921  01B796  0012               	return		;funcret
 17922  01B798                     __end_of_isupper:
 17923                           	opt callstack 0
 17924                           
 17925 ;; *************** function _strcpy *****************
 17926 ;; Defined at:
 17927 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 17928 ;; Parameters:    Size  Location     Type
 17929 ;;  dest            2  [STACK] PTR unsigned char 
 17930 ;;		 -> dbuf(80), 
 17931 ;;  src             2  [STACK] PTR const unsigned char 
 17932 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17933 ;;		 -> dbuf(80), 
 17934 ;; Auto vars:     Size  Location     Type
 17935 ;;  d               2  [STACK] PTR unsigned char 
 17936 ;;		 -> dbuf(80), 
 17937 ;;  s               2  [STACK] PTR const unsigned char 
 17938 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17939 ;;		 -> dbuf(80), 
 17940 ;; Return value:  Size  Location     Type
 17941 ;;                  2  [STACK] PTR unsigned char 
 17942 ;; Registers used:
 17943 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 17944 ;; Tracked objects:
 17945 ;;		On entry : 0/0
 17946 ;;		On exit  : 0/0
 17947 ;;		Unchanged: 0/0
 17948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17953 ;;Total ram usage:        0 bytes
 17954 ;; Hardware stack levels used:    1
 17955 ;; Hardware stack levels required when called:   15
 17956 ;; This function calls:
 17957 ;;		Nothing
 17958 ;; This function is called by:
 17959 ;;		_efgtoa
 17960 ;; This function uses a reentrant model
 17961 ;;
 17962                           
 17963                           	psect	text58
 17964  01A07E                     __ptext58:
 17965                           	opt callstack 0
 17966  01A07E                     _strcpy:
 17967                           	opt callstack 0
 17968                           
 17969                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17970  01A07E  52E6               	movf	postinc1,f,c
 17971  01A080  52E6               	movf	postinc1,f,c
 17972  01A082  52E6               	movf	postinc1,f,c
 17973  01A084  52E6               	movf	postinc1,f,c
 17974                           
 17975                           ;stkvar	_src @ sp[(-4)+-4]
 17976                           
 17977                           ;incstack = 0
 17978 ;; hardware stack exceeded
 17979  01A086  0EF8               	movlw	-8
 17980  01A088  006F FF8C  F00B    	movff	plusw1,btemp+10
 17981  01A08E  0EF9               	movlw	-7
 17982  01A090  006F FF8C  F00C    	movff	plusw1,btemp+11
 17983                           
 17984                           ;stkvar	_s @ sp[(-4)+2]
 17985  01A096  0EFF               	movlw	-1
 17986  01A098  0060  F033  FFE3   	movff	btemp+11,plusw1
 17987  01A09E  0EFE               	movlw	-2
 17988  01A0A0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17989                           
 17990                           ;stkvar	_dest @ sp[(-4)+-2]
 17991  01A0A6  0EFA               	movlw	-6
 17992  01A0A8  006F FF8C  F00B    	movff	plusw1,btemp+10
 17993  01A0AE  0EFB               	movlw	-5
 17994  01A0B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 17995                           
 17996                           ;stkvar	_d @ sp[(-4)+0]
 17997  01A0B6  0EFD               	movlw	-3
 17998  01A0B8  0060  F033  FFE3   	movff	btemp+11,plusw1
 17999  01A0BE  0EFC               	movlw	-4
 18000  01A0C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18001  01A0C6                     l11675:
 18002                           
 18003                           ;stkvar	_s @ sp[(-4)+2]
 18004  01A0C6  50E1               	movf	fsr1l,w,c
 18005  01A0C8  0FFE               	addlw	-2
 18006  01A0CA  6ED9               	movwf	fsr2l,c
 18007  01A0CC  50E2               	movf	fsr1h,w,c
 18008  01A0CE  6EDA               	movwf	fsr2h,c
 18009  01A0D0  0EFF               	movlw	255
 18010  01A0D2  22DA               	addwfc	fsr2h,f,c
 18011  01A0D4  006F FF7C  F00B    	movff	indf2,btemp+10
 18012  01A0DA  0E01               	movlw	1
 18013  01A0DC  26DE               	addwf	postinc2,f,c
 18014  01A0DE  006F FF7C  F00C    	movff	indf2,btemp+11
 18015  01A0E4  0E00               	movlw	0
 18016  01A0E6  22DD               	addwfc	postdec2,f,c
 18017  01A0E8  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 18018  01A0EE  0060  F033  FFF7   	movff	btemp+11,tblptrh
 18019  01A0F4  0E00               	movlw	low (__mediumconst shr (0+16))
 18020  01A0F6  6EF8               	movwf	tblptru,c
 18021                           
 18022                           ;stkvar	_d @ sp[(-4)+0]
 18023  01A0F8  50E1               	movf	fsr1l,w,c
 18024  01A0FA  0FFC               	addlw	-4
 18025  01A0FC  6ED9               	movwf	fsr2l,c
 18026  01A0FE  50E2               	movf	fsr1h,w,c
 18027  01A100  6EDA               	movwf	fsr2h,c
 18028  01A102  0EFF               	movlw	255
 18029  01A104  22DA               	addwfc	fsr2h,f,c
 18030  01A106  006F FF7C  F00B    	movff	indf2,btemp+10
 18031  01A10C  0E01               	movlw	1
 18032  01A10E  26DE               	addwf	postinc2,f,c
 18033  01A110  006F FF7C  F00C    	movff	indf2,btemp+11
 18034  01A116  0E00               	movlw	0
 18035  01A118  22DD               	addwfc	postdec2,f,c
 18036  01A11A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 18037  01A120  0060  F033  FFDA   	movff	btemp+11,fsr2h
 18038  01A126  0E1F               	movlw	(high __ramtop+-1)
 18039  01A128  64F7               	cpfsgt	tblptrh,c
 18040  01A12A  D003               	bra	u10757
 18041  01A12C  0008               	tblrd		*
 18042  01A12E  50F5               	movf	tablat,w,c
 18043  01A130  D007               	bra	u10750
 18044  01A132                     u10757:
 18045  01A132  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18046  01A138  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18047  01A13E  50EF               	movf	indf0,w,c
 18048  01A140                     u10750:
 18049  01A140  6EDF               	movwf	indf2,c
 18050  01A142  50DF               	movf	indf2,w,c
 18051  01A144  A4D8               	btfss	status,2,c
 18052  01A146  D7BF               	goto	l11675
 18053                           
 18054                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 18055  01A148  0EF8               	movlw	248
 18056  01A14A  26E1               	addwf	fsr1l,f,c
 18057  01A14C  0EFF               	movlw	255
 18058  01A14E  22E2               	addwfc	fsr1h,f,c
 18059  01A150  0012               	return		;funcret
 18060  01A152                     __end_of_strcpy:
 18061                           	opt callstack 0
 18062                           
 18063 ;; *************** function _floorf *****************
 18064 ;; Defined at:
 18065 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 18066 ;; Parameters:    Size  Location     Type
 18067 ;;  x               4  [STACK] float 
 18068 ;; Auto vars:     Size  Location     Type
 18069 ;;  u               4  [STACK] struct .
 18070 ;;  m               4  [STACK] unsigned long 
 18071 ;;  e               2  [STACK] int 
 18072 ;; Return value:  Size  Location     Type
 18073 ;;                  4  [STACK] float 
 18074 ;; Registers used:
 18075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 18076 ;; Tracked objects:
 18077 ;;		On entry : 0/0
 18078 ;;		On exit  : 0/0
 18079 ;;		Unchanged: 0/0
 18080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18085 ;;Total ram usage:        0 bytes
 18086 ;; Hardware stack levels used:    1
 18087 ;; Hardware stack levels required when called:   15
 18088 ;; This function calls:
 18089 ;;		Nothing
 18090 ;; This function is called by:
 18091 ;;		_efgtoa
 18092 ;; This function uses a reentrant model
 18093 ;;
 18094                           
 18095                           	psect	text59
 18096  01614C                     __ptext59:
 18097                           	opt callstack 0
 18098  01614C                     _floorf:
 18099                           	opt callstack 0
 18100                           
 18101                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 18102  01614C  0E0A               	movlw	10
 18103  01614E  26E1               	addwf	fsr1l,f,c
 18104  016150  0E00               	movlw	0
 18105  016152  22E2               	addwfc	fsr1h,f,c
 18106                           
 18107                           ;incstack = 0
 18108 ;; hardware stack exceeded
 18109  016154  0060  F1B0  F009   	movff	floorf@F524,btemp+8
 18110  01615A  0060  F1B4  F00A   	movff	floorf@F524+1,btemp+9
 18111  016160  0060  F1B8  F00B   	movff	floorf@F524+2,btemp+10
 18112  016166  0060  F1BC  F00C   	movff	floorf@F524+3,btemp+11
 18113                           
 18114                           ;stkvar	_u @ sp[(-10)+0]
 18115  01616C  0EF6               	movlw	-10
 18116  01616E  0060  F027  FFE3   	movff	btemp+8,plusw1
 18117  016174  0EF7               	movlw	-9
 18118  016176  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18119  01617C  0EF8               	movlw	-8
 18120  01617E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18121  016184  0EF9               	movlw	-7
 18122  016186  0060  F033  FFE3   	movff	btemp+11,plusw1
 18123                           
 18124                           ;stkvar	_x @ sp[(-10)+-4]
 18125  01618C  0EF2               	movlw	-14
 18126  01618E  006F FF8C  F009    	movff	plusw1,btemp+8
 18127  016194  0EF3               	movlw	-13
 18128  016196  006F FF8C  F00A    	movff	plusw1,btemp+9
 18129  01619C  0EF4               	movlw	-12
 18130  01619E  006F FF8C  F00B    	movff	plusw1,btemp+10
 18131  0161A4  0EF5               	movlw	-11
 18132  0161A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 18133                           
 18134                           ;stkvar	_u @ sp[(-10)+0]
 18135  0161AC  0EF6               	movlw	-10
 18136  0161AE  0060  F027  FFE3   	movff	btemp+8,plusw1
 18137  0161B4  0EF7               	movlw	-9
 18138  0161B6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18139  0161BC  0EF8               	movlw	-8
 18140  0161BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18141  0161C4  0EF9               	movlw	-7
 18142  0161C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 18143  0161CC  0E81               	movlw	129
 18144  0161CE  6E0B               	movwf	(btemp+10)^0,c
 18145  0161D0  0EFF               	movlw	255
 18146  0161D2  6E0C               	movwf	(btemp+11)^0,c
 18147                           
 18148                           ;stkvar	_u @ sp[(-10)+0]
 18149  0161D4  0EF6               	movlw	-10
 18150  0161D6  006F FF8C  F005    	movff	plusw1,btemp+4
 18151  0161DC  0EF7               	movlw	-9
 18152  0161DE  006F FF8C  F006    	movff	plusw1,btemp+5
 18153  0161E4  0EF8               	movlw	-8
 18154  0161E6  006F FF8C  F007    	movff	plusw1,btemp+6
 18155  0161EC  0EF9               	movlw	-7
 18156  0161EE  006F FF8C  F008    	movff	plusw1,btemp+7
 18157  0161F4  0E18               	movlw	24
 18158  0161F6  D005               	goto	u6040
 18159  0161F8                     u6045:
 18160  0161F8  90D8               	bcf	status,0,c
 18161  0161FA  3208               	rrcf	(btemp+7)^0,f,c
 18162  0161FC  3207               	rrcf	(btemp+6)^0,f,c
 18163  0161FE  3206               	rrcf	(btemp+5)^0,f,c
 18164  016200  3205               	rrcf	(btemp+4)^0,f,c
 18165  016202                     u6040:
 18166  016202  2EE8               	decfsz	wreg,f,c
 18167  016204  D7F9               	goto	u6045
 18168  016206  0060  F014  F009   	movff	btemp+4,btemp+8
 18169  01620C  0060  F018  F00A   	movff	btemp+5,btemp+9
 18170  016212  0EFF               	movlw	255
 18171  016214  1609               	andwf	(btemp+8)^0,f,c
 18172  016216  0E00               	movlw	0
 18173  016218  160A               	andwf	(btemp+9)^0,f,c
 18174  01621A  500B               	movf	(btemp+10)^0,w,c
 18175  01621C  2609               	addwf	(btemp+8)^0,f,c
 18176  01621E  500C               	movf	(btemp+11)^0,w,c
 18177  016220  220A               	addwfc	(btemp+9)^0,f,c
 18178                           
 18179                           ;stkvar	_e @ sp[(-10)+8]
 18180  016222  0EFE               	movlw	-2
 18181  016224  0060  F027  FFE3   	movff	btemp+8,plusw1
 18182  01622A  0EFF               	movlw	-1
 18183  01622C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18184                           
 18185                           ;stkvar	_e @ sp[(-10)+8]
 18186  016232  0EFF               	movlw	-1
 18187  016234  BEE3               	btfsc	plusw1,7,c
 18188  016236  D019               	goto	l7937
 18189  016238  0EFF               	movlw	-1
 18190  01623A  50E3               	movf	plusw1,w,c
 18191  01623C  E108               	bnz	u6050
 18192  01623E  0EFE               	movlw	-2
 18193  016240  006F FF8C  F001    	movff	plusw1,btemp
 18194  016246  0E17               	movlw	23
 18195  016248  5E01               	subwf	btemp^0,f,c
 18196  01624A  A0D8               	btfss	status,0,c
 18197  01624C  D00E               	goto	l7937
 18198  01624E                     u6050:
 18199                           
 18200                           ;stkvar	_x @ sp[(-10)+-4]
 18201  01624E  0EF2               	movlw	-14
 18202  016250  006F FF8C  F001    	movff	plusw1,btemp
 18203  016256  0EF3               	movlw	-13
 18204  016258  006F FF8C  F002    	movff	plusw1,btemp+1
 18205  01625E  0EF4               	movlw	-12
 18206  016260  006F FF8C  F003    	movff	plusw1,btemp+2
 18207  016266  0EF5               	movlw	-11
 18208  016268  D11F               	goto	L20
 18209  01626A                     l7937:
 18210                           
 18211                           ;stkvar	_e @ sp[(-10)+8]
 18212  01626A  0EFF               	movlw	-1
 18213  01626C  BEE3               	btfsc	plusw1,7,c
 18214  01626E  D0B4               	goto	l7953
 18215                           
 18216                           ;stkvar	_e @ sp[(-10)+8]
 18217  016270  0EFE               	movlw	-2
 18218  016272  006F FF8C  F00C    	movff	plusw1,btemp+11
 18219  016278  0EFF               	movlw	255
 18220  01627A  6E05               	movwf	(btemp+4)^0,c
 18221  01627C  0EFF               	movlw	255
 18222  01627E  6E06               	movwf	(btemp+5)^0,c
 18223  016280  0E7F               	movlw	127
 18224  016282  6E07               	movwf	(btemp+6)^0,c
 18225  016284  0E00               	movlw	0
 18226  016286  6E08               	movwf	(btemp+7)^0,c
 18227  016288                     u6075:
 18228  016288  660C               	tstfsz	(btemp+11)^0,c
 18229  01628A  D001               	goto	u6076
 18230  01628C  D007               	goto	u6077
 18231  01628E                     u6076:
 18232  01628E  3408               	rlcf	(btemp+7)^0,w,c
 18233  016290  3208               	rrcf	(btemp+7)^0,f,c
 18234  016292  3207               	rrcf	(btemp+6)^0,f,c
 18235  016294  3206               	rrcf	(btemp+5)^0,f,c
 18236  016296  3205               	rrcf	(btemp+4)^0,f,c
 18237  016298  2E0C               	decfsz	(btemp+11)^0,f,c
 18238  01629A  D7F6               	goto	u6075
 18239  01629C                     u6077:
 18240                           
 18241                           ;stkvar	_m @ sp[(-10)+4]
 18242  01629C  0EFA               	movlw	-6
 18243  01629E  0060  F017  FFE3   	movff	btemp+4,plusw1
 18244  0162A4  0EFB               	movlw	-5
 18245  0162A6  0060  F01B  FFE3   	movff	btemp+5,plusw1
 18246  0162AC  0EFC               	movlw	-4
 18247  0162AE  0060  F01F  FFE3   	movff	btemp+6,plusw1
 18248  0162B4  0EFD               	movlw	-3
 18249  0162B6  0060  F023  FFE3   	movff	btemp+7,plusw1
 18250                           
 18251                           ;stkvar	_m @ sp[(-10)+4]
 18252                           ;stkvar	_u @ sp[(-10)+0]
 18253  0162BC  0EF6               	movlw	-10
 18254  0162BE  006F FF8C  F009    	movff	plusw1,btemp+8
 18255  0162C4  0EF7               	movlw	-9
 18256  0162C6  006F FF8C  F00A    	movff	plusw1,btemp+9
 18257  0162CC  0EF8               	movlw	-8
 18258  0162CE  006F FF8C  F00B    	movff	plusw1,btemp+10
 18259  0162D4  0EF9               	movlw	-7
 18260  0162D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 18261  0162DC  0EFA               	movlw	-6
 18262  0162DE  50E3               	movf	plusw1,w,c
 18263  0162E0  1609               	andwf	(btemp+8)^0,f,c
 18264  0162E2  0EFB               	movlw	-5
 18265  0162E4  50E3               	movf	plusw1,w,c
 18266  0162E6  160A               	andwf	(btemp+9)^0,f,c
 18267  0162E8  0EFC               	movlw	-4
 18268  0162EA  50E3               	movf	plusw1,w,c
 18269  0162EC  160B               	andwf	(btemp+10)^0,f,c
 18270  0162EE  0EFD               	movlw	-3
 18271  0162F0  50E3               	movf	plusw1,w,c
 18272  0162F2  160C               	andwf	(btemp+11)^0,f,c
 18273  0162F4  5009               	movf	(btemp+8)^0,w,c
 18274  0162F6  100A               	iorwf	(btemp+9)^0,w,c
 18275  0162F8  100B               	iorwf	(btemp+10)^0,w,c
 18276  0162FA  100C               	iorwf	(btemp+11)^0,w,c
 18277  0162FC  B4D8               	btfsc	status,2,c
 18278  0162FE  D7A7               	goto	u6050
 18279                           
 18280                           ;stkvar	_u @ sp[(-10)+0]
 18281  016300  0EF6               	movlw	-10
 18282  016302  006F FF8C  F009    	movff	plusw1,btemp+8
 18283  016308  0EF7               	movlw	-9
 18284  01630A  006F FF8C  F00A    	movff	plusw1,btemp+9
 18285  016310  0EF8               	movlw	-8
 18286  016312  006F FF8C  F00B    	movff	plusw1,btemp+10
 18287  016318  0EF9               	movlw	-7
 18288  01631A  006F FF8C  F00C    	movff	plusw1,btemp+11
 18289  016320  0E20               	movlw	32
 18290  016322  D005               	goto	u6090
 18291  016324                     u6095:
 18292  016324  90D8               	bcf	status,0,c
 18293  016326  320C               	rrcf	(btemp+11)^0,f,c
 18294  016328  320B               	rrcf	(btemp+10)^0,f,c
 18295  01632A  320A               	rrcf	(btemp+9)^0,f,c
 18296  01632C  3209               	rrcf	(btemp+8)^0,f,c
 18297  01632E                     u6090:
 18298  01632E  2EE8               	decfsz	wreg,f,c
 18299  016330  D7F9               	goto	u6095
 18300  016332  5009               	movf	(btemp+8)^0,w,c
 18301  016334  B4D8               	btfsc	status,2,c
 18302  016336  D028               	goto	l7951
 18303                           
 18304                           ;stkvar	_m @ sp[(-10)+4]
 18305                           ;stkvar	_u @ sp[(-10)+0]
 18306  016338  0EF6               	movlw	-10
 18307  01633A  50E3               	movf	plusw1,w,c
 18308  01633C  6E01               	movwf	btemp^0,c
 18309  01633E  0EFA               	movlw	-6
 18310  016340  50E3               	movf	plusw1,w,c
 18311  016342  2601               	addwf	btemp^0,f,c
 18312  016344  0EF6               	movlw	-10
 18313  016346  0060  F007  FFE3   	movff	btemp,plusw1
 18314  01634C  0EF7               	movlw	-9
 18315  01634E  50E3               	movf	plusw1,w,c
 18316  016350  6E01               	movwf	btemp^0,c
 18317  016352  0EFB               	movlw	-5
 18318  016354  50E3               	movf	plusw1,w,c
 18319  016356  2201               	addwfc	btemp^0,f,c
 18320  016358  0EF7               	movlw	-9
 18321  01635A  0060  F007  FFE3   	movff	btemp,plusw1
 18322  016360  0EF8               	movlw	-8
 18323  016362  50E3               	movf	plusw1,w,c
 18324  016364  6E01               	movwf	btemp^0,c
 18325  016366  0EFC               	movlw	-4
 18326  016368  50E3               	movf	plusw1,w,c
 18327  01636A  2201               	addwfc	btemp^0,f,c
 18328  01636C  0EF8               	movlw	-8
 18329  01636E  0060  F007  FFE3   	movff	btemp,plusw1
 18330  016374  0EF9               	movlw	-7
 18331  016376  50E3               	movf	plusw1,w,c
 18332  016378  6E01               	movwf	btemp^0,c
 18333  01637A  0EFD               	movlw	-3
 18334  01637C  50E3               	movf	plusw1,w,c
 18335  01637E  2201               	addwfc	btemp^0,f,c
 18336  016380  0EF9               	movlw	-7
 18337  016382  0060  F007  FFE3   	movff	btemp,plusw1
 18338  016388                     l7951:
 18339                           
 18340                           ;stkvar	_m @ sp[(-10)+4]
 18341  016388  0EFA               	movlw	-6
 18342  01638A  006F FF8C  F009    	movff	plusw1,btemp+8
 18343  016390  0EFB               	movlw	-5
 18344  016392  006F FF8C  F00A    	movff	plusw1,btemp+9
 18345  016398  0EFC               	movlw	-4
 18346  01639A  006F FF8C  F00B    	movff	plusw1,btemp+10
 18347  0163A0  0EFD               	movlw	-3
 18348  0163A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 18349  0163A8  1C09               	comf	(btemp+8)^0,w,c
 18350  0163AA  6E05               	movwf	(btemp+4)^0,c
 18351  0163AC  1C0A               	comf	(btemp+9)^0,w,c
 18352  0163AE  6E06               	movwf	(btemp+5)^0,c
 18353  0163B0  1C0B               	comf	(btemp+10)^0,w,c
 18354  0163B2  6E07               	movwf	(btemp+6)^0,c
 18355  0163B4  1C0C               	comf	(btemp+11)^0,w,c
 18356  0163B6  6E08               	movwf	(btemp+7)^0,c
 18357                           
 18358                           ;stkvar	_u @ sp[(-10)+0]
 18359  0163B8  50E1               	movf	fsr1l,w,c
 18360  0163BA  0FF6               	addlw	-10
 18361  0163BC  6ED9               	movwf	fsr2l,c
 18362  0163BE  50E2               	movf	fsr1h,w,c
 18363  0163C0  6EDA               	movwf	fsr2h,c
 18364  0163C2  0EFF               	movlw	255
 18365  0163C4  22DA               	addwfc	fsr2h,f,c
 18366  0163C6  5005               	movf	(btemp+4)^0,w,c
 18367  0163C8  16DE               	andwf	postinc2,f,c
 18368  0163CA  5006               	movf	(btemp+5)^0,w,c
 18369  0163CC  16DE               	andwf	postinc2,f,c
 18370  0163CE  5007               	movf	(btemp+6)^0,w,c
 18371  0163D0  16DE               	andwf	postinc2,f,c
 18372  0163D2  5008               	movf	(btemp+7)^0,w,c
 18373  0163D4  16DE               	andwf	postinc2,f,c
 18374  0163D6  D05B               	goto	l7961
 18375  0163D8                     l7953:
 18376                           
 18377                           ;stkvar	_u @ sp[(-10)+0]
 18378  0163D8  0EF6               	movlw	-10
 18379  0163DA  006F FF8C  F009    	movff	plusw1,btemp+8
 18380  0163E0  0EF7               	movlw	-9
 18381  0163E2  006F FF8C  F00A    	movff	plusw1,btemp+9
 18382  0163E8  0EF8               	movlw	-8
 18383  0163EA  006F FF8C  F00B    	movff	plusw1,btemp+10
 18384  0163F0  0EF9               	movlw	-7
 18385  0163F2  006F FF8C  F00C    	movff	plusw1,btemp+11
 18386  0163F8  0E20               	movlw	32
 18387  0163FA  D005               	goto	u6110
 18388  0163FC                     u6115:
 18389  0163FC  90D8               	bcf	status,0,c
 18390  0163FE  320C               	rrcf	(btemp+11)^0,f,c
 18391  016400  320B               	rrcf	(btemp+10)^0,f,c
 18392  016402  320A               	rrcf	(btemp+9)^0,f,c
 18393  016404  3209               	rrcf	(btemp+8)^0,f,c
 18394  016406                     u6110:
 18395  016406  2EE8               	decfsz	wreg,f,c
 18396  016408  D7F9               	goto	u6115
 18397  01640A  6609               	tstfsz	(btemp+8)^0,c
 18398  01640C  D009               	goto	l7957
 18399                           
 18400                           ;stkvar	_u @ sp[(-10)+0]
 18401  01640E  0EF6               	movlw	-10
 18402  016410  6AE3               	clrf	plusw1,c
 18403  016412  0EF7               	movlw	-9
 18404  016414  6AE3               	clrf	plusw1,c
 18405  016416  0EF8               	movlw	-8
 18406  016418  6AE3               	clrf	plusw1,c
 18407  01641A  0EF9               	movlw	-7
 18408  01641C  6AE3               	clrf	plusw1,c
 18409  01641E  D037               	goto	l7961
 18410  016420                     l7957:
 18411                           
 18412                           ;stkvar	_u @ sp[(-10)+0]
 18413  016420  0EF6               	movlw	-10
 18414  016422  006F FF8C  F009    	movff	plusw1,btemp+8
 18415  016428  0EF7               	movlw	-9
 18416  01642A  006F FF8C  F00A    	movff	plusw1,btemp+9
 18417  016430  0EF8               	movlw	-8
 18418  016432  006F FF8C  F00B    	movff	plusw1,btemp+10
 18419  016438  0EF9               	movlw	-7
 18420  01643A  006F FF8C  F00C    	movff	plusw1,btemp+11
 18421  016440  90D8               	bcf	status,0,c
 18422  016442  3409               	rlcf	(btemp+8)^0,w,c
 18423  016444  6E05               	movwf	(btemp+4)^0,c
 18424  016446  340A               	rlcf	(btemp+9)^0,w,c
 18425  016448  6E06               	movwf	(btemp+5)^0,c
 18426  01644A  340B               	rlcf	(btemp+10)^0,w,c
 18427  01644C  6E07               	movwf	(btemp+6)^0,c
 18428  01644E  340C               	rlcf	(btemp+11)^0,w,c
 18429  016450  6E08               	movwf	(btemp+7)^0,c
 18430  016452  5005               	movf	(btemp+4)^0,w,c
 18431  016454  1006               	iorwf	(btemp+5)^0,w,c
 18432  016456  1007               	iorwf	(btemp+6)^0,w,c
 18433  016458  1008               	iorwf	(btemp+7)^0,w,c
 18434  01645A  B4D8               	btfsc	status,2,c
 18435  01645C  D018               	goto	l7961
 18436  01645E  0E00               	movlw	0
 18437  016460  6E09               	movwf	(btemp+8)^0,c
 18438  016462  0E00               	movlw	0
 18439  016464  6E0A               	movwf	(btemp+9)^0,c
 18440  016466  0E80               	movlw	128
 18441  016468  6E0B               	movwf	(btemp+10)^0,c
 18442  01646A  0EBF               	movlw	191
 18443  01646C  6E0C               	movwf	(btemp+11)^0,c
 18444                           
 18445                           ;stkvar	_u @ sp[(-10)+0]
 18446  01646E  0EF6               	movlw	-10
 18447  016470  0060  F027  FFE3   	movff	btemp+8,plusw1
 18448  016476  0EF7               	movlw	-9
 18449  016478  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18450  01647E  0EF8               	movlw	-8
 18451  016480  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18452  016486  0EF9               	movlw	-7
 18453  016488  0060  F033  FFE3   	movff	btemp+11,plusw1
 18454  01648E                     l7961:
 18455                           
 18456                           ;stkvar	_u @ sp[(-10)+0]
 18457  01648E  0EF6               	movlw	-10
 18458  016490  006F FF8C  F001    	movff	plusw1,btemp
 18459  016496  0EF7               	movlw	-9
 18460  016498  006F FF8C  F002    	movff	plusw1,btemp+1
 18461  01649E  0EF8               	movlw	-8
 18462  0164A0  006F FF8C  F003    	movff	plusw1,btemp+2
 18463  0164A6  0EF9               	movlw	-7
 18464  0164A8                     L20:
 18465  0164A8  006F FF8C  F004    	movff	plusw1,btemp+3
 18466                           
 18467                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18468  0164AE  0EF2               	movlw	242
 18469  0164B0  26E1               	addwf	fsr1l,f,c
 18470  0164B2  0EFF               	movlw	255
 18471  0164B4  22E2               	addwfc	fsr1h,f,c
 18472  0164B6  0012               	return		;funcret
 18473  0164B8                     __end_of_floorf:
 18474                           	opt callstack 0
 18475                           
 18476 ;; *************** function ___fpclassifyf *****************
 18477 ;; Defined at:
 18478 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 18479 ;; Parameters:    Size  Location     Type
 18480 ;;  x               4  [STACK] float 
 18481 ;; Auto vars:     Size  Location     Type
 18482 ;;  u               4  [STACK] struct .
 18483 ;;  e               2  [STACK] int 
 18484 ;; Return value:  Size  Location     Type
 18485 ;;                  2  [STACK] int 
 18486 ;; Registers used:
 18487 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 18488 ;; Tracked objects:
 18489 ;;		On entry : 0/0
 18490 ;;		On exit  : 0/0
 18491 ;;		Unchanged: 0/0
 18492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18497 ;;Total ram usage:        0 bytes
 18498 ;; Hardware stack levels used:    1
 18499 ;; Hardware stack levels required when called:   15
 18500 ;; This function calls:
 18501 ;;		Nothing
 18502 ;; This function is called by:
 18503 ;;		_efgtoa
 18504 ;; This function uses a reentrant model
 18505 ;;
 18506                           
 18507                           	psect	text60
 18508  018866                     __ptext60:
 18509                           	opt callstack 0
 18510  018866                     ___fpclassifyf:
 18511                           	opt callstack 0
 18512                           
 18513                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18514  018866  0E06               	movlw	6
 18515  018868  26E1               	addwf	fsr1l,f,c
 18516  01886A  0E00               	movlw	0
 18517  01886C  22E2               	addwfc	fsr1h,f,c
 18518                           
 18519                           ;incstack = 0
 18520 ;; hardware stack exceeded
 18521  01886E  0060  F1D0  F009   	movff	___fpclassifyf@F463,btemp+8
 18522  018874  0060  F1D4  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 18523  01887A  0060  F1D8  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 18524  018880  0060  F1DC  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 18525                           
 18526                           ;stkvar	_u @ sp[(-6)+0]
 18527  018886  0EFA               	movlw	-6
 18528  018888  0060  F027  FFE3   	movff	btemp+8,plusw1
 18529  01888E  0EFB               	movlw	-5
 18530  018890  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18531  018896  0EFC               	movlw	-4
 18532  018898  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18533  01889E  0EFD               	movlw	-3
 18534  0188A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 18535                           
 18536                           ;stkvar	_x @ sp[(-6)+-4]
 18537  0188A6  0EF6               	movlw	-10
 18538  0188A8  006F FF8C  F009    	movff	plusw1,btemp+8
 18539  0188AE  0EF7               	movlw	-9
 18540  0188B0  006F FF8C  F00A    	movff	plusw1,btemp+9
 18541  0188B6  0EF8               	movlw	-8
 18542  0188B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 18543  0188BE  0EF9               	movlw	-7
 18544  0188C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 18545                           
 18546                           ;stkvar	_u @ sp[(-6)+0]
 18547  0188C6  0EFA               	movlw	-6
 18548  0188C8  0060  F027  FFE3   	movff	btemp+8,plusw1
 18549  0188CE  0EFB               	movlw	-5
 18550  0188D0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18551  0188D6  0EFC               	movlw	-4
 18552  0188D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18553  0188DE  0EFD               	movlw	-3
 18554  0188E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 18555                           
 18556                           ;stkvar	_u @ sp[(-6)+0]
 18557  0188E6  0EFA               	movlw	-6
 18558  0188E8  006F FF8C  F009    	movff	plusw1,btemp+8
 18559  0188EE  0EFB               	movlw	-5
 18560  0188F0  006F FF8C  F00A    	movff	plusw1,btemp+9
 18561  0188F6  0EFC               	movlw	-4
 18562  0188F8  006F FF8C  F00B    	movff	plusw1,btemp+10
 18563  0188FE  0EFD               	movlw	-3
 18564  018900  006F FF8C  F00C    	movff	plusw1,btemp+11
 18565  018906  0E18               	movlw	24
 18566  018908  D005               	goto	u5920
 18567  01890A                     u5925:
 18568  01890A  90D8               	bcf	status,0,c
 18569  01890C  320C               	rrcf	(btemp+11)^0,f,c
 18570  01890E  320B               	rrcf	(btemp+10)^0,f,c
 18571  018910  320A               	rrcf	(btemp+9)^0,f,c
 18572  018912  3209               	rrcf	(btemp+8)^0,f,c
 18573  018914                     u5920:
 18574  018914  2EE8               	decfsz	wreg,f,c
 18575  018916  D7F9               	goto	u5925
 18576  018918  0060  F024  F007   	movff	btemp+8,btemp+6
 18577  01891E  0060  F028  F008   	movff	btemp+9,btemp+7
 18578  018924  0EFF               	movlw	255
 18579  018926  1607               	andwf	(btemp+6)^0,f,c
 18580  018928  0E00               	movlw	0
 18581  01892A  1608               	andwf	(btemp+7)^0,f,c
 18582                           
 18583                           ;stkvar	_e @ sp[(-6)+4]
 18584  01892C  0EFE               	movlw	-2
 18585  01892E  0060  F01F  FFE3   	movff	btemp+6,plusw1
 18586  018934  0EFF               	movlw	-1
 18587  018936  0060  F023  FFE3   	movff	btemp+7,plusw1
 18588                           
 18589                           ;stkvar	_e @ sp[(-6)+4]
 18590  01893C  0EFE               	movlw	-2
 18591  01893E  006F FF8C  F001    	movff	plusw1,btemp
 18592  018944  0EFF               	movlw	-1
 18593  018946  50E3               	movf	plusw1,w,c
 18594  018948  1001               	iorwf	btemp^0,w,c
 18595  01894A  A4D8               	btfss	status,2,c
 18596  01894C  D023               	goto	l7899
 18597                           
 18598                           ;stkvar	_u @ sp[(-6)+0]
 18599  01894E  0EFA               	movlw	-6
 18600  018950  006F FF8C  F009    	movff	plusw1,btemp+8
 18601  018956  0EFB               	movlw	-5
 18602  018958  006F FF8C  F00A    	movff	plusw1,btemp+9
 18603  01895E  0EFC               	movlw	-4
 18604  018960  006F FF8C  F00B    	movff	plusw1,btemp+10
 18605  018966  0EFD               	movlw	-3
 18606  018968  006F FF8C  F00C    	movff	plusw1,btemp+11
 18607  01896E  90D8               	bcf	status,0,c
 18608  018970  3409               	rlcf	(btemp+8)^0,w,c
 18609  018972  6E05               	movwf	(btemp+4)^0,c
 18610  018974  340A               	rlcf	(btemp+9)^0,w,c
 18611  018976  6E06               	movwf	(btemp+5)^0,c
 18612  018978  340B               	rlcf	(btemp+10)^0,w,c
 18613  01897A  6E07               	movwf	(btemp+6)^0,c
 18614  01897C  340C               	rlcf	(btemp+11)^0,w,c
 18615  01897E  6E08               	movwf	(btemp+7)^0,c
 18616  018980  5005               	movf	(btemp+4)^0,w,c
 18617  018982  1006               	iorwf	(btemp+5)^0,w,c
 18618  018984  1007               	iorwf	(btemp+6)^0,w,c
 18619  018986  1008               	iorwf	(btemp+7)^0,w,c
 18620  018988  A4D8               	btfss	status,2,c
 18621  01898A  D002               	goto	l7895
 18622  01898C  0E02               	movlw	2
 18623  01898E  D02E               	goto	L21
 18624  018990                     l7895:
 18625  018990  0E03               	movlw	3
 18626  018992  D02C               	goto	L21
 18627  018994                     l7899:
 18628                           
 18629                           ;stkvar	_e @ sp[(-6)+4]
 18630  018994  0EFE               	movlw	-2
 18631  018996  28E3               	incf	plusw1,w,c
 18632  018998  E128               	bnz	l7905
 18633  01899A  0EFF               	movlw	-1
 18634  01899C  50E3               	movf	plusw1,w,c
 18635  01899E  A4D8               	btfss	status,2,c
 18636  0189A0  D024               	goto	l7905
 18637                           
 18638                           ;stkvar	_u @ sp[(-6)+0]
 18639  0189A2  0EFA               	movlw	-6
 18640  0189A4  006F FF8C  F009    	movff	plusw1,btemp+8
 18641  0189AA  0EFB               	movlw	-5
 18642  0189AC  006F FF8C  F00A    	movff	plusw1,btemp+9
 18643  0189B2  0EFC               	movlw	-4
 18644  0189B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 18645  0189BA  0EFD               	movlw	-3
 18646  0189BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 18647  0189C2  0E09               	movlw	9
 18648  0189C4                     u5965:
 18649  0189C4  90D8               	bcf	status,0,c
 18650  0189C6  3609               	rlcf	(btemp+8)^0,f,c
 18651  0189C8  360A               	rlcf	(btemp+9)^0,f,c
 18652  0189CA  360B               	rlcf	(btemp+10)^0,f,c
 18653  0189CC  360C               	rlcf	(btemp+11)^0,f,c
 18654  0189CE  2EE8               	decfsz	wreg,f,c
 18655  0189D0  D7F9               	goto	u5965
 18656  0189D2  5009               	movf	(btemp+8)^0,w,c
 18657  0189D4  100A               	iorwf	(btemp+9)^0,w,c
 18658  0189D6  100B               	iorwf	(btemp+10)^0,w,c
 18659  0189D8  100C               	iorwf	(btemp+11)^0,w,c
 18660  0189DA  A4D8               	btfss	status,2,c
 18661  0189DC  D002               	goto	u5970
 18662  0189DE  0E01               	movlw	1
 18663  0189E0  D001               	goto	u5980
 18664  0189E2                     u5970:
 18665  0189E2  0E00               	movlw	0
 18666  0189E4                     u5980:
 18667  0189E4  6E01               	movwf	btemp^0,c
 18668  0189E6  6A02               	clrf	(btemp+1)^0,c
 18669  0189E8  D004               	goto	l3081
 18670  0189EA                     l7905:
 18671  0189EA  0E04               	movlw	4
 18672  0189EC                     L21:
 18673  0189EC  6E01               	movwf	btemp^0,c
 18674  0189EE  0E00               	movlw	0
 18675  0189F0  6E02               	movwf	(btemp+1)^0,c
 18676  0189F2                     l3081:
 18677                           
 18678                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 18679  0189F2  0EF6               	movlw	246
 18680  0189F4  26E1               	addwf	fsr1l,f,c
 18681  0189F6  0EFF               	movlw	255
 18682  0189F8  22E2               	addwfc	fsr1h,f,c
 18683  0189FA  0012               	return		;funcret
 18684  0189FC                     __end_of___fpclassifyf:
 18685                           	opt callstack 0
 18686                           
 18687 ;; *************** function ___fltol *****************
 18688 ;; Defined at:
 18689 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 18690 ;; Parameters:    Size  Location     Type
 18691 ;;  f1              4  [STACK] int 
 18692 ;; Auto vars:     Size  Location     Type
 18693 ;;  exp1            1  [STACK] unsigned char 
 18694 ;;  sign1           1  [STACK] unsigned char 
 18695 ;; Return value:  Size  Location     Type
 18696 ;;                  4  [STACK] long 
 18697 ;; Registers used:
 18698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 18699 ;; Tracked objects:
 18700 ;;		On entry : 0/0
 18701 ;;		On exit  : 0/0
 18702 ;;		Unchanged: 0/0
 18703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18708 ;;Total ram usage:        0 bytes
 18709 ;; Hardware stack levels used:    1
 18710 ;; Hardware stack levels required when called:   15
 18711 ;; This function calls:
 18712 ;;		Nothing
 18713 ;; This function is called by:
 18714 ;;		_main
 18715 ;;		_calc_bsoc
 18716 ;;		_init_bsoc
 18717 ;;		_Volts_to_SOC
 18718 ;;		_efgtoa
 18719 ;; This function uses a reentrant model
 18720 ;;
 18721                           
 18722                           	psect	text61
 18723  018D02                     __ptext61:
 18724                           	opt callstack 0
 18725  018D02                     ___fltol:
 18726                           	opt callstack 0
 18727                           
 18728                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18729  018D02  52E6               	movf	postinc1,f,c
 18730  018D04  52E6               	movf	postinc1,f,c
 18731                           
 18732                           ;stkvar	_f1 @ sp[(-2)+-4]
 18733                           
 18734                           ;incstack = 0
 18735 ;; hardware stack exceeded
 18736  018D06  0EFA               	movlw	-6
 18737  018D08  006F FF8C  F009    	movff	plusw1,btemp+8
 18738  018D0E  0EFB               	movlw	-5
 18739  018D10  006F FF8C  F00A    	movff	plusw1,btemp+9
 18740  018D16  0EFC               	movlw	-4
 18741  018D18  006F FF8C  F00B    	movff	plusw1,btemp+10
 18742  018D1E  0EFD               	movlw	-3
 18743  018D20  006F FF8C  F00C    	movff	plusw1,btemp+11
 18744  018D26  0E18               	movlw	24
 18745  018D28  D005               	goto	u7130
 18746  018D2A                     u7135:
 18747  018D2A  90D8               	bcf	status,0,c
 18748  018D2C  320C               	rrcf	(btemp+11)^0,f,c
 18749  018D2E  320B               	rrcf	(btemp+10)^0,f,c
 18750  018D30  320A               	rrcf	(btemp+9)^0,f,c
 18751  018D32  3209               	rrcf	(btemp+8)^0,f,c
 18752  018D34                     u7130:
 18753  018D34  2EE8               	decfsz	wreg,f,c
 18754  018D36  D7F9               	goto	u7135
 18755                           
 18756                           ;stkvar	_exp1 @ sp[(-2)+0]
 18757  018D38  0EFE               	movlw	-2
 18758  018D3A  0060  F027  FFE3   	movff	btemp+8,plusw1
 18759  018D40  0EFE               	movlw	-2
 18760  018D42  50E3               	movf	plusw1,w,c
 18761  018D44  A4D8               	btfss	status,2,c
 18762  018D46  D006               	goto	l8525
 18763  018D48                     u7140:
 18764  018D48  0E00               	movlw	0
 18765  018D4A  6E01               	movwf	btemp^0,c
 18766  018D4C  6A02               	clrf	(btemp+1)^0,c
 18767  018D4E  6A03               	clrf	(btemp+2)^0,c
 18768  018D50  6A04               	clrf	(btemp+3)^0,c
 18769  018D52  D08B               	goto	l2697
 18770  018D54                     l8525:
 18771                           
 18772                           ;stkvar	_f1 @ sp[(-2)+-4]
 18773  018D54  0EFA               	movlw	-6
 18774  018D56  006F FF8C  F009    	movff	plusw1,btemp+8
 18775  018D5C  0EFB               	movlw	-5
 18776  018D5E  006F FF8C  F00A    	movff	plusw1,btemp+9
 18777  018D64  0EFC               	movlw	-4
 18778  018D66  006F FF8C  F00B    	movff	plusw1,btemp+10
 18779  018D6C  0EFD               	movlw	-3
 18780  018D6E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18781  018D74  0E20               	movlw	32
 18782  018D76  D005               	goto	u7150
 18783  018D78                     u7155:
 18784  018D78  90D8               	bcf	status,0,c
 18785  018D7A  320C               	rrcf	(btemp+11)^0,f,c
 18786  018D7C  320B               	rrcf	(btemp+10)^0,f,c
 18787  018D7E  320A               	rrcf	(btemp+9)^0,f,c
 18788  018D80  3209               	rrcf	(btemp+8)^0,f,c
 18789  018D82                     u7150:
 18790  018D82  2EE8               	decfsz	wreg,f,c
 18791  018D84  D7F9               	goto	u7155
 18792                           
 18793                           ;stkvar	_sign1 @ sp[(-2)+1]
 18794  018D86  0EFF               	movlw	-1
 18795  018D88  0060  F027  FFE3   	movff	btemp+8,plusw1
 18796                           
 18797                           ;stkvar	_f1 @ sp[(-2)+-4]
 18798  018D8E  0EFC               	movlw	-4
 18799  018D90  8EE3               	bsf	plusw1,7,c
 18800                           
 18801                           ;stkvar	_f1 @ sp[(-2)+-4]
 18802  018D92  50E1               	movf	fsr1l,w,c
 18803  018D94  0FFA               	addlw	-6
 18804  018D96  6ED9               	movwf	fsr2l,c
 18805  018D98  50E2               	movf	fsr1h,w,c
 18806  018D9A  6EDA               	movwf	fsr2h,c
 18807  018D9C  0EFF               	movlw	255
 18808  018D9E  22DA               	addwfc	fsr2h,f,c
 18809  018DA0  0EFF               	movlw	255
 18810  018DA2  16DE               	andwf	postinc2,f,c
 18811  018DA4  0EFF               	movlw	255
 18812  018DA6  16DE               	andwf	postinc2,f,c
 18813  018DA8  0EFF               	movlw	255
 18814  018DAA  16DE               	andwf	postinc2,f,c
 18815  018DAC  0E00               	movlw	0
 18816  018DAE  16DE               	andwf	postinc2,f,c
 18817                           
 18818                           ;stkvar	_exp1 @ sp[(-2)+0]
 18819  018DB0  0EFE               	movlw	-2
 18820  018DB2  006F FF8C  F001    	movff	plusw1,btemp
 18821  018DB8  0E96               	movlw	150
 18822  018DBA  5E01               	subwf	btemp^0,f,c
 18823  018DBC  0EFE               	movlw	-2
 18824  018DBE  0060  F007  FFE3   	movff	btemp,plusw1
 18825                           
 18826                           ;stkvar	_exp1 @ sp[(-2)+0]
 18827  018DC4  0EFE               	movlw	-2
 18828  018DC6  AEE3               	btfss	plusw1,7,c
 18829  018DC8  D014               	goto	l8543
 18830                           
 18831                           ;stkvar	_exp1 @ sp[(-2)+0]
 18832  018DCA  0EFE               	movlw	-2
 18833  018DCC  50E3               	movf	plusw1,w,c
 18834  018DCE  0A80               	xorlw	128
 18835  018DD0  0F97               	addlw	151
 18836  018DD2  A0D8               	btfss	status,0,c
 18837  018DD4  D7B9               	goto	u7140
 18838  018DD6                     l8541:
 18839                           
 18840                           ;stkvar	_f1 @ sp[(-2)+-4]
 18841  018DD6  90D8               	bcf	status,0,c
 18842  018DD8  0EFD               	movlw	-3
 18843  018DDA  32E3               	rrcf	plusw1,f,c
 18844  018DDC  0EFC               	movlw	-4
 18845  018DDE  32E3               	rrcf	plusw1,f,c
 18846  018DE0  0EFB               	movlw	-5
 18847  018DE2  32E3               	rrcf	plusw1,f,c
 18848  018DE4  0EFA               	movlw	-6
 18849  018DE6  32E3               	rrcf	plusw1,f,c
 18850                           
 18851                           ;stkvar	_exp1 @ sp[(-2)+0]
 18852  018DE8  0EFE               	movlw	-2
 18853  018DEA  2AE3               	incf	plusw1,f,c
 18854  018DEC  B4D8               	btfsc	status,2,c
 18855  018DEE  D018               	goto	u7200
 18856  018DF0  D7F2               	goto	l8541
 18857  018DF2                     l8543:
 18858                           
 18859                           ;stkvar	_exp1 @ sp[(-2)+0]
 18860  018DF2  0EFE               	movlw	-2
 18861  018DF4  006F FF8C  F001    	movff	plusw1,btemp
 18862  018DFA  0E1F               	movlw	31
 18863  018DFC  6401               	cpfsgt	btemp^0,c
 18864  018DFE  D00C               	goto	l8551
 18865  018E00  D7A3               	goto	u7140
 18866  018E02                     l8549:
 18867                           
 18868                           ;stkvar	_f1 @ sp[(-2)+-4]
 18869  018E02  90D8               	bcf	status,0,c
 18870  018E04  0EFA               	movlw	-6
 18871  018E06  36E3               	rlcf	plusw1,f,c
 18872  018E08  0EFB               	movlw	-5
 18873  018E0A  36E3               	rlcf	plusw1,f,c
 18874  018E0C  0EFC               	movlw	-4
 18875  018E0E  36E3               	rlcf	plusw1,f,c
 18876  018E10  0EFD               	movlw	-3
 18877  018E12  36E3               	rlcf	plusw1,f,c
 18878                           
 18879                           ;stkvar	_exp1 @ sp[(-2)+0]
 18880  018E14  0EFE               	movlw	-2
 18881  018E16  06E3               	decf	plusw1,f,c
 18882  018E18                     l8551:
 18883                           
 18884                           ;stkvar	_exp1 @ sp[(-2)+0]
 18885  018E18  0EFE               	movlw	-2
 18886  018E1A  50E3               	movf	plusw1,w,c
 18887  018E1C  A4D8               	btfss	status,2,c
 18888  018E1E  D7F1               	goto	l8549
 18889  018E20                     u7200:
 18890                           
 18891                           ;stkvar	_sign1 @ sp[(-2)+1]
 18892  018E20  0EFF               	movlw	-1
 18893  018E22  50E3               	movf	plusw1,w,c
 18894  018E24  B4D8               	btfsc	status,2,c
 18895  018E26  D011               	goto	u7220
 18896                           
 18897                           ;stkvar	_f1 @ sp[(-2)+-4]
 18898                           ;stkvar	_f1 @ sp[(-2)+-4]
 18899  018E28  0EFA               	movlw	-6
 18900  018E2A  6CE3               	negf	plusw1,c
 18901  018E2C  0EFB               	movlw	-5
 18902  018E2E  1EE3               	comf	plusw1,f,c
 18903  018E30  0EFC               	movlw	-4
 18904  018E32  1EE3               	comf	plusw1,f,c
 18905  018E34  0EFD               	movlw	-3
 18906  018E36  1EE3               	comf	plusw1,f,c
 18907  018E38  E308               	bnc	u7220
 18908  018E3A  0EFB               	movlw	-5
 18909  018E3C  2AE3               	incf	plusw1,f,c
 18910  018E3E  E305               	bnc	u7220
 18911  018E40  0EFC               	movlw	-4
 18912  018E42  2AE3               	incf	plusw1,f,c
 18913  018E44  E302               	bnc	u7220
 18914  018E46  0EFD               	movlw	-3
 18915  018E48  2AE3               	incf	plusw1,f,c
 18916  018E4A                     u7220:
 18917                           
 18918                           ;stkvar	_f1 @ sp[(-2)+-4]
 18919  018E4A  0EFA               	movlw	-6
 18920  018E4C  006F FF8C  F001    	movff	plusw1,btemp
 18921  018E52  0EFB               	movlw	-5
 18922  018E54  006F FF8C  F002    	movff	plusw1,btemp+1
 18923  018E5A  0EFC               	movlw	-4
 18924  018E5C  006F FF8C  F003    	movff	plusw1,btemp+2
 18925  018E62  0EFD               	movlw	-3
 18926  018E64  006F FF8C  F004    	movff	plusw1,btemp+3
 18927  018E6A                     l2697:
 18928                           
 18929                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18930  018E6A  0EFA               	movlw	250
 18931  018E6C  26E1               	addwf	fsr1l,f,c
 18932  018E6E  0EFF               	movlw	255
 18933  018E70  22E2               	addwfc	fsr1h,f,c
 18934  018E72  0012               	return		;funcret
 18935  018E74                     __end_of___fltol:
 18936                           	opt callstack 0
 18937                           
 18938 ;; *************** function ___flneg *****************
 18939 ;; Defined at:
 18940 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 18941 ;; Parameters:    Size  Location     Type
 18942 ;;  f1              4  [STACK] long 
 18943 ;; Auto vars:     Size  Location     Type
 18944 ;;		None
 18945 ;; Return value:  Size  Location     Type
 18946 ;;                  4  [STACK] long 
 18947 ;; Registers used:
 18948 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18949 ;; Tracked objects:
 18950 ;;		On entry : 0/0
 18951 ;;		On exit  : 0/0
 18952 ;;		Unchanged: 0/0
 18953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18958 ;;Total ram usage:        0 bytes
 18959 ;; Hardware stack levels used:    1
 18960 ;; Hardware stack levels required when called:   15
 18961 ;; This function calls:
 18962 ;;		Nothing
 18963 ;; This function is called by:
 18964 ;;		_calc_bsoc
 18965 ;;		_efgtoa
 18966 ;; This function uses a reentrant model
 18967 ;;
 18968                           
 18969                           	psect	text62
 18970  01B1D6                     __ptext62:
 18971                           	opt callstack 0
 18972  01B1D6                     ___flneg:
 18973                           	opt callstack 0
 18974                           
 18975                           ;stkvar	_f1 @ sp[(0)+-4]
 18976                           
 18977                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18978                           ;incstack = 0
 18979 ;; hardware stack exceeded
 18980  01B1D6  0EFC               	movlw	-4
 18981  01B1D8  50E3               	movf	plusw1,w,c
 18982  01B1DA  E10A               	bnz	u7120
 18983  01B1DC  0EFD               	movlw	-3
 18984  01B1DE  50E3               	movf	plusw1,w,c
 18985  01B1E0  E107               	bnz	u7120
 18986  01B1E2  0EFE               	movlw	-2
 18987  01B1E4  50E3               	movf	plusw1,w,c
 18988  01B1E6  E104               	bnz	u7120
 18989  01B1E8  0EFF               	movlw	-1
 18990  01B1EA  50E3               	movf	plusw1,w,c
 18991  01B1EC  B4D8               	btfsc	status,2,c
 18992  01B1EE  D002               	goto	l8515
 18993  01B1F0                     u7120:
 18994                           
 18995                           ;stkvar	_f1 @ sp[(0)+-4]
 18996  01B1F0  0EFF               	movlw	-1
 18997  01B1F2  7EE3               	btg	plusw1,7,c
 18998  01B1F4                     l8515:
 18999                           
 19000                           ;stkvar	_f1 @ sp[(0)+-4]
 19001  01B1F4  0EFC               	movlw	-4
 19002  01B1F6  006F FF8C  F001    	movff	plusw1,btemp
 19003  01B1FC  0EFD               	movlw	-3
 19004  01B1FE  006F FF8C  F002    	movff	plusw1,btemp+1
 19005  01B204  0EFE               	movlw	-2
 19006  01B206  006F FF8C  F003    	movff	plusw1,btemp+2
 19007  01B20C  0EFF               	movlw	-1
 19008  01B20E  006F FF8C  F004    	movff	plusw1,btemp+3
 19009                           
 19010                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19011  01B214  52E5               	movf	postdec1,f,c
 19012  01B216  52E5               	movf	postdec1,f,c
 19013  01B218  52E5               	movf	postdec1,f,c
 19014  01B21A  52E5               	movf	postdec1,f,c
 19015  01B21C  0012               	return		;funcret
 19016  01B21E                     __end_of___flneg:
 19017                           	opt callstack 0
 19018                           
 19019 ;; *************** function ___fleq *****************
 19020 ;; Defined at:
 19021 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 19022 ;; Parameters:    Size  Location     Type
 19023 ;;  ff1             4  [STACK] long 
 19024 ;;  ff2             4  [STACK] long 
 19025 ;; Auto vars:     Size  Location     Type
 19026 ;;		None
 19027 ;; Return value:  Size  Location     Type
 19028 ;;		None               void
 19029 ;; Registers used:
 19030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19031 ;; Tracked objects:
 19032 ;;		On entry : 0/0
 19033 ;;		On exit  : 0/0
 19034 ;;		Unchanged: 0/0
 19035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19040 ;;Total ram usage:        0 bytes
 19041 ;; Hardware stack levels used:    1
 19042 ;; Hardware stack levels required when called:   15
 19043 ;; This function calls:
 19044 ;;		Nothing
 19045 ;; This function is called by:
 19046 ;;		_efgtoa
 19047 ;; This function uses a reentrant model
 19048 ;;
 19049                           
 19050                           	psect	text63
 19051  01A2EA                     __ptext63:
 19052                           	opt callstack 0
 19053  01A2EA                     ___fleq:
 19054                           	opt callstack 0
 19055                           
 19056                           ;stkvar	_ff1 @ sp[(0)+-4]
 19057                           
 19058                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19059                           ;incstack = 0
 19060 ;; hardware stack exceeded
 19061  01A2EA  50E1               	movf	fsr1l,w,c
 19062  01A2EC  0FFC               	addlw	-4
 19063  01A2EE  6ED9               	movwf	fsr2l,c
 19064  01A2F0  50E2               	movf	fsr1h,w,c
 19065  01A2F2  6EDA               	movwf	fsr2h,c
 19066  01A2F4  0EFF               	movlw	255
 19067  01A2F6  22DA               	addwfc	fsr2h,f,c
 19068  01A2F8  0E00               	movlw	0
 19069  01A2FA  14DE               	andwf	postinc2,w,c
 19070  01A2FC  6E09               	movwf	(btemp+8)^0,c
 19071  01A2FE  0E00               	movlw	0
 19072  01A300  14DE               	andwf	postinc2,w,c
 19073  01A302  6E0A               	movwf	(btemp+9)^0,c
 19074  01A304  0E80               	movlw	128
 19075  01A306  14DE               	andwf	postinc2,w,c
 19076  01A308  6E0B               	movwf	(btemp+10)^0,c
 19077  01A30A  0E7F               	movlw	127
 19078  01A30C  14DE               	andwf	postinc2,w,c
 19079  01A30E  6E0C               	movwf	(btemp+11)^0,c
 19080  01A310  5009               	movf	(btemp+8)^0,w,c
 19081  01A312  100A               	iorwf	(btemp+9)^0,w,c
 19082  01A314  100B               	iorwf	(btemp+10)^0,w,c
 19083  01A316  100C               	iorwf	(btemp+11)^0,w,c
 19084  01A318  A4D8               	btfss	status,2,c
 19085  01A31A  D008               	goto	l8473
 19086                           
 19087                           ;stkvar	_ff1 @ sp[(0)+-4]
 19088  01A31C  0EFC               	movlw	-4
 19089  01A31E  6AE3               	clrf	plusw1,c
 19090  01A320  0EFD               	movlw	-3
 19091  01A322  6AE3               	clrf	plusw1,c
 19092  01A324  0EFE               	movlw	-2
 19093  01A326  6AE3               	clrf	plusw1,c
 19094  01A328  0EFF               	movlw	-1
 19095  01A32A  6AE3               	clrf	plusw1,c
 19096  01A32C                     l8473:
 19097                           
 19098                           ;stkvar	_ff2 @ sp[(0)+-8]
 19099  01A32C  50E1               	movf	fsr1l,w,c
 19100  01A32E  0FF8               	addlw	-8
 19101  01A330  6ED9               	movwf	fsr2l,c
 19102  01A332  50E2               	movf	fsr1h,w,c
 19103  01A334  6EDA               	movwf	fsr2h,c
 19104  01A336  0EFF               	movlw	255
 19105  01A338  22DA               	addwfc	fsr2h,f,c
 19106  01A33A  0E00               	movlw	0
 19107  01A33C  14DE               	andwf	postinc2,w,c
 19108  01A33E  6E09               	movwf	(btemp+8)^0,c
 19109  01A340  0E00               	movlw	0
 19110  01A342  14DE               	andwf	postinc2,w,c
 19111  01A344  6E0A               	movwf	(btemp+9)^0,c
 19112  01A346  0E80               	movlw	128
 19113  01A348  14DE               	andwf	postinc2,w,c
 19114  01A34A  6E0B               	movwf	(btemp+10)^0,c
 19115  01A34C  0E7F               	movlw	127
 19116  01A34E  14DE               	andwf	postinc2,w,c
 19117  01A350  6E0C               	movwf	(btemp+11)^0,c
 19118  01A352  5009               	movf	(btemp+8)^0,w,c
 19119  01A354  100A               	iorwf	(btemp+9)^0,w,c
 19120  01A356  100B               	iorwf	(btemp+10)^0,w,c
 19121  01A358  100C               	iorwf	(btemp+11)^0,w,c
 19122  01A35A  A4D8               	btfss	status,2,c
 19123  01A35C  D008               	goto	l8477
 19124                           
 19125                           ;stkvar	_ff2 @ sp[(0)+-8]
 19126  01A35E  0EF8               	movlw	-8
 19127  01A360  6AE3               	clrf	plusw1,c
 19128  01A362  0EF9               	movlw	-7
 19129  01A364  6AE3               	clrf	plusw1,c
 19130  01A366  0EFA               	movlw	-6
 19131  01A368  6AE3               	clrf	plusw1,c
 19132  01A36A  0EFB               	movlw	-5
 19133  01A36C  6AE3               	clrf	plusw1,c
 19134  01A36E                     l8477:
 19135                           
 19136                           ;stkvar	_ff2 @ sp[(0)+-8]
 19137                           ;stkvar	_ff1 @ sp[(0)+-4]
 19138  01A36E  50E1               	movf	fsr1l,w,c
 19139  01A370  0FFC               	addlw	-4
 19140  01A372  6ED9               	movwf	fsr2l,c
 19141  01A374  50E2               	movf	fsr1h,w,c
 19142  01A376  6EDA               	movwf	fsr2h,c
 19143  01A378  0EFF               	movlw	255
 19144  01A37A  22DA               	addwfc	fsr2h,f,c
 19145  01A37C  0EF8               	movlw	-8
 19146  01A37E  50E3               	movf	plusw1,w,c
 19147  01A380  18DE               	xorwf	postinc2,w,c
 19148  01A382  E10D               	bnz	u7060
 19149  01A384  0EF9               	movlw	-7
 19150  01A386  50E3               	movf	plusw1,w,c
 19151  01A388  18DE               	xorwf	postinc2,w,c
 19152  01A38A  E109               	bnz	u7060
 19153  01A38C  0EFA               	movlw	-6
 19154  01A38E  50E3               	movf	plusw1,w,c
 19155  01A390  18DE               	xorwf	postinc2,w,c
 19156  01A392  E105               	bnz	u7060
 19157  01A394  0EFB               	movlw	-5
 19158  01A396  50E3               	movf	plusw1,w,c
 19159  01A398  18DE               	xorwf	postinc2,w,c
 19160  01A39A  B4D8               	btfsc	status,2,c
 19161  01A39C  D002               	goto	l8481
 19162  01A39E                     u7060:
 19163  01A39E  9001               	bcf	btemp& (0+255),0,c
 19164  01A3A0  D001               	goto	l2659
 19165  01A3A2                     l8481:
 19166  01A3A2  8001               	bsf	btemp& (0+255),0,c
 19167  01A3A4                     l2659:
 19168                           
 19169                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 19170  01A3A4  0EF8               	movlw	248
 19171  01A3A6  26E1               	addwf	fsr1l,f,c
 19172  01A3A8  0EFF               	movlw	255
 19173  01A3AA  22E2               	addwfc	fsr1h,f,c
 19174  01A3AC  0012               	return		;funcret
 19175  01A3AE                     __end_of___fleq:
 19176                           	opt callstack 0
 19177                           
 19178 ;; *************** function ___awmod *****************
 19179 ;; Defined at:
 19180 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 19181 ;; Parameters:    Size  Location     Type
 19182 ;;  dividend        2  [STACK] int 
 19183 ;;  divisor         2  [STACK] int 
 19184 ;; Auto vars:     Size  Location     Type
 19185 ;;  sign            1  [STACK] unsigned char 
 19186 ;;  counter         1  [STACK] unsigned char 
 19187 ;; Return value:  Size  Location     Type
 19188 ;;                  2  [STACK] int 
 19189 ;; Registers used:
 19190 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19191 ;; Tracked objects:
 19192 ;;		On entry : 0/0
 19193 ;;		On exit  : 0/0
 19194 ;;		Unchanged: 0/0
 19195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19200 ;;Total ram usage:        0 bytes
 19201 ;; Hardware stack levels used:    1
 19202 ;; Hardware stack levels required when called:   15
 19203 ;; This function calls:
 19204 ;;		Nothing
 19205 ;; This function is called by:
 19206 ;;		_efgtoa
 19207 ;; This function uses a reentrant model
 19208 ;;
 19209                           
 19210                           	psect	text64
 19211  019874                     __ptext64:
 19212                           	opt callstack 0
 19213  019874                     ___awmod:
 19214                           	opt callstack 0
 19215                           
 19216                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19217  019874  52E6               	movf	postinc1,f,c
 19218  019876  52E6               	movf	postinc1,f,c
 19219                           
 19220                           ;stkvar	_sign @ sp[(-2)+0]
 19221                           
 19222                           ;incstack = 0
 19223 ;; hardware stack exceeded
 19224  019878  0EFE               	movlw	-2
 19225  01987A  6AE3               	clrf	plusw1,c
 19226                           
 19227                           ;stkvar	_dividend @ sp[(-2)+-2]
 19228  01987C  0EFD               	movlw	-3
 19229  01987E  AEE3               	btfss	plusw1,7,c
 19230  019880  D009               	goto	l8439
 19231                           
 19232                           ;stkvar	_dividend @ sp[(-2)+-2]
 19233                           ;stkvar	_dividend @ sp[(-2)+-2]
 19234  019882  0EFC               	movlw	-4
 19235  019884  6CE3               	negf	plusw1,c
 19236  019886  0EFD               	movlw	-3
 19237  019888  1EE3               	comf	plusw1,f,c
 19238  01988A  B0D8               	btfsc	status,0,c
 19239  01988C  2AE3               	incf	plusw1,f,c
 19240                           
 19241                           ;stkvar	_sign @ sp[(-2)+0]
 19242  01988E  0EFE               	movlw	-2
 19243  019890  6AE3               	clrf	plusw1,c
 19244  019892  2AE3               	incf	plusw1,f,c
 19245  019894                     l8439:
 19246                           
 19247                           ;stkvar	_divisor @ sp[(-2)+-4]
 19248  019894  0EFB               	movlw	-5
 19249  019896  AEE3               	btfss	plusw1,7,c
 19250  019898  D006               	goto	l8443
 19251                           
 19252                           ;stkvar	_divisor @ sp[(-2)+-4]
 19253                           ;stkvar	_divisor @ sp[(-2)+-4]
 19254  01989A  0EFA               	movlw	-6
 19255  01989C  6CE3               	negf	plusw1,c
 19256  01989E  0EFB               	movlw	-5
 19257  0198A0  1EE3               	comf	plusw1,f,c
 19258  0198A2  B0D8               	btfsc	status,0,c
 19259  0198A4  2AE3               	incf	plusw1,f,c
 19260  0198A6                     l8443:
 19261                           
 19262                           ;stkvar	_divisor @ sp[(-2)+-4]
 19263  0198A6  0EFA               	movlw	-6
 19264  0198A8  006F FF8C  F001    	movff	plusw1,btemp
 19265  0198AE  0EFB               	movlw	-5
 19266  0198B0  50E3               	movf	plusw1,w,c
 19267  0198B2  1001               	iorwf	btemp^0,w,c
 19268  0198B4  B4D8               	btfsc	status,2,c
 19269  0198B6  D053               	goto	u7020
 19270                           
 19271                           ;stkvar	_counter @ sp[(-2)+1]
 19272  0198B8  0EFF               	movlw	-1
 19273  0198BA  6AE3               	clrf	plusw1,c
 19274  0198BC  D012               	goto	L22
 19275  0198BE                     l8447:
 19276                           
 19277                           ;stkvar	_divisor @ sp[(-2)+-4]
 19278  0198BE  0EFA               	movlw	-6
 19279  0198C0  50E3               	movf	plusw1,w,c
 19280  0198C2  90D8               	bcf	status,0,c
 19281  0198C4  34E8               	rlcf	wreg,w,c
 19282  0198C6  6E01               	movwf	btemp^0,c
 19283  0198C8  0EFA               	movlw	-6
 19284  0198CA  0060  F007  FFE3   	movff	btemp,plusw1
 19285  0198D0  0EFB               	movlw	-5
 19286  0198D2  50E3               	movf	plusw1,w,c
 19287  0198D4  34E8               	rlcf	wreg,w,c
 19288  0198D6  6E01               	movwf	btemp^0,c
 19289  0198D8  0EFB               	movlw	-5
 19290  0198DA  0060  F007  FFE3   	movff	btemp,plusw1
 19291                           
 19292                           ;stkvar	_counter @ sp[(-2)+1]
 19293  0198E0  0EFF               	movlw	-1
 19294  0198E2                     L22:
 19295  0198E2  2AE3               	incf	plusw1,f,c
 19296                           
 19297                           ;stkvar	_divisor @ sp[(-2)+-4]
 19298  0198E4  0EFB               	movlw	-5
 19299  0198E6  AEE3               	btfss	plusw1,7,c
 19300  0198E8  D7EA               	goto	l8447
 19301  0198EA                     u7000:
 19302                           
 19303                           ;stkvar	_divisor @ sp[(-2)+-4]
 19304  0198EA  0EFA               	movlw	-6
 19305  0198EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19306  0198F2  0EFB               	movlw	-5
 19307  0198F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 19308                           
 19309                           ;stkvar	_dividend @ sp[(-2)+-2]
 19310  0198FA  0EFC               	movlw	-4
 19311  0198FC  006F FF8C  F009    	movff	plusw1,btemp+8
 19312  019902  0EFD               	movlw	-3
 19313  019904  006F FF8C  F00A    	movff	plusw1,btemp+9
 19314  01990A  500B               	movf	(btemp+10)^0,w,c
 19315  01990C  5C09               	subwf	(btemp+8)^0,w,c
 19316  01990E  500C               	movf	(btemp+11)^0,w,c
 19317  019910  580A               	subwfb	(btemp+9)^0,w,c
 19318  019912  A0D8               	btfss	status,0,c
 19319  019914  D014               	goto	l8457
 19320                           
 19321                           ;stkvar	_divisor @ sp[(-2)+-4]
 19322                           ;stkvar	_dividend @ sp[(-2)+-2]
 19323  019916  0EFC               	movlw	-4
 19324  019918  50E3               	movf	plusw1,w,c
 19325  01991A  6E01               	movwf	btemp^0,c
 19326  01991C  0EFA               	movlw	-6
 19327  01991E  50E3               	movf	plusw1,w,c
 19328  019920  5E01               	subwf	btemp^0,f,c
 19329  019922  0EFC               	movlw	-4
 19330  019924  0060  F007  FFE3   	movff	btemp,plusw1
 19331  01992A  0EFD               	movlw	-3
 19332  01992C  50E3               	movf	plusw1,w,c
 19333  01992E  6E01               	movwf	btemp^0,c
 19334  019930  0EFB               	movlw	-5
 19335  019932  50E3               	movf	plusw1,w,c
 19336  019934  5A01               	subwfb	btemp^0,f,c
 19337  019936  0EFD               	movlw	-3
 19338  019938  0060  F007  FFE3   	movff	btemp,plusw1
 19339  01993E                     l8457:
 19340                           
 19341                           ;stkvar	_divisor @ sp[(-2)+-4]
 19342  01993E  90D8               	bcf	status,0,c
 19343  019940  0EFB               	movlw	-5
 19344  019942  32E3               	rrcf	plusw1,f,c
 19345  019944  0EFA               	movlw	-6
 19346  019946  32E3               	rrcf	plusw1,f,c
 19347                           
 19348                           ;stkvar	_counter @ sp[(-2)+1]
 19349  019948  0EFF               	movlw	-1
 19350  01994A  50E3               	movf	plusw1,w,c
 19351  01994C  6E01               	movwf	btemp^0,c
 19352  01994E  0E01               	movlw	1
 19353  019950  5E01               	subwf	btemp^0,f,c
 19354  019952  0EFF               	movlw	-1
 19355  019954  0060  F007  FFE3   	movff	btemp,plusw1
 19356  01995A  A4D8               	btfss	status,2,c
 19357  01995C  D7C6               	goto	u7000
 19358  01995E                     u7020:
 19359                           
 19360                           ;stkvar	_sign @ sp[(-2)+0]
 19361  01995E  0EFE               	movlw	-2
 19362  019960  50E3               	movf	plusw1,w,c
 19363  019962  B4D8               	btfsc	status,2,c
 19364  019964  D006               	goto	l8465
 19365                           
 19366                           ;stkvar	_dividend @ sp[(-2)+-2]
 19367                           ;stkvar	_dividend @ sp[(-2)+-2]
 19368  019966  0EFC               	movlw	-4
 19369  019968  6CE3               	negf	plusw1,c
 19370  01996A  0EFD               	movlw	-3
 19371  01996C  1EE3               	comf	plusw1,f,c
 19372  01996E  B0D8               	btfsc	status,0,c
 19373  019970  2AE3               	incf	plusw1,f,c
 19374  019972                     l8465:
 19375                           
 19376                           ;stkvar	_dividend @ sp[(-2)+-2]
 19377  019972  0EFC               	movlw	-4
 19378  019974  006F FF8C  F001    	movff	plusw1,btemp
 19379  01997A  0EFD               	movlw	-3
 19380  01997C  006F FF8C  F002    	movff	plusw1,btemp+1
 19381                           
 19382                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19383  019982  0EFA               	movlw	250
 19384  019984  26E1               	addwf	fsr1l,f,c
 19385  019986  0EFF               	movlw	255
 19386  019988  22E2               	addwfc	fsr1h,f,c
 19387  01998A  0012               	return		;funcret
 19388  01998C                     __end_of___awmod:
 19389                           	opt callstack 0
 19390                           
 19391 ;; *************** function ___awdiv *****************
 19392 ;; Defined at:
 19393 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 19394 ;; Parameters:    Size  Location     Type
 19395 ;;  dividend        2  [STACK] int 
 19396 ;;  divisor         2  [STACK] int 
 19397 ;; Auto vars:     Size  Location     Type
 19398 ;;  quotient        2  [STACK] int 
 19399 ;;  sign            1  [STACK] unsigned char 
 19400 ;;  counter         1  [STACK] unsigned char 
 19401 ;; Return value:  Size  Location     Type
 19402 ;;                  2  [STACK] int 
 19403 ;; Registers used:
 19404 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19405 ;; Tracked objects:
 19406 ;;		On entry : 0/0
 19407 ;;		On exit  : 0/0
 19408 ;;		Unchanged: 0/0
 19409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19414 ;;Total ram usage:        0 bytes
 19415 ;; Hardware stack levels used:    1
 19416 ;; Hardware stack levels required when called:   15
 19417 ;; This function calls:
 19418 ;;		Nothing
 19419 ;; This function is called by:
 19420 ;;		_efgtoa
 19421 ;; This function uses a reentrant model
 19422 ;;
 19423                           
 19424                           	psect	text65
 19425  01913A                     __ptext65:
 19426                           	opt callstack 0
 19427  01913A                     ___awdiv:
 19428                           	opt callstack 0
 19429                           
 19430                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19431  01913A  52E6               	movf	postinc1,f,c
 19432  01913C  52E6               	movf	postinc1,f,c
 19433  01913E  52E6               	movf	postinc1,f,c
 19434  019140  52E6               	movf	postinc1,f,c
 19435                           
 19436                           ;stkvar	_sign @ sp[(-4)+2]
 19437                           
 19438                           ;incstack = 0
 19439 ;; hardware stack exceeded
 19440  019142  0EFE               	movlw	-2
 19441  019144  6AE3               	clrf	plusw1,c
 19442                           
 19443                           ;stkvar	_divisor @ sp[(-4)+-4]
 19444  019146  0EF9               	movlw	-7
 19445  019148  AEE3               	btfss	plusw1,7,c
 19446  01914A  D009               	goto	l8393
 19447                           
 19448                           ;stkvar	_divisor @ sp[(-4)+-4]
 19449                           ;stkvar	_divisor @ sp[(-4)+-4]
 19450  01914C  0EF8               	movlw	-8
 19451  01914E  6CE3               	negf	plusw1,c
 19452  019150  0EF9               	movlw	-7
 19453  019152  1EE3               	comf	plusw1,f,c
 19454  019154  B0D8               	btfsc	status,0,c
 19455  019156  2AE3               	incf	plusw1,f,c
 19456                           
 19457                           ;stkvar	_sign @ sp[(-4)+2]
 19458  019158  0EFE               	movlw	-2
 19459  01915A  6AE3               	clrf	plusw1,c
 19460  01915C  2AE3               	incf	plusw1,f,c
 19461  01915E                     l8393:
 19462                           
 19463                           ;stkvar	_dividend @ sp[(-4)+-2]
 19464  01915E  0EFB               	movlw	-5
 19465  019160  AEE3               	btfss	plusw1,7,c
 19466  019162  D008               	goto	l8399
 19467                           
 19468                           ;stkvar	_dividend @ sp[(-4)+-2]
 19469                           ;stkvar	_dividend @ sp[(-4)+-2]
 19470  019164  0EFA               	movlw	-6
 19471  019166  6CE3               	negf	plusw1,c
 19472  019168  0EFB               	movlw	-5
 19473  01916A  1EE3               	comf	plusw1,f,c
 19474  01916C  B0D8               	btfsc	status,0,c
 19475  01916E  2AE3               	incf	plusw1,f,c
 19476                           
 19477                           ;stkvar	_sign @ sp[(-4)+2]
 19478  019170  0EFE               	movlw	-2
 19479  019172  70E3               	btg	plusw1,0,c
 19480  019174                     l8399:
 19481                           
 19482                           ;stkvar	_quotient @ sp[(-4)+0]
 19483  019174  0EFC               	movlw	-4
 19484  019176  6AE3               	clrf	plusw1,c
 19485  019178  0EFD               	movlw	-3
 19486  01917A  6AE3               	clrf	plusw1,c
 19487                           
 19488                           ;stkvar	_divisor @ sp[(-4)+-4]
 19489  01917C  0EF8               	movlw	-8
 19490  01917E  006F FF8C  F001    	movff	plusw1,btemp
 19491  019184  0EF9               	movlw	-7
 19492  019186  50E3               	movf	plusw1,w,c
 19493  019188  1001               	iorwf	btemp^0,w,c
 19494  01918A  B4D8               	btfsc	status,2,c
 19495  01918C  D066               	goto	u6950
 19496                           
 19497                           ;stkvar	_counter @ sp[(-4)+3]
 19498  01918E  0EFF               	movlw	-1
 19499  019190  6AE3               	clrf	plusw1,c
 19500  019192  D012               	goto	L23
 19501  019194                     l8405:
 19502                           
 19503                           ;stkvar	_divisor @ sp[(-4)+-4]
 19504  019194  0EF8               	movlw	-8
 19505  019196  50E3               	movf	plusw1,w,c
 19506  019198  90D8               	bcf	status,0,c
 19507  01919A  34E8               	rlcf	wreg,w,c
 19508  01919C  6E01               	movwf	btemp^0,c
 19509  01919E  0EF8               	movlw	-8
 19510  0191A0  0060  F007  FFE3   	movff	btemp,plusw1
 19511  0191A6  0EF9               	movlw	-7
 19512  0191A8  50E3               	movf	plusw1,w,c
 19513  0191AA  34E8               	rlcf	wreg,w,c
 19514  0191AC  6E01               	movwf	btemp^0,c
 19515  0191AE  0EF9               	movlw	-7
 19516  0191B0  0060  F007  FFE3   	movff	btemp,plusw1
 19517                           
 19518                           ;stkvar	_counter @ sp[(-4)+3]
 19519  0191B6  0EFF               	movlw	-1
 19520  0191B8                     L23:
 19521  0191B8  2AE3               	incf	plusw1,f,c
 19522                           
 19523                           ;stkvar	_divisor @ sp[(-4)+-4]
 19524  0191BA  0EF9               	movlw	-7
 19525  0191BC  AEE3               	btfss	plusw1,7,c
 19526  0191BE  D7EA               	goto	l8405
 19527  0191C0                     u6930:
 19528                           
 19529                           ;stkvar	_quotient @ sp[(-4)+0]
 19530  0191C0  0EFC               	movlw	-4
 19531  0191C2  50E3               	movf	plusw1,w,c
 19532  0191C4  90D8               	bcf	status,0,c
 19533  0191C6  34E8               	rlcf	wreg,w,c
 19534  0191C8  6E01               	movwf	btemp^0,c
 19535  0191CA  0EFC               	movlw	-4
 19536  0191CC  0060  F007  FFE3   	movff	btemp,plusw1
 19537  0191D2  0EFD               	movlw	-3
 19538  0191D4  50E3               	movf	plusw1,w,c
 19539  0191D6  34E8               	rlcf	wreg,w,c
 19540  0191D8  6E01               	movwf	btemp^0,c
 19541  0191DA  0EFD               	movlw	-3
 19542  0191DC  0060  F007  FFE3   	movff	btemp,plusw1
 19543                           
 19544                           ;stkvar	_divisor @ sp[(-4)+-4]
 19545  0191E2  0EF8               	movlw	-8
 19546  0191E4  006F FF8C  F00B    	movff	plusw1,btemp+10
 19547  0191EA  0EF9               	movlw	-7
 19548  0191EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 19549                           
 19550                           ;stkvar	_dividend @ sp[(-4)+-2]
 19551  0191F2  0EFA               	movlw	-6
 19552  0191F4  006F FF8C  F009    	movff	plusw1,btemp+8
 19553  0191FA  0EFB               	movlw	-5
 19554  0191FC  006F FF8C  F00A    	movff	plusw1,btemp+9
 19555  019202  500B               	movf	(btemp+10)^0,w,c
 19556  019204  5C09               	subwf	(btemp+8)^0,w,c
 19557  019206  500C               	movf	(btemp+11)^0,w,c
 19558  019208  580A               	subwfb	(btemp+9)^0,w,c
 19559  01920A  A0D8               	btfss	status,0,c
 19560  01920C  D016               	goto	l8419
 19561                           
 19562                           ;stkvar	_divisor @ sp[(-4)+-4]
 19563                           ;stkvar	_dividend @ sp[(-4)+-2]
 19564  01920E  0EFA               	movlw	-6
 19565  019210  50E3               	movf	plusw1,w,c
 19566  019212  6E01               	movwf	btemp^0,c
 19567  019214  0EF8               	movlw	-8
 19568  019216  50E3               	movf	plusw1,w,c
 19569  019218  5E01               	subwf	btemp^0,f,c
 19570  01921A  0EFA               	movlw	-6
 19571  01921C  0060  F007  FFE3   	movff	btemp,plusw1
 19572  019222  0EFB               	movlw	-5
 19573  019224  50E3               	movf	plusw1,w,c
 19574  019226  6E01               	movwf	btemp^0,c
 19575  019228  0EF9               	movlw	-7
 19576  01922A  50E3               	movf	plusw1,w,c
 19577  01922C  5A01               	subwfb	btemp^0,f,c
 19578  01922E  0EFB               	movlw	-5
 19579  019230  0060  F007  FFE3   	movff	btemp,plusw1
 19580                           
 19581                           ;stkvar	_quotient @ sp[(-4)+0]
 19582  019236  0EFC               	movlw	-4
 19583  019238  80E3               	bsf	plusw1,0,c
 19584  01923A                     l8419:
 19585                           
 19586                           ;stkvar	_divisor @ sp[(-4)+-4]
 19587  01923A  90D8               	bcf	status,0,c
 19588  01923C  0EF9               	movlw	-7
 19589  01923E  32E3               	rrcf	plusw1,f,c
 19590  019240  0EF8               	movlw	-8
 19591  019242  32E3               	rrcf	plusw1,f,c
 19592                           
 19593                           ;stkvar	_counter @ sp[(-4)+3]
 19594  019244  0EFF               	movlw	-1
 19595  019246  50E3               	movf	plusw1,w,c
 19596  019248  6E01               	movwf	btemp^0,c
 19597  01924A  0E01               	movlw	1
 19598  01924C  5E01               	subwf	btemp^0,f,c
 19599  01924E  0EFF               	movlw	-1
 19600  019250  0060  F007  FFE3   	movff	btemp,plusw1
 19601  019256  A4D8               	btfss	status,2,c
 19602  019258  D7B3               	goto	u6930
 19603  01925A                     u6950:
 19604                           
 19605                           ;stkvar	_sign @ sp[(-4)+2]
 19606  01925A  0EFE               	movlw	-2
 19607  01925C  50E3               	movf	plusw1,w,c
 19608  01925E  B4D8               	btfsc	status,2,c
 19609  019260  D006               	goto	l8427
 19610                           
 19611                           ;stkvar	_quotient @ sp[(-4)+0]
 19612                           ;stkvar	_quotient @ sp[(-4)+0]
 19613  019262  0EFC               	movlw	-4
 19614  019264  6CE3               	negf	plusw1,c
 19615  019266  0EFD               	movlw	-3
 19616  019268  1EE3               	comf	plusw1,f,c
 19617  01926A  B0D8               	btfsc	status,0,c
 19618  01926C  2AE3               	incf	plusw1,f,c
 19619  01926E                     l8427:
 19620                           
 19621                           ;stkvar	_quotient @ sp[(-4)+0]
 19622  01926E  0EFC               	movlw	-4
 19623  019270  006F FF8C  F001    	movff	plusw1,btemp
 19624  019276  0EFD               	movlw	-3
 19625  019278  006F FF8C  F002    	movff	plusw1,btemp+1
 19626                           
 19627                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19628  01927E  0EF8               	movlw	248
 19629  019280  26E1               	addwf	fsr1l,f,c
 19630  019282  0EFF               	movlw	255
 19631  019284  22E2               	addwfc	fsr1h,f,c
 19632  019286  0012               	return		;funcret
 19633  019288                     __end_of___awdiv:
 19634                           	opt callstack 0
 19635                           
 19636 ;; *************** function _dtoa *****************
 19637 ;; Defined at:
 19638 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19639 ;; Parameters:    Size  Location     Type
 19640 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19641 ;;		 -> f(6), NULL(0), 
 19642 ;;  d               8  [STACK] long long 
 19643 ;; Auto vars:     Size  Location     Type
 19644 ;;  n               8  [STACK] long long 
 19645 ;;  i               2  [STACK] int 
 19646 ;;  s               2  [STACK] int 
 19647 ;;  w               2  [STACK] int 
 19648 ;;  p               2  [STACK] int 
 19649 ;; Return value:  Size  Location     Type
 19650 ;;                  2  [STACK] int 
 19651 ;; Registers used:
 19652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19653 ;; Tracked objects:
 19654 ;;		On entry : 0/0
 19655 ;;		On exit  : 0/0
 19656 ;;		Unchanged: 0/0
 19657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19662 ;;Total ram usage:        0 bytes
 19663 ;; Hardware stack levels used:    1
 19664 ;; Hardware stack levels required when called:   20
 19665 ;; This function calls:
 19666 ;;		___aodiv
 19667 ;;		___aomod
 19668 ;;		_abs
 19669 ;;		_pad
 19670 ;; This function is called by:
 19671 ;;		_vfpfcnvrt
 19672 ;; This function uses a reentrant model
 19673 ;;
 19674                           
 19675                           	psect	text66
 19676  0154C6                     __ptext66:
 19677                           	opt callstack 0
 19678  0154C6                     _dtoa:
 19679                           	opt callstack 0
 19680                           
 19681                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19682  0154C6  0E12               	movlw	18
 19683  0154C8  26E1               	addwf	fsr1l,f,c
 19684  0154CA  0E00               	movlw	0
 19685  0154CC  22E2               	addwfc	fsr1h,f,c
 19686                           
 19687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19688                           ;stkvar	_d @ sp[(-18)+-10]
 19689                           
 19690                           ;incstack = 0
 19691 ;; hardware stack exceeded
 19692  0154CE  0EE4               	movlw	228
 19693  0154D0  24E1               	addwf	fsr1l,w,c
 19694  0154D2  6ED9               	movwf	fsr2l,c
 19695  0154D4  0EFF               	movlw	255
 19696  0154D6  20E2               	addwfc	fsr1h,w,c
 19697  0154D8  6EDA               	movwf	fsr2h,c
 19698                           
 19699                           ;stkvar	_n @ sp[(-18)+2]
 19700  0154DA  0E08               	movlw	8
 19701  0154DC  6E01               	movwf	btemp^0,c
 19702  0154DE  0EF0               	movlw	-16
 19703  0154E0                     us1083999:
 19704  0154E0  006F FF7B FFE3     	movff	postinc2,plusw1
 19705  0154E6  28E8               	incf	wreg,w,c
 19706  0154E8  2E01               	decfsz	btemp^0,f,c
 19707  0154EA  D7FA               	bra	us1083999
 19708                           
 19709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 19710                           ;stkvar	_n @ sp[(-18)+2]
 19711  0154EC  0EF7               	movlw	-9
 19712  0154EE  AEE3               	btfss	plusw1,7,c
 19713  0154F0  D002               	goto	u10840
 19714  0154F2  0E01               	movlw	1
 19715  0154F4  D001               	goto	u10850
 19716  0154F6                     u10840:
 19717  0154F6  0E00               	movlw	0
 19718  0154F8                     u10850:
 19719  0154F8  6E0B               	movwf	(btemp+10)^0,c
 19720  0154FA  6A0C               	clrf	(btemp+11)^0,c
 19721                           
 19722                           ;stkvar	_s @ sp[(-18)+12]
 19723  0154FC  0EFA               	movlw	-6
 19724  0154FE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19725  015504  0EFB               	movlw	-5
 19726  015506  0060  F033  FFE3   	movff	btemp+11,plusw1
 19727                           
 19728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19729                           ;stkvar	_s @ sp[(-18)+12]
 19730  01550C  0EFA               	movlw	-6
 19731  01550E  006F FF8C  F001    	movff	plusw1,btemp
 19732  015514  0EFB               	movlw	-5
 19733  015516  50E3               	movf	plusw1,w,c
 19734  015518  1001               	iorwf	btemp^0,w,c
 19735  01551A  B4D8               	btfsc	status,2,c
 19736  01551C  D025               	goto	u10870
 19737                           
 19738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 19739                           ;stkvar	_n @ sp[(-18)+2]
 19740                           ;stkvar	_n @ sp[(-18)+2]
 19741  01551E  0EF0               	movlw	-16
 19742  015520  6CE3               	negf	plusw1,c
 19743  015522  0EF1               	movlw	-15
 19744  015524  1EE3               	comf	plusw1,f,c
 19745  015526  0EF2               	movlw	-14
 19746  015528  1EE3               	comf	plusw1,f,c
 19747  01552A  0EF3               	movlw	-13
 19748  01552C  1EE3               	comf	plusw1,f,c
 19749  01552E  0EF4               	movlw	-12
 19750  015530  1EE3               	comf	plusw1,f,c
 19751  015532  0EF5               	movlw	-11
 19752  015534  1EE3               	comf	plusw1,f,c
 19753  015536  0EF6               	movlw	-10
 19754  015538  1EE3               	comf	plusw1,f,c
 19755  01553A  0EF7               	movlw	-9
 19756  01553C  1EE3               	comf	plusw1,f,c
 19757  01553E  E314               	bnc	u10870
 19758  015540  0EF1               	movlw	-15
 19759  015542  2AE3               	incf	plusw1,f,c
 19760  015544  E311               	bnc	u10870
 19761  015546  0EF2               	movlw	-14
 19762  015548  2AE3               	incf	plusw1,f,c
 19763  01554A  E30E               	bnc	u10870
 19764  01554C  0EF3               	movlw	-13
 19765  01554E  2AE3               	incf	plusw1,f,c
 19766  015550  E30B               	bnc	u10870
 19767  015552  0EF4               	movlw	-12
 19768  015554  2AE3               	incf	plusw1,f,c
 19769  015556  E308               	bnc	u10870
 19770  015558  0EF5               	movlw	-11
 19771  01555A  2AE3               	incf	plusw1,f,c
 19772  01555C  E305               	bnc	u10870
 19773  01555E  0EF6               	movlw	-10
 19774  015560  2AE3               	incf	plusw1,f,c
 19775  015562  E302               	bnc	u10870
 19776  015564  0EF7               	movlw	-9
 19777  015566  2AE3               	incf	plusw1,f,c
 19778  015568                     u10870:
 19779                           
 19780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19781  015568  AE3D               	btfss	(_prec+1)^0,7,c
 19782                           
 19783                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19784  01556A  923E               	bcf	_flags^0,1,c
 19785                           
 19786                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 19787  01556C  BE3D               	btfsc	(_prec+1)^0,7,c
 19788  01556E  D005               	goto	u10890
 19789  015570  503D               	movf	(_prec+1)^0,w,c
 19790  015572  E110               	bnz	l11749
 19791  015574  043C               	decf	_prec^0,w,c
 19792  015576  B0D8               	btfsc	status,0,c
 19793  015578  D00D               	goto	l11749
 19794  01557A                     u10890:
 19795  01557A  0E01               	movlw	1
 19796  01557C  6E0B               	movwf	(btemp+10)^0,c
 19797  01557E  0E00               	movlw	0
 19798  015580  6E0C               	movwf	(btemp+11)^0,c
 19799                           
 19800                           ;stkvar	_p @ sp[(-18)+16]
 19801  015582  0EFE               	movlw	-2
 19802  015584  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19803  01558A  0EFF               	movlw	-1
 19804  01558C  0060  F033  FFE3   	movff	btemp+11,plusw1
 19805  015592  D008               	goto	l2163
 19806  015594                     l11749:
 19807                           
 19808                           ;stkvar	_p @ sp[(-18)+16]
 19809  015594  0EFE               	movlw	-2
 19810  015596  0060  F0F3  FFE3   	movff	_prec,plusw1
 19811  01559C  0EFF               	movlw	-1
 19812  01559E  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 19813  0155A4                     l2163:
 19814                           
 19815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19816                           ;stkvar	_w @ sp[(-18)+14]
 19817  0155A4  0EFC               	movlw	-4
 19818  0155A6  0060  F0EB  FFE3   	movff	_width,plusw1
 19819  0155AC  0EFD               	movlw	-3
 19820  0155AE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 19821                           
 19822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19823                           ;stkvar	_s @ sp[(-18)+12]
 19824  0155B4  0EFA               	movlw	-6
 19825  0155B6  006F FF8C  F001    	movff	plusw1,btemp
 19826  0155BC  0EFB               	movlw	-5
 19827  0155BE  50E3               	movf	plusw1,w,c
 19828  0155C0  1001               	iorwf	btemp^0,w,c
 19829  0155C2  A4D8               	btfss	status,2,c
 19830  0155C4  D002               	goto	u10910
 19831  0155C6  A43E               	btfss	_flags^0,2,c
 19832  0155C8  D00A               	goto	l11757
 19833  0155CA                     u10910:
 19834                           
 19835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19836                           ;stkvar	_w @ sp[(-18)+14]
 19837  0155CA  50E1               	movf	fsr1l,w,c
 19838  0155CC  0FFC               	addlw	-4
 19839  0155CE  6ED9               	movwf	fsr2l,c
 19840  0155D0  50E2               	movf	fsr1h,w,c
 19841  0155D2  6EDA               	movwf	fsr2h,c
 19842  0155D4  0EFF               	movlw	255
 19843  0155D6  22DA               	addwfc	fsr2h,f,c
 19844  0155D8  06DE               	decf	postinc2,f,c
 19845  0155DA  0E00               	movlw	0
 19846  0155DC  5ADD               	subwfb	postdec2,f,c
 19847  0155DE                     l11757:
 19848                           
 19849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19850  0155DE  0E4F               	movlw	79
 19851  0155E0  6E0B               	movwf	(btemp+10)^0,c
 19852  0155E2  0E00               	movlw	0
 19853  0155E4  6E0C               	movwf	(btemp+11)^0,c
 19854                           
 19855                           ;stkvar	_i @ sp[(-18)+10]
 19856  0155E6  0EF8               	movlw	-8
 19857  0155E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19858  0155EE  0EF9               	movlw	-7
 19859  0155F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 19860                           
 19861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19862  0155F6  0102               	movlb	2	; () banked
 19863  0155F8  6BC5               	clrf	(_dbuf+79)& (0+255),b
 19864                           
 19865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19866  0155FA  D109               	goto	l11771
 19867  0155FC                     l11761:
 19868                           
 19869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19870                           ;stkvar	_i @ sp[(-18)+10]
 19871  0155FC  50E1               	movf	fsr1l,w,c
 19872  0155FE  0FF8               	addlw	-8
 19873  015600  6ED9               	movwf	fsr2l,c
 19874  015602  50E2               	movf	fsr1h,w,c
 19875  015604  6EDA               	movwf	fsr2h,c
 19876  015606  0EFF               	movlw	255
 19877  015608  22DA               	addwfc	fsr2h,f,c
 19878  01560A  06DE               	decf	postinc2,f,c
 19879  01560C  0E00               	movlw	0
 19880  01560E  5ADD               	subwfb	postdec2,f,c
 19881                           
 19882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19883  015610  0E0A               	movlw	10
 19884  015612  6EE6               	movwf	postinc1,c
 19885  015614  0E00               	movlw	0
 19886  015616  6EE6               	movwf	postinc1,c
 19887  015618  0E00               	movlw	0
 19888  01561A  6EE6               	movwf	postinc1,c
 19889  01561C  0E00               	movlw	0
 19890  01561E  6EE6               	movwf	postinc1,c
 19891  015620  0E00               	movlw	0
 19892  015622  6EE6               	movwf	postinc1,c
 19893  015624  0E00               	movlw	0
 19894  015626  6EE6               	movwf	postinc1,c
 19895  015628  0E00               	movlw	0
 19896  01562A  6EE6               	movwf	postinc1,c
 19897  01562C  0E00               	movlw	0
 19898  01562E  6EE6               	movwf	postinc1,c
 19899                           
 19900                           ;stkvar	_n @ sp[(-26)+2]
 19901  015630  50E1               	movf	fsr1l,w,c
 19902  015632  0FE8               	addlw	-24
 19903  015634  6ED9               	movwf	fsr2l,c
 19904  015636  50E2               	movf	fsr1h,w,c
 19905  015638  6EDA               	movwf	fsr2h,c
 19906  01563A  0EFF               	movlw	255
 19907  01563C  22DA               	addwfc	fsr2h,f,c
 19908  01563E  006F FF7B FFE6     	movff	postinc2,postinc1
 19909  015644  006F FF7B FFE6     	movff	postinc2,postinc1
 19910  01564A  006F FF7B FFE6     	movff	postinc2,postinc1
 19911  015650  006F FF7B FFE6     	movff	postinc2,postinc1
 19912  015656  006F FF7B FFE6     	movff	postinc2,postinc1
 19913  01565C  006F FF7B FFE6     	movff	postinc2,postinc1
 19914  015662  006F FF7B FFE6     	movff	postinc2,postinc1
 19915  015668  006F FF7B FFE6     	movff	postinc2,postinc1
 19916  01566E  EC47  F0BC         	call	___aomod	;wreg free
 19917  015672  52E5               	movf	postdec1,f,c
 19918  015674  006F FF9C  F018    	movff	indf1,btemp+23
 19919  01567A  52E5               	movf	postdec1,f,c
 19920  01567C  006F FF9C  F017    	movff	indf1,btemp+22
 19921  015682  52E5               	movf	postdec1,f,c
 19922  015684  006F FF9C  F016    	movff	indf1,btemp+21
 19923  01568A  52E5               	movf	postdec1,f,c
 19924  01568C  006F FF9C  F015    	movff	indf1,btemp+20
 19925  015692  52E5               	movf	postdec1,f,c
 19926  015694  006F FF9C  F014    	movff	indf1,btemp+19
 19927  01569A  52E5               	movf	postdec1,f,c
 19928  01569C  006F FF9C  F013    	movff	indf1,btemp+18
 19929  0156A2  52E5               	movf	postdec1,f,c
 19930  0156A4  006F FF9C  F012    	movff	indf1,btemp+17
 19931  0156AA  52E5               	movf	postdec1,f,c
 19932  0156AC  006F FF9C  F011    	movff	indf1,btemp+16
 19933  0156B2  0EF8               	movlw	248
 19934  0156B4  26E1               	addwf	fsr1l,f,c
 19935  0156B6  0EFF               	movlw	255
 19936  0156B8  22E2               	addwfc	fsr1h,f,c
 19937  0156BA  0060  F044  F00B   	movff	btemp+16,btemp+10
 19938  0156C0  0060  F048  F00C   	movff	btemp+17,btemp+11
 19939  0156C6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19940  0156CC  0060  F033  FFE6   	movff	btemp+11,postinc1
 19941  0156D2  EC9E  F0D9         	call	_abs	;wreg free
 19942  0156D6  0E30               	movlw	48
 19943  0156D8  2601               	addwf	btemp^0,f,c
 19944                           
 19945                           ;stkvar	_i @ sp[(-18)+10]
 19946  0156DA  0EF8               	movlw	-8
 19947  0156DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19948  0156E2  0EF9               	movlw	-7
 19949  0156E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 19950  0156EA  0E76               	movlw	low _dbuf
 19951  0156EC  240B               	addwf	(btemp+10)^0,w,c
 19952  0156EE  6ED9               	movwf	fsr2l,c
 19953  0156F0  0E02               	movlw	high _dbuf
 19954  0156F2  200C               	addwfc	(btemp+11)^0,w,c
 19955  0156F4  6EDA               	movwf	fsr2h,c
 19956  0156F6  0060  F007  FFDF   	movff	btemp,indf2
 19957                           
 19958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19959                           ;stkvar	_p @ sp[(-18)+16]
 19960  0156FC  50E1               	movf	fsr1l,w,c
 19961  0156FE  0FFE               	addlw	-2
 19962  015700  6ED9               	movwf	fsr2l,c
 19963  015702  50E2               	movf	fsr1h,w,c
 19964  015704  6EDA               	movwf	fsr2h,c
 19965  015706  0EFF               	movlw	255
 19966  015708  22DA               	addwfc	fsr2h,f,c
 19967  01570A  06DE               	decf	postinc2,f,c
 19968  01570C  0E00               	movlw	0
 19969  01570E  5ADD               	subwfb	postdec2,f,c
 19970                           
 19971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19972                           ;stkvar	_w @ sp[(-18)+14]
 19973  015710  50E1               	movf	fsr1l,w,c
 19974  015712  0FFC               	addlw	-4
 19975  015714  6ED9               	movwf	fsr2l,c
 19976  015716  50E2               	movf	fsr1h,w,c
 19977  015718  6EDA               	movwf	fsr2h,c
 19978  01571A  0EFF               	movlw	255
 19979  01571C  22DA               	addwfc	fsr2h,f,c
 19980  01571E  06DE               	decf	postinc2,f,c
 19981  015720  0E00               	movlw	0
 19982  015722  5ADD               	subwfb	postdec2,f,c
 19983                           
 19984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19985  015724  0E0A               	movlw	10
 19986  015726  6EE6               	movwf	postinc1,c
 19987  015728  0E00               	movlw	0
 19988  01572A  6EE6               	movwf	postinc1,c
 19989  01572C  0E00               	movlw	0
 19990  01572E  6EE6               	movwf	postinc1,c
 19991  015730  0E00               	movlw	0
 19992  015732  6EE6               	movwf	postinc1,c
 19993  015734  0E00               	movlw	0
 19994  015736  6EE6               	movwf	postinc1,c
 19995  015738  0E00               	movlw	0
 19996  01573A  6EE6               	movwf	postinc1,c
 19997  01573C  0E00               	movlw	0
 19998  01573E  6EE6               	movwf	postinc1,c
 19999  015740  0E00               	movlw	0
 20000  015742  6EE6               	movwf	postinc1,c
 20001                           
 20002                           ;stkvar	_n @ sp[(-26)+2]
 20003  015744  50E1               	movf	fsr1l,w,c
 20004  015746  0FE8               	addlw	-24
 20005  015748  6ED9               	movwf	fsr2l,c
 20006  01574A  50E2               	movf	fsr1h,w,c
 20007  01574C  6EDA               	movwf	fsr2h,c
 20008  01574E  0EFF               	movlw	255
 20009  015750  22DA               	addwfc	fsr2h,f,c
 20010  015752  006F FF7B FFE6     	movff	postinc2,postinc1
 20011  015758  006F FF7B FFE6     	movff	postinc2,postinc1
 20012  01575E  006F FF7B FFE6     	movff	postinc2,postinc1
 20013  015764  006F FF7B FFE6     	movff	postinc2,postinc1
 20014  01576A  006F FF7B FFE6     	movff	postinc2,postinc1
 20015  015770  006F FF7B FFE6     	movff	postinc2,postinc1
 20016  015776  006F FF7B FFE6     	movff	postinc2,postinc1
 20017  01577C  006F FF7B FFE6     	movff	postinc2,postinc1
 20018  015782  ECCD  F0B9         	call	___aodiv	;wreg free
 20019  015786  52E5               	movf	postdec1,f,c
 20020  015788  006F FF9C  F018    	movff	indf1,btemp+23
 20021  01578E  52E5               	movf	postdec1,f,c
 20022  015790  006F FF9C  F017    	movff	indf1,btemp+22
 20023  015796  52E5               	movf	postdec1,f,c
 20024  015798  006F FF9C  F016    	movff	indf1,btemp+21
 20025  01579E  52E5               	movf	postdec1,f,c
 20026  0157A0  006F FF9C  F015    	movff	indf1,btemp+20
 20027  0157A6  52E5               	movf	postdec1,f,c
 20028  0157A8  006F FF9C  F014    	movff	indf1,btemp+19
 20029  0157AE  52E5               	movf	postdec1,f,c
 20030  0157B0  006F FF9C  F013    	movff	indf1,btemp+18
 20031  0157B6  52E5               	movf	postdec1,f,c
 20032  0157B8  006F FF9C  F012    	movff	indf1,btemp+17
 20033  0157BE  52E5               	movf	postdec1,f,c
 20034  0157C0  006F FF9C  F011    	movff	indf1,btemp+16
 20035  0157C6  0EF8               	movlw	248
 20036  0157C8  26E1               	addwf	fsr1l,f,c
 20037  0157CA  0EFF               	movlw	255
 20038  0157CC  22E2               	addwfc	fsr1h,f,c
 20039                           
 20040                           ;stkvar	_n @ sp[(-18)+2]
 20041  0157CE  0EF0               	movlw	-16
 20042  0157D0  0060  F047  FFE3   	movff	btemp+16,plusw1
 20043  0157D6  0EF1               	movlw	-15
 20044  0157D8  0060  F04B  FFE3   	movff	btemp+17,plusw1
 20045  0157DE  0EF2               	movlw	-14
 20046  0157E0  0060  F04F  FFE3   	movff	btemp+18,plusw1
 20047  0157E6  0EF3               	movlw	-13
 20048  0157E8  0060  F053  FFE3   	movff	btemp+19,plusw1
 20049  0157EE  0EF4               	movlw	-12
 20050  0157F0  0060  F057  FFE3   	movff	btemp+20,plusw1
 20051  0157F6  0EF5               	movlw	-11
 20052  0157F8  0060  F05B  FFE3   	movff	btemp+21,plusw1
 20053  0157FE  0EF6               	movlw	-10
 20054  015800  0060  F05F  FFE3   	movff	btemp+22,plusw1
 20055  015806  0EF7               	movlw	-9
 20056  015808  0060  F063  FFE3   	movff	btemp+23,plusw1
 20057  01580E                     l11771:
 20058                           
 20059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20060                           ;stkvar	_i @ sp[(-18)+10]
 20061  01580E  0EF9               	movlw	-7
 20062  015810  BEE3               	btfsc	plusw1,7,c
 20063  015812  D036               	goto	u10960
 20064  015814  0EF9               	movlw	-7
 20065  015816  50E3               	movf	plusw1,w,c
 20066  015818  E104               	bnz	u10920
 20067  01581A  0EF8               	movlw	-8
 20068  01581C  04E3               	decf	plusw1,w,c
 20069  01581E  A0D8               	btfss	status,0,c
 20070  015820  D02F               	goto	u10960
 20071  015822                     u10920:
 20072                           
 20073                           ;stkvar	_n @ sp[(-18)+2]
 20074  015822  0EF0               	movlw	-16
 20075  015824  50E3               	movf	plusw1,w,c
 20076  015826  E115               	bnz	u10931
 20077  015828  0EF1               	movlw	-15
 20078  01582A  50E3               	movf	plusw1,w,c
 20079  01582C  E112               	bnz	u10931
 20080  01582E  0EF2               	movlw	-14
 20081  015830  50E3               	movf	plusw1,w,c
 20082  015832  E10F               	bnz	u10931
 20083  015834  0EF3               	movlw	-13
 20084  015836  50E3               	movf	plusw1,w,c
 20085  015838  E10C               	bnz	u10931
 20086  01583A  0EF4               	movlw	-12
 20087  01583C  50E3               	movf	plusw1,w,c
 20088  01583E  E109               	bnz	u10931
 20089  015840  0EF5               	movlw	-11
 20090  015842  50E3               	movf	plusw1,w,c
 20091  015844  E106               	bnz	u10931
 20092  015846  0EF6               	movlw	-10
 20093  015848  50E3               	movf	plusw1,w,c
 20094  01584A  E103               	bnz	u10931
 20095  01584C  0EF7               	movlw	-9
 20096  01584E  50E3               	movf	plusw1,w,c
 20097  015850  A4D8               	btfss	status,2,c
 20098  015852                     u10931:
 20099  015852  D6D4               	goto	l11761
 20100                           
 20101                           ;stkvar	_p @ sp[(-18)+16]
 20102  015854  0EFF               	movlw	-1
 20103  015856  BEE3               	btfsc	plusw1,7,c
 20104  015858  D007               	goto	u10940
 20105  01585A  0EFF               	movlw	-1
 20106  01585C  50E3               	movf	plusw1,w,c
 20107  01585E  E103               	bnz	u10941
 20108  015860  0EFE               	movlw	-2
 20109  015862  04E3               	decf	plusw1,w,c
 20110  015864  B0D8               	btfsc	status,0,c
 20111  015866                     u10941:
 20112  015866  D6CA               	goto	l11761
 20113  015868                     u10940:
 20114                           
 20115                           ;stkvar	_w @ sp[(-18)+14]
 20116  015868  0EFD               	movlw	-3
 20117  01586A  BEE3               	btfsc	plusw1,7,c
 20118  01586C  D009               	goto	u10960
 20119  01586E  0EFD               	movlw	-3
 20120  015870  50E3               	movf	plusw1,w,c
 20121  015872  E104               	bnz	u10950
 20122  015874  0EFC               	movlw	-4
 20123  015876  04E3               	decf	plusw1,w,c
 20124  015878  A0D8               	btfss	status,0,c
 20125  01587A  D002               	goto	u10960
 20126  01587C                     u10950:
 20127  01587C  B23E               	btfsc	_flags^0,1,c
 20128  01587E  D6BE               	goto	l11761
 20129  015880                     u10960:
 20130                           
 20131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 20132                           ;stkvar	_s @ sp[(-18)+12]
 20133  015880  0EFA               	movlw	-6
 20134  015882  006F FF8C  F001    	movff	plusw1,btemp
 20135  015888  0EFB               	movlw	-5
 20136  01588A  50E3               	movf	plusw1,w,c
 20137  01588C  1001               	iorwf	btemp^0,w,c
 20138  01588E  A4D8               	btfss	status,2,c
 20139  015890  D002               	goto	u10980
 20140  015892  A43E               	btfss	_flags^0,2,c
 20141  015894  D033               	goto	l11795
 20142  015896                     u10980:
 20143                           
 20144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 20145                           ;stkvar	_i @ sp[(-18)+10]
 20146  015896  50E1               	movf	fsr1l,w,c
 20147  015898  0FF8               	addlw	-8
 20148  01589A  6ED9               	movwf	fsr2l,c
 20149  01589C  50E2               	movf	fsr1h,w,c
 20150  01589E  6EDA               	movwf	fsr2h,c
 20151  0158A0  0EFF               	movlw	255
 20152  0158A2  22DA               	addwfc	fsr2h,f,c
 20153  0158A4  06DE               	decf	postinc2,f,c
 20154  0158A6  0E00               	movlw	0
 20155  0158A8  5ADD               	subwfb	postdec2,f,c
 20156                           
 20157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 20158                           ;stkvar	_s @ sp[(-18)+12]
 20159  0158AA  0EFA               	movlw	-6
 20160  0158AC  006F FF8C  F001    	movff	plusw1,btemp
 20161  0158B2  0EFB               	movlw	-5
 20162  0158B4  50E3               	movf	plusw1,w,c
 20163  0158B6  1001               	iorwf	btemp^0,w,c
 20164  0158B8  A4D8               	btfss	status,2,c
 20165  0158BA  D002               	goto	l11791
 20166  0158BC  0E2B               	movlw	43
 20167  0158BE  D001               	goto	L24
 20168  0158C0                     l11791:
 20169  0158C0  0E2D               	movlw	45
 20170  0158C2                     L24:
 20171  0158C2  6E0B               	movwf	(btemp+10)^0,c
 20172  0158C4  0E00               	movlw	0
 20173  0158C6  6E0C               	movwf	(btemp+11)^0,c
 20174                           
 20175                           ;stkvar	_dtoa$5469 @ sp[(-18)+0]
 20176  0158C8  0EEE               	movlw	-18
 20177  0158CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20178  0158D0  0EEF               	movlw	-17
 20179  0158D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 20180                           
 20181                           ;stkvar	_dtoa$5469 @ sp[(-18)+0]
 20182                           ;stkvar	_i @ sp[(-18)+10]
 20183  0158D8  0EF8               	movlw	-8
 20184  0158DA  006F FF8C  F00B    	movff	plusw1,btemp+10
 20185  0158E0  0EF9               	movlw	-7
 20186  0158E2  006F FF8C  F00C    	movff	plusw1,btemp+11
 20187  0158E8  0E76               	movlw	low _dbuf
 20188  0158EA  240B               	addwf	(btemp+10)^0,w,c
 20189  0158EC  6ED9               	movwf	fsr2l,c
 20190  0158EE  0E02               	movlw	high _dbuf
 20191  0158F0  200C               	addwfc	(btemp+11)^0,w,c
 20192  0158F2  6EDA               	movwf	fsr2h,c
 20193  0158F4  0EEE               	movlw	-18
 20194  0158F6  006F FF8F FFDF     	movff	plusw1,indf2
 20195  0158FC                     l11795:
 20196                           
 20197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 20198                           ;stkvar	_w @ sp[(-18)+14]
 20199  0158FC  0EFC               	movlw	-4
 20200  0158FE  006F FF8F FFE6     	movff	plusw1,postinc1
 20201  015904  006F FF8F FFE6     	movff	plusw1,postinc1
 20202                           
 20203                           ;stkvar	_i @ sp[(-20)+10]
 20204  01590A  0E76               	movlw	low _dbuf
 20205  01590C  6E0B               	movwf	(btemp+10)^0,c
 20206  01590E  0E02               	movlw	high _dbuf
 20207  015910  6E0C               	movwf	(btemp+11)^0,c
 20208  015912  0EF6               	movlw	-10
 20209  015914  50E3               	movf	plusw1,w,c
 20210  015916  260B               	addwf	(btemp+10)^0,f,c
 20211  015918  0EF7               	movlw	-9
 20212  01591A  50E3               	movf	plusw1,w,c
 20213  01591C  220C               	addwfc	(btemp+11)^0,f,c
 20214  01591E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20215  015924  0060  F033  FFE6   	movff	btemp+11,postinc1
 20216                           
 20217                           ;stkvar	_fp @ sp[(-22)+-2]
 20218  01592A  0EE8               	movlw	-24
 20219  01592C  006F FF8F FFE6     	movff	plusw1,postinc1
 20220  015932  006F FF8F FFE6     	movff	plusw1,postinc1
 20221  015938  ECC6  F0CC         	call	_pad	;wreg free
 20222                           
 20223                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 20224  01593C  0EE4               	movlw	228
 20225  01593E  26E1               	addwf	fsr1l,f,c
 20226  015940  0EFF               	movlw	255
 20227  015942  22E2               	addwfc	fsr1h,f,c
 20228  015944  0012               	return		;funcret
 20229  015946                     __end_of_dtoa:
 20230                           	opt callstack 0
 20231                           
 20232 ;; *************** function _abs *****************
 20233 ;; Defined at:
 20234 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 20235 ;; Parameters:    Size  Location     Type
 20236 ;;  a               2  [STACK] int 
 20237 ;; Auto vars:     Size  Location     Type
 20238 ;;		None
 20239 ;; Return value:  Size  Location     Type
 20240 ;;                  2  [STACK] int 
 20241 ;; Registers used:
 20242 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 20243 ;; Tracked objects:
 20244 ;;		On entry : 0/2
 20245 ;;		On exit  : 0/0
 20246 ;;		Unchanged: 0/0
 20247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20252 ;;Total ram usage:        0 bytes
 20253 ;; Hardware stack levels used:    1
 20254 ;; Hardware stack levels required when called:   15
 20255 ;; This function calls:
 20256 ;;		Nothing
 20257 ;; This function is called by:
 20258 ;;		_dtoa
 20259 ;; This function uses a reentrant model
 20260 ;;
 20261                           
 20262                           	psect	text67
 20263  01B33C                     __ptext67:
 20264                           	opt callstack 0
 20265  01B33C                     _abs:
 20266                           	opt callstack 0
 20267                           
 20268                           ;stkvar	_a @ sp[(0)+-2]
 20269                           
 20270                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20271                           ;incstack = 0
 20272 ;; hardware stack exceeded
 20273  01B33C  0EFF               	movlw	-1
 20274  01B33E  BEE3               	btfsc	plusw1,7,c
 20275  01B340  D007               	goto	u5910
 20276  01B342  0EFF               	movlw	-1
 20277  01B344  50E3               	movf	plusw1,w,c
 20278  01B346  E112               	bnz	l7881
 20279  01B348  0EFE               	movlw	-2
 20280  01B34A  04E3               	decf	plusw1,w,c
 20281  01B34C  B0D8               	btfsc	status,0,c
 20282  01B34E  D00E               	goto	l7881
 20283  01B350                     u5910:
 20284                           
 20285                           ;stkvar	_a @ sp[(0)+-2]
 20286  01B350  0EFE               	movlw	-2
 20287  01B352  006F FF8C  F001    	movff	plusw1,btemp
 20288  01B358  1E01               	comf	btemp^0,f,c
 20289  01B35A  0EFF               	movlw	-1
 20290  01B35C  006F FF8C  F002    	movff	plusw1,btemp+1
 20291  01B362  1E02               	comf	(btemp+1)^0,f,c
 20292  01B364  2A01               	incf	btemp^0,f,c
 20293  01B366  B4D8               	btfsc	status,2,c
 20294  01B368  2A02               	incf	(btemp+1)^0,f,c
 20295  01B36A  D008               	goto	l3089
 20296  01B36C                     l7881:
 20297                           
 20298                           ;stkvar	_a @ sp[(0)+-2]
 20299  01B36C  0EFE               	movlw	-2
 20300  01B36E  006F FF8C  F001    	movff	plusw1,btemp
 20301  01B374  0EFF               	movlw	-1
 20302  01B376  006F FF8C  F002    	movff	plusw1,btemp+1
 20303  01B37C                     l3089:
 20304                           
 20305                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 20306  01B37C  52E5               	movf	postdec1,f,c
 20307  01B37E  52E5               	movf	postdec1,f,c
 20308  01B380  0012               	return		;funcret
 20309  01B382                     __end_of_abs:
 20310                           	opt callstack 0
 20311                           
 20312 ;; *************** function ___aomod *****************
 20313 ;; Defined at:
 20314 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 20315 ;; Parameters:    Size  Location     Type
 20316 ;;  dividend        8  [STACK] long long 
 20317 ;;  divisor         8  [STACK] long long 
 20318 ;; Auto vars:     Size  Location     Type
 20319 ;;  sign            1  [STACK] unsigned char 
 20320 ;;  counter         1  [STACK] unsigned char 
 20321 ;; Return value:  Size  Location     Type
 20322 ;;                  8  [STACK] long long 
 20323 ;; Registers used:
 20324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20325 ;; Tracked objects:
 20326 ;;		On entry : 0/2
 20327 ;;		On exit  : 0/0
 20328 ;;		Unchanged: 0/0
 20329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20334 ;;Total ram usage:        0 bytes
 20335 ;; Hardware stack levels used:    1
 20336 ;; Hardware stack levels required when called:   15
 20337 ;; This function calls:
 20338 ;;		Nothing
 20339 ;; This function is called by:
 20340 ;;		_dtoa
 20341 ;; This function uses a reentrant model
 20342 ;;
 20343                           
 20344                           	psect	text68
 20345  01788E                     __ptext68:
 20346                           	opt callstack 0
 20347  01788E                     ___aomod:
 20348                           	opt callstack 0
 20349                           
 20350                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 20351  01788E  52E6               	movf	postinc1,f,c
 20352  017890  52E6               	movf	postinc1,f,c
 20353                           
 20354                           ;stkvar	_sign @ sp[(-2)+0]
 20355                           
 20356                           ;incstack = 0
 20357 ;; hardware stack exceeded
 20358  017892  0EFE               	movlw	-2
 20359  017894  6AE3               	clrf	plusw1,c
 20360                           
 20361                           ;stkvar	_dividend @ sp[(-2)+-8]
 20362  017896  0EFD               	movlw	-3
 20363  017898  AEE3               	btfss	plusw1,7,c
 20364  01789A  D028               	goto	l8039
 20365                           
 20366                           ;stkvar	_dividend @ sp[(-2)+-8]
 20367                           ;stkvar	_dividend @ sp[(-2)+-8]
 20368  01789C  0EF6               	movlw	-10
 20369  01789E  6CE3               	negf	plusw1,c
 20370  0178A0  0EF7               	movlw	-9
 20371  0178A2  1EE3               	comf	plusw1,f,c
 20372  0178A4  0EF8               	movlw	-8
 20373  0178A6  1EE3               	comf	plusw1,f,c
 20374  0178A8  0EF9               	movlw	-7
 20375  0178AA  1EE3               	comf	plusw1,f,c
 20376  0178AC  0EFA               	movlw	-6
 20377  0178AE  1EE3               	comf	plusw1,f,c
 20378  0178B0  0EFB               	movlw	-5
 20379  0178B2  1EE3               	comf	plusw1,f,c
 20380  0178B4  0EFC               	movlw	-4
 20381  0178B6  1EE3               	comf	plusw1,f,c
 20382  0178B8  0EFD               	movlw	-3
 20383  0178BA  1EE3               	comf	plusw1,f,c
 20384  0178BC  E314               	bnc	u6340
 20385  0178BE  0EF7               	movlw	-9
 20386  0178C0  2AE3               	incf	plusw1,f,c
 20387  0178C2  E311               	bnc	u6340
 20388  0178C4  0EF8               	movlw	-8
 20389  0178C6  2AE3               	incf	plusw1,f,c
 20390  0178C8  E30E               	bnc	u6340
 20391  0178CA  0EF9               	movlw	-7
 20392  0178CC  2AE3               	incf	plusw1,f,c
 20393  0178CE  E30B               	bnc	u6340
 20394  0178D0  0EFA               	movlw	-6
 20395  0178D2  2AE3               	incf	plusw1,f,c
 20396  0178D4  E308               	bnc	u6340
 20397  0178D6  0EFB               	movlw	-5
 20398  0178D8  2AE3               	incf	plusw1,f,c
 20399  0178DA  E305               	bnc	u6340
 20400  0178DC  0EFC               	movlw	-4
 20401  0178DE  2AE3               	incf	plusw1,f,c
 20402  0178E0  E302               	bnc	u6340
 20403  0178E2  0EFD               	movlw	-3
 20404  0178E4  2AE3               	incf	plusw1,f,c
 20405  0178E6                     u6340:
 20406                           
 20407                           ;stkvar	_sign @ sp[(-2)+0]
 20408  0178E6  0EFE               	movlw	-2
 20409  0178E8  6AE3               	clrf	plusw1,c
 20410  0178EA  2AE3               	incf	plusw1,f,c
 20411  0178EC                     l8039:
 20412                           
 20413                           ;stkvar	_divisor @ sp[(-2)+-16]
 20414  0178EC  0EF5               	movlw	-11
 20415  0178EE  AEE3               	btfss	plusw1,7,c
 20416  0178F0  D025               	goto	u6360
 20417                           
 20418                           ;stkvar	_divisor @ sp[(-2)+-16]
 20419                           ;stkvar	_divisor @ sp[(-2)+-16]
 20420  0178F2  0EEE               	movlw	-18
 20421  0178F4  6CE3               	negf	plusw1,c
 20422  0178F6  0EEF               	movlw	-17
 20423  0178F8  1EE3               	comf	plusw1,f,c
 20424  0178FA  0EF0               	movlw	-16
 20425  0178FC  1EE3               	comf	plusw1,f,c
 20426  0178FE  0EF1               	movlw	-15
 20427  017900  1EE3               	comf	plusw1,f,c
 20428  017902  0EF2               	movlw	-14
 20429  017904  1EE3               	comf	plusw1,f,c
 20430  017906  0EF3               	movlw	-13
 20431  017908  1EE3               	comf	plusw1,f,c
 20432  01790A  0EF4               	movlw	-12
 20433  01790C  1EE3               	comf	plusw1,f,c
 20434  01790E  0EF5               	movlw	-11
 20435  017910  1EE3               	comf	plusw1,f,c
 20436  017912  E314               	bnc	u6360
 20437  017914  0EEF               	movlw	-17
 20438  017916  2AE3               	incf	plusw1,f,c
 20439  017918  E311               	bnc	u6360
 20440  01791A  0EF0               	movlw	-16
 20441  01791C  2AE3               	incf	plusw1,f,c
 20442  01791E  E30E               	bnc	u6360
 20443  017920  0EF1               	movlw	-15
 20444  017922  2AE3               	incf	plusw1,f,c
 20445  017924  E30B               	bnc	u6360
 20446  017926  0EF2               	movlw	-14
 20447  017928  2AE3               	incf	plusw1,f,c
 20448  01792A  E308               	bnc	u6360
 20449  01792C  0EF3               	movlw	-13
 20450  01792E  2AE3               	incf	plusw1,f,c
 20451  017930  E305               	bnc	u6360
 20452  017932  0EF4               	movlw	-12
 20453  017934  2AE3               	incf	plusw1,f,c
 20454  017936  E302               	bnc	u6360
 20455  017938  0EF5               	movlw	-11
 20456  01793A  2AE3               	incf	plusw1,f,c
 20457  01793C                     u6360:
 20458                           
 20459                           ;stkvar	_divisor @ sp[(-2)+-16]
 20460  01793C  0EEE               	movlw	-18
 20461  01793E  50E3               	movf	plusw1,w,c
 20462  017940  E116               	bnz	u6370
 20463  017942  0EEF               	movlw	-17
 20464  017944  50E3               	movf	plusw1,w,c
 20465  017946  E113               	bnz	u6370
 20466  017948  0EF0               	movlw	-16
 20467  01794A  50E3               	movf	plusw1,w,c
 20468  01794C  E110               	bnz	u6370
 20469  01794E  0EF1               	movlw	-15
 20470  017950  50E3               	movf	plusw1,w,c
 20471  017952  E10D               	bnz	u6370
 20472  017954  0EF2               	movlw	-14
 20473  017956  50E3               	movf	plusw1,w,c
 20474  017958  E10A               	bnz	u6370
 20475  01795A  0EF3               	movlw	-13
 20476  01795C  50E3               	movf	plusw1,w,c
 20477  01795E  E107               	bnz	u6370
 20478  017960  0EF4               	movlw	-12
 20479  017962  50E3               	movf	plusw1,w,c
 20480  017964  E104               	bnz	u6370
 20481  017966  0EF5               	movlw	-11
 20482  017968  50E3               	movf	plusw1,w,c
 20483  01796A  B4D8               	btfsc	status,2,c
 20484  01796C  D075               	goto	u6400
 20485  01796E                     u6370:
 20486                           
 20487                           ;stkvar	_counter @ sp[(-2)+1]
 20488  01796E  0EFF               	movlw	-1
 20489  017970  6AE3               	clrf	plusw1,c
 20490  017972  D012               	goto	L25
 20491  017974                     l8047:
 20492                           
 20493                           ;stkvar	_divisor @ sp[(-2)+-16]
 20494  017974  90D8               	bcf	status,0,c
 20495  017976  0EEE               	movlw	-18
 20496  017978  36E3               	rlcf	plusw1,f,c
 20497  01797A  0EEF               	movlw	-17
 20498  01797C  36E3               	rlcf	plusw1,f,c
 20499  01797E  0EF0               	movlw	-16
 20500  017980  36E3               	rlcf	plusw1,f,c
 20501  017982  0EF1               	movlw	-15
 20502  017984  36E3               	rlcf	plusw1,f,c
 20503  017986  0EF2               	movlw	-14
 20504  017988  36E3               	rlcf	plusw1,f,c
 20505  01798A  0EF3               	movlw	-13
 20506  01798C  36E3               	rlcf	plusw1,f,c
 20507  01798E  0EF4               	movlw	-12
 20508  017990  36E3               	rlcf	plusw1,f,c
 20509  017992  0EF5               	movlw	-11
 20510  017994  36E3               	rlcf	plusw1,f,c
 20511                           
 20512                           ;stkvar	_counter @ sp[(-2)+1]
 20513  017996  0EFF               	movlw	-1
 20514  017998                     L25:
 20515  017998  2AE3               	incf	plusw1,f,c
 20516                           
 20517                           ;stkvar	_divisor @ sp[(-2)+-16]
 20518  01799A  0EF5               	movlw	-11
 20519  01799C  AEE3               	btfss	plusw1,7,c
 20520  01799E  D7EA               	goto	l8047
 20521  0179A0                     u6380:
 20522                           
 20523                           ;stkvar	_divisor @ sp[(-2)+-16]
 20524                           ;stkvar	_dividend @ sp[(-2)+-8]
 20525  0179A0  50E1               	movf	fsr1l,w,c
 20526  0179A2  0FF6               	addlw	-10
 20527  0179A4  6ED9               	movwf	fsr2l,c
 20528  0179A6  50E2               	movf	fsr1h,w,c
 20529  0179A8  6EDA               	movwf	fsr2h,c
 20530  0179AA  0EFF               	movlw	255
 20531  0179AC  22DA               	addwfc	fsr2h,f,c
 20532  0179AE  0EEE               	movlw	-18
 20533  0179B0  50E3               	movf	plusw1,w,c
 20534  0179B2  5CDE               	subwf	postinc2,w,c
 20535  0179B4  0EEF               	movlw	-17
 20536  0179B6  50E3               	movf	plusw1,w,c
 20537  0179B8  58DE               	subwfb	postinc2,w,c
 20538  0179BA  0EF0               	movlw	-16
 20539  0179BC  50E3               	movf	plusw1,w,c
 20540  0179BE  58DE               	subwfb	postinc2,w,c
 20541  0179C0  0EF1               	movlw	-15
 20542  0179C2  50E3               	movf	plusw1,w,c
 20543  0179C4  58DE               	subwfb	postinc2,w,c
 20544  0179C6  0EF2               	movlw	-14
 20545  0179C8  50E3               	movf	plusw1,w,c
 20546  0179CA  58DE               	subwfb	postinc2,w,c
 20547  0179CC  0EF3               	movlw	-13
 20548  0179CE  50E3               	movf	plusw1,w,c
 20549  0179D0  58DE               	subwfb	postinc2,w,c
 20550  0179D2  0EF4               	movlw	-12
 20551  0179D4  50E3               	movf	plusw1,w,c
 20552  0179D6  58DE               	subwfb	postinc2,w,c
 20553  0179D8  0EF5               	movlw	-11
 20554  0179DA  50E3               	movf	plusw1,w,c
 20555  0179DC  58DE               	subwfb	postinc2,w,c
 20556  0179DE  A0D8               	btfss	status,0,c
 20557  0179E0  D01F               	goto	l8055
 20558                           
 20559                           ;stkvar	_divisor @ sp[(-2)+-16]
 20560                           ;stkvar	_dividend @ sp[(-2)+-8]
 20561  0179E2  50E1               	movf	fsr1l,w,c
 20562  0179E4  0FF6               	addlw	-10
 20563  0179E6  6ED9               	movwf	fsr2l,c
 20564  0179E8  50E2               	movf	fsr1h,w,c
 20565  0179EA  6EDA               	movwf	fsr2h,c
 20566  0179EC  0EFF               	movlw	255
 20567  0179EE  22DA               	addwfc	fsr2h,f,c
 20568  0179F0  0EEE               	movlw	-18
 20569  0179F2  50E3               	movf	plusw1,w,c
 20570  0179F4  5EDE               	subwf	postinc2,f,c
 20571  0179F6  0EEF               	movlw	-17
 20572  0179F8  50E3               	movf	plusw1,w,c
 20573  0179FA  5ADE               	subwfb	postinc2,f,c
 20574  0179FC  0EF0               	movlw	-16
 20575  0179FE  50E3               	movf	plusw1,w,c
 20576  017A00  5ADE               	subwfb	postinc2,f,c
 20577  017A02  0EF1               	movlw	-15
 20578  017A04  50E3               	movf	plusw1,w,c
 20579  017A06  5ADE               	subwfb	postinc2,f,c
 20580  017A08  0EF2               	movlw	-14
 20581  017A0A  50E3               	movf	plusw1,w,c
 20582  017A0C  5ADE               	subwfb	postinc2,f,c
 20583  017A0E  0EF3               	movlw	-13
 20584  017A10  50E3               	movf	plusw1,w,c
 20585  017A12  5ADE               	subwfb	postinc2,f,c
 20586  017A14  0EF4               	movlw	-12
 20587  017A16  50E3               	movf	plusw1,w,c
 20588  017A18  5ADE               	subwfb	postinc2,f,c
 20589  017A1A  0EF5               	movlw	-11
 20590  017A1C  50E3               	movf	plusw1,w,c
 20591  017A1E  5ADE               	subwfb	postinc2,f,c
 20592  017A20                     l8055:
 20593                           
 20594                           ;stkvar	_divisor @ sp[(-2)+-16]
 20595  017A20  90D8               	bcf	status,0,c
 20596  017A22  0EF5               	movlw	-11
 20597  017A24  32E3               	rrcf	plusw1,f,c
 20598  017A26  0EF4               	movlw	-12
 20599  017A28  32E3               	rrcf	plusw1,f,c
 20600  017A2A  0EF3               	movlw	-13
 20601  017A2C  32E3               	rrcf	plusw1,f,c
 20602  017A2E  0EF2               	movlw	-14
 20603  017A30  32E3               	rrcf	plusw1,f,c
 20604  017A32  0EF1               	movlw	-15
 20605  017A34  32E3               	rrcf	plusw1,f,c
 20606  017A36  0EF0               	movlw	-16
 20607  017A38  32E3               	rrcf	plusw1,f,c
 20608  017A3A  0EEF               	movlw	-17
 20609  017A3C  32E3               	rrcf	plusw1,f,c
 20610  017A3E  0EEE               	movlw	-18
 20611  017A40  32E3               	rrcf	plusw1,f,c
 20612                           
 20613                           ;stkvar	_counter @ sp[(-2)+1]
 20614  017A42  0EFF               	movlw	-1
 20615  017A44  50E3               	movf	plusw1,w,c
 20616  017A46  6E01               	movwf	btemp^0,c
 20617  017A48  0E01               	movlw	1
 20618  017A4A  5E01               	subwf	btemp^0,f,c
 20619  017A4C  0EFF               	movlw	-1
 20620  017A4E  0060  F007  FFE3   	movff	btemp,plusw1
 20621  017A54  A4D8               	btfss	status,2,c
 20622  017A56  D7A4               	goto	u6380
 20623  017A58                     u6400:
 20624                           
 20625                           ;stkvar	_sign @ sp[(-2)+0]
 20626  017A58  0EFE               	movlw	-2
 20627  017A5A  50E3               	movf	plusw1,w,c
 20628  017A5C  B4D8               	btfsc	status,2,c
 20629  017A5E  D025               	goto	u6420
 20630                           
 20631                           ;stkvar	_dividend @ sp[(-2)+-8]
 20632                           ;stkvar	_dividend @ sp[(-2)+-8]
 20633  017A60  0EF6               	movlw	-10
 20634  017A62  6CE3               	negf	plusw1,c
 20635  017A64  0EF7               	movlw	-9
 20636  017A66  1EE3               	comf	plusw1,f,c
 20637  017A68  0EF8               	movlw	-8
 20638  017A6A  1EE3               	comf	plusw1,f,c
 20639  017A6C  0EF9               	movlw	-7
 20640  017A6E  1EE3               	comf	plusw1,f,c
 20641  017A70  0EFA               	movlw	-6
 20642  017A72  1EE3               	comf	plusw1,f,c
 20643  017A74  0EFB               	movlw	-5
 20644  017A76  1EE3               	comf	plusw1,f,c
 20645  017A78  0EFC               	movlw	-4
 20646  017A7A  1EE3               	comf	plusw1,f,c
 20647  017A7C  0EFD               	movlw	-3
 20648  017A7E  1EE3               	comf	plusw1,f,c
 20649  017A80  E314               	bnc	u6420
 20650  017A82  0EF7               	movlw	-9
 20651  017A84  2AE3               	incf	plusw1,f,c
 20652  017A86  E311               	bnc	u6420
 20653  017A88  0EF8               	movlw	-8
 20654  017A8A  2AE3               	incf	plusw1,f,c
 20655  017A8C  E30E               	bnc	u6420
 20656  017A8E  0EF9               	movlw	-7
 20657  017A90  2AE3               	incf	plusw1,f,c
 20658  017A92  E30B               	bnc	u6420
 20659  017A94  0EFA               	movlw	-6
 20660  017A96  2AE3               	incf	plusw1,f,c
 20661  017A98  E308               	bnc	u6420
 20662  017A9A  0EFB               	movlw	-5
 20663  017A9C  2AE3               	incf	plusw1,f,c
 20664  017A9E  E305               	bnc	u6420
 20665  017AA0  0EFC               	movlw	-4
 20666  017AA2  2AE3               	incf	plusw1,f,c
 20667  017AA4  E302               	bnc	u6420
 20668  017AA6  0EFD               	movlw	-3
 20669  017AA8  2AE3               	incf	plusw1,f,c
 20670  017AAA                     u6420:
 20671                           
 20672                           ;stkvar	_dividend @ sp[(-2)+-8]
 20673  017AAA  0EF6               	movlw	246
 20674  017AAC  24E1               	addwf	fsr1l,w,c
 20675  017AAE  6ED9               	movwf	fsr2l,c
 20676  017AB0  0EFF               	movlw	255
 20677  017AB2  20E2               	addwfc	fsr1h,w,c
 20678  017AB4  6EDA               	movwf	fsr2h,c
 20679                           
 20680                           ;stkvar	?___aomod @ sp[(-2)+-8]
 20681  017AB6  0E08               	movlw	8
 20682  017AB8  6E01               	movwf	btemp^0,c
 20683  017ABA  0EF6               	movlw	-10
 20684  017ABC                     us643999:
 20685  017ABC  006F FF7B FFE3     	movff	postinc2,plusw1
 20686  017AC2  28E8               	incf	wreg,w,c
 20687  017AC4  2E01               	decfsz	btemp^0,f,c
 20688  017AC6  D7FA               	bra	us643999
 20689                           
 20690                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20691  017AC8  52E5               	movf	postdec1,f,c
 20692  017ACA  52E5               	movf	postdec1,f,c
 20693  017ACC  0012               	return		;funcret
 20694  017ACE                     __end_of___aomod:
 20695                           	opt callstack 0
 20696                           
 20697 ;; *************** function ___aodiv *****************
 20698 ;; Defined at:
 20699 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20700 ;; Parameters:    Size  Location     Type
 20701 ;;  dividend        8  [STACK] long long 
 20702 ;;  divisor         8  [STACK] long long 
 20703 ;; Auto vars:     Size  Location     Type
 20704 ;;  quotient        8  [STACK] long long 
 20705 ;;  sign            1  [STACK] unsigned char 
 20706 ;;  counter         1  [STACK] unsigned char 
 20707 ;; Return value:  Size  Location     Type
 20708 ;;                  8  [STACK] long long 
 20709 ;; Registers used:
 20710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20711 ;; Tracked objects:
 20712 ;;		On entry : 0/2
 20713 ;;		On exit  : 0/0
 20714 ;;		Unchanged: 0/0
 20715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20720 ;;Total ram usage:        0 bytes
 20721 ;; Hardware stack levels used:    1
 20722 ;; Hardware stack levels required when called:   15
 20723 ;; This function calls:
 20724 ;;		Nothing
 20725 ;; This function is called by:
 20726 ;;		_dtoa
 20727 ;; This function uses a reentrant model
 20728 ;;
 20729                           
 20730                           	psect	text69
 20731  01739A                     __ptext69:
 20732                           	opt callstack 0
 20733  01739A                     ___aodiv:
 20734                           	opt callstack 0
 20735                           
 20736                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 20737  01739A  0E0A               	movlw	10
 20738  01739C  26E1               	addwf	fsr1l,f,c
 20739  01739E  0E00               	movlw	0
 20740  0173A0  22E2               	addwfc	fsr1h,f,c
 20741                           
 20742                           ;stkvar	_sign @ sp[(-10)+8]
 20743                           
 20744                           ;incstack = 0
 20745 ;; hardware stack exceeded
 20746  0173A2  0EFE               	movlw	-2
 20747  0173A4  6AE3               	clrf	plusw1,c
 20748                           
 20749                           ;stkvar	_divisor @ sp[(-10)+-16]
 20750  0173A6  0EED               	movlw	-19
 20751  0173A8  AEE3               	btfss	plusw1,7,c
 20752  0173AA  D028               	goto	l7995
 20753                           
 20754                           ;stkvar	_divisor @ sp[(-10)+-16]
 20755                           ;stkvar	_divisor @ sp[(-10)+-16]
 20756  0173AC  0EE6               	movlw	-26
 20757  0173AE  6CE3               	negf	plusw1,c
 20758  0173B0  0EE7               	movlw	-25
 20759  0173B2  1EE3               	comf	plusw1,f,c
 20760  0173B4  0EE8               	movlw	-24
 20761  0173B6  1EE3               	comf	plusw1,f,c
 20762  0173B8  0EE9               	movlw	-23
 20763  0173BA  1EE3               	comf	plusw1,f,c
 20764  0173BC  0EEA               	movlw	-22
 20765  0173BE  1EE3               	comf	plusw1,f,c
 20766  0173C0  0EEB               	movlw	-21
 20767  0173C2  1EE3               	comf	plusw1,f,c
 20768  0173C4  0EEC               	movlw	-20
 20769  0173C6  1EE3               	comf	plusw1,f,c
 20770  0173C8  0EED               	movlw	-19
 20771  0173CA  1EE3               	comf	plusw1,f,c
 20772  0173CC  E314               	bnc	u6220
 20773  0173CE  0EE7               	movlw	-25
 20774  0173D0  2AE3               	incf	plusw1,f,c
 20775  0173D2  E311               	bnc	u6220
 20776  0173D4  0EE8               	movlw	-24
 20777  0173D6  2AE3               	incf	plusw1,f,c
 20778  0173D8  E30E               	bnc	u6220
 20779  0173DA  0EE9               	movlw	-23
 20780  0173DC  2AE3               	incf	plusw1,f,c
 20781  0173DE  E30B               	bnc	u6220
 20782  0173E0  0EEA               	movlw	-22
 20783  0173E2  2AE3               	incf	plusw1,f,c
 20784  0173E4  E308               	bnc	u6220
 20785  0173E6  0EEB               	movlw	-21
 20786  0173E8  2AE3               	incf	plusw1,f,c
 20787  0173EA  E305               	bnc	u6220
 20788  0173EC  0EEC               	movlw	-20
 20789  0173EE  2AE3               	incf	plusw1,f,c
 20790  0173F0  E302               	bnc	u6220
 20791  0173F2  0EED               	movlw	-19
 20792  0173F4  2AE3               	incf	plusw1,f,c
 20793  0173F6                     u6220:
 20794                           
 20795                           ;stkvar	_sign @ sp[(-10)+8]
 20796  0173F6  0EFE               	movlw	-2
 20797  0173F8  6AE3               	clrf	plusw1,c
 20798  0173FA  2AE3               	incf	plusw1,f,c
 20799  0173FC                     l7995:
 20800                           
 20801                           ;stkvar	_dividend @ sp[(-10)+-8]
 20802  0173FC  0EF5               	movlw	-11
 20803  0173FE  AEE3               	btfss	plusw1,7,c
 20804  017400  D027               	goto	l8001
 20805                           
 20806                           ;stkvar	_dividend @ sp[(-10)+-8]
 20807                           ;stkvar	_dividend @ sp[(-10)+-8]
 20808  017402  0EEE               	movlw	-18
 20809  017404  6CE3               	negf	plusw1,c
 20810  017406  0EEF               	movlw	-17
 20811  017408  1EE3               	comf	plusw1,f,c
 20812  01740A  0EF0               	movlw	-16
 20813  01740C  1EE3               	comf	plusw1,f,c
 20814  01740E  0EF1               	movlw	-15
 20815  017410  1EE3               	comf	plusw1,f,c
 20816  017412  0EF2               	movlw	-14
 20817  017414  1EE3               	comf	plusw1,f,c
 20818  017416  0EF3               	movlw	-13
 20819  017418  1EE3               	comf	plusw1,f,c
 20820  01741A  0EF4               	movlw	-12
 20821  01741C  1EE3               	comf	plusw1,f,c
 20822  01741E  0EF5               	movlw	-11
 20823  017420  1EE3               	comf	plusw1,f,c
 20824  017422  E314               	bnc	u6240
 20825  017424  0EEF               	movlw	-17
 20826  017426  2AE3               	incf	plusw1,f,c
 20827  017428  E311               	bnc	u6240
 20828  01742A  0EF0               	movlw	-16
 20829  01742C  2AE3               	incf	plusw1,f,c
 20830  01742E  E30E               	bnc	u6240
 20831  017430  0EF1               	movlw	-15
 20832  017432  2AE3               	incf	plusw1,f,c
 20833  017434  E30B               	bnc	u6240
 20834  017436  0EF2               	movlw	-14
 20835  017438  2AE3               	incf	plusw1,f,c
 20836  01743A  E308               	bnc	u6240
 20837  01743C  0EF3               	movlw	-13
 20838  01743E  2AE3               	incf	plusw1,f,c
 20839  017440  E305               	bnc	u6240
 20840  017442  0EF4               	movlw	-12
 20841  017444  2AE3               	incf	plusw1,f,c
 20842  017446  E302               	bnc	u6240
 20843  017448  0EF5               	movlw	-11
 20844  01744A  2AE3               	incf	plusw1,f,c
 20845  01744C                     u6240:
 20846                           
 20847                           ;stkvar	_sign @ sp[(-10)+8]
 20848  01744C  0EFE               	movlw	-2
 20849  01744E  70E3               	btg	plusw1,0,c
 20850  017450                     l8001:
 20851                           
 20852                           ;stkvar	_quotient @ sp[(-10)+0]
 20853  017450  0E07               	movlw	7
 20854  017452  6E01               	movwf	btemp^0,c
 20855  017454  0EF6               	movlw	-10
 20856  017456                     u6251:
 20857  017456  6AE3               	clrf	plusw1,c
 20858  017458  2AE8               	incf	wreg,f,c
 20859  01745A  0601               	decf	btemp^0,f,c
 20860  01745C  E2FC               	bc	u6251
 20861                           
 20862                           ;stkvar	_divisor @ sp[(-10)+-16]
 20863  01745E  0EE6               	movlw	-26
 20864  017460  50E3               	movf	plusw1,w,c
 20865  017462  E116               	bnz	u6260
 20866  017464  0EE7               	movlw	-25
 20867  017466  50E3               	movf	plusw1,w,c
 20868  017468  E113               	bnz	u6260
 20869  01746A  0EE8               	movlw	-24
 20870  01746C  50E3               	movf	plusw1,w,c
 20871  01746E  E110               	bnz	u6260
 20872  017470  0EE9               	movlw	-23
 20873  017472  50E3               	movf	plusw1,w,c
 20874  017474  E10D               	bnz	u6260
 20875  017476  0EEA               	movlw	-22
 20876  017478  50E3               	movf	plusw1,w,c
 20877  01747A  E10A               	bnz	u6260
 20878  01747C  0EEB               	movlw	-21
 20879  01747E  50E3               	movf	plusw1,w,c
 20880  017480  E107               	bnz	u6260
 20881  017482  0EEC               	movlw	-20
 20882  017484  50E3               	movf	plusw1,w,c
 20883  017486  E104               	bnz	u6260
 20884  017488  0EED               	movlw	-19
 20885  01748A  50E3               	movf	plusw1,w,c
 20886  01748C  B4D8               	btfsc	status,2,c
 20887  01748E  D088               	goto	u6290
 20888  017490                     u6260:
 20889                           
 20890                           ;stkvar	_counter @ sp[(-10)+9]
 20891  017490  0EFF               	movlw	-1
 20892  017492  6AE3               	clrf	plusw1,c
 20893  017494  D012               	goto	L26
 20894  017496                     l8007:
 20895                           
 20896                           ;stkvar	_divisor @ sp[(-10)+-16]
 20897  017496  90D8               	bcf	status,0,c
 20898  017498  0EE6               	movlw	-26
 20899  01749A  36E3               	rlcf	plusw1,f,c
 20900  01749C  0EE7               	movlw	-25
 20901  01749E  36E3               	rlcf	plusw1,f,c
 20902  0174A0  0EE8               	movlw	-24
 20903  0174A2  36E3               	rlcf	plusw1,f,c
 20904  0174A4  0EE9               	movlw	-23
 20905  0174A6  36E3               	rlcf	plusw1,f,c
 20906  0174A8  0EEA               	movlw	-22
 20907  0174AA  36E3               	rlcf	plusw1,f,c
 20908  0174AC  0EEB               	movlw	-21
 20909  0174AE  36E3               	rlcf	plusw1,f,c
 20910  0174B0  0EEC               	movlw	-20
 20911  0174B2  36E3               	rlcf	plusw1,f,c
 20912  0174B4  0EED               	movlw	-19
 20913  0174B6  36E3               	rlcf	plusw1,f,c
 20914                           
 20915                           ;stkvar	_counter @ sp[(-10)+9]
 20916  0174B8  0EFF               	movlw	-1
 20917  0174BA                     L26:
 20918  0174BA  2AE3               	incf	plusw1,f,c
 20919                           
 20920                           ;stkvar	_divisor @ sp[(-10)+-16]
 20921  0174BC  0EED               	movlw	-19
 20922  0174BE  AEE3               	btfss	plusw1,7,c
 20923  0174C0  D7EA               	goto	l8007
 20924  0174C2                     u6270:
 20925                           
 20926                           ;stkvar	_quotient @ sp[(-10)+0]
 20927  0174C2  90D8               	bcf	status,0,c
 20928  0174C4  0EF6               	movlw	-10
 20929  0174C6  36E3               	rlcf	plusw1,f,c
 20930  0174C8  0EF7               	movlw	-9
 20931  0174CA  36E3               	rlcf	plusw1,f,c
 20932  0174CC  0EF8               	movlw	-8
 20933  0174CE  36E3               	rlcf	plusw1,f,c
 20934  0174D0  0EF9               	movlw	-7
 20935  0174D2  36E3               	rlcf	plusw1,f,c
 20936  0174D4  0EFA               	movlw	-6
 20937  0174D6  36E3               	rlcf	plusw1,f,c
 20938  0174D8  0EFB               	movlw	-5
 20939  0174DA  36E3               	rlcf	plusw1,f,c
 20940  0174DC  0EFC               	movlw	-4
 20941  0174DE  36E3               	rlcf	plusw1,f,c
 20942  0174E0  0EFD               	movlw	-3
 20943  0174E2  36E3               	rlcf	plusw1,f,c
 20944                           
 20945                           ;stkvar	_divisor @ sp[(-10)+-16]
 20946                           ;stkvar	_dividend @ sp[(-10)+-8]
 20947  0174E4  50E1               	movf	fsr1l,w,c
 20948  0174E6  0FEE               	addlw	-18
 20949  0174E8  6ED9               	movwf	fsr2l,c
 20950  0174EA  50E2               	movf	fsr1h,w,c
 20951  0174EC  6EDA               	movwf	fsr2h,c
 20952  0174EE  0EFF               	movlw	255
 20953  0174F0  22DA               	addwfc	fsr2h,f,c
 20954  0174F2  0EE6               	movlw	-26
 20955  0174F4  50E3               	movf	plusw1,w,c
 20956  0174F6  5CDE               	subwf	postinc2,w,c
 20957  0174F8  0EE7               	movlw	-25
 20958  0174FA  50E3               	movf	plusw1,w,c
 20959  0174FC  58DE               	subwfb	postinc2,w,c
 20960  0174FE  0EE8               	movlw	-24
 20961  017500  50E3               	movf	plusw1,w,c
 20962  017502  58DE               	subwfb	postinc2,w,c
 20963  017504  0EE9               	movlw	-23
 20964  017506  50E3               	movf	plusw1,w,c
 20965  017508  58DE               	subwfb	postinc2,w,c
 20966  01750A  0EEA               	movlw	-22
 20967  01750C  50E3               	movf	plusw1,w,c
 20968  01750E  58DE               	subwfb	postinc2,w,c
 20969  017510  0EEB               	movlw	-21
 20970  017512  50E3               	movf	plusw1,w,c
 20971  017514  58DE               	subwfb	postinc2,w,c
 20972  017516  0EEC               	movlw	-20
 20973  017518  50E3               	movf	plusw1,w,c
 20974  01751A  58DE               	subwfb	postinc2,w,c
 20975  01751C  0EED               	movlw	-19
 20976  01751E  50E3               	movf	plusw1,w,c
 20977  017520  58DE               	subwfb	postinc2,w,c
 20978  017522  A0D8               	btfss	status,0,c
 20979  017524  D021               	goto	l8019
 20980                           
 20981                           ;stkvar	_divisor @ sp[(-10)+-16]
 20982                           ;stkvar	_dividend @ sp[(-10)+-8]
 20983  017526  50E1               	movf	fsr1l,w,c
 20984  017528  0FEE               	addlw	-18
 20985  01752A  6ED9               	movwf	fsr2l,c
 20986  01752C  50E2               	movf	fsr1h,w,c
 20987  01752E  6EDA               	movwf	fsr2h,c
 20988  017530  0EFF               	movlw	255
 20989  017532  22DA               	addwfc	fsr2h,f,c
 20990  017534  0EE6               	movlw	-26
 20991  017536  50E3               	movf	plusw1,w,c
 20992  017538  5EDE               	subwf	postinc2,f,c
 20993  01753A  0EE7               	movlw	-25
 20994  01753C  50E3               	movf	plusw1,w,c
 20995  01753E  5ADE               	subwfb	postinc2,f,c
 20996  017540  0EE8               	movlw	-24
 20997  017542  50E3               	movf	plusw1,w,c
 20998  017544  5ADE               	subwfb	postinc2,f,c
 20999  017546  0EE9               	movlw	-23
 21000  017548  50E3               	movf	plusw1,w,c
 21001  01754A  5ADE               	subwfb	postinc2,f,c
 21002  01754C  0EEA               	movlw	-22
 21003  01754E  50E3               	movf	plusw1,w,c
 21004  017550  5ADE               	subwfb	postinc2,f,c
 21005  017552  0EEB               	movlw	-21
 21006  017554  50E3               	movf	plusw1,w,c
 21007  017556  5ADE               	subwfb	postinc2,f,c
 21008  017558  0EEC               	movlw	-20
 21009  01755A  50E3               	movf	plusw1,w,c
 21010  01755C  5ADE               	subwfb	postinc2,f,c
 21011  01755E  0EED               	movlw	-19
 21012  017560  50E3               	movf	plusw1,w,c
 21013  017562  5ADE               	subwfb	postinc2,f,c
 21014                           
 21015                           ;stkvar	_quotient @ sp[(-10)+0]
 21016  017564  0EF6               	movlw	-10
 21017  017566  80E3               	bsf	plusw1,0,c
 21018  017568                     l8019:
 21019                           
 21020                           ;stkvar	_divisor @ sp[(-10)+-16]
 21021  017568  90D8               	bcf	status,0,c
 21022  01756A  0EED               	movlw	-19
 21023  01756C  32E3               	rrcf	plusw1,f,c
 21024  01756E  0EEC               	movlw	-20
 21025  017570  32E3               	rrcf	plusw1,f,c
 21026  017572  0EEB               	movlw	-21
 21027  017574  32E3               	rrcf	plusw1,f,c
 21028  017576  0EEA               	movlw	-22
 21029  017578  32E3               	rrcf	plusw1,f,c
 21030  01757A  0EE9               	movlw	-23
 21031  01757C  32E3               	rrcf	plusw1,f,c
 21032  01757E  0EE8               	movlw	-24
 21033  017580  32E3               	rrcf	plusw1,f,c
 21034  017582  0EE7               	movlw	-25
 21035  017584  32E3               	rrcf	plusw1,f,c
 21036  017586  0EE6               	movlw	-26
 21037  017588  32E3               	rrcf	plusw1,f,c
 21038                           
 21039                           ;stkvar	_counter @ sp[(-10)+9]
 21040  01758A  0EFF               	movlw	-1
 21041  01758C  50E3               	movf	plusw1,w,c
 21042  01758E  6E01               	movwf	btemp^0,c
 21043  017590  0E01               	movlw	1
 21044  017592  5E01               	subwf	btemp^0,f,c
 21045  017594  0EFF               	movlw	-1
 21046  017596  0060  F007  FFE3   	movff	btemp,plusw1
 21047  01759C  A4D8               	btfss	status,2,c
 21048  01759E  D791               	goto	u6270
 21049  0175A0                     u6290:
 21050                           
 21051                           ;stkvar	_sign @ sp[(-10)+8]
 21052  0175A0  0EFE               	movlw	-2
 21053  0175A2  50E3               	movf	plusw1,w,c
 21054  0175A4  B4D8               	btfsc	status,2,c
 21055  0175A6  D025               	goto	u6310
 21056                           
 21057                           ;stkvar	_quotient @ sp[(-10)+0]
 21058                           ;stkvar	_quotient @ sp[(-10)+0]
 21059  0175A8  0EF6               	movlw	-10
 21060  0175AA  6CE3               	negf	plusw1,c
 21061  0175AC  0EF7               	movlw	-9
 21062  0175AE  1EE3               	comf	plusw1,f,c
 21063  0175B0  0EF8               	movlw	-8
 21064  0175B2  1EE3               	comf	plusw1,f,c
 21065  0175B4  0EF9               	movlw	-7
 21066  0175B6  1EE3               	comf	plusw1,f,c
 21067  0175B8  0EFA               	movlw	-6
 21068  0175BA  1EE3               	comf	plusw1,f,c
 21069  0175BC  0EFB               	movlw	-5
 21070  0175BE  1EE3               	comf	plusw1,f,c
 21071  0175C0  0EFC               	movlw	-4
 21072  0175C2  1EE3               	comf	plusw1,f,c
 21073  0175C4  0EFD               	movlw	-3
 21074  0175C6  1EE3               	comf	plusw1,f,c
 21075  0175C8  E314               	bnc	u6310
 21076  0175CA  0EF7               	movlw	-9
 21077  0175CC  2AE3               	incf	plusw1,f,c
 21078  0175CE  E311               	bnc	u6310
 21079  0175D0  0EF8               	movlw	-8
 21080  0175D2  2AE3               	incf	plusw1,f,c
 21081  0175D4  E30E               	bnc	u6310
 21082  0175D6  0EF9               	movlw	-7
 21083  0175D8  2AE3               	incf	plusw1,f,c
 21084  0175DA  E30B               	bnc	u6310
 21085  0175DC  0EFA               	movlw	-6
 21086  0175DE  2AE3               	incf	plusw1,f,c
 21087  0175E0  E308               	bnc	u6310
 21088  0175E2  0EFB               	movlw	-5
 21089  0175E4  2AE3               	incf	plusw1,f,c
 21090  0175E6  E305               	bnc	u6310
 21091  0175E8  0EFC               	movlw	-4
 21092  0175EA  2AE3               	incf	plusw1,f,c
 21093  0175EC  E302               	bnc	u6310
 21094  0175EE  0EFD               	movlw	-3
 21095  0175F0  2AE3               	incf	plusw1,f,c
 21096  0175F2                     u6310:
 21097                           
 21098                           ;stkvar	_quotient @ sp[(-10)+0]
 21099  0175F2  0EF6               	movlw	246
 21100  0175F4  24E1               	addwf	fsr1l,w,c
 21101  0175F6  6ED9               	movwf	fsr2l,c
 21102  0175F8  0EFF               	movlw	255
 21103  0175FA  20E2               	addwfc	fsr1h,w,c
 21104  0175FC  6EDA               	movwf	fsr2h,c
 21105                           
 21106                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 21107  0175FE  0E08               	movlw	8
 21108  017600  6E01               	movwf	btemp^0,c
 21109  017602  0EEE               	movlw	-18
 21110  017604                     us632999:
 21111  017604  006F FF7B FFE3     	movff	postinc2,plusw1
 21112  01760A  28E8               	incf	wreg,w,c
 21113  01760C  2E01               	decfsz	btemp^0,f,c
 21114  01760E  D7FA               	bra	us632999
 21115                           
 21116                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 21117  017610  0EF6               	movlw	246
 21118  017612  26E1               	addwf	fsr1l,f,c
 21119  017614  0EFF               	movlw	255
 21120  017616  22E2               	addwfc	fsr1h,f,c
 21121  017618  0012               	return		;funcret
 21122  01761A                     __end_of___aodiv:
 21123                           	opt callstack 0
 21124                           
 21125 ;; *************** function _ctoa *****************
 21126 ;; Defined at:
 21127 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21128 ;; Parameters:    Size  Location     Type
 21129 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21130 ;;		 -> f(6), NULL(0), 
 21131 ;;  c               1  [STACK] unsigned char 
 21132 ;; Auto vars:     Size  Location     Type
 21133 ;;  w               2  [STACK] int 
 21134 ;;  l               2    0        int 
 21135 ;; Return value:  Size  Location     Type
 21136 ;;                  2  [STACK] int 
 21137 ;; Registers used:
 21138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21139 ;; Tracked objects:
 21140 ;;		On entry : 0/0
 21141 ;;		On exit  : 0/0
 21142 ;;		Unchanged: 0/0
 21143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21148 ;;Total ram usage:        0 bytes
 21149 ;; Hardware stack levels used:    1
 21150 ;; Hardware stack levels required when called:   20
 21151 ;; This function calls:
 21152 ;;		_pad
 21153 ;; This function is called by:
 21154 ;;		_vfpfcnvrt
 21155 ;; This function uses a reentrant model
 21156 ;;
 21157                           
 21158                           	psect	text70
 21159  01A970                     __ptext70:
 21160                           	opt callstack 0
 21161  01A970                     _ctoa:
 21162                           	opt callstack 0
 21163                           
 21164                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21165  01A970  52E6               	movf	postinc1,f,c
 21166  01A972  52E6               	movf	postinc1,f,c
 21167                           
 21168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 21169                           
 21170                           ;incstack = 0
 21171 ;; hardware stack exceeded
 21172  01A974  503A               	movf	_width^0,w,c
 21173  01A976  103B               	iorwf	(_width+1)^0,w,c
 21174  01A978  A4D8               	btfss	status,2,c
 21175  01A97A  D009               	goto	l11723
 21176                           
 21177                           ;stkvar	_w @ sp[(-2)+0]
 21178  01A97C  0EFE               	movlw	-2
 21179  01A97E  0060  F0EB  FFE3   	movff	_width,plusw1
 21180  01A984  0EFF               	movlw	-1
 21181  01A986  0060  F0EF  FFE3   	movff	_width+1,plusw1
 21182  01A98C  D016               	goto	l11725
 21183  01A98E                     l11723:
 21184  01A98E  0EFF               	movlw	255
 21185  01A990  6E0B               	movwf	(btemp+10)^0,c
 21186  01A992  0EFF               	movlw	255
 21187  01A994  6E0C               	movwf	(btemp+11)^0,c
 21188  01A996  0060  F0E8  F009   	movff	_width,btemp+8
 21189  01A99C  0060  F0EC  F00A   	movff	_width+1,btemp+9
 21190  01A9A2  500B               	movf	(btemp+10)^0,w,c
 21191  01A9A4  2609               	addwf	(btemp+8)^0,f,c
 21192  01A9A6  500C               	movf	(btemp+11)^0,w,c
 21193  01A9A8  220A               	addwfc	(btemp+9)^0,f,c
 21194                           
 21195                           ;stkvar	_w @ sp[(-2)+0]
 21196  01A9AA  0EFE               	movlw	-2
 21197  01A9AC  0060  F027  FFE3   	movff	btemp+8,plusw1
 21198  01A9B2  0EFF               	movlw	-1
 21199  01A9B4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21200  01A9BA                     l11725:
 21201                           
 21202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 21203                           ;stkvar	_c @ sp[(-2)+-3]
 21204  01A9BA  0EFB               	movlw	-5
 21205  01A9BC  006F FF8C  F276    	movff	plusw1,_dbuf
 21206                           
 21207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 21208  01A9C2  0102               	movlb	2	; () banked
 21209  01A9C4  6B77               	clrf	(_dbuf+1)& (0+255),b
 21210                           
 21211                           ; BSR set to: 2
 21212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 21213                           ;stkvar	_w @ sp[(-2)+0]
 21214  01A9C6  0EFE               	movlw	-2
 21215  01A9C8  006F FF8F FFE6     	movff	plusw1,postinc1
 21216  01A9CE  006F FF8F FFE6     	movff	plusw1,postinc1
 21217  01A9D4  0E76               	movlw	low _dbuf
 21218  01A9D6  6EE6               	movwf	postinc1,c
 21219  01A9D8  0E02               	movlw	high _dbuf
 21220  01A9DA  6EE6               	movwf	postinc1,c
 21221                           
 21222                           ;stkvar	_fp @ sp[(-6)+-2]
 21223  01A9DC  0EF8               	movlw	-8
 21224  01A9DE  006F FF8F FFE6     	movff	plusw1,postinc1
 21225  01A9E4  006F FF8F FFE6     	movff	plusw1,postinc1
 21226  01A9EA  ECC6  F0CC         	call	_pad	;wreg free
 21227                           
 21228                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 21229  01A9EE  0EFB               	movlw	251
 21230  01A9F0  26E1               	addwf	fsr1l,f,c
 21231  01A9F2  0EFF               	movlw	255
 21232  01A9F4  22E2               	addwfc	fsr1h,f,c
 21233  01A9F6  0012               	return		;funcret
 21234  01A9F8                     __end_of_ctoa:
 21235                           	opt callstack 0
 21236                           
 21237 ;; *************** function _pad *****************
 21238 ;; Defined at:
 21239 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21240 ;; Parameters:    Size  Location     Type
 21241 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21242 ;;		 -> f(6), NULL(0), 
 21243 ;;  buf             2  [STACK] PTR unsigned char 
 21244 ;;		 -> dbuf(80), 
 21245 ;;  p               2  [STACK] int 
 21246 ;; Auto vars:     Size  Location     Type
 21247 ;;  w               2  [STACK] int 
 21248 ;;  i               2  [STACK] int 
 21249 ;; Return value:  Size  Location     Type
 21250 ;;                  2  [STACK] int 
 21251 ;; Registers used:
 21252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21253 ;; Tracked objects:
 21254 ;;		On entry : 0/2
 21255 ;;		On exit  : 0/0
 21256 ;;		Unchanged: 0/0
 21257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21262 ;;Total ram usage:        0 bytes
 21263 ;; Hardware stack levels used:    1
 21264 ;; Hardware stack levels required when called:   19
 21265 ;; This function calls:
 21266 ;;		_fputc
 21267 ;;		_fputs
 21268 ;;		_strlen
 21269 ;; This function is called by:
 21270 ;;		_ctoa
 21271 ;;		_dtoa
 21272 ;;		_efgtoa
 21273 ;;		_utoa
 21274 ;;		_xtoa
 21275 ;; This function uses a reentrant model
 21276 ;;
 21277                           
 21278                           	psect	text71
 21279  01998C                     __ptext71:
 21280                           	opt callstack 0
 21281  01998C                     _pad:
 21282                           	opt callstack 0
 21283                           
 21284                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21285  01998C  52E6               	movf	postinc1,f,c
 21286  01998E  52E6               	movf	postinc1,f,c
 21287  019990  52E6               	movf	postinc1,f,c
 21288  019992  52E6               	movf	postinc1,f,c
 21289                           
 21290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 21291                           
 21292                           ;incstack = 0
 21293 ;; hardware stack exceeded
 21294  019994  A03E               	btfss	_flags^0,0,c
 21295  019996  D010               	goto	l11655
 21296                           
 21297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 21298                           ;stkvar	_fp @ sp[(-4)+-2]
 21299  019998  0EFA               	movlw	-6
 21300  01999A  006F FF8F FFE6     	movff	plusw1,postinc1
 21301  0199A0  006F FF8F FFE6     	movff	plusw1,postinc1
 21302                           
 21303                           ;stkvar	_buf @ sp[(-6)+-4]
 21304  0199A6  0EF6               	movlw	-10
 21305  0199A8  006F FF8F FFE6     	movff	plusw1,postinc1
 21306  0199AE  006F FF8F FFE6     	movff	plusw1,postinc1
 21307  0199B4  ECD9  F0D3         	call	_fputs	;wreg free
 21308  0199B8                     l11655:
 21309                           
 21310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 21311                           ;stkvar	_p @ sp[(-4)+-6]
 21312  0199B8  0EF7               	movlw	-9
 21313  0199BA  BEE3               	btfsc	plusw1,7,c
 21314  0199BC  D011               	goto	l11659
 21315                           
 21316                           ;stkvar	_p @ sp[(-4)+-6]
 21317                           ;stkvar	_w @ sp[(-4)+0]
 21318  0199BE  0EF6               	movlw	-10
 21319  0199C0  006F FF8C  F001    	movff	plusw1,btemp
 21320  0199C6  0EFC               	movlw	-4
 21321  0199C8  0060  F007  FFE3   	movff	btemp,plusw1
 21322  0199CE  0EF7               	movlw	-9
 21323  0199D0  006F FF8C  F001    	movff	plusw1,btemp
 21324  0199D6  0EFD               	movlw	-3
 21325  0199D8  0060  F007  FFE3   	movff	btemp,plusw1
 21326  0199DE  D004               	goto	l2143
 21327  0199E0                     l11659:
 21328                           
 21329                           ;stkvar	_w @ sp[(-4)+0]
 21330  0199E0  0EFC               	movlw	-4
 21331  0199E2  6AE3               	clrf	plusw1,c
 21332  0199E4  0EFD               	movlw	-3
 21333  0199E6  6AE3               	clrf	plusw1,c
 21334  0199E8                     l2143:
 21335                           
 21336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 21337                           ;stkvar	_i @ sp[(-4)+2]
 21338  0199E8  0EFE               	movlw	-2
 21339  0199EA  6AE3               	clrf	plusw1,c
 21340  0199EC  0EFF               	movlw	-1
 21341  0199EE  6AE3               	clrf	plusw1,c
 21342                           
 21343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21344  0199F0  D01E               	goto	l11665
 21345  0199F2                     l11661:
 21346                           
 21347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 21348                           ;stkvar	_fp @ sp[(-4)+-2]
 21349  0199F2  0EFA               	movlw	-6
 21350  0199F4  006F FF8F FFE6     	movff	plusw1,postinc1
 21351  0199FA  006F FF8F FFE6     	movff	plusw1,postinc1
 21352  019A00  0E20               	movlw	32
 21353  019A02  6EE6               	movwf	postinc1,c
 21354  019A04  0E00               	movlw	0
 21355  019A06  6EE6               	movwf	postinc1,c
 21356  019A08  EC1B  F0CB         	call	_fputc	;wreg free
 21357                           
 21358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 21359                           ;stkvar	_i @ sp[(-4)+2]
 21360  019A0C  0EFE               	movlw	-2
 21361  019A0E  50E3               	movf	plusw1,w,c
 21362  019A10  0F01               	addlw	1
 21363  019A12  6E01               	movwf	btemp^0,c
 21364  019A14  0EFE               	movlw	-2
 21365  019A16  0060  F007  FFE3   	movff	btemp,plusw1
 21366  019A1C  6A01               	clrf	btemp^0,c
 21367  019A1E  0EFF               	movlw	-1
 21368  019A20  50E3               	movf	plusw1,w,c
 21369  019A22  2001               	addwfc	btemp^0,w,c
 21370  019A24  6E01               	movwf	btemp^0,c
 21371  019A26  0EFF               	movlw	-1
 21372  019A28  0060  F007  FFE3   	movff	btemp,plusw1
 21373  019A2E                     l11665:
 21374                           
 21375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21376                           ;stkvar	_w @ sp[(-4)+0]
 21377                           ;stkvar	_i @ sp[(-4)+2]
 21378  019A2E  50E1               	movf	fsr1l,w,c
 21379  019A30  0FFE               	addlw	-2
 21380  019A32  6ED9               	movwf	fsr2l,c
 21381  019A34  50E2               	movf	fsr1h,w,c
 21382  019A36  6EDA               	movwf	fsr2h,c
 21383  019A38  0EFF               	movlw	255
 21384  019A3A  22DA               	addwfc	fsr2h,f,c
 21385  019A3C  0EFC               	movlw	-4
 21386  019A3E  50E3               	movf	plusw1,w,c
 21387  019A40  5CDE               	subwf	postinc2,w,c
 21388  019A42  50DE               	movf	postinc2,w,c
 21389  019A44  0A80               	xorlw	128
 21390  019A46  6E01               	movwf	btemp^0,c
 21391  019A48  0EFD               	movlw	-3
 21392  019A4A  50E3               	movf	plusw1,w,c
 21393  019A4C  0A80               	xorlw	128
 21394  019A4E  5801               	subwfb	btemp^0,w,c
 21395  019A50  A0D8               	btfss	status,0,c
 21396  019A52  D7CF               	goto	l11661
 21397                           
 21398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 21399  019A54  B03E               	btfsc	_flags^0,0,c
 21400  019A56  D010               	goto	l11669
 21401                           
 21402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 21403                           ;stkvar	_fp @ sp[(-4)+-2]
 21404  019A58  0EFA               	movlw	-6
 21405  019A5A  006F FF8F FFE6     	movff	plusw1,postinc1
 21406  019A60  006F FF8F FFE6     	movff	plusw1,postinc1
 21407                           
 21408                           ;stkvar	_buf @ sp[(-6)+-4]
 21409  019A66  0EF6               	movlw	-10
 21410  019A68  006F FF8F FFE6     	movff	plusw1,postinc1
 21411  019A6E  006F FF8F FFE6     	movff	plusw1,postinc1
 21412  019A74  ECD9  F0D3         	call	_fputs	;wreg free
 21413  019A78                     l11669:
 21414                           
 21415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 21416                           ;stkvar	_w @ sp[(-4)+0]
 21417                           ;stkvar	_buf @ sp[(-4)+-4]
 21418  019A78  0EF8               	movlw	-8
 21419  019A7A  006F FF8F FFE6     	movff	plusw1,postinc1
 21420  019A80  006F FF8F FFE6     	movff	plusw1,postinc1
 21421  019A86  EC88  F0D3         	call	_strlen	;wreg free
 21422  019A8A  0EFC               	movlw	-4
 21423  019A8C  50E3               	movf	plusw1,w,c
 21424  019A8E  2601               	addwf	btemp^0,f,c
 21425  019A90  0EFD               	movlw	-3
 21426  019A92  50E3               	movf	plusw1,w,c
 21427  019A94  2202               	addwfc	(btemp+1)^0,f,c
 21428                           
 21429                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 21430  019A96  0EF6               	movlw	246
 21431  019A98  26E1               	addwf	fsr1l,f,c
 21432  019A9A  0EFF               	movlw	255
 21433  019A9C  22E2               	addwfc	fsr1h,f,c
 21434  019A9E  0012               	return		;funcret
 21435  019AA0                     __end_of_pad:
 21436                           	opt callstack 0
 21437                           
 21438 ;; *************** function _strlen *****************
 21439 ;; Defined at:
 21440 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 21441 ;; Parameters:    Size  Location     Type
 21442 ;;  s               2  [STACK] PTR const unsigned char 
 21443 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21444 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21445 ;;		 -> D(482), T(144), port_data(512), STR_3(6), 
 21446 ;;		 -> V(191), 
 21447 ;; Auto vars:     Size  Location     Type
 21448 ;;  a               2  [STACK] PTR const unsigned char 
 21449 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21450 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21451 ;;		 -> D(482), T(144), port_data(512), STR_3(6), 
 21452 ;;		 -> V(191), 
 21453 ;; Return value:  Size  Location     Type
 21454 ;;                  2  [STACK] unsigned int 
 21455 ;; Registers used:
 21456 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 21457 ;; Tracked objects:
 21458 ;;		On entry : 0/0
 21459 ;;		On exit  : 0/0
 21460 ;;		Unchanged: 0/0
 21461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21466 ;;Total ram usage:        0 bytes
 21467 ;; Hardware stack levels used:    1
 21468 ;; Hardware stack levels required when called:   15
 21469 ;; This function calls:
 21470 ;;		Nothing
 21471 ;; This function is called by:
 21472 ;;		_eaDogM_WriteString
 21473 ;;		_spinners
 21474 ;;		_calc_bsoc
 21475 ;;		_pad
 21476 ;;		_stoa
 21477 ;; This function uses a reentrant model
 21478 ;;
 21479                           
 21480                           	psect	text72
 21481  01A710                     __ptext72:
 21482                           	opt callstack 0
 21483  01A710                     _strlen:
 21484                           	opt callstack 0
 21485                           
 21486                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21487  01A710  52E6               	movf	postinc1,f,c
 21488  01A712  52E6               	movf	postinc1,f,c
 21489                           
 21490                           ;stkvar	_s @ sp[(-2)+-2]
 21491                           
 21492                           ;incstack = 0
 21493 ;; hardware stack exceeded
 21494  01A714  0EFC               	movlw	-4
 21495  01A716  006F FF8C  F00B    	movff	plusw1,btemp+10
 21496  01A71C  0EFD               	movlw	-3
 21497  01A71E  006F FF8C  F00C    	movff	plusw1,btemp+11
 21498                           
 21499                           ;stkvar	_a @ sp[(-2)+0]
 21500  01A724  0EFF               	movlw	-1
 21501  01A726  0060  F033  FFE3   	movff	btemp+11,plusw1
 21502  01A72C  0EFE               	movlw	-2
 21503  01A72E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21504  01A734  D011               	goto	l7613
 21505  01A736                     l7611:
 21506                           
 21507                           ;stkvar	_s @ sp[(-2)+-2]
 21508  01A736  0EFC               	movlw	-4
 21509  01A738  50E3               	movf	plusw1,w,c
 21510  01A73A  0F01               	addlw	1
 21511  01A73C  6E01               	movwf	btemp^0,c
 21512  01A73E  0EFC               	movlw	-4
 21513  01A740  0060  F007  FFE3   	movff	btemp,plusw1
 21514  01A746  6A01               	clrf	btemp^0,c
 21515  01A748  0EFD               	movlw	-3
 21516  01A74A  50E3               	movf	plusw1,w,c
 21517  01A74C  2001               	addwfc	btemp^0,w,c
 21518  01A74E  6E01               	movwf	btemp^0,c
 21519  01A750  0EFD               	movlw	-3
 21520  01A752  0060  F007  FFE3   	movff	btemp,plusw1
 21521  01A758                     l7613:
 21522                           
 21523                           ;stkvar	_s @ sp[(-2)+-2]
 21524  01A758  0EFC               	movlw	-4
 21525  01A75A  006F FF8F FFF6     	movff	plusw1,tblptrl
 21526  01A760  0EFD               	movlw	-3
 21527  01A762  006F FF8F FFF7     	movff	plusw1,tblptrh
 21528  01A768  0E00               	movlw	low (__mediumconst shr (0+16))
 21529  01A76A  6EF8               	movwf	tblptru,c
 21530  01A76C  0E1F               	movlw	(high __ramtop+-1)
 21531  01A76E  64F7               	cpfsgt	tblptrh,c
 21532  01A770  D003               	bra	u5387
 21533  01A772  0008               	tblrd		*
 21534  01A774  50F5               	movf	tablat,w,c
 21535  01A776  D007               	bra	u5380
 21536  01A778                     u5387:
 21537  01A778  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21538  01A77E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21539  01A784  50EF               	movf	indf0,w,c
 21540  01A786                     u5380:
 21541  01A786  0900               	iorlw	0
 21542  01A788  A4D8               	btfss	status,2,c
 21543  01A78A  D7D5               	goto	l7611
 21544                           
 21545                           ;stkvar	_a @ sp[(-2)+0]
 21546                           ;stkvar	_s @ sp[(-2)+-2]
 21547  01A78C  0EFC               	movlw	-4
 21548  01A78E  006F FF8C  F001    	movff	plusw1,btemp
 21549  01A794  0EFD               	movlw	-3
 21550  01A796  006F FF8C  F002    	movff	plusw1,btemp+1
 21551  01A79C  0EFE               	movlw	-2
 21552  01A79E  50E3               	movf	plusw1,w,c
 21553  01A7A0  5E01               	subwf	btemp^0,f,c
 21554  01A7A2  0EFF               	movlw	-1
 21555  01A7A4  50E3               	movf	plusw1,w,c
 21556  01A7A6  5A02               	subwfb	(btemp+1)^0,f,c
 21557                           
 21558                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 21559  01A7A8  52E5               	movf	postdec1,f,c
 21560  01A7AA  52E5               	movf	postdec1,f,c
 21561  01A7AC  52E5               	movf	postdec1,f,c
 21562  01A7AE  52E5               	movf	postdec1,f,c
 21563  01A7B0  0012               	return		;funcret
 21564  01A7B2                     __end_of_strlen:
 21565                           	opt callstack 0
 21566                           
 21567 ;; *************** function _fputs *****************
 21568 ;; Defined at:
 21569 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 21570 ;; Parameters:    Size  Location     Type
 21571 ;;  s               2  [STACK] PTR const unsigned char 
 21572 ;;		 -> dbuf(80), 
 21573 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21574 ;;		 -> f(6), NULL(0), 
 21575 ;; Auto vars:     Size  Location     Type
 21576 ;;  i               2  [STACK] int 
 21577 ;;  c               1  [STACK] unsigned char 
 21578 ;; Return value:  Size  Location     Type
 21579 ;;                  2  [STACK] int 
 21580 ;; Registers used:
 21581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21582 ;; Tracked objects:
 21583 ;;		On entry : 0/2
 21584 ;;		On exit  : 0/0
 21585 ;;		Unchanged: 0/0
 21586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21591 ;;Total ram usage:        0 bytes
 21592 ;; Hardware stack levels used:    1
 21593 ;; Hardware stack levels required when called:   18
 21594 ;; This function calls:
 21595 ;;		_fputc
 21596 ;; This function is called by:
 21597 ;;		_pad
 21598 ;; This function uses a reentrant model
 21599 ;;
 21600                           
 21601                           	psect	text73
 21602  01A7B2                     __ptext73:
 21603                           	opt callstack 0
 21604  01A7B2                     _fputs:
 21605                           	opt callstack 0
 21606                           
 21607                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21608  01A7B2  52E6               	movf	postinc1,f,c
 21609  01A7B4  52E6               	movf	postinc1,f,c
 21610  01A7B6  52E6               	movf	postinc1,f,c
 21611                           
 21612                           ;stkvar	_i @ sp[(-3)+0]
 21613                           
 21614                           ;incstack = 0
 21615 ;; hardware stack exceeded
 21616  01A7B8  0EFD               	movlw	-3
 21617  01A7BA  6AE3               	clrf	plusw1,c
 21618  01A7BC  0EFE               	movlw	-2
 21619  01A7BE  6AE3               	clrf	plusw1,c
 21620  01A7C0  D01F               	goto	l11649
 21621  01A7C2                     l11645:
 21622                           
 21623                           ;stkvar	_fp @ sp[(-3)+-4]
 21624  01A7C2  0EF9               	movlw	-7
 21625  01A7C4  006F FF8F FFE6     	movff	plusw1,postinc1
 21626  01A7CA  006F FF8F FFE6     	movff	plusw1,postinc1
 21627                           
 21628                           ;stkvar	_c @ sp[(-5)+2]
 21629  01A7D0  0EFD               	movlw	-3
 21630  01A7D2  50E3               	movf	plusw1,w,c
 21631  01A7D4  6EE6               	movwf	postinc1,c
 21632  01A7D6  0E00               	movlw	0
 21633  01A7D8  6EE6               	movwf	postinc1,c
 21634  01A7DA  EC1B  F0CB         	call	_fputc	;wreg free
 21635                           
 21636                           ;stkvar	_i @ sp[(-3)+0]
 21637  01A7DE  0EFD               	movlw	-3
 21638  01A7E0  50E3               	movf	plusw1,w,c
 21639  01A7E2  0F01               	addlw	1
 21640  01A7E4  6E01               	movwf	btemp^0,c
 21641  01A7E6  0EFD               	movlw	-3
 21642  01A7E8  0060  F007  FFE3   	movff	btemp,plusw1
 21643  01A7EE  6A01               	clrf	btemp^0,c
 21644  01A7F0  0EFE               	movlw	-2
 21645  01A7F2  50E3               	movf	plusw1,w,c
 21646  01A7F4  2001               	addwfc	btemp^0,w,c
 21647  01A7F6  6E01               	movwf	btemp^0,c
 21648  01A7F8  0EFE               	movlw	-2
 21649  01A7FA  0060  F007  FFE3   	movff	btemp,plusw1
 21650  01A800                     l11649:
 21651                           
 21652                           ;stkvar	_i @ sp[(-3)+0]
 21653  01A800  0EFD               	movlw	-3
 21654  01A802  006F FF8C  F00B    	movff	plusw1,btemp+10
 21655  01A808  0EFE               	movlw	-2
 21656  01A80A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21657                           
 21658                           ;stkvar	_s @ sp[(-3)+-2]
 21659  01A810  0EFB               	movlw	-5
 21660  01A812  006F FF8C  F009    	movff	plusw1,btemp+8
 21661  01A818  0EFC               	movlw	-4
 21662  01A81A  006F FF8C  F00A    	movff	plusw1,btemp+9
 21663  01A820  500B               	movf	(btemp+10)^0,w,c
 21664  01A822  2409               	addwf	(btemp+8)^0,w,c
 21665  01A824  6ED9               	movwf	fsr2l,c
 21666  01A826  500C               	movf	(btemp+11)^0,w,c
 21667  01A828  200A               	addwfc	(btemp+9)^0,w,c
 21668  01A82A  6EDA               	movwf	fsr2h,c
 21669  01A82C  50DF               	movf	indf2,w,c
 21670  01A82E  6E0C               	movwf	(btemp+11)^0,c
 21671                           
 21672                           ;stkvar	_c @ sp[(-3)+2]
 21673  01A830  0EFF               	movlw	-1
 21674  01A832  0060  F033  FFE3   	movff	btemp+11,plusw1
 21675  01A838  0EFF               	movlw	-1
 21676  01A83A  50E3               	movf	plusw1,w,c
 21677  01A83C  A4D8               	btfss	status,2,c
 21678  01A83E  D7C1               	goto	l11645
 21679                           
 21680                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21681  01A840  0EF9               	movlw	249
 21682  01A842  26E1               	addwf	fsr1l,f,c
 21683  01A844  0EFF               	movlw	255
 21684  01A846  22E2               	addwfc	fsr1h,f,c
 21685  01A848  0012               	return		;funcret
 21686  01A84A                     __end_of_fputs:
 21687                           	opt callstack 0
 21688                           
 21689 ;; *************** function _fputc *****************
 21690 ;; Defined at:
 21691 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 21692 ;; Parameters:    Size  Location     Type
 21693 ;;  c               2  [STACK] int 
 21694 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21695 ;;		 -> f(6), NULL(0), 
 21696 ;; Auto vars:     Size  Location     Type
 21697 ;;		None
 21698 ;; Return value:  Size  Location     Type
 21699 ;;                  2  [STACK] int 
 21700 ;; Registers used:
 21701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21702 ;; Tracked objects:
 21703 ;;		On entry : 0/0
 21704 ;;		On exit  : 0/0
 21705 ;;		Unchanged: 0/0
 21706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21711 ;;Total ram usage:        0 bytes
 21712 ;; Hardware stack levels used:    1
 21713 ;; Hardware stack levels required when called:   17
 21714 ;; This function calls:
 21715 ;;		_putch
 21716 ;; This function is called by:
 21717 ;;		_pad
 21718 ;;		_stoa
 21719 ;;		_vfpfcnvrt
 21720 ;;		_fputs
 21721 ;; This function uses a reentrant model
 21722 ;;
 21723                           
 21724                           	psect	text74
 21725  019636                     __ptext74:
 21726                           	opt callstack 0
 21727  019636                     _fputc:
 21728                           	opt callstack 0
 21729                           
 21730                           ;stkvar	_fp @ sp[(0)+-4]
 21731                           
 21732                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21733                           ;incstack = 0
 21734 ;; hardware stack exceeded
 21735  019636  0EFC               	movlw	-4
 21736  019638  006F FF8C  F001    	movff	plusw1,btemp
 21737  01963E  0EFD               	movlw	-3
 21738  019640  50E3               	movf	plusw1,w,c
 21739  019642  1001               	iorwf	btemp^0,w,c
 21740  019644  B4D8               	btfsc	status,2,c
 21741  019646  D009               	goto	u10670
 21742                           
 21743                           ;stkvar	_fp @ sp[(0)+-4]
 21744  019648  0EFC               	movlw	-4
 21745  01964A  006F FF8C  F001    	movff	plusw1,btemp
 21746  019650  0EFD               	movlw	-3
 21747  019652  50E3               	movf	plusw1,w,c
 21748  019654  1001               	iorwf	btemp^0,w,c
 21749  019656  A4D8               	btfss	status,2,c
 21750  019658  D006               	goto	l11633
 21751  01965A                     u10670:
 21752                           
 21753                           ;stkvar	_c @ sp[(0)+-2]
 21754  01965A  0EFE               	movlw	-2
 21755  01965C  50E3               	movf	plusw1,w,c
 21756  01965E  6EE6               	movwf	postinc1,c
 21757  019660  ECA2  F0DE         	call	_putch	;wreg free
 21758  019664  D075               	goto	l3189
 21759  019666                     l11633:
 21760                           
 21761                           ;stkvar	_fp @ sp[(0)+-4]
 21762  019666  0EFC               	movlw	-4
 21763  019668  006F FF8C  F00B    	movff	plusw1,btemp+10
 21764  01966E  0EFD               	movlw	-3
 21765  019670  006F FF8C  F00C    	movff	plusw1,btemp+11
 21766  019676  0E04               	movlw	4
 21767  019678  240B               	addwf	(btemp+10)^0,w,c
 21768  01967A  6ED9               	movwf	fsr2l,c
 21769  01967C  0E00               	movlw	0
 21770  01967E  200C               	addwfc	(btemp+11)^0,w,c
 21771  019680  6EDA               	movwf	fsr2h,c
 21772  019682  50DE               	movf	postinc2,w,c
 21773  019684  10DE               	iorwf	postinc2,w,c
 21774  019686  B4D8               	btfsc	status,2,c
 21775  019688  D026               	goto	u10690
 21776                           
 21777                           ;stkvar	_fp @ sp[(0)+-4]
 21778  01968A  0EFC               	movlw	-4
 21779  01968C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21780  019692  0EFD               	movlw	-3
 21781  019694  006F FF8C  F00C    	movff	plusw1,btemp+11
 21782  01969A  0E04               	movlw	4
 21783  01969C  240B               	addwf	(btemp+10)^0,w,c
 21784  01969E  6ED9               	movwf	fsr2l,c
 21785  0196A0  0E00               	movlw	0
 21786  0196A2  200C               	addwfc	(btemp+11)^0,w,c
 21787  0196A4  6EDA               	movwf	fsr2h,c
 21788                           
 21789                           ;stkvar	_fp @ sp[(0)+-4]
 21790  0196A6  0EFC               	movlw	-4
 21791  0196A8  006F FF8C  F00B    	movff	plusw1,btemp+10
 21792  0196AE  0EFD               	movlw	-3
 21793  0196B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 21794  0196B6  0E02               	movlw	2
 21795  0196B8  240B               	addwf	(btemp+10)^0,w,c
 21796  0196BA  6EE9               	movwf	fsr0l,c
 21797  0196BC  0E00               	movlw	0
 21798  0196BE  200C               	addwfc	(btemp+11)^0,w,c
 21799  0196C0  6EEA               	movwf	fsr0h,c
 21800  0196C2  50DE               	movf	postinc2,w,c
 21801  0196C4  5CEE               	subwf	postinc0,w,c
 21802  0196C6  50EE               	movf	postinc0,w,c
 21803  0196C8  0A80               	xorlw	128
 21804  0196CA  6E01               	movwf	btemp^0,c
 21805  0196CC  50DE               	movf	postinc2,w,c
 21806  0196CE  0A80               	xorlw	128
 21807  0196D0  5801               	subwfb	btemp^0,w,c
 21808  0196D2  B0D8               	btfsc	status,0,c
 21809  0196D4  D03D               	goto	l3189
 21810  0196D6                     u10690:
 21811                           
 21812                           ;stkvar	_c @ sp[(0)+-2]
 21813                           ;stkvar	_fp @ sp[(0)+-4]
 21814  0196D6  0EFC               	movlw	-4
 21815  0196D8  006F FF8C  F00B    	movff	plusw1,btemp+10
 21816  0196DE  0EFD               	movlw	-3
 21817  0196E0  006F FF8C  F00C    	movff	plusw1,btemp+11
 21818  0196E6  0E02               	movlw	2
 21819  0196E8  240B               	addwf	(btemp+10)^0,w,c
 21820  0196EA  6ED9               	movwf	fsr2l,c
 21821  0196EC  0E00               	movlw	0
 21822  0196EE  200C               	addwfc	(btemp+11)^0,w,c
 21823  0196F0  6EDA               	movwf	fsr2h,c
 21824  0196F2  006F FF78  F00B    	movff	postinc2,btemp+10
 21825  0196F8  006F FF74  F00C    	movff	postdec2,btemp+11
 21826                           
 21827                           ;stkvar	_fp @ sp[(0)+-4]
 21828  0196FE  0EFC               	movlw	-4
 21829  019700  006F FF8F FFD9     	movff	plusw1,fsr2l
 21830  019706  0EFD               	movlw	-3
 21831  019708  006F FF8F FFDA     	movff	plusw1,fsr2h
 21832  01970E  006F FF78  F009    	movff	postinc2,btemp+8
 21833  019714  006F FF74  F00A    	movff	postdec2,btemp+9
 21834  01971A  500B               	movf	(btemp+10)^0,w,c
 21835  01971C  2409               	addwf	(btemp+8)^0,w,c
 21836  01971E  6ED9               	movwf	fsr2l,c
 21837  019720  500C               	movf	(btemp+11)^0,w,c
 21838  019722  200A               	addwfc	(btemp+9)^0,w,c
 21839  019724  6EDA               	movwf	fsr2h,c
 21840  019726  0EFE               	movlw	-2
 21841  019728  006F FF8F FFDF     	movff	plusw1,indf2
 21842                           
 21843                           ;stkvar	_fp @ sp[(0)+-4]
 21844  01972E  0EFC               	movlw	-4
 21845  019730  006F FF8C  F00B    	movff	plusw1,btemp+10
 21846  019736  0EFD               	movlw	-3
 21847  019738  006F FF8C  F00C    	movff	plusw1,btemp+11
 21848  01973E  0E02               	movlw	2
 21849  019740  240B               	addwf	(btemp+10)^0,w,c
 21850  019742  6ED9               	movwf	fsr2l,c
 21851  019744  0E00               	movlw	0
 21852  019746  200C               	addwfc	(btemp+11)^0,w,c
 21853  019748  6EDA               	movwf	fsr2h,c
 21854  01974A  2ADE               	incf	postinc2,f,c
 21855  01974C  0E00               	movlw	0
 21856  01974E  22DD               	addwfc	postdec2,f,c
 21857  019750                     l3189:
 21858                           
 21859                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21860  019750  52E5               	movf	postdec1,f,c
 21861  019752  52E5               	movf	postdec1,f,c
 21862  019754  52E5               	movf	postdec1,f,c
 21863  019756  52E5               	movf	postdec1,f,c
 21864  019758  0012               	return		;funcret
 21865  01975A                     __end_of_fputc:
 21866                           	opt callstack 0
 21867                           
 21868 ;; *************** function _putch *****************
 21869 ;; Defined at:
 21870 ;;		line 170 in file "eadog.c"
 21871 ;; Parameters:    Size  Location     Type
 21872 ;;  c               1  [STACK] unsigned char 
 21873 ;; Auto vars:     Size  Location     Type
 21874 ;;		None
 21875 ;; Return value:  Size  Location     Type
 21876 ;;                  1  [STACK] void 
 21877 ;; Registers used:
 21878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21879 ;; Tracked objects:
 21880 ;;		On entry : 0/0
 21881 ;;		On exit  : 0/0
 21882 ;;		Unchanged: 0/0
 21883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21888 ;;Total ram usage:        0 bytes
 21889 ;; Hardware stack levels used:    1
 21890 ;; Hardware stack levels required when called:   16
 21891 ;; This function calls:
 21892 ;;		_ringBufS_put_dma
 21893 ;; This function is called by:
 21894 ;;		_fputc
 21895 ;; This function uses a reentrant model
 21896 ;;
 21897                           
 21898                           	psect	text75
 21899  01BD44                     __ptext75:
 21900                           	opt callstack 0
 21901  01BD44                     _putch:
 21902                           	opt callstack 0
 21903                           
 21904                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21905                           ;stkvar	_c @ sp[(0)+-1]
 21906                           
 21907                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21908                           ;incstack = 0
 21909 ;; hardware stack exceeded
 21910  01BD44  0EFF               	movlw	-1
 21911  01BD46  50E3               	movf	plusw1,w,c
 21912  01BD48  6EE6               	movwf	postinc1,c
 21913  01BD4A  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 21914  01BD50  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 21915  01BD56  ECE0  F0D2         	call	_ringBufS_put_dma	;wreg free
 21916                           
 21917                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21918  01BD5A  52E5               	movf	postdec1,f,c
 21919  01BD5C  0012               	return		;funcret
 21920  01BD5E                     __end_of_putch:
 21921                           	opt callstack 0
 21922                           
 21923 ;; *************** function _ringBufS_put_dma *****************
 21924 ;; Defined at:
 21925 ;;		line 67 in file "ringbufs.c"
 21926 ;; Parameters:    Size  Location     Type
 21927 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21928 ;;		 -> ring_buf1(67), 
 21929 ;;  c               1  [STACK] const unsigned char 
 21930 ;; Auto vars:     Size  Location     Type
 21931 ;;		None
 21932 ;; Return value:  Size  Location     Type
 21933 ;;                  1  [STACK] void 
 21934 ;; Registers used:
 21935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21936 ;; Tracked objects:
 21937 ;;		On entry : 0/0
 21938 ;;		On exit  : 0/0
 21939 ;;		Unchanged: 0/0
 21940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21945 ;;Total ram usage:        0 bytes
 21946 ;; Hardware stack levels used:    1
 21947 ;; Hardware stack levels required when called:   15
 21948 ;; This function calls:
 21949 ;;		Nothing
 21950 ;; This function is called by:
 21951 ;;		_putch
 21952 ;; This function uses a reentrant model
 21953 ;;
 21954                           
 21955                           	psect	text76
 21956  01A5C0                     __ptext76:
 21957                           	opt callstack 0
 21958  01A5C0                     _ringBufS_put_dma:
 21959                           	opt callstack 0
 21960                           
 21961                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21962                           ;stkvar	__this @ sp[(0)+-2]
 21963                           
 21964                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21965                           ;incstack = 0
 21966 ;; hardware stack exceeded
 21967  01A5C0  0EFE               	movlw	-2
 21968  01A5C2  006F FF8C  F00B    	movff	plusw1,btemp+10
 21969  01A5C8  0EFF               	movlw	-1
 21970  01A5CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 21971  01A5D0  0E42               	movlw	66
 21972  01A5D2  240B               	addwf	(btemp+10)^0,w,c
 21973  01A5D4  6ED9               	movwf	fsr2l,c
 21974  01A5D6  0E00               	movlw	0
 21975  01A5D8  200C               	addwfc	(btemp+11)^0,w,c
 21976  01A5DA  6EDA               	movwf	fsr2h,c
 21977  01A5DC  0E40               	movlw	64
 21978  01A5DE  60DF               	cpfslt	indf2,c
 21979  01A5E0  D040               	goto	l1587
 21980                           
 21981                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21982                           ;stkvar	_c @ sp[(0)+-3]
 21983                           ;stkvar	__this @ sp[(0)+-2]
 21984  01A5E2  0EFE               	movlw	-2
 21985  01A5E4  006F FF8C  F00B    	movff	plusw1,btemp+10
 21986  01A5EA  0EFF               	movlw	-1
 21987  01A5EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 21988  01A5F2  0E40               	movlw	64
 21989  01A5F4  240B               	addwf	(btemp+10)^0,w,c
 21990  01A5F6  6ED9               	movwf	fsr2l,c
 21991  01A5F8  0E00               	movlw	0
 21992  01A5FA  200C               	addwfc	(btemp+11)^0,w,c
 21993  01A5FC  6EDA               	movwf	fsr2h,c
 21994  01A5FE  50DF               	movf	indf2,w,c
 21995  01A600  6E0C               	movwf	(btemp+11)^0,c
 21996                           
 21997                           ;stkvar	__this @ sp[(0)+-2]
 21998  01A602  0EFE               	movlw	-2
 21999  01A604  006F FF8C  F009    	movff	plusw1,btemp+8
 22000  01A60A  0EFF               	movlw	-1
 22001  01A60C  006F FF8C  F00A    	movff	plusw1,btemp+9
 22002  01A612  500C               	movf	(btemp+11)^0,w,c
 22003  01A614  2409               	addwf	(btemp+8)^0,w,c
 22004  01A616  6ED9               	movwf	fsr2l,c
 22005  01A618  0E00               	movlw	0
 22006  01A61A  200A               	addwfc	(btemp+9)^0,w,c
 22007  01A61C  6EDA               	movwf	fsr2h,c
 22008  01A61E  0EFD               	movlw	-3
 22009  01A620  006F FF8F FFDF     	movff	plusw1,indf2
 22010                           
 22011                           ;ringbufs.c: 71:   ++_this->head;
 22012                           ;stkvar	__this @ sp[(0)+-2]
 22013  01A626  0EFE               	movlw	-2
 22014  01A628  006F FF8C  F00B    	movff	plusw1,btemp+10
 22015  01A62E  0EFF               	movlw	-1
 22016  01A630  006F FF8C  F00C    	movff	plusw1,btemp+11
 22017  01A636  0E40               	movlw	64
 22018  01A638  240B               	addwf	(btemp+10)^0,w,c
 22019  01A63A  6ED9               	movwf	fsr2l,c
 22020  01A63C  0E00               	movlw	0
 22021  01A63E  200C               	addwfc	(btemp+11)^0,w,c
 22022  01A640  6EDA               	movwf	fsr2h,c
 22023  01A642  2ADF               	incf	indf2,f,c
 22024                           
 22025                           ;ringbufs.c: 72:   ++_this->count;
 22026                           ;stkvar	__this @ sp[(0)+-2]
 22027  01A644  0EFE               	movlw	-2
 22028  01A646  006F FF8C  F00B    	movff	plusw1,btemp+10
 22029  01A64C  0EFF               	movlw	-1
 22030  01A64E  006F FF8C  F00C    	movff	plusw1,btemp+11
 22031  01A654  0E42               	movlw	66
 22032  01A656  240B               	addwf	(btemp+10)^0,w,c
 22033  01A658  6ED9               	movwf	fsr2l,c
 22034  01A65A  0E00               	movlw	0
 22035  01A65C  200C               	addwfc	(btemp+11)^0,w,c
 22036  01A65E  6EDA               	movwf	fsr2h,c
 22037  01A660  2ADF               	incf	indf2,f,c
 22038  01A662                     l1587:
 22039                           
 22040                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 22041  01A662  52E5               	movf	postdec1,f,c
 22042  01A664  52E5               	movf	postdec1,f,c
 22043  01A666  52E5               	movf	postdec1,f,c
 22044  01A668  0012               	return		;funcret
 22045  01A66A                     __end_of_ringBufS_put_dma:
 22046                           	opt callstack 0
 22047                           
 22048 ;; *************** function _atoi *****************
 22049 ;; Defined at:
 22050 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 22051 ;; Parameters:    Size  Location     Type
 22052 ;;  s               2  [STACK] PTR const unsigned char 
 22053 ;;		 -> STR_65(103), STR_63(3), STR_62(3), STR_61(19), 
 22054 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 22055 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 22056 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 22057 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 22058 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 22059 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 22060 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 22061 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 22062 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 22063 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 22064 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 22065 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 22066 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 22067 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 22068 ;;		 -> STR_1(17), 
 22069 ;; Auto vars:     Size  Location     Type
 22070 ;;  n               2  [STACK] int 
 22071 ;;  neg             2  [STACK] int 
 22072 ;; Return value:  Size  Location     Type
 22073 ;;                  2  [STACK] int 
 22074 ;; Registers used:
 22075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 22076 ;; Tracked objects:
 22077 ;;		On entry : 0/0
 22078 ;;		On exit  : 0/0
 22079 ;;		Unchanged: 0/0
 22080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22085 ;;Total ram usage:        0 bytes
 22086 ;; Hardware stack levels used:    1
 22087 ;; Hardware stack levels required when called:   16
 22088 ;; This function calls:
 22089 ;;		_isdigit
 22090 ;;		_isspace
 22091 ;; This function is called by:
 22092 ;;		_vfpfcnvrt
 22093 ;; This function uses a reentrant model
 22094 ;;
 22095                           
 22096                           	psect	text77
 22097  01761A                     __ptext77:
 22098                           	opt callstack 0
 22099  01761A                     _atoi:
 22100                           	opt callstack 0
 22101                           
 22102                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22103  01761A  0E09               	movlw	9
 22104  01761C  26E1               	addwf	fsr1l,f,c
 22105  01761E  0E00               	movlw	0
 22106  017620  22E2               	addwfc	fsr1h,f,c
 22107                           
 22108                           ;stkvar	_n @ sp[(-9)+5]
 22109                           
 22110                           ;incstack = 0
 22111 ;; hardware stack exceeded
 22112  017622  0EFC               	movlw	-4
 22113  017624  6AE3               	clrf	plusw1,c
 22114  017626  0EFD               	movlw	-3
 22115  017628  6AE3               	clrf	plusw1,c
 22116                           
 22117                           ;stkvar	_neg @ sp[(-9)+7]
 22118  01762A  0EFE               	movlw	-2
 22119  01762C  6AE3               	clrf	plusw1,c
 22120  01762E  0EFF               	movlw	-1
 22121  017630  6AE3               	clrf	plusw1,c
 22122  017632  D011               	goto	l9221
 22123  017634                     l9219:
 22124                           
 22125                           ;stkvar	_s @ sp[(-9)+-2]
 22126  017634  0EF5               	movlw	-11
 22127  017636  50E3               	movf	plusw1,w,c
 22128  017638  0F01               	addlw	1
 22129  01763A  6E01               	movwf	btemp^0,c
 22130  01763C  0EF5               	movlw	-11
 22131  01763E  0060  F007  FFE3   	movff	btemp,plusw1
 22132  017644  6A01               	clrf	btemp^0,c
 22133  017646  0EF6               	movlw	-10
 22134  017648  50E3               	movf	plusw1,w,c
 22135  01764A  2001               	addwfc	btemp^0,w,c
 22136  01764C  6E01               	movwf	btemp^0,c
 22137  01764E  0EF6               	movlw	-10
 22138  017650  0060  F007  FFE3   	movff	btemp,plusw1
 22139  017656                     l9221:
 22140                           
 22141                           ;stkvar	_atoi$6052 @ sp[(-9)+4]
 22142  017656  0EFB               	movlw	-5
 22143  017658  6AE3               	clrf	plusw1,c
 22144  01765A  2AE3               	incf	plusw1,f,c
 22145                           
 22146                           ;stkvar	_s @ sp[(-9)+-2]
 22147  01765C  50E1               	movf	fsr1l,w,c
 22148  01765E  0FF5               	addlw	-11
 22149  017660  6ED9               	movwf	fsr2l,c
 22150  017662  50E2               	movf	fsr1h,w,c
 22151  017664  6EDA               	movwf	fsr2h,c
 22152  017666  0EFF               	movlw	255
 22153  017668  22DA               	addwfc	fsr2h,f,c
 22154  01766A  006F FF7B FFF6     	movff	postinc2,tblptrl
 22155  017670  006F FF77 FFF7     	movff	postdec2,tblptrh
 22156  017676                     	if	0	;tblptru may be non-zero
 22157  017676                     	endif
 22158  017676                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22159  017676  0E00               	movlw	low (__mediumconst shr (0+16))
 22160  017678  6EF8               	movwf	tblptru,c
 22161  01767A                     	endif
 22162  01767A  0008               	tblrd		*
 22163  01767C  50F5               	movf	tablat,w,c
 22164  01767E  0A20               	xorlw	32
 22165  017680  B4D8               	btfsc	status,2,c
 22166  017682  D023               	goto	l9229
 22167  017684  0EF7               	movlw	247
 22168  017686  6E0B               	movwf	(btemp+10)^0,c
 22169  017688  0EFF               	movlw	255
 22170  01768A  6E0C               	movwf	(btemp+11)^0,c
 22171                           
 22172                           ;stkvar	_s @ sp[(-9)+-2]
 22173  01768C  50E1               	movf	fsr1l,w,c
 22174  01768E  0FF5               	addlw	-11
 22175  017690  6ED9               	movwf	fsr2l,c
 22176  017692  50E2               	movf	fsr1h,w,c
 22177  017694  6EDA               	movwf	fsr2h,c
 22178  017696  0EFF               	movlw	255
 22179  017698  22DA               	addwfc	fsr2h,f,c
 22180  01769A  006F FF7B FFF6     	movff	postinc2,tblptrl
 22181  0176A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 22182  0176A6                     	if	0	;tblptru may be non-zero
 22183  0176A6                     	endif
 22184  0176A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22185  0176A6  0E00               	movlw	low (__mediumconst shr (0+16))
 22186  0176A8  6EF8               	movwf	tblptru,c
 22187  0176AA                     	endif
 22188  0176AA  0008               	tblrd		*
 22189  0176AC  50F5               	movf	tablat,w,c
 22190  0176AE  6E09               	movwf	(btemp+8)^0,c
 22191  0176B0  6A0A               	clrf	(btemp+9)^0,c
 22192  0176B2  500B               	movf	(btemp+10)^0,w,c
 22193  0176B4  2609               	addwf	(btemp+8)^0,f,c
 22194  0176B6  500C               	movf	(btemp+11)^0,w,c
 22195  0176B8  220A               	addwfc	(btemp+9)^0,f,c
 22196  0176BA  500A               	movf	(btemp+9)^0,w,c
 22197  0176BC  E104               	bnz	u8490
 22198  0176BE  0E05               	movlw	5
 22199  0176C0  5C09               	subwf	(btemp+8)^0,w,c
 22200  0176C2  A0D8               	btfss	status,0,c
 22201  0176C4  D002               	goto	l9229
 22202  0176C6                     u8490:
 22203                           
 22204                           ;stkvar	_atoi$6052 @ sp[(-9)+4]
 22205  0176C6  0EFB               	movlw	-5
 22206  0176C8  6AE3               	clrf	plusw1,c
 22207  0176CA                     l9229:
 22208                           
 22209                           ;stkvar	_atoi$6052 @ sp[(-9)+4]
 22210  0176CA  0EFB               	movlw	-5
 22211  0176CC  50E3               	movf	plusw1,w,c
 22212  0176CE  6E0B               	movwf	(btemp+10)^0,c
 22213  0176D0  6A0C               	clrf	(btemp+11)^0,c
 22214                           
 22215                           ;stkvar	_atoi$6051 @ sp[(-9)+2]
 22216  0176D2  0EF9               	movlw	-7
 22217  0176D4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22218  0176DA  0EFA               	movlw	-6
 22219  0176DC  0060  F033  FFE3   	movff	btemp+11,plusw1
 22220                           
 22221                           ;stkvar	_atoi$6051 @ sp[(-9)+2]
 22222  0176E2  0EF9               	movlw	-7
 22223  0176E4  006F FF8C  F001    	movff	plusw1,btemp
 22224  0176EA  0EFA               	movlw	-6
 22225  0176EC  50E3               	movf	plusw1,w,c
 22226  0176EE  1001               	iorwf	btemp^0,w,c
 22227  0176F0  B4D8               	btfsc	status,2,c
 22228  0176F2  D01F               	goto	l9239
 22229  0176F4  D79F               	goto	l9219
 22230  0176F6                     l9235:
 22231  0176F6  0E01               	movlw	1
 22232  0176F8  6E0B               	movwf	(btemp+10)^0,c
 22233  0176FA  0E00               	movlw	0
 22234  0176FC  6E0C               	movwf	(btemp+11)^0,c
 22235                           
 22236                           ;stkvar	_neg @ sp[(-9)+7]
 22237  0176FE  0EFE               	movlw	-2
 22238  017700  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22239  017706  0EFF               	movlw	-1
 22240  017708  0060  F033  FFE3   	movff	btemp+11,plusw1
 22241  01770E                     l9237:
 22242                           
 22243                           ;stkvar	_s @ sp[(-9)+-2]
 22244  01770E  0EF5               	movlw	-11
 22245  017710  50E3               	movf	plusw1,w,c
 22246  017712  0F01               	addlw	1
 22247  017714  6E01               	movwf	btemp^0,c
 22248  017716  0EF5               	movlw	-11
 22249  017718  0060  F007  FFE3   	movff	btemp,plusw1
 22250  01771E  6A01               	clrf	btemp^0,c
 22251  017720  0EF6               	movlw	-10
 22252  017722  50E3               	movf	plusw1,w,c
 22253  017724  2001               	addwfc	btemp^0,w,c
 22254  017726  6E01               	movwf	btemp^0,c
 22255  017728  0EF6               	movlw	-10
 22256  01772A  0060  F007  FFE3   	movff	btemp,plusw1
 22257  017730  D053               	goto	l9245
 22258  017732                     l9239:
 22259                           
 22260                           ;stkvar	_s @ sp[(-9)+-2]
 22261  017732  50E1               	movf	fsr1l,w,c
 22262  017734  0FF5               	addlw	-11
 22263  017736  6ED9               	movwf	fsr2l,c
 22264  017738  50E2               	movf	fsr1h,w,c
 22265  01773A  6EDA               	movwf	fsr2h,c
 22266  01773C  0EFF               	movlw	255
 22267  01773E  22DA               	addwfc	fsr2h,f,c
 22268  017740  006F FF7B FFF6     	movff	postinc2,tblptrl
 22269  017746  006F FF77 FFF7     	movff	postdec2,tblptrh
 22270  01774C                     	if	0	;tblptru may be non-zero
 22271  01774C                     	endif
 22272  01774C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22273  01774C  0E00               	movlw	low (__mediumconst shr (0+16))
 22274  01774E  6EF8               	movwf	tblptru,c
 22275  017750                     	endif
 22276  017750  0008               	tblrd		*
 22277  017752  50F5               	movf	tablat,w,c
 22278  017754  6E0B               	movwf	(btemp+10)^0,c
 22279  017756  6A0C               	clrf	(btemp+11)^0,c
 22280                           
 22281                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22282                           ; Switch size 1, requested type "simple"
 22283                           ; Number of cases is 1, Range of values is 0 to 0
 22284                           ; switch strategies available:
 22285                           ; Name         Instructions Cycles
 22286                           ; simple_byte            4     3 (average)
 22287                           ;	Chosen strategy is simple_byte
 22288  017758  500C               	movf	(btemp+11)^0,w,c
 22289  01775A  0A00               	xorlw	0	; case 0
 22290  01775C  A4D8               	btfss	status,2,c
 22291  01775E  D03C               	goto	l9245
 22292                           
 22293                           ; Switch size 1, requested type "simple"
 22294                           ; Number of cases is 2, Range of values is 43 to 45
 22295                           ; switch strategies available:
 22296                           ; Name         Instructions Cycles
 22297                           ; simple_byte            7     4 (average)
 22298                           ;	Chosen strategy is simple_byte
 22299  017760  500B               	movf	(btemp+10)^0,w,c
 22300  017762  0A2B               	xorlw	43	; case 43
 22301  017764  B4D8               	btfsc	status,2,c
 22302  017766  D7D3               	goto	l9237
 22303  017768  0A06               	xorlw	6	; case 45
 22304  01776A  B4D8               	btfsc	status,2,c
 22305  01776C  D7C4               	goto	l9235
 22306  01776E  D034               	goto	l9245
 22307  017770                     l9241:
 22308                           
 22309                           ;stkvar	_n @ sp[(-9)+5]
 22310  017770  0EFC               	movlw	-4
 22311  017772  006F FF8C  F00B    	movff	plusw1,btemp+10
 22312  017778  0EFD               	movlw	-3
 22313  01777A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22314  017780  0E0A               	movlw	10
 22315  017782  020B               	mulwf	(btemp+10)^0,c
 22316  017784  006F FFCC  F009    	movff	prodl,btemp+8
 22317  01778A  006F FFD0  F00A    	movff	prodh,btemp+9
 22318  017790  020C               	mulwf	(btemp+11)^0,c
 22319  017792  50F3               	movf	prodl,w,c
 22320  017794  260A               	addwf	(btemp+9)^0,f,c
 22321                           
 22322                           ;stkvar	_s @ sp[(-9)+-2]
 22323  017796  50E1               	movf	fsr1l,w,c
 22324  017798  0FF5               	addlw	-11
 22325  01779A  6ED9               	movwf	fsr2l,c
 22326  01779C  50E2               	movf	fsr1h,w,c
 22327  01779E  6EDA               	movwf	fsr2h,c
 22328  0177A0  0EFF               	movlw	255
 22329  0177A2  22DA               	addwfc	fsr2h,f,c
 22330  0177A4  006F FF7B FFF6     	movff	postinc2,tblptrl
 22331  0177AA  006F FF77 FFF7     	movff	postdec2,tblptrh
 22332  0177B0                     	if	0	;tblptru may be non-zero
 22333  0177B0                     	endif
 22334  0177B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22335  0177B0  0E00               	movlw	low (__mediumconst shr (0+16))
 22336  0177B2  6EF8               	movwf	tblptru,c
 22337  0177B4                     	endif
 22338  0177B4  0008               	tblrd		*
 22339  0177B6  50F5               	movf	tablat,w,c
 22340  0177B8  5E09               	subwf	(btemp+8)^0,f,c
 22341  0177BA  0E00               	movlw	0
 22342  0177BC  5A0A               	subwfb	(btemp+9)^0,f,c
 22343  0177BE  0E30               	movlw	48
 22344  0177C0  2609               	addwf	(btemp+8)^0,f,c
 22345  0177C2  0E00               	movlw	0
 22346  0177C4  220A               	addwfc	(btemp+9)^0,f,c
 22347                           
 22348                           ;stkvar	_n @ sp[(-9)+5]
 22349  0177C6  0EFC               	movlw	-4
 22350  0177C8  0060  F027  FFE3   	movff	btemp+8,plusw1
 22351  0177CE  0EFD               	movlw	-3
 22352  0177D0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22353  0177D6  D79B               	goto	l9237
 22354  0177D8                     l9245:
 22355  0177D8  0ED0               	movlw	208
 22356  0177DA  6E0B               	movwf	(btemp+10)^0,c
 22357  0177DC  0EFF               	movlw	255
 22358  0177DE  6E0C               	movwf	(btemp+11)^0,c
 22359                           
 22360                           ;stkvar	_s @ sp[(-9)+-2]
 22361  0177E0  50E1               	movf	fsr1l,w,c
 22362  0177E2  0FF5               	addlw	-11
 22363  0177E4  6ED9               	movwf	fsr2l,c
 22364  0177E6  50E2               	movf	fsr1h,w,c
 22365  0177E8  6EDA               	movwf	fsr2h,c
 22366  0177EA  0EFF               	movlw	255
 22367  0177EC  22DA               	addwfc	fsr2h,f,c
 22368  0177EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 22369  0177F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 22370  0177FA                     	if	0	;tblptru may be non-zero
 22371  0177FA                     	endif
 22372  0177FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22373  0177FA  0E00               	movlw	low (__mediumconst shr (0+16))
 22374  0177FC  6EF8               	movwf	tblptru,c
 22375  0177FE                     	endif
 22376  0177FE  0008               	tblrd		*
 22377  017800  50F5               	movf	tablat,w,c
 22378  017802  6E09               	movwf	(btemp+8)^0,c
 22379  017804  6A0A               	clrf	(btemp+9)^0,c
 22380  017806  500B               	movf	(btemp+10)^0,w,c
 22381  017808  2609               	addwf	(btemp+8)^0,f,c
 22382  01780A  500C               	movf	(btemp+11)^0,w,c
 22383  01780C  220A               	addwfc	(btemp+9)^0,f,c
 22384  01780E  500A               	movf	(btemp+9)^0,w,c
 22385  017810  E106               	bnz	u8510
 22386  017812  0E0A               	movlw	10
 22387  017814  5C09               	subwf	(btemp+8)^0,w,c
 22388  017816  B0D8               	btfsc	status,0,c
 22389  017818  D002               	goto	u8510
 22390  01781A  0E01               	movlw	1
 22391  01781C  D001               	goto	u8520
 22392  01781E                     u8510:
 22393  01781E  0E00               	movlw	0
 22394  017820                     u8520:
 22395  017820  6E0B               	movwf	(btemp+10)^0,c
 22396  017822  6A0C               	clrf	(btemp+11)^0,c
 22397                           
 22398                           ;stkvar	_atoi$6053 @ sp[(-9)+0]
 22399  017824  0EF7               	movlw	-9
 22400  017826  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22401  01782C  0EF8               	movlw	-8
 22402  01782E  0060  F033  FFE3   	movff	btemp+11,plusw1
 22403                           
 22404                           ;stkvar	_atoi$6053 @ sp[(-9)+0]
 22405  017834  0EF7               	movlw	-9
 22406  017836  006F FF8C  F001    	movff	plusw1,btemp
 22407  01783C  0EF8               	movlw	-8
 22408  01783E  50E3               	movf	plusw1,w,c
 22409  017840  1001               	iorwf	btemp^0,w,c
 22410  017842  A4D8               	btfss	status,2,c
 22411  017844  D795               	goto	l9241
 22412                           
 22413                           ;stkvar	_neg @ sp[(-9)+7]
 22414  017846  0EFE               	movlw	-2
 22415  017848  006F FF8C  F001    	movff	plusw1,btemp
 22416  01784E  0EFF               	movlw	-1
 22417  017850  50E3               	movf	plusw1,w,c
 22418  017852  1001               	iorwf	btemp^0,w,c
 22419  017854  A4D8               	btfss	status,2,c
 22420  017856  D00E               	goto	l9255
 22421                           
 22422                           ;stkvar	_n @ sp[(-9)+5]
 22423  017858  0EFC               	movlw	-4
 22424  01785A  006F FF8C  F001    	movff	plusw1,btemp
 22425  017860  1E01               	comf	btemp^0,f,c
 22426  017862  0EFD               	movlw	-3
 22427  017864  006F FF8C  F002    	movff	plusw1,btemp+1
 22428  01786A  1E02               	comf	(btemp+1)^0,f,c
 22429  01786C  2A01               	incf	btemp^0,f,c
 22430  01786E  B4D8               	btfsc	status,2,c
 22431  017870  2A02               	incf	(btemp+1)^0,f,c
 22432  017872  D008               	goto	l3120
 22433  017874                     l9255:
 22434                           
 22435                           ;stkvar	_n @ sp[(-9)+5]
 22436  017874  0EFC               	movlw	-4
 22437  017876  006F FF8C  F001    	movff	plusw1,btemp
 22438  01787C  0EFD               	movlw	-3
 22439  01787E  006F FF8C  F002    	movff	plusw1,btemp+1
 22440  017884                     l3120:
 22441                           
 22442                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22443  017884  0EF5               	movlw	245
 22444  017886  26E1               	addwf	fsr1l,f,c
 22445  017888  0EFF               	movlw	255
 22446  01788A  22E2               	addwfc	fsr1h,f,c
 22447  01788C  0012               	return		;funcret
 22448  01788E                     __end_of_atoi:
 22449                           	opt callstack 0
 22450                           
 22451 ;; *************** function _isspace *****************
 22452 ;; Defined at:
 22453 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 22454 ;; Parameters:    Size  Location     Type
 22455 ;;  c               2  [STACK] int 
 22456 ;; Auto vars:     Size  Location     Type
 22457 ;;		None
 22458 ;; Return value:  Size  Location     Type
 22459 ;;                  2  [STACK] int 
 22460 ;; Registers used:
 22461 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22462 ;; Tracked objects:
 22463 ;;		On entry : 0/0
 22464 ;;		On exit  : 0/0
 22465 ;;		Unchanged: 0/0
 22466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22471 ;;Total ram usage:        0 bytes
 22472 ;; Hardware stack levels used:    1
 22473 ;; Hardware stack levels required when called:   15
 22474 ;; This function calls:
 22475 ;;		Nothing
 22476 ;; This function is called by:
 22477 ;;		_atoi
 22478 ;; This function uses a reentrant model
 22479 ;;
 22480                           
 22481                           	psect	text78
 22482  01B09A                     __ptext78:
 22483                           	opt callstack 0
 22484  01B09A                     _isspace:
 22485                           	opt callstack 0
 22486                           
 22487                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22488  01B09A  52E6               	movf	postinc1,f,c
 22489                           
 22490                           ;stkvar	_isspace$6102 @ sp[(-1)+0]
 22491                           
 22492                           ;incstack = 0
 22493 ;; hardware stack exceeded
 22494  01B09C  0EFF               	movlw	-1
 22495  01B09E  6AE3               	clrf	plusw1,c
 22496  01B0A0  2AE3               	incf	plusw1,f,c
 22497                           
 22498                           ;stkvar	_c @ sp[(-1)+-2]
 22499  01B0A2  0EFD               	movlw	-3
 22500  01B0A4  006F FF8C  F001    	movff	plusw1,btemp
 22501  01B0AA  0E20               	movlw	32
 22502  01B0AC  1801               	xorwf	btemp^0,w,c
 22503  01B0AE  E104               	bnz	u7340
 22504  01B0B0  0EFE               	movlw	-2
 22505  01B0B2  50E3               	movf	plusw1,w,c
 22506  01B0B4  B4D8               	btfsc	status,2,c
 22507  01B0B6  D012               	goto	l8613
 22508  01B0B8                     u7340:
 22509                           
 22510                           ;stkvar	_c @ sp[(-1)+-2]
 22511  01B0B8  0EFD               	movlw	-3
 22512  01B0BA  50E3               	movf	plusw1,w,c
 22513  01B0BC  0FF7               	addlw	247
 22514  01B0BE  6E0B               	movwf	(btemp+10)^0,c
 22515  01B0C0  0EFE               	movlw	-2
 22516  01B0C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 22517  01B0C8  0EFF               	movlw	255
 22518  01B0CA  220C               	addwfc	(btemp+11)^0,f,c
 22519  01B0CC  500C               	movf	(btemp+11)^0,w,c
 22520  01B0CE  E104               	bnz	u7350
 22521  01B0D0  0E05               	movlw	5
 22522  01B0D2  5C0B               	subwf	(btemp+10)^0,w,c
 22523  01B0D4  A0D8               	btfss	status,0,c
 22524  01B0D6  D002               	goto	l8613
 22525  01B0D8                     u7350:
 22526                           
 22527                           ;stkvar	_isspace$6102 @ sp[(-1)+0]
 22528  01B0D8  0EFF               	movlw	-1
 22529  01B0DA  6AE3               	clrf	plusw1,c
 22530  01B0DC                     l8613:
 22531                           
 22532                           ;stkvar	_isspace$6102 @ sp[(-1)+0]
 22533  01B0DC  0EFF               	movlw	-1
 22534  01B0DE  50E3               	movf	plusw1,w,c
 22535  01B0E0  6E01               	movwf	btemp^0,c
 22536  01B0E2  6A02               	clrf	(btemp+1)^0,c
 22537                           
 22538                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22539  01B0E4  52E5               	movf	postdec1,f,c
 22540  01B0E6  52E5               	movf	postdec1,f,c
 22541  01B0E8  52E5               	movf	postdec1,f,c
 22542  01B0EA  0012               	return		;funcret
 22543  01B0EC                     __end_of_isspace:
 22544                           	opt callstack 0
 22545                           
 22546 ;; *************** function _isdigit *****************
 22547 ;; Defined at:
 22548 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 22549 ;; Parameters:    Size  Location     Type
 22550 ;;  c               2  [STACK] int 
 22551 ;; Auto vars:     Size  Location     Type
 22552 ;;		None
 22553 ;; Return value:  Size  Location     Type
 22554 ;;                  2  [STACK] int 
 22555 ;; Registers used:
 22556 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22557 ;; Tracked objects:
 22558 ;;		On entry : 0/0
 22559 ;;		On exit  : 0/0
 22560 ;;		Unchanged: 0/0
 22561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22566 ;;Total ram usage:        0 bytes
 22567 ;; Hardware stack levels used:    1
 22568 ;; Hardware stack levels required when called:   15
 22569 ;; This function calls:
 22570 ;;		Nothing
 22571 ;; This function is called by:
 22572 ;;		_vfpfcnvrt
 22573 ;;		_atoi
 22574 ;; This function uses a reentrant model
 22575 ;;
 22576                           
 22577                           	psect	text79
 22578  01B798                     __ptext79:
 22579                           	opt callstack 0
 22580  01B798                     _isdigit:
 22581                           	opt callstack 0
 22582                           
 22583                           ;stkvar	_c @ sp[(0)+-2]
 22584                           
 22585                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22586                           ;incstack = 0
 22587 ;; hardware stack exceeded
 22588  01B798  0EFE               	movlw	-2
 22589  01B79A  50E3               	movf	plusw1,w,c
 22590  01B79C  0FD0               	addlw	208
 22591  01B79E  6E0B               	movwf	(btemp+10)^0,c
 22592  01B7A0  0EFF               	movlw	-1
 22593  01B7A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 22594  01B7A8  0EFF               	movlw	255
 22595  01B7AA  220C               	addwfc	(btemp+11)^0,f,c
 22596  01B7AC  500C               	movf	(btemp+11)^0,w,c
 22597  01B7AE  E106               	bnz	u6190
 22598  01B7B0  0E0A               	movlw	10
 22599  01B7B2  5C0B               	subwf	(btemp+10)^0,w,c
 22600  01B7B4  B0D8               	btfsc	status,0,c
 22601  01B7B6  D002               	goto	u6190
 22602  01B7B8  0E01               	movlw	1
 22603  01B7BA  D001               	goto	u6200
 22604  01B7BC                     u6190:
 22605  01B7BC  0E00               	movlw	0
 22606  01B7BE                     u6200:
 22607  01B7BE  6E01               	movwf	btemp^0,c
 22608  01B7C0  6A02               	clrf	(btemp+1)^0,c
 22609                           
 22610                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22611  01B7C2  52E5               	movf	postdec1,f,c
 22612  01B7C4  52E5               	movf	postdec1,f,c
 22613  01B7C6  0012               	return		;funcret
 22614  01B7C8                     __end_of_isdigit:
 22615                           	opt callstack 0
 22616                           
 22617 ;; *************** function _set_vterm *****************
 22618 ;; Defined at:
 22619 ;;		line 107 in file "mconfig.c"
 22620 ;; Parameters:    Size  Location     Type
 22621 ;;  vterm           1  [STACK] const unsigned char 
 22622 ;; Auto vars:     Size  Location     Type
 22623 ;;		None
 22624 ;; Return value:  Size  Location     Type
 22625 ;;                  1  [STACK] unsigned char 
 22626 ;; Registers used:
 22627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22628 ;; Tracked objects:
 22629 ;;		On entry : 0/2
 22630 ;;		On exit  : 0/0
 22631 ;;		Unchanged: 0/0
 22632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22637 ;;Total ram usage:        0 bytes
 22638 ;; Hardware stack levels used:    1
 22639 ;; Hardware stack levels required when called:   15
 22640 ;; This function calls:
 22641 ;;		Nothing
 22642 ;; This function is called by:
 22643 ;;		_main
 22644 ;;		_check_help
 22645 ;; This function uses a reentrant model
 22646 ;;
 22647                           
 22648                           	psect	text80
 22649  01BCCE                     __ptext80:
 22650                           	opt callstack 0
 22651  01BCCE                     _set_vterm:
 22652                           	opt callstack 15
 22653                           
 22654                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 22655                           ;stkvar	_vterm @ sp[(0)+-1]
 22656                           
 22657                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22658                           ;incstack = 0
 22659  01BCCE  0EFF               	movlw	-1
 22660  01BCD0  006F FF8C  F00C    	movff	plusw1,btemp+11
 22661  01BCD6  0E03               	movlw	3
 22662  01BCD8  160C               	andwf	(btemp+11)^0,f,c
 22663  01BCDA  EE22  F206         	lfsr	2,_D+480
 22664  01BCDE  50DF               	movf	223,w,c
 22665  01BCE0  180C               	xorwf	(btemp+11)^0,w,c
 22666  01BCE2  0BFE               	andlw	-2
 22667  01BCE4  180C               	xorwf	(btemp+11)^0,w,c
 22668  01BCE6  6EDF               	movwf	223,c
 22669                           
 22670                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22671  01BCE8  52E5               	movf	postdec1,f,c
 22672  01BCEA  0012               	return		;funcret
 22673  01BCEC                     __end_of_set_vterm:
 22674                           	opt callstack 0
 22675                           
 22676 ;; *************** function _set_temp_display_help *****************
 22677 ;; Defined at:
 22678 ;;		line 211 in file "mconfig.c"
 22679 ;; Parameters:    Size  Location     Type
 22680 ;;  new_response    1  [STACK] const enum E16509
 22681 ;; Auto vars:     Size  Location     Type
 22682 ;;		None
 22683 ;; Return value:  Size  Location     Type
 22684 ;;                  1  [STACK] enum E16509
 22685 ;; Registers used:
 22686 ;;		wreg, fsr1l, fsr1h
 22687 ;; Tracked objects:
 22688 ;;		On entry : 0/1
 22689 ;;		On exit  : 3F/1
 22690 ;;		Unchanged: 0/0
 22691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22696 ;;Total ram usage:        0 bytes
 22697 ;; Hardware stack levels used:    1
 22698 ;; Hardware stack levels required when called:   15
 22699 ;; This function calls:
 22700 ;;		Nothing
 22701 ;; This function is called by:
 22702 ;;		_check_help
 22703 ;; This function uses a reentrant model
 22704 ;;
 22705                           
 22706                           	psect	text81
 22707  01BE32                     __ptext81:
 22708                           	opt callstack 0
 22709  01BE32                     _set_temp_display_help:
 22710                           	opt callstack 14
 22711                           
 22712                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 22713                           
 22714                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22715                           ;incstack = 0
 22716  01BE32  0101               	movlb	1	; () banked
 22717  01BE34  51A5               	movf	(_V+165)& (0+255),w,b	;volatile
 22718                           
 22719                           ; BSR set to: 1
 22720                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 22721                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22722  01BE36  0EFF               	movlw	-1
 22723  01BE38  006F FF8C  F1A5    	movff	plusw1,_V+165	;volatile
 22724                           
 22725                           ; BSR set to: 1
 22726                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 22727  01BE3E  52E5               	movf	postdec1,f,c
 22728  01BE40  0012               	return		;funcret
 22729  01BE42                     __end_of_set_temp_display_help:
 22730                           	opt callstack 0
 22731                           
 22732 ;; *************** function _set_display_info *****************
 22733 ;; Defined at:
 22734 ;;		line 200 in file "mconfig.c"
 22735 ;; Parameters:    Size  Location     Type
 22736 ;;  new_response    1  [STACK] const enum E16509
 22737 ;; Auto vars:     Size  Location     Type
 22738 ;;		None
 22739 ;; Return value:  Size  Location     Type
 22740 ;;                  1  [STACK] enum E16994
 22741 ;; Registers used:
 22742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22743 ;; Tracked objects:
 22744 ;;		On entry : 0/1
 22745 ;;		On exit  : 0/0
 22746 ;;		Unchanged: 0/0
 22747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22752 ;;Total ram usage:        0 bytes
 22753 ;; Hardware stack levels used:    1
 22754 ;; Hardware stack levels required when called:   16
 22755 ;; This function calls:
 22756 ;;		_TimerDone
 22757 ;; This function is called by:
 22758 ;;		_main
 22759 ;;		_check_help
 22760 ;; This function uses a reentrant model
 22761 ;;
 22762                           
 22763                           	psect	text82
 22764  01BCEC                     __ptext82:
 22765                           	opt callstack 0
 22766  01BCEC                     _set_display_info:
 22767                           	opt callstack 14
 22768                           
 22769                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 22770                           
 22771                           ; BSR set to: 1
 22772                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22773                           ;incstack = 0
 22774  01BCEC  0E07               	movlw	7
 22775  01BCEE  6EE6               	movwf	postinc1,c
 22776  01BCF0  ECA3  F0DC         	call	_TimerDone	;wreg free
 22777  01BCF4  5001               	movf	btemp^0,w,c
 22778  01BCF6  B4D8               	btfsc	status,2,c
 22779  01BCF8  D006               	goto	l1722
 22780                           
 22781                           ;mconfig.c: 205:   old_info = V.response.info;
 22782  01BCFA  0101               	movlb	1	; () banked
 22783  01BCFC  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 22784                           
 22785                           ; BSR set to: 1
 22786                           ;mconfig.c: 206:   V.response.info = new_response_info;
 22787                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22788  01BCFE  0EFF               	movlw	-1
 22789  01BD00  006F FF8C  F1A4    	movff	plusw1,_V+164	;volatile
 22790  01BD06                     l1722:
 22791                           
 22792                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 22793  01BD06  52E5               	movf	postdec1,f,c
 22794  01BD08  0012               	return		;funcret
 22795  01BD0A                     __end_of_set_display_info:
 22796                           	opt callstack 0
 22797                           
 22798 ;; *************** function _mode_lamp_dim *****************
 22799 ;; Defined at:
 22800 ;;		line 13 in file "mconfig.c"
 22801 ;; Parameters:    Size  Location     Type
 22802 ;;  level           2  [STACK] const unsigned short 
 22803 ;; Auto vars:     Size  Location     Type
 22804 ;;		None
 22805 ;; Return value:  Size  Location     Type
 22806 ;;                  1  [STACK] void 
 22807 ;; Registers used:
 22808 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22809 ;; Tracked objects:
 22810 ;;		On entry : 0/1
 22811 ;;		On exit  : 0/0
 22812 ;;		Unchanged: 0/0
 22813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22818 ;;Total ram usage:        0 bytes
 22819 ;; Hardware stack levels used:    1
 22820 ;; Hardware stack levels required when called:   16
 22821 ;; This function calls:
 22822 ;;		_PWM8_LoadDutyValue
 22823 ;; This function is called by:
 22824 ;;		_main
 22825 ;;		_check_help
 22826 ;; This function uses a reentrant model
 22827 ;;
 22828                           
 22829                           	psect	text83
 22830  01BD7A                     __ptext83:
 22831                           	opt callstack 0
 22832  01BD7A                     _mode_lamp_dim:
 22833                           	opt callstack 14
 22834                           
 22835                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22836                           ;stkvar	_level @ sp[(0)+-2]
 22837                           
 22838                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22839                           ;incstack = 0
 22840  01BD7A  0EFE               	movlw	-2
 22841  01BD7C  006F FF8F FFE6     	movff	plusw1,postinc1
 22842  01BD82  006F FF8F FFE6     	movff	plusw1,postinc1
 22843  01BD88  EC06  F0DA         	call	_PWM8_LoadDutyValue	;wreg free
 22844                           
 22845                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22846  01BD8C  52E5               	movf	postdec1,f,c
 22847  01BD8E  52E5               	movf	postdec1,f,c
 22848  01BD90  0012               	return		;funcret
 22849  01BD92                     __end_of_mode_lamp_dim:
 22850                           	opt callstack 0
 22851                           
 22852 ;; *************** function _mode_lamp_bright *****************
 22853 ;; Defined at:
 22854 ;;		line 18 in file "mconfig.c"
 22855 ;; Parameters:    Size  Location     Type
 22856 ;;		None
 22857 ;; Auto vars:     Size  Location     Type
 22858 ;;		None
 22859 ;; Return value:  Size  Location     Type
 22860 ;;                  1  [STACK] void 
 22861 ;; Registers used:
 22862 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22863 ;; Tracked objects:
 22864 ;;		On entry : 0/0
 22865 ;;		On exit  : 0/0
 22866 ;;		Unchanged: 0/0
 22867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22872 ;;Total ram usage:        0 bytes
 22873 ;; Hardware stack levels used:    1
 22874 ;; Hardware stack levels required when called:   16
 22875 ;; This function calls:
 22876 ;;		_PWM8_LoadDutyValue
 22877 ;; This function is called by:
 22878 ;;		_check_help
 22879 ;; This function uses a reentrant model
 22880 ;;
 22881                           
 22882                           	psect	text84
 22883  01BE60                     __ptext84:
 22884                           	opt callstack 0
 22885  01BE60                     _mode_lamp_bright:
 22886                           	opt callstack 13
 22887                           
 22888                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22889                           
 22890                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22891                           ;incstack = 0
 22892  01BE60  0E2C               	movlw	44
 22893  01BE62  6EE6               	movwf	postinc1,c
 22894  01BE64  0E01               	movlw	1
 22895  01BE66  6EE6               	movwf	postinc1,c
 22896  01BE68  EC06  F0DA         	call	_PWM8_LoadDutyValue	;wreg free
 22897                           
 22898                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22899  01BE6C  0012               	return		;funcret
 22900  01BE6E                     __end_of_mode_lamp_bright:
 22901                           	opt callstack 0
 22902                           
 22903 ;; *************** function _PWM8_LoadDutyValue *****************
 22904 ;; Defined at:
 22905 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22906 ;; Parameters:    Size  Location     Type
 22907 ;;  dutyValue       2  [STACK] unsigned short 
 22908 ;; Auto vars:     Size  Location     Type
 22909 ;;		None
 22910 ;; Return value:  Size  Location     Type
 22911 ;;                  1  [STACK] void 
 22912 ;; Registers used:
 22913 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22914 ;; Tracked objects:
 22915 ;;		On entry : 0/1
 22916 ;;		On exit  : 0/0
 22917 ;;		Unchanged: 0/0
 22918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22923 ;;Total ram usage:        0 bytes
 22924 ;; Hardware stack levels used:    1
 22925 ;; Hardware stack levels required when called:   15
 22926 ;; This function calls:
 22927 ;;		Nothing
 22928 ;; This function is called by:
 22929 ;;		_mode_lamp_dim
 22930 ;;		_mode_lamp_bright
 22931 ;; This function uses a reentrant model
 22932 ;;
 22933                           
 22934                           	psect	text85
 22935  01B40C                     __ptext85:
 22936                           	opt callstack 0
 22937  01B40C                     _PWM8_LoadDutyValue:
 22938                           	opt callstack 14
 22939                           
 22940                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22941                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22942                           
 22943                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22944                           ;incstack = 0
 22945  01B40C  0EFE               	movlw	-2
 22946  01B40E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22947  01B414  0EFF               	movlw	-1
 22948  01B416  006F FF8C  F00C    	movff	plusw1,btemp+11
 22949  01B41C  90D8               	bcf	status,0,c
 22950  01B41E  320C               	rrcf	(btemp+11)^0,f,c
 22951  01B420  320B               	rrcf	(btemp+10)^0,f,c
 22952  01B422  90D8               	bcf	status,0,c
 22953  01B424  320C               	rrcf	(btemp+11)^0,f,c
 22954  01B426  320B               	rrcf	(btemp+10)^0,f,c
 22955  01B428  500B               	movf	(btemp+10)^0,w,c
 22956  01B42A  6E61               	movwf	97,c	;volatile
 22957                           
 22958                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22959                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22960  01B42C  0EFE               	movlw	-2
 22961  01B42E  006F FF8C  F00C    	movff	plusw1,btemp+11
 22962  01B434  0E03               	movlw	3
 22963  01B436  160C               	andwf	(btemp+11)^0,f,c
 22964  01B438  0E06               	movlw	6
 22965  01B43A  6E01               	movwf	btemp^0,c
 22966  01B43C                     u9335:
 22967  01B43C  90D8               	bcf	status,0,c
 22968  01B43E  360C               	rlcf	(btemp+11)^0,f,c
 22969  01B440  2E01               	decfsz	btemp^0,f,c
 22970  01B442  D7FC               	goto	u9335
 22971  01B444  500C               	movf	(btemp+11)^0,w,c
 22972  01B446  6E60               	movwf	96,c	;volatile
 22973                           
 22974                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22975  01B448  52E5               	movf	postdec1,f,c
 22976  01B44A  52E5               	movf	postdec1,f,c
 22977  01B44C  0012               	return		;funcret
 22978  01B44E                     __end_of_PWM8_LoadDutyValue:
 22979                           	opt callstack 0
 22980                           
 22981 ;; *************** function _help_button *****************
 22982 ;; Defined at:
 22983 ;;		line 26 in file "mconfig.c"
 22984 ;; Parameters:    Size  Location     Type
 22985 ;;		None
 22986 ;; Auto vars:     Size  Location     Type
 22987 ;;		None
 22988 ;; Return value:  Size  Location     Type
 22989 ;;                  1  [STACK] _Bool 
 22990 ;; Registers used:
 22991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22992 ;; Tracked objects:
 22993 ;;		On entry : 0/1
 22994 ;;		On exit  : 0/0
 22995 ;;		Unchanged: 0/0
 22996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23001 ;;Total ram usage:        0 bytes
 23002 ;; Hardware stack levels used:    1
 23003 ;; Hardware stack levels required when called:   16
 23004 ;; This function calls:
 23005 ;;		_StartTimer
 23006 ;;		_TimerDone
 23007 ;; This function is called by:
 23008 ;;		_check_help
 23009 ;; This function uses a reentrant model
 23010 ;;
 23011                           
 23012                           	psect	text86
 23013  01B5C4                     __ptext86:
 23014                           	opt callstack 0
 23015  01B5C4                     _help_button:
 23016                           	opt callstack 13
 23017                           
 23018                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 23019                           
 23020                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23021                           ;incstack = 0
 23022  01B5C4  B0CB               	btfsc	203,0,c	;volatile
 23023  01B5C6  D00C               	goto	l1665
 23024                           
 23025                           ;mconfig.c: 29:   V.help = 1;
 23026  01B5C8  0101               	movlb	1	; () banked
 23027  01B5CA  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 23028                           
 23029                           ; BSR set to: 1
 23030                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 23031  01B5CC  0E08               	movlw	8
 23032  01B5CE  6EE6               	movwf	postinc1,c
 23033  01B5D0  ECA3  F0DC         	call	_TimerDone	;wreg free
 23034  01B5D4  5001               	movf	btemp^0,w,c
 23035  01B5D6  B4D8               	btfsc	status,2,c
 23036  01B5D8  D003               	goto	l1665
 23037                           
 23038                           ;mconfig.c: 31:    return 1;
 23039  01B5DA  0E01               	movlw	1
 23040  01B5DC  6E01               	movwf	btemp^0,c
 23041  01B5DE  0012               	return	
 23042  01B5E0                     l1665:
 23043                           
 23044                           ;mconfig.c: 34:  if (!V.help)
 23045  01B5E0  0101               	movlb	1	; () banked
 23046  01B5E2  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 23047  01B5E4  D008               	goto	l10353
 23048                           
 23049                           ; BSR set to: 1
 23050                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 23051  01B5E6  0E2C               	movlw	44
 23052  01B5E8  6EE6               	movwf	postinc1,c
 23053  01B5EA  0E01               	movlw	1
 23054  01B5EC  6EE6               	movwf	postinc1,c
 23055  01B5EE  0E08               	movlw	8
 23056  01B5F0  6EE6               	movwf	postinc1,c
 23057  01B5F2  EC27  F0DA         	call	_StartTimer	;wreg free
 23058  01B5F6                     l10353:
 23059                           
 23060                           ;mconfig.c: 37:  return 0;
 23061  01B5F6  0E00               	movlw	0
 23062  01B5F8  6E01               	movwf	btemp^0,c
 23063                           
 23064                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 23065  01B5FA  0012               	return		;funcret
 23066  01B5FC                     __end_of_help_button:
 23067                           	opt callstack 0
 23068                           
 23069 ;; *************** function _TimerDone *****************
 23070 ;; Defined at:
 23071 ;;		line 20 in file "timers.c"
 23072 ;; Parameters:    Size  Location     Type
 23073 ;;  timer           1  [STACK] const unsigned char 
 23074 ;; Auto vars:     Size  Location     Type
 23075 ;;		None
 23076 ;; Return value:  Size  Location     Type
 23077 ;;                  1  [STACK] _Bool 
 23078 ;; Registers used:
 23079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23080 ;; Tracked objects:
 23081 ;;		On entry : 0/1
 23082 ;;		On exit  : 0/0
 23083 ;;		Unchanged: 0/0
 23084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23089 ;;Total ram usage:        0 bytes
 23090 ;; Hardware stack levels used:    1
 23091 ;; Hardware stack levels required when called:   15
 23092 ;; This function calls:
 23093 ;;		Nothing
 23094 ;; This function is called by:
 23095 ;;		_main
 23096 ;;		_WaitMs
 23097 ;;		_help_button
 23098 ;;		_check_help
 23099 ;;		_set_display_info
 23100 ;;		_update_adc_result
 23101 ;;		_esr_check
 23102 ;; This function uses a reentrant model
 23103 ;;
 23104                           
 23105                           	psect	text87
 23106  01B946                     __ptext87:
 23107                           	opt callstack 0
 23108  01B946                     _TimerDone:
 23109                           	opt callstack 14
 23110                           
 23111                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23112                           ;incstack = 0
 23113  01B946  0004               	clrwdt		;# 
 23114                           
 23115                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 23116                           ;stkvar	_timer @ sp[(0)+-1]
 23117  01B948  0EFF               	movlw	-1
 23118  01B94A  50E3               	movf	plusw1,w,c
 23119  01B94C  0D02               	mullw	2
 23120  01B94E  0E54               	movlw	low _tickCount
 23121  01B950  24F3               	addwf	243,w,c
 23122  01B952  6ED9               	movwf	fsr2l,c
 23123  01B954  0E02               	movlw	high _tickCount
 23124  01B956  20F4               	addwfc	prodh,w,c
 23125  01B958  6EDA               	movwf	fsr2h,c
 23126  01B95A  50DE               	movf	postinc2,w,c
 23127  01B95C  10DE               	iorwf	postinc2,w,c
 23128  01B95E  A4D8               	btfss	status,2,c
 23129  01B960  D002               	goto	l9653
 23130                           
 23131                           ;timers.c: 24:   return 1;
 23132  01B962  0E01               	movlw	1
 23133  01B964  D001               	goto	L27
 23134  01B966                     l9653:
 23135                           
 23136                           ;timers.c: 26:  return 0;
 23137  01B966  0E00               	movlw	0
 23138  01B968                     L27:
 23139  01B968  6E01               	movwf	btemp^0,c
 23140                           
 23141                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 23142  01B96A  52E5               	movf	postdec1,f,c
 23143  01B96C  0012               	return		;funcret
 23144  01B96E                     __end_of_TimerDone:
 23145                           	opt callstack 0
 23146                           
 23147 ;; *************** function _StartTimer *****************
 23148 ;; Defined at:
 23149 ;;		line 12 in file "timers.c"
 23150 ;; Parameters:    Size  Location     Type
 23151 ;;  timer           1  [STACK] const unsigned char 
 23152 ;;  count           2  [STACK] const unsigned short 
 23153 ;; Auto vars:     Size  Location     Type
 23154 ;;		None
 23155 ;; Return value:  Size  Location     Type
 23156 ;;                  1  [STACK] void 
 23157 ;; Registers used:
 23158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23159 ;; Tracked objects:
 23160 ;;		On entry : 0/0
 23161 ;;		On exit  : 0/0
 23162 ;;		Unchanged: 0/0
 23163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23168 ;;Total ram usage:        0 bytes
 23169 ;; Hardware stack levels used:    1
 23170 ;; Hardware stack levels required when called:   15
 23171 ;; This function calls:
 23172 ;;		Nothing
 23173 ;; This function is called by:
 23174 ;;		_main
 23175 ;;		_WaitMs
 23176 ;;		_help_button
 23177 ;;		_check_help
 23178 ;;		_update_adc_result
 23179 ;;		_calc_bsoc
 23180 ;;		_esr_check
 23181 ;; This function uses a reentrant model
 23182 ;;
 23183                           
 23184                           	psect	text88
 23185  01B44E                     __ptext88:
 23186                           	opt callstack 0
 23187  01B44E                     _StartTimer:
 23188                           	opt callstack 0
 23189                           
 23190                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 23191                           ;stkvar	_count @ sp[(0)+-3]
 23192                           
 23193                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23194                           ;incstack = 0
 23195 ;; hardware stack exceeded
 23196  01B44E  0EFD               	movlw	-3
 23197  01B450  006F FF8C  F00B    	movff	plusw1,btemp+10
 23198  01B456  0EFE               	movlw	-2
 23199  01B458  006F FF8C  F00C    	movff	plusw1,btemp+11
 23200  01B45E  90D8               	bcf	status,0,c
 23201  01B460  340B               	rlcf	(btemp+10)^0,w,c
 23202  01B462  6E09               	movwf	(btemp+8)^0,c
 23203  01B464  340C               	rlcf	(btemp+11)^0,w,c
 23204  01B466  6E0A               	movwf	(btemp+9)^0,c
 23205                           
 23206                           ;stkvar	_timer @ sp[(0)+-1]
 23207  01B468  0EFF               	movlw	-1
 23208  01B46A  50E3               	movf	plusw1,w,c
 23209  01B46C  0D02               	mullw	2
 23210  01B46E  0E54               	movlw	low _tickCount
 23211  01B470  24F3               	addwf	243,w,c
 23212  01B472  6ED9               	movwf	fsr2l,c
 23213  01B474  0E02               	movlw	high _tickCount
 23214  01B476  20F4               	addwfc	prodh,w,c
 23215  01B478  6EDA               	movwf	fsr2h,c
 23216  01B47A  0060  F027  FFDE   	movff	btemp+8,postinc2
 23217  01B480  0060  F02B  FFDD   	movff	btemp+9,postdec2
 23218                           
 23219                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 23220  01B486  52E5               	movf	postdec1,f,c
 23221  01B488  52E5               	movf	postdec1,f,c
 23222  01B48A  52E5               	movf	postdec1,f,c
 23223  01B48C  0012               	return		;funcret
 23224  01B48E                     __end_of_StartTimer:
 23225                           	opt callstack 0
 23226                           
 23227 ;; *************** function _display_info *****************
 23228 ;; Defined at:
 23229 ;;		line 190 in file "mconfig.c"
 23230 ;; Parameters:    Size  Location     Type
 23231 ;;		None
 23232 ;; Auto vars:     Size  Location     Type
 23233 ;;		None
 23234 ;; Return value:  Size  Location     Type
 23235 ;;                  1  [STACK] enum E16509
 23236 ;; Registers used:
 23237 ;;		btemp
 23238 ;; Tracked objects:
 23239 ;;		On entry : 0/1
 23240 ;;		On exit  : 0/0
 23241 ;;		Unchanged: 0/0
 23242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23247 ;;Total ram usage:        0 bytes
 23248 ;; Hardware stack levels used:    1
 23249 ;; Hardware stack levels required when called:   15
 23250 ;; This function calls:
 23251 ;;		Nothing
 23252 ;; This function is called by:
 23253 ;;		_check_help
 23254 ;; This function uses a reentrant model
 23255 ;;
 23256                           
 23257                           	psect	text89
 23258  01BEE2                     __ptext89:
 23259                           	opt callstack 0
 23260  01BEE2                     _display_info:
 23261                           	opt callstack 14
 23262                           
 23263                           ;mconfig.c: 192:  return V.response.info;
 23264                           
 23265                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23266                           ;incstack = 0
 23267  01BEE2  0060  F690  F001   	movff	_V+164,btemp	;volatile
 23268                           
 23269                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23270  01BEE8  0012               	return		;funcret
 23271  01BEEA                     __end_of_display_info:
 23272                           	opt callstack 0
 23273                           
 23274 ;; *************** function _display_help *****************
 23275 ;; Defined at:
 23276 ;;		line 195 in file "mconfig.c"
 23277 ;; Parameters:    Size  Location     Type
 23278 ;;		None
 23279 ;; Auto vars:     Size  Location     Type
 23280 ;;		None
 23281 ;; Return value:  Size  Location     Type
 23282 ;;                  1  [STACK] enum E16509
 23283 ;; Registers used:
 23284 ;;		btemp
 23285 ;; Tracked objects:
 23286 ;;		On entry : 3F/1
 23287 ;;		On exit  : 0/0
 23288 ;;		Unchanged: 0/0
 23289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23294 ;;Total ram usage:        0 bytes
 23295 ;; Hardware stack levels used:    1
 23296 ;; Hardware stack levels required when called:   15
 23297 ;; This function calls:
 23298 ;;		Nothing
 23299 ;; This function is called by:
 23300 ;;		_check_help
 23301 ;; This function uses a reentrant model
 23302 ;;
 23303                           
 23304                           	psect	text90
 23305  01BEEA                     __ptext90:
 23306                           	opt callstack 0
 23307  01BEEA                     _display_help:
 23308                           	opt callstack 14
 23309                           
 23310                           ;mconfig.c: 197:  return V.response.help_temp;
 23311                           
 23312                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23313                           ;incstack = 0
 23314  01BEEA  0060  F694  F001   	movff	_V+165,btemp	;volatile
 23315                           
 23316                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23317  01BEF0  0012               	return		;funcret
 23318  01BEF2                     __end_of_display_help:
 23319                           	opt callstack 0
 23320                           
 23321 ;; *************** function _check_enter_button *****************
 23322 ;; Defined at:
 23323 ;;		line 42 in file "hid.c"
 23324 ;; Parameters:    Size  Location     Type
 23325 ;;  h               2  [STACK] PTR struct H_data
 23326 ;;		 -> H(7), 
 23327 ;; Auto vars:     Size  Location     Type
 23328 ;;		None
 23329 ;; Return value:  Size  Location     Type
 23330 ;;                  1  [STACK] _Bool 
 23331 ;; Registers used:
 23332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 23333 ;; Tracked objects:
 23334 ;;		On entry : 0/0
 23335 ;;		On exit  : 0/0
 23336 ;;		Unchanged: 0/0
 23337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23342 ;;Total ram usage:        0 bytes
 23343 ;; Hardware stack levels used:    1
 23344 ;; Hardware stack levels required when called:   15
 23345 ;; This function calls:
 23346 ;;		Nothing
 23347 ;; This function is called by:
 23348 ;;		_main
 23349 ;; This function uses a reentrant model
 23350 ;;
 23351                           
 23352                           	psect	text91
 23353  01ABF6                     __ptext91:
 23354                           	opt callstack 0
 23355  01ABF6                     _check_enter_button:
 23356                           	opt callstack 15
 23357                           
 23358                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 23359                           ;stkvar	_h @ sp[(0)+-2]
 23360                           
 23361                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23362                           ;incstack = 0
 23363  01ABF6  0EFE               	movlw	-2
 23364  01ABF8  006F FF8C  F00B    	movff	plusw1,btemp+10
 23365  01ABFE  0EFF               	movlw	-1
 23366  01AC00  006F FF8C  F00C    	movff	plusw1,btemp+11
 23367  01AC06  0E04               	movlw	4
 23368  01AC08  240B               	addwf	(btemp+10)^0,w,c
 23369  01AC0A  6ED9               	movwf	fsr2l,c
 23370  01AC0C  0E00               	movlw	0
 23371  01AC0E  200C               	addwfc	(btemp+11)^0,w,c
 23372  01AC10  6EDA               	movwf	fsr2h,c
 23373  01AC12  50DF               	movf	indf2,w,c
 23374  01AC14  A4D8               	btfss	status,2,c
 23375  01AC16  D023               	goto	l12863
 23376                           
 23377                           ;stkvar	_h @ sp[(0)+-2]
 23378  01AC18  0EFE               	movlw	-2
 23379  01AC1A  006F FF8C  F00B    	movff	plusw1,btemp+10
 23380  01AC20  0EFF               	movlw	-1
 23381  01AC22  006F FF8C  F00C    	movff	plusw1,btemp+11
 23382  01AC28  0E05               	movlw	5
 23383  01AC2A  240B               	addwf	(btemp+10)^0,w,c
 23384  01AC2C  6ED9               	movwf	fsr2l,c
 23385  01AC2E  0E00               	movlw	0
 23386  01AC30  200C               	addwfc	(btemp+11)^0,w,c
 23387  01AC32  6EDA               	movwf	fsr2h,c
 23388  01AC34  50DF               	movf	indf2,w,c
 23389  01AC36  A4D8               	btfss	status,2,c
 23390  01AC38  D012               	goto	l12863
 23391                           
 23392                           ;hid.c: 45:   h->wait_enter = 1;
 23393                           ;stkvar	_h @ sp[(0)+-2]
 23394  01AC3A  0EFE               	movlw	-2
 23395  01AC3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 23396  01AC42  0EFF               	movlw	-1
 23397  01AC44  006F FF8C  F00C    	movff	plusw1,btemp+11
 23398  01AC4A  0E04               	movlw	4
 23399  01AC4C  240B               	addwf	(btemp+10)^0,w,c
 23400  01AC4E  6ED9               	movwf	fsr2l,c
 23401  01AC50  0E00               	movlw	0
 23402  01AC52  200C               	addwfc	(btemp+11)^0,w,c
 23403  01AC54  6EDA               	movwf	fsr2h,c
 23404  01AC56  0E01               	movlw	1
 23405  01AC58  6EDF               	movwf	indf2,c
 23406                           
 23407                           ;hid.c: 46:   return 1;
 23408  01AC5A  0E01               	movlw	1
 23409  01AC5C  D001               	goto	L28
 23410  01AC5E                     l12863:
 23411                           
 23412                           ;hid.c: 48:  return 0;
 23413  01AC5E  0E00               	movlw	0
 23414  01AC60                     L28:
 23415  01AC60  6E01               	movwf	btemp^0,c
 23416                           
 23417                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 23418  01AC62  52E5               	movf	postdec1,f,c
 23419  01AC64  52E5               	movf	postdec1,f,c
 23420  01AC66  0012               	return		;funcret
 23421  01AC68                     __end_of_check_enter_button:
 23422                           	opt callstack 0
 23423                           
 23424 ;; *************** function _calc_ror_data *****************
 23425 ;; Defined at:
 23426 ;;		line 102 in file "mbmc.c"
 23427 ;; Parameters:    Size  Location     Type
 23428 ;;		None
 23429 ;; Auto vars:     Size  Location     Type
 23430 ;;		None
 23431 ;; Return value:  Size  Location     Type
 23432 ;;                  1  [STACK] void 
 23433 ;; Registers used:
 23434 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23435 ;; Tracked objects:
 23436 ;;		On entry : 0/39
 23437 ;;		On exit  : 0/0
 23438 ;;		Unchanged: 0/0
 23439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23444 ;;Total ram usage:        0 bytes
 23445 ;; Hardware stack levels used:    1
 23446 ;; Hardware stack levels required when called:   18
 23447 ;; This function calls:
 23448 ;;		___flge
 23449 ;;		___flsub
 23450 ;;		_conv_raw_result
 23451 ;;		_fabsf
 23452 ;; This function is called by:
 23453 ;;		_main
 23454 ;; This function uses a reentrant model
 23455 ;;
 23456                           
 23457                           	psect	text92
 23458  0189FC                     __ptext92:
 23459                           	opt callstack 0
 23460  0189FC                     _calc_ror_data:
 23461                           	opt callstack 12
 23462                           
 23463                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 23464                           
 23465                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23466                           ;incstack = 0
 23467  0189FC  0060  F1E3  FFE6   	movff	calc_ror_data@bcror,postinc1
 23468  018A02  0060  F1E7  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 23469  018A08  0060  F1EB  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 23470  018A0E  0060  F1EF  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 23471  018A14  0E00               	movlw	0
 23472  018A16  6EE6               	movwf	postinc1,c
 23473  018A18  0E00               	movlw	0
 23474  018A1A  6EE6               	movwf	postinc1,c
 23475  018A1C  EC0D  F0A8         	call	_conv_raw_result	;wreg free
 23476  018A20  0060  F007  FFE6   	movff	btemp,postinc1
 23477  018A26  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23478  018A2C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23479  018A32  0060  F013  FFE6   	movff	btemp+3,postinc1
 23480  018A38  ECC1  F0D9         	call	___flsub	;wreg free
 23481  018A3C  0060  F007  FFE6   	movff	btemp,postinc1
 23482  018A42  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23483  018A48  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23484  018A4E  0060  F013  FFE6   	movff	btemp+3,postinc1
 23485  018A54  EC33  F0D2         	call	_fabsf	;wreg free
 23486  018A58  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 23487  018A5E  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 23488  018A64  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 23489  018A6A  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 23490                           
 23491                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 23492  018A70  0E00               	movlw	0
 23493  018A72  6EE6               	movwf	postinc1,c
 23494  018A74  0E00               	movlw	0
 23495  018A76  6EE6               	movwf	postinc1,c
 23496  018A78  EC0D  F0A8         	call	_conv_raw_result	;wreg free
 23497  018A7C  0060  F004  F078   	movff	btemp,calc_ror_data@bcror
 23498  018A82  0060  F008  F079   	movff	btemp+1,calc_ror_data@bcror+1
 23499  018A88  0060  F00C  F07A   	movff	btemp+2,calc_ror_data@bcror+2
 23500  018A8E  0060  F010  F07B   	movff	btemp+3,calc_ror_data@bcror+3
 23501                           
 23502                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 23503  018A94  0060  F1F3  FFE6   	movff	calc_ror_data@bvror,postinc1
 23504  018A9A  0060  F1F7  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 23505  018AA0  0060  F1FB  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 23506  018AA6  0060  F1FF  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 23507  018AAC  0E00               	movlw	0
 23508  018AAE  6EE6               	movwf	postinc1,c
 23509  018AB0  0E04               	movlw	4
 23510  018AB2  6EE6               	movwf	postinc1,c
 23511  018AB4  EC0D  F0A8         	call	_conv_raw_result	;wreg free
 23512  018AB8  0060  F007  FFE6   	movff	btemp,postinc1
 23513  018ABE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23514  018AC4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23515  018ACA  0060  F013  FFE6   	movff	btemp+3,postinc1
 23516  018AD0  ECC1  F0D9         	call	___flsub	;wreg free
 23517  018AD4  0060  F007  FFE6   	movff	btemp,postinc1
 23518  018ADA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23519  018AE0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23520  018AE6  0060  F013  FFE6   	movff	btemp+3,postinc1
 23521  018AEC  EC33  F0D2         	call	_fabsf	;wreg free
 23522  018AF0  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 23523  018AF6  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 23524  018AFC  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 23525  018B02  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 23526                           
 23527                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 23528  018B08  0EE7               	movlw	231
 23529  018B0A  6EE6               	movwf	postinc1,c
 23530  018B0C  0E1D               	movlw	29
 23531  018B0E  6EE6               	movwf	postinc1,c
 23532  018B10  0EA7               	movlw	167
 23533  018B12  6EE6               	movwf	postinc1,c
 23534  018B14  0E3B               	movlw	59
 23535  018B16  6EE6               	movwf	postinc1,c
 23536  018B18  EE21  F36B         	lfsr	2,_C+108	;volatile
 23537  018B1C  006F FF7B FFE6     	movff	postinc2,postinc1
 23538  018B22  006F FF7B FFE6     	movff	postinc2,postinc1
 23539  018B28  006F FF7B FFE6     	movff	postinc2,postinc1
 23540  018B2E  006F FF7B FFE6     	movff	postinc2,postinc1
 23541  018B34  EC3A  F0C7         	call	___flge	;wreg free
 23542  018B38  B001               	btfsc	btemp& (0+255),0,c
 23543  018B3A  D010               	goto	l10741
 23544                           
 23545                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 23546  018B3C  0EB0               	movlw	176
 23547  018B3E  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 23548  018B44  0E03               	movlw	3
 23549  018B46  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 23550  018B4C  0E67               	movlw	103
 23551  018B4E  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 23552  018B54  0E3C               	movlw	60
 23553  018B56  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 23554  018B5C                     l10741:
 23555                           
 23556                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 23557  018B5C  0E00               	movlw	0
 23558  018B5E  6EE6               	movwf	postinc1,c
 23559  018B60  0E04               	movlw	4
 23560  018B62  6EE6               	movwf	postinc1,c
 23561  018B64  EC0D  F0A8         	call	_conv_raw_result	;wreg free
 23562  018B68  0060  F004  F07C   	movff	btemp,calc_ror_data@bvror
 23563  018B6E  0060  F008  F07D   	movff	btemp+1,calc_ror_data@bvror+1
 23564  018B74  0060  F00C  F07E   	movff	btemp+2,calc_ror_data@bvror+2
 23565  018B7A  0060  F010  F07F   	movff	btemp+3,calc_ror_data@bvror+3
 23566                           
 23567                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 23568  018B80  0012               	return		;funcret
 23569  018B82                     __end_of_calc_ror_data:
 23570                           	opt callstack 0
 23571                           
 23572 ;; *************** function _fabsf *****************
 23573 ;; Defined at:
 23574 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 23575 ;; Parameters:    Size  Location     Type
 23576 ;;  x               4  [STACK] float 
 23577 ;; Auto vars:     Size  Location     Type
 23578 ;;  u               4  [STACK] struct .
 23579 ;; Return value:  Size  Location     Type
 23580 ;;                  4  [STACK] float 
 23581 ;; Registers used:
 23582 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23583 ;; Tracked objects:
 23584 ;;		On entry : 0/0
 23585 ;;		On exit  : 0/0
 23586 ;;		Unchanged: 0/0
 23587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23592 ;;Total ram usage:        0 bytes
 23593 ;; Hardware stack levels used:    1
 23594 ;; Hardware stack levels required when called:   15
 23595 ;; This function calls:
 23596 ;;		Nothing
 23597 ;; This function is called by:
 23598 ;;		_main
 23599 ;;		_calc_ror_data
 23600 ;;		_calc_bsoc
 23601 ;;		_esr_check
 23602 ;; This function uses a reentrant model
 23603 ;;
 23604                           
 23605                           	psect	text93
 23606  01A466                     __ptext93:
 23607                           	opt callstack 0
 23608  01A466                     _fabsf:
 23609                           	opt callstack 0
 23610                           
 23611                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23612  01A466  52E6               	movf	postinc1,f,c
 23613  01A468  52E6               	movf	postinc1,f,c
 23614  01A46A  52E6               	movf	postinc1,f,c
 23615  01A46C  52E6               	movf	postinc1,f,c
 23616                           
 23617                           ;incstack = 0
 23618 ;; hardware stack exceeded
 23619  01A46E  0060  F1C0  F009   	movff	fabsf@F463,btemp+8
 23620  01A474  0060  F1C4  F00A   	movff	fabsf@F463+1,btemp+9
 23621  01A47A  0060  F1C8  F00B   	movff	fabsf@F463+2,btemp+10
 23622  01A480  0060  F1CC  F00C   	movff	fabsf@F463+3,btemp+11
 23623                           
 23624                           ;stkvar	_u @ sp[(-4)+0]
 23625  01A486  0EFC               	movlw	-4
 23626  01A488  0060  F027  FFE3   	movff	btemp+8,plusw1
 23627  01A48E  0EFD               	movlw	-3
 23628  01A490  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23629  01A496  0EFE               	movlw	-2
 23630  01A498  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23631  01A49E  0EFF               	movlw	-1
 23632  01A4A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 23633                           
 23634                           ;stkvar	_x @ sp[(-4)+-4]
 23635  01A4A6  0EF8               	movlw	-8
 23636  01A4A8  006F FF8C  F009    	movff	plusw1,btemp+8
 23637  01A4AE  0EF9               	movlw	-7
 23638  01A4B0  006F FF8C  F00A    	movff	plusw1,btemp+9
 23639  01A4B6  0EFA               	movlw	-6
 23640  01A4B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 23641  01A4BE  0EFB               	movlw	-5
 23642  01A4C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 23643                           
 23644                           ;stkvar	_u @ sp[(-4)+0]
 23645  01A4C6  0EFC               	movlw	-4
 23646  01A4C8  0060  F027  FFE3   	movff	btemp+8,plusw1
 23647  01A4CE  0EFD               	movlw	-3
 23648  01A4D0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23649  01A4D6  0EFE               	movlw	-2
 23650  01A4D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23651  01A4DE  0EFF               	movlw	-1
 23652  01A4E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 23653                           
 23654                           ;stkvar	_u @ sp[(-4)+0]
 23655  01A4E6  0EFF               	movlw	-1
 23656  01A4E8  9EE3               	bcf	plusw1,7,c
 23657                           
 23658                           ;stkvar	_u @ sp[(-4)+0]
 23659  01A4EA  0EFC               	movlw	-4
 23660  01A4EC  006F FF8C  F001    	movff	plusw1,btemp
 23661  01A4F2  0EFD               	movlw	-3
 23662  01A4F4  006F FF8C  F002    	movff	plusw1,btemp+1
 23663  01A4FA  0EFE               	movlw	-2
 23664  01A4FC  006F FF8C  F003    	movff	plusw1,btemp+2
 23665  01A502  0EFF               	movlw	-1
 23666  01A504  006F FF8C  F004    	movff	plusw1,btemp+3
 23667                           
 23668                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23669  01A50A  0EF8               	movlw	248
 23670  01A50C  26E1               	addwf	fsr1l,f,c
 23671  01A50E  0EFF               	movlw	255
 23672  01A510  22E2               	addwfc	fsr1h,f,c
 23673  01A512  0012               	return		;funcret
 23674  01A514                     __end_of_fabsf:
 23675                           	opt callstack 0
 23676                           
 23677 ;; *************** function _conv_raw_result *****************
 23678 ;; Defined at:
 23679 ;;		line 95 in file "daq.c"
 23680 ;; Parameters:    Size  Location     Type
 23681 ;;  chan            1  [STACK] const enum E16582
 23682 ;;  to_what         1  [STACK] const enum E16644
 23683 ;; Auto vars:     Size  Location     Type
 23684 ;;		None
 23685 ;; Return value:  Size  Location     Type
 23686 ;;                  4  [STACK] float 
 23687 ;; Registers used:
 23688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23689 ;; Tracked objects:
 23690 ;;		On entry : 0/39
 23691 ;;		On exit  : 0/0
 23692 ;;		Unchanged: 0/0
 23693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23698 ;;Total ram usage:        0 bytes
 23699 ;; Hardware stack levels used:    1
 23700 ;; Hardware stack levels required when called:   17
 23701 ;; This function calls:
 23702 ;;		___fldiv
 23703 ;;		___flmul
 23704 ;;		___flsub
 23705 ;;		___xxtofl
 23706 ;;		_get_raw_result
 23707 ;;		_nanf
 23708 ;; This function is called by:
 23709 ;;		_main
 23710 ;;		_convert_adc_data
 23711 ;;		_calc_ror_data
 23712 ;;		_check_day_time
 23713 ;;		_init_bsoc
 23714 ;;		_esr_check
 23715 ;; This function uses a reentrant model
 23716 ;;
 23717                           
 23718                           	psect	text94
 23719  01501A                     __ptext94:
 23720                           	opt callstack 0
 23721  01501A                     _conv_raw_result:
 23722                           	opt callstack 0
 23723                           
 23724                           ;daq.c: 95: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 96: {;daq.c: 98:  switch (to_what) {
 23725                           
 23726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23727                           ;incstack = 0
 23728 ;; hardware stack exceeded
 23729  01501A  D242               	goto	l9635
 23730  01501C                     l9581:
 23731                           
 23732                           ;daq.c: 100:   if (!(0b0011110001110111 >> chan & 0x1))
 23733                           ;stkvar	_chan @ sp[(0)+-1]
 23734  01501C  0EFF               	movlw	-1
 23735  01501E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23736  015024  0E77               	movlw	119
 23737  015026  6E09               	movwf	(btemp+8)^0,c
 23738  015028  0E3C               	movlw	60
 23739  01502A  6E0A               	movwf	(btemp+9)^0,c
 23740  01502C  2A0C               	incf	(btemp+11)^0,f,c
 23741  01502E  D003               	goto	u9054
 23742  015030                     u9055:
 23743  015030  340A               	rlcf	(btemp+9)^0,w,c
 23744  015032  320A               	rrcf	(btemp+9)^0,f,c
 23745  015034  3209               	rrcf	(btemp+8)^0,f,c
 23746  015036                     u9054:
 23747  015036  2E0C               	decfsz	(btemp+11)^0,f,c
 23748  015038  D7FB               	goto	u9055
 23749  01503A  B009               	btfsc	(btemp+8)^0,0,c
 23750  01503C  D007               	goto	l9587
 23751                           
 23752                           ;daq.c: 101:    return nanf("");
 23753  01503E  0EB9               	movlw	low (STR_65+102)
 23754  015040  6EE6               	movwf	postinc1,c
 23755  015042  0EFC               	movlw	high (STR_65+102)
 23756  015044  6EE6               	movwf	postinc1,c
 23757  015046  EC69  F0D7         	call	_nanf	;wreg free
 23758  01504A  D23A               	goto	l1784
 23759  01504C                     l9587:
 23760                           
 23761                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1) {
 23762                           ;stkvar	_chan @ sp[(0)+-1]
 23763  01504C  0EFF               	movlw	-1
 23764  01504E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23765  015054  0E03               	movlw	3
 23766  015056  6E09               	movwf	(btemp+8)^0,c
 23767  015058  0E00               	movlw	0
 23768  01505A  6E0A               	movwf	(btemp+9)^0,c
 23769  01505C  2A0C               	incf	(btemp+11)^0,f,c
 23770  01505E  D003               	goto	u9074
 23771  015060                     u9075:
 23772  015060  340A               	rlcf	(btemp+9)^0,w,c
 23773  015062  320A               	rrcf	(btemp+9)^0,f,c
 23774  015064  3209               	rrcf	(btemp+8)^0,f,c
 23775  015066                     u9074:
 23776  015066  2E0C               	decfsz	(btemp+11)^0,f,c
 23777  015068  D7FB               	goto	u9075
 23778  01506A  A009               	btfss	(btemp+8)^0,0,c
 23779  01506C  D0EB               	goto	l9601
 23780                           
 23781                           ;daq.c: 104:    if (0b0000000000000001 >> chan & 0x1) {
 23782                           ;stkvar	_chan @ sp[(0)+-1]
 23783  01506E  0EFF               	movlw	-1
 23784  015070  006F FF8C  F00C    	movff	plusw1,btemp+11
 23785  015076  0E01               	movlw	1
 23786  015078  6E09               	movwf	(btemp+8)^0,c
 23787  01507A  0E00               	movlw	0
 23788  01507C  6E0A               	movwf	(btemp+9)^0,c
 23789  01507E  2A0C               	incf	(btemp+11)^0,f,c
 23790  015080  D003               	goto	u9094
 23791  015082                     u9095:
 23792  015082  340A               	rlcf	(btemp+9)^0,w,c
 23793  015084  320A               	rrcf	(btemp+9)^0,f,c
 23794  015086  3209               	rrcf	(btemp+8)^0,f,c
 23795  015088                     u9094:
 23796  015088  2E0C               	decfsz	(btemp+11)^0,f,c
 23797  01508A  D7FB               	goto	u9095
 23798  01508C  A009               	btfss	(btemp+8)^0,0,c
 23799  01508E  D06D               	goto	l9597
 23800                           
 23801                           ;daq.c: 105:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * 0.08
      +                          50000;
 23802  015090  0E7B               	movlw	123
 23803  015092  6EE6               	movwf	postinc1,c
 23804  015094  0E14               	movlw	20
 23805  015096  6EE6               	movwf	postinc1,c
 23806  015098  0EAE               	movlw	174
 23807  01509A  6EE6               	movwf	postinc1,c
 23808  01509C  0E3D               	movlw	61
 23809  01509E  6EE6               	movwf	postinc1,c
 23810  0150A0  0060  F374  F009   	movff	_R+32,btemp+8	;volatile
 23811  0150A6  0060  F378  F00A   	movff	_R+33,btemp+9	;volatile
 23812  0150AC  0E00               	movlw	0
 23813  0150AE  BE0A               	btfsc	(btemp+9)^0,7,c
 23814  0150B0  0EFF               	movlw	255
 23815  0150B2  6E0B               	movwf	(btemp+10)^0,c
 23816  0150B4  6E0C               	movwf	(btemp+11)^0,c
 23817  0150B6  0060  F027  FFE6   	movff	btemp+8,postinc1
 23818  0150BC  0060  F02B  FFE6   	movff	btemp+9,postinc1
 23819  0150C2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23820  0150C8  0060  F033  FFE6   	movff	btemp+11,postinc1
 23821  0150CE  0E01               	movlw	1
 23822  0150D0  6EE6               	movwf	postinc1,c
 23823  0150D2  EC95  F0C0         	call	___xxtofl	;wreg free
 23824  0150D6  0060  F007  FFE6   	movff	btemp,postinc1
 23825  0150DC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23826  0150E2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23827  0150E8  0060  F013  FFE6   	movff	btemp+3,postinc1
 23828                           
 23829                           ;stkvar	_chan @ sp[(-8)+-1]
 23830  0150EE  0EF7               	movlw	-9
 23831  0150F0  50E3               	movf	plusw1,w,c
 23832  0150F2  6EE6               	movwf	postinc1,c
 23833  0150F4  EC85  F0DE         	call	_get_raw_result	;wreg free
 23834  0150F8  0060  F004  F00B   	movff	btemp,btemp+10
 23835  0150FE  0060  F008  F00C   	movff	btemp+1,btemp+11
 23836  015104  500B               	movf	(btemp+10)^0,w,c
 23837  015106  6E05               	movwf	(btemp+4)^0,c
 23838  015108  500C               	movf	(btemp+11)^0,w,c
 23839  01510A  6E06               	movwf	(btemp+5)^0,c
 23840  01510C  6A07               	clrf	(btemp+6)^0,c
 23841  01510E  6A08               	clrf	(btemp+7)^0,c
 23842  015110  0060  F017  FFE6   	movff	btemp+4,postinc1
 23843  015116  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23844  01511C  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23845  015122  0060  F023  FFE6   	movff	btemp+7,postinc1
 23846  015128  0E00               	movlw	0
 23847  01512A  6EE6               	movwf	postinc1,c
 23848  01512C  EC95  F0C0         	call	___xxtofl	;wreg free
 23849  015130  0060  F007  FFE6   	movff	btemp,postinc1
 23850  015136  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23851  01513C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23852  015142  0060  F013  FFE6   	movff	btemp+3,postinc1
 23853  015148  ECC1  F0D9         	call	___flsub	;wreg free
 23854  01514C  0060  F007  FFE6   	movff	btemp,postinc1
 23855  015152  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23856  015158  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23857  01515E  0060  F013  FFE6   	movff	btemp+3,postinc1
 23858  015164  EC9F  F099         	call	___flmul	;wreg free
 23859  015168  D1AB               	goto	l1784
 23860  01516A                     l9597:
 23861                           
 23862                           ;daq.c: 107:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * 0.03
      +                          50000;
 23863  01516A  0E29               	movlw	41
 23864  01516C  6EE6               	movwf	postinc1,c
 23865  01516E  0E5C               	movlw	92
 23866  015170  6EE6               	movwf	postinc1,c
 23867  015172  0E0F               	movlw	15
 23868  015174  6EE6               	movwf	postinc1,c
 23869  015176  0E3D               	movlw	61
 23870  015178  6EE6               	movwf	postinc1,c
 23871  01517A  0060  F37C  F009   	movff	_R+34,btemp+8	;volatile
 23872  015180  0060  F380  F00A   	movff	_R+35,btemp+9	;volatile
 23873  015186  0E00               	movlw	0
 23874  015188  BE0A               	btfsc	(btemp+9)^0,7,c
 23875  01518A  0EFF               	movlw	255
 23876  01518C  6E0B               	movwf	(btemp+10)^0,c
 23877  01518E  6E0C               	movwf	(btemp+11)^0,c
 23878  015190  0060  F027  FFE6   	movff	btemp+8,postinc1
 23879  015196  0060  F02B  FFE6   	movff	btemp+9,postinc1
 23880  01519C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23881  0151A2  0060  F033  FFE6   	movff	btemp+11,postinc1
 23882  0151A8  0E01               	movlw	1
 23883  0151AA  6EE6               	movwf	postinc1,c
 23884  0151AC  EC95  F0C0         	call	___xxtofl	;wreg free
 23885  0151B0  0060  F007  FFE6   	movff	btemp,postinc1
 23886  0151B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23887  0151BC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23888  0151C2  0060  F013  FFE6   	movff	btemp+3,postinc1
 23889                           
 23890                           ;stkvar	_chan @ sp[(-8)+-1]
 23891  0151C8  0EF7               	movlw	-9
 23892  0151CA  50E3               	movf	plusw1,w,c
 23893  0151CC  6EE6               	movwf	postinc1,c
 23894  0151CE  EC85  F0DE         	call	_get_raw_result	;wreg free
 23895  0151D2  0060  F004  F00B   	movff	btemp,btemp+10
 23896  0151D8  0060  F008  F00C   	movff	btemp+1,btemp+11
 23897  0151DE  500B               	movf	(btemp+10)^0,w,c
 23898  0151E0  6E05               	movwf	(btemp+4)^0,c
 23899  0151E2  500C               	movf	(btemp+11)^0,w,c
 23900  0151E4  6E06               	movwf	(btemp+5)^0,c
 23901  0151E6  6A07               	clrf	(btemp+6)^0,c
 23902  0151E8  6A08               	clrf	(btemp+7)^0,c
 23903  0151EA  0060  F017  FFE6   	movff	btemp+4,postinc1
 23904  0151F0  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23905  0151F6  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23906  0151FC  0060  F023  FFE6   	movff	btemp+7,postinc1
 23907  015202  0E00               	movlw	0
 23908  015204  6EE6               	movwf	postinc1,c
 23909  015206  EC95  F0C0         	call	___xxtofl	;wreg free
 23910  01520A  0060  F007  FFE6   	movff	btemp,postinc1
 23911  015210  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23912  015216  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23913  01521C  0060  F013  FFE6   	movff	btemp+3,postinc1
 23914  015222  ECC1  F0D9         	call	___flsub	;wreg free
 23915  015226  0060  F007  FFE6   	movff	btemp,postinc1
 23916  01522C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23917  015232  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23918  015238  0060  F013  FFE6   	movff	btemp+3,postinc1
 23919  01523E  EC9F  F099         	call	___flmul	;wreg free
 23920  015242  D13E               	goto	l1784
 23921  015244                     l9601:
 23922                           
 23923                           ;daq.c: 110:    if (0b0000100000000000 >> chan & 0x1) {
 23924                           ;stkvar	_chan @ sp[(0)+-1]
 23925  015244  0EFF               	movlw	-1
 23926  015246  006F FF8C  F00C    	movff	plusw1,btemp+11
 23927  01524C  0E00               	movlw	0
 23928  01524E  6E09               	movwf	(btemp+8)^0,c
 23929  015250  0E08               	movlw	8
 23930  015252  6E0A               	movwf	(btemp+9)^0,c
 23931  015254  2A0C               	incf	(btemp+11)^0,f,c
 23932  015256  D003               	goto	u9114
 23933  015258                     u9115:
 23934  015258  340A               	rlcf	(btemp+9)^0,w,c
 23935  01525A  320A               	rrcf	(btemp+9)^0,f,c
 23936  01525C  3209               	rrcf	(btemp+8)^0,f,c
 23937  01525E                     u9114:
 23938  01525E  2E0C               	decfsz	(btemp+11)^0,f,c
 23939  015260  D7FB               	goto	u9115
 23940  015262  A009               	btfss	(btemp+8)^0,0,c
 23941  015264  D008               	goto	l9609
 23942                           
 23943                           ;daq.c: 111:     return 25.0;
 23944  015266  0E00               	movlw	0
 23945  015268  6E01               	movwf	btemp^0,c
 23946  01526A  0E00               	movlw	0
 23947  01526C  6E02               	movwf	(btemp+1)^0,c
 23948  01526E  0EC8               	movlw	200
 23949  015270  6E03               	movwf	(btemp+2)^0,c
 23950  015272  0E41               	movlw	65
 23951  015274  D113               	goto	L29
 23952  015276                     l9609:
 23953                           
 23954                           ;daq.c: 113:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23955  015276  0E00               	movlw	0
 23956  015278  6EE6               	movwf	postinc1,c
 23957  01527A  0E00               	movlw	0
 23958  01527C  6EE6               	movwf	postinc1,c
 23959  01527E  0E7A               	movlw	122
 23960  015280  6EE6               	movwf	postinc1,c
 23961  015282  0E44               	movlw	68
 23962  015284  6EE6               	movwf	postinc1,c
 23963  015286  0E61               	movlw	97
 23964  015288  6EE6               	movwf	postinc1,c
 23965  01528A  0E03               	movlw	3
 23966  01528C  6EE6               	movwf	postinc1,c
 23967  01528E  0E84               	movlw	132
 23968  015290  6EE6               	movwf	postinc1,c
 23969  015292  0E40               	movlw	64
 23970  015294  6EE6               	movwf	postinc1,c
 23971                           
 23972                           ;stkvar	_chan @ sp[(-8)+-1]
 23973  015296  0EF7               	movlw	-9
 23974  015298  50E3               	movf	plusw1,w,c
 23975  01529A  6EE6               	movwf	postinc1,c
 23976  01529C  EC85  F0DE         	call	_get_raw_result	;wreg free
 23977  0152A0  0060  F004  F00B   	movff	btemp,btemp+10
 23978  0152A6  0060  F008  F00C   	movff	btemp+1,btemp+11
 23979  0152AC  500B               	movf	(btemp+10)^0,w,c
 23980  0152AE  6E05               	movwf	(btemp+4)^0,c
 23981  0152B0  500C               	movf	(btemp+11)^0,w,c
 23982  0152B2  6E06               	movwf	(btemp+5)^0,c
 23983  0152B4  6A07               	clrf	(btemp+6)^0,c
 23984  0152B6  6A08               	clrf	(btemp+7)^0,c
 23985  0152B8  0060  F017  FFE6   	movff	btemp+4,postinc1
 23986  0152BE  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23987  0152C4  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23988  0152CA  0060  F023  FFE6   	movff	btemp+7,postinc1
 23989  0152D0  0E00               	movlw	0
 23990  0152D2  6EE6               	movwf	postinc1,c
 23991  0152D4  EC95  F0C0         	call	___xxtofl	;wreg free
 23992  0152D8  0060  F007  FFE6   	movff	btemp,postinc1
 23993  0152DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23994  0152E4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23995  0152EA  0060  F013  FFE6   	movff	btemp+3,postinc1
 23996  0152F0  EC9F  F099         	call	___flmul	;wreg free
 23997  0152F4  0060  F007  FFE6   	movff	btemp,postinc1
 23998  0152FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23999  015300  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24000  015306  0060  F013  FFE6   	movff	btemp+3,postinc1
 24001  01530C  EC50  F0A5         	call	___fldiv	;wreg free
 24002  015310  D0D7               	goto	l1784
 24003  015312                     l9613:
 24004                           
 24005                           ;daq.c: 118:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 24006                           ;stkvar	_chan @ sp[(0)+-1]
 24007  015312  0EFF               	movlw	-1
 24008  015314  006F FF8C  F00C    	movff	plusw1,btemp+11
 24009  01531A  0E03               	movlw	3
 24010  01531C  6E09               	movwf	(btemp+8)^0,c
 24011  01531E  0E00               	movlw	0
 24012  015320  6E0A               	movwf	(btemp+9)^0,c
 24013  015322  2A0C               	incf	(btemp+11)^0,f,c
 24014  015324  D003               	goto	u9134
 24015  015326                     u9135:
 24016  015326  340A               	rlcf	(btemp+9)^0,w,c
 24017  015328  320A               	rrcf	(btemp+9)^0,f,c
 24018  01532A  3209               	rrcf	(btemp+8)^0,f,c
 24019  01532C                     u9134:
 24020  01532C  2E0C               	decfsz	(btemp+11)^0,f,c
 24021  01532E  D7FB               	goto	u9135
 24022  015330  B009               	btfsc	(btemp+8)^0,0,c
 24023  015332  D011               	goto	u9160
 24024                           
 24025                           ;stkvar	_chan @ sp[(0)+-1]
 24026  015334  0EFF               	movlw	-1
 24027  015336  006F FF8C  F00C    	movff	plusw1,btemp+11
 24028  01533C  0E00               	movlw	0
 24029  01533E  6E09               	movwf	(btemp+8)^0,c
 24030  015340  0E08               	movlw	8
 24031  015342  6E0A               	movwf	(btemp+9)^0,c
 24032  015344  2A0C               	incf	(btemp+11)^0,f,c
 24033  015346  D003               	goto	u9154
 24034  015348                     u9155:
 24035  015348  340A               	rlcf	(btemp+9)^0,w,c
 24036  01534A  320A               	rrcf	(btemp+9)^0,f,c
 24037  01534C  3209               	rrcf	(btemp+8)^0,f,c
 24038  01534E                     u9154:
 24039  01534E  2E0C               	decfsz	(btemp+11)^0,f,c
 24040  015350  D7FB               	goto	u9155
 24041  015352  A009               	btfss	(btemp+8)^0,0,c
 24042  015354  D04E               	goto	l9621
 24043  015356                     u9160:
 24044                           
 24045                           ;daq.c: 119:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 24046  015356  0E00               	movlw	0
 24047  015358  6EE6               	movwf	postinc1,c
 24048  01535A  0E00               	movlw	0
 24049  01535C  6EE6               	movwf	postinc1,c
 24050  01535E  0E7A               	movlw	122
 24051  015360  6EE6               	movwf	postinc1,c
 24052  015362  0E44               	movlw	68
 24053  015364  6EE6               	movwf	postinc1,c
 24054  015366  0E00               	movlw	0
 24055  015368  6EE6               	movwf	postinc1,c
 24056  01536A  0E00               	movlw	0
 24057  01536C  6EE6               	movwf	postinc1,c
 24058  01536E  0E20               	movlw	32
 24059  015370  6EE6               	movwf	postinc1,c
 24060  015372  0E3F               	movlw	63
 24061  015374  6EE6               	movwf	postinc1,c
 24062                           
 24063                           ;stkvar	_chan @ sp[(-8)+-1]
 24064  015376  0EF7               	movlw	-9
 24065  015378  50E3               	movf	plusw1,w,c
 24066  01537A  6EE6               	movwf	postinc1,c
 24067  01537C  EC85  F0DE         	call	_get_raw_result	;wreg free
 24068  015380  0060  F004  F00B   	movff	btemp,btemp+10
 24069  015386  0060  F008  F00C   	movff	btemp+1,btemp+11
 24070  01538C  500B               	movf	(btemp+10)^0,w,c
 24071  01538E  6E05               	movwf	(btemp+4)^0,c
 24072  015390  500C               	movf	(btemp+11)^0,w,c
 24073  015392  6E06               	movwf	(btemp+5)^0,c
 24074  015394  6A07               	clrf	(btemp+6)^0,c
 24075  015396  6A08               	clrf	(btemp+7)^0,c
 24076  015398  0060  F017  FFE6   	movff	btemp+4,postinc1
 24077  01539E  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24078  0153A4  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24079  0153AA  0060  F023  FFE6   	movff	btemp+7,postinc1
 24080  0153B0  0E00               	movlw	0
 24081  0153B2  6EE6               	movwf	postinc1,c
 24082  0153B4  EC95  F0C0         	call	___xxtofl	;wreg free
 24083  0153B8  0060  F007  FFE6   	movff	btemp,postinc1
 24084  0153BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24085  0153C4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24086  0153CA  0060  F013  FFE6   	movff	btemp+3,postinc1
 24087  0153D0  EC9F  F099         	call	___flmul	;wreg free
 24088  0153D4  0060  F007  FFE6   	movff	btemp,postinc1
 24089  0153DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24090  0153E0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24091  0153E6  0060  F013  FFE6   	movff	btemp+3,postinc1
 24092  0153EC  EC50  F0A5         	call	___fldiv	;wreg free
 24093  0153F0  D067               	goto	l1784
 24094  0153F2                     l9621:
 24095                           
 24096                           ;daq.c: 121:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 24097  0153F2  0E00               	movlw	0
 24098  0153F4  6EE6               	movwf	postinc1,c
 24099  0153F6  0E00               	movlw	0
 24100  0153F8  6EE6               	movwf	postinc1,c
 24101  0153FA  0E7A               	movlw	122
 24102  0153FC  6EE6               	movwf	postinc1,c
 24103  0153FE  0E44               	movlw	68
 24104  015400  6EE6               	movwf	postinc1,c
 24105  015402  0E61               	movlw	97
 24106  015404  6EE6               	movwf	postinc1,c
 24107  015406  0E03               	movlw	3
 24108  015408  6EE6               	movwf	postinc1,c
 24109  01540A  0E84               	movlw	132
 24110  01540C  6EE6               	movwf	postinc1,c
 24111  01540E  0E40               	movlw	64
 24112  015410  6EE6               	movwf	postinc1,c
 24113                           
 24114                           ;stkvar	_chan @ sp[(-8)+-1]
 24115  015412  0EF7               	movlw	-9
 24116  015414  50E3               	movf	plusw1,w,c
 24117  015416  6EE6               	movwf	postinc1,c
 24118  015418  EC85  F0DE         	call	_get_raw_result	;wreg free
 24119  01541C  0060  F004  F00B   	movff	btemp,btemp+10
 24120  015422  0060  F008  F00C   	movff	btemp+1,btemp+11
 24121  015428  500B               	movf	(btemp+10)^0,w,c
 24122  01542A  6E05               	movwf	(btemp+4)^0,c
 24123  01542C  500C               	movf	(btemp+11)^0,w,c
 24124  01542E  6E06               	movwf	(btemp+5)^0,c
 24125  015430  6A07               	clrf	(btemp+6)^0,c
 24126  015432  6A08               	clrf	(btemp+7)^0,c
 24127  015434  0060  F017  FFE6   	movff	btemp+4,postinc1
 24128  01543A  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24129  015440  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24130  015446  0060  F023  FFE6   	movff	btemp+7,postinc1
 24131  01544C  0E00               	movlw	0
 24132  01544E  6EE6               	movwf	postinc1,c
 24133  015450  EC95  F0C0         	call	___xxtofl	;wreg free
 24134  015454  0060  F007  FFE6   	movff	btemp,postinc1
 24135  01545A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24136  015460  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24137  015466  0060  F013  FFE6   	movff	btemp+3,postinc1
 24138  01546C  EC9F  F099         	call	___flmul	;wreg free
 24139  015470  0060  F007  FFE6   	movff	btemp,postinc1
 24140  015476  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24141  01547C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24142  015482  0060  F013  FFE6   	movff	btemp+3,postinc1
 24143  015488  EC50  F0A5         	call	___fldiv	;wreg free
 24144  01548C  D019               	goto	l1784
 24145  01548E                     l9627:
 24146                           
 24147                           ;daq.c: 124:   return 0.0;
 24148  01548E  0E00               	movlw	0
 24149  015490  6E01               	movwf	btemp^0,c
 24150  015492  0E00               	movlw	0
 24151  015494  6E02               	movwf	(btemp+1)^0,c
 24152  015496  0E00               	movlw	0
 24153  015498  6E03               	movwf	(btemp+2)^0,c
 24154  01549A  0E00               	movlw	0
 24155  01549C                     L29:
 24156  01549C  6E04               	movwf	(btemp+3)^0,c
 24157  01549E  D010               	goto	l1784
 24158  0154A0                     l9635:
 24159                           
 24160                           ;stkvar	_to_what @ sp[(0)+-2]
 24161  0154A0  0EFE               	movlw	-2
 24162  0154A2  50E3               	movf	plusw1,w,c
 24163  0154A4  6E0B               	movwf	(btemp+10)^0,c
 24164  0154A6  6A0C               	clrf	(btemp+11)^0,c
 24165                           
 24166                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24167                           ; Switch size 1, requested type "simple"
 24168                           ; Number of cases is 1, Range of values is 0 to 0
 24169                           ; switch strategies available:
 24170                           ; Name         Instructions Cycles
 24171                           ; simple_byte            4     3 (average)
 24172                           ;	Chosen strategy is simple_byte
 24173  0154A8  500C               	movf	(btemp+11)^0,w,c
 24174  0154AA  0A00               	xorlw	0	; case 0
 24175  0154AC  A4D8               	btfss	status,2,c
 24176  0154AE  D7EF               	goto	l9627
 24177                           
 24178                           ; Switch size 1, requested type "simple"
 24179                           ; Number of cases is 2, Range of values is 0 to 1
 24180                           ; switch strategies available:
 24181                           ; Name         Instructions Cycles
 24182                           ; simple_byte            7     4 (average)
 24183                           ;	Chosen strategy is simple_byte
 24184  0154B0  500B               	movf	(btemp+10)^0,w,c
 24185  0154B2  0A00               	xorlw	0	; case 0
 24186  0154B4  B4D8               	btfsc	status,2,c
 24187  0154B6  D5B2               	goto	l9581
 24188  0154B8  0A01               	xorlw	1	; case 1
 24189  0154BA  B4D8               	btfsc	status,2,c
 24190  0154BC  D72A               	goto	l9613
 24191  0154BE  D7E7               	goto	l9627
 24192  0154C0                     l1784:
 24193                           
 24194                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 24195  0154C0  52E5               	movf	postdec1,f,c
 24196  0154C2  52E5               	movf	postdec1,f,c
 24197  0154C4  0012               	return		;funcret
 24198  0154C6                     __end_of_conv_raw_result:
 24199                           	opt callstack 0
 24200                           
 24201 ;; *************** function _nanf *****************
 24202 ;; Defined at:
 24203 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 24204 ;; Parameters:    Size  Location     Type
 24205 ;;  s               2  [STACK] PTR const unsigned char 
 24206 ;;		 -> STR_102(1), STR_64(1), 
 24207 ;; Auto vars:     Size  Location     Type
 24208 ;;  u               4  [STACK] struct .
 24209 ;; Return value:  Size  Location     Type
 24210 ;;                  4  [STACK] float 
 24211 ;; Registers used:
 24212 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 24213 ;; Tracked objects:
 24214 ;;		On entry : 0/39
 24215 ;;		On exit  : 0/0
 24216 ;;		Unchanged: 0/0
 24217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24222 ;;Total ram usage:        0 bytes
 24223 ;; Hardware stack levels used:    1
 24224 ;; Hardware stack levels required when called:   15
 24225 ;; This function calls:
 24226 ;;		Nothing
 24227 ;; This function is called by:
 24228 ;;		_conv_raw_result
 24229 ;; This function uses a reentrant model
 24230 ;;
 24231                           
 24232                           	psect	text95
 24233  01AED2                     __ptext95:
 24234                           	opt callstack 0
 24235  01AED2                     _nanf:
 24236                           	opt callstack 0
 24237                           
 24238                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24239  01AED2  52E6               	movf	postinc1,f,c
 24240  01AED4  52E6               	movf	postinc1,f,c
 24241  01AED6  52E6               	movf	postinc1,f,c
 24242  01AED8  52E6               	movf	postinc1,f,c
 24243                           
 24244                           ;incstack = 0
 24245 ;; hardware stack exceeded
 24246  01AEDA  0EFF               	movlw	255
 24247  01AEDC  6E09               	movwf	(btemp+8)^0,c
 24248  01AEDE  0EFF               	movlw	255
 24249  01AEE0  6E0A               	movwf	(btemp+9)^0,c
 24250  01AEE2  0EFF               	movlw	255
 24251  01AEE4  6E0B               	movwf	(btemp+10)^0,c
 24252  01AEE6  0E7F               	movlw	127
 24253  01AEE8  6E0C               	movwf	(btemp+11)^0,c
 24254                           
 24255                           ;stkvar	_u @ sp[(-4)+0]
 24256  01AEEA  0EFC               	movlw	-4
 24257  01AEEC  0060  F027  FFE3   	movff	btemp+8,plusw1
 24258  01AEF2  0EFD               	movlw	-3
 24259  01AEF4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24260  01AEFA  0EFE               	movlw	-2
 24261  01AEFC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24262  01AF02  0EFF               	movlw	-1
 24263  01AF04  0060  F033  FFE3   	movff	btemp+11,plusw1
 24264                           
 24265                           ;stkvar	_u @ sp[(-4)+0]
 24266  01AF0A  0EFC               	movlw	-4
 24267  01AF0C  006F FF8C  F001    	movff	plusw1,btemp
 24268  01AF12  0EFD               	movlw	-3
 24269  01AF14  006F FF8C  F002    	movff	plusw1,btemp+1
 24270  01AF1A  0EFE               	movlw	-2
 24271  01AF1C  006F FF8C  F003    	movff	plusw1,btemp+2
 24272  01AF22  0EFF               	movlw	-1
 24273  01AF24  006F FF8C  F004    	movff	plusw1,btemp+3
 24274                           
 24275                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 24276  01AF2A  0EFA               	movlw	250
 24277  01AF2C  26E1               	addwf	fsr1l,f,c
 24278  01AF2E  0EFF               	movlw	255
 24279  01AF30  22E2               	addwfc	fsr1h,f,c
 24280  01AF32  0012               	return		;funcret
 24281  01AF34                     __end_of_nanf:
 24282                           	opt callstack 0
 24283                           
 24284 ;; *************** function _get_raw_result *****************
 24285 ;; Defined at:
 24286 ;;		line 87 in file "daq.c"
 24287 ;; Parameters:    Size  Location     Type
 24288 ;;  index           1  [STACK] const enum E16582
 24289 ;; Auto vars:     Size  Location     Type
 24290 ;;		None
 24291 ;; Return value:  Size  Location     Type
 24292 ;;                  2  [STACK] unsigned short 
 24293 ;; Registers used:
 24294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 24295 ;; Tracked objects:
 24296 ;;		On entry : 0/1
 24297 ;;		On exit  : 0/0
 24298 ;;		Unchanged: 0/0
 24299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24304 ;;Total ram usage:        0 bytes
 24305 ;; Hardware stack levels used:    1
 24306 ;; Hardware stack levels required when called:   15
 24307 ;; This function calls:
 24308 ;;		Nothing
 24309 ;; This function is called by:
 24310 ;;		_main
 24311 ;;		_conv_raw_result
 24312 ;; This function uses a reentrant model
 24313 ;;
 24314                           
 24315                           	psect	text96
 24316  01BD0A                     __ptext96:
 24317                           	opt callstack 0
 24318  01BD0A                     _get_raw_result:
 24319                           	opt callstack 0
 24320                           
 24321                           ;daq.c: 87: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 88: {;daq.c: 
      +                          89:  return R.raw_adc[index];
 24322                           ;stkvar	_index @ sp[(0)+-1]
 24323                           
 24324                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24325                           ;incstack = 0
 24326 ;; hardware stack exceeded
 24327  01BD0A  0EFF               	movlw	-1
 24328  01BD0C  50E3               	movf	plusw1,w,c
 24329  01BD0E  0D02               	mullw	2
 24330  01BD10  50F3               	movf	243,w,c
 24331  01BD12  0FBD               	addlw	low _R
 24332  01BD14  6ED9               	movwf	fsr2l,c
 24333  01BD16  6ADA               	clrf	fsr2h,c
 24334  01BD18  006F FF78  F001    	movff	postinc2,btemp
 24335  01BD1E  006F FF74  F002    	movff	postdec2,btemp+1
 24336                           
 24337                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 24338  01BD24  52E5               	movf	postdec1,f,c
 24339  01BD26  0012               	return		;funcret
 24340  01BD28                     __end_of_get_raw_result:
 24341                           	opt callstack 0
 24342                           
 24343 ;; *************** function ___xxtofl *****************
 24344 ;; Defined at:
 24345 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 24346 ;; Parameters:    Size  Location     Type
 24347 ;;  sign            1  [STACK] unsigned char 
 24348 ;;  val             4  [STACK] long 
 24349 ;; Auto vars:     Size  Location     Type
 24350 ;;  arg             4  [STACK] unsigned long 
 24351 ;;  exp             1  [STACK] unsigned char 
 24352 ;; Return value:  Size  Location     Type
 24353 ;;                  4  [STACK] unsigned char 
 24354 ;; Registers used:
 24355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 24356 ;; Tracked objects:
 24357 ;;		On entry : 0/0
 24358 ;;		On exit  : 0/0
 24359 ;;		Unchanged: 0/0
 24360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24365 ;;Total ram usage:        0 bytes
 24366 ;; Hardware stack levels used:    1
 24367 ;; Hardware stack levels required when called:   15
 24368 ;; This function calls:
 24369 ;;		Nothing
 24370 ;; This function is called by:
 24371 ;;		_conv_raw_result
 24372 ;;		_init_bsoc
 24373 ;;		_Volts_to_SOC
 24374 ;; This function uses a reentrant model
 24375 ;;
 24376                           
 24377                           	psect	text97
 24378  01812A                     __ptext97:
 24379                           	opt callstack 0
 24380  01812A                     ___xxtofl:
 24381                           	opt callstack 0
 24382                           
 24383                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24384  01812A  0E05               	movlw	5
 24385  01812C  26E1               	addwf	fsr1l,f,c
 24386  01812E  0E00               	movlw	0
 24387  018130  22E2               	addwfc	fsr1h,f,c
 24388                           
 24389                           ;stkvar	_sign @ sp[(-5)+-1]
 24390                           
 24391                           ;incstack = 0
 24392 ;; hardware stack exceeded
 24393  018132  0EFA               	movlw	-6
 24394  018134  50E3               	movf	plusw1,w,c
 24395  018136  B4D8               	btfsc	status,2,c
 24396  018138  D01D               	goto	l9529
 24397                           
 24398                           ;stkvar	_val @ sp[(-5)+-5]
 24399  01813A  0EF9               	movlw	-7
 24400  01813C  AEE3               	btfss	plusw1,7,c
 24401  01813E  D01A               	goto	l9529
 24402                           
 24403                           ;stkvar	_val @ sp[(-5)+-5]
 24404  018140  0EF6               	movlw	-10
 24405  018142  006F FF8C  F009    	movff	plusw1,btemp+8
 24406  018148  0EF7               	movlw	-9
 24407  01814A  006F FF8C  F00A    	movff	plusw1,btemp+9
 24408  018150  0EF8               	movlw	-8
 24409  018152  006F FF8C  F00B    	movff	plusw1,btemp+10
 24410  018158  0EF9               	movlw	-7
 24411  01815A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24412  018160  1E09               	comf	(btemp+8)^0,f,c
 24413  018162  1E0A               	comf	(btemp+9)^0,f,c
 24414  018164  1E0B               	comf	(btemp+10)^0,f,c
 24415  018166  1E0C               	comf	(btemp+11)^0,f,c
 24416  018168  2A09               	incf	(btemp+8)^0,f,c
 24417  01816A  0E00               	movlw	0
 24418  01816C  220A               	addwfc	(btemp+9)^0,f,c
 24419  01816E  220B               	addwfc	(btemp+10)^0,f,c
 24420  018170  220C               	addwfc	(btemp+11)^0,f,c
 24421  018172  D010               	goto	L30
 24422  018174                     l9529:
 24423                           
 24424                           ;stkvar	_val @ sp[(-5)+-5]
 24425  018174  0EF6               	movlw	-10
 24426  018176  006F FF8C  F009    	movff	plusw1,btemp+8
 24427  01817C  0EF7               	movlw	-9
 24428  01817E  006F FF8C  F00A    	movff	plusw1,btemp+9
 24429  018184  0EF8               	movlw	-8
 24430  018186  006F FF8C  F00B    	movff	plusw1,btemp+10
 24431  01818C  0EF9               	movlw	-7
 24432  01818E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24433  018194                     L30:
 24434                           
 24435                           ;stkvar	_arg @ sp[(-5)+0]
 24436  018194  0EFB               	movlw	-5
 24437  018196  0060  F027  FFE3   	movff	btemp+8,plusw1
 24438  01819C  0EFC               	movlw	-4
 24439  01819E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24440  0181A4  0EFD               	movlw	-3
 24441  0181A6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24442  0181AC  0EFE               	movlw	-2
 24443  0181AE  0060  F033  FFE3   	movff	btemp+11,plusw1
 24444                           
 24445                           ;stkvar	_val @ sp[(-5)+-5]
 24446  0181B4  0EF6               	movlw	-10
 24447  0181B6  50E3               	movf	plusw1,w,c
 24448  0181B8  E113               	bnz	l9537
 24449  0181BA  0EF7               	movlw	-9
 24450  0181BC  50E3               	movf	plusw1,w,c
 24451  0181BE  E110               	bnz	l9537
 24452  0181C0  0EF8               	movlw	-8
 24453  0181C2  50E3               	movf	plusw1,w,c
 24454  0181C4  E10D               	bnz	l9537
 24455  0181C6  0EF9               	movlw	-7
 24456  0181C8  50E3               	movf	plusw1,w,c
 24457  0181CA  A4D8               	btfss	status,2,c
 24458  0181CC  D009               	goto	l9537
 24459  0181CE  0E00               	movlw	0
 24460  0181D0  6E01               	movwf	btemp^0,c
 24461  0181D2  0E00               	movlw	0
 24462  0181D4  6E02               	movwf	(btemp+1)^0,c
 24463  0181D6  0E00               	movlw	0
 24464  0181D8  6E03               	movwf	(btemp+2)^0,c
 24465  0181DA  0E00               	movlw	0
 24466  0181DC  6E04               	movwf	(btemp+3)^0,c
 24467  0181DE  D0A2               	goto	l3058
 24468  0181E0                     l9537:
 24469  0181E0  0E96               	movlw	150
 24470  0181E2  6E0C               	movwf	(btemp+11)^0,c
 24471                           
 24472                           ;stkvar	_exp @ sp[(-5)+4]
 24473  0181E4  0EFF               	movlw	-1
 24474  0181E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 24475  0181EC  D00B               	goto	l9541
 24476  0181EE                     l9539:
 24477                           
 24478                           ;stkvar	_exp @ sp[(-5)+4]
 24479  0181EE  0EFF               	movlw	-1
 24480  0181F0  2AE3               	incf	plusw1,f,c
 24481                           
 24482                           ;stkvar	_arg @ sp[(-5)+0]
 24483  0181F2  90D8               	bcf	status,0,c
 24484  0181F4  0EFE               	movlw	-2
 24485  0181F6  32E3               	rrcf	plusw1,f,c
 24486  0181F8  0EFD               	movlw	-3
 24487  0181FA  32E3               	rrcf	plusw1,f,c
 24488  0181FC  0EFC               	movlw	-4
 24489  0181FE  32E3               	rrcf	plusw1,f,c
 24490  018200  0EFB               	movlw	-5
 24491  018202  32E3               	rrcf	plusw1,f,c
 24492  018204                     l9541:
 24493                           
 24494                           ;stkvar	_arg @ sp[(-5)+0]
 24495  018204  50E1               	movf	fsr1l,w,c
 24496  018206  0FFB               	addlw	-5
 24497  018208  6ED9               	movwf	fsr2l,c
 24498  01820A  50E2               	movf	fsr1h,w,c
 24499  01820C  6EDA               	movwf	fsr2h,c
 24500  01820E  0EFF               	movlw	255
 24501  018210  22DA               	addwfc	fsr2h,f,c
 24502  018212  52DE               	movf	postinc2,f,c
 24503  018214  52DE               	movf	postinc2,f,c
 24504  018216  52DE               	movf	postinc2,f,c
 24505  018218  0EFE               	movlw	254
 24506  01821A  14DD               	andwf	postdec2,w,c
 24507  01821C  B4D8               	btfsc	status,2,c
 24508  01821E  D018               	goto	l9549
 24509  018220  D7E6               	goto	l9539
 24510  018222                     l9543:
 24511                           
 24512                           ;stkvar	_exp @ sp[(-5)+4]
 24513  018222  0EFF               	movlw	-1
 24514  018224  2AE3               	incf	plusw1,f,c
 24515                           
 24516                           ;stkvar	_arg @ sp[(-5)+0]
 24517  018226  50E1               	movf	fsr1l,w,c
 24518  018228  0FFB               	addlw	-5
 24519  01822A  6ED9               	movwf	fsr2l,c
 24520  01822C  50E2               	movf	fsr1h,w,c
 24521  01822E  6EDA               	movwf	fsr2h,c
 24522  018230  0EFF               	movlw	255
 24523  018232  22DA               	addwfc	fsr2h,f,c
 24524  018234  2ADE               	incf	postinc2,f,c
 24525  018236  0E00               	movlw	0
 24526  018238  22DE               	addwfc	postinc2,f,c
 24527  01823A  22DE               	addwfc	postinc2,f,c
 24528  01823C  22DE               	addwfc	postinc2,f,c
 24529                           
 24530                           ;stkvar	_arg @ sp[(-5)+0]
 24531  01823E  90D8               	bcf	status,0,c
 24532  018240  0EFE               	movlw	-2
 24533  018242  32E3               	rrcf	plusw1,f,c
 24534  018244  0EFD               	movlw	-3
 24535  018246  32E3               	rrcf	plusw1,f,c
 24536  018248  0EFC               	movlw	-4
 24537  01824A  32E3               	rrcf	plusw1,f,c
 24538  01824C  0EFB               	movlw	-5
 24539  01824E  32E3               	rrcf	plusw1,f,c
 24540  018250                     l9549:
 24541                           
 24542                           ;stkvar	_arg @ sp[(-5)+0]
 24543  018250  50E1               	movf	fsr1l,w,c
 24544  018252  0FFB               	addlw	-5
 24545  018254  6ED9               	movwf	fsr2l,c
 24546  018256  50E2               	movf	fsr1h,w,c
 24547  018258  6EDA               	movwf	fsr2h,c
 24548  01825A  0EFF               	movlw	255
 24549  01825C  22DA               	addwfc	fsr2h,f,c
 24550  01825E  52DE               	movf	postinc2,f,c
 24551  018260  52DE               	movf	postinc2,f,c
 24552  018262  52DE               	movf	postinc2,f,c
 24553  018264  0EFF               	movlw	255
 24554  018266  14DD               	andwf	postdec2,w,c
 24555  018268  B4D8               	btfsc	status,2,c
 24556  01826A  D00C               	goto	l9553
 24557  01826C  D7DA               	goto	l9543
 24558  01826E                     l9551:
 24559                           
 24560                           ;stkvar	_exp @ sp[(-5)+4]
 24561  01826E  0EFF               	movlw	-1
 24562  018270  06E3               	decf	plusw1,f,c
 24563                           
 24564                           ;stkvar	_arg @ sp[(-5)+0]
 24565  018272  90D8               	bcf	status,0,c
 24566  018274  0EFB               	movlw	-5
 24567  018276  36E3               	rlcf	plusw1,f,c
 24568  018278  0EFC               	movlw	-4
 24569  01827A  36E3               	rlcf	plusw1,f,c
 24570  01827C  0EFD               	movlw	-3
 24571  01827E  36E3               	rlcf	plusw1,f,c
 24572  018280  0EFE               	movlw	-2
 24573  018282  36E3               	rlcf	plusw1,f,c
 24574  018284                     l9553:
 24575                           
 24576                           ;stkvar	_arg @ sp[(-5)+0]
 24577  018284  0EFD               	movlw	-3
 24578  018286  BEE3               	btfsc	plusw1,7,c
 24579  018288  D007               	goto	u9010
 24580                           
 24581                           ;stkvar	_exp @ sp[(-5)+4]
 24582  01828A  0EFF               	movlw	-1
 24583  01828C  006F FF8C  F001    	movff	plusw1,btemp
 24584  018292  0E02               	movlw	2
 24585  018294  6001               	cpfslt	btemp^0,c
 24586  018296  D7EB               	goto	l9551
 24587  018298                     u9010:
 24588                           
 24589                           ;stkvar	_exp @ sp[(-5)+4]
 24590  018298  0EFF               	movlw	-1
 24591  01829A  B0E3               	btfsc	plusw1,0,c
 24592  01829C  D002               	goto	l9561
 24593                           
 24594                           ;stkvar	_arg @ sp[(-5)+0]
 24595  01829E  0EFD               	movlw	-3
 24596  0182A0  9EE3               	bcf	plusw1,7,c
 24597  0182A2                     l9561:
 24598                           
 24599                           ;stkvar	_exp @ sp[(-5)+4]
 24600  0182A2  50E1               	movf	fsr1l,w,c
 24601  0182A4  0FFF               	addlw	-1
 24602  0182A6  6ED9               	movwf	fsr2l,c
 24603  0182A8  50E2               	movf	fsr1h,w,c
 24604  0182AA  6EDA               	movwf	fsr2h,c
 24605  0182AC  0EFF               	movlw	255
 24606  0182AE  22DA               	addwfc	fsr2h,f,c
 24607  0182B0  90D8               	bcf	status,0,c
 24608  0182B2  32DF               	rrcf	indf2,f,c
 24609                           
 24610                           ;stkvar	_exp @ sp[(-5)+4]
 24611  0182B4  0EFF               	movlw	-1
 24612  0182B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 24613  0182BC  0060  F030  F005   	movff	btemp+11,btemp+4
 24614  0182C2  6A06               	clrf	(btemp+5)^0,c
 24615  0182C4  6A07               	clrf	(btemp+6)^0,c
 24616  0182C6  6A08               	clrf	(btemp+7)^0,c
 24617  0182C8  0060  F014  F008   	movff	btemp+4,btemp+7
 24618  0182CE  6A07               	clrf	(btemp+6)^0,c
 24619  0182D0  6A06               	clrf	(btemp+5)^0,c
 24620  0182D2  6A05               	clrf	(btemp+4)^0,c
 24621                           
 24622                           ;stkvar	_arg @ sp[(-5)+0]
 24623  0182D4  50E1               	movf	fsr1l,w,c
 24624  0182D6  0FFB               	addlw	-5
 24625  0182D8  6ED9               	movwf	fsr2l,c
 24626  0182DA  50E2               	movf	fsr1h,w,c
 24627  0182DC  6EDA               	movwf	fsr2h,c
 24628  0182DE  0EFF               	movlw	255
 24629  0182E0  22DA               	addwfc	fsr2h,f,c
 24630  0182E2  5005               	movf	(btemp+4)^0,w,c
 24631  0182E4  12DE               	iorwf	postinc2,f,c
 24632  0182E6  5006               	movf	(btemp+5)^0,w,c
 24633  0182E8  12DE               	iorwf	postinc2,f,c
 24634  0182EA  5007               	movf	(btemp+6)^0,w,c
 24635  0182EC  12DE               	iorwf	postinc2,f,c
 24636  0182EE  5008               	movf	(btemp+7)^0,w,c
 24637  0182F0  12DE               	iorwf	postinc2,f,c
 24638                           
 24639                           ;stkvar	_sign @ sp[(-5)+-1]
 24640  0182F2  0EFA               	movlw	-6
 24641  0182F4  50E3               	movf	plusw1,w,c
 24642  0182F6  B4D8               	btfsc	status,2,c
 24643  0182F8  D005               	goto	l9571
 24644                           
 24645                           ;stkvar	_val @ sp[(-5)+-5]
 24646  0182FA  0EF9               	movlw	-7
 24647  0182FC  AEE3               	btfss	plusw1,7,c
 24648  0182FE  D002               	goto	l9571
 24649                           
 24650                           ;stkvar	_arg @ sp[(-5)+0]
 24651  018300  0EFE               	movlw	-2
 24652  018302  8EE3               	bsf	plusw1,7,c
 24653  018304                     l9571:
 24654                           
 24655                           ;stkvar	_arg @ sp[(-5)+0]
 24656  018304  0EFB               	movlw	-5
 24657  018306  006F FF8C  F001    	movff	plusw1,btemp
 24658  01830C  0EFC               	movlw	-4
 24659  01830E  006F FF8C  F002    	movff	plusw1,btemp+1
 24660  018314  0EFD               	movlw	-3
 24661  018316  006F FF8C  F003    	movff	plusw1,btemp+2
 24662  01831C  0EFE               	movlw	-2
 24663  01831E  006F FF8C  F004    	movff	plusw1,btemp+3
 24664  018324                     l3058:
 24665                           
 24666                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 24667  018324  0EF6               	movlw	246
 24668  018326  26E1               	addwf	fsr1l,f,c
 24669  018328  0EFF               	movlw	255
 24670  01832A  22E2               	addwfc	fsr1h,f,c
 24671  01832C  0012               	return		;funcret
 24672  01832E                     __end_of___xxtofl:
 24673                           	opt callstack 0
 24674                           
 24675 ;; *************** function ___fldiv *****************
 24676 ;; Defined at:
 24677 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 24678 ;; Parameters:    Size  Location     Type
 24679 ;;  b               4  [STACK] unsigned char 
 24680 ;;  a               4  [STACK] unsigned char 
 24681 ;; Auto vars:     Size  Location     Type
 24682 ;;  grs             4  [STACK] unsigned long 
 24683 ;;  rem             4  [STACK] unsigned long 
 24684 ;;  new_exp         2  [STACK] short 
 24685 ;;  aexp            1  [STACK] unsigned char 
 24686 ;;  bexp            1  [STACK] unsigned char 
 24687 ;;  sign            1  [STACK] unsigned char 
 24688 ;; Return value:  Size  Location     Type
 24689 ;;                  4  [STACK] unsigned char 
 24690 ;; Registers used:
 24691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 24692 ;; Tracked objects:
 24693 ;;		On entry : 0/0
 24694 ;;		On exit  : 0/0
 24695 ;;		Unchanged: 0/0
 24696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24701 ;;Total ram usage:        0 bytes
 24702 ;; Hardware stack levels used:    1
 24703 ;; Hardware stack levels required when called:   15
 24704 ;; This function calls:
 24705 ;;		Nothing
 24706 ;; This function is called by:
 24707 ;;		_conv_raw_result
 24708 ;;		_calc_bsoc
 24709 ;;		_init_bsoc
 24710 ;;		_esr_check
 24711 ;;		_efgtoa
 24712 ;; This function uses a reentrant model
 24713 ;;
 24714                           
 24715                           	psect	text98
 24716  014AA0                     __ptext98:
 24717                           	opt callstack 0
 24718  014AA0                     ___fldiv:
 24719                           	opt callstack 0
 24720                           
 24721                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24722  014AA0  0E0D               	movlw	13
 24723  014AA2  26E1               	addwf	fsr1l,f,c
 24724  014AA4  0E00               	movlw	0
 24725  014AA6  22E2               	addwfc	fsr1h,f,c
 24726                           
 24727                           ;stkvar	_b @ sp[(-13)+-4]
 24728                           
 24729                           ;incstack = 0
 24730 ;; hardware stack exceeded
 24731  014AA8  0EF2               	movlw	242
 24732  014AAA  24E1               	addwf	fsr1l,w,c
 24733  014AAC  6ED9               	movwf	fsr2l,c
 24734  014AAE  0EFF               	movlw	255
 24735  014AB0  20E2               	addwfc	fsr1h,w,c
 24736  014AB2  6EDA               	movwf	fsr2h,c
 24737  014AB4  50DF               	movf	indf2,w,c
 24738  014AB6  6E0C               	movwf	(btemp+11)^0,c
 24739  014AB8  0E80               	movlw	128
 24740  014ABA  160C               	andwf	(btemp+11)^0,f,c
 24741                           
 24742                           ;stkvar	_sign @ sp[(-13)+12]
 24743  014ABC  0EFF               	movlw	-1
 24744  014ABE  0060  F033  FFE3   	movff	btemp+11,plusw1
 24745                           
 24746                           ;stkvar	_b @ sp[(-13)+-4]
 24747  014AC4  0EF2               	movlw	242
 24748  014AC6  24E1               	addwf	fsr1l,w,c
 24749  014AC8  6ED9               	movwf	fsr2l,c
 24750  014ACA  0EFF               	movlw	255
 24751  014ACC  20E2               	addwfc	fsr1h,w,c
 24752  014ACE  6EDA               	movwf	fsr2h,c
 24753  014AD0  50DF               	movf	indf2,w,c
 24754  014AD2  6E0C               	movwf	(btemp+11)^0,c
 24755  014AD4  90D8               	bcf	status,0,c
 24756  014AD6  340C               	rlcf	(btemp+11)^0,w,c
 24757  014AD8  6E0B               	movwf	(btemp+10)^0,c
 24758                           
 24759                           ;stkvar	_bexp @ sp[(-13)+11]
 24760  014ADA  0EFE               	movlw	-2
 24761  014ADC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24762                           
 24763                           ;stkvar	_b @ sp[(-13)+-4]
 24764  014AE2  0EF1               	movlw	241
 24765  014AE4  24E1               	addwf	fsr1l,w,c
 24766  014AE6  6ED9               	movwf	fsr2l,c
 24767  014AE8  0EFF               	movlw	255
 24768  014AEA  20E2               	addwfc	fsr1h,w,c
 24769  014AEC  6EDA               	movwf	fsr2h,c
 24770  014AEE  AEDF               	btfss	indf2,7,c
 24771  014AF0  D002               	goto	l8075
 24772                           
 24773                           ;stkvar	_bexp @ sp[(-13)+11]
 24774  014AF2  0EFE               	movlw	-2
 24775  014AF4  80E3               	bsf	plusw1,0,c
 24776  014AF6                     l8075:
 24777                           
 24778                           ;stkvar	_bexp @ sp[(-13)+11]
 24779  014AF6  0EFE               	movlw	-2
 24780  014AF8  50E3               	movf	plusw1,w,c
 24781  014AFA  B4D8               	btfsc	status,2,c
 24782  014AFC  D027               	goto	l8085
 24783                           
 24784                           ;stkvar	_bexp @ sp[(-13)+11]
 24785  014AFE  0EFE               	movlw	-2
 24786  014B00  28E3               	incf	plusw1,w,c
 24787  014B02  A4D8               	btfss	status,2,c
 24788  014B04  D018               	goto	l8081
 24789  014B06  0E00               	movlw	0
 24790  014B08  6E09               	movwf	(btemp+8)^0,c
 24791  014B0A  0E00               	movlw	0
 24792  014B0C  6E0A               	movwf	(btemp+9)^0,c
 24793  014B0E  0E00               	movlw	0
 24794  014B10  6E0B               	movwf	(btemp+10)^0,c
 24795  014B12  0E00               	movlw	0
 24796  014B14  6E0C               	movwf	(btemp+11)^0,c
 24797                           
 24798                           ;stkvar	_b @ sp[(-13)+-4]
 24799  014B16  0EEF               	movlw	-17
 24800  014B18  0060  F027  FFE3   	movff	btemp+8,plusw1
 24801  014B1E  0EF0               	movlw	-16
 24802  014B20  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24803  014B26  0EF1               	movlw	-15
 24804  014B28  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24805  014B2E  0EF2               	movlw	-14
 24806  014B30  0060  F033  FFE3   	movff	btemp+11,plusw1
 24807  014B36                     l8081:
 24808                           
 24809                           ;stkvar	_b @ sp[(-13)+-4]
 24810  014B36  0EF1               	movlw	-15
 24811  014B38  8EE3               	bsf	plusw1,7,c
 24812                           
 24813                           ;stkvar	_b @ sp[(-13)+-4]
 24814  014B3A  0EF2               	movlw	242
 24815  014B3C  24E1               	addwf	fsr1l,w,c
 24816  014B3E  6ED9               	movwf	fsr2l,c
 24817  014B40  0EFF               	movlw	255
 24818  014B42  20E2               	addwfc	fsr1h,w,c
 24819  014B44  6EDA               	movwf	fsr2h,c
 24820  014B46  0E00               	movlw	0
 24821  014B48  6EDF               	movwf	indf2,c
 24822  014B4A  D018               	goto	l8087
 24823  014B4C                     l8085:
 24824  014B4C  0E00               	movlw	0
 24825  014B4E  6E09               	movwf	(btemp+8)^0,c
 24826  014B50  0E00               	movlw	0
 24827  014B52  6E0A               	movwf	(btemp+9)^0,c
 24828  014B54  0E00               	movlw	0
 24829  014B56  6E0B               	movwf	(btemp+10)^0,c
 24830  014B58  0E00               	movlw	0
 24831  014B5A  6E0C               	movwf	(btemp+11)^0,c
 24832                           
 24833                           ;stkvar	_b @ sp[(-13)+-4]
 24834  014B5C  0EEF               	movlw	-17
 24835  014B5E  0060  F027  FFE3   	movff	btemp+8,plusw1
 24836  014B64  0EF0               	movlw	-16
 24837  014B66  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24838  014B6C  0EF1               	movlw	-15
 24839  014B6E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24840  014B74  0EF2               	movlw	-14
 24841  014B76  0060  F033  FFE3   	movff	btemp+11,plusw1
 24842  014B7C                     l8087:
 24843                           
 24844                           ;stkvar	_a @ sp[(-13)+-8]
 24845  014B7C  0EEE               	movlw	238
 24846  014B7E  24E1               	addwf	fsr1l,w,c
 24847  014B80  6ED9               	movwf	fsr2l,c
 24848  014B82  0EFF               	movlw	255
 24849  014B84  20E2               	addwfc	fsr1h,w,c
 24850  014B86  6EDA               	movwf	fsr2h,c
 24851  014B88  50DF               	movf	indf2,w,c
 24852  014B8A  6E0C               	movwf	(btemp+11)^0,c
 24853  014B8C  0E80               	movlw	128
 24854  014B8E  160C               	andwf	(btemp+11)^0,f,c
 24855                           
 24856                           ;stkvar	_sign @ sp[(-13)+12]
 24857  014B90  50E1               	movf	fsr1l,w,c
 24858  014B92  0FFF               	addlw	-1
 24859  014B94  6ED9               	movwf	fsr2l,c
 24860  014B96  50E2               	movf	fsr1h,w,c
 24861  014B98  6EDA               	movwf	fsr2h,c
 24862  014B9A  0EFF               	movlw	255
 24863  014B9C  22DA               	addwfc	fsr2h,f,c
 24864  014B9E  500C               	movf	(btemp+11)^0,w,c
 24865  014BA0  1ADF               	xorwf	indf2,f,c
 24866                           
 24867                           ;stkvar	_a @ sp[(-13)+-8]
 24868  014BA2  0EEE               	movlw	238
 24869  014BA4  24E1               	addwf	fsr1l,w,c
 24870  014BA6  6ED9               	movwf	fsr2l,c
 24871  014BA8  0EFF               	movlw	255
 24872  014BAA  20E2               	addwfc	fsr1h,w,c
 24873  014BAC  6EDA               	movwf	fsr2h,c
 24874  014BAE  50DF               	movf	indf2,w,c
 24875  014BB0  6E0C               	movwf	(btemp+11)^0,c
 24876  014BB2  90D8               	bcf	status,0,c
 24877  014BB4  340C               	rlcf	(btemp+11)^0,w,c
 24878  014BB6  6E0B               	movwf	(btemp+10)^0,c
 24879                           
 24880                           ;stkvar	_aexp @ sp[(-13)+10]
 24881  014BB8  0EFD               	movlw	-3
 24882  014BBA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24883                           
 24884                           ;stkvar	_a @ sp[(-13)+-8]
 24885  014BC0  0EED               	movlw	237
 24886  014BC2  24E1               	addwf	fsr1l,w,c
 24887  014BC4  6ED9               	movwf	fsr2l,c
 24888  014BC6  0EFF               	movlw	255
 24889  014BC8  20E2               	addwfc	fsr1h,w,c
 24890  014BCA  6EDA               	movwf	fsr2h,c
 24891  014BCC  AEDF               	btfss	indf2,7,c
 24892  014BCE  D002               	goto	l8095
 24893                           
 24894                           ;stkvar	_aexp @ sp[(-13)+10]
 24895  014BD0  0EFD               	movlw	-3
 24896  014BD2  80E3               	bsf	plusw1,0,c
 24897  014BD4                     l8095:
 24898                           
 24899                           ;stkvar	_aexp @ sp[(-13)+10]
 24900  014BD4  0EFD               	movlw	-3
 24901  014BD6  50E3               	movf	plusw1,w,c
 24902  014BD8  B4D8               	btfsc	status,2,c
 24903  014BDA  D027               	goto	l8105
 24904                           
 24905                           ;stkvar	_aexp @ sp[(-13)+10]
 24906  014BDC  0EFD               	movlw	-3
 24907  014BDE  28E3               	incf	plusw1,w,c
 24908  014BE0  A4D8               	btfss	status,2,c
 24909  014BE2  D018               	goto	l8101
 24910  014BE4  0E00               	movlw	0
 24911  014BE6  6E09               	movwf	(btemp+8)^0,c
 24912  014BE8  0E00               	movlw	0
 24913  014BEA  6E0A               	movwf	(btemp+9)^0,c
 24914  014BEC  0E00               	movlw	0
 24915  014BEE  6E0B               	movwf	(btemp+10)^0,c
 24916  014BF0  0E00               	movlw	0
 24917  014BF2  6E0C               	movwf	(btemp+11)^0,c
 24918                           
 24919                           ;stkvar	_a @ sp[(-13)+-8]
 24920  014BF4  0EEB               	movlw	-21
 24921  014BF6  0060  F027  FFE3   	movff	btemp+8,plusw1
 24922  014BFC  0EEC               	movlw	-20
 24923  014BFE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24924  014C04  0EED               	movlw	-19
 24925  014C06  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24926  014C0C  0EEE               	movlw	-18
 24927  014C0E  0060  F033  FFE3   	movff	btemp+11,plusw1
 24928  014C14                     l8101:
 24929                           
 24930                           ;stkvar	_a @ sp[(-13)+-8]
 24931  014C14  0EED               	movlw	-19
 24932  014C16  8EE3               	bsf	plusw1,7,c
 24933                           
 24934                           ;stkvar	_a @ sp[(-13)+-8]
 24935  014C18  0EEE               	movlw	238
 24936  014C1A  24E1               	addwf	fsr1l,w,c
 24937  014C1C  6ED9               	movwf	fsr2l,c
 24938  014C1E  0EFF               	movlw	255
 24939  014C20  20E2               	addwfc	fsr1h,w,c
 24940  014C22  6EDA               	movwf	fsr2h,c
 24941  014C24  0E00               	movlw	0
 24942  014C26  6EDF               	movwf	indf2,c
 24943  014C28  D018               	goto	l8107
 24944  014C2A                     l8105:
 24945  014C2A  0E00               	movlw	0
 24946  014C2C  6E09               	movwf	(btemp+8)^0,c
 24947  014C2E  0E00               	movlw	0
 24948  014C30  6E0A               	movwf	(btemp+9)^0,c
 24949  014C32  0E00               	movlw	0
 24950  014C34  6E0B               	movwf	(btemp+10)^0,c
 24951  014C36  0E00               	movlw	0
 24952  014C38  6E0C               	movwf	(btemp+11)^0,c
 24953                           
 24954                           ;stkvar	_a @ sp[(-13)+-8]
 24955  014C3A  0EEB               	movlw	-21
 24956  014C3C  0060  F027  FFE3   	movff	btemp+8,plusw1
 24957  014C42  0EEC               	movlw	-20
 24958  014C44  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24959  014C4A  0EED               	movlw	-19
 24960  014C4C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24961  014C52  0EEE               	movlw	-18
 24962  014C54  0060  F033  FFE3   	movff	btemp+11,plusw1
 24963  014C5A                     l8107:
 24964                           
 24965                           ;stkvar	_a @ sp[(-13)+-8]
 24966  014C5A  0EEB               	movlw	-21
 24967  014C5C  50E3               	movf	plusw1,w,c
 24968  014C5E  E139               	bnz	l8119
 24969  014C60  0EEC               	movlw	-20
 24970  014C62  50E3               	movf	plusw1,w,c
 24971  014C64  E136               	bnz	l8119
 24972  014C66  0EED               	movlw	-19
 24973  014C68  50E3               	movf	plusw1,w,c
 24974  014C6A  E133               	bnz	l8119
 24975  014C6C  0EEE               	movlw	-18
 24976  014C6E  50E3               	movf	plusw1,w,c
 24977  014C70  A4D8               	btfss	status,2,c
 24978  014C72  D02F               	goto	l8119
 24979                           
 24980                           ;stkvar	_b @ sp[(-13)+-4]
 24981  014C74  0EEF               	movlw	-17
 24982  014C76  6AE3               	clrf	plusw1,c
 24983  014C78  0EF0               	movlw	-16
 24984  014C7A  6AE3               	clrf	plusw1,c
 24985  014C7C  0EF1               	movlw	-15
 24986  014C7E  6AE3               	clrf	plusw1,c
 24987  014C80  0EF2               	movlw	-14
 24988  014C82  6AE3               	clrf	plusw1,c
 24989                           
 24990                           ;stkvar	_b @ sp[(-13)+-4]
 24991  014C84  0EF1               	movlw	241
 24992  014C86  24E1               	addwf	fsr1l,w,c
 24993  014C88  6ED9               	movwf	fsr2l,c
 24994  014C8A  0EFF               	movlw	255
 24995  014C8C  20E2               	addwfc	fsr1h,w,c
 24996  014C8E  6EDA               	movwf	fsr2h,c
 24997  014C90  0E80               	movlw	128
 24998  014C92  12DE               	iorwf	postinc2,f,c
 24999  014C94  0E7F               	movlw	127
 25000  014C96  12DD               	iorwf	postdec2,f,c
 25001  014C98                     l8113:
 25002                           
 25003                           ;stkvar	_sign @ sp[(-13)+12]
 25004  014C98  0EFF               	movlw	-1
 25005  014C9A  006F FF8C  F00C    	movff	plusw1,btemp+11
 25006                           
 25007                           ;stkvar	_b @ sp[(-13)+-4]
 25008  014CA0  0EF2               	movlw	242
 25009  014CA2  24E1               	addwf	fsr1l,w,c
 25010  014CA4  6ED9               	movwf	fsr2l,c
 25011  014CA6  0EFF               	movlw	255
 25012  014CA8  20E2               	addwfc	fsr1h,w,c
 25013  014CAA  6EDA               	movwf	fsr2h,c
 25014  014CAC  500C               	movf	(btemp+11)^0,w,c
 25015  014CAE  12DF               	iorwf	indf2,f,c
 25016                           
 25017                           ;stkvar	_b @ sp[(-13)+-4]
 25018  014CB0  0EEF               	movlw	-17
 25019  014CB2  006F FF8C  F001    	movff	plusw1,btemp
 25020  014CB8  0EF0               	movlw	-16
 25021  014CBA  006F FF8C  F002    	movff	plusw1,btemp+1
 25022  014CC0  0EF1               	movlw	-15
 25023  014CC2  006F FF8C  F003    	movff	plusw1,btemp+2
 25024  014CC8  0EF2               	movlw	-14
 25025  014CCA  006F FF8C  F004    	movff	plusw1,btemp+3
 25026  014CD0  D19F               	goto	l2982
 25027  014CD2                     l8119:
 25028                           
 25029                           ;stkvar	_bexp @ sp[(-13)+11]
 25030  014CD2  0EFE               	movlw	-2
 25031  014CD4  50E3               	movf	plusw1,w,c
 25032  014CD6  A4D8               	btfss	status,2,c
 25033  014CD8  D009               	goto	l8127
 25034  014CDA  0E00               	movlw	0
 25035  014CDC  6E01               	movwf	btemp^0,c
 25036  014CDE  0E00               	movlw	0
 25037  014CE0  6E02               	movwf	(btemp+1)^0,c
 25038  014CE2  0E00               	movlw	0
 25039  014CE4  6E03               	movwf	(btemp+2)^0,c
 25040  014CE6  0E00               	movlw	0
 25041  014CE8  6E04               	movwf	(btemp+3)^0,c
 25042  014CEA  D192               	goto	l2982
 25043  014CEC                     l8127:
 25044                           
 25045                           ;stkvar	_bexp @ sp[(-13)+11]
 25046  014CEC  0EFE               	movlw	-2
 25047  014CEE  50E3               	movf	plusw1,w,c
 25048  014CF0  6E0B               	movwf	(btemp+10)^0,c
 25049  014CF2  6A0C               	clrf	(btemp+11)^0,c
 25050                           
 25051                           ;stkvar	_aexp @ sp[(-13)+10]
 25052  014CF4  0EFD               	movlw	-3
 25053  014CF6  50E3               	movf	plusw1,w,c
 25054  014CF8  5E0B               	subwf	(btemp+10)^0,f,c
 25055  014CFA  0E00               	movlw	0
 25056  014CFC  5A0C               	subwfb	(btemp+11)^0,f,c
 25057  014CFE  0E7F               	movlw	127
 25058  014D00  260B               	addwf	(btemp+10)^0,f,c
 25059  014D02  0E00               	movlw	0
 25060  014D04  220C               	addwfc	(btemp+11)^0,f,c
 25061                           
 25062                           ;stkvar	_new_exp @ sp[(-13)+8]
 25063  014D06  0EFB               	movlw	-5
 25064  014D08  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25065  014D0E  0EFC               	movlw	-4
 25066  014D10  0060  F033  FFE3   	movff	btemp+11,plusw1
 25067                           
 25068                           ;stkvar	_b @ sp[(-13)+-4]
 25069  014D16  0EEF               	movlw	-17
 25070  014D18  006F FF8C  F009    	movff	plusw1,btemp+8
 25071  014D1E  0EF0               	movlw	-16
 25072  014D20  006F FF8C  F00A    	movff	plusw1,btemp+9
 25073  014D26  0EF1               	movlw	-15
 25074  014D28  006F FF8C  F00B    	movff	plusw1,btemp+10
 25075  014D2E  0EF2               	movlw	-14
 25076  014D30  006F FF8C  F00C    	movff	plusw1,btemp+11
 25077                           
 25078                           ;stkvar	_rem @ sp[(-13)+4]
 25079  014D36  0EF7               	movlw	-9
 25080  014D38  0060  F027  FFE3   	movff	btemp+8,plusw1
 25081  014D3E  0EF8               	movlw	-8
 25082  014D40  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25083  014D46  0EF9               	movlw	-7
 25084  014D48  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25085  014D4E  0EFA               	movlw	-6
 25086  014D50  0060  F033  FFE3   	movff	btemp+11,plusw1
 25087                           
 25088                           ;stkvar	_b @ sp[(-13)+-4]
 25089  014D56  0EEF               	movlw	-17
 25090  014D58  6AE3               	clrf	plusw1,c
 25091  014D5A  0EF0               	movlw	-16
 25092  014D5C  6AE3               	clrf	plusw1,c
 25093  014D5E  0EF1               	movlw	-15
 25094  014D60  6AE3               	clrf	plusw1,c
 25095  014D62  0EF2               	movlw	-14
 25096  014D64  6AE3               	clrf	plusw1,c
 25097                           
 25098                           ;stkvar	_grs @ sp[(-13)+0]
 25099  014D66  0EF3               	movlw	-13
 25100  014D68  6AE3               	clrf	plusw1,c
 25101  014D6A  0EF4               	movlw	-12
 25102  014D6C  6AE3               	clrf	plusw1,c
 25103  014D6E  0EF5               	movlw	-11
 25104  014D70  6AE3               	clrf	plusw1,c
 25105  014D72  0EF6               	movlw	-10
 25106  014D74  6AE3               	clrf	plusw1,c
 25107                           
 25108                           ;stkvar	_aexp @ sp[(-13)+10]
 25109  014D76  0EFD               	movlw	-3
 25110  014D78  6AE3               	clrf	plusw1,c
 25111  014D7A  D050               	goto	l8155
 25112  014D7C                     l8137:
 25113                           
 25114                           ;stkvar	_aexp @ sp[(-13)+10]
 25115  014D7C  0EFD               	movlw	-3
 25116  014D7E  50E3               	movf	plusw1,w,c
 25117  014D80  B4D8               	btfsc	status,2,c
 25118  014D82  D020               	goto	l8147
 25119                           
 25120                           ;stkvar	_rem @ sp[(-13)+4]
 25121  014D84  90D8               	bcf	status,0,c
 25122  014D86  0EF7               	movlw	-9
 25123  014D88  36E3               	rlcf	plusw1,f,c
 25124  014D8A  0EF8               	movlw	-8
 25125  014D8C  36E3               	rlcf	plusw1,f,c
 25126  014D8E  0EF9               	movlw	-7
 25127  014D90  36E3               	rlcf	plusw1,f,c
 25128  014D92  0EFA               	movlw	-6
 25129  014D94  36E3               	rlcf	plusw1,f,c
 25130                           
 25131                           ;stkvar	_b @ sp[(-13)+-4]
 25132  014D96  90D8               	bcf	status,0,c
 25133  014D98  0EEF               	movlw	-17
 25134  014D9A  36E3               	rlcf	plusw1,f,c
 25135  014D9C  0EF0               	movlw	-16
 25136  014D9E  36E3               	rlcf	plusw1,f,c
 25137  014DA0  0EF1               	movlw	-15
 25138  014DA2  36E3               	rlcf	plusw1,f,c
 25139  014DA4  0EF2               	movlw	-14
 25140  014DA6  36E3               	rlcf	plusw1,f,c
 25141                           
 25142                           ;stkvar	_grs @ sp[(-13)+0]
 25143  014DA8  0EF6               	movlw	-10
 25144  014DAA  AEE3               	btfss	plusw1,7,c
 25145  014DAC  D002               	goto	l8145
 25146                           
 25147                           ;stkvar	_b @ sp[(-13)+-4]
 25148  014DAE  0EEF               	movlw	-17
 25149  014DB0  80E3               	bsf	plusw1,0,c
 25150  014DB2                     l8145:
 25151                           
 25152                           ;stkvar	_grs @ sp[(-13)+0]
 25153  014DB2  90D8               	bcf	status,0,c
 25154  014DB4  0EF3               	movlw	-13
 25155  014DB6  36E3               	rlcf	plusw1,f,c
 25156  014DB8  0EF4               	movlw	-12
 25157  014DBA  36E3               	rlcf	plusw1,f,c
 25158  014DBC  0EF5               	movlw	-11
 25159  014DBE  36E3               	rlcf	plusw1,f,c
 25160  014DC0  0EF6               	movlw	-10
 25161  014DC2  36E3               	rlcf	plusw1,f,c
 25162  014DC4                     l8147:
 25163                           
 25164                           ;stkvar	_a @ sp[(-13)+-8]
 25165                           ;stkvar	_rem @ sp[(-13)+4]
 25166  014DC4  50E1               	movf	fsr1l,w,c
 25167  014DC6  0FF7               	addlw	-9
 25168  014DC8  6ED9               	movwf	fsr2l,c
 25169  014DCA  50E2               	movf	fsr1h,w,c
 25170  014DCC  6EDA               	movwf	fsr2h,c
 25171  014DCE  0EFF               	movlw	255
 25172  014DD0  22DA               	addwfc	fsr2h,f,c
 25173  014DD2  0EEB               	movlw	-21
 25174  014DD4  50E3               	movf	plusw1,w,c
 25175  014DD6  5CDE               	subwf	postinc2,w,c
 25176  014DD8  0EEC               	movlw	-20
 25177  014DDA  50E3               	movf	plusw1,w,c
 25178  014DDC  58DE               	subwfb	postinc2,w,c
 25179  014DDE  0EED               	movlw	-19
 25180  014DE0  50E3               	movf	plusw1,w,c
 25181  014DE2  58DE               	subwfb	postinc2,w,c
 25182  014DE4  0EEE               	movlw	-18
 25183  014DE6  50E3               	movf	plusw1,w,c
 25184  014DE8  58DE               	subwfb	postinc2,w,c
 25185  014DEA  A0D8               	btfss	status,0,c
 25186  014DEC  D015               	goto	l8153
 25187                           
 25188                           ;stkvar	_grs @ sp[(-13)+0]
 25189  014DEE  0EF6               	movlw	-10
 25190  014DF0  8CE3               	bsf	plusw1,6,c
 25191                           
 25192                           ;stkvar	_a @ sp[(-13)+-8]
 25193                           ;stkvar	_rem @ sp[(-13)+4]
 25194  014DF2  50E1               	movf	fsr1l,w,c
 25195  014DF4  0FF7               	addlw	-9
 25196  014DF6  6ED9               	movwf	fsr2l,c
 25197  014DF8  50E2               	movf	fsr1h,w,c
 25198  014DFA  6EDA               	movwf	fsr2h,c
 25199  014DFC  0EFF               	movlw	255
 25200  014DFE  22DA               	addwfc	fsr2h,f,c
 25201  014E00  0EEB               	movlw	-21
 25202  014E02  50E3               	movf	plusw1,w,c
 25203  014E04  5EDE               	subwf	postinc2,f,c
 25204  014E06  0EEC               	movlw	-20
 25205  014E08  50E3               	movf	plusw1,w,c
 25206  014E0A  5ADE               	subwfb	postinc2,f,c
 25207  014E0C  0EED               	movlw	-19
 25208  014E0E  50E3               	movf	plusw1,w,c
 25209  014E10  5ADE               	subwfb	postinc2,f,c
 25210  014E12  0EEE               	movlw	-18
 25211  014E14  50E3               	movf	plusw1,w,c
 25212  014E16  5ADE               	subwfb	postinc2,f,c
 25213  014E18                     l8153:
 25214                           
 25215                           ;stkvar	_aexp @ sp[(-13)+10]
 25216  014E18  0EFD               	movlw	-3
 25217  014E1A  2AE3               	incf	plusw1,f,c
 25218  014E1C                     l8155:
 25219                           
 25220                           ;stkvar	_aexp @ sp[(-13)+10]
 25221  014E1C  0EFD               	movlw	-3
 25222  014E1E  006F FF8C  F001    	movff	plusw1,btemp
 25223  014E24  0E19               	movlw	25
 25224  014E26  6401               	cpfsgt	btemp^0,c
 25225  014E28  D7A9               	goto	l8137
 25226                           
 25227                           ;stkvar	_rem @ sp[(-13)+4]
 25228  014E2A  0EF7               	movlw	-9
 25229  014E2C  50E3               	movf	plusw1,w,c
 25230  014E2E  E10A               	bnz	u6560
 25231  014E30  0EF8               	movlw	-8
 25232  014E32  50E3               	movf	plusw1,w,c
 25233  014E34  E107               	bnz	u6560
 25234  014E36  0EF9               	movlw	-7
 25235  014E38  50E3               	movf	plusw1,w,c
 25236  014E3A  E104               	bnz	u6560
 25237  014E3C  0EFA               	movlw	-6
 25238  014E3E  50E3               	movf	plusw1,w,c
 25239  014E40  B4D8               	btfsc	status,2,c
 25240  014E42  D024               	goto	l8171
 25241  014E44                     u6560:
 25242                           
 25243                           ;stkvar	_grs @ sp[(-13)+0]
 25244  014E44  0EF3               	movlw	-13
 25245  014E46  80E3               	bsf	plusw1,0,c
 25246  014E48  D021               	goto	l8171
 25247  014E4A                     l8161:
 25248                           
 25249                           ;stkvar	_b @ sp[(-13)+-4]
 25250  014E4A  90D8               	bcf	status,0,c
 25251  014E4C  0EEF               	movlw	-17
 25252  014E4E  36E3               	rlcf	plusw1,f,c
 25253  014E50  0EF0               	movlw	-16
 25254  014E52  36E3               	rlcf	plusw1,f,c
 25255  014E54  0EF1               	movlw	-15
 25256  014E56  36E3               	rlcf	plusw1,f,c
 25257  014E58  0EF2               	movlw	-14
 25258  014E5A  36E3               	rlcf	plusw1,f,c
 25259                           
 25260                           ;stkvar	_grs @ sp[(-13)+0]
 25261  014E5C  0EF6               	movlw	-10
 25262  014E5E  AEE3               	btfss	plusw1,7,c
 25263  014E60  D002               	goto	l8167
 25264                           
 25265                           ;stkvar	_b @ sp[(-13)+-4]
 25266  014E62  0EEF               	movlw	-17
 25267  014E64  80E3               	bsf	plusw1,0,c
 25268  014E66                     l8167:
 25269                           
 25270                           ;stkvar	_grs @ sp[(-13)+0]
 25271  014E66  90D8               	bcf	status,0,c
 25272  014E68  0EF3               	movlw	-13
 25273  014E6A  36E3               	rlcf	plusw1,f,c
 25274  014E6C  0EF4               	movlw	-12
 25275  014E6E  36E3               	rlcf	plusw1,f,c
 25276  014E70  0EF5               	movlw	-11
 25277  014E72  36E3               	rlcf	plusw1,f,c
 25278  014E74  0EF6               	movlw	-10
 25279  014E76  36E3               	rlcf	plusw1,f,c
 25280                           
 25281                           ;stkvar	_new_exp @ sp[(-13)+8]
 25282  014E78  50E1               	movf	fsr1l,w,c
 25283  014E7A  0FFB               	addlw	-5
 25284  014E7C  6ED9               	movwf	fsr2l,c
 25285  014E7E  50E2               	movf	fsr1h,w,c
 25286  014E80  6EDA               	movwf	fsr2h,c
 25287  014E82  0EFF               	movlw	255
 25288  014E84  22DA               	addwfc	fsr2h,f,c
 25289  014E86  06DE               	decf	postinc2,f,c
 25290  014E88  0E00               	movlw	0
 25291  014E8A  5ADD               	subwfb	postdec2,f,c
 25292  014E8C                     l8171:
 25293                           
 25294                           ;stkvar	_b @ sp[(-13)+-4]
 25295  014E8C  0EF1               	movlw	-15
 25296  014E8E  AEE3               	btfss	plusw1,7,c
 25297  014E90  D7DC               	goto	l8161
 25298                           
 25299                           ;stkvar	_aexp @ sp[(-13)+10]
 25300  014E92  0EFD               	movlw	-3
 25301  014E94  6AE3               	clrf	plusw1,c
 25302                           
 25303                           ;stkvar	_grs @ sp[(-13)+0]
 25304  014E96  0EF6               	movlw	-10
 25305  014E98  AEE3               	btfss	plusw1,7,c
 25306  014E9A  D020               	goto	l8185
 25307                           
 25308                           ;stkvar	_grs @ sp[(-13)+0]
 25309  014E9C  50E1               	movf	fsr1l,w,c
 25310  014E9E  0FF3               	addlw	-13
 25311  014EA0  6ED9               	movwf	fsr2l,c
 25312  014EA2  50E2               	movf	fsr1h,w,c
 25313  014EA4  6EDA               	movwf	fsr2h,c
 25314  014EA6  0EFF               	movlw	255
 25315  014EA8  22DA               	addwfc	fsr2h,f,c
 25316  014EAA  0EFF               	movlw	255
 25317  014EAC  14DE               	andwf	postinc2,w,c
 25318  014EAE  6E09               	movwf	(btemp+8)^0,c
 25319  014EB0  0EFF               	movlw	255
 25320  014EB2  14DE               	andwf	postinc2,w,c
 25321  014EB4  6E0A               	movwf	(btemp+9)^0,c
 25322  014EB6  0EFF               	movlw	255
 25323  014EB8  14DE               	andwf	postinc2,w,c
 25324  014EBA  6E0B               	movwf	(btemp+10)^0,c
 25325  014EBC  0E7F               	movlw	127
 25326  014EBE  14DE               	andwf	postinc2,w,c
 25327  014EC0  6E0C               	movwf	(btemp+11)^0,c
 25328  014EC2  5009               	movf	(btemp+8)^0,w,c
 25329  014EC4  100A               	iorwf	(btemp+9)^0,w,c
 25330  014EC6  100B               	iorwf	(btemp+10)^0,w,c
 25331  014EC8  100C               	iorwf	(btemp+11)^0,w,c
 25332  014ECA  B4D8               	btfsc	status,2,c
 25333  014ECC  D004               	goto	l8181
 25334  014ECE                     u6600:
 25335                           
 25336                           ;stkvar	_aexp @ sp[(-13)+10]
 25337  014ECE  0EFD               	movlw	-3
 25338  014ED0  6AE3               	clrf	plusw1,c
 25339  014ED2  2AE3               	incf	plusw1,f,c
 25340  014ED4  D003               	goto	l8185
 25341  014ED6                     l8181:
 25342                           
 25343                           ;stkvar	_b @ sp[(-13)+-4]
 25344  014ED6  0EEF               	movlw	-17
 25345  014ED8  B0E3               	btfsc	plusw1,0,c
 25346  014EDA  D7F9               	goto	u6600
 25347  014EDC                     l8185:
 25348                           
 25349                           ;stkvar	_aexp @ sp[(-13)+10]
 25350  014EDC  0EFD               	movlw	-3
 25351  014EDE  50E3               	movf	plusw1,w,c
 25352  014EE0  B4D8               	btfsc	status,2,c
 25353  014EE2  D036               	goto	l8195
 25354                           
 25355                           ;stkvar	_b @ sp[(-13)+-4]
 25356  014EE4  50E1               	movf	fsr1l,w,c
 25357  014EE6  0FEF               	addlw	-17
 25358  014EE8  6ED9               	movwf	fsr2l,c
 25359  014EEA  50E2               	movf	fsr1h,w,c
 25360  014EEC  6EDA               	movwf	fsr2h,c
 25361  014EEE  0EFF               	movlw	255
 25362  014EF0  22DA               	addwfc	fsr2h,f,c
 25363  014EF2  2ADE               	incf	postinc2,f,c
 25364  014EF4  0E00               	movlw	0
 25365  014EF6  22DE               	addwfc	postinc2,f,c
 25366  014EF8  22DE               	addwfc	postinc2,f,c
 25367  014EFA  22DE               	addwfc	postinc2,f,c
 25368                           
 25369                           ;stkvar	_b @ sp[(-13)+-4]
 25370  014EFC  0EF2               	movlw	-14
 25371  014EFE  A0E3               	btfss	plusw1,0,c
 25372  014F00  D027               	goto	l8195
 25373  014F02  0E01               	movlw	1
 25374  014F04  6E0C               	movwf	(btemp+11)^0,c
 25375                           
 25376                           ;stkvar	_b @ sp[(-13)+-4]
 25377  014F06  50E1               	movf	fsr1l,w,c
 25378  014F08  0FEF               	addlw	-17
 25379  014F0A  6ED9               	movwf	fsr2l,c
 25380  014F0C  50E2               	movf	fsr1h,w,c
 25381  014F0E  6EDA               	movwf	fsr2h,c
 25382  014F10  0EFF               	movlw	255
 25383  014F12  22DA               	addwfc	fsr2h,f,c
 25384  014F14  280C               	incf	(btemp+11)^0,w,c
 25385  014F16  52DE               	movf	postinc2,f,c
 25386  014F18  D008               	goto	u6640
 25387  014F1A                     u6645:
 25388  014F1A  52DE               	movf	postinc2,f,c
 25389  014F1C  90D8               	bcf	status,0,c
 25390  014F1E  BEDC               	btfsc	preinc2,7,c
 25391  014F20  80D8               	bsf	status,0,c
 25392  014F22  32DD               	rrcf	postdec2,f,c
 25393  014F24  32DD               	rrcf	postdec2,f,c
 25394  014F26  32DD               	rrcf	postdec2,f,c
 25395  014F28  32DE               	rrcf	postinc2,f,c
 25396  014F2A                     u6640:
 25397  014F2A  2EE8               	decfsz	wreg,f,c
 25398  014F2C  D7F6               	goto	u6645
 25399                           
 25400                           ;stkvar	_new_exp @ sp[(-13)+8]
 25401  014F2E  0EFB               	movlw	-5
 25402  014F30  50E3               	movf	plusw1,w,c
 25403  014F32  0F01               	addlw	1
 25404  014F34  6E01               	movwf	btemp^0,c
 25405  014F36  0EFB               	movlw	-5
 25406  014F38  0060  F007  FFE3   	movff	btemp,plusw1
 25407  014F3E  6A01               	clrf	btemp^0,c
 25408  014F40  0EFC               	movlw	-4
 25409  014F42  50E3               	movf	plusw1,w,c
 25410  014F44  2001               	addwfc	btemp^0,w,c
 25411  014F46  6E01               	movwf	btemp^0,c
 25412  014F48  0EFC               	movlw	-4
 25413  014F4A  0060  F007  FFE3   	movff	btemp,plusw1
 25414  014F50                     l8195:
 25415                           
 25416                           ;stkvar	_new_exp @ sp[(-13)+8]
 25417  014F50  0EFC               	movlw	-4
 25418  014F52  BEE3               	btfsc	plusw1,7,c
 25419  014F54  D01B               	goto	l8201
 25420  014F56  0EFC               	movlw	-4
 25421  014F58  50E3               	movf	plusw1,w,c
 25422  014F5A  E104               	bnz	u6650
 25423  014F5C  0EFB               	movlw	-5
 25424  014F5E  28E3               	incf	plusw1,w,c
 25425  014F60  A0D8               	btfss	status,0,c
 25426  014F62  D014               	goto	l8201
 25427  014F64                     u6650:
 25428  014F64  0EFF               	movlw	255
 25429  014F66  6E0B               	movwf	(btemp+10)^0,c
 25430  014F68  0E00               	movlw	0
 25431  014F6A  6E0C               	movwf	(btemp+11)^0,c
 25432                           
 25433                           ;stkvar	_new_exp @ sp[(-13)+8]
 25434  014F6C  0EFB               	movlw	-5
 25435  014F6E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25436  014F74  0EFC               	movlw	-4
 25437  014F76  0060  F033  FFE3   	movff	btemp+11,plusw1
 25438                           
 25439                           ;stkvar	_b @ sp[(-13)+-4]
 25440  014F7C  0EEF               	movlw	-17
 25441  014F7E  6AE3               	clrf	plusw1,c
 25442  014F80  0EF0               	movlw	-16
 25443  014F82  6AE3               	clrf	plusw1,c
 25444  014F84  0EF1               	movlw	-15
 25445  014F86  6AE3               	clrf	plusw1,c
 25446  014F88  0EF2               	movlw	-14
 25447  014F8A  6AE3               	clrf	plusw1,c
 25448  014F8C                     l8201:
 25449                           
 25450                           ;stkvar	_new_exp @ sp[(-13)+8]
 25451  014F8C  0EFC               	movlw	-4
 25452  014F8E  BEE3               	btfsc	plusw1,7,c
 25453  014F90  D007               	goto	u6660
 25454  014F92  0EFC               	movlw	-4
 25455  014F94  50E3               	movf	plusw1,w,c
 25456  014F96  E112               	bnz	l8207
 25457  014F98  0EFB               	movlw	-5
 25458  014F9A  04E3               	decf	plusw1,w,c
 25459  014F9C  B0D8               	btfsc	status,0,c
 25460  014F9E  D00E               	goto	l8207
 25461  014FA0                     u6660:
 25462                           
 25463                           ;stkvar	_new_exp @ sp[(-13)+8]
 25464  014FA0  0EFB               	movlw	-5
 25465  014FA2  6AE3               	clrf	plusw1,c
 25466  014FA4  0EFC               	movlw	-4
 25467  014FA6  6AE3               	clrf	plusw1,c
 25468                           
 25469                           ;stkvar	_b @ sp[(-13)+-4]
 25470  014FA8  0EEF               	movlw	-17
 25471  014FAA  6AE3               	clrf	plusw1,c
 25472  014FAC  0EF0               	movlw	-16
 25473  014FAE  6AE3               	clrf	plusw1,c
 25474  014FB0  0EF1               	movlw	-15
 25475  014FB2  6AE3               	clrf	plusw1,c
 25476  014FB4  0EF2               	movlw	-14
 25477  014FB6  6AE3               	clrf	plusw1,c
 25478                           
 25479                           ;stkvar	_sign @ sp[(-13)+12]
 25480  014FB8  0EFF               	movlw	-1
 25481  014FBA  6AE3               	clrf	plusw1,c
 25482  014FBC                     l8207:
 25483                           
 25484                           ;stkvar	_new_exp @ sp[(-13)+8]
 25485                           ;stkvar	_bexp @ sp[(-13)+11]
 25486  014FBC  0EFB               	movlw	-5
 25487  014FBE  006F FF8C  F001    	movff	plusw1,btemp
 25488  014FC4  0EFE               	movlw	-2
 25489  014FC6  0060  F007  FFE3   	movff	btemp,plusw1
 25490                           
 25491                           ;stkvar	_bexp @ sp[(-13)+11]
 25492  014FCC  0EFE               	movlw	-2
 25493  014FCE  A0E3               	btfss	plusw1,0,c
 25494  014FD0  D009               	goto	l8213
 25495                           
 25496                           ;stkvar	_b @ sp[(-13)+-4]
 25497  014FD2  0EF1               	movlw	241
 25498  014FD4  24E1               	addwf	fsr1l,w,c
 25499  014FD6  6ED9               	movwf	fsr2l,c
 25500  014FD8  0EFF               	movlw	255
 25501  014FDA  20E2               	addwfc	fsr1h,w,c
 25502  014FDC  6EDA               	movwf	fsr2h,c
 25503  014FDE  0E00               	movlw	0
 25504  014FE0  8EDB               	bsf	plusw2,7,c
 25505  014FE2  D008               	goto	l8215
 25506  014FE4                     l8213:
 25507                           
 25508                           ;stkvar	_b @ sp[(-13)+-4]
 25509  014FE4  0EF1               	movlw	241
 25510  014FE6  24E1               	addwf	fsr1l,w,c
 25511  014FE8  6ED9               	movwf	fsr2l,c
 25512  014FEA  0EFF               	movlw	255
 25513  014FEC  20E2               	addwfc	fsr1h,w,c
 25514  014FEE  6EDA               	movwf	fsr2h,c
 25515  014FF0  0E7F               	movlw	127
 25516  014FF2  16DF               	andwf	indf2,f,c
 25517  014FF4                     l8215:
 25518                           
 25519                           ;stkvar	_b @ sp[(-13)+-4]
 25520  014FF4  0EF2               	movlw	242
 25521  014FF6  24E1               	addwf	fsr1l,w,c
 25522  014FF8  6ED9               	movwf	fsr2l,c
 25523  014FFA  0EFF               	movlw	255
 25524  014FFC  20E2               	addwfc	fsr1h,w,c
 25525  014FFE  6EDA               	movwf	fsr2h,c
 25526                           
 25527                           ;stkvar	_bexp @ sp[(-13)+11]
 25528  015000  0EFE               	movlw	-2
 25529  015002  006F FF8C  F00C    	movff	plusw1,btemp+11
 25530  015008  90D8               	bcf	status,0,c
 25531  01500A  300C               	rrcf	(btemp+11)^0,w,c
 25532  01500C  6EDF               	movwf	indf2,c
 25533  01500E  D644               	goto	l8113
 25534  015010                     l2982:
 25535                           
 25536                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 25537  015010  0EEB               	movlw	235
 25538  015012  26E1               	addwf	fsr1l,f,c
 25539  015014  0EFF               	movlw	255
 25540  015016  22E2               	addwfc	fsr1h,f,c
 25541  015018  0012               	return		;funcret
 25542  01501A                     __end_of___fldiv:
 25543                           	opt callstack 0
 25544                           
 25545 ;; *************** function ___flge *****************
 25546 ;; Defined at:
 25547 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 25548 ;; Parameters:    Size  Location     Type
 25549 ;;  ff1             4  [STACK] unsigned char 
 25550 ;;  ff2             4  [STACK] unsigned char 
 25551 ;; Auto vars:     Size  Location     Type
 25552 ;;		None
 25553 ;; Return value:  Size  Location     Type
 25554 ;;		None               void
 25555 ;; Registers used:
 25556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25557 ;; Tracked objects:
 25558 ;;		On entry : 0/0
 25559 ;;		On exit  : 0/0
 25560 ;;		Unchanged: 0/0
 25561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25566 ;;Total ram usage:        0 bytes
 25567 ;; Hardware stack levels used:    1
 25568 ;; Hardware stack levels required when called:   15
 25569 ;; This function calls:
 25570 ;;		Nothing
 25571 ;; This function is called by:
 25572 ;;		_main
 25573 ;;		_calc_ror_data
 25574 ;;		_check_day_time
 25575 ;;		_calc_bsoc
 25576 ;;		_efgtoa
 25577 ;; This function uses a reentrant model
 25578 ;;
 25579                           
 25580                           	psect	text99
 25581  018E74                     __ptext99:
 25582                           	opt callstack 0
 25583  018E74                     ___flge:
 25584                           	opt callstack 0
 25585                           
 25586                           ;stkvar	_ff1 @ sp[(0)+-4]
 25587                           
 25588                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25589                           ;incstack = 0
 25590 ;; hardware stack exceeded
 25591  018E74  50E1               	movf	fsr1l,w,c
 25592  018E76  0FFC               	addlw	-4
 25593  018E78  6ED9               	movwf	fsr2l,c
 25594  018E7A  50E2               	movf	fsr1h,w,c
 25595  018E7C  6EDA               	movwf	fsr2h,c
 25596  018E7E  0EFF               	movlw	255
 25597  018E80  22DA               	addwfc	fsr2h,f,c
 25598  018E82  0E00               	movlw	0
 25599  018E84  14DE               	andwf	postinc2,w,c
 25600  018E86  6E09               	movwf	(btemp+8)^0,c
 25601  018E88  0E00               	movlw	0
 25602  018E8A  14DE               	andwf	postinc2,w,c
 25603  018E8C  6E0A               	movwf	(btemp+9)^0,c
 25604  018E8E  0E80               	movlw	128
 25605  018E90  14DE               	andwf	postinc2,w,c
 25606  018E92  6E0B               	movwf	(btemp+10)^0,c
 25607  018E94  0E7F               	movlw	127
 25608  018E96  14DE               	andwf	postinc2,w,c
 25609  018E98  6E0C               	movwf	(btemp+11)^0,c
 25610  018E9A  5009               	movf	(btemp+8)^0,w,c
 25611  018E9C  100A               	iorwf	(btemp+9)^0,w,c
 25612  018E9E  100B               	iorwf	(btemp+10)^0,w,c
 25613  018EA0  100C               	iorwf	(btemp+11)^0,w,c
 25614  018EA2  A4D8               	btfss	status,2,c
 25615  018EA4  D008               	goto	l8489
 25616                           
 25617                           ;stkvar	_ff1 @ sp[(0)+-4]
 25618  018EA6  0EFC               	movlw	-4
 25619  018EA8  6AE3               	clrf	plusw1,c
 25620  018EAA  0EFD               	movlw	-3
 25621  018EAC  6AE3               	clrf	plusw1,c
 25622  018EAE  0EFE               	movlw	-2
 25623  018EB0  6AE3               	clrf	plusw1,c
 25624  018EB2  0EFF               	movlw	-1
 25625  018EB4  6AE3               	clrf	plusw1,c
 25626  018EB6                     l8489:
 25627                           
 25628                           ;stkvar	_ff2 @ sp[(0)+-8]
 25629  018EB6  50E1               	movf	fsr1l,w,c
 25630  018EB8  0FF8               	addlw	-8
 25631  018EBA  6ED9               	movwf	fsr2l,c
 25632  018EBC  50E2               	movf	fsr1h,w,c
 25633  018EBE  6EDA               	movwf	fsr2h,c
 25634  018EC0  0EFF               	movlw	255
 25635  018EC2  22DA               	addwfc	fsr2h,f,c
 25636  018EC4  0E00               	movlw	0
 25637  018EC6  14DE               	andwf	postinc2,w,c
 25638  018EC8  6E09               	movwf	(btemp+8)^0,c
 25639  018ECA  0E00               	movlw	0
 25640  018ECC  14DE               	andwf	postinc2,w,c
 25641  018ECE  6E0A               	movwf	(btemp+9)^0,c
 25642  018ED0  0E80               	movlw	128
 25643  018ED2  14DE               	andwf	postinc2,w,c
 25644  018ED4  6E0B               	movwf	(btemp+10)^0,c
 25645  018ED6  0E7F               	movlw	127
 25646  018ED8  14DE               	andwf	postinc2,w,c
 25647  018EDA  6E0C               	movwf	(btemp+11)^0,c
 25648  018EDC  5009               	movf	(btemp+8)^0,w,c
 25649  018EDE  100A               	iorwf	(btemp+9)^0,w,c
 25650  018EE0  100B               	iorwf	(btemp+10)^0,w,c
 25651  018EE2  100C               	iorwf	(btemp+11)^0,w,c
 25652  018EE4  A4D8               	btfss	status,2,c
 25653  018EE6  D008               	goto	l2663
 25654                           
 25655                           ;stkvar	_ff2 @ sp[(0)+-8]
 25656  018EE8  0EF8               	movlw	-8
 25657  018EEA  6AE3               	clrf	plusw1,c
 25658  018EEC  0EF9               	movlw	-7
 25659  018EEE  6AE3               	clrf	plusw1,c
 25660  018EF0  0EFA               	movlw	-6
 25661  018EF2  6AE3               	clrf	plusw1,c
 25662  018EF4  0EFB               	movlw	-5
 25663  018EF6  6AE3               	clrf	plusw1,c
 25664  018EF8                     l2663:
 25665                           
 25666                           ;stkvar	_ff1 @ sp[(0)+-4]
 25667  018EF8  0EFF               	movlw	-1
 25668  018EFA  AEE3               	btfss	plusw1,7,c
 25669  018EFC  D024               	goto	l8495
 25670                           
 25671                           ;stkvar	_ff1 @ sp[(0)+-4]
 25672  018EFE  0E00               	movlw	0
 25673  018F00  6E09               	movwf	(btemp+8)^0,c
 25674  018F02  0E00               	movlw	0
 25675  018F04  6E0A               	movwf	(btemp+9)^0,c
 25676  018F06  0E00               	movlw	0
 25677  018F08  6E0B               	movwf	(btemp+10)^0,c
 25678  018F0A  0E80               	movlw	128
 25679  018F0C  6E0C               	movwf	(btemp+11)^0,c
 25680  018F0E  0EFC               	movlw	-4
 25681  018F10  50E3               	movf	plusw1,w,c
 25682  018F12  5E09               	subwf	(btemp+8)^0,f,c
 25683  018F14  0EFD               	movlw	-3
 25684  018F16  50E3               	movf	plusw1,w,c
 25685  018F18  5A0A               	subwfb	(btemp+9)^0,f,c
 25686  018F1A  0EFE               	movlw	-2
 25687  018F1C  50E3               	movf	plusw1,w,c
 25688  018F1E  5A0B               	subwfb	(btemp+10)^0,f,c
 25689  018F20  0EFF               	movlw	-1
 25690  018F22  50E3               	movf	plusw1,w,c
 25691  018F24  5A0C               	subwfb	(btemp+11)^0,f,c
 25692                           
 25693                           ;stkvar	_ff1 @ sp[(0)+-4]
 25694  018F26  0EFC               	movlw	-4
 25695  018F28  0060  F027  FFE3   	movff	btemp+8,plusw1
 25696  018F2E  0EFD               	movlw	-3
 25697  018F30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25698  018F36  0EFE               	movlw	-2
 25699  018F38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25700  018F3E  0EFF               	movlw	-1
 25701  018F40  0060  F033  FFE3   	movff	btemp+11,plusw1
 25702  018F46                     l8495:
 25703                           
 25704                           ;stkvar	_ff2 @ sp[(0)+-8]
 25705  018F46  0EFB               	movlw	-5
 25706  018F48  AEE3               	btfss	plusw1,7,c
 25707  018F4A  D024               	goto	l8499
 25708                           
 25709                           ;stkvar	_ff2 @ sp[(0)+-8]
 25710  018F4C  0E00               	movlw	0
 25711  018F4E  6E09               	movwf	(btemp+8)^0,c
 25712  018F50  0E00               	movlw	0
 25713  018F52  6E0A               	movwf	(btemp+9)^0,c
 25714  018F54  0E00               	movlw	0
 25715  018F56  6E0B               	movwf	(btemp+10)^0,c
 25716  018F58  0E80               	movlw	128
 25717  018F5A  6E0C               	movwf	(btemp+11)^0,c
 25718  018F5C  0EF8               	movlw	-8
 25719  018F5E  50E3               	movf	plusw1,w,c
 25720  018F60  5E09               	subwf	(btemp+8)^0,f,c
 25721  018F62  0EF9               	movlw	-7
 25722  018F64  50E3               	movf	plusw1,w,c
 25723  018F66  5A0A               	subwfb	(btemp+9)^0,f,c
 25724  018F68  0EFA               	movlw	-6
 25725  018F6A  50E3               	movf	plusw1,w,c
 25726  018F6C  5A0B               	subwfb	(btemp+10)^0,f,c
 25727  018F6E  0EFB               	movlw	-5
 25728  018F70  50E3               	movf	plusw1,w,c
 25729  018F72  5A0C               	subwfb	(btemp+11)^0,f,c
 25730                           
 25731                           ;stkvar	_ff2 @ sp[(0)+-8]
 25732  018F74  0EF8               	movlw	-8
 25733  018F76  0060  F027  FFE3   	movff	btemp+8,plusw1
 25734  018F7C  0EF9               	movlw	-7
 25735  018F7E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25736  018F84  0EFA               	movlw	-6
 25737  018F86  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25738  018F8C  0EFB               	movlw	-5
 25739  018F8E  0060  F033  FFE3   	movff	btemp+11,plusw1
 25740  018F94                     l8499:
 25741                           
 25742                           ;stkvar	_ff1 @ sp[(0)+-4]
 25743  018F94  0EFF               	movlw	-1
 25744  018F96  7EE3               	btg	plusw1,7,c
 25745                           
 25746                           ;stkvar	_ff2 @ sp[(0)+-8]
 25747  018F98  0EFB               	movlw	-5
 25748  018F9A  7EE3               	btg	plusw1,7,c
 25749                           
 25750                           ;stkvar	_ff2 @ sp[(0)+-8]
 25751                           ;stkvar	_ff1 @ sp[(0)+-4]
 25752  018F9C  50E1               	movf	fsr1l,w,c
 25753  018F9E  0FFC               	addlw	-4
 25754  018FA0  6ED9               	movwf	fsr2l,c
 25755  018FA2  50E2               	movf	fsr1h,w,c
 25756  018FA4  6EDA               	movwf	fsr2h,c
 25757  018FA6  0EFF               	movlw	255
 25758  018FA8  22DA               	addwfc	fsr2h,f,c
 25759  018FAA  0EF8               	movlw	-8
 25760  018FAC  50E3               	movf	plusw1,w,c
 25761  018FAE  5CDE               	subwf	postinc2,w,c
 25762  018FB0  0EF9               	movlw	-7
 25763  018FB2  50E3               	movf	plusw1,w,c
 25764  018FB4  58DE               	subwfb	postinc2,w,c
 25765  018FB6  0EFA               	movlw	-6
 25766  018FB8  50E3               	movf	plusw1,w,c
 25767  018FBA  58DE               	subwfb	postinc2,w,c
 25768  018FBC  0EFB               	movlw	-5
 25769  018FBE  50E3               	movf	plusw1,w,c
 25770  018FC0  58DE               	subwfb	postinc2,w,c
 25771  018FC2  B0D8               	btfsc	status,0,c
 25772  018FC4  D002               	goto	l8507
 25773  018FC6  9001               	bcf	btemp& (0+255),0,c
 25774  018FC8  D001               	goto	l2670
 25775  018FCA                     l8507:
 25776  018FCA  8001               	bsf	btemp& (0+255),0,c
 25777  018FCC                     l2670:
 25778                           
 25779                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 25780  018FCC  0EF8               	movlw	248
 25781  018FCE  26E1               	addwf	fsr1l,f,c
 25782  018FD0  0EFF               	movlw	255
 25783  018FD2  22E2               	addwfc	fsr1h,f,c
 25784  018FD4  0012               	return		;funcret
 25785  018FD6                     __end_of___flge:
 25786                           	opt callstack 0
 25787                           
 25788 ;; *************** function _calc_model_data *****************
 25789 ;; Defined at:
 25790 ;;		line 67 in file "mbmc.c"
 25791 ;; Parameters:    Size  Location     Type
 25792 ;;		None
 25793 ;; Auto vars:     Size  Location     Type
 25794 ;;		None
 25795 ;; Return value:  Size  Location     Type
 25796 ;;                  1  [STACK] void 
 25797 ;; Registers used:
 25798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25799 ;; Tracked objects:
 25800 ;;		On entry : 0/1
 25801 ;;		On exit  : 3F/39
 25802 ;;		Unchanged: 0/0
 25803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25808 ;;Total ram usage:        0 bytes
 25809 ;; Hardware stack levels used:    1
 25810 ;; Hardware stack levels required when called:   18
 25811 ;; This function calls:
 25812 ;;		___fladd
 25813 ;;		___flmul
 25814 ;;		___flsub
 25815 ;;		_lp_filter
 25816 ;;		_start_bsoc
 25817 ;;		_stop_bsoc
 25818 ;; This function is called by:
 25819 ;;		_main
 25820 ;; This function uses a reentrant model
 25821 ;;
 25822                           
 25823                           	psect	text100
 25824  015946                     __ptext100:
 25825                           	opt callstack 0
 25826  015946                     _calc_model_data:
 25827                           	opt callstack 12
 25828                           
 25829                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 25830                           
 25831                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25832                           ;incstack = 0
 25833  015946  EC8A  F0DF         	call	_stop_bsoc	;wreg free
 25834                           
 25835                           ; BSR set to: 57
 25836                           ;mbmc.c: 72:  if (!V.calib) {
 25837  01594A  0101               	movlb	1	; () banked
 25838  01594C  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
 25839  01594E  A4D8               	btfss	status,2,c
 25840  015950  D219               	goto	l10903
 25841                           
 25842                           ; BSR set to: 1
 25843                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 25844  015952  EE21  F2FF         	lfsr	2,_C
 25845  015956  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 25846  01595C  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 25847  015962  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 25848  015968  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 25849                           
 25850                           ; BSR set to: 1
 25851                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 25852  01596E  0060  F203  FFE6   	movff	calc_model_data@bcror,postinc1
 25853  015974  0060  F207  FFE6   	movff	calc_model_data@bcror+1,postinc1
 25854  01597A  0060  F20B  FFE6   	movff	calc_model_data@bcror+2,postinc1
 25855  015980  0060  F20F  FFE6   	movff	calc_model_data@bcror+3,postinc1
 25856  015986  EE21  F343         	lfsr	2,_C+68	;volatile
 25857  01598A  006F FF7B FFE6     	movff	postinc2,postinc1
 25858  015990  006F FF7B FFE6     	movff	postinc2,postinc1
 25859  015996  006F FF7B FFE6     	movff	postinc2,postinc1
 25860  01599C  006F FF7B FFE6     	movff	postinc2,postinc1
 25861  0159A2  ECC1  F0D9         	call	___flsub	;wreg free
 25862  0159A6  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 25863  0159AC  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 25864  0159B2  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 25865  0159B8  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 25866                           
 25867                           ;mbmc.c: 75:   bcror = C.c_bat;
 25868  0159BE  C743  F080         	movff	_C+68,calc_model_data@bcror	;volatile
 25869  0159C2  C744  F081         	movff	_C+69,calc_model_data@bcror+1	;volatile
 25870  0159C6  C745  F082         	movff	_C+70,calc_model_data@bcror+2	;volatile
 25871  0159CA  C746  F083         	movff	_C+71,calc_model_data@bcror+3	;volatile
 25872                           
 25873                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 25874  0159CE  EE21  F303         	lfsr	2,_C+4	;volatile
 25875  0159D2  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 25876  0159D8  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 25877  0159DE  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 25878  0159E4  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 25879                           
 25880                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 25881  0159EA  EE21  F30F         	lfsr	2,_C+16	;volatile
 25882  0159EE  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 25883  0159F4  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 25884  0159FA  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 25885  015A00  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 25886                           
 25887                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 25888  015A06  EE21  F333         	lfsr	2,_C+52	;volatile
 25889  015A0A  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 25890  015A10  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 25891  015A16  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 25892  015A1C  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 25893                           
 25894                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 25895  015A22  0060  F213  FFE6   	movff	calc_model_data@bvror,postinc1
 25896  015A28  0060  F217  FFE6   	movff	calc_model_data@bvror+1,postinc1
 25897  015A2E  0060  F21B  FFE6   	movff	calc_model_data@bvror+2,postinc1
 25898  015A34  0060  F21F  FFE6   	movff	calc_model_data@bvror+3,postinc1
 25899  015A3A  EE21  F353         	lfsr	2,_C+84	;volatile
 25900  015A3E  006F FF7B FFE6     	movff	postinc2,postinc1
 25901  015A44  006F FF7B FFE6     	movff	postinc2,postinc1
 25902  015A4A  006F FF7B FFE6     	movff	postinc2,postinc1
 25903  015A50  006F FF7B FFE6     	movff	postinc2,postinc1
 25904  015A56  ECC1  F0D9         	call	___flsub	;wreg free
 25905  015A5A  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 25906  015A60  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 25907  015A66  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 25908  015A6C  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 25909                           
 25910                           ;mbmc.c: 80:   bvror = C.v_bat;
 25911  015A72  C753  F084         	movff	_C+84,calc_model_data@bvror	;volatile
 25912  015A76  C754  F085         	movff	_C+85,calc_model_data@bvror+1	;volatile
 25913  015A7A  C755  F086         	movff	_C+86,calc_model_data@bvror+2	;volatile
 25914  015A7E  C756  F087         	movff	_C+87,calc_model_data@bvror+3	;volatile
 25915                           
 25916                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 25917  015A82  EE21  F313         	lfsr	2,_C+20	;volatile
 25918  015A86  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 25919  015A8C  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 25920  015A92  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 25921  015A98  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 25922                           
 25923                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 25924  015A9E  EE21  F307         	lfsr	2,_C+8	;volatile
 25925  015AA2  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 25926  015AA8  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 25927  015AAE  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 25928  015AB4  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 25929                           
 25930                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 25931  015ABA  EE21  F32F         	lfsr	2,_C+48	;volatile
 25932  015ABE  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 25933  015AC4  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 25934  015ACA  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 25935  015AD0  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 25936                           
 25937                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 25938  015AD6  0E01               	movlw	1
 25939  015AD8  6EE6               	movwf	postinc1,c
 25940  015ADA  0E10               	movlw	16
 25941  015ADC  6EE6               	movwf	postinc1,c
 25942  015ADE  EE21  F2FF         	lfsr	2,_C
 25943  015AE2  006F FF7B FFE6     	movff	postinc2,postinc1
 25944  015AE8  006F FF7B FFE6     	movff	postinc2,postinc1
 25945  015AEE  006F FF7B FFE6     	movff	postinc2,postinc1
 25946  015AF4  006F FF7B FFE6     	movff	postinc2,postinc1
 25947  015AFA  EE21  F303         	lfsr	2,_C+4	;volatile
 25948  015AFE  006F FF7B FFE6     	movff	postinc2,postinc1
 25949  015B04  006F FF7B FFE6     	movff	postinc2,postinc1
 25950  015B0A  006F FF7B FFE6     	movff	postinc2,postinc1
 25951  015B10  006F FF7B FFE6     	movff	postinc2,postinc1
 25952  015B16  ECC1  F0D9         	call	___flsub	;wreg free
 25953  015B1A  0060  F007  FFE6   	movff	btemp,postinc1
 25954  015B20  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25955  015B26  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25956  015B2C  0060  F013  FFE6   	movff	btemp+3,postinc1
 25957  015B32  EC85  F0C2         	call	_lp_filter	;wreg free
 25958  015B36  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 25959  015B3C  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 25960  015B42  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 25961  015B48  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 25962                           
 25963                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 25964  015B4E  0E01               	movlw	1
 25965  015B50  6EE6               	movwf	postinc1,c
 25966  015B52  0E11               	movlw	17
 25967  015B54  6EE6               	movwf	postinc1,c
 25968  015B56  EE21  F353         	lfsr	2,_C+84	;volatile
 25969  015B5A  006F FF7B FFE6     	movff	postinc2,postinc1
 25970  015B60  006F FF7B FFE6     	movff	postinc2,postinc1
 25971  015B66  006F FF7B FFE6     	movff	postinc2,postinc1
 25972  015B6C  006F FF7B FFE6     	movff	postinc2,postinc1
 25973  015B72  EE21  F33F         	lfsr	2,_C+64	;volatile
 25974  015B76  006F FF7B FFE6     	movff	postinc2,postinc1
 25975  015B7C  006F FF7B FFE6     	movff	postinc2,postinc1
 25976  015B82  006F FF7B FFE6     	movff	postinc2,postinc1
 25977  015B88  006F FF7B FFE6     	movff	postinc2,postinc1
 25978  015B8E  EC9F  F099         	call	___flmul	;wreg free
 25979  015B92  0060  F007  FFE6   	movff	btemp,postinc1
 25980  015B98  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25981  015B9E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25982  015BA4  0060  F013  FFE6   	movff	btemp+3,postinc1
 25983  015BAA  EC85  F0C2         	call	_lp_filter	;wreg free
 25984  015BAE  0060  F004  F773   	movff	btemp,_C+116	;volatile
 25985  015BB4  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 25986  015BBA  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 25987  015BC0  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 25988                           
 25989                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 25990  015BC6  0E01               	movlw	1
 25991  015BC8  6EE6               	movwf	postinc1,c
 25992  015BCA  0E12               	movlw	18
 25993  015BCC  6EE6               	movwf	postinc1,c
 25994  015BCE  EE21  F34F         	lfsr	2,_C+80	;volatile
 25995  015BD2  006F FF7B FFE6     	movff	postinc2,postinc1
 25996  015BD8  006F FF7B FFE6     	movff	postinc2,postinc1
 25997  015BDE  006F FF7B FFE6     	movff	postinc2,postinc1
 25998  015BE4  006F FF7B FFE6     	movff	postinc2,postinc1
 25999  015BEA  EE21  F347         	lfsr	2,_C+72	;volatile
 26000  015BEE  006F FF7B FFE6     	movff	postinc2,postinc1
 26001  015BF4  006F FF7B FFE6     	movff	postinc2,postinc1
 26002  015BFA  006F FF7B FFE6     	movff	postinc2,postinc1
 26003  015C00  006F FF7B FFE6     	movff	postinc2,postinc1
 26004  015C06  EC9F  F099         	call	___flmul	;wreg free
 26005  015C0A  0060  F007  FFE6   	movff	btemp,postinc1
 26006  015C10  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26007  015C16  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26008  015C1C  0060  F013  FFE6   	movff	btemp+3,postinc1
 26009  015C22  EC85  F0C2         	call	_lp_filter	;wreg free
 26010  015C26  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 26011  015C2C  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 26012  015C32  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 26013  015C38  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 26014                           
 26015                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 26016  015C3E  0E01               	movlw	1
 26017  015C40  6EE6               	movwf	postinc1,c
 26018  015C42  0E13               	movlw	19
 26019  015C44  6EE6               	movwf	postinc1,c
 26020  015C46  0E00               	movlw	0
 26021  015C48  6EE6               	movwf	postinc1,c
 26022  015C4A  0E00               	movlw	0
 26023  015C4C  6EE6               	movwf	postinc1,c
 26024  015C4E  0E60               	movlw	96
 26025  015C50  6EE6               	movwf	postinc1,c
 26026  015C52  0EC1               	movlw	193
 26027  015C54  6EE6               	movwf	postinc1,c
 26028  015C56  EE21  F363         	lfsr	2,_C+100	;volatile
 26029  015C5A  006F FF7B FFE6     	movff	postinc2,postinc1
 26030  015C60  006F FF7B FFE6     	movff	postinc2,postinc1
 26031  015C66  006F FF7B FFE6     	movff	postinc2,postinc1
 26032  015C6C  006F FF7B FFE6     	movff	postinc2,postinc1
 26033  015C72  EE21  F33F         	lfsr	2,_C+64	;volatile
 26034  015C76  006F FF7B FFE6     	movff	postinc2,postinc1
 26035  015C7C  006F FF7B FFE6     	movff	postinc2,postinc1
 26036  015C82  006F FF7B FFE6     	movff	postinc2,postinc1
 26037  015C88  006F FF7B FFE6     	movff	postinc2,postinc1
 26038  015C8E  EC9F  F099         	call	___flmul	;wreg free
 26039  015C92  0060  F007  FFE6   	movff	btemp,postinc1
 26040  015C98  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26041  015C9E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26042  015CA4  0060  F013  FFE6   	movff	btemp+3,postinc1
 26043  015CAA  ECB4  F09D         	call	___fladd	;wreg free
 26044  015CAE  0060  F007  FFE6   	movff	btemp,postinc1
 26045  015CB4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26046  015CBA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26047  015CC0  0060  F013  FFE6   	movff	btemp+3,postinc1
 26048  015CC6  EC85  F0C2         	call	_lp_filter	;wreg free
 26049  015CCA  0060  F004  F777   	movff	btemp,_C+120	;volatile
 26050  015CD0  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 26051  015CD6  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 26052  015CDC  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 26053                           
 26054                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 26055  015CE2  0E01               	movlw	1
 26056  015CE4  6EE6               	movwf	postinc1,c
 26057  015CE6  0E14               	movlw	20
 26058  015CE8  6EE6               	movwf	postinc1,c
 26059  015CEA  EE21  F353         	lfsr	2,_C+84	;volatile
 26060  015CEE  006F FF7B FFE6     	movff	postinc2,postinc1
 26061  015CF4  006F FF7B FFE6     	movff	postinc2,postinc1
 26062  015CFA  006F FF7B FFE6     	movff	postinc2,postinc1
 26063  015D00  006F FF7B FFE6     	movff	postinc2,postinc1
 26064  015D06  EE21  F343         	lfsr	2,_C+68	;volatile
 26065  015D0A  006F FF7B FFE6     	movff	postinc2,postinc1
 26066  015D10  006F FF7B FFE6     	movff	postinc2,postinc1
 26067  015D16  006F FF7B FFE6     	movff	postinc2,postinc1
 26068  015D1C  006F FF7B FFE6     	movff	postinc2,postinc1
 26069  015D22  EC9F  F099         	call	___flmul	;wreg free
 26070  015D26  0060  F007  FFE6   	movff	btemp,postinc1
 26071  015D2C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26072  015D32  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26073  015D38  0060  F013  FFE6   	movff	btemp+3,postinc1
 26074  015D3E  EC85  F0C2         	call	_lp_filter	;wreg free
 26075  015D42  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 26076  015D48  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 26077  015D4E  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 26078  015D54  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 26079                           
 26080                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 26081  015D5A  EE21  F377         	lfsr	2,_C+120	;volatile
 26082  015D5E  0E03               	movlw	3
 26083  015D60  AEDB               	btfss	plusw2,7,c
 26084  015D62  D010               	goto	l10903
 26085                           
 26086                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 26087  015D64  0E17               	movlw	23
 26088  015D66  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 26089  015D6C  0EB7               	movlw	183
 26090  015D6E  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 26091  015D74  0ED1               	movlw	209
 26092  015D76  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 26093  015D7C  0E38               	movlw	56
 26094  015D7E  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 26095  015D84                     l10903:
 26096                           
 26097                           ;mbmc.c: 95:  start_bsoc();
 26098  015D84  EC16  F0DE         	call	_start_bsoc	;wreg free
 26099                           
 26100                           ; BSR set to: 57
 26101                           ;mbmc.c: 96:  C.update = 1;
 26102  015D88  0E01               	movlw	1
 26103  015D8A  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 26104                           
 26105                           ; BSR set to: 57
 26106                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26107  015D90  0012               	return		;funcret
 26108  015D92                     __end_of_calc_model_data:
 26109                           	opt callstack 0
 26110                           
 26111 ;; *************** function _stop_bsoc *****************
 26112 ;; Defined at:
 26113 ;;		line 114 in file "bsoc.c"
 26114 ;; Parameters:    Size  Location     Type
 26115 ;;		None
 26116 ;; Auto vars:     Size  Location     Type
 26117 ;;		None
 26118 ;; Return value:  Size  Location     Type
 26119 ;;                  1  [STACK] void 
 26120 ;; Registers used:
 26121 ;;		None
 26122 ;; Tracked objects:
 26123 ;;		On entry : 0/1
 26124 ;;		On exit  : 3F/39
 26125 ;;		Unchanged: 0/0
 26126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26131 ;;Total ram usage:        0 bytes
 26132 ;; Hardware stack levels used:    1
 26133 ;; Hardware stack levels required when called:   15
 26134 ;; This function calls:
 26135 ;;		Nothing
 26136 ;; This function is called by:
 26137 ;;		_calc_model_data
 26138 ;; This function uses a reentrant model
 26139 ;;
 26140                           
 26141                           	psect	text101
 26142  01BF14                     __ptext101:
 26143                           	opt callstack 0
 26144  01BF14                     _stop_bsoc:
 26145                           	opt callstack 14
 26146                           
 26147                           ;bsoc.c: 117:  PIE6bits.TMR3IE = 0;
 26148                           
 26149                           ; BSR set to: 57
 26150                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26151                           ;incstack = 0
 26152  01BF14  0139               	movlb	57	; () banked
 26153  01BF16  9D96               	bcf	150,6,b	;volatile
 26154                           
 26155                           ; BSR set to: 57
 26156                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 26157  01BF18  0012               	return		;funcret
 26158  01BF1A                     __end_of_stop_bsoc:
 26159                           	opt callstack 0
 26160                           
 26161 ;; *************** function _start_bsoc *****************
 26162 ;; Defined at:
 26163 ;;		line 105 in file "bsoc.c"
 26164 ;; Parameters:    Size  Location     Type
 26165 ;;		None
 26166 ;; Auto vars:     Size  Location     Type
 26167 ;;		None
 26168 ;; Return value:  Size  Location     Type
 26169 ;;                  1  [STACK] void 
 26170 ;; Registers used:
 26171 ;;		wreg, status,2, status,0, btemp+11
 26172 ;; Tracked objects:
 26173 ;;		On entry : 0/1
 26174 ;;		On exit  : 3F/39
 26175 ;;		Unchanged: 0/0
 26176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26181 ;;Total ram usage:        0 bytes
 26182 ;; Hardware stack levels used:    1
 26183 ;; Hardware stack levels required when called:   15
 26184 ;; This function calls:
 26185 ;;		Nothing
 26186 ;; This function is called by:
 26187 ;;		_calc_model_data
 26188 ;; This function uses a reentrant model
 26189 ;;
 26190                           
 26191                           	psect	text102
 26192  01BC2C                     __ptext102:
 26193                           	opt callstack 0
 26194  01BC2C                     _start_bsoc:
 26195                           	opt callstack 14
 26196                           
 26197                           ;bsoc.c: 108:  PIE6bits.TMR3IE = 1;
 26198                           
 26199                           ; BSR set to: 57
 26200                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26201                           ;incstack = 0
 26202  01BC2C  0139               	movlb	57	; () banked
 26203  01BC2E  8D96               	bsf	150,6,b	;volatile
 26204                           
 26205                           ; BSR set to: 57
 26206  01BC30  A4BE               	btfss	190,2,c	;volatile
 26207  01BC32  D002               	goto	u9600
 26208  01BC34  0E01               	movlw	1
 26209  01BC36  D001               	goto	u9606
 26210  01BC38                     u9600:
 26211  01BC38  0E00               	movlw	0
 26212  01BC3A                     u9606:
 26213  01BC3A  0AFF               	xorlw	255
 26214  01BC3C  6E0C               	movwf	(btemp+11)^0,c
 26215  01BC3E  460C               	rlncf	(btemp+11)^0,f,c
 26216  01BC40  460C               	rlncf	(btemp+11)^0,f,c
 26217  01BC42  50BE               	movf	190,w,c	;volatile
 26218  01BC44  180C               	xorwf	(btemp+11)^0,w,c
 26219  01BC46  0BFB               	andlw	-5
 26220  01BC48  180C               	xorwf	(btemp+11)^0,w,c
 26221  01BC4A  6EBE               	movwf	190,c	;volatile
 26222                           
 26223                           ; BSR set to: 57
 26224                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 26225  01BC4C  0012               	return		;funcret
 26226  01BC4E                     __end_of_start_bsoc:
 26227                           	opt callstack 0
 26228                           
 26229 ;; *************** function _lp_filter *****************
 26230 ;; Defined at:
 26231 ;;		line 29 in file "mbmc.c"
 26232 ;; Parameters:    Size  Location     Type
 26233 ;;  new             4  [STACK] const float 
 26234 ;;  bn              1  [STACK] const unsigned char 
 26235 ;;  slow            1  [STACK] const char 
 26236 ;; Auto vars:     Size  Location     Type
 26237 ;;  lp_speed        4  [STACK] float 
 26238 ;; Return value:  Size  Location     Type
 26239 ;;                  4  [STACK] float 
 26240 ;; Registers used:
 26241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26242 ;; Tracked objects:
 26243 ;;		On entry : 0/1
 26244 ;;		On exit  : 0/0
 26245 ;;		Unchanged: 0/0
 26246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26251 ;;Total ram usage:        0 bytes
 26252 ;; Hardware stack levels used:    1
 26253 ;; Hardware stack levels required when called:   17
 26254 ;; This function calls:
 26255 ;;		___fladd
 26256 ;;		___flmul
 26257 ;;		___flsub
 26258 ;; This function is called by:
 26259 ;;		_main
 26260 ;;		_convert_adc_data
 26261 ;;		_calc_model_data
 26262 ;; This function uses a reentrant model
 26263 ;;
 26264                           
 26265                           	psect	text103
 26266  01850A                     __ptext103:
 26267                           	opt callstack 0
 26268  01850A                     _lp_filter:
 26269                           	opt callstack 0
 26270                           
 26271                           ; BSR set to: 57
 26272                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26273  01850A  52E6               	movf	postinc1,f,c
 26274  01850C  52E6               	movf	postinc1,f,c
 26275  01850E  52E6               	movf	postinc1,f,c
 26276  018510  52E6               	movf	postinc1,f,c
 26277                           
 26278                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 26279                           ;stkvar	_bn @ sp[(-4)+-5]
 26280                           
 26281                           ;incstack = 0
 26282  018512  0EF7               	movlw	-9
 26283  018514  006F FF8C  F001    	movff	plusw1,btemp
 26284  01851A  0E14               	movlw	20
 26285  01851C  6401               	cpfsgt	btemp^0,c
 26286  01851E  D011               	goto	l10307
 26287  018520                     u9510:
 26288                           
 26289                           ;mbmc.c: 35:   return new;
 26290                           ;stkvar	_new @ sp[(-4)+-4]
 26291  018520  0EF8               	movlw	-8
 26292  018522  006F FF8C  F001    	movff	plusw1,btemp
 26293  018528  0EF9               	movlw	-7
 26294  01852A  006F FF8C  F002    	movff	plusw1,btemp+1
 26295  018530  0EFA               	movlw	-6
 26296  018532  006F FF8C  F003    	movff	plusw1,btemp+2
 26297  018538  0EFB               	movlw	-5
 26298  01853A  006F FF8C  F004    	movff	plusw1,btemp+3
 26299  018540  D0BD               	goto	l1835
 26300  018542                     l10307:
 26301                           
 26302                           ;mbmc.c: 37:  if (slow == (-1)) {
 26303                           ;stkvar	_slow @ sp[(-4)+-6]
 26304  018542  0EF6               	movlw	-10
 26305  018544  28E3               	incf	plusw1,w,c
 26306  018546  A4D8               	btfss	status,2,c
 26307  018548  D012               	goto	l10315
 26308                           
 26309                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 26310                           ;stkvar	_bn @ sp[(-4)+-5]
 26311  01854A  0EF7               	movlw	-9
 26312  01854C  50E3               	movf	plusw1,w,c
 26313  01854E  0D04               	mullw	4
 26314  018550  0E00               	movlw	low lp_filter@smooth
 26315  018552  24F3               	addwf	243,w,c
 26316  018554  6ED9               	movwf	fsr2l,c
 26317  018556  0E02               	movlw	high lp_filter@smooth
 26318  018558  20F4               	addwfc	prodh,w,c
 26319  01855A  6EDA               	movwf	fsr2h,c
 26320  01855C  0E00               	movlw	0
 26321  01855E  6EDE               	movwf	postinc2,c
 26322  018560  0E00               	movlw	0
 26323  018562  6EDE               	movwf	postinc2,c
 26324  018564  0E00               	movlw	0
 26325  018566  6EDE               	movwf	postinc2,c
 26326  018568  0E00               	movlw	0
 26327  01856A  6EDD               	movwf	postdec2,c
 26328  01856C  D7D9               	goto	u9510
 26329  01856E                     l10315:
 26330                           
 26331                           ;mbmc.c: 42:  if (slow) {
 26332                           ;stkvar	_slow @ sp[(-4)+-6]
 26333  01856E  0EF6               	movlw	-10
 26334  018570  50E3               	movf	plusw1,w,c
 26335  018572  B4D8               	btfsc	status,2,c
 26336  018574  D006               	goto	l10319
 26337                           
 26338                           ;mbmc.c: 43:   lp_speed = 0.033;
 26339  018576  0E02               	movlw	2
 26340  018578  6E09               	movwf	(btemp+8)^0,c
 26341  01857A  0E2B               	movlw	43
 26342  01857C  6E0A               	movwf	(btemp+9)^0,c
 26343  01857E  0E07               	movlw	7
 26344  018580  D005               	goto	L31
 26345  018582                     l10319:
 26346                           
 26347                           ;mbmc.c: 45:   lp_speed = 0.066;
 26348  018582  0E02               	movlw	2
 26349  018584  6E09               	movwf	(btemp+8)^0,c
 26350  018586  0E2B               	movlw	43
 26351  018588  6E0A               	movwf	(btemp+9)^0,c
 26352  01858A  0E87               	movlw	135
 26353  01858C                     L31:
 26354  01858C  6E0B               	movwf	(btemp+10)^0,c
 26355  01858E  0E3D               	movlw	61
 26356  018590  6E0C               	movwf	(btemp+11)^0,c
 26357                           
 26358                           ;stkvar	_lp_speed @ sp[(-4)+0]
 26359  018592  0EFC               	movlw	-4
 26360  018594  0060  F027  FFE3   	movff	btemp+8,plusw1
 26361  01859A  0EFD               	movlw	-3
 26362  01859C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26363  0185A2  0EFE               	movlw	-2
 26364  0185A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26365  0185AA  0EFF               	movlw	-1
 26366  0185AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 26367                           
 26368                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 26369                           ;stkvar	_bn @ sp[(-4)+-5]
 26370  0185B2  0EF7               	movlw	-9
 26371  0185B4  50E3               	movf	plusw1,w,c
 26372  0185B6  0D04               	mullw	4
 26373  0185B8  0E00               	movlw	low lp_filter@smooth
 26374  0185BA  24F3               	addwf	243,w,c
 26375  0185BC  6ED9               	movwf	fsr2l,c
 26376  0185BE  0E02               	movlw	high lp_filter@smooth
 26377  0185C0  20F4               	addwfc	prodh,w,c
 26378  0185C2  6EDA               	movwf	fsr2h,c
 26379  0185C4  006F FF7B FFE6     	movff	postinc2,postinc1
 26380  0185CA  006F FF7B FFE6     	movff	postinc2,postinc1
 26381  0185D0  006F FF7B FFE6     	movff	postinc2,postinc1
 26382  0185D6  006F FF7B FFE6     	movff	postinc2,postinc1
 26383                           
 26384                           ;stkvar	_lp_speed @ sp[(-8)+0]
 26385  0185DC  0EF8               	movlw	-8
 26386  0185DE  006F FF8F FFE6     	movff	plusw1,postinc1
 26387  0185E4  006F FF8F FFE6     	movff	plusw1,postinc1
 26388  0185EA  006F FF8F FFE6     	movff	plusw1,postinc1
 26389  0185F0  006F FF8F FFE6     	movff	plusw1,postinc1
 26390                           
 26391                           ;stkvar	_bn @ sp[(-12)+-5]
 26392  0185F6  0EEF               	movlw	-17
 26393  0185F8  50E3               	movf	plusw1,w,c
 26394  0185FA  0D04               	mullw	4
 26395  0185FC  0E00               	movlw	low lp_filter@smooth
 26396  0185FE  24F3               	addwf	243,w,c
 26397  018600  6ED9               	movwf	fsr2l,c
 26398  018602  0E02               	movlw	high lp_filter@smooth
 26399  018604  20F4               	addwfc	prodh,w,c
 26400  018606  6EDA               	movwf	fsr2h,c
 26401  018608  006F FF7B FFE6     	movff	postinc2,postinc1
 26402  01860E  006F FF7B FFE6     	movff	postinc2,postinc1
 26403  018614  006F FF7B FFE6     	movff	postinc2,postinc1
 26404  01861A  006F FF7B FFE6     	movff	postinc2,postinc1
 26405                           
 26406                           ;stkvar	_new @ sp[(-16)+-4]
 26407  018620  0EEC               	movlw	-20
 26408  018622  006F FF8F FFE6     	movff	plusw1,postinc1
 26409  018628  006F FF8F FFE6     	movff	plusw1,postinc1
 26410  01862E  006F FF8F FFE6     	movff	plusw1,postinc1
 26411  018634  006F FF8F FFE6     	movff	plusw1,postinc1
 26412  01863A  ECC1  F0D9         	call	___flsub	;wreg free
 26413  01863E  0060  F007  FFE6   	movff	btemp,postinc1
 26414  018644  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26415  01864A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26416  018650  0060  F013  FFE6   	movff	btemp+3,postinc1
 26417  018656  EC9F  F099         	call	___flmul	;wreg free
 26418  01865A  0060  F007  FFE6   	movff	btemp,postinc1
 26419  018660  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26420  018666  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26421  01866C  0060  F013  FFE6   	movff	btemp+3,postinc1
 26422  018672  ECB4  F09D         	call	___fladd	;wreg free
 26423                           
 26424                           ;stkvar	_bn @ sp[(-4)+-5]
 26425  018676  0EF7               	movlw	-9
 26426  018678  50E3               	movf	plusw1,w,c
 26427  01867A  0D04               	mullw	4
 26428  01867C  0E00               	movlw	low lp_filter@smooth
 26429  01867E  24F3               	addwf	243,w,c
 26430  018680  6ED9               	movwf	fsr2l,c
 26431  018682  0E02               	movlw	high lp_filter@smooth
 26432  018684  20F4               	addwfc	prodh,w,c
 26433  018686  6EDA               	movwf	fsr2h,c
 26434  018688  0060  F007  FFDE   	movff	btemp,postinc2
 26435  01868E  0060  F00B  FFDE   	movff	btemp+1,postinc2
 26436  018694  0060  F00F  FFDE   	movff	btemp+2,postinc2
 26437  01869A  0060  F013  FFDD   	movff	btemp+3,postdec2
 26438  0186A0  52DD               	movf	postdec2,f,c
 26439  0186A2  52DD               	movf	postdec2,f,c
 26440  0186A4  006F FF78  F001    	movff	postinc2,btemp
 26441  0186AA  006F FF78  F002    	movff	postinc2,btemp+1
 26442  0186B0  006F FF78  F003    	movff	postinc2,btemp+2
 26443  0186B6  006F FF78  F004    	movff	postinc2,btemp+3
 26444  0186BC                     l1835:
 26445                           
 26446                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 26447  0186BC  0EF6               	movlw	246
 26448  0186BE  26E1               	addwf	fsr1l,f,c
 26449  0186C0  0EFF               	movlw	255
 26450  0186C2  22E2               	addwfc	fsr1h,f,c
 26451  0186C4  0012               	return		;funcret
 26452  0186C6                     __end_of_lp_filter:
 26453                           	opt callstack 0
 26454                           
 26455 ;; *************** function ___flsub *****************
 26456 ;; Defined at:
 26457 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26458 ;; Parameters:    Size  Location     Type
 26459 ;;  b               4  [STACK] float 
 26460 ;;  a               4  [STACK] float 
 26461 ;; Auto vars:     Size  Location     Type
 26462 ;;		None
 26463 ;; Return value:  Size  Location     Type
 26464 ;;                  4  [STACK] float 
 26465 ;; Registers used:
 26466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26467 ;; Tracked objects:
 26468 ;;		On entry : 0/0
 26469 ;;		On exit  : 0/0
 26470 ;;		Unchanged: 0/0
 26471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26476 ;;Total ram usage:        0 bytes
 26477 ;; Hardware stack levels used:    1
 26478 ;; Hardware stack levels required when called:   16
 26479 ;; This function calls:
 26480 ;;		___fladd
 26481 ;; This function is called by:
 26482 ;;		_conv_raw_result
 26483 ;;		_lp_filter
 26484 ;;		_calc_model_data
 26485 ;;		_calc_ror_data
 26486 ;;		_esr_check
 26487 ;;		_efgtoa
 26488 ;; This function uses a reentrant model
 26489 ;;
 26490                           
 26491                           	psect	text104
 26492  01B382                     __ptext104:
 26493                           	opt callstack 0
 26494  01B382                     ___flsub:
 26495                           	opt callstack 0
 26496                           
 26497                           ;stkvar	_a @ sp[(0)+-8]
 26498                           
 26499                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26500                           ;incstack = 0
 26501 ;; hardware stack exceeded
 26502  01B382  0EFB               	movlw	-5
 26503  01B384  7EE3               	btg	plusw1,7,c
 26504                           
 26505                           ;stkvar	_a @ sp[(0)+-8]
 26506  01B386  0EF8               	movlw	-8
 26507  01B388  006F FF8F FFE6     	movff	plusw1,postinc1
 26508  01B38E  006F FF8F FFE6     	movff	plusw1,postinc1
 26509  01B394  006F FF8F FFE6     	movff	plusw1,postinc1
 26510  01B39A  006F FF8F FFE6     	movff	plusw1,postinc1
 26511                           
 26512                           ;stkvar	_b @ sp[(-4)+-4]
 26513  01B3A0  0EF8               	movlw	-8
 26514  01B3A2  006F FF8F FFE6     	movff	plusw1,postinc1
 26515  01B3A8  006F FF8F FFE6     	movff	plusw1,postinc1
 26516  01B3AE  006F FF8F FFE6     	movff	plusw1,postinc1
 26517  01B3B4  006F FF8F FFE6     	movff	plusw1,postinc1
 26518  01B3BA  ECB4  F09D         	call	___fladd	;wreg free
 26519                           
 26520                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26521  01B3BE  0EF8               	movlw	248
 26522  01B3C0  26E1               	addwf	fsr1l,f,c
 26523  01B3C2  0EFF               	movlw	255
 26524  01B3C4  22E2               	addwfc	fsr1h,f,c
 26525  01B3C6  0012               	return		;funcret
 26526  01B3C8                     __end_of___flsub:
 26527                           	opt callstack 0
 26528                           
 26529 ;; *************** function ___fladd *****************
 26530 ;; Defined at:
 26531 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26532 ;; Parameters:    Size  Location     Type
 26533 ;;  b               4  [STACK] float 
 26534 ;;  a               4  [STACK] float 
 26535 ;; Auto vars:     Size  Location     Type
 26536 ;;  grs             1  [STACK] unsigned char 
 26537 ;;  bexp            1  [STACK] unsigned char 
 26538 ;;  aexp            1  [STACK] unsigned char 
 26539 ;;  signs           1  [STACK] unsigned char 
 26540 ;; Return value:  Size  Location     Type
 26541 ;;                  4  [STACK] unsigned char 
 26542 ;; Registers used:
 26543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26544 ;; Tracked objects:
 26545 ;;		On entry : 0/0
 26546 ;;		On exit  : 0/0
 26547 ;;		Unchanged: 0/0
 26548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26553 ;;Total ram usage:        0 bytes
 26554 ;; Hardware stack levels used:    1
 26555 ;; Hardware stack levels required when called:   15
 26556 ;; This function calls:
 26557 ;;		Nothing
 26558 ;; This function is called by:
 26559 ;;		_main
 26560 ;;		_lp_filter
 26561 ;;		_calc_model_data
 26562 ;;		_efgtoa
 26563 ;;		___asfladd
 26564 ;;		___flsub
 26565 ;; This function uses a reentrant model
 26566 ;;
 26567                           
 26568                           	psect	text105
 26569  013B68                     __ptext105:
 26570                           	opt callstack 0
 26571  013B68                     ___fladd:
 26572                           	opt callstack 0
 26573                           
 26574                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26575  013B68  52E6               	movf	postinc1,f,c
 26576  013B6A  52E6               	movf	postinc1,f,c
 26577  013B6C  52E6               	movf	postinc1,f,c
 26578  013B6E  52E6               	movf	postinc1,f,c
 26579                           
 26580                           ;stkvar	_b @ sp[(-4)+-4]
 26581                           
 26582                           ;incstack = 0
 26583 ;; hardware stack exceeded
 26584  013B70  0EFB               	movlw	251
 26585  013B72  24E1               	addwf	fsr1l,w,c
 26586  013B74  6ED9               	movwf	fsr2l,c
 26587  013B76  0EFF               	movlw	255
 26588  013B78  20E2               	addwfc	fsr1h,w,c
 26589  013B7A  6EDA               	movwf	fsr2h,c
 26590  013B7C  50DF               	movf	indf2,w,c
 26591  013B7E  6E0C               	movwf	(btemp+11)^0,c
 26592  013B80  0E80               	movlw	128
 26593  013B82  160C               	andwf	(btemp+11)^0,f,c
 26594                           
 26595                           ;stkvar	_signs @ sp[(-4)+3]
 26596  013B84  0EFF               	movlw	-1
 26597  013B86  0060  F033  FFE3   	movff	btemp+11,plusw1
 26598                           
 26599                           ;stkvar	_b @ sp[(-4)+-4]
 26600  013B8C  0EFB               	movlw	251
 26601  013B8E  24E1               	addwf	fsr1l,w,c
 26602  013B90  6ED9               	movwf	fsr2l,c
 26603  013B92  0EFF               	movlw	255
 26604  013B94  20E2               	addwfc	fsr1h,w,c
 26605  013B96  6EDA               	movwf	fsr2h,c
 26606  013B98  50DF               	movf	indf2,w,c
 26607  013B9A  6E0C               	movwf	(btemp+11)^0,c
 26608  013B9C  90D8               	bcf	status,0,c
 26609  013B9E  340C               	rlcf	(btemp+11)^0,w,c
 26610  013BA0  6E0B               	movwf	(btemp+10)^0,c
 26611                           
 26612                           ;stkvar	_bexp @ sp[(-4)+1]
 26613  013BA2  0EFD               	movlw	-3
 26614  013BA4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26615                           
 26616                           ;stkvar	_b @ sp[(-4)+-4]
 26617  013BAA  0EFA               	movlw	250
 26618  013BAC  24E1               	addwf	fsr1l,w,c
 26619  013BAE  6ED9               	movwf	fsr2l,c
 26620  013BB0  0EFF               	movlw	255
 26621  013BB2  20E2               	addwfc	fsr1h,w,c
 26622  013BB4  6EDA               	movwf	fsr2h,c
 26623  013BB6  AEDF               	btfss	indf2,7,c
 26624  013BB8  D002               	goto	l7639
 26625                           
 26626                           ;stkvar	_bexp @ sp[(-4)+1]
 26627  013BBA  0EFD               	movlw	-3
 26628  013BBC  80E3               	bsf	plusw1,0,c
 26629  013BBE                     l7639:
 26630                           
 26631                           ;stkvar	_bexp @ sp[(-4)+1]
 26632  013BBE  0EFD               	movlw	-3
 26633  013BC0  50E3               	movf	plusw1,w,c
 26634  013BC2  B4D8               	btfsc	status,2,c
 26635  013BC4  D027               	goto	l7649
 26636                           
 26637                           ;stkvar	_bexp @ sp[(-4)+1]
 26638  013BC6  0EFD               	movlw	-3
 26639  013BC8  28E3               	incf	plusw1,w,c
 26640  013BCA  A4D8               	btfss	status,2,c
 26641  013BCC  D018               	goto	l7645
 26642  013BCE  0E00               	movlw	0
 26643  013BD0  6E09               	movwf	(btemp+8)^0,c
 26644  013BD2  0E00               	movlw	0
 26645  013BD4  6E0A               	movwf	(btemp+9)^0,c
 26646  013BD6  0E00               	movlw	0
 26647  013BD8  6E0B               	movwf	(btemp+10)^0,c
 26648  013BDA  0E00               	movlw	0
 26649  013BDC  6E0C               	movwf	(btemp+11)^0,c
 26650                           
 26651                           ;stkvar	_b @ sp[(-4)+-4]
 26652  013BDE  0EF8               	movlw	-8
 26653  013BE0  0060  F027  FFE3   	movff	btemp+8,plusw1
 26654  013BE6  0EF9               	movlw	-7
 26655  013BE8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26656  013BEE  0EFA               	movlw	-6
 26657  013BF0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26658  013BF6  0EFB               	movlw	-5
 26659  013BF8  0060  F033  FFE3   	movff	btemp+11,plusw1
 26660  013BFE                     l7645:
 26661                           
 26662                           ;stkvar	_b @ sp[(-4)+-4]
 26663  013BFE  0EFA               	movlw	-6
 26664  013C00  8EE3               	bsf	plusw1,7,c
 26665                           
 26666                           ;stkvar	_b @ sp[(-4)+-4]
 26667  013C02  0EFB               	movlw	251
 26668  013C04  24E1               	addwf	fsr1l,w,c
 26669  013C06  6ED9               	movwf	fsr2l,c
 26670  013C08  0EFF               	movlw	255
 26671  013C0A  20E2               	addwfc	fsr1h,w,c
 26672  013C0C  6EDA               	movwf	fsr2h,c
 26673  013C0E  0E00               	movlw	0
 26674  013C10  6EDF               	movwf	indf2,c
 26675  013C12  D018               	goto	l7651
 26676  013C14                     l7649:
 26677  013C14  0E00               	movlw	0
 26678  013C16  6E09               	movwf	(btemp+8)^0,c
 26679  013C18  0E00               	movlw	0
 26680  013C1A  6E0A               	movwf	(btemp+9)^0,c
 26681  013C1C  0E00               	movlw	0
 26682  013C1E  6E0B               	movwf	(btemp+10)^0,c
 26683  013C20  0E00               	movlw	0
 26684  013C22  6E0C               	movwf	(btemp+11)^0,c
 26685                           
 26686                           ;stkvar	_b @ sp[(-4)+-4]
 26687  013C24  0EF8               	movlw	-8
 26688  013C26  0060  F027  FFE3   	movff	btemp+8,plusw1
 26689  013C2C  0EF9               	movlw	-7
 26690  013C2E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26691  013C34  0EFA               	movlw	-6
 26692  013C36  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26693  013C3C  0EFB               	movlw	-5
 26694  013C3E  0060  F033  FFE3   	movff	btemp+11,plusw1
 26695  013C44                     l7651:
 26696                           
 26697                           ;stkvar	_a @ sp[(-4)+-8]
 26698  013C44  0EF7               	movlw	247
 26699  013C46  24E1               	addwf	fsr1l,w,c
 26700  013C48  6ED9               	movwf	fsr2l,c
 26701  013C4A  0EFF               	movlw	255
 26702  013C4C  20E2               	addwfc	fsr1h,w,c
 26703  013C4E  6EDA               	movwf	fsr2h,c
 26704  013C50  50DF               	movf	indf2,w,c
 26705  013C52  6E0C               	movwf	(btemp+11)^0,c
 26706  013C54  0E80               	movlw	128
 26707  013C56  160C               	andwf	(btemp+11)^0,f,c
 26708                           
 26709                           ;stkvar	_aexp @ sp[(-4)+2]
 26710  013C58  0EFE               	movlw	-2
 26711  013C5A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26712                           
 26713                           ;stkvar	_signs @ sp[(-4)+3]
 26714                           ;stkvar	_aexp @ sp[(-4)+2]
 26715  013C60  50E1               	movf	fsr1l,w,c
 26716  013C62  0FFE               	addlw	-2
 26717  013C64  6ED9               	movwf	fsr2l,c
 26718  013C66  50E2               	movf	fsr1h,w,c
 26719  013C68  6EDA               	movwf	fsr2h,c
 26720  013C6A  0EFF               	movlw	255
 26721  013C6C  22DA               	addwfc	fsr2h,f,c
 26722  013C6E  0EFF               	movlw	-1
 26723  013C70  50E3               	movf	plusw1,w,c
 26724  013C72  18DE               	xorwf	postinc2,w,c
 26725  013C74  B4D8               	btfsc	status,2,c
 26726  013C76  D002               	goto	l7657
 26727                           
 26728                           ;stkvar	_signs @ sp[(-4)+3]
 26729  013C78  0EFF               	movlw	-1
 26730  013C7A  8CE3               	bsf	plusw1,6,c
 26731  013C7C                     l7657:
 26732                           
 26733                           ;stkvar	_a @ sp[(-4)+-8]
 26734  013C7C  0EF7               	movlw	247
 26735  013C7E  24E1               	addwf	fsr1l,w,c
 26736  013C80  6ED9               	movwf	fsr2l,c
 26737  013C82  0EFF               	movlw	255
 26738  013C84  20E2               	addwfc	fsr1h,w,c
 26739  013C86  6EDA               	movwf	fsr2h,c
 26740  013C88  50DF               	movf	indf2,w,c
 26741  013C8A  6E0C               	movwf	(btemp+11)^0,c
 26742  013C8C  90D8               	bcf	status,0,c
 26743  013C8E  340C               	rlcf	(btemp+11)^0,w,c
 26744  013C90  6E0B               	movwf	(btemp+10)^0,c
 26745                           
 26746                           ;stkvar	_aexp @ sp[(-4)+2]
 26747  013C92  0EFE               	movlw	-2
 26748  013C94  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26749                           
 26750                           ;stkvar	_a @ sp[(-4)+-8]
 26751  013C9A  0EF6               	movlw	246
 26752  013C9C  24E1               	addwf	fsr1l,w,c
 26753  013C9E  6ED9               	movwf	fsr2l,c
 26754  013CA0  0EFF               	movlw	255
 26755  013CA2  20E2               	addwfc	fsr1h,w,c
 26756  013CA4  6EDA               	movwf	fsr2h,c
 26757  013CA6  AEDF               	btfss	indf2,7,c
 26758  013CA8  D002               	goto	l7663
 26759                           
 26760                           ;stkvar	_aexp @ sp[(-4)+2]
 26761  013CAA  0EFE               	movlw	-2
 26762  013CAC  80E3               	bsf	plusw1,0,c
 26763  013CAE                     l7663:
 26764                           
 26765                           ;stkvar	_aexp @ sp[(-4)+2]
 26766  013CAE  0EFE               	movlw	-2
 26767  013CB0  50E3               	movf	plusw1,w,c
 26768  013CB2  B4D8               	btfsc	status,2,c
 26769  013CB4  D027               	goto	l7673
 26770                           
 26771                           ;stkvar	_aexp @ sp[(-4)+2]
 26772  013CB6  0EFE               	movlw	-2
 26773  013CB8  28E3               	incf	plusw1,w,c
 26774  013CBA  A4D8               	btfss	status,2,c
 26775  013CBC  D018               	goto	l7669
 26776  013CBE  0E00               	movlw	0
 26777  013CC0  6E09               	movwf	(btemp+8)^0,c
 26778  013CC2  0E00               	movlw	0
 26779  013CC4  6E0A               	movwf	(btemp+9)^0,c
 26780  013CC6  0E00               	movlw	0
 26781  013CC8  6E0B               	movwf	(btemp+10)^0,c
 26782  013CCA  0E00               	movlw	0
 26783  013CCC  6E0C               	movwf	(btemp+11)^0,c
 26784                           
 26785                           ;stkvar	_a @ sp[(-4)+-8]
 26786  013CCE  0EF4               	movlw	-12
 26787  013CD0  0060  F027  FFE3   	movff	btemp+8,plusw1
 26788  013CD6  0EF5               	movlw	-11
 26789  013CD8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26790  013CDE  0EF6               	movlw	-10
 26791  013CE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26792  013CE6  0EF7               	movlw	-9
 26793  013CE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 26794  013CEE                     l7669:
 26795                           
 26796                           ;stkvar	_a @ sp[(-4)+-8]
 26797  013CEE  0EF6               	movlw	-10
 26798  013CF0  8EE3               	bsf	plusw1,7,c
 26799                           
 26800                           ;stkvar	_a @ sp[(-4)+-8]
 26801  013CF2  0EF7               	movlw	247
 26802  013CF4  24E1               	addwf	fsr1l,w,c
 26803  013CF6  6ED9               	movwf	fsr2l,c
 26804  013CF8  0EFF               	movlw	255
 26805  013CFA  20E2               	addwfc	fsr1h,w,c
 26806  013CFC  6EDA               	movwf	fsr2h,c
 26807  013CFE  0E00               	movlw	0
 26808  013D00  6EDF               	movwf	indf2,c
 26809  013D02  D018               	goto	l7675
 26810  013D04                     l7673:
 26811  013D04  0E00               	movlw	0
 26812  013D06  6E09               	movwf	(btemp+8)^0,c
 26813  013D08  0E00               	movlw	0
 26814  013D0A  6E0A               	movwf	(btemp+9)^0,c
 26815  013D0C  0E00               	movlw	0
 26816  013D0E  6E0B               	movwf	(btemp+10)^0,c
 26817  013D10  0E00               	movlw	0
 26818  013D12  6E0C               	movwf	(btemp+11)^0,c
 26819                           
 26820                           ;stkvar	_a @ sp[(-4)+-8]
 26821  013D14  0EF4               	movlw	-12
 26822  013D16  0060  F027  FFE3   	movff	btemp+8,plusw1
 26823  013D1C  0EF5               	movlw	-11
 26824  013D1E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26825  013D24  0EF6               	movlw	-10
 26826  013D26  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26827  013D2C  0EF7               	movlw	-9
 26828  013D2E  0060  F033  FFE3   	movff	btemp+11,plusw1
 26829  013D34                     l7675:
 26830                           
 26831                           ;stkvar	_bexp @ sp[(-4)+1]
 26832                           ;stkvar	_aexp @ sp[(-4)+2]
 26833  013D34  50E1               	movf	fsr1l,w,c
 26834  013D36  0FFE               	addlw	-2
 26835  013D38  6ED9               	movwf	fsr2l,c
 26836  013D3A  50E2               	movf	fsr1h,w,c
 26837  013D3C  6EDA               	movwf	fsr2h,c
 26838  013D3E  0EFF               	movlw	255
 26839  013D40  22DA               	addwfc	fsr2h,f,c
 26840  013D42  0EFD               	movlw	-3
 26841  013D44  50E3               	movf	plusw1,w,c
 26842  013D46  5CDE               	subwf	postinc2,w,c
 26843  013D48  B0D8               	btfsc	status,0,c
 26844  013D4A  D0A4               	goto	l7711
 26845                           
 26846                           ;stkvar	_signs @ sp[(-4)+3]
 26847  013D4C  0EFF               	movlw	-1
 26848  013D4E  ACE3               	btfss	plusw1,6,c
 26849  013D50  D002               	goto	l7681
 26850                           
 26851                           ;stkvar	_signs @ sp[(-4)+3]
 26852  013D52  0EFF               	movlw	-1
 26853  013D54  7EE3               	btg	plusw1,7,c
 26854  013D56                     l7681:
 26855                           
 26856                           ;stkvar	_bexp @ sp[(-4)+1]
 26857                           ;stkvar	_grs @ sp[(-4)+0]
 26858  013D56  0EFD               	movlw	-3
 26859  013D58  006F FF8C  F001    	movff	plusw1,btemp
 26860  013D5E  0EFC               	movlw	-4
 26861  013D60  0060  F007  FFE3   	movff	btemp,plusw1
 26862                           
 26863                           ;stkvar	_aexp @ sp[(-4)+2]
 26864                           ;stkvar	_bexp @ sp[(-4)+1]
 26865  013D66  0EFE               	movlw	-2
 26866  013D68  006F FF8C  F001    	movff	plusw1,btemp
 26867  013D6E  0EFD               	movlw	-3
 26868  013D70  0060  F007  FFE3   	movff	btemp,plusw1
 26869                           
 26870                           ;stkvar	_grs @ sp[(-4)+0]
 26871                           ;stkvar	_aexp @ sp[(-4)+2]
 26872  013D76  0EFC               	movlw	-4
 26873  013D78  006F FF8C  F001    	movff	plusw1,btemp
 26874  013D7E  0EFE               	movlw	-2
 26875  013D80  0060  F007  FFE3   	movff	btemp,plusw1
 26876                           
 26877                           ;stkvar	_b @ sp[(-4)+-4]
 26878                           ;stkvar	_grs @ sp[(-4)+0]
 26879  013D86  0EF8               	movlw	-8
 26880  013D88  006F FF8C  F001    	movff	plusw1,btemp
 26881  013D8E  0EFC               	movlw	-4
 26882  013D90  0060  F007  FFE3   	movff	btemp,plusw1
 26883                           
 26884                           ;stkvar	_a @ sp[(-4)+-8]
 26885                           ;stkvar	_b @ sp[(-4)+-4]
 26886  013D96  0EF4               	movlw	-12
 26887  013D98  006F FF8C  F001    	movff	plusw1,btemp
 26888  013D9E  0EF8               	movlw	-8
 26889  013DA0  0060  F007  FFE3   	movff	btemp,plusw1
 26890                           
 26891                           ;stkvar	_grs @ sp[(-4)+0]
 26892                           ;stkvar	_a @ sp[(-4)+-8]
 26893  013DA6  0EFC               	movlw	-4
 26894  013DA8  006F FF8C  F001    	movff	plusw1,btemp
 26895  013DAE  0EF4               	movlw	-12
 26896  013DB0  0060  F007  FFE3   	movff	btemp,plusw1
 26897                           
 26898                           ;stkvar	_b @ sp[(-4)+-4]
 26899  013DB6  0EF9               	movlw	249
 26900  013DB8  24E1               	addwf	fsr1l,w,c
 26901  013DBA  6ED9               	movwf	fsr2l,c
 26902  013DBC  0EFF               	movlw	255
 26903  013DBE  20E2               	addwfc	fsr1h,w,c
 26904  013DC0  6EDA               	movwf	fsr2h,c
 26905  013DC2  50DF               	movf	indf2,w,c
 26906  013DC4  6E0C               	movwf	(btemp+11)^0,c
 26907                           
 26908                           ;stkvar	_grs @ sp[(-4)+0]
 26909  013DC6  0EFC               	movlw	-4
 26910  013DC8  0060  F033  FFE3   	movff	btemp+11,plusw1
 26911                           
 26912                           ;stkvar	_a @ sp[(-4)+-8]
 26913  013DCE  0EF5               	movlw	245
 26914  013DD0  24E1               	addwf	fsr1l,w,c
 26915  013DD2  6ED9               	movwf	fsr2l,c
 26916  013DD4  0EFF               	movlw	255
 26917  013DD6  20E2               	addwfc	fsr1h,w,c
 26918  013DD8  6EDA               	movwf	fsr2h,c
 26919                           
 26920                           ;stkvar	_b @ sp[(-4)+-4]
 26921  013DDA  0EF9               	movlw	249
 26922  013DDC  24E1               	addwf	fsr1l,w,c
 26923  013DDE  6EE9               	movwf	fsr0l,c
 26924  013DE0  0EFF               	movlw	255
 26925  013DE2  20E2               	addwfc	fsr1h,w,c
 26926  013DE4  6EEA               	movwf	fsr0h,c
 26927  013DE6  006F FF7F FFEF     	movff	indf2,indf0
 26928                           
 26929                           ;stkvar	_grs @ sp[(-4)+0]
 26930                           ;stkvar	_a @ sp[(-4)+-8]
 26931  013DEC  0EF5               	movlw	245
 26932  013DEE  24E1               	addwf	fsr1l,w,c
 26933  013DF0  6ED9               	movwf	fsr2l,c
 26934  013DF2  0EFF               	movlw	255
 26935  013DF4  20E2               	addwfc	fsr1h,w,c
 26936  013DF6  6EDA               	movwf	fsr2h,c
 26937  013DF8  0EFC               	movlw	-4
 26938  013DFA  006F FF8F FFDF     	movff	plusw1,indf2
 26939                           
 26940                           ;stkvar	_b @ sp[(-4)+-4]
 26941  013E00  0EFA               	movlw	250
 26942  013E02  24E1               	addwf	fsr1l,w,c
 26943  013E04  6ED9               	movwf	fsr2l,c
 26944  013E06  0EFF               	movlw	255
 26945  013E08  20E2               	addwfc	fsr1h,w,c
 26946  013E0A  6EDA               	movwf	fsr2h,c
 26947  013E0C  50DF               	movf	indf2,w,c
 26948  013E0E  6E0C               	movwf	(btemp+11)^0,c
 26949                           
 26950                           ;stkvar	_grs @ sp[(-4)+0]
 26951  013E10  0EFC               	movlw	-4
 26952  013E12  0060  F033  FFE3   	movff	btemp+11,plusw1
 26953                           
 26954                           ;stkvar	_a @ sp[(-4)+-8]
 26955  013E18  0EF6               	movlw	246
 26956  013E1A  24E1               	addwf	fsr1l,w,c
 26957  013E1C  6ED9               	movwf	fsr2l,c
 26958  013E1E  0EFF               	movlw	255
 26959  013E20  20E2               	addwfc	fsr1h,w,c
 26960  013E22  6EDA               	movwf	fsr2h,c
 26961                           
 26962                           ;stkvar	_b @ sp[(-4)+-4]
 26963  013E24  0EFA               	movlw	250
 26964  013E26  24E1               	addwf	fsr1l,w,c
 26965  013E28  6EE9               	movwf	fsr0l,c
 26966  013E2A  0EFF               	movlw	255
 26967  013E2C  20E2               	addwfc	fsr1h,w,c
 26968  013E2E  6EEA               	movwf	fsr0h,c
 26969  013E30  006F FF7F FFEF     	movff	indf2,indf0
 26970                           
 26971                           ;stkvar	_grs @ sp[(-4)+0]
 26972                           ;stkvar	_a @ sp[(-4)+-8]
 26973  013E36  0EF6               	movlw	246
 26974  013E38  24E1               	addwf	fsr1l,w,c
 26975  013E3A  6ED9               	movwf	fsr2l,c
 26976  013E3C  0EFF               	movlw	255
 26977  013E3E  20E2               	addwfc	fsr1h,w,c
 26978  013E40  6EDA               	movwf	fsr2h,c
 26979  013E42  0EFC               	movlw	-4
 26980  013E44  006F FF8F FFDF     	movff	plusw1,indf2
 26981                           
 26982                           ;stkvar	_b @ sp[(-4)+-4]
 26983  013E4A  0EFB               	movlw	251
 26984  013E4C  24E1               	addwf	fsr1l,w,c
 26985  013E4E  6ED9               	movwf	fsr2l,c
 26986  013E50  0EFF               	movlw	255
 26987  013E52  20E2               	addwfc	fsr1h,w,c
 26988  013E54  6EDA               	movwf	fsr2h,c
 26989  013E56  50DF               	movf	indf2,w,c
 26990  013E58  6E0C               	movwf	(btemp+11)^0,c
 26991                           
 26992                           ;stkvar	_grs @ sp[(-4)+0]
 26993  013E5A  0EFC               	movlw	-4
 26994  013E5C  0060  F033  FFE3   	movff	btemp+11,plusw1
 26995                           
 26996                           ;stkvar	_a @ sp[(-4)+-8]
 26997  013E62  0EF7               	movlw	247
 26998  013E64  24E1               	addwf	fsr1l,w,c
 26999  013E66  6ED9               	movwf	fsr2l,c
 27000  013E68  0EFF               	movlw	255
 27001  013E6A  20E2               	addwfc	fsr1h,w,c
 27002  013E6C  6EDA               	movwf	fsr2h,c
 27003                           
 27004                           ;stkvar	_b @ sp[(-4)+-4]
 27005  013E6E  0EFB               	movlw	251
 27006  013E70  24E1               	addwf	fsr1l,w,c
 27007  013E72  6EE9               	movwf	fsr0l,c
 27008  013E74  0EFF               	movlw	255
 27009  013E76  20E2               	addwfc	fsr1h,w,c
 27010  013E78  6EEA               	movwf	fsr0h,c
 27011  013E7A  006F FF7F FFEF     	movff	indf2,indf0
 27012                           
 27013                           ;stkvar	_grs @ sp[(-4)+0]
 27014                           ;stkvar	_a @ sp[(-4)+-8]
 27015  013E80  0EF7               	movlw	247
 27016  013E82  24E1               	addwf	fsr1l,w,c
 27017  013E84  6ED9               	movwf	fsr2l,c
 27018  013E86  0EFF               	movlw	255
 27019  013E88  20E2               	addwfc	fsr1h,w,c
 27020  013E8A  6EDA               	movwf	fsr2h,c
 27021  013E8C  0EFC               	movlw	-4
 27022  013E8E  006F FF8F FFDF     	movff	plusw1,indf2
 27023  013E94                     l7711:
 27024                           
 27025                           ;stkvar	_grs @ sp[(-4)+0]
 27026  013E94  0EFC               	movlw	-4
 27027  013E96  6AE3               	clrf	plusw1,c
 27028                           
 27029                           ;stkvar	_aexp @ sp[(-4)+2]
 27030  013E98  0EFE               	movlw	-2
 27031  013E9A  50E3               	movf	plusw1,w,c
 27032  013E9C  6E0B               	movwf	(btemp+10)^0,c
 27033  013E9E  6A0C               	clrf	(btemp+11)^0,c
 27034                           
 27035                           ;stkvar	_bexp @ sp[(-4)+1]
 27036  013EA0  0EFD               	movlw	-3
 27037  013EA2  50E3               	movf	plusw1,w,c
 27038  013EA4  5E0B               	subwf	(btemp+10)^0,f,c
 27039  013EA6  0E00               	movlw	0
 27040  013EA8  5A0C               	subwfb	(btemp+11)^0,f,c
 27041  013EAA  BE0C               	btfsc	(btemp+11)^0,7,c
 27042  013EAC  D062               	goto	l7735
 27043  013EAE  500C               	movf	(btemp+11)^0,w,c
 27044  013EB0  E104               	bnz	u5520
 27045  013EB2  0E1A               	movlw	26
 27046  013EB4  5C0B               	subwf	(btemp+10)^0,w,c
 27047  013EB6  A0D8               	btfss	status,0,c
 27048  013EB8  D05C               	goto	l7735
 27049  013EBA                     u5520:
 27050                           
 27051                           ;stkvar	_b @ sp[(-4)+-4]
 27052  013EBA  0EF8               	movlw	-8
 27053  013EBC  50E3               	movf	plusw1,w,c
 27054  013EBE  E10A               	bnz	u5531
 27055  013EC0  0EF9               	movlw	-7
 27056  013EC2  50E3               	movf	plusw1,w,c
 27057  013EC4  E107               	bnz	u5531
 27058  013EC6  0EFA               	movlw	-6
 27059  013EC8  50E3               	movf	plusw1,w,c
 27060  013ECA  E104               	bnz	u5531
 27061  013ECC  0EFB               	movlw	-5
 27062  013ECE  50E3               	movf	plusw1,w,c
 27063  013ED0  B4D8               	btfsc	status,2,c
 27064  013ED2  D003               	goto	u5530
 27065  013ED4                     u5531:
 27066  013ED4  6A0C               	clrf	(btemp+11)^0,c
 27067  013ED6  2A0C               	incf	(btemp+11)^0,f,c
 27068  013ED8  D001               	goto	u5548
 27069  013EDA                     u5530:
 27070  013EDA  6A0C               	clrf	(btemp+11)^0,c
 27071  013EDC                     u5548:
 27072                           
 27073                           ;stkvar	_grs @ sp[(-4)+0]
 27074  013EDC  0EFC               	movlw	-4
 27075  013EDE  0060  F033  FFE3   	movff	btemp+11,plusw1
 27076                           
 27077                           ;stkvar	_b @ sp[(-4)+-4]
 27078  013EE4  0EF8               	movlw	-8
 27079  013EE6  6AE3               	clrf	plusw1,c
 27080  013EE8  0EF9               	movlw	-7
 27081  013EEA  6AE3               	clrf	plusw1,c
 27082  013EEC  0EFA               	movlw	-6
 27083  013EEE  6AE3               	clrf	plusw1,c
 27084  013EF0  0EFB               	movlw	-5
 27085  013EF2  6AE3               	clrf	plusw1,c
 27086                           
 27087                           ;stkvar	_aexp @ sp[(-4)+2]
 27088                           ;stkvar	_bexp @ sp[(-4)+1]
 27089  013EF4  0EFE               	movlw	-2
 27090  013EF6  006F FF8C  F001    	movff	plusw1,btemp
 27091  013EFC  0EFD               	movlw	-3
 27092  013EFE  0060  F007  FFE3   	movff	btemp,plusw1
 27093  013F04  D042               	goto	u5580
 27094  013F06                     l7721:
 27095                           
 27096                           ;stkvar	_grs @ sp[(-4)+0]
 27097  013F06  0EFC               	movlw	-4
 27098  013F08  A0E3               	btfss	plusw1,0,c
 27099  013F0A  D00D               	goto	l7725
 27100                           
 27101                           ;stkvar	_grs @ sp[(-4)+0]
 27102  013F0C  0EFC               	movlw	-4
 27103  013F0E  006F FF8C  F00C    	movff	plusw1,btemp+11
 27104  013F14  90D8               	bcf	status,0,c
 27105  013F16  320C               	rrcf	(btemp+11)^0,f,c
 27106  013F18  0E01               	movlw	1
 27107  013F1A  120C               	iorwf	(btemp+11)^0,f,c
 27108                           
 27109                           ;stkvar	_grs @ sp[(-4)+0]
 27110  013F1C  0EFC               	movlw	-4
 27111  013F1E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27112  013F24  D009               	goto	l7727
 27113  013F26                     l7725:
 27114                           
 27115                           ;stkvar	_grs @ sp[(-4)+0]
 27116  013F26  50E1               	movf	fsr1l,w,c
 27117  013F28  0FFC               	addlw	-4
 27118  013F2A  6ED9               	movwf	fsr2l,c
 27119  013F2C  50E2               	movf	fsr1h,w,c
 27120  013F2E  6EDA               	movwf	fsr2h,c
 27121  013F30  0EFF               	movlw	255
 27122  013F32  22DA               	addwfc	fsr2h,f,c
 27123  013F34  90D8               	bcf	status,0,c
 27124  013F36  32DF               	rrcf	indf2,f,c
 27125  013F38                     l7727:
 27126                           
 27127                           ;stkvar	_b @ sp[(-4)+-4]
 27128  013F38  0EF8               	movlw	-8
 27129  013F3A  A0E3               	btfss	plusw1,0,c
 27130  013F3C  D002               	goto	l7731
 27131                           
 27132                           ;stkvar	_grs @ sp[(-4)+0]
 27133  013F3E  0EFC               	movlw	-4
 27134  013F40  8EE3               	bsf	plusw1,7,c
 27135  013F42                     l7731:
 27136  013F42  0E01               	movlw	1
 27137  013F44  6E0C               	movwf	(btemp+11)^0,c
 27138                           
 27139                           ;stkvar	_b @ sp[(-4)+-4]
 27140  013F46  50E1               	movf	fsr1l,w,c
 27141  013F48  0FF8               	addlw	-8
 27142  013F4A  6ED9               	movwf	fsr2l,c
 27143  013F4C  50E2               	movf	fsr1h,w,c
 27144  013F4E  6EDA               	movwf	fsr2h,c
 27145  013F50  0EFF               	movlw	255
 27146  013F52  22DA               	addwfc	fsr2h,f,c
 27147  013F54  280C               	incf	(btemp+11)^0,w,c
 27148  013F56  52DE               	movf	postinc2,f,c
 27149  013F58  D008               	goto	u5570
 27150  013F5A                     u5575:
 27151  013F5A  52DE               	movf	postinc2,f,c
 27152  013F5C  90D8               	bcf	status,0,c
 27153  013F5E  BEDC               	btfsc	preinc2,7,c
 27154  013F60  80D8               	bsf	status,0,c
 27155  013F62  32DD               	rrcf	postdec2,f,c
 27156  013F64  32DD               	rrcf	postdec2,f,c
 27157  013F66  32DD               	rrcf	postdec2,f,c
 27158  013F68  32DE               	rrcf	postinc2,f,c
 27159  013F6A                     u5570:
 27160  013F6A  2EE8               	decfsz	wreg,f,c
 27161  013F6C  D7F6               	goto	u5575
 27162                           
 27163                           ;stkvar	_bexp @ sp[(-4)+1]
 27164  013F6E  0EFD               	movlw	-3
 27165  013F70  2AE3               	incf	plusw1,f,c
 27166  013F72                     l7735:
 27167                           
 27168                           ;stkvar	_aexp @ sp[(-4)+2]
 27169                           ;stkvar	_bexp @ sp[(-4)+1]
 27170  013F72  50E1               	movf	fsr1l,w,c
 27171  013F74  0FFD               	addlw	-3
 27172  013F76  6ED9               	movwf	fsr2l,c
 27173  013F78  50E2               	movf	fsr1h,w,c
 27174  013F7A  6EDA               	movwf	fsr2h,c
 27175  013F7C  0EFF               	movlw	255
 27176  013F7E  22DA               	addwfc	fsr2h,f,c
 27177  013F80  0EFE               	movlw	-2
 27178  013F82  50E3               	movf	plusw1,w,c
 27179  013F84  5CDE               	subwf	postinc2,w,c
 27180  013F86  A0D8               	btfss	status,0,c
 27181  013F88  D7BE               	goto	l7721
 27182  013F8A                     u5580:
 27183                           
 27184                           ;stkvar	_signs @ sp[(-4)+3]
 27185  013F8A  0EFF               	movlw	-1
 27186  013F8C  BCE3               	btfsc	plusw1,6,c
 27187  013F8E  D066               	goto	l7763
 27188                           
 27189                           ;stkvar	_bexp @ sp[(-4)+1]
 27190  013F90  0EFD               	movlw	-3
 27191  013F92  50E3               	movf	plusw1,w,c
 27192  013F94  B4D8               	btfsc	status,2,c
 27193  013F96  D0F2               	goto	u5680
 27194                           
 27195                           ;stkvar	_a @ sp[(-4)+-8]
 27196                           ;stkvar	_b @ sp[(-4)+-4]
 27197  013F98  0EF8               	movlw	-8
 27198  013F9A  50E3               	movf	plusw1,w,c
 27199  013F9C  6E01               	movwf	btemp^0,c
 27200  013F9E  0EF4               	movlw	-12
 27201  013FA0  50E3               	movf	plusw1,w,c
 27202  013FA2  2601               	addwf	btemp^0,f,c
 27203  013FA4  0EF8               	movlw	-8
 27204  013FA6  0060  F007  FFE3   	movff	btemp,plusw1
 27205  013FAC  0EF9               	movlw	-7
 27206  013FAE  50E3               	movf	plusw1,w,c
 27207  013FB0  6E01               	movwf	btemp^0,c
 27208  013FB2  0EF5               	movlw	-11
 27209  013FB4  50E3               	movf	plusw1,w,c
 27210  013FB6  2201               	addwfc	btemp^0,f,c
 27211  013FB8  0EF9               	movlw	-7
 27212  013FBA  0060  F007  FFE3   	movff	btemp,plusw1
 27213  013FC0  0EFA               	movlw	-6
 27214  013FC2  50E3               	movf	plusw1,w,c
 27215  013FC4  6E01               	movwf	btemp^0,c
 27216  013FC6  0EF6               	movlw	-10
 27217  013FC8  50E3               	movf	plusw1,w,c
 27218  013FCA  2201               	addwfc	btemp^0,f,c
 27219  013FCC  0EFA               	movlw	-6
 27220  013FCE  0060  F007  FFE3   	movff	btemp,plusw1
 27221  013FD4  0EFB               	movlw	-5
 27222  013FD6  50E3               	movf	plusw1,w,c
 27223  013FD8  6E01               	movwf	btemp^0,c
 27224  013FDA  0EF7               	movlw	-9
 27225  013FDC  50E3               	movf	plusw1,w,c
 27226  013FDE  2201               	addwfc	btemp^0,f,c
 27227  013FE0  0EFB               	movlw	-5
 27228  013FE2  0060  F007  FFE3   	movff	btemp,plusw1
 27229                           
 27230                           ;stkvar	_b @ sp[(-4)+-4]
 27231  013FE8  0EFB               	movlw	-5
 27232  013FEA  A0E3               	btfss	plusw1,0,c
 27233  013FEC  D101               	goto	u5720
 27234                           
 27235                           ;stkvar	_grs @ sp[(-4)+0]
 27236  013FEE  0EFC               	movlw	-4
 27237  013FF0  A0E3               	btfss	plusw1,0,c
 27238  013FF2  D00D               	goto	l7753
 27239                           
 27240                           ;stkvar	_grs @ sp[(-4)+0]
 27241  013FF4  0EFC               	movlw	-4
 27242  013FF6  006F FF8C  F00C    	movff	plusw1,btemp+11
 27243  013FFC  90D8               	bcf	status,0,c
 27244  013FFE  320C               	rrcf	(btemp+11)^0,f,c
 27245  014000  0E01               	movlw	1
 27246  014002  120C               	iorwf	(btemp+11)^0,f,c
 27247                           
 27248                           ;stkvar	_grs @ sp[(-4)+0]
 27249  014004  0EFC               	movlw	-4
 27250  014006  0060  F033  FFE3   	movff	btemp+11,plusw1
 27251  01400C  D009               	goto	l7755
 27252  01400E                     l7753:
 27253                           
 27254                           ;stkvar	_grs @ sp[(-4)+0]
 27255  01400E  50E1               	movf	fsr1l,w,c
 27256  014010  0FFC               	addlw	-4
 27257  014012  6ED9               	movwf	fsr2l,c
 27258  014014  50E2               	movf	fsr1h,w,c
 27259  014016  6EDA               	movwf	fsr2h,c
 27260  014018  0EFF               	movlw	255
 27261  01401A  22DA               	addwfc	fsr2h,f,c
 27262  01401C  90D8               	bcf	status,0,c
 27263  01401E  32DF               	rrcf	indf2,f,c
 27264  014020                     l7755:
 27265                           
 27266                           ;stkvar	_b @ sp[(-4)+-4]
 27267  014020  0EF8               	movlw	-8
 27268  014022  A0E3               	btfss	plusw1,0,c
 27269  014024  D002               	goto	l7759
 27270                           
 27271                           ;stkvar	_grs @ sp[(-4)+0]
 27272  014026  0EFC               	movlw	-4
 27273  014028  8EE3               	bsf	plusw1,7,c
 27274  01402A                     l7759:
 27275  01402A  0E01               	movlw	1
 27276  01402C  6E0C               	movwf	(btemp+11)^0,c
 27277                           
 27278                           ;stkvar	_b @ sp[(-4)+-4]
 27279  01402E  50E1               	movf	fsr1l,w,c
 27280  014030  0FF8               	addlw	-8
 27281  014032  6ED9               	movwf	fsr2l,c
 27282  014034  50E2               	movf	fsr1h,w,c
 27283  014036  6EDA               	movwf	fsr2h,c
 27284  014038  0EFF               	movlw	255
 27285  01403A  22DA               	addwfc	fsr2h,f,c
 27286  01403C  280C               	incf	(btemp+11)^0,w,c
 27287  01403E  52DE               	movf	postinc2,f,c
 27288  014040  D008               	goto	u5640
 27289  014042                     u5645:
 27290  014042  52DE               	movf	postinc2,f,c
 27291  014044  90D8               	bcf	status,0,c
 27292  014046  BEDC               	btfsc	preinc2,7,c
 27293  014048  80D8               	bsf	status,0,c
 27294  01404A  32DD               	rrcf	postdec2,f,c
 27295  01404C  32DD               	rrcf	postdec2,f,c
 27296  01404E  32DD               	rrcf	postdec2,f,c
 27297  014050  32DE               	rrcf	postinc2,f,c
 27298  014052                     u5640:
 27299  014052  2EE8               	decfsz	wreg,f,c
 27300  014054  D7F6               	goto	u5645
 27301                           
 27302                           ;stkvar	_bexp @ sp[(-4)+1]
 27303  014056  0EFD               	movlw	-3
 27304  014058  2AE3               	incf	plusw1,f,c
 27305  01405A  D0CA               	goto	u5720
 27306  01405C                     l7763:
 27307                           
 27308                           ;stkvar	_a @ sp[(-4)+-8]
 27309                           ;stkvar	_b @ sp[(-4)+-4]
 27310  01405C  50E1               	movf	fsr1l,w,c
 27311  01405E  0FF8               	addlw	-8
 27312  014060  6ED9               	movwf	fsr2l,c
 27313  014062  50E2               	movf	fsr1h,w,c
 27314  014064  6EDA               	movwf	fsr2h,c
 27315  014066  0EFF               	movlw	255
 27316  014068  22DA               	addwfc	fsr2h,f,c
 27317  01406A  0EF4               	movlw	-12
 27318  01406C  50E3               	movf	plusw1,w,c
 27319  01406E  5CDE               	subwf	postinc2,w,c
 27320  014070  0EF5               	movlw	-11
 27321  014072  50E3               	movf	plusw1,w,c
 27322  014074  58DE               	subwfb	postinc2,w,c
 27323  014076  0EF6               	movlw	-10
 27324  014078  50E3               	movf	plusw1,w,c
 27325  01407A  58DE               	subwfb	postinc2,w,c
 27326  01407C  50DE               	movf	postinc2,w,c
 27327  01407E  0A80               	xorlw	128
 27328  014080  6E01               	movwf	btemp^0,c
 27329  014082  0EF7               	movlw	-9
 27330  014084  50E3               	movf	plusw1,w,c
 27331  014086  0A80               	xorlw	128
 27332  014088  5801               	subwfb	btemp^0,w,c
 27333  01408A  B0D8               	btfsc	status,0,c
 27334  01408C  D053               	goto	l7775
 27335                           
 27336                           ;stkvar	_b @ sp[(-4)+-4]
 27337                           ;stkvar	_a @ sp[(-4)+-8]
 27338  01408E  0EF4               	movlw	-12
 27339  014090  006F FF8C  F009    	movff	plusw1,btemp+8
 27340  014096  0EF5               	movlw	-11
 27341  014098  006F FF8C  F00A    	movff	plusw1,btemp+9
 27342  01409E  0EF6               	movlw	-10
 27343  0140A0  006F FF8C  F00B    	movff	plusw1,btemp+10
 27344  0140A6  0EF7               	movlw	-9
 27345  0140A8  006F FF8C  F00C    	movff	plusw1,btemp+11
 27346  0140AE  0EF8               	movlw	-8
 27347  0140B0  50E3               	movf	plusw1,w,c
 27348  0140B2  5E09               	subwf	(btemp+8)^0,f,c
 27349  0140B4  0EF9               	movlw	-7
 27350  0140B6  50E3               	movf	plusw1,w,c
 27351  0140B8  5A0A               	subwfb	(btemp+9)^0,f,c
 27352  0140BA  0EFA               	movlw	-6
 27353  0140BC  50E3               	movf	plusw1,w,c
 27354  0140BE  5A0B               	subwfb	(btemp+10)^0,f,c
 27355  0140C0  0EFB               	movlw	-5
 27356  0140C2  50E3               	movf	plusw1,w,c
 27357  0140C4  5A0C               	subwfb	(btemp+11)^0,f,c
 27358  0140C6  0EFF               	movlw	255
 27359  0140C8  2409               	addwf	(btemp+8)^0,w,c
 27360  0140CA  6E05               	movwf	(btemp+4)^0,c
 27361  0140CC  0EFF               	movlw	255
 27362  0140CE  200A               	addwfc	(btemp+9)^0,w,c
 27363  0140D0  6E06               	movwf	(btemp+5)^0,c
 27364  0140D2  0EFF               	movlw	255
 27365  0140D4  200B               	addwfc	(btemp+10)^0,w,c
 27366  0140D6  6E07               	movwf	(btemp+6)^0,c
 27367  0140D8  0EFF               	movlw	255
 27368  0140DA  200C               	addwfc	(btemp+11)^0,w,c
 27369  0140DC  6E08               	movwf	(btemp+7)^0,c
 27370                           
 27371                           ;stkvar	_b @ sp[(-4)+-4]
 27372  0140DE  0EF8               	movlw	-8
 27373  0140E0  0060  F017  FFE3   	movff	btemp+4,plusw1
 27374  0140E6  0EF9               	movlw	-7
 27375  0140E8  0060  F01B  FFE3   	movff	btemp+5,plusw1
 27376  0140EE  0EFA               	movlw	-6
 27377  0140F0  0060  F01F  FFE3   	movff	btemp+6,plusw1
 27378  0140F6  0EFB               	movlw	-5
 27379  0140F8  0060  F023  FFE3   	movff	btemp+7,plusw1
 27380                           
 27381                           ;stkvar	_signs @ sp[(-4)+3]
 27382  0140FE  0EFF               	movlw	-1
 27383  014100  7EE3               	btg	plusw1,7,c
 27384                           
 27385                           ;stkvar	_grs @ sp[(-4)+0]
 27386  014102  0EFC               	movlw	-4
 27387  014104  50E3               	movf	plusw1,w,c
 27388  014106  0800               	sublw	0
 27389  014108  6E0C               	movwf	(btemp+11)^0,c
 27390                           
 27391                           ;stkvar	_grs @ sp[(-4)+0]
 27392  01410A  0EFC               	movlw	-4
 27393  01410C  0060  F033  FFE3   	movff	btemp+11,plusw1
 27394                           
 27395                           ;stkvar	_grs @ sp[(-4)+0]
 27396  014112  0EFC               	movlw	-4
 27397  014114  50E3               	movf	plusw1,w,c
 27398  014116  A4D8               	btfss	status,2,c
 27399  014118  D020               	goto	l7777
 27400                           
 27401                           ;stkvar	_b @ sp[(-4)+-4]
 27402  01411A  50E1               	movf	fsr1l,w,c
 27403  01411C  0FF8               	addlw	-8
 27404  01411E  6ED9               	movwf	fsr2l,c
 27405  014120  50E2               	movf	fsr1h,w,c
 27406  014122  6EDA               	movwf	fsr2h,c
 27407  014124  0EFF               	movlw	255
 27408  014126  22DA               	addwfc	fsr2h,f,c
 27409  014128  2ADE               	incf	postinc2,f,c
 27410  01412A  0E00               	movlw	0
 27411  01412C  22DE               	addwfc	postinc2,f,c
 27412  01412E  22DE               	addwfc	postinc2,f,c
 27413  014130  22DE               	addwfc	postinc2,f,c
 27414  014132  D013               	goto	l7777
 27415  014134                     l7775:
 27416                           
 27417                           ;stkvar	_a @ sp[(-4)+-8]
 27418                           ;stkvar	_b @ sp[(-4)+-4]
 27419  014134  50E1               	movf	fsr1l,w,c
 27420  014136  0FF8               	addlw	-8
 27421  014138  6ED9               	movwf	fsr2l,c
 27422  01413A  50E2               	movf	fsr1h,w,c
 27423  01413C  6EDA               	movwf	fsr2h,c
 27424  01413E  0EFF               	movlw	255
 27425  014140  22DA               	addwfc	fsr2h,f,c
 27426  014142  0EF4               	movlw	-12
 27427  014144  50E3               	movf	plusw1,w,c
 27428  014146  5EDE               	subwf	postinc2,f,c
 27429  014148  0EF5               	movlw	-11
 27430  01414A  50E3               	movf	plusw1,w,c
 27431  01414C  5ADE               	subwfb	postinc2,f,c
 27432  01414E  0EF6               	movlw	-10
 27433  014150  50E3               	movf	plusw1,w,c
 27434  014152  5ADE               	subwfb	postinc2,f,c
 27435  014154  0EF7               	movlw	-9
 27436  014156  50E3               	movf	plusw1,w,c
 27437  014158  5ADE               	subwfb	postinc2,f,c
 27438  01415A                     l7777:
 27439                           
 27440                           ;stkvar	_b @ sp[(-4)+-4]
 27441  01415A  0EF8               	movlw	-8
 27442  01415C  50E3               	movf	plusw1,w,c
 27443  01415E  E145               	bnz	l7799
 27444  014160  0EF9               	movlw	-7
 27445  014162  50E3               	movf	plusw1,w,c
 27446  014164  E142               	bnz	l7799
 27447  014166  0EFA               	movlw	-6
 27448  014168  50E3               	movf	plusw1,w,c
 27449  01416A  E13F               	bnz	l7799
 27450  01416C  0EFB               	movlw	-5
 27451  01416E  50E3               	movf	plusw1,w,c
 27452  014170  A4D8               	btfss	status,2,c
 27453  014172  D03B               	goto	l7799
 27454                           
 27455                           ;stkvar	_grs @ sp[(-4)+0]
 27456  014174  0EFC               	movlw	-4
 27457  014176  50E3               	movf	plusw1,w,c
 27458  014178  A4D8               	btfss	status,2,c
 27459  01417A  D037               	goto	l7799
 27460  01417C                     u5680:
 27461  01417C  0E00               	movlw	0
 27462  01417E  6E01               	movwf	btemp^0,c
 27463  014180  0E00               	movlw	0
 27464  014182  6E02               	movwf	(btemp+1)^0,c
 27465  014184  0E00               	movlw	0
 27466  014186  6E03               	movwf	(btemp+2)^0,c
 27467  014188  0E00               	movlw	0
 27468  01418A  6E04               	movwf	(btemp+3)^0,c
 27469  01418C  D0C6               	goto	l2937
 27470  01418E                     l7785:
 27471                           
 27472                           ;stkvar	_b @ sp[(-4)+-4]
 27473  01418E  90D8               	bcf	status,0,c
 27474  014190  0EF8               	movlw	-8
 27475  014192  36E3               	rlcf	plusw1,f,c
 27476  014194  0EF9               	movlw	-7
 27477  014196  36E3               	rlcf	plusw1,f,c
 27478  014198  0EFA               	movlw	-6
 27479  01419A  36E3               	rlcf	plusw1,f,c
 27480  01419C  0EFB               	movlw	-5
 27481  01419E  36E3               	rlcf	plusw1,f,c
 27482                           
 27483                           ;stkvar	_grs @ sp[(-4)+0]
 27484  0141A0  0EFC               	movlw	-4
 27485  0141A2  AEE3               	btfss	plusw1,7,c
 27486  0141A4  D002               	goto	l2949
 27487                           
 27488                           ;stkvar	_b @ sp[(-4)+-4]
 27489  0141A6  0EF8               	movlw	-8
 27490  0141A8  80E3               	bsf	plusw1,0,c
 27491  0141AA                     l2949:
 27492                           
 27493                           ;stkvar	_grs @ sp[(-4)+0]
 27494  0141AA  0EFC               	movlw	-4
 27495  0141AC  A0E3               	btfss	plusw1,0,c
 27496  0141AE  D00E               	goto	l7793
 27497                           
 27498                           ;stkvar	_grs @ sp[(-4)+0]
 27499  0141B0  0EFC               	movlw	-4
 27500  0141B2  006F FF8C  F00C    	movff	plusw1,btemp+11
 27501  0141B8  90D8               	bcf	status,0,c
 27502  0141BA  340C               	rlcf	(btemp+11)^0,w,c
 27503  0141BC  6E0B               	movwf	(btemp+10)^0,c
 27504  0141BE  0E01               	movlw	1
 27505  0141C0  120B               	iorwf	(btemp+10)^0,f,c
 27506                           
 27507                           ;stkvar	_grs @ sp[(-4)+0]
 27508  0141C2  0EFC               	movlw	-4
 27509  0141C4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27510  0141CA  D009               	goto	l7795
 27511  0141CC                     l7793:
 27512                           
 27513                           ;stkvar	_grs @ sp[(-4)+0]
 27514  0141CC  50E1               	movf	fsr1l,w,c
 27515  0141CE  0FFC               	addlw	-4
 27516  0141D0  6ED9               	movwf	fsr2l,c
 27517  0141D2  50E2               	movf	fsr1h,w,c
 27518  0141D4  6EDA               	movwf	fsr2h,c
 27519  0141D6  0EFF               	movlw	255
 27520  0141D8  22DA               	addwfc	fsr2h,f,c
 27521  0141DA  90D8               	bcf	status,0,c
 27522  0141DC  36DF               	rlcf	indf2,f,c
 27523  0141DE                     l7795:
 27524                           
 27525                           ;stkvar	_bexp @ sp[(-4)+1]
 27526  0141DE  0EFD               	movlw	-3
 27527  0141E0  50E3               	movf	plusw1,w,c
 27528  0141E2  B4D8               	btfsc	status,2,c
 27529  0141E4  D002               	goto	l7799
 27530                           
 27531                           ;stkvar	_bexp @ sp[(-4)+1]
 27532  0141E6  0EFD               	movlw	-3
 27533  0141E8  06E3               	decf	plusw1,f,c
 27534  0141EA                     l7799:
 27535                           
 27536                           ;stkvar	_b @ sp[(-4)+-4]
 27537  0141EA  0EFA               	movlw	-6
 27538  0141EC  AEE3               	btfss	plusw1,7,c
 27539  0141EE  D7CF               	goto	l7785
 27540  0141F0                     u5720:
 27541                           
 27542                           ;stkvar	_aexp @ sp[(-4)+2]
 27543  0141F0  0EFE               	movlw	-2
 27544  0141F2  6AE3               	clrf	plusw1,c
 27545                           
 27546                           ;stkvar	_grs @ sp[(-4)+0]
 27547  0141F4  0EFC               	movlw	-4
 27548  0141F6  AEE3               	btfss	plusw1,7,c
 27549  0141F8  D00F               	goto	l7813
 27550                           
 27551                           ;stkvar	_grs @ sp[(-4)+0]
 27552  0141FA  0EFC               	movlw	-4
 27553  0141FC  006F FF8C  F00C    	movff	plusw1,btemp+11
 27554  014202  0E7F               	movlw	127
 27555  014204  160C               	andwf	(btemp+11)^0,f,c
 27556  014206  B4D8               	btfsc	status,2,c
 27557  014208  D004               	goto	l7809
 27558  01420A                     u5740:
 27559                           
 27560                           ;stkvar	_aexp @ sp[(-4)+2]
 27561  01420A  0EFE               	movlw	-2
 27562  01420C  6AE3               	clrf	plusw1,c
 27563  01420E  2AE3               	incf	plusw1,f,c
 27564  014210  D003               	goto	l7813
 27565  014212                     l7809:
 27566                           
 27567                           ;stkvar	_b @ sp[(-4)+-4]
 27568  014212  0EF8               	movlw	-8
 27569  014214  B0E3               	btfsc	plusw1,0,c
 27570  014216  D7F9               	goto	u5740
 27571  014218                     l7813:
 27572                           
 27573                           ;stkvar	_aexp @ sp[(-4)+2]
 27574  014218  0EFE               	movlw	-2
 27575  01421A  50E3               	movf	plusw1,w,c
 27576  01421C  B4D8               	btfsc	status,2,c
 27577  01421E  D02B               	goto	l7825
 27578                           
 27579                           ;stkvar	_b @ sp[(-4)+-4]
 27580  014220  50E1               	movf	fsr1l,w,c
 27581  014222  0FF8               	addlw	-8
 27582  014224  6ED9               	movwf	fsr2l,c
 27583  014226  50E2               	movf	fsr1h,w,c
 27584  014228  6EDA               	movwf	fsr2h,c
 27585  01422A  0EFF               	movlw	255
 27586  01422C  22DA               	addwfc	fsr2h,f,c
 27587  01422E  2ADE               	incf	postinc2,f,c
 27588  014230  0E00               	movlw	0
 27589  014232  22DE               	addwfc	postinc2,f,c
 27590  014234  22DE               	addwfc	postinc2,f,c
 27591  014236  22DE               	addwfc	postinc2,f,c
 27592                           
 27593                           ;stkvar	_b @ sp[(-4)+-4]
 27594  014238  0EFB               	movlw	-5
 27595  01423A  A0E3               	btfss	plusw1,0,c
 27596  01423C  D01C               	goto	l7825
 27597  01423E  0E01               	movlw	1
 27598  014240  6E0C               	movwf	(btemp+11)^0,c
 27599                           
 27600                           ;stkvar	_b @ sp[(-4)+-4]
 27601  014242  50E1               	movf	fsr1l,w,c
 27602  014244  0FF8               	addlw	-8
 27603  014246  6ED9               	movwf	fsr2l,c
 27604  014248  50E2               	movf	fsr1h,w,c
 27605  01424A  6EDA               	movwf	fsr2h,c
 27606  01424C  0EFF               	movlw	255
 27607  01424E  22DA               	addwfc	fsr2h,f,c
 27608  014250  280C               	incf	(btemp+11)^0,w,c
 27609  014252  52DE               	movf	postinc2,f,c
 27610  014254  D008               	goto	u5780
 27611  014256                     u5785:
 27612  014256  52DE               	movf	postinc2,f,c
 27613  014258  90D8               	bcf	status,0,c
 27614  01425A  BEDC               	btfsc	preinc2,7,c
 27615  01425C  80D8               	bsf	status,0,c
 27616  01425E  32DD               	rrcf	postdec2,f,c
 27617  014260  32DD               	rrcf	postdec2,f,c
 27618  014262  32DD               	rrcf	postdec2,f,c
 27619  014264  32DE               	rrcf	postinc2,f,c
 27620  014266                     u5780:
 27621  014266  2EE8               	decfsz	wreg,f,c
 27622  014268  D7F6               	goto	u5785
 27623                           
 27624                           ;stkvar	_bexp @ sp[(-4)+1]
 27625  01426A  0EFD               	movlw	-3
 27626  01426C  28E3               	incf	plusw1,w,c
 27627  01426E  B4D8               	btfsc	status,2,c
 27628  014270  D002               	goto	l7825
 27629                           
 27630                           ;stkvar	_bexp @ sp[(-4)+1]
 27631  014272  0EFD               	movlw	-3
 27632  014274  2AE3               	incf	plusw1,f,c
 27633  014276                     l7825:
 27634                           
 27635                           ;stkvar	_bexp @ sp[(-4)+1]
 27636  014276  0EFD               	movlw	-3
 27637  014278  28E3               	incf	plusw1,w,c
 27638  01427A  B4D8               	btfsc	status,2,c
 27639  01427C  D004               	goto	u5810
 27640                           
 27641                           ;stkvar	_bexp @ sp[(-4)+1]
 27642  01427E  0EFD               	movlw	-3
 27643  014280  50E3               	movf	plusw1,w,c
 27644  014282  A4D8               	btfss	status,2,c
 27645  014284  D00E               	goto	l7835
 27646  014286                     u5810:
 27647                           
 27648                           ;stkvar	_b @ sp[(-4)+-4]
 27649  014286  0EF8               	movlw	-8
 27650  014288  6AE3               	clrf	plusw1,c
 27651  01428A  0EF9               	movlw	-7
 27652  01428C  6AE3               	clrf	plusw1,c
 27653  01428E  0EFA               	movlw	-6
 27654  014290  6AE3               	clrf	plusw1,c
 27655  014292  0EFB               	movlw	-5
 27656  014294  6AE3               	clrf	plusw1,c
 27657                           
 27658                           ;stkvar	_bexp @ sp[(-4)+1]
 27659  014296  0EFD               	movlw	-3
 27660  014298  50E3               	movf	plusw1,w,c
 27661  01429A  A4D8               	btfss	status,2,c
 27662  01429C  D002               	goto	l7835
 27663                           
 27664                           ;stkvar	_signs @ sp[(-4)+3]
 27665  01429E  0EFF               	movlw	-1
 27666  0142A0  6AE3               	clrf	plusw1,c
 27667  0142A2                     l7835:
 27668                           
 27669                           ;stkvar	_bexp @ sp[(-4)+1]
 27670  0142A2  0EFD               	movlw	-3
 27671  0142A4  A0E3               	btfss	plusw1,0,c
 27672  0142A6  D009               	goto	l7839
 27673                           
 27674                           ;stkvar	_b @ sp[(-4)+-4]
 27675  0142A8  0EFA               	movlw	250
 27676  0142AA  24E1               	addwf	fsr1l,w,c
 27677  0142AC  6ED9               	movwf	fsr2l,c
 27678  0142AE  0EFF               	movlw	255
 27679  0142B0  20E2               	addwfc	fsr1h,w,c
 27680  0142B2  6EDA               	movwf	fsr2h,c
 27681  0142B4  0E00               	movlw	0
 27682  0142B6  8EDB               	bsf	plusw2,7,c
 27683  0142B8  D008               	goto	l7841
 27684  0142BA                     l7839:
 27685                           
 27686                           ;stkvar	_b @ sp[(-4)+-4]
 27687  0142BA  0EFA               	movlw	250
 27688  0142BC  24E1               	addwf	fsr1l,w,c
 27689  0142BE  6ED9               	movwf	fsr2l,c
 27690  0142C0  0EFF               	movlw	255
 27691  0142C2  20E2               	addwfc	fsr1h,w,c
 27692  0142C4  6EDA               	movwf	fsr2h,c
 27693  0142C6  0E7F               	movlw	127
 27694  0142C8  16DF               	andwf	indf2,f,c
 27695  0142CA                     l7841:
 27696                           
 27697                           ;stkvar	_b @ sp[(-4)+-4]
 27698  0142CA  0EFB               	movlw	251
 27699  0142CC  24E1               	addwf	fsr1l,w,c
 27700  0142CE  6ED9               	movwf	fsr2l,c
 27701  0142D0  0EFF               	movlw	255
 27702  0142D2  20E2               	addwfc	fsr1h,w,c
 27703  0142D4  6EDA               	movwf	fsr2h,c
 27704                           
 27705                           ;stkvar	_bexp @ sp[(-4)+1]
 27706  0142D6  0EFD               	movlw	-3
 27707  0142D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 27708  0142DE  90D8               	bcf	status,0,c
 27709  0142E0  300C               	rrcf	(btemp+11)^0,w,c
 27710  0142E2  6EDF               	movwf	indf2,c
 27711                           
 27712                           ;stkvar	_signs @ sp[(-4)+3]
 27713  0142E4  0EFF               	movlw	-1
 27714  0142E6  AEE3               	btfss	plusw1,7,c
 27715  0142E8  D008               	goto	l7847
 27716                           
 27717                           ;stkvar	_b @ sp[(-4)+-4]
 27718  0142EA  0EFB               	movlw	251
 27719  0142EC  24E1               	addwf	fsr1l,w,c
 27720  0142EE  6ED9               	movwf	fsr2l,c
 27721  0142F0  0EFF               	movlw	255
 27722  0142F2  20E2               	addwfc	fsr1h,w,c
 27723  0142F4  6EDA               	movwf	fsr2h,c
 27724  0142F6  0E00               	movlw	0
 27725  0142F8  8EDB               	bsf	plusw2,7,c
 27726  0142FA                     l7847:
 27727                           
 27728                           ;stkvar	_b @ sp[(-4)+-4]
 27729  0142FA  0EF8               	movlw	-8
 27730  0142FC  006F FF8C  F001    	movff	plusw1,btemp
 27731  014302  0EF9               	movlw	-7
 27732  014304  006F FF8C  F002    	movff	plusw1,btemp+1
 27733  01430A  0EFA               	movlw	-6
 27734  01430C  006F FF8C  F003    	movff	plusw1,btemp+2
 27735  014312  0EFB               	movlw	-5
 27736  014314  006F FF8C  F004    	movff	plusw1,btemp+3
 27737  01431A                     l2937:
 27738                           
 27739                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27740  01431A  0EF4               	movlw	244
 27741  01431C  26E1               	addwf	fsr1l,f,c
 27742  01431E  0EFF               	movlw	255
 27743  014320  22E2               	addwfc	fsr1h,f,c
 27744  014322  0012               	return		;funcret
 27745  014324                     __end_of___fladd:
 27746                           	opt callstack 0
 27747                           
 27748 ;; *************** function ___flmul *****************
 27749 ;; Defined at:
 27750 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 27751 ;; Parameters:    Size  Location     Type
 27752 ;;  b               4  [STACK] unsigned char 
 27753 ;;  a               4  [STACK] unsigned char 
 27754 ;; Auto vars:     Size  Location     Type
 27755 ;;  prod            4  [STACK] struct .
 27756 ;;  grs             4  [STACK] unsigned long 
 27757 ;;  temp            2  [STACK] struct .
 27758 ;;  bexp            1  [STACK] unsigned char 
 27759 ;;  aexp            1  [STACK] unsigned char 
 27760 ;;  sign            1  [STACK] unsigned char 
 27761 ;; Return value:  Size  Location     Type
 27762 ;;                  4  [STACK] unsigned char 
 27763 ;; Registers used:
 27764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27765 ;; Tracked objects:
 27766 ;;		On entry : 0/0
 27767 ;;		On exit  : 0/0
 27768 ;;		Unchanged: 0/0
 27769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27774 ;;Total ram usage:        0 bytes
 27775 ;; Hardware stack levels used:    1
 27776 ;; Hardware stack levels required when called:   15
 27777 ;; This function calls:
 27778 ;;		Nothing
 27779 ;; This function is called by:
 27780 ;;		_conv_raw_result
 27781 ;;		_lp_filter
 27782 ;;		_calc_model_data
 27783 ;;		_calc_bsoc
 27784 ;;		_init_bsoc
 27785 ;;		_efgtoa
 27786 ;; This function uses a reentrant model
 27787 ;;
 27788                           
 27789                           	psect	text106
 27790  01333E                     __ptext106:
 27791                           	opt callstack 0
 27792  01333E                     ___flmul:
 27793                           	opt callstack 0
 27794                           
 27795                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 27796  01333E  0E0D               	movlw	13
 27797  013340  26E1               	addwf	fsr1l,f,c
 27798  013342  0E00               	movlw	0
 27799  013344  22E2               	addwfc	fsr1h,f,c
 27800                           
 27801                           ;stkvar	_b @ sp[(-13)+-4]
 27802                           
 27803                           ;incstack = 0
 27804 ;; hardware stack exceeded
 27805  013346  0EF2               	movlw	242
 27806  013348  24E1               	addwf	fsr1l,w,c
 27807  01334A  6ED9               	movwf	fsr2l,c
 27808  01334C  0EFF               	movlw	255
 27809  01334E  20E2               	addwfc	fsr1h,w,c
 27810  013350  6EDA               	movwf	fsr2h,c
 27811  013352  50DF               	movf	indf2,w,c
 27812  013354  6E0C               	movwf	(btemp+11)^0,c
 27813  013356  0E80               	movlw	128
 27814  013358  160C               	andwf	(btemp+11)^0,f,c
 27815                           
 27816                           ;stkvar	_sign @ sp[(-13)+12]
 27817  01335A  0EFF               	movlw	-1
 27818  01335C  0060  F033  FFE3   	movff	btemp+11,plusw1
 27819                           
 27820                           ;stkvar	_b @ sp[(-13)+-4]
 27821  013362  0EF2               	movlw	242
 27822  013364  24E1               	addwf	fsr1l,w,c
 27823  013366  6ED9               	movwf	fsr2l,c
 27824  013368  0EFF               	movlw	255
 27825  01336A  20E2               	addwfc	fsr1h,w,c
 27826  01336C  6EDA               	movwf	fsr2h,c
 27827  01336E  50DF               	movf	indf2,w,c
 27828  013370  6E0C               	movwf	(btemp+11)^0,c
 27829  013372  90D8               	bcf	status,0,c
 27830  013374  340C               	rlcf	(btemp+11)^0,w,c
 27831  013376  6E0B               	movwf	(btemp+10)^0,c
 27832                           
 27833                           ;stkvar	_bexp @ sp[(-13)+10]
 27834  013378  0EFD               	movlw	-3
 27835  01337A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27836                           
 27837                           ;stkvar	_b @ sp[(-13)+-4]
 27838  013380  0EF1               	movlw	241
 27839  013382  24E1               	addwf	fsr1l,w,c
 27840  013384  6ED9               	movwf	fsr2l,c
 27841  013386  0EFF               	movlw	255
 27842  013388  20E2               	addwfc	fsr1h,w,c
 27843  01338A  6EDA               	movwf	fsr2h,c
 27844  01338C  AEDF               	btfss	indf2,7,c
 27845  01338E  D002               	goto	l8231
 27846                           
 27847                           ;stkvar	_bexp @ sp[(-13)+10]
 27848  013390  0EFD               	movlw	-3
 27849  013392  80E3               	bsf	plusw1,0,c
 27850  013394                     l8231:
 27851                           
 27852                           ;stkvar	_bexp @ sp[(-13)+10]
 27853  013394  0EFD               	movlw	-3
 27854  013396  50E3               	movf	plusw1,w,c
 27855  013398  B4D8               	btfsc	status,2,c
 27856  01339A  D01F               	goto	l8239
 27857                           
 27858                           ;stkvar	_bexp @ sp[(-13)+10]
 27859  01339C  0EFD               	movlw	-3
 27860  01339E  28E3               	incf	plusw1,w,c
 27861  0133A0  A4D8               	btfss	status,2,c
 27862  0133A2  D018               	goto	l8237
 27863  0133A4  0E00               	movlw	0
 27864  0133A6  6E09               	movwf	(btemp+8)^0,c
 27865  0133A8  0E00               	movlw	0
 27866  0133AA  6E0A               	movwf	(btemp+9)^0,c
 27867  0133AC  0E00               	movlw	0
 27868  0133AE  6E0B               	movwf	(btemp+10)^0,c
 27869  0133B0  0E00               	movlw	0
 27870  0133B2  6E0C               	movwf	(btemp+11)^0,c
 27871                           
 27872                           ;stkvar	_b @ sp[(-13)+-4]
 27873  0133B4  0EEF               	movlw	-17
 27874  0133B6  0060  F027  FFE3   	movff	btemp+8,plusw1
 27875  0133BC  0EF0               	movlw	-16
 27876  0133BE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27877  0133C4  0EF1               	movlw	-15
 27878  0133C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27879  0133CC  0EF2               	movlw	-14
 27880  0133CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 27881  0133D4                     l8237:
 27882                           
 27883                           ;stkvar	_b @ sp[(-13)+-4]
 27884  0133D4  0EF1               	movlw	-15
 27885  0133D6  8EE3               	bsf	plusw1,7,c
 27886  0133D8  D018               	goto	l8241
 27887  0133DA                     l8239:
 27888  0133DA  0E00               	movlw	0
 27889  0133DC  6E09               	movwf	(btemp+8)^0,c
 27890  0133DE  0E00               	movlw	0
 27891  0133E0  6E0A               	movwf	(btemp+9)^0,c
 27892  0133E2  0E00               	movlw	0
 27893  0133E4  6E0B               	movwf	(btemp+10)^0,c
 27894  0133E6  0E00               	movlw	0
 27895  0133E8  6E0C               	movwf	(btemp+11)^0,c
 27896                           
 27897                           ;stkvar	_b @ sp[(-13)+-4]
 27898  0133EA  0EEF               	movlw	-17
 27899  0133EC  0060  F027  FFE3   	movff	btemp+8,plusw1
 27900  0133F2  0EF0               	movlw	-16
 27901  0133F4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27902  0133FA  0EF1               	movlw	-15
 27903  0133FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27904  013402  0EF2               	movlw	-14
 27905  013404  0060  F033  FFE3   	movff	btemp+11,plusw1
 27906  01340A                     l8241:
 27907                           
 27908                           ;stkvar	_a @ sp[(-13)+-8]
 27909  01340A  0EEE               	movlw	238
 27910  01340C  24E1               	addwf	fsr1l,w,c
 27911  01340E  6ED9               	movwf	fsr2l,c
 27912  013410  0EFF               	movlw	255
 27913  013412  20E2               	addwfc	fsr1h,w,c
 27914  013414  6EDA               	movwf	fsr2h,c
 27915  013416  50DF               	movf	indf2,w,c
 27916  013418  6E0C               	movwf	(btemp+11)^0,c
 27917  01341A  0E80               	movlw	128
 27918  01341C  160C               	andwf	(btemp+11)^0,f,c
 27919                           
 27920                           ;stkvar	_sign @ sp[(-13)+12]
 27921  01341E  50E1               	movf	fsr1l,w,c
 27922  013420  0FFF               	addlw	-1
 27923  013422  6ED9               	movwf	fsr2l,c
 27924  013424  50E2               	movf	fsr1h,w,c
 27925  013426  6EDA               	movwf	fsr2h,c
 27926  013428  0EFF               	movlw	255
 27927  01342A  22DA               	addwfc	fsr2h,f,c
 27928  01342C  500C               	movf	(btemp+11)^0,w,c
 27929  01342E  1ADF               	xorwf	indf2,f,c
 27930                           
 27931                           ;stkvar	_a @ sp[(-13)+-8]
 27932  013430  0EEE               	movlw	238
 27933  013432  24E1               	addwf	fsr1l,w,c
 27934  013434  6ED9               	movwf	fsr2l,c
 27935  013436  0EFF               	movlw	255
 27936  013438  20E2               	addwfc	fsr1h,w,c
 27937  01343A  6EDA               	movwf	fsr2h,c
 27938  01343C  50DF               	movf	indf2,w,c
 27939  01343E  6E0C               	movwf	(btemp+11)^0,c
 27940  013440  90D8               	bcf	status,0,c
 27941  013442  340C               	rlcf	(btemp+11)^0,w,c
 27942  013444  6E0B               	movwf	(btemp+10)^0,c
 27943                           
 27944                           ;stkvar	_aexp @ sp[(-13)+11]
 27945  013446  0EFE               	movlw	-2
 27946  013448  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27947                           
 27948                           ;stkvar	_a @ sp[(-13)+-8]
 27949  01344E  0EED               	movlw	237
 27950  013450  24E1               	addwf	fsr1l,w,c
 27951  013452  6ED9               	movwf	fsr2l,c
 27952  013454  0EFF               	movlw	255
 27953  013456  20E2               	addwfc	fsr1h,w,c
 27954  013458  6EDA               	movwf	fsr2h,c
 27955  01345A  AEDF               	btfss	indf2,7,c
 27956  01345C  D002               	goto	l8249
 27957                           
 27958                           ;stkvar	_aexp @ sp[(-13)+11]
 27959  01345E  0EFE               	movlw	-2
 27960  013460  80E3               	bsf	plusw1,0,c
 27961  013462                     l8249:
 27962                           
 27963                           ;stkvar	_aexp @ sp[(-13)+11]
 27964  013462  0EFE               	movlw	-2
 27965  013464  50E3               	movf	plusw1,w,c
 27966  013466  B4D8               	btfsc	status,2,c
 27967  013468  D01F               	goto	l8257
 27968                           
 27969                           ;stkvar	_aexp @ sp[(-13)+11]
 27970  01346A  0EFE               	movlw	-2
 27971  01346C  28E3               	incf	plusw1,w,c
 27972  01346E  A4D8               	btfss	status,2,c
 27973  013470  D018               	goto	l8255
 27974  013472  0E00               	movlw	0
 27975  013474  6E09               	movwf	(btemp+8)^0,c
 27976  013476  0E00               	movlw	0
 27977  013478  6E0A               	movwf	(btemp+9)^0,c
 27978  01347A  0E00               	movlw	0
 27979  01347C  6E0B               	movwf	(btemp+10)^0,c
 27980  01347E  0E00               	movlw	0
 27981  013480  6E0C               	movwf	(btemp+11)^0,c
 27982                           
 27983                           ;stkvar	_a @ sp[(-13)+-8]
 27984  013482  0EEB               	movlw	-21
 27985  013484  0060  F027  FFE3   	movff	btemp+8,plusw1
 27986  01348A  0EEC               	movlw	-20
 27987  01348C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27988  013492  0EED               	movlw	-19
 27989  013494  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27990  01349A  0EEE               	movlw	-18
 27991  01349C  0060  F033  FFE3   	movff	btemp+11,plusw1
 27992  0134A2                     l8255:
 27993                           
 27994                           ;stkvar	_a @ sp[(-13)+-8]
 27995  0134A2  0EED               	movlw	-19
 27996  0134A4  8EE3               	bsf	plusw1,7,c
 27997  0134A6  D018               	goto	l8259
 27998  0134A8                     l8257:
 27999  0134A8  0E00               	movlw	0
 28000  0134AA  6E09               	movwf	(btemp+8)^0,c
 28001  0134AC  0E00               	movlw	0
 28002  0134AE  6E0A               	movwf	(btemp+9)^0,c
 28003  0134B0  0E00               	movlw	0
 28004  0134B2  6E0B               	movwf	(btemp+10)^0,c
 28005  0134B4  0E00               	movlw	0
 28006  0134B6  6E0C               	movwf	(btemp+11)^0,c
 28007                           
 28008                           ;stkvar	_a @ sp[(-13)+-8]
 28009  0134B8  0EEB               	movlw	-21
 28010  0134BA  0060  F027  FFE3   	movff	btemp+8,plusw1
 28011  0134C0  0EEC               	movlw	-20
 28012  0134C2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28013  0134C8  0EED               	movlw	-19
 28014  0134CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28015  0134D0  0EEE               	movlw	-18
 28016  0134D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 28017  0134D8                     l8259:
 28018                           
 28019                           ;stkvar	_aexp @ sp[(-13)+11]
 28020  0134D8  0EFE               	movlw	-2
 28021  0134DA  50E3               	movf	plusw1,w,c
 28022  0134DC  B4D8               	btfsc	status,2,c
 28023  0134DE  D004               	goto	u6750
 28024                           
 28025                           ;stkvar	_bexp @ sp[(-13)+10]
 28026  0134E0  0EFD               	movlw	-3
 28027  0134E2  50E3               	movf	plusw1,w,c
 28028  0134E4  A4D8               	btfss	status,2,c
 28029  0134E6  D009               	goto	l8267
 28030  0134E8                     u6750:
 28031  0134E8  0E00               	movlw	0
 28032  0134EA  6E01               	movwf	btemp^0,c
 28033  0134EC  0E00               	movlw	0
 28034  0134EE  6E02               	movwf	(btemp+1)^0,c
 28035  0134F0  0E00               	movlw	0
 28036  0134F2  6E03               	movwf	(btemp+2)^0,c
 28037  0134F4  0E00               	movlw	0
 28038  0134F6  6E04               	movwf	(btemp+3)^0,c
 28039  0134F8  D332               	goto	l3018
 28040  0134FA                     l8267:
 28041                           
 28042                           ;stkvar	_b @ sp[(-13)+-4]
 28043  0134FA  0EEF               	movlw	-17
 28044  0134FC  006F FF8C  F00C    	movff	plusw1,btemp+11
 28045                           
 28046                           ;stkvar	_a @ sp[(-13)+-8]
 28047  013502  0EED               	movlw	237
 28048  013504  24E1               	addwf	fsr1l,w,c
 28049  013506  6ED9               	movwf	fsr2l,c
 28050  013508  0EFF               	movlw	255
 28051  01350A  20E2               	addwfc	fsr1h,w,c
 28052  01350C  6EDA               	movwf	fsr2h,c
 28053  01350E  50DF               	movf	indf2,w,c
 28054  013510  020C               	mulwf	(btemp+11)^0,c
 28055                           
 28056                           ;stkvar	_temp @ sp[(-13)+8]
 28057  013512  0EFB               	movlw	-5
 28058  013514  006F FFCF FFE3     	movff	prodl,plusw1
 28059  01351A  0EFC               	movlw	-4
 28060  01351C  006F FFD3 FFE3     	movff	prodh,plusw1
 28061                           
 28062                           ;stkvar	_temp @ sp[(-13)+8]
 28063  013522  0EFB               	movlw	-5
 28064  013524  006F FF8C  F00C    	movff	plusw1,btemp+11
 28065  01352A  0060  F030  F005   	movff	btemp+11,btemp+4
 28066  013530  6A06               	clrf	(btemp+5)^0,c
 28067  013532  6A07               	clrf	(btemp+6)^0,c
 28068  013534  6A08               	clrf	(btemp+7)^0,c
 28069                           
 28070                           ;stkvar	_grs @ sp[(-13)+4]
 28071  013536  0EF7               	movlw	-9
 28072  013538  0060  F017  FFE3   	movff	btemp+4,plusw1
 28073  01353E  0EF8               	movlw	-8
 28074  013540  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28075  013546  0EF9               	movlw	-7
 28076  013548  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28077  01354E  0EFA               	movlw	-6
 28078  013550  0060  F023  FFE3   	movff	btemp+7,plusw1
 28079                           
 28080                           ;stkvar	_temp @ sp[(-13)+8]
 28081  013556  0EFC               	movlw	252
 28082  013558  24E1               	addwf	fsr1l,w,c
 28083  01355A  6ED9               	movwf	fsr2l,c
 28084  01355C  0EFF               	movlw	255
 28085  01355E  20E2               	addwfc	fsr1h,w,c
 28086  013560  6EDA               	movwf	fsr2h,c
 28087  013562  50DF               	movf	indf2,w,c
 28088  013564  6E0C               	movwf	(btemp+11)^0,c
 28089  013566  0060  F030  F005   	movff	btemp+11,btemp+4
 28090  01356C  6A06               	clrf	(btemp+5)^0,c
 28091  01356E  6A07               	clrf	(btemp+6)^0,c
 28092  013570  6A08               	clrf	(btemp+7)^0,c
 28093                           
 28094                           ;stkvar	_prod @ sp[(-13)+0]
 28095  013572  0EF3               	movlw	-13
 28096  013574  0060  F017  FFE3   	movff	btemp+4,plusw1
 28097  01357A  0EF4               	movlw	-12
 28098  01357C  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28099  013582  0EF5               	movlw	-11
 28100  013584  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28101  01358A  0EF6               	movlw	-10
 28102  01358C  0060  F023  FFE3   	movff	btemp+7,plusw1
 28103                           
 28104                           ;stkvar	_b @ sp[(-13)+-4]
 28105  013592  0EF0               	movlw	240
 28106  013594  24E1               	addwf	fsr1l,w,c
 28107  013596  6ED9               	movwf	fsr2l,c
 28108  013598  0EFF               	movlw	255
 28109  01359A  20E2               	addwfc	fsr1h,w,c
 28110  01359C  6EDA               	movwf	fsr2h,c
 28111  01359E  50DF               	movf	indf2,w,c
 28112  0135A0  6E0C               	movwf	(btemp+11)^0,c
 28113                           
 28114                           ;stkvar	_a @ sp[(-13)+-8]
 28115  0135A2  0EEC               	movlw	236
 28116  0135A4  24E1               	addwf	fsr1l,w,c
 28117  0135A6  6ED9               	movwf	fsr2l,c
 28118  0135A8  0EFF               	movlw	255
 28119  0135AA  20E2               	addwfc	fsr1h,w,c
 28120  0135AC  6EDA               	movwf	fsr2h,c
 28121  0135AE  50DF               	movf	indf2,w,c
 28122  0135B0  020C               	mulwf	(btemp+11)^0,c
 28123                           
 28124                           ;stkvar	_temp @ sp[(-13)+8]
 28125  0135B2  0EFB               	movlw	-5
 28126  0135B4  006F FFCF FFE3     	movff	prodl,plusw1
 28127  0135BA  0EFC               	movlw	-4
 28128  0135BC  006F FFD3 FFE3     	movff	prodh,plusw1
 28129                           
 28130                           ;stkvar	_grs @ sp[(-13)+4]
 28131  0135C2  50E1               	movf	fsr1l,w,c
 28132  0135C4  0FF7               	addlw	-9
 28133  0135C6  6ED9               	movwf	fsr2l,c
 28134  0135C8  50E2               	movf	fsr1h,w,c
 28135  0135CA  6EDA               	movwf	fsr2h,c
 28136  0135CC  0EFF               	movlw	255
 28137  0135CE  22DA               	addwfc	fsr2h,f,c
 28138                           
 28139                           ;stkvar	_temp @ sp[(-13)+8]
 28140  0135D0  0EFB               	movlw	-5
 28141  0135D2  50E3               	movf	plusw1,w,c
 28142  0135D4  26DE               	addwf	postinc2,f,c
 28143  0135D6  0E00               	movlw	0
 28144  0135D8  22DE               	addwfc	postinc2,f,c
 28145  0135DA  22DE               	addwfc	postinc2,f,c
 28146  0135DC  22DE               	addwfc	postinc2,f,c
 28147                           
 28148                           ;stkvar	_prod @ sp[(-13)+0]
 28149  0135DE  50E1               	movf	fsr1l,w,c
 28150  0135E0  0FF3               	addlw	-13
 28151  0135E2  6ED9               	movwf	fsr2l,c
 28152  0135E4  50E2               	movf	fsr1h,w,c
 28153  0135E6  6EDA               	movwf	fsr2h,c
 28154  0135E8  0EFF               	movlw	255
 28155  0135EA  22DA               	addwfc	fsr2h,f,c
 28156                           
 28157                           ;stkvar	_temp @ sp[(-13)+8]
 28158  0135EC  0EFC               	movlw	252
 28159  0135EE  24E1               	addwf	fsr1l,w,c
 28160  0135F0  6EE9               	movwf	fsr0l,c
 28161  0135F2  0EFF               	movlw	255
 28162  0135F4  20E2               	addwfc	fsr1h,w,c
 28163  0135F6  6EEA               	movwf	fsr0h,c
 28164  0135F8  50EF               	movf	indf0,w,c
 28165  0135FA  26DE               	addwf	postinc2,f,c
 28166  0135FC  0E00               	movlw	0
 28167  0135FE  22DE               	addwfc	postinc2,f,c
 28168  013600  22DE               	addwfc	postinc2,f,c
 28169  013602  22DE               	addwfc	postinc2,f,c
 28170                           
 28171                           ;stkvar	_b @ sp[(-13)+-4]
 28172  013604  0EF1               	movlw	241
 28173  013606  24E1               	addwf	fsr1l,w,c
 28174  013608  6ED9               	movwf	fsr2l,c
 28175  01360A  0EFF               	movlw	255
 28176  01360C  20E2               	addwfc	fsr1h,w,c
 28177  01360E  6EDA               	movwf	fsr2h,c
 28178  013610  50DF               	movf	indf2,w,c
 28179  013612  6E0C               	movwf	(btemp+11)^0,c
 28180                           
 28181                           ;stkvar	_a @ sp[(-13)+-8]
 28182  013614  0EEB               	movlw	-21
 28183  013616  50E3               	movf	plusw1,w,c
 28184  013618  020C               	mulwf	(btemp+11)^0,c
 28185                           
 28186                           ;stkvar	_temp @ sp[(-13)+8]
 28187  01361A  0EFB               	movlw	-5
 28188  01361C  006F FFCF FFE3     	movff	prodl,plusw1
 28189  013622  0EFC               	movlw	-4
 28190  013624  006F FFD3 FFE3     	movff	prodh,plusw1
 28191                           
 28192                           ;stkvar	_grs @ sp[(-13)+4]
 28193  01362A  50E1               	movf	fsr1l,w,c
 28194  01362C  0FF7               	addlw	-9
 28195  01362E  6ED9               	movwf	fsr2l,c
 28196  013630  50E2               	movf	fsr1h,w,c
 28197  013632  6EDA               	movwf	fsr2h,c
 28198  013634  0EFF               	movlw	255
 28199  013636  22DA               	addwfc	fsr2h,f,c
 28200                           
 28201                           ;stkvar	_temp @ sp[(-13)+8]
 28202  013638  0EFB               	movlw	-5
 28203  01363A  50E3               	movf	plusw1,w,c
 28204  01363C  26DE               	addwf	postinc2,f,c
 28205  01363E  0E00               	movlw	0
 28206  013640  22DE               	addwfc	postinc2,f,c
 28207  013642  22DE               	addwfc	postinc2,f,c
 28208  013644  22DE               	addwfc	postinc2,f,c
 28209                           
 28210                           ;stkvar	_prod @ sp[(-13)+0]
 28211  013646  50E1               	movf	fsr1l,w,c
 28212  013648  0FF3               	addlw	-13
 28213  01364A  6ED9               	movwf	fsr2l,c
 28214  01364C  50E2               	movf	fsr1h,w,c
 28215  01364E  6EDA               	movwf	fsr2h,c
 28216  013650  0EFF               	movlw	255
 28217  013652  22DA               	addwfc	fsr2h,f,c
 28218                           
 28219                           ;stkvar	_temp @ sp[(-13)+8]
 28220  013654  0EFC               	movlw	252
 28221  013656  24E1               	addwf	fsr1l,w,c
 28222  013658  6EE9               	movwf	fsr0l,c
 28223  01365A  0EFF               	movlw	255
 28224  01365C  20E2               	addwfc	fsr1h,w,c
 28225  01365E  6EEA               	movwf	fsr0h,c
 28226  013660  50EF               	movf	indf0,w,c
 28227  013662  26DE               	addwf	postinc2,f,c
 28228  013664  0E00               	movlw	0
 28229  013666  22DE               	addwfc	postinc2,f,c
 28230  013668  22DE               	addwfc	postinc2,f,c
 28231  01366A  22DE               	addwfc	postinc2,f,c
 28232                           
 28233                           ;stkvar	_grs @ sp[(-13)+4]
 28234  01366C  50E1               	movf	fsr1l,w,c
 28235  01366E  0FF7               	addlw	-9
 28236  013670  6ED9               	movwf	fsr2l,c
 28237  013672  50E2               	movf	fsr1h,w,c
 28238  013674  6EDA               	movwf	fsr2h,c
 28239  013676  0EFF               	movlw	255
 28240  013678  22DA               	addwfc	fsr2h,f,c
 28241  01367A  0E08               	movlw	8
 28242  01367C                     u6765:
 28243  01367C  90D8               	bcf	status,0,c
 28244  01367E  36DE               	rlcf	postinc2,f,c
 28245  013680  36DE               	rlcf	postinc2,f,c
 28246  013682  36DE               	rlcf	postinc2,f,c
 28247  013684  36DD               	rlcf	postdec2,f,c
 28248  013686  52DD               	movf	postdec2,f,c
 28249  013688  52DD               	movf	postdec2,f,c
 28250  01368A  2EE8               	decfsz	wreg,f,c
 28251  01368C  D7F7               	goto	u6765
 28252                           
 28253                           ;stkvar	_b @ sp[(-13)+-4]
 28254  01368E  0EF0               	movlw	240
 28255  013690  24E1               	addwf	fsr1l,w,c
 28256  013692  6ED9               	movwf	fsr2l,c
 28257  013694  0EFF               	movlw	255
 28258  013696  20E2               	addwfc	fsr1h,w,c
 28259  013698  6EDA               	movwf	fsr2h,c
 28260  01369A  50DF               	movf	indf2,w,c
 28261  01369C  6E0C               	movwf	(btemp+11)^0,c
 28262                           
 28263                           ;stkvar	_a @ sp[(-13)+-8]
 28264  01369E  0EEB               	movlw	-21
 28265  0136A0  50E3               	movf	plusw1,w,c
 28266  0136A2  020C               	mulwf	(btemp+11)^0,c
 28267                           
 28268                           ;stkvar	_temp @ sp[(-13)+8]
 28269  0136A4  0EFB               	movlw	-5
 28270  0136A6  006F FFCF FFE3     	movff	prodl,plusw1
 28271  0136AC  0EFC               	movlw	-4
 28272  0136AE  006F FFD3 FFE3     	movff	prodh,plusw1
 28273                           
 28274                           ;stkvar	_temp @ sp[(-13)+8]
 28275  0136B4  0EFB               	movlw	-5
 28276  0136B6  006F FF8C  F00B    	movff	plusw1,btemp+10
 28277  0136BC  0EFC               	movlw	-4
 28278  0136BE  006F FF8C  F00C    	movff	plusw1,btemp+11
 28279                           
 28280                           ;stkvar	_grs @ sp[(-13)+4]
 28281  0136C4  50E1               	movf	fsr1l,w,c
 28282  0136C6  0FF7               	addlw	-9
 28283  0136C8  6ED9               	movwf	fsr2l,c
 28284  0136CA  50E2               	movf	fsr1h,w,c
 28285  0136CC  6EDA               	movwf	fsr2h,c
 28286  0136CE  0EFF               	movlw	255
 28287  0136D0  22DA               	addwfc	fsr2h,f,c
 28288  0136D2  500B               	movf	(btemp+10)^0,w,c
 28289  0136D4  26DE               	addwf	postinc2,f,c
 28290  0136D6  500C               	movf	(btemp+11)^0,w,c
 28291  0136D8  22DE               	addwfc	postinc2,f,c
 28292  0136DA  0E00               	movlw	0
 28293  0136DC  22DE               	addwfc	postinc2,f,c
 28294  0136DE  22DE               	addwfc	postinc2,f,c
 28295                           
 28296                           ;stkvar	_b @ sp[(-13)+-4]
 28297  0136E0  0EEF               	movlw	-17
 28298  0136E2  006F FF8C  F00C    	movff	plusw1,btemp+11
 28299                           
 28300                           ;stkvar	_a @ sp[(-13)+-8]
 28301  0136E8  0EEC               	movlw	236
 28302  0136EA  24E1               	addwf	fsr1l,w,c
 28303  0136EC  6ED9               	movwf	fsr2l,c
 28304  0136EE  0EFF               	movlw	255
 28305  0136F0  20E2               	addwfc	fsr1h,w,c
 28306  0136F2  6EDA               	movwf	fsr2h,c
 28307  0136F4  50DF               	movf	indf2,w,c
 28308  0136F6  020C               	mulwf	(btemp+11)^0,c
 28309                           
 28310                           ;stkvar	_temp @ sp[(-13)+8]
 28311  0136F8  0EFB               	movlw	-5
 28312  0136FA  006F FFCF FFE3     	movff	prodl,plusw1
 28313  013700  0EFC               	movlw	-4
 28314  013702  006F FFD3 FFE3     	movff	prodh,plusw1
 28315                           
 28316                           ;stkvar	_temp @ sp[(-13)+8]
 28317  013708  0EFB               	movlw	-5
 28318  01370A  006F FF8C  F00B    	movff	plusw1,btemp+10
 28319  013710  0EFC               	movlw	-4
 28320  013712  006F FF8C  F00C    	movff	plusw1,btemp+11
 28321                           
 28322                           ;stkvar	_grs @ sp[(-13)+4]
 28323  013718  50E1               	movf	fsr1l,w,c
 28324  01371A  0FF7               	addlw	-9
 28325  01371C  6ED9               	movwf	fsr2l,c
 28326  01371E  50E2               	movf	fsr1h,w,c
 28327  013720  6EDA               	movwf	fsr2h,c
 28328  013722  0EFF               	movlw	255
 28329  013724  22DA               	addwfc	fsr2h,f,c
 28330  013726  500B               	movf	(btemp+10)^0,w,c
 28331  013728  26DE               	addwf	postinc2,f,c
 28332  01372A  500C               	movf	(btemp+11)^0,w,c
 28333  01372C  22DE               	addwfc	postinc2,f,c
 28334  01372E  0E00               	movlw	0
 28335  013730  22DE               	addwfc	postinc2,f,c
 28336  013732  22DE               	addwfc	postinc2,f,c
 28337                           
 28338                           ;stkvar	_grs @ sp[(-13)+4]
 28339  013734  50E1               	movf	fsr1l,w,c
 28340  013736  0FF7               	addlw	-9
 28341  013738  6ED9               	movwf	fsr2l,c
 28342  01373A  50E2               	movf	fsr1h,w,c
 28343  01373C  6EDA               	movwf	fsr2h,c
 28344  01373E  0EFF               	movlw	255
 28345  013740  22DA               	addwfc	fsr2h,f,c
 28346  013742  0E08               	movlw	8
 28347  013744                     u6775:
 28348  013744  90D8               	bcf	status,0,c
 28349  013746  36DE               	rlcf	postinc2,f,c
 28350  013748  36DE               	rlcf	postinc2,f,c
 28351  01374A  36DE               	rlcf	postinc2,f,c
 28352  01374C  36DD               	rlcf	postdec2,f,c
 28353  01374E  52DD               	movf	postdec2,f,c
 28354  013750  52DD               	movf	postdec2,f,c
 28355  013752  2EE8               	decfsz	wreg,f,c
 28356  013754  D7F7               	goto	u6775
 28357                           
 28358                           ;stkvar	_b @ sp[(-13)+-4]
 28359  013756  0EEF               	movlw	-17
 28360  013758  006F FF8C  F00C    	movff	plusw1,btemp+11
 28361                           
 28362                           ;stkvar	_a @ sp[(-13)+-8]
 28363  01375E  0EEB               	movlw	-21
 28364  013760  50E3               	movf	plusw1,w,c
 28365  013762  020C               	mulwf	(btemp+11)^0,c
 28366                           
 28367                           ;stkvar	_temp @ sp[(-13)+8]
 28368  013764  0EFB               	movlw	-5
 28369  013766  006F FFCF FFE3     	movff	prodl,plusw1
 28370  01376C  0EFC               	movlw	-4
 28371  01376E  006F FFD3 FFE3     	movff	prodh,plusw1
 28372                           
 28373                           ;stkvar	_temp @ sp[(-13)+8]
 28374  013774  0EFB               	movlw	-5
 28375  013776  006F FF8C  F00B    	movff	plusw1,btemp+10
 28376  01377C  0EFC               	movlw	-4
 28377  01377E  006F FF8C  F00C    	movff	plusw1,btemp+11
 28378                           
 28379                           ;stkvar	_grs @ sp[(-13)+4]
 28380  013784  50E1               	movf	fsr1l,w,c
 28381  013786  0FF7               	addlw	-9
 28382  013788  6ED9               	movwf	fsr2l,c
 28383  01378A  50E2               	movf	fsr1h,w,c
 28384  01378C  6EDA               	movwf	fsr2h,c
 28385  01378E  0EFF               	movlw	255
 28386  013790  22DA               	addwfc	fsr2h,f,c
 28387  013792  500B               	movf	(btemp+10)^0,w,c
 28388  013794  26DE               	addwf	postinc2,f,c
 28389  013796  500C               	movf	(btemp+11)^0,w,c
 28390  013798  22DE               	addwfc	postinc2,f,c
 28391  01379A  0E00               	movlw	0
 28392  01379C  22DE               	addwfc	postinc2,f,c
 28393  01379E  22DE               	addwfc	postinc2,f,c
 28394                           
 28395                           ;stkvar	_b @ sp[(-13)+-4]
 28396  0137A0  0EF0               	movlw	240
 28397  0137A2  24E1               	addwf	fsr1l,w,c
 28398  0137A4  6ED9               	movwf	fsr2l,c
 28399  0137A6  0EFF               	movlw	255
 28400  0137A8  20E2               	addwfc	fsr1h,w,c
 28401  0137AA  6EDA               	movwf	fsr2h,c
 28402  0137AC  50DF               	movf	indf2,w,c
 28403  0137AE  6E0C               	movwf	(btemp+11)^0,c
 28404                           
 28405                           ;stkvar	_a @ sp[(-13)+-8]
 28406  0137B0  0EED               	movlw	237
 28407  0137B2  24E1               	addwf	fsr1l,w,c
 28408  0137B4  6ED9               	movwf	fsr2l,c
 28409  0137B6  0EFF               	movlw	255
 28410  0137B8  20E2               	addwfc	fsr1h,w,c
 28411  0137BA  6EDA               	movwf	fsr2h,c
 28412  0137BC  50DF               	movf	indf2,w,c
 28413  0137BE  020C               	mulwf	(btemp+11)^0,c
 28414                           
 28415                           ;stkvar	_temp @ sp[(-13)+8]
 28416  0137C0  0EFB               	movlw	-5
 28417  0137C2  006F FFCF FFE3     	movff	prodl,plusw1
 28418  0137C8  0EFC               	movlw	-4
 28419  0137CA  006F FFD3 FFE3     	movff	prodh,plusw1
 28420                           
 28421                           ;stkvar	_temp @ sp[(-13)+8]
 28422  0137D0  0EFB               	movlw	-5
 28423  0137D2  006F FF8C  F00B    	movff	plusw1,btemp+10
 28424  0137D8  0EFC               	movlw	-4
 28425  0137DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 28426                           
 28427                           ;stkvar	_prod @ sp[(-13)+0]
 28428  0137E0  50E1               	movf	fsr1l,w,c
 28429  0137E2  0FF3               	addlw	-13
 28430  0137E4  6ED9               	movwf	fsr2l,c
 28431  0137E6  50E2               	movf	fsr1h,w,c
 28432  0137E8  6EDA               	movwf	fsr2h,c
 28433  0137EA  0EFF               	movlw	255
 28434  0137EC  22DA               	addwfc	fsr2h,f,c
 28435  0137EE  500B               	movf	(btemp+10)^0,w,c
 28436  0137F0  26DE               	addwf	postinc2,f,c
 28437  0137F2  500C               	movf	(btemp+11)^0,w,c
 28438  0137F4  22DE               	addwfc	postinc2,f,c
 28439  0137F6  0E00               	movlw	0
 28440  0137F8  22DE               	addwfc	postinc2,f,c
 28441  0137FA  22DE               	addwfc	postinc2,f,c
 28442                           
 28443                           ;stkvar	_b @ sp[(-13)+-4]
 28444  0137FC  0EF1               	movlw	241
 28445  0137FE  24E1               	addwf	fsr1l,w,c
 28446  013800  6ED9               	movwf	fsr2l,c
 28447  013802  0EFF               	movlw	255
 28448  013804  20E2               	addwfc	fsr1h,w,c
 28449  013806  6EDA               	movwf	fsr2h,c
 28450  013808  50DF               	movf	indf2,w,c
 28451  01380A  6E0C               	movwf	(btemp+11)^0,c
 28452                           
 28453                           ;stkvar	_a @ sp[(-13)+-8]
 28454  01380C  0EEC               	movlw	236
 28455  01380E  24E1               	addwf	fsr1l,w,c
 28456  013810  6ED9               	movwf	fsr2l,c
 28457  013812  0EFF               	movlw	255
 28458  013814  20E2               	addwfc	fsr1h,w,c
 28459  013816  6EDA               	movwf	fsr2h,c
 28460  013818  50DF               	movf	indf2,w,c
 28461  01381A  020C               	mulwf	(btemp+11)^0,c
 28462                           
 28463                           ;stkvar	_temp @ sp[(-13)+8]
 28464  01381C  0EFB               	movlw	-5
 28465  01381E  006F FFCF FFE3     	movff	prodl,plusw1
 28466  013824  0EFC               	movlw	-4
 28467  013826  006F FFD3 FFE3     	movff	prodh,plusw1
 28468                           
 28469                           ;stkvar	_temp @ sp[(-13)+8]
 28470  01382C  0EFB               	movlw	-5
 28471  01382E  006F FF8C  F00B    	movff	plusw1,btemp+10
 28472  013834  0EFC               	movlw	-4
 28473  013836  006F FF8C  F00C    	movff	plusw1,btemp+11
 28474                           
 28475                           ;stkvar	_prod @ sp[(-13)+0]
 28476  01383C  50E1               	movf	fsr1l,w,c
 28477  01383E  0FF3               	addlw	-13
 28478  013840  6ED9               	movwf	fsr2l,c
 28479  013842  50E2               	movf	fsr1h,w,c
 28480  013844  6EDA               	movwf	fsr2h,c
 28481  013846  0EFF               	movlw	255
 28482  013848  22DA               	addwfc	fsr2h,f,c
 28483  01384A  500B               	movf	(btemp+10)^0,w,c
 28484  01384C  26DE               	addwf	postinc2,f,c
 28485  01384E  500C               	movf	(btemp+11)^0,w,c
 28486  013850  22DE               	addwfc	postinc2,f,c
 28487  013852  0E00               	movlw	0
 28488  013854  22DE               	addwfc	postinc2,f,c
 28489  013856  22DE               	addwfc	postinc2,f,c
 28490                           
 28491                           ;stkvar	_b @ sp[(-13)+-4]
 28492  013858  0EF1               	movlw	241
 28493  01385A  24E1               	addwf	fsr1l,w,c
 28494  01385C  6ED9               	movwf	fsr2l,c
 28495  01385E  0EFF               	movlw	255
 28496  013860  20E2               	addwfc	fsr1h,w,c
 28497  013862  6EDA               	movwf	fsr2h,c
 28498  013864  50DF               	movf	indf2,w,c
 28499  013866  6E0C               	movwf	(btemp+11)^0,c
 28500                           
 28501                           ;stkvar	_a @ sp[(-13)+-8]
 28502  013868  0EED               	movlw	237
 28503  01386A  24E1               	addwf	fsr1l,w,c
 28504  01386C  6ED9               	movwf	fsr2l,c
 28505  01386E  0EFF               	movlw	255
 28506  013870  20E2               	addwfc	fsr1h,w,c
 28507  013872  6EDA               	movwf	fsr2h,c
 28508  013874  50DF               	movf	indf2,w,c
 28509  013876  020C               	mulwf	(btemp+11)^0,c
 28510                           
 28511                           ;stkvar	_temp @ sp[(-13)+8]
 28512  013878  0EFB               	movlw	-5
 28513  01387A  006F FFCF FFE3     	movff	prodl,plusw1
 28514  013880  0EFC               	movlw	-4
 28515  013882  006F FFD3 FFE3     	movff	prodh,plusw1
 28516                           
 28517                           ;stkvar	_temp @ sp[(-13)+8]
 28518  013888  0EFB               	movlw	-5
 28519  01388A  006F FF8C  F00B    	movff	plusw1,btemp+10
 28520  013890  0EFC               	movlw	-4
 28521  013892  006F FF8C  F00C    	movff	plusw1,btemp+11
 28522  013898  500B               	movf	(btemp+10)^0,w,c
 28523  01389A  6E05               	movwf	(btemp+4)^0,c
 28524  01389C  500C               	movf	(btemp+11)^0,w,c
 28525  01389E  6E06               	movwf	(btemp+5)^0,c
 28526  0138A0  6A07               	clrf	(btemp+6)^0,c
 28527  0138A2  6A08               	clrf	(btemp+7)^0,c
 28528  0138A4  0060  F01C  F008   	movff	btemp+6,btemp+7
 28529  0138AA  0060  F018  F007   	movff	btemp+5,btemp+6
 28530  0138B0  0060  F014  F006   	movff	btemp+4,btemp+5
 28531  0138B6  6A05               	clrf	(btemp+4)^0,c
 28532                           
 28533                           ;stkvar	_prod @ sp[(-13)+0]
 28534  0138B8  50E1               	movf	fsr1l,w,c
 28535  0138BA  0FF3               	addlw	-13
 28536  0138BC  6ED9               	movwf	fsr2l,c
 28537  0138BE  50E2               	movf	fsr1h,w,c
 28538  0138C0  6EDA               	movwf	fsr2h,c
 28539  0138C2  0EFF               	movlw	255
 28540  0138C4  22DA               	addwfc	fsr2h,f,c
 28541  0138C6  5005               	movf	(btemp+4)^0,w,c
 28542  0138C8  26DE               	addwf	postinc2,f,c
 28543  0138CA  5006               	movf	(btemp+5)^0,w,c
 28544  0138CC  22DE               	addwfc	postinc2,f,c
 28545  0138CE  5007               	movf	(btemp+6)^0,w,c
 28546  0138D0  22DE               	addwfc	postinc2,f,c
 28547  0138D2  5008               	movf	(btemp+7)^0,w,c
 28548  0138D4  22DE               	addwfc	postinc2,f,c
 28549                           
 28550                           ;stkvar	_prod @ sp[(-13)+0]
 28551  0138D6  50E1               	movf	fsr1l,w,c
 28552  0138D8  0FF3               	addlw	-13
 28553  0138DA  6ED9               	movwf	fsr2l,c
 28554  0138DC  50E2               	movf	fsr1h,w,c
 28555  0138DE  6EDA               	movwf	fsr2h,c
 28556  0138E0  0EFF               	movlw	255
 28557  0138E2  22DA               	addwfc	fsr2h,f,c
 28558                           
 28559                           ;stkvar	_grs @ sp[(-13)+4]
 28560  0138E4  0EFA               	movlw	250
 28561  0138E6  24E1               	addwf	fsr1l,w,c
 28562  0138E8  6EE9               	movwf	fsr0l,c
 28563  0138EA  0EFF               	movlw	255
 28564  0138EC  20E2               	addwfc	fsr1h,w,c
 28565  0138EE  6EEA               	movwf	fsr0h,c
 28566  0138F0  50EF               	movf	indf0,w,c
 28567  0138F2  26DE               	addwf	postinc2,f,c
 28568  0138F4  0E00               	movlw	0
 28569  0138F6  22DE               	addwfc	postinc2,f,c
 28570  0138F8  22DE               	addwfc	postinc2,f,c
 28571  0138FA  22DE               	addwfc	postinc2,f,c
 28572                           
 28573                           ;stkvar	_grs @ sp[(-13)+4]
 28574  0138FC  50E1               	movf	fsr1l,w,c
 28575  0138FE  0FF7               	addlw	-9
 28576  013900  6ED9               	movwf	fsr2l,c
 28577  013902  50E2               	movf	fsr1h,w,c
 28578  013904  6EDA               	movwf	fsr2h,c
 28579  013906  0EFF               	movlw	255
 28580  013908  22DA               	addwfc	fsr2h,f,c
 28581  01390A  0E08               	movlw	8
 28582  01390C                     u6785:
 28583  01390C  90D8               	bcf	status,0,c
 28584  01390E  36DE               	rlcf	postinc2,f,c
 28585  013910  36DE               	rlcf	postinc2,f,c
 28586  013912  36DE               	rlcf	postinc2,f,c
 28587  013914  36DD               	rlcf	postdec2,f,c
 28588  013916  52DD               	movf	postdec2,f,c
 28589  013918  52DD               	movf	postdec2,f,c
 28590  01391A  2EE8               	decfsz	wreg,f,c
 28591  01391C  D7F7               	goto	u6785
 28592  01391E  0E82               	movlw	130
 28593  013920  6E0B               	movwf	(btemp+10)^0,c
 28594  013922  0EFF               	movlw	255
 28595  013924  6E0C               	movwf	(btemp+11)^0,c
 28596                           
 28597                           ;stkvar	_bexp @ sp[(-13)+10]
 28598  013926  0EFD               	movlw	-3
 28599  013928  50E3               	movf	plusw1,w,c
 28600  01392A  6E09               	movwf	(btemp+8)^0,c
 28601  01392C  6A0A               	clrf	(btemp+9)^0,c
 28602                           
 28603                           ;stkvar	_aexp @ sp[(-13)+11]
 28604  01392E  0EFE               	movlw	-2
 28605  013930  50E3               	movf	plusw1,w,c
 28606  013932  2609               	addwf	(btemp+8)^0,f,c
 28607  013934  0E00               	movlw	0
 28608  013936  220A               	addwfc	(btemp+9)^0,f,c
 28609  013938  500B               	movf	(btemp+10)^0,w,c
 28610  01393A  2609               	addwf	(btemp+8)^0,f,c
 28611  01393C  500C               	movf	(btemp+11)^0,w,c
 28612  01393E  220A               	addwfc	(btemp+9)^0,f,c
 28613                           
 28614                           ;stkvar	_temp @ sp[(-13)+8]
 28615  013940  0EFB               	movlw	-5
 28616  013942  0060  F027  FFE3   	movff	btemp+8,plusw1
 28617  013948  0EFC               	movlw	-4
 28618  01394A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28619  013950  D021               	goto	l8329
 28620  013952                     l8319:
 28621                           
 28622                           ;stkvar	_prod @ sp[(-13)+0]
 28623  013952  90D8               	bcf	status,0,c
 28624  013954  0EF3               	movlw	-13
 28625  013956  36E3               	rlcf	plusw1,f,c
 28626  013958  0EF4               	movlw	-12
 28627  01395A  36E3               	rlcf	plusw1,f,c
 28628  01395C  0EF5               	movlw	-11
 28629  01395E  36E3               	rlcf	plusw1,f,c
 28630  013960  0EF6               	movlw	-10
 28631  013962  36E3               	rlcf	plusw1,f,c
 28632                           
 28633                           ;stkvar	_grs @ sp[(-13)+4]
 28634  013964  0EFA               	movlw	-6
 28635  013966  AEE3               	btfss	plusw1,7,c
 28636  013968  D002               	goto	l8325
 28637                           
 28638                           ;stkvar	_prod @ sp[(-13)+0]
 28639  01396A  0EF3               	movlw	-13
 28640  01396C  80E3               	bsf	plusw1,0,c
 28641  01396E                     l8325:
 28642                           
 28643                           ;stkvar	_grs @ sp[(-13)+4]
 28644  01396E  90D8               	bcf	status,0,c
 28645  013970  0EF7               	movlw	-9
 28646  013972  36E3               	rlcf	plusw1,f,c
 28647  013974  0EF8               	movlw	-8
 28648  013976  36E3               	rlcf	plusw1,f,c
 28649  013978  0EF9               	movlw	-7
 28650  01397A  36E3               	rlcf	plusw1,f,c
 28651  01397C  0EFA               	movlw	-6
 28652  01397E  36E3               	rlcf	plusw1,f,c
 28653                           
 28654                           ;stkvar	_temp @ sp[(-13)+8]
 28655  013980  50E1               	movf	fsr1l,w,c
 28656  013982  0FFB               	addlw	-5
 28657  013984  6ED9               	movwf	fsr2l,c
 28658  013986  50E2               	movf	fsr1h,w,c
 28659  013988  6EDA               	movwf	fsr2h,c
 28660  01398A  0EFF               	movlw	255
 28661  01398C  22DA               	addwfc	fsr2h,f,c
 28662  01398E  06DE               	decf	postinc2,f,c
 28663  013990  0E00               	movlw	0
 28664  013992  5ADD               	subwfb	postdec2,f,c
 28665  013994                     l8329:
 28666                           
 28667                           ;stkvar	_prod @ sp[(-13)+0]
 28668  013994  0EF5               	movlw	-11
 28669  013996  AEE3               	btfss	plusw1,7,c
 28670  013998  D7DC               	goto	l8319
 28671                           
 28672                           ;stkvar	_aexp @ sp[(-13)+11]
 28673  01399A  0EFE               	movlw	-2
 28674  01399C  6AE3               	clrf	plusw1,c
 28675                           
 28676                           ;stkvar	_grs @ sp[(-13)+4]
 28677  01399E  0EFA               	movlw	-6
 28678  0139A0  AEE3               	btfss	plusw1,7,c
 28679  0139A2  D020               	goto	l8343
 28680                           
 28681                           ;stkvar	_grs @ sp[(-13)+4]
 28682  0139A4  50E1               	movf	fsr1l,w,c
 28683  0139A6  0FF7               	addlw	-9
 28684  0139A8  6ED9               	movwf	fsr2l,c
 28685  0139AA  50E2               	movf	fsr1h,w,c
 28686  0139AC  6EDA               	movwf	fsr2h,c
 28687  0139AE  0EFF               	movlw	255
 28688  0139B0  22DA               	addwfc	fsr2h,f,c
 28689  0139B2  0EFF               	movlw	255
 28690  0139B4  14DE               	andwf	postinc2,w,c
 28691  0139B6  6E09               	movwf	(btemp+8)^0,c
 28692  0139B8  0EFF               	movlw	255
 28693  0139BA  14DE               	andwf	postinc2,w,c
 28694  0139BC  6E0A               	movwf	(btemp+9)^0,c
 28695  0139BE  0EFF               	movlw	255
 28696  0139C0  14DE               	andwf	postinc2,w,c
 28697  0139C2  6E0B               	movwf	(btemp+10)^0,c
 28698  0139C4  0E7F               	movlw	127
 28699  0139C6  14DE               	andwf	postinc2,w,c
 28700  0139C8  6E0C               	movwf	(btemp+11)^0,c
 28701  0139CA  5009               	movf	(btemp+8)^0,w,c
 28702  0139CC  100A               	iorwf	(btemp+9)^0,w,c
 28703  0139CE  100B               	iorwf	(btemp+10)^0,w,c
 28704  0139D0  100C               	iorwf	(btemp+11)^0,w,c
 28705  0139D2  B4D8               	btfsc	status,2,c
 28706  0139D4  D004               	goto	l8339
 28707  0139D6                     u6820:
 28708                           
 28709                           ;stkvar	_aexp @ sp[(-13)+11]
 28710  0139D6  0EFE               	movlw	-2
 28711  0139D8  6AE3               	clrf	plusw1,c
 28712  0139DA  2AE3               	incf	plusw1,f,c
 28713  0139DC  D003               	goto	l8343
 28714  0139DE                     l8339:
 28715                           
 28716                           ;stkvar	_prod @ sp[(-13)+0]
 28717  0139DE  0EF3               	movlw	-13
 28718  0139E0  B0E3               	btfsc	plusw1,0,c
 28719  0139E2  D7F9               	goto	u6820
 28720  0139E4                     l8343:
 28721                           
 28722                           ;stkvar	_aexp @ sp[(-13)+11]
 28723  0139E4  0EFE               	movlw	-2
 28724  0139E6  50E3               	movf	plusw1,w,c
 28725  0139E8  B4D8               	btfsc	status,2,c
 28726  0139EA  D036               	goto	l8353
 28727                           
 28728                           ;stkvar	_prod @ sp[(-13)+0]
 28729  0139EC  50E1               	movf	fsr1l,w,c
 28730  0139EE  0FF3               	addlw	-13
 28731  0139F0  6ED9               	movwf	fsr2l,c
 28732  0139F2  50E2               	movf	fsr1h,w,c
 28733  0139F4  6EDA               	movwf	fsr2h,c
 28734  0139F6  0EFF               	movlw	255
 28735  0139F8  22DA               	addwfc	fsr2h,f,c
 28736  0139FA  2ADE               	incf	postinc2,f,c
 28737  0139FC  0E00               	movlw	0
 28738  0139FE  22DE               	addwfc	postinc2,f,c
 28739  013A00  22DE               	addwfc	postinc2,f,c
 28740  013A02  22DE               	addwfc	postinc2,f,c
 28741                           
 28742                           ;stkvar	_prod @ sp[(-13)+0]
 28743  013A04  0EF6               	movlw	-10
 28744  013A06  A0E3               	btfss	plusw1,0,c
 28745  013A08  D027               	goto	l8353
 28746  013A0A  0E01               	movlw	1
 28747  013A0C  6E0C               	movwf	(btemp+11)^0,c
 28748                           
 28749                           ;stkvar	_prod @ sp[(-13)+0]
 28750  013A0E  50E1               	movf	fsr1l,w,c
 28751  013A10  0FF3               	addlw	-13
 28752  013A12  6ED9               	movwf	fsr2l,c
 28753  013A14  50E2               	movf	fsr1h,w,c
 28754  013A16  6EDA               	movwf	fsr2h,c
 28755  013A18  0EFF               	movlw	255
 28756  013A1A  22DA               	addwfc	fsr2h,f,c
 28757  013A1C  280C               	incf	(btemp+11)^0,w,c
 28758  013A1E  52DE               	movf	postinc2,f,c
 28759  013A20  D008               	goto	u6860
 28760  013A22                     u6865:
 28761  013A22  52DE               	movf	postinc2,f,c
 28762  013A24  90D8               	bcf	status,0,c
 28763  013A26  BEDC               	btfsc	preinc2,7,c
 28764  013A28  80D8               	bsf	status,0,c
 28765  013A2A  32DD               	rrcf	postdec2,f,c
 28766  013A2C  32DD               	rrcf	postdec2,f,c
 28767  013A2E  32DD               	rrcf	postdec2,f,c
 28768  013A30  32DE               	rrcf	postinc2,f,c
 28769  013A32                     u6860:
 28770  013A32  2EE8               	decfsz	wreg,f,c
 28771  013A34  D7F6               	goto	u6865
 28772                           
 28773                           ;stkvar	_temp @ sp[(-13)+8]
 28774  013A36  0EFB               	movlw	-5
 28775  013A38  50E3               	movf	plusw1,w,c
 28776  013A3A  0F01               	addlw	1
 28777  013A3C  6E01               	movwf	btemp^0,c
 28778  013A3E  0EFB               	movlw	-5
 28779  013A40  0060  F007  FFE3   	movff	btemp,plusw1
 28780  013A46  6A01               	clrf	btemp^0,c
 28781  013A48  0EFC               	movlw	-4
 28782  013A4A  50E3               	movf	plusw1,w,c
 28783  013A4C  2001               	addwfc	btemp^0,w,c
 28784  013A4E  6E01               	movwf	btemp^0,c
 28785  013A50  0EFC               	movlw	-4
 28786  013A52  0060  F007  FFE3   	movff	btemp,plusw1
 28787  013A58                     l8353:
 28788                           
 28789                           ;stkvar	_temp @ sp[(-13)+8]
 28790  013A58  0EFC               	movlw	-4
 28791  013A5A  BEE3               	btfsc	plusw1,7,c
 28792  013A5C  D020               	goto	l8357
 28793  013A5E  0EFC               	movlw	-4
 28794  013A60  50E3               	movf	plusw1,w,c
 28795  013A62  E104               	bnz	u6870
 28796  013A64  0EFB               	movlw	-5
 28797  013A66  28E3               	incf	plusw1,w,c
 28798  013A68  A0D8               	btfss	status,0,c
 28799  013A6A  D019               	goto	l8357
 28800  013A6C                     u6870:
 28801  013A6C  0E00               	movlw	0
 28802  013A6E  6E09               	movwf	(btemp+8)^0,c
 28803  013A70  0E00               	movlw	0
 28804  013A72  6E0A               	movwf	(btemp+9)^0,c
 28805  013A74  0E80               	movlw	128
 28806  013A76  6E0B               	movwf	(btemp+10)^0,c
 28807  013A78  0E7F               	movlw	127
 28808  013A7A  6E0C               	movwf	(btemp+11)^0,c
 28809                           
 28810                           ;stkvar	_prod @ sp[(-13)+0]
 28811  013A7C  0EF3               	movlw	-13
 28812  013A7E  0060  F027  FFE3   	movff	btemp+8,plusw1
 28813  013A84  0EF4               	movlw	-12
 28814  013A86  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28815  013A8C  0EF5               	movlw	-11
 28816  013A8E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28817  013A94  0EF6               	movlw	-10
 28818  013A96  0060  F033  FFE3   	movff	btemp+11,plusw1
 28819  013A9C  D044               	goto	l8373
 28820  013A9E                     l8357:
 28821                           
 28822                           ;stkvar	_temp @ sp[(-13)+8]
 28823  013A9E  0EFC               	movlw	-4
 28824  013AA0  BEE3               	btfsc	plusw1,7,c
 28825  013AA2  D007               	goto	u6880
 28826  013AA4  0EFC               	movlw	-4
 28827  013AA6  50E3               	movf	plusw1,w,c
 28828  013AA8  E10F               	bnz	l8363
 28829  013AAA  0EFB               	movlw	-5
 28830  013AAC  04E3               	decf	plusw1,w,c
 28831  013AAE  B0D8               	btfsc	status,0,c
 28832  013AB0  D00B               	goto	l8363
 28833  013AB2                     u6880:
 28834                           
 28835                           ;stkvar	_prod @ sp[(-13)+0]
 28836  013AB2  0EF3               	movlw	-13
 28837  013AB4  6AE3               	clrf	plusw1,c
 28838  013AB6  0EF4               	movlw	-12
 28839  013AB8  6AE3               	clrf	plusw1,c
 28840  013ABA  0EF5               	movlw	-11
 28841  013ABC  6AE3               	clrf	plusw1,c
 28842  013ABE  0EF6               	movlw	-10
 28843  013AC0  6AE3               	clrf	plusw1,c
 28844                           
 28845                           ;stkvar	_sign @ sp[(-13)+12]
 28846  013AC2  0EFF               	movlw	-1
 28847  013AC4  6AE3               	clrf	plusw1,c
 28848  013AC6  D02F               	goto	l8373
 28849  013AC8                     l8363:
 28850                           
 28851                           ;stkvar	_temp @ sp[(-13)+8]
 28852                           ;stkvar	_bexp @ sp[(-13)+10]
 28853  013AC8  0EFB               	movlw	-5
 28854  013ACA  006F FF8C  F001    	movff	plusw1,btemp
 28855  013AD0  0EFD               	movlw	-3
 28856  013AD2  0060  F007  FFE3   	movff	btemp,plusw1
 28857                           
 28858                           ;stkvar	_prod @ sp[(-13)+0]
 28859  013AD8  50E1               	movf	fsr1l,w,c
 28860  013ADA  0FF3               	addlw	-13
 28861  013ADC  6ED9               	movwf	fsr2l,c
 28862  013ADE  50E2               	movf	fsr1h,w,c
 28863  013AE0  6EDA               	movwf	fsr2h,c
 28864  013AE2  0EFF               	movlw	255
 28865  013AE4  22DA               	addwfc	fsr2h,f,c
 28866  013AE6  0EFF               	movlw	255
 28867  013AE8  16DE               	andwf	postinc2,f,c
 28868  013AEA  0EFF               	movlw	255
 28869  013AEC  16DE               	andwf	postinc2,f,c
 28870  013AEE  0E7F               	movlw	127
 28871  013AF0  16DE               	andwf	postinc2,f,c
 28872  013AF2  0E00               	movlw	0
 28873  013AF4  16DE               	andwf	postinc2,f,c
 28874                           
 28875                           ;stkvar	_bexp @ sp[(-13)+10]
 28876  013AF6  0EFD               	movlw	-3
 28877  013AF8  A0E3               	btfss	plusw1,0,c
 28878  013AFA  D008               	goto	l8371
 28879                           
 28880                           ;stkvar	_prod @ sp[(-13)+0]
 28881  013AFC  0EF5               	movlw	245
 28882  013AFE  24E1               	addwf	fsr1l,w,c
 28883  013B00  6ED9               	movwf	fsr2l,c
 28884  013B02  0EFF               	movlw	255
 28885  013B04  20E2               	addwfc	fsr1h,w,c
 28886  013B06  6EDA               	movwf	fsr2h,c
 28887  013B08  0E00               	movlw	0
 28888  013B0A  8EDB               	bsf	plusw2,7,c
 28889  013B0C                     l8371:
 28890                           
 28891                           ;stkvar	_prod @ sp[(-13)+0]
 28892  013B0C  0EF6               	movlw	246
 28893  013B0E  24E1               	addwf	fsr1l,w,c
 28894  013B10  6ED9               	movwf	fsr2l,c
 28895  013B12  0EFF               	movlw	255
 28896  013B14  20E2               	addwfc	fsr1h,w,c
 28897  013B16  6EDA               	movwf	fsr2h,c
 28898                           
 28899                           ;stkvar	_bexp @ sp[(-13)+10]
 28900  013B18  0EFD               	movlw	-3
 28901  013B1A  006F FF8C  F00C    	movff	plusw1,btemp+11
 28902  013B20  90D8               	bcf	status,0,c
 28903  013B22  300C               	rrcf	(btemp+11)^0,w,c
 28904  013B24  6EDF               	movwf	indf2,c
 28905  013B26                     l8373:
 28906                           
 28907                           ;stkvar	_sign @ sp[(-13)+12]
 28908  013B26  0EFF               	movlw	-1
 28909  013B28  006F FF8C  F00C    	movff	plusw1,btemp+11
 28910                           
 28911                           ;stkvar	_prod @ sp[(-13)+0]
 28912  013B2E  0EF6               	movlw	246
 28913  013B30  24E1               	addwf	fsr1l,w,c
 28914  013B32  6ED9               	movwf	fsr2l,c
 28915  013B34  0EFF               	movlw	255
 28916  013B36  20E2               	addwfc	fsr1h,w,c
 28917  013B38  6EDA               	movwf	fsr2h,c
 28918  013B3A  500C               	movf	(btemp+11)^0,w,c
 28919  013B3C  12DF               	iorwf	indf2,f,c
 28920                           
 28921                           ;stkvar	_prod @ sp[(-13)+0]
 28922  013B3E  0EF3               	movlw	-13
 28923  013B40  006F FF8C  F001    	movff	plusw1,btemp
 28924  013B46  0EF4               	movlw	-12
 28925  013B48  006F FF8C  F002    	movff	plusw1,btemp+1
 28926  013B4E  0EF5               	movlw	-11
 28927  013B50  006F FF8C  F003    	movff	plusw1,btemp+2
 28928  013B56  0EF6               	movlw	-10
 28929  013B58  006F FF8C  F004    	movff	plusw1,btemp+3
 28930  013B5E                     l3018:
 28931                           
 28932                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 28933  013B5E  0EEB               	movlw	235
 28934  013B60  26E1               	addwf	fsr1l,f,c
 28935  013B62  0EFF               	movlw	255
 28936  013B64  22E2               	addwfc	fsr1h,f,c
 28937  013B66  0012               	return		;funcret
 28938  013B68                     __end_of___flmul:
 28939                           	opt callstack 0
 28940                           
 28941 ;; *************** function _SYSTEM_Initialize *****************
 28942 ;; Defined at:
 28943 ;;		line 50 in file "mcc_generated_files/mcc.c"
 28944 ;; Parameters:    Size  Location     Type
 28945 ;;		None
 28946 ;; Auto vars:     Size  Location     Type
 28947 ;;		None
 28948 ;; Return value:  Size  Location     Type
 28949 ;;                  1  [STACK] void 
 28950 ;; Registers used:
 28951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 28952 ;; Tracked objects:
 28953 ;;		On entry : 0/0
 28954 ;;		On exit  : 3F/3C
 28955 ;;		Unchanged: 0/0
 28956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28961 ;;Total ram usage:        0 bytes
 28962 ;; Hardware stack levels used:    1
 28963 ;; Hardware stack levels required when called:   17
 28964 ;; This function calls:
 28965 ;;		_ADCC_Initialize
 28966 ;;		_CLKREF_Initialize
 28967 ;;		_DMA1_Initialize
 28968 ;;		_DMA2_Initialize
 28969 ;;		_EXT_INT_Initialize
 28970 ;;		_FVR_Initialize
 28971 ;;		_INTERRUPT_Initialize
 28972 ;;		_OSCILLATOR_Initialize
 28973 ;;		_PIN_MANAGER_Initialize
 28974 ;;		_PMD_Initialize
 28975 ;;		_PWM8_Initialize
 28976 ;;		_SPI1_Initialize
 28977 ;;		_TMR2_Initialize
 28978 ;;		_TMR3_Initialize
 28979 ;;		_TMR5_Initialize
 28980 ;;		_TMR6_Initialize
 28981 ;;		_UART1_Initialize
 28982 ;;		_UART2_Initialize
 28983 ;; This function is called by:
 28984 ;;		_main
 28985 ;; This function uses a reentrant model
 28986 ;;
 28987                           
 28988                           	psect	text107
 28989  01B18C                     __ptext107:
 28990                           	opt callstack 0
 28991  01B18C                     _SYSTEM_Initialize:
 28992                           	opt callstack 13
 28993                           
 28994                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 28995                           
 28996                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28997                           ;incstack = 0
 28998  01B18C  ECD3  F0D6         	call	_INTERRUPT_Initialize	;wreg free
 28999                           
 29000                           ; BSR set to: 57
 29001                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 29002  01B190  ECF6  F0DE         	call	_PMD_Initialize	;wreg free
 29003                           
 29004                           ; BSR set to: 57
 29005                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 29006  01B194  EC25  F0D4         	call	_PIN_MANAGER_Initialize	;wreg free
 29007                           
 29008                           ; BSR set to: 58
 29009                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 29010  01B198  ECEB  F0DE         	call	_OSCILLATOR_Initialize	;wreg free
 29011                           
 29012                           ; BSR set to: 57
 29013                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 29014  01B19C  EC79  F0DF         	call	_FVR_Initialize	;wreg free
 29015                           
 29016                           ; BSR set to: 62
 29017                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 29018  01B1A0  EC69  F0D6         	call	_ADCC_Initialize	;wreg free
 29019                           
 29020                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 29021  01B1A4  ECC9  F0DE         	call	_TMR2_Initialize	;wreg free
 29022                           
 29023                           ; BSR set to: 57
 29024                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 29025  01B1A8  ECE0  F0DE         	call	_PWM8_Initialize	;wreg free
 29026                           
 29027                           ; BSR set to: 63
 29028                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 29029  01B1AC  EC6A  F0DB         	call	_EXT_INT_Initialize	;wreg free
 29030                           
 29031                           ; BSR set to: 57
 29032                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 29033  01B1B0  EC3E  F0DC         	call	_TMR6_Initialize	;wreg free
 29034                           
 29035                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 29036  01B1B4  EC57  F0D9         	call	_TMR3_Initialize	;wreg free
 29037                           
 29038                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 29039  01B1B8  EC33  F0D9         	call	_TMR5_Initialize	;wreg free
 29040                           
 29041                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 29042  01B1BC  EC0F  F0D9         	call	_UART1_Initialize	;wreg free
 29043                           
 29044                           ; BSR set to: 57
 29045                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 29046  01B1C0  EC9A  F0D7         	call	_UART2_Initialize	;wreg free
 29047                           
 29048                           ; BSR set to: 57
 29049                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 29050  01B1C4  ECD5  F0DE         	call	_SPI1_Initialize	;wreg free
 29051                           
 29052                           ; BSR set to: 61
 29053                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 29054  01B1C8  ECF7  F0D7         	call	_DMA2_Initialize	;wreg free
 29055                           
 29056                           ; BSR set to: 59
 29057                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 29058  01B1CC  EC34  F0D6         	call	_DMA1_Initialize	;wreg free
 29059                           
 29060                           ; BSR set to: 59
 29061                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 29062  01B1D0  EC4D  F0DF         	call	_CLKREF_Initialize	;wreg free
 29063                           
 29064                           ; BSR set to: 60
 29065                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 29066  01B1D4  0012               	return		;funcret
 29067  01B1D6                     __end_of_SYSTEM_Initialize:
 29068                           	opt callstack 0
 29069                           
 29070 ;; *************** function _UART2_Initialize *****************
 29071 ;; Defined at:
 29072 ;;		line 78 in file "mcc_generated_files/uart2.c"
 29073 ;; Parameters:    Size  Location     Type
 29074 ;;		None
 29075 ;; Auto vars:     Size  Location     Type
 29076 ;;		None
 29077 ;; Return value:  Size  Location     Type
 29078 ;;                  1  [STACK] void 
 29079 ;; Registers used:
 29080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29081 ;; Tracked objects:
 29082 ;;		On entry : 3F/39
 29083 ;;		On exit  : 3F/39
 29084 ;;		Unchanged: 0/0
 29085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29090 ;;Total ram usage:        0 bytes
 29091 ;; Hardware stack levels used:    1
 29092 ;; Hardware stack levels required when called:   16
 29093 ;; This function calls:
 29094 ;;		_UART2_SetRxInterruptHandler
 29095 ;;		_UART2_SetTxInterruptHandler
 29096 ;; This function is called by:
 29097 ;;		_SYSTEM_Initialize
 29098 ;; This function uses a reentrant model
 29099 ;;
 29100                           
 29101                           	psect	text108
 29102  01AF34                     __ptext108:
 29103                           	opt callstack 0
 29104  01AF34                     _UART2_Initialize:
 29105                           	opt callstack 13
 29106                           
 29107                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 29108                           
 29109                           ; BSR set to: 60
 29110                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29111                           ;incstack = 0
 29112  01AF34  0139               	movlb	57	; () banked
 29113  01AF36  9596               	bcf	150,2,b	;volatile
 29114                           
 29115                           ; BSR set to: 57
 29116                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 29117  01AF38  0E90               	movlw	low _UART2_Receive_ISR
 29118  01AF3A  6EE6               	movwf	postinc1,c
 29119  01AF3C  0EBC               	movlw	high _UART2_Receive_ISR
 29120  01AF3E  6EE6               	movwf	postinc1,c
 29121  01AF40  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 29122  01AF42  6EE6               	movwf	postinc1,c
 29123  01AF44  ECCB  F0DC         	call	_UART2_SetRxInterruptHandler	;wreg free
 29124                           
 29125                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 29126  01AF48  0139               	movlb	57	; () banked
 29127  01AF4A  9796               	bcf	150,3,b	;volatile
 29128                           
 29129                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 29130  01AF4C  0E50               	movlw	low _UART2_Transmit_ISR
 29131  01AF4E  6EE6               	movwf	postinc1,c
 29132  01AF50  0EB8               	movlw	high _UART2_Transmit_ISR
 29133  01AF52  6EE6               	movwf	postinc1,c
 29134  01AF54  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 29135  01AF56  6EE6               	movwf	postinc1,c
 29136  01AF58  ECB7  F0DC         	call	_UART2_SetTxInterruptHandler	;wreg free
 29137                           
 29138                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 29139  01AF5C  013D               	movlb	61	; () banked
 29140  01AF5E  6BD4               	clrf	212,b	;volatile
 29141                           
 29142                           ; BSR set to: 61
 29143                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 29144  01AF60  6BD6               	clrf	214,b	;volatile
 29145                           
 29146                           ; BSR set to: 61
 29147                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 29148  01AF62  6BD8               	clrf	216,b	;volatile
 29149                           
 29150                           ; BSR set to: 61
 29151                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 29152  01AF64  0EB0               	movlw	176
 29153  01AF66  6FDA               	movwf	218,b	;volatile
 29154                           
 29155                           ; BSR set to: 61
 29156                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 29157  01AF68  0E80               	movlw	128
 29158  01AF6A  6FDB               	movwf	219,b	;volatile
 29159                           
 29160                           ; BSR set to: 61
 29161                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 29162  01AF6C  6BDC               	clrf	220,b	;volatile
 29163                           
 29164                           ; BSR set to: 61
 29165                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 29166  01AF6E  0E82               	movlw	130
 29167  01AF70  6FDD               	movwf	221,b	;volatile
 29168                           
 29169                           ; BSR set to: 61
 29170                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 29171  01AF72  0E06               	movlw	6
 29172  01AF74  6FDE               	movwf	222,b	;volatile
 29173                           
 29174                           ; BSR set to: 61
 29175                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 29176  01AF76  6BDF               	clrf	223,b	;volatile
 29177                           
 29178                           ; BSR set to: 61
 29179                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 29180  01AF78  6BE0               	clrf	224,b	;volatile
 29181                           
 29182                           ; BSR set to: 61
 29183                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 29184  01AF7A  6BE1               	clrf	225,b	;volatile
 29185                           
 29186                           ; BSR set to: 61
 29187                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 29188  01AF7C  6BE2               	clrf	226,b	;volatile
 29189                           
 29190                           ; BSR set to: 61
 29191                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 29192  01AF7E  0100               	movlb	0	; () banked
 29193  01AF80  6BBB               	clrf	_uart2TxHead& (0+255),b	;volatile
 29194                           
 29195                           ; BSR set to: 0
 29196                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 29197  01AF82  6A45               	clrf	_uart2TxTail^0,c	;volatile
 29198                           
 29199                           ; BSR set to: 0
 29200                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 29201  01AF84  0E40               	movlw	64
 29202  01AF86  6E44               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 29203                           
 29204                           ; BSR set to: 0
 29205                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 29206  01AF88  6A43               	clrf	_uart2RxHead^0,c	;volatile
 29207                           
 29208                           ; BSR set to: 0
 29209                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 29210  01AF8A  6BBA               	clrf	_uart2RxTail& (0+255),b	;volatile
 29211                           
 29212                           ; BSR set to: 0
 29213                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 29214  01AF8C  6BB9               	clrf	_uart2RxCount& (0+255),b	;volatile
 29215                           
 29216                           ; BSR set to: 0
 29217                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 29218  01AF8E  0139               	movlb	57	; () banked
 29219  01AF90  8596               	bsf	150,2,b	;volatile
 29220                           
 29221                           ; BSR set to: 57
 29222                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29223  01AF92  0012               	return		;funcret
 29224  01AF94                     __end_of_UART2_Initialize:
 29225                           	opt callstack 0
 29226                           
 29227 ;; *************** function _UART2_SetTxInterruptHandler *****************
 29228 ;; Defined at:
 29229 ;;		line 252 in file "mcc_generated_files/uart2.c"
 29230 ;; Parameters:    Size  Location     Type
 29231 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29232 ;;		 -> UART2_Transmit_ISR(1), 
 29233 ;; Auto vars:     Size  Location     Type
 29234 ;;		None
 29235 ;; Return value:  Size  Location     Type
 29236 ;;                  1  [STACK] void 
 29237 ;; Registers used:
 29238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29239 ;; Tracked objects:
 29240 ;;		On entry : 3F/39
 29241 ;;		On exit  : 0/0
 29242 ;;		Unchanged: 0/0
 29243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29248 ;;Total ram usage:        0 bytes
 29249 ;; Hardware stack levels used:    1
 29250 ;; Hardware stack levels required when called:   15
 29251 ;; This function calls:
 29252 ;;		Nothing
 29253 ;; This function is called by:
 29254 ;;		_UART2_Initialize
 29255 ;; This function uses a reentrant model
 29256 ;;
 29257                           
 29258                           	psect	text109
 29259  01B96E                     __ptext109:
 29260                           	opt callstack 0
 29261  01B96E                     _UART2_SetTxInterruptHandler:
 29262                           	opt callstack 13
 29263                           
 29264                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 29265                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29266                           
 29267                           ; BSR set to: 57
 29268                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29269                           ;incstack = 0
 29270  01B96E  50E1               	movf	fsr1l,w,c
 29271  01B970  0FFD               	addlw	-3
 29272  01B972  6ED9               	movwf	fsr2l,c
 29273  01B974  50E2               	movf	fsr1h,w,c
 29274  01B976  6EDA               	movwf	fsr2h,c
 29275  01B978  0EFF               	movlw	255
 29276  01B97A  22DA               	addwfc	fsr2h,f,c
 29277  01B97C  006F FF78  F0A2    	movff	postinc2,_UART2_TxInterruptHandler
 29278  01B982  006F FF78  F0A3    	movff	postinc2,_UART2_TxInterruptHandler+1
 29279  01B988  006F FF74  F0A4    	movff	postdec2,_UART2_TxInterruptHandler+2
 29280                           
 29281                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29282  01B98E  52E5               	movf	postdec1,f,c
 29283  01B990  52E5               	movf	postdec1,f,c
 29284  01B992  52E5               	movf	postdec1,f,c
 29285  01B994  0012               	return		;funcret
 29286  01B996                     __end_of_UART2_SetTxInterruptHandler:
 29287                           	opt callstack 0
 29288                           
 29289 ;; *************** function _UART2_SetRxInterruptHandler *****************
 29290 ;; Defined at:
 29291 ;;		line 248 in file "mcc_generated_files/uart2.c"
 29292 ;; Parameters:    Size  Location     Type
 29293 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29294 ;;		 -> UART2_Receive_ISR(1), 
 29295 ;; Auto vars:     Size  Location     Type
 29296 ;;		None
 29297 ;; Return value:  Size  Location     Type
 29298 ;;                  1  [STACK] void 
 29299 ;; Registers used:
 29300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29301 ;; Tracked objects:
 29302 ;;		On entry : 3F/39
 29303 ;;		On exit  : 0/0
 29304 ;;		Unchanged: 0/0
 29305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29310 ;;Total ram usage:        0 bytes
 29311 ;; Hardware stack levels used:    1
 29312 ;; Hardware stack levels required when called:   15
 29313 ;; This function calls:
 29314 ;;		Nothing
 29315 ;; This function is called by:
 29316 ;;		_UART2_Initialize
 29317 ;; This function uses a reentrant model
 29318 ;;
 29319                           
 29320                           	psect	text110
 29321  01B996                     __ptext110:
 29322                           	opt callstack 0
 29323  01B996                     _UART2_SetRxInterruptHandler:
 29324                           	opt callstack 13
 29325                           
 29326                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 29327                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29328                           
 29329                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29330                           ;incstack = 0
 29331  01B996  50E1               	movf	fsr1l,w,c
 29332  01B998  0FFD               	addlw	-3
 29333  01B99A  6ED9               	movwf	fsr2l,c
 29334  01B99C  50E2               	movf	fsr1h,w,c
 29335  01B99E  6EDA               	movwf	fsr2h,c
 29336  01B9A0  0EFF               	movlw	255
 29337  01B9A2  22DA               	addwfc	fsr2h,f,c
 29338  01B9A4  006F FF78  F0A5    	movff	postinc2,_UART2_RxInterruptHandler
 29339  01B9AA  006F FF78  F0A6    	movff	postinc2,_UART2_RxInterruptHandler+1
 29340  01B9B0  006F FF74  F0A7    	movff	postdec2,_UART2_RxInterruptHandler+2
 29341                           
 29342                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29343  01B9B6  52E5               	movf	postdec1,f,c
 29344  01B9B8  52E5               	movf	postdec1,f,c
 29345  01B9BA  52E5               	movf	postdec1,f,c
 29346  01B9BC  0012               	return		;funcret
 29347  01B9BE                     __end_of_UART2_SetRxInterruptHandler:
 29348                           	opt callstack 0
 29349                           
 29350 ;; *************** function _UART1_Initialize *****************
 29351 ;; Defined at:
 29352 ;;		line 75 in file "mcc_generated_files/uart1.c"
 29353 ;; Parameters:    Size  Location     Type
 29354 ;;		None
 29355 ;; Auto vars:     Size  Location     Type
 29356 ;;		None
 29357 ;; Return value:  Size  Location     Type
 29358 ;;                  1  [STACK] void 
 29359 ;; Registers used:
 29360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29361 ;; Tracked objects:
 29362 ;;		On entry : 0/39
 29363 ;;		On exit  : 3F/39
 29364 ;;		Unchanged: 0/0
 29365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29370 ;;Total ram usage:        0 bytes
 29371 ;; Hardware stack levels used:    1
 29372 ;; Hardware stack levels required when called:   16
 29373 ;; This function calls:
 29374 ;;		_UART1_SetRxInterruptHandler
 29375 ;; This function is called by:
 29376 ;;		_SYSTEM_Initialize
 29377 ;; This function uses a reentrant model
 29378 ;;
 29379                           
 29380                           	psect	text111
 29381  01B21E                     __ptext111:
 29382                           	opt callstack 0
 29383  01B21E                     _UART1_Initialize:
 29384                           	opt callstack 13
 29385                           
 29386                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 29387                           
 29388                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29389                           ;incstack = 0
 29390  01B21E  0139               	movlb	57	; () banked
 29391  01B220  9793               	bcf	147,3,b	;volatile
 29392                           
 29393                           ; BSR set to: 57
 29394                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 29395  01B222  0E4E               	movlw	low _UART1_Receive_ISR
 29396  01B224  6EE6               	movwf	postinc1,c
 29397  01B226  0EBC               	movlw	high _UART1_Receive_ISR
 29398  01B228  6EE6               	movwf	postinc1,c
 29399  01B22A  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 29400  01B22C  6EE6               	movwf	postinc1,c
 29401  01B22E  ECDF  F0DC         	call	_UART1_SetRxInterruptHandler	;wreg free
 29402                           
 29403                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 29404  01B232  013D               	movlb	61	; () banked
 29405  01B234  6BEC               	clrf	236,b	;volatile
 29406                           
 29407                           ; BSR set to: 61
 29408                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 29409  01B236  6BED               	clrf	237,b	;volatile
 29410                           
 29411                           ; BSR set to: 61
 29412                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 29413  01B238  6BEE               	clrf	238,b	;volatile
 29414                           
 29415                           ; BSR set to: 61
 29416                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 29417  01B23A  6BEF               	clrf	239,b	;volatile
 29418                           
 29419                           ; BSR set to: 61
 29420                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 29421  01B23C  6BF0               	clrf	240,b	;volatile
 29422                           
 29423                           ; BSR set to: 61
 29424                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 29425  01B23E  6BF1               	clrf	241,b	;volatile
 29426                           
 29427                           ; BSR set to: 61
 29428                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 29429  01B240  0EB0               	movlw	176
 29430  01B242  6FF2               	movwf	242,b	;volatile
 29431                           
 29432                           ; BSR set to: 61
 29433                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 29434  01B244  0E80               	movlw	128
 29435  01B246  6FF3               	movwf	243,b	;volatile
 29436                           
 29437                           ; BSR set to: 61
 29438                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 29439  01B248  6BF4               	clrf	244,b	;volatile
 29440                           
 29441                           ; BSR set to: 61
 29442                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 29443  01B24A  0E8A               	movlw	138
 29444  01B24C  6FF5               	movwf	245,b	;volatile
 29445                           
 29446                           ; BSR set to: 61
 29447                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 29448  01B24E  6BF6               	clrf	246,b	;volatile
 29449                           
 29450                           ; BSR set to: 61
 29451                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 29452  01B250  6BF7               	clrf	247,b	;volatile
 29453                           
 29454                           ; BSR set to: 61
 29455                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 29456  01B252  6BF8               	clrf	248,b	;volatile
 29457                           
 29458                           ; BSR set to: 61
 29459                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 29460  01B254  6BF9               	clrf	249,b	;volatile
 29461                           
 29462                           ; BSR set to: 61
 29463                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 29464  01B256  6BFA               	clrf	250,b	;volatile
 29465                           
 29466                           ; BSR set to: 61
 29467                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 29468  01B258  6A47               	clrf	_uart1RxHead^0,c	;volatile
 29469                           
 29470                           ; BSR set to: 61
 29471                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 29472  01B25A  6A46               	clrf	_uart1RxTail^0,c	;volatile
 29473                           
 29474                           ; BSR set to: 61
 29475                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 29476  01B25C  0100               	movlb	0	; () banked
 29477  01B25E  6BBC               	clrf	_uart1RxCount& (0+255),b	;volatile
 29478                           
 29479                           ; BSR set to: 0
 29480                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 29481  01B260  0139               	movlb	57	; () banked
 29482  01B262  8793               	bsf	147,3,b	;volatile
 29483                           
 29484                           ; BSR set to: 57
 29485                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29486  01B264  0012               	return		;funcret
 29487  01B266                     __end_of_UART1_Initialize:
 29488                           	opt callstack 0
 29489                           
 29490 ;; *************** function _UART1_SetRxInterruptHandler *****************
 29491 ;; Defined at:
 29492 ;;		line 207 in file "mcc_generated_files/uart1.c"
 29493 ;; Parameters:    Size  Location     Type
 29494 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29495 ;;		 -> UART1_Receive_ISR(1), 
 29496 ;; Auto vars:     Size  Location     Type
 29497 ;;		None
 29498 ;; Return value:  Size  Location     Type
 29499 ;;                  1  [STACK] void 
 29500 ;; Registers used:
 29501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29502 ;; Tracked objects:
 29503 ;;		On entry : 3F/39
 29504 ;;		On exit  : 0/0
 29505 ;;		Unchanged: 0/0
 29506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29511 ;;Total ram usage:        0 bytes
 29512 ;; Hardware stack levels used:    1
 29513 ;; Hardware stack levels required when called:   15
 29514 ;; This function calls:
 29515 ;;		Nothing
 29516 ;; This function is called by:
 29517 ;;		_UART1_Initialize
 29518 ;; This function uses a reentrant model
 29519 ;;
 29520                           
 29521                           	psect	text112
 29522  01B9BE                     __ptext112:
 29523                           	opt callstack 0
 29524  01B9BE                     _UART1_SetRxInterruptHandler:
 29525                           	opt callstack 13
 29526                           
 29527                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 29528                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29529                           
 29530                           ; BSR set to: 57
 29531                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29532                           ;incstack = 0
 29533  01B9BE  50E1               	movf	fsr1l,w,c
 29534  01B9C0  0FFD               	addlw	-3
 29535  01B9C2  6ED9               	movwf	fsr2l,c
 29536  01B9C4  50E2               	movf	fsr1h,w,c
 29537  01B9C6  6EDA               	movwf	fsr2h,c
 29538  01B9C8  0EFF               	movlw	255
 29539  01B9CA  22DA               	addwfc	fsr2h,f,c
 29540  01B9CC  006F FF78  F09F    	movff	postinc2,_UART1_RxInterruptHandler
 29541  01B9D2  006F FF78  F0A0    	movff	postinc2,_UART1_RxInterruptHandler+1
 29542  01B9D8  006F FF74  F0A1    	movff	postdec2,_UART1_RxInterruptHandler+2
 29543                           
 29544                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29545  01B9DE  52E5               	movf	postdec1,f,c
 29546  01B9E0  52E5               	movf	postdec1,f,c
 29547  01B9E2  52E5               	movf	postdec1,f,c
 29548  01B9E4  0012               	return		;funcret
 29549  01B9E6                     __end_of_UART1_SetRxInterruptHandler:
 29550                           	opt callstack 0
 29551                           
 29552 ;; *************** function _TMR6_Initialize *****************
 29553 ;; Defined at:
 29554 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 29555 ;; Parameters:    Size  Location     Type
 29556 ;;		None
 29557 ;; Auto vars:     Size  Location     Type
 29558 ;;		None
 29559 ;; Return value:  Size  Location     Type
 29560 ;;                  1  [STACK] void 
 29561 ;; Registers used:
 29562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29563 ;; Tracked objects:
 29564 ;;		On entry : 3F/39
 29565 ;;		On exit  : 0/0
 29566 ;;		Unchanged: 0/0
 29567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29572 ;;Total ram usage:        0 bytes
 29573 ;; Hardware stack levels used:    1
 29574 ;; Hardware stack levels required when called:   16
 29575 ;; This function calls:
 29576 ;;		_TMR6_SetInterruptHandler
 29577 ;; This function is called by:
 29578 ;;		_SYSTEM_Initialize
 29579 ;; This function uses a reentrant model
 29580 ;;
 29581                           
 29582                           	psect	text113
 29583  01B87C                     __ptext113:
 29584                           	opt callstack 0
 29585  01B87C                     _TMR6_Initialize:
 29586                           	opt callstack 13
 29587                           
 29588                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 29589                           
 29590                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29591                           ;incstack = 0
 29592  01B87C  0E01               	movlw	1
 29593  01B87E  6E96               	movwf	150,c	;volatile
 29594                           
 29595                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 29596  01B880  6A95               	clrf	149,c	;volatile
 29597                           
 29598                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 29599  01B882  6A97               	clrf	151,c	;volatile
 29600                           
 29601                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 29602  01B884  0E7C               	movlw	124
 29603  01B886  6E93               	movwf	147,c	;volatile
 29604                           
 29605                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 29606  01B888  6A92               	clrf	146,c	;volatile
 29607                           
 29608                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 29609  01B88A  0139               	movlb	57	; () banked
 29610  01B88C  91A9               	bcf	169,0,b	;volatile
 29611                           
 29612                           ; BSR set to: 57
 29613                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 29614  01B88E  8199               	bsf	153,0,b	;volatile
 29615                           
 29616                           ; BSR set to: 57
 29617                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 29618  01B890  0E3E               	movlw	low _TMR6_DefaultInterruptHandler
 29619  01B892  6EE6               	movwf	postinc1,c
 29620  01B894  0EB1               	movlw	high _TMR6_DefaultInterruptHandler
 29621  01B896  6EE6               	movwf	postinc1,c
 29622  01B898  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 29623  01B89A  6EE6               	movwf	postinc1,c
 29624  01B89C  ECF3  F0DC         	call	_TMR6_SetInterruptHandler	;wreg free
 29625                           
 29626                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 29627  01B8A0  0EE0               	movlw	224
 29628  01B8A2  6E94               	movwf	148,c	;volatile
 29629                           
 29630                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29631  01B8A4  0012               	return		;funcret
 29632  01B8A6                     __end_of_TMR6_Initialize:
 29633                           	opt callstack 0
 29634                           
 29635 ;; *************** function _TMR6_SetInterruptHandler *****************
 29636 ;; Defined at:
 29637 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 29638 ;; Parameters:    Size  Location     Type
 29639 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29640 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 29641 ;; Auto vars:     Size  Location     Type
 29642 ;;		None
 29643 ;; Return value:  Size  Location     Type
 29644 ;;                  1  [STACK] void 
 29645 ;; Registers used:
 29646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29647 ;; Tracked objects:
 29648 ;;		On entry : 3F/39
 29649 ;;		On exit  : 0/0
 29650 ;;		Unchanged: 0/0
 29651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29656 ;;Total ram usage:        0 bytes
 29657 ;; Hardware stack levels used:    1
 29658 ;; Hardware stack levels required when called:   15
 29659 ;; This function calls:
 29660 ;;		Nothing
 29661 ;; This function is called by:
 29662 ;;		_TMR6_Initialize
 29663 ;; This function uses a reentrant model
 29664 ;;
 29665                           
 29666                           	psect	text114
 29667  01B9E6                     __ptext114:
 29668                           	opt callstack 0
 29669  01B9E6                     _TMR6_SetInterruptHandler:
 29670                           	opt callstack 13
 29671                           
 29672                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 29673                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29674                           
 29675                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29676                           ;incstack = 0
 29677  01B9E6  50E1               	movf	fsr1l,w,c
 29678  01B9E8  0FFD               	addlw	-3
 29679  01B9EA  6ED9               	movwf	fsr2l,c
 29680  01B9EC  50E2               	movf	fsr1h,w,c
 29681  01B9EE  6EDA               	movwf	fsr2h,c
 29682  01B9F0  0EFF               	movlw	255
 29683  01B9F2  22DA               	addwfc	fsr2h,f,c
 29684  01B9F4  006F FF78  F096    	movff	postinc2,_TMR6_InterruptHandler
 29685  01B9FA  006F FF78  F097    	movff	postinc2,_TMR6_InterruptHandler+1
 29686  01BA00  006F FF74  F098    	movff	postdec2,_TMR6_InterruptHandler+2
 29687                           
 29688                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29689  01BA06  52E5               	movf	postdec1,f,c
 29690  01BA08  52E5               	movf	postdec1,f,c
 29691  01BA0A  52E5               	movf	postdec1,f,c
 29692  01BA0C  0012               	return		;funcret
 29693  01BA0E                     __end_of_TMR6_SetInterruptHandler:
 29694                           	opt callstack 0
 29695                           
 29696 ;; *************** function _TMR5_Initialize *****************
 29697 ;; Defined at:
 29698 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 29699 ;; Parameters:    Size  Location     Type
 29700 ;;		None
 29701 ;; Auto vars:     Size  Location     Type
 29702 ;;		None
 29703 ;; Return value:  Size  Location     Type
 29704 ;;                  1  [STACK] void 
 29705 ;; Registers used:
 29706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29707 ;; Tracked objects:
 29708 ;;		On entry : 0/39
 29709 ;;		On exit  : 0/0
 29710 ;;		Unchanged: 0/0
 29711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29716 ;;Total ram usage:        0 bytes
 29717 ;; Hardware stack levels used:    1
 29718 ;; Hardware stack levels required when called:   16
 29719 ;; This function calls:
 29720 ;;		_TMR5_SetInterruptHandler
 29721 ;; This function is called by:
 29722 ;;		_SYSTEM_Initialize
 29723 ;; This function uses a reentrant model
 29724 ;;
 29725                           
 29726                           	psect	text115
 29727  01B266                     __ptext115:
 29728                           	opt callstack 0
 29729  01B266                     _TMR5_Initialize:
 29730                           	opt callstack 13
 29731                           
 29732                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 29733                           
 29734                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29735                           ;incstack = 0
 29736  01B266  6A9B               	clrf	155,c	;volatile
 29737                           
 29738                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 29739  01B268  6A9C               	clrf	156,c	;volatile
 29740                           
 29741                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 29742  01B26A  0E01               	movlw	1
 29743  01B26C  6E9D               	movwf	157,c	;volatile
 29744                           
 29745                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 29746  01B26E  0E63               	movlw	99
 29747  01B270  6E99               	movwf	153,c	;volatile
 29748                           
 29749                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 29750  01B272  0EC0               	movlw	192
 29751  01B274  6E98               	movwf	152,c	;volatile
 29752                           
 29753                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 29754  01B276  5098               	movf	152,w,c	;volatile
 29755  01B278  006F FE64  F001    	movff	16281,btemp	;volatile
 29756  01B27E  6A02               	clrf	(btemp+1)^0,c
 29757  01B280  0060  F004  F002   	movff	btemp,btemp+1
 29758  01B286  6A01               	clrf	btemp^0,c
 29759  01B288  1001               	iorwf	btemp^0,w,c
 29760  01B28A  0100               	movlb	0	; () banked
 29761  01B28C  6FB6               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 29762  01B28E  5002               	movf	(btemp+1)^0,w,c
 29763  01B290  6FB7               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 29764                           
 29765                           ; BSR set to: 0
 29766                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 29767  01B292  0139               	movlb	57	; () banked
 29768  01B294  9DA8               	bcf	168,6,b	;volatile
 29769                           
 29770                           ; BSR set to: 57
 29771                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 29772  01B296  8D98               	bsf	152,6,b	;volatile
 29773                           
 29774                           ; BSR set to: 57
 29775                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 29776  01B298  0EFC               	movlw	low _TMR5_DefaultInterruptHandler
 29777  01B29A  6EE6               	movwf	postinc1,c
 29778  01B29C  0EB5               	movlw	high _TMR5_DefaultInterruptHandler
 29779  01B29E  6EE6               	movwf	postinc1,c
 29780  01B2A0  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 29781  01B2A2  6EE6               	movwf	postinc1,c
 29782  01B2A4  EC07  F0DD         	call	_TMR5_SetInterruptHandler	;wreg free
 29783                           
 29784                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 29785  01B2A8  0E31               	movlw	49
 29786  01B2AA  6E9A               	movwf	154,c	;volatile
 29787                           
 29788                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29789  01B2AC  0012               	return		;funcret
 29790  01B2AE                     __end_of_TMR5_Initialize:
 29791                           	opt callstack 0
 29792                           
 29793 ;; *************** function _TMR5_SetInterruptHandler *****************
 29794 ;; Defined at:
 29795 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 29796 ;; Parameters:    Size  Location     Type
 29797 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29798 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 29799 ;; Auto vars:     Size  Location     Type
 29800 ;;		None
 29801 ;; Return value:  Size  Location     Type
 29802 ;;                  1  [STACK] void 
 29803 ;; Registers used:
 29804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29805 ;; Tracked objects:
 29806 ;;		On entry : 3F/39
 29807 ;;		On exit  : 0/0
 29808 ;;		Unchanged: 0/0
 29809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29814 ;;Total ram usage:        0 bytes
 29815 ;; Hardware stack levels used:    1
 29816 ;; Hardware stack levels required when called:   15
 29817 ;; This function calls:
 29818 ;;		Nothing
 29819 ;; This function is called by:
 29820 ;;		_TMR5_Initialize
 29821 ;; This function uses a reentrant model
 29822 ;;
 29823                           
 29824                           	psect	text116
 29825  01BA0E                     __ptext116:
 29826                           	opt callstack 0
 29827  01BA0E                     _TMR5_SetInterruptHandler:
 29828                           	opt callstack 13
 29829                           
 29830                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 29831                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29832                           
 29833                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29834                           ;incstack = 0
 29835  01BA0E  50E1               	movf	fsr1l,w,c
 29836  01BA10  0FFD               	addlw	-3
 29837  01BA12  6ED9               	movwf	fsr2l,c
 29838  01BA14  50E2               	movf	fsr1h,w,c
 29839  01BA16  6EDA               	movwf	fsr2h,c
 29840  01BA18  0EFF               	movlw	255
 29841  01BA1A  22DA               	addwfc	fsr2h,f,c
 29842  01BA1C  006F FF78  F093    	movff	postinc2,_TMR5_InterruptHandler
 29843  01BA22  006F FF78  F094    	movff	postinc2,_TMR5_InterruptHandler+1
 29844  01BA28  006F FF74  F095    	movff	postdec2,_TMR5_InterruptHandler+2
 29845                           
 29846                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29847  01BA2E  52E5               	movf	postdec1,f,c
 29848  01BA30  52E5               	movf	postdec1,f,c
 29849  01BA32  52E5               	movf	postdec1,f,c
 29850  01BA34  0012               	return		;funcret
 29851  01BA36                     __end_of_TMR5_SetInterruptHandler:
 29852                           	opt callstack 0
 29853                           
 29854 ;; *************** function _TMR3_Initialize *****************
 29855 ;; Defined at:
 29856 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 29857 ;; Parameters:    Size  Location     Type
 29858 ;;		None
 29859 ;; Auto vars:     Size  Location     Type
 29860 ;;		None
 29861 ;; Return value:  Size  Location     Type
 29862 ;;                  1  [STACK] void 
 29863 ;; Registers used:
 29864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29865 ;; Tracked objects:
 29866 ;;		On entry : 0/39
 29867 ;;		On exit  : 0/0
 29868 ;;		Unchanged: 0/0
 29869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29874 ;;Total ram usage:        0 bytes
 29875 ;; Hardware stack levels used:    1
 29876 ;; Hardware stack levels required when called:   16
 29877 ;; This function calls:
 29878 ;;		_TMR3_SetInterruptHandler
 29879 ;; This function is called by:
 29880 ;;		_SYSTEM_Initialize
 29881 ;; This function uses a reentrant model
 29882 ;;
 29883                           
 29884                           	psect	text117
 29885  01B2AE                     __ptext117:
 29886                           	opt callstack 0
 29887  01B2AE                     _TMR3_Initialize:
 29888                           	opt callstack 13
 29889                           
 29890                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 29891                           
 29892                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29893                           ;incstack = 0
 29894  01B2AE  6AA7               	clrf	167,c	;volatile
 29895                           
 29896                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 29897  01B2B0  6AA8               	clrf	168,c	;volatile
 29898                           
 29899                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 29900  01B2B2  0E01               	movlw	1
 29901  01B2B4  6EA9               	movwf	169,c	;volatile
 29902                           
 29903                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 29904  01B2B6  0E3C               	movlw	60
 29905  01B2B8  6EA5               	movwf	165,c	;volatile
 29906                           
 29907                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 29908  01B2BA  0EB0               	movlw	176
 29909  01B2BC  6EA4               	movwf	164,c	;volatile
 29910                           
 29911                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 29912  01B2BE  50A4               	movf	164,w,c	;volatile
 29913  01B2C0  006F FE94  F001    	movff	16293,btemp	;volatile
 29914  01B2C6  6A02               	clrf	(btemp+1)^0,c
 29915  01B2C8  0060  F004  F002   	movff	btemp,btemp+1
 29916  01B2CE  6A01               	clrf	btemp^0,c
 29917  01B2D0  1001               	iorwf	btemp^0,w,c
 29918  01B2D2  0100               	movlb	0	; () banked
 29919  01B2D4  6FB2               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 29920  01B2D6  5002               	movf	(btemp+1)^0,w,c
 29921  01B2D8  6FB3               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 29922                           
 29923                           ; BSR set to: 0
 29924                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 29925  01B2DA  0139               	movlb	57	; () banked
 29926  01B2DC  9DA6               	bcf	166,6,b	;volatile
 29927                           
 29928                           ; BSR set to: 57
 29929                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 29930  01B2DE  8D96               	bsf	150,6,b	;volatile
 29931                           
 29932                           ; BSR set to: 57
 29933                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 29934  01B2E0  0E24               	movlw	low _TMR3_DefaultInterruptHandler
 29935  01B2E2  6EE6               	movwf	postinc1,c
 29936  01B2E4  0EBF               	movlw	high _TMR3_DefaultInterruptHandler
 29937  01B2E6  6EE6               	movwf	postinc1,c
 29938  01B2E8  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 29939  01B2EA  6EE6               	movwf	postinc1,c
 29940  01B2EC  EC1B  F0DD         	call	_TMR3_SetInterruptHandler	;wreg free
 29941                           
 29942                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 29943  01B2F0  0E31               	movlw	49
 29944  01B2F2  6EA6               	movwf	166,c	;volatile
 29945                           
 29946                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29947  01B2F4  0012               	return		;funcret
 29948  01B2F6                     __end_of_TMR3_Initialize:
 29949                           	opt callstack 0
 29950                           
 29951 ;; *************** function _TMR3_SetInterruptHandler *****************
 29952 ;; Defined at:
 29953 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 29954 ;; Parameters:    Size  Location     Type
 29955 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29956 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 29957 ;; Auto vars:     Size  Location     Type
 29958 ;;		None
 29959 ;; Return value:  Size  Location     Type
 29960 ;;                  1  [STACK] void 
 29961 ;; Registers used:
 29962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29963 ;; Tracked objects:
 29964 ;;		On entry : 0/0
 29965 ;;		On exit  : 0/0
 29966 ;;		Unchanged: 0/0
 29967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29972 ;;Total ram usage:        0 bytes
 29973 ;; Hardware stack levels used:    1
 29974 ;; Hardware stack levels required when called:   15
 29975 ;; This function calls:
 29976 ;;		Nothing
 29977 ;; This function is called by:
 29978 ;;		_TMR3_Initialize
 29979 ;;		_init_bsoc
 29980 ;; This function uses a reentrant model
 29981 ;;
 29982                           
 29983                           	psect	text118
 29984  01BA36                     __ptext118:
 29985                           	opt callstack 0
 29986  01BA36                     _TMR3_SetInterruptHandler:
 29987                           	opt callstack 14
 29988                           
 29989                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 29990                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29991                           
 29992                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29993                           ;incstack = 0
 29994  01BA36  50E1               	movf	fsr1l,w,c
 29995  01BA38  0FFD               	addlw	-3
 29996  01BA3A  6ED9               	movwf	fsr2l,c
 29997  01BA3C  50E2               	movf	fsr1h,w,c
 29998  01BA3E  6EDA               	movwf	fsr2h,c
 29999  01BA40  0EFF               	movlw	255
 30000  01BA42  22DA               	addwfc	fsr2h,f,c
 30001  01BA44  006F FF78  F090    	movff	postinc2,_TMR3_InterruptHandler
 30002  01BA4A  006F FF78  F091    	movff	postinc2,_TMR3_InterruptHandler+1
 30003  01BA50  006F FF74  F092    	movff	postdec2,_TMR3_InterruptHandler+2
 30004                           
 30005                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30006  01BA56  52E5               	movf	postdec1,f,c
 30007  01BA58  52E5               	movf	postdec1,f,c
 30008  01BA5A  52E5               	movf	postdec1,f,c
 30009  01BA5C  0012               	return		;funcret
 30010  01BA5E                     __end_of_TMR3_SetInterruptHandler:
 30011                           	opt callstack 0
 30012                           
 30013 ;; *************** function _TMR2_Initialize *****************
 30014 ;; Defined at:
 30015 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 30016 ;; Parameters:    Size  Location     Type
 30017 ;;		None
 30018 ;; Auto vars:     Size  Location     Type
 30019 ;;		None
 30020 ;; Return value:  Size  Location     Type
 30021 ;;                  1  [STACK] void 
 30022 ;; Registers used:
 30023 ;;		wreg, status,2
 30024 ;; Tracked objects:
 30025 ;;		On entry : 0/3E
 30026 ;;		On exit  : 3F/39
 30027 ;;		Unchanged: 0/0
 30028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30033 ;;Total ram usage:        0 bytes
 30034 ;; Hardware stack levels used:    1
 30035 ;; Hardware stack levels required when called:   15
 30036 ;; This function calls:
 30037 ;;		Nothing
 30038 ;; This function is called by:
 30039 ;;		_SYSTEM_Initialize
 30040 ;; This function uses a reentrant model
 30041 ;;
 30042                           
 30043                           	psect	text119
 30044  01BD92                     __ptext119:
 30045                           	opt callstack 0
 30046  01BD92                     _TMR2_Initialize:
 30047                           	opt callstack 14
 30048                           
 30049                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 30050                           
 30051                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30052                           ;incstack = 0
 30053  01BD92  0E01               	movlw	1
 30054  01BD94  6EAE               	movwf	174,c	;volatile
 30055                           
 30056                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 30057  01BD96  6AAD               	clrf	173,c	;volatile
 30058                           
 30059                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 30060  01BD98  6AAF               	clrf	175,c	;volatile
 30061                           
 30062                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 30063  01BD9A  0E63               	movlw	99
 30064  01BD9C  6EAB               	movwf	171,c	;volatile
 30065                           
 30066                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 30067  01BD9E  6AAA               	clrf	170,c	;volatile
 30068                           
 30069                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 30070  01BDA0  0139               	movlb	57	; () banked
 30071  01BDA2  95A4               	bcf	164,2,b	;volatile
 30072                           
 30073                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 30074  01BDA4  0EC0               	movlw	192
 30075  01BDA6  6EAC               	movwf	172,c	;volatile
 30076                           
 30077                           ; BSR set to: 57
 30078                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30079  01BDA8  0012               	return		;funcret
 30080  01BDAA                     __end_of_TMR2_Initialize:
 30081                           	opt callstack 0
 30082                           
 30083 ;; *************** function _SPI1_Initialize *****************
 30084 ;; Defined at:
 30085 ;;		line 64 in file "mcc_generated_files/spi1.c"
 30086 ;; Parameters:    Size  Location     Type
 30087 ;;		None
 30088 ;; Auto vars:     Size  Location     Type
 30089 ;;		None
 30090 ;; Return value:  Size  Location     Type
 30091 ;;                  1  [STACK] void 
 30092 ;; Registers used:
 30093 ;;		wreg, status,2
 30094 ;; Tracked objects:
 30095 ;;		On entry : 3F/39
 30096 ;;		On exit  : 3F/3D
 30097 ;;		Unchanged: 0/0
 30098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30103 ;;Total ram usage:        0 bytes
 30104 ;; Hardware stack levels used:    1
 30105 ;; Hardware stack levels required when called:   15
 30106 ;; This function calls:
 30107 ;;		Nothing
 30108 ;; This function is called by:
 30109 ;;		_SYSTEM_Initialize
 30110 ;; This function uses a reentrant model
 30111 ;;
 30112                           
 30113                           	psect	text120
 30114  01BDAA                     __ptext120:
 30115                           	opt callstack 0
 30116  01BDAA                     _SPI1_Initialize:
 30117                           	opt callstack 14
 30118                           
 30119                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 30120                           
 30121                           ; BSR set to: 57
 30122                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30123                           ;incstack = 0
 30124  01BDAA  0E40               	movlw	64
 30125  01BDAC  013D               	movlb	61	; () banked
 30126  01BDAE  6F15               	movwf	21,b	;volatile
 30127                           
 30128                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 30129  01BDB0  0E03               	movlw	3
 30130  01BDB2  6F16               	movwf	22,b	;volatile
 30131                           
 30132                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 30133  01BDB4  0E4F               	movlw	79
 30134  01BDB6  6F19               	movwf	25,b	;volatile
 30135                           
 30136                           ; BSR set to: 61
 30137                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 30138  01BDB8  6B1C               	clrf	28,b	;volatile
 30139                           
 30140                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 30141  01BDBA  0E83               	movlw	131
 30142  01BDBC  6F14               	movwf	20,b	;volatile
 30143                           
 30144                           ; BSR set to: 61
 30145                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30146  01BDBE  0012               	return		;funcret
 30147  01BDC0                     __end_of_SPI1_Initialize:
 30148                           	opt callstack 0
 30149                           
 30150 ;; *************** function _PWM8_Initialize *****************
 30151 ;; Defined at:
 30152 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 30153 ;; Parameters:    Size  Location     Type
 30154 ;;		None
 30155 ;; Auto vars:     Size  Location     Type
 30156 ;;		None
 30157 ;; Return value:  Size  Location     Type
 30158 ;;                  1  [STACK] void 
 30159 ;; Registers used:
 30160 ;;		wreg, status,2
 30161 ;; Tracked objects:
 30162 ;;		On entry : 3F/39
 30163 ;;		On exit  : 3F/3F
 30164 ;;		Unchanged: 0/0
 30165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30170 ;;Total ram usage:        0 bytes
 30171 ;; Hardware stack levels used:    1
 30172 ;; Hardware stack levels required when called:   15
 30173 ;; This function calls:
 30174 ;;		Nothing
 30175 ;; This function is called by:
 30176 ;;		_SYSTEM_Initialize
 30177 ;; This function uses a reentrant model
 30178 ;;
 30179                           
 30180                           	psect	text121
 30181  01BDC0                     __ptext121:
 30182                           	opt callstack 0
 30183  01BDC0                     _PWM8_Initialize:
 30184                           	opt callstack 14
 30185                           
 30186                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 30187                           
 30188                           ; BSR set to: 61
 30189                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30190                           ;incstack = 0
 30191  01BDC0  0E80               	movlw	128
 30192  01BDC2  6E62               	movwf	98,c	;volatile
 30193                           
 30194                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 30195  01BDC4  6A61               	clrf	97,c	;volatile
 30196                           
 30197                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 30198  01BDC6  0E40               	movlw	64
 30199  01BDC8  6E60               	movwf	96,c	;volatile
 30200                           
 30201                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 30202  01BDCA  013F               	movlb	63	; () banked
 30203  01BDCC  515F               	movf	95,w,b	;volatile
 30204  01BDCE  0B3F               	andlw	-193
 30205  01BDD0  0940               	iorlw	64
 30206  01BDD2  6F5F               	movwf	95,b	;volatile
 30207                           
 30208                           ; BSR set to: 63
 30209                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30210  01BDD4  0012               	return		;funcret
 30211  01BDD6                     __end_of_PWM8_Initialize:
 30212                           	opt callstack 0
 30213                           
 30214 ;; *************** function _PMD_Initialize *****************
 30215 ;; Defined at:
 30216 ;;		line 90 in file "mcc_generated_files/mcc.c"
 30217 ;; Parameters:    Size  Location     Type
 30218 ;;		None
 30219 ;; Auto vars:     Size  Location     Type
 30220 ;;		None
 30221 ;; Return value:  Size  Location     Type
 30222 ;;                  1  [STACK] void 
 30223 ;; Registers used:
 30224 ;;		None
 30225 ;; Tracked objects:
 30226 ;;		On entry : 3F/39
 30227 ;;		On exit  : 3F/39
 30228 ;;		Unchanged: 0/0
 30229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30234 ;;Total ram usage:        0 bytes
 30235 ;; Hardware stack levels used:    1
 30236 ;; Hardware stack levels required when called:   15
 30237 ;; This function calls:
 30238 ;;		Nothing
 30239 ;; This function is called by:
 30240 ;;		_SYSTEM_Initialize
 30241 ;; This function uses a reentrant model
 30242 ;;
 30243                           
 30244                           	psect	text122
 30245  01BDEC                     __ptext122:
 30246                           	opt callstack 0
 30247  01BDEC                     _PMD_Initialize:
 30248                           	opt callstack 14
 30249                           
 30250                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 30251                           
 30252                           ; BSR set to: 63
 30253                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30254                           ;incstack = 0
 30255  01BDEC  0139               	movlb	57	; () banked
 30256  01BDEE  6BC0               	clrf	192,b	;volatile
 30257                           
 30258                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 30259  01BDF0  6BC1               	clrf	193,b	;volatile
 30260                           
 30261                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 30262  01BDF2  6BC2               	clrf	194,b	;volatile
 30263                           
 30264                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 30265  01BDF4  6BC3               	clrf	195,b	;volatile
 30266                           
 30267                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 30268  01BDF6  6BC4               	clrf	196,b	;volatile
 30269                           
 30270                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 30271  01BDF8  6BC5               	clrf	197,b	;volatile
 30272                           
 30273                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 30274  01BDFA  6BC6               	clrf	198,b	;volatile
 30275                           
 30276                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 30277  01BDFC  6BC7               	clrf	199,b	;volatile
 30278                           
 30279                           ; BSR set to: 57
 30280                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30281  01BDFE  0012               	return		;funcret
 30282  01BE00                     __end_of_PMD_Initialize:
 30283                           	opt callstack 0
 30284                           
 30285 ;; *************** function _PIN_MANAGER_Initialize *****************
 30286 ;; Defined at:
 30287 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 30288 ;; Parameters:    Size  Location     Type
 30289 ;;		None
 30290 ;; Auto vars:     Size  Location     Type
 30291 ;;		None
 30292 ;; Return value:  Size  Location     Type
 30293 ;;                  1  [STACK] void 
 30294 ;; Registers used:
 30295 ;;		wreg, status,2
 30296 ;; Tracked objects:
 30297 ;;		On entry : 3F/39
 30298 ;;		On exit  : 3F/3A
 30299 ;;		Unchanged: 0/0
 30300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30305 ;;Total ram usage:        0 bytes
 30306 ;; Hardware stack levels used:    1
 30307 ;; Hardware stack levels required when called:   15
 30308 ;; This function calls:
 30309 ;;		Nothing
 30310 ;; This function is called by:
 30311 ;;		_SYSTEM_Initialize
 30312 ;; This function uses a reentrant model
 30313 ;;
 30314                           
 30315                           	psect	text123
 30316  01A84A                     __ptext123:
 30317                           	opt callstack 0
 30318  01A84A                     _PIN_MANAGER_Initialize:
 30319                           	opt callstack 14
 30320                           
 30321                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 30322                           
 30323                           ; BSR set to: 57
 30324                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30325                           ;incstack = 0
 30326  01A84A  0E07               	movlw	7
 30327  01A84C  6EBE               	movwf	190,c	;volatile
 30328                           
 30329                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 30330  01A84E  0E80               	movlw	128
 30331  01A850  6EBD               	movwf	189,c	;volatile
 30332                           
 30333                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 30334  01A852  6ABA               	clrf	186,c	;volatile
 30335                           
 30336                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x20;
 30337  01A854  0E20               	movlw	32
 30338  01A856  6EBF               	movwf	191,c	;volatile
 30339                           
 30340                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 30341  01A858  6ABB               	clrf	187,c	;volatile
 30342                           
 30343                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 30344  01A85A  0E07               	movlw	7
 30345  01A85C  6EBC               	movwf	188,c	;volatile
 30346                           
 30347                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 30348  01A85E  6AC6               	clrf	198,c	;volatile
 30349                           
 30350                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 30351  01A860  0E0F               	movlw	15
 30352  01A862  6EC7               	movwf	199,c	;volatile
 30353                           
 30354                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 30355  01A864  68C2               	setf	194,c	;volatile
 30356                           
 30357                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 30358  01A866  0EBF               	movlw	191
 30359  01A868  6EC3               	movwf	195,c	;volatile
 30360                           
 30361                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 30362  01A86A  0E90               	movlw	144
 30363  01A86C  6EC4               	movwf	196,c	;volatile
 30364                           
 30365                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 30366  01A86E  0E0C               	movlw	12
 30367  01A870  6EC5               	movwf	197,c	;volatile
 30368                           
 30369                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 30370  01A872  013A               	movlb	58	; () banked
 30371  01A874  6B70               	clrf	112,b	;volatile
 30372                           
 30373                           ; BSR set to: 58
 30374                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 30375  01A876  6B60               	clrf	96,b	;volatile
 30376                           
 30377                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 30378  01A878  0E3C               	movlw	60
 30379  01A87A  6F50               	movwf	80,b	;volatile
 30380                           
 30381                           ; BSR set to: 58
 30382                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 30383  01A87C  6B80               	clrf	128,b	;volatile
 30384                           
 30385                           ; BSR set to: 58
 30386                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 30387  01A87E  6B90               	clrf	144,b	;volatile
 30388                           
 30389                           ; BSR set to: 58
 30390                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 30391  01A880  6940               	setf	64,b	;volatile
 30392                           
 30393                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 30394  01A882  0E0C               	movlw	12
 30395  01A884  6F71               	movwf	113,b	;volatile
 30396                           
 30397                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 30398  01A886  0E0F               	movlw	15
 30399  01A888  6F91               	movwf	145,b	;volatile
 30400                           
 30401                           ; BSR set to: 58
 30402                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 30403  01A88A  6B81               	clrf	129,b	;volatile
 30404                           
 30405                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 30406  01A88C  0E83               	movlw	131
 30407  01A88E  6F51               	movwf	81,b	;volatile
 30408                           
 30409                           ; BSR set to: 58
 30410                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 30411  01A890  6B41               	clrf	65,b	;volatile
 30412                           
 30413                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 30414  01A892  0E97               	movlw	151
 30415  01A894  6F61               	movwf	97,b	;volatile
 30416                           
 30417                           ; BSR set to: 58
 30418                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 30419  01A896  6B82               	clrf	130,b	;volatile
 30420                           
 30421                           ; BSR set to: 58
 30422                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 30423  01A898  6B92               	clrf	146,b	;volatile
 30424                           
 30425                           ; BSR set to: 58
 30426                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 30427  01A89A  6B42               	clrf	66,b	;volatile
 30428                           
 30429                           ; BSR set to: 58
 30430                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 30431  01A89C  6B52               	clrf	82,b	;volatile
 30432                           
 30433                           ; BSR set to: 58
 30434                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 30435  01A89E  6B62               	clrf	98,b	;volatile
 30436                           
 30437                           ; BSR set to: 58
 30438                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 30439  01A8A0  6B72               	clrf	114,b	;volatile
 30440                           
 30441                           ; BSR set to: 58
 30442                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 30443  01A8A2  6943               	setf	67,b	;volatile
 30444                           
 30445                           ; BSR set to: 58
 30446                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 30447  01A8A4  6953               	setf	83,b	;volatile
 30448                           
 30449                           ; BSR set to: 58
 30450                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 30451  01A8A6  6963               	setf	99,b	;volatile
 30452                           
 30453                           ; BSR set to: 58
 30454                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 30455  01A8A8  6973               	setf	115,b	;volatile
 30456                           
 30457                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 30458  01A8AA  0E07               	movlw	7
 30459  01A8AC  6F83               	movwf	131,b	;volatile
 30460                           
 30461                           ; BSR set to: 58
 30462                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 30463  01A8AE  6993               	setf	147,b	;volatile
 30464                           
 30465                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 30466  01A8B0  0E0F               	movlw	15
 30467  01A8B2  6FE8               	movwf	232,b	;volatile
 30468                           
 30469                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 30470  01A8B4  0E13               	movlw	19
 30471  01A8B6  6FDE               	movwf	222,b	;volatile
 30472                           
 30473                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 30474  01A8B8  0E16               	movlw	22
 30475  01A8BA  6F0E               	movwf	14,b	;volatile
 30476                           
 30477                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 30478  01A8BC  0E1E               	movlw	30
 30479  01A8BE  6F13               	movwf	19,b	;volatile
 30480                           
 30481                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 30482  01A8C0  0E08               	movlw	8
 30483  01A8C2  6FC0               	movwf	192,b	;volatile
 30484                           
 30485                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 30486  01A8C4  0E10               	movlw	16
 30487  01A8C6  6F19               	movwf	25,b	;volatile
 30488                           
 30489                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 30490  01A8C8  0E09               	movlw	9
 30491  01A8CA  6FC1               	movwf	193,b	;volatile
 30492                           
 30493                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 30494  01A8CC  0E1F               	movlw	31
 30495  01A8CE  6F15               	movwf	21,b	;volatile
 30496                           
 30497                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 30498  01A8D0  0E13               	movlw	19
 30499  01A8D2  6F16               	movwf	22,b	;volatile
 30500                           
 30501                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 30502  01A8D4  0E17               	movlw	23
 30503  01A8D6  6FE5               	movwf	229,b	;volatile
 30504                           
 30505                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 30506  01A8D8  0E14               	movlw	20
 30507  01A8DA  6FDF               	movwf	223,b	;volatile
 30508                           
 30509                           ; BSR set to: 58
 30510                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 30511  01A8DC  0012               	return		;funcret
 30512  01A8DE                     __end_of_PIN_MANAGER_Initialize:
 30513                           	opt callstack 0
 30514                           
 30515 ;; *************** function _OSCILLATOR_Initialize *****************
 30516 ;; Defined at:
 30517 ;;		line 72 in file "mcc_generated_files/mcc.c"
 30518 ;; Parameters:    Size  Location     Type
 30519 ;;		None
 30520 ;; Auto vars:     Size  Location     Type
 30521 ;;		None
 30522 ;; Return value:  Size  Location     Type
 30523 ;;                  1  [STACK] void 
 30524 ;; Registers used:
 30525 ;;		wreg, status,2
 30526 ;; Tracked objects:
 30527 ;;		On entry : 3F/3A
 30528 ;;		On exit  : 3F/39
 30529 ;;		Unchanged: 0/0
 30530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30535 ;;Total ram usage:        0 bytes
 30536 ;; Hardware stack levels used:    1
 30537 ;; Hardware stack levels required when called:   15
 30538 ;; This function calls:
 30539 ;;		Nothing
 30540 ;; This function is called by:
 30541 ;;		_SYSTEM_Initialize
 30542 ;; This function uses a reentrant model
 30543 ;;
 30544                           
 30545                           	psect	text124
 30546  01BDD6                     __ptext124:
 30547                           	opt callstack 0
 30548  01BDD6                     _OSCILLATOR_Initialize:
 30549                           	opt callstack 14
 30550                           
 30551                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 30552                           
 30553                           ; BSR set to: 58
 30554                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30555                           ;incstack = 0
 30556  01BDD6  0E20               	movlw	32
 30557  01BDD8  0139               	movlb	57	; () banked
 30558  01BDDA  6FD9               	movwf	217,b	;volatile
 30559                           
 30560                           ; BSR set to: 57
 30561                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 30562  01BDDC  6BDB               	clrf	219,b	;volatile
 30563                           
 30564                           ; BSR set to: 57
 30565                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 30566  01BDDE  6BDD               	clrf	221,b	;volatile
 30567                           
 30568                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 30569  01BDE0  0E02               	movlw	2
 30570  01BDE2  6FDF               	movwf	223,b	;volatile
 30571                           
 30572                           ; BSR set to: 57
 30573                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 30574  01BDE4  6BDE               	clrf	222,b	;volatile
 30575  01BDE6                     l169:
 30576                           
 30577                           ; BSR set to: 57
 30578                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 30579  01BDE6  B1DC               	btfsc	220,0,b	;volatile
 30580  01BDE8  0012               	return	
 30581  01BDEA  D7FD               	goto	l169
 30582  01BDEC                     __end_of_OSCILLATOR_Initialize:
 30583                           	opt callstack 0
 30584                           
 30585 ;; *************** function _INTERRUPT_Initialize *****************
 30586 ;; Defined at:
 30587 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 30588 ;; Parameters:    Size  Location     Type
 30589 ;;		None
 30590 ;; Auto vars:     Size  Location     Type
 30591 ;;  state           1  [STACK] _Bool 
 30592 ;; Return value:  Size  Location     Type
 30593 ;;                  1  [STACK] void 
 30594 ;; Registers used:
 30595 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 30596 ;; Tracked objects:
 30597 ;;		On entry : 0/0
 30598 ;;		On exit  : 3F/39
 30599 ;;		Unchanged: 0/0
 30600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30605 ;;Total ram usage:        0 bytes
 30606 ;; Hardware stack levels used:    1
 30607 ;; Hardware stack levels required when called:   15
 30608 ;; This function calls:
 30609 ;;		Nothing
 30610 ;; This function is called by:
 30611 ;;		_SYSTEM_Initialize
 30612 ;; This function uses a reentrant model
 30613 ;;
 30614                           
 30615                           	psect	text125
 30616  01ADA6                     __ptext125:
 30617                           	opt callstack 0
 30618  01ADA6                     _INTERRUPT_Initialize:
 30619                           	opt callstack 0
 30620                           
 30621                           ; BSR set to: 57
 30622                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30623  01ADA6  52E6               	movf	postinc1,f,c
 30624                           
 30625                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 30626                           
 30627                           ;incstack = 0
 30628  01ADA8  8AD2               	bsf	210,5,c	;volatile
 30629                           
 30630                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 30631  01ADAA  AED2               	btfss	16338,7,c	;volatile
 30632  01ADAC  D003               	goto	u9390
 30633  01ADAE  6A0C               	clrf	(btemp+11)^0,c
 30634  01ADB0  2A0C               	incf	(btemp+11)^0,f,c
 30635  01ADB2  D001               	goto	u9408
 30636  01ADB4                     u9390:
 30637  01ADB4  6A0C               	clrf	(btemp+11)^0,c
 30638  01ADB6                     u9408:
 30639                           
 30640                           ;stkvar	_state @ sp[(-1)+0]
 30641  01ADB6  0EFF               	movlw	-1
 30642  01ADB8  0060  F033  FFE3   	movff	btemp+11,plusw1
 30643                           
 30644                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 30645  01ADBE  9ED2               	bcf	16338,7,c	;volatile
 30646                           
 30647                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 30648  01ADC0  0E55               	movlw	85
 30649  01ADC2  6ED4               	movwf	212,c	;volatile
 30650                           
 30651                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 30652  01ADC4  0EAA               	movlw	170
 30653  01ADC6  6ED4               	movwf	212,c	;volatile
 30654                           
 30655                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 30656  01ADC8  90D4               	bcf	212,0,c	;volatile
 30657                           
 30658                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 30659  01ADCA  0138               	movlb	56	; () banked
 30660  01ADCC  6B9F               	clrf	159,b	;volatile
 30661                           
 30662                           ; BSR set to: 56
 30663                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 30664  01ADCE  6B9E               	clrf	158,b	;volatile
 30665                           
 30666                           ; BSR set to: 56
 30667                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 30668  01ADD0  0E08               	movlw	8
 30669  01ADD2  6F9D               	movwf	157,b	;volatile
 30670                           
 30671                           ; BSR set to: 56
 30672                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 30673  01ADD4  0E55               	movlw	85
 30674  01ADD6  6ED4               	movwf	212,c	;volatile
 30675                           
 30676                           ; BSR set to: 56
 30677                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 30678  01ADD8  0EAA               	movlw	170
 30679  01ADDA  6ED4               	movwf	212,c	;volatile
 30680                           
 30681                           ; BSR set to: 56
 30682                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 30683  01ADDC  80D4               	bsf	212,0,c	;volatile
 30684                           
 30685                           ; BSR set to: 56
 30686                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 30687                           ;stkvar	_state @ sp[(-1)+0]
 30688  01ADDE  0EFF               	movlw	-1
 30689  01ADE0  B0E3               	btfsc	plusw1,0,c
 30690  01ADE2  D002               	bra	u9415
 30691  01ADE4  9ED2               	bcf	16338,7,c	;volatile
 30692  01ADE6  D001               	bra	u9416
 30693  01ADE8                     u9415:
 30694  01ADE8  8ED2               	bsf	16338,7,c	;volatile
 30695  01ADEA                     u9416:
 30696                           
 30697                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 30698  01ADEA  0139               	movlb	57	; () banked
 30699  01ADEC  8782               	bsf	130,3,b	;volatile
 30700                           
 30701                           ; BSR set to: 57
 30702                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 30703  01ADEE  8382               	bsf	130,1,b	;volatile
 30704                           
 30705                           ; BSR set to: 57
 30706                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 30707  01ADF0  8182               	bsf	130,0,b	;volatile
 30708                           
 30709                           ; BSR set to: 57
 30710                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 30711  01ADF2  8582               	bsf	130,2,b	;volatile
 30712                           
 30713                           ; BSR set to: 57
 30714                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 30715  01ADF4  8786               	bsf	134,3,b	;volatile
 30716                           
 30717                           ; BSR set to: 57
 30718                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 30719  01ADF6  8586               	bsf	134,2,b	;volatile
 30720                           
 30721                           ; BSR set to: 57
 30722                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 30723  01ADF8  8783               	bsf	131,3,b	;volatile
 30724                           
 30725                           ; BSR set to: 57
 30726                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 30727  01ADFA  8181               	bsf	129,0,b	;volatile
 30728                           
 30729                           ; BSR set to: 57
 30730                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 30731  01ADFC  9185               	bcf	133,0,b	;volatile
 30732                           
 30733                           ; BSR set to: 57
 30734                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 30735  01ADFE  8189               	bsf	137,0,b	;volatile
 30736                           
 30737                           ; BSR set to: 57
 30738                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 30739  01AE00  9D88               	bcf	136,6,b	;volatile
 30740                           
 30741                           ; BSR set to: 57
 30742                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 30743  01AE02  8581               	bsf	129,2,b	;volatile
 30744                           
 30745                           ; BSR set to: 57
 30746                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 30747  01AE04  8781               	bsf	129,3,b	;volatile
 30748                           
 30749                           ; BSR set to: 57
 30750                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 30751  01AE06  9D86               	bcf	134,6,b	;volatile
 30752                           
 30753                           ; BSR set to: 57
 30754                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 30755  01AE08  52E5               	movf	postdec1,f,c
 30756  01AE0A  0012               	return		;funcret
 30757  01AE0C                     __end_of_INTERRUPT_Initialize:
 30758                           	opt callstack 0
 30759                           
 30760 ;; *************** function _FVR_Initialize *****************
 30761 ;; Defined at:
 30762 ;;		line 58 in file "mcc_generated_files/fvr.c"
 30763 ;; Parameters:    Size  Location     Type
 30764 ;;		None
 30765 ;; Auto vars:     Size  Location     Type
 30766 ;;		None
 30767 ;; Return value:  Size  Location     Type
 30768 ;;                  1  [STACK] void 
 30769 ;; Registers used:
 30770 ;;		wreg, status,2
 30771 ;; Tracked objects:
 30772 ;;		On entry : 3F/39
 30773 ;;		On exit  : 3F/3E
 30774 ;;		Unchanged: 0/0
 30775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30780 ;;Total ram usage:        0 bytes
 30781 ;; Hardware stack levels used:    1
 30782 ;; Hardware stack levels required when called:   15
 30783 ;; This function calls:
 30784 ;;		Nothing
 30785 ;; This function is called by:
 30786 ;;		_SYSTEM_Initialize
 30787 ;; This function uses a reentrant model
 30788 ;;
 30789                           
 30790                           	psect	text126
 30791  01BEF2                     __ptext126:
 30792                           	opt callstack 0
 30793  01BEF2                     _FVR_Initialize:
 30794                           	opt callstack 14
 30795                           
 30796                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 30797                           
 30798                           ; BSR set to: 57
 30799                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30800                           ;incstack = 0
 30801  01BEF2  0EAF               	movlw	175
 30802  01BEF4  013E               	movlb	62	; () banked
 30803  01BEF6  6FC1               	movwf	193,b	;volatile
 30804                           
 30805                           ; BSR set to: 62
 30806                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30807  01BEF8  0012               	return		;funcret
 30808  01BEFA                     __end_of_FVR_Initialize:
 30809                           	opt callstack 0
 30810                           
 30811 ;; *************** function _EXT_INT_Initialize *****************
 30812 ;; Defined at:
 30813 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 30814 ;; Parameters:    Size  Location     Type
 30815 ;;		None
 30816 ;; Auto vars:     Size  Location     Type
 30817 ;;		None
 30818 ;; Return value:  Size  Location     Type
 30819 ;;                  1  [STACK] void 
 30820 ;; Registers used:
 30821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30822 ;; Tracked objects:
 30823 ;;		On entry : 3F/3F
 30824 ;;		On exit  : 3F/39
 30825 ;;		Unchanged: 0/0
 30826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30831 ;;Total ram usage:        0 bytes
 30832 ;; Hardware stack levels used:    1
 30833 ;; Hardware stack levels required when called:   16
 30834 ;; This function calls:
 30835 ;;		_INT0_SetInterruptHandler
 30836 ;;		_INT1_SetInterruptHandler
 30837 ;; This function is called by:
 30838 ;;		_SYSTEM_Initialize
 30839 ;; This function uses a reentrant model
 30840 ;;
 30841                           
 30842                           	psect	text127
 30843  01B6D4                     __ptext127:
 30844                           	opt callstack 0
 30845  01B6D4                     _EXT_INT_Initialize:
 30846                           	opt callstack 13
 30847                           
 30848                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 30849                           
 30850                           ; BSR set to: 62
 30851                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30852                           ;incstack = 0
 30853  01B6D4  0139               	movlb	57	; () banked
 30854  01B6D6  91A1               	bcf	161,0,b	;volatile
 30855                           
 30856                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 30857  01B6D8  90D2               	bcf	210,0,c	;volatile
 30858                           
 30859                           ; BSR set to: 57
 30860                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 30861  01B6DA  0E26               	movlw	low _INT0_DefaultInterruptHandler
 30862  01B6DC  6EE6               	movwf	postinc1,c
 30863  01B6DE  0EBF               	movlw	high _INT0_DefaultInterruptHandler
 30864  01B6E0  6EE6               	movwf	postinc1,c
 30865  01B6E2  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 30866  01B6E4  6EE6               	movwf	postinc1,c
 30867  01B6E6  EC43  F0DD         	call	_INT0_SetInterruptHandler	;wreg free
 30868                           
 30869                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 30870  01B6EA  0139               	movlb	57	; () banked
 30871  01B6EC  8191               	bsf	145,0,b	;volatile
 30872                           
 30873                           ; BSR set to: 57
 30874                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 30875  01B6EE  91A5               	bcf	165,0,b	;volatile
 30876                           
 30877                           ; BSR set to: 57
 30878                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 30879  01B6F0  92D2               	bcf	210,1,c	;volatile
 30880                           
 30881                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 30882  01B6F2  0E22               	movlw	low _INT1_DefaultInterruptHandler
 30883  01B6F4  6EE6               	movwf	postinc1,c
 30884  01B6F6  0EBF               	movlw	high _INT1_DefaultInterruptHandler
 30885  01B6F8  6EE6               	movwf	postinc1,c
 30886  01B6FA  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 30887  01B6FC  6EE6               	movwf	postinc1,c
 30888  01B6FE  EC2F  F0DD         	call	_INT1_SetInterruptHandler	;wreg free
 30889                           
 30890                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 30891  01B702  0139               	movlb	57	; () banked
 30892  01B704  8195               	bsf	149,0,b	;volatile
 30893                           
 30894                           ; BSR set to: 57
 30895                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 30896  01B706  0012               	return		;funcret
 30897  01B708                     __end_of_EXT_INT_Initialize:
 30898                           	opt callstack 0
 30899                           
 30900 ;; *************** function _INT1_SetInterruptHandler *****************
 30901 ;; Defined at:
 30902 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 30903 ;; Parameters:    Size  Location     Type
 30904 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30905 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 30906 ;; Auto vars:     Size  Location     Type
 30907 ;;		None
 30908 ;; Return value:  Size  Location     Type
 30909 ;;                  1  [STACK] void 
 30910 ;; Registers used:
 30911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30912 ;; Tracked objects:
 30913 ;;		On entry : 3F/39
 30914 ;;		On exit  : 0/0
 30915 ;;		Unchanged: 0/0
 30916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30921 ;;Total ram usage:        0 bytes
 30922 ;; Hardware stack levels used:    1
 30923 ;; Hardware stack levels required when called:   15
 30924 ;; This function calls:
 30925 ;;		Nothing
 30926 ;; This function is called by:
 30927 ;;		_EXT_INT_Initialize
 30928 ;;		_start_switch_handler
 30929 ;; This function uses a reentrant model
 30930 ;;
 30931                           
 30932                           	psect	text128
 30933  01BA5E                     __ptext128:
 30934                           	opt callstack 0
 30935  01BA5E                     _INT1_SetInterruptHandler:
 30936                           	opt callstack 14
 30937                           
 30938                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 30939                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30940                           
 30941                           ; BSR set to: 57
 30942                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30943                           ;incstack = 0
 30944  01BA5E  50E1               	movf	fsr1l,w,c
 30945  01BA60  0FFD               	addlw	-3
 30946  01BA62  6ED9               	movwf	fsr2l,c
 30947  01BA64  50E2               	movf	fsr1h,w,c
 30948  01BA66  6EDA               	movwf	fsr2h,c
 30949  01BA68  0EFF               	movlw	255
 30950  01BA6A  22DA               	addwfc	fsr2h,f,c
 30951  01BA6C  006F FF78  F0A8    	movff	postinc2,_INT1_InterruptHandler
 30952  01BA72  006F FF78  F0A9    	movff	postinc2,_INT1_InterruptHandler+1
 30953  01BA78  006F FF74  F0AA    	movff	postdec2,_INT1_InterruptHandler+2
 30954                           
 30955                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30956  01BA7E  52E5               	movf	postdec1,f,c
 30957  01BA80  52E5               	movf	postdec1,f,c
 30958  01BA82  52E5               	movf	postdec1,f,c
 30959  01BA84  0012               	return		;funcret
 30960  01BA86                     __end_of_INT1_SetInterruptHandler:
 30961                           	opt callstack 0
 30962                           
 30963 ;; *************** function _INT0_SetInterruptHandler *****************
 30964 ;; Defined at:
 30965 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 30966 ;; Parameters:    Size  Location     Type
 30967 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30968 ;;		 -> INT0_DefaultInterruptHandler(1), 
 30969 ;; Auto vars:     Size  Location     Type
 30970 ;;		None
 30971 ;; Return value:  Size  Location     Type
 30972 ;;                  1  [STACK] void 
 30973 ;; Registers used:
 30974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30975 ;; Tracked objects:
 30976 ;;		On entry : 3F/39
 30977 ;;		On exit  : 0/0
 30978 ;;		Unchanged: 0/0
 30979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30984 ;;Total ram usage:        0 bytes
 30985 ;; Hardware stack levels used:    1
 30986 ;; Hardware stack levels required when called:   15
 30987 ;; This function calls:
 30988 ;;		Nothing
 30989 ;; This function is called by:
 30990 ;;		_EXT_INT_Initialize
 30991 ;; This function uses a reentrant model
 30992 ;;
 30993                           
 30994                           	psect	text129
 30995  01BA86                     __ptext129:
 30996                           	opt callstack 0
 30997  01BA86                     _INT0_SetInterruptHandler:
 30998                           	opt callstack 13
 30999                           
 31000                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 31001                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31002                           
 31003                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31004                           ;incstack = 0
 31005  01BA86  50E1               	movf	fsr1l,w,c
 31006  01BA88  0FFD               	addlw	-3
 31007  01BA8A  6ED9               	movwf	fsr2l,c
 31008  01BA8C  50E2               	movf	fsr1h,w,c
 31009  01BA8E  6EDA               	movwf	fsr2h,c
 31010  01BA90  0EFF               	movlw	255
 31011  01BA92  22DA               	addwfc	fsr2h,f,c
 31012  01BA94  006F FF78  F0AB    	movff	postinc2,_INT0_InterruptHandler
 31013  01BA9A  006F FF78  F0AC    	movff	postinc2,_INT0_InterruptHandler+1
 31014  01BAA0  006F FF74  F0AD    	movff	postdec2,_INT0_InterruptHandler+2
 31015                           
 31016                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31017  01BAA6  52E5               	movf	postdec1,f,c
 31018  01BAA8  52E5               	movf	postdec1,f,c
 31019  01BAAA  52E5               	movf	postdec1,f,c
 31020  01BAAC  0012               	return		;funcret
 31021  01BAAE                     __end_of_INT0_SetInterruptHandler:
 31022                           	opt callstack 0
 31023                           
 31024 ;; *************** function _DMA2_Initialize *****************
 31025 ;; Defined at:
 31026 ;;		line 61 in file "mcc_generated_files/dma2.c"
 31027 ;; Parameters:    Size  Location     Type
 31028 ;;		None
 31029 ;; Auto vars:     Size  Location     Type
 31030 ;;		None
 31031 ;; Return value:  Size  Location     Type
 31032 ;;                  1  [STACK] void 
 31033 ;; Registers used:
 31034 ;;		wreg, status,2
 31035 ;; Tracked objects:
 31036 ;;		On entry : 3F/3D
 31037 ;;		On exit  : 3F/3B
 31038 ;;		Unchanged: 0/0
 31039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31044 ;;Total ram usage:        0 bytes
 31045 ;; Hardware stack levels used:    1
 31046 ;; Hardware stack levels required when called:   15
 31047 ;; This function calls:
 31048 ;;		Nothing
 31049 ;; This function is called by:
 31050 ;;		_SYSTEM_Initialize
 31051 ;; This function uses a reentrant model
 31052 ;;
 31053                           
 31054                           	psect	text130
 31055  01AFEE                     __ptext130:
 31056                           	opt callstack 0
 31057  01AFEE                     _DMA2_Initialize:
 31058                           	opt callstack 14
 31059                           
 31060                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 31061                           
 31062                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31063                           ;incstack = 0
 31064  01AFEE  0E00               	movlw	0
 31065  01AFF0  013B               	movlb	59	; () banked
 31066  01AFF2  6FD9               	movwf	217,b	;volatile
 31067  01AFF4  0E10               	movlw	16
 31068  01AFF6  6FDA               	movwf	218,b	;volatile
 31069  01AFF8  0E00               	movlw	0
 31070  01AFFA  6FDB               	movwf	219,b	;volatile
 31071                           
 31072                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 31073  01AFFC  0E3F               	movlw	63
 31074  01AFFE  6FD1               	movwf	209,b	;volatile
 31075  01B000  0EBB               	movlw	187
 31076  01B002  6FD0               	movwf	208,b	;volatile
 31077                           
 31078                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 31079  01B004  0E03               	movlw	3
 31080  01B006  6FDD               	movwf	221,b	;volatile
 31081                           
 31082                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 31083  01B008  0E00               	movlw	0
 31084  01B00A  6FD8               	movwf	216,b	;volatile
 31085  01B00C  0E01               	movlw	1
 31086  01B00E  6FD7               	movwf	215,b	;volatile
 31087                           
 31088                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 31089  01B010  0E00               	movlw	0
 31090  01B012  6FCF               	movwf	207,b	;volatile
 31091  01B014  0E01               	movlw	1
 31092  01B016  6FCE               	movwf	206,b	;volatile
 31093                           
 31094                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 31095  01B018  0E1C               	movlw	28
 31096  01B01A  6FDF               	movwf	223,b	;volatile
 31097                           
 31098                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 31099  01B01C  0E3D               	movlw	61
 31100  01B01E  6FDE               	movwf	222,b	;volatile
 31101                           
 31102                           ; BSR set to: 59
 31103                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 31104  01B020  0139               	movlb	57	; () banked
 31105  01B022  97A5               	bcf	165,3,b	;volatile
 31106                           
 31107                           ; BSR set to: 57
 31108                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 31109  01B024  95A5               	bcf	165,2,b	;volatile
 31110                           
 31111                           ; BSR set to: 57
 31112                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 31113  01B026  9BA5               	bcf	165,5,b	;volatile
 31114                           
 31115                           ; BSR set to: 57
 31116                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 31117  01B028  99A5               	bcf	165,4,b	;volatile
 31118                           
 31119                           ; BSR set to: 57
 31120                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 31121  01B02A  9795               	bcf	149,3,b	;volatile
 31122                           
 31123                           ; BSR set to: 57
 31124                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 31125  01B02C  9595               	bcf	149,2,b	;volatile
 31126                           
 31127                           ; BSR set to: 57
 31128                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 31129  01B02E  9B95               	bcf	149,5,b	;volatile
 31130                           
 31131                           ; BSR set to: 57
 31132                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 31133  01B030  9995               	bcf	149,4,b	;volatile
 31134  01B032  9ED2               	bcf	16338,7,c	;# 
 31135  01B034  0139               	banksel	14831	;# 
 31136  01B036  0E55               	movlw	85	;# 
 31137  01B038  6FEF               	movwf	14831,b	;# 
 31138  01B03A  0EAA               	movlw	170	;# 
 31139  01B03C  6FEF               	movwf	14831,b	;# 
 31140  01B03E  81EF               	bsf	14831,0,b	;# 
 31141  01B040  8ED2               	bsf	16338,7,c	;# 
 31142                           
 31143                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 31144  01B042  013B               	movlb	59	; () banked
 31145  01B044  6BDC               	clrf	220,b	;volatile
 31146                           
 31147                           ; BSR set to: 59
 31148                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31149  01B046  0012               	return		;funcret
 31150  01B048                     __end_of_DMA2_Initialize:
 31151                           	opt callstack 0
 31152                           
 31153 ;; *************** function _DMA1_Initialize *****************
 31154 ;; Defined at:
 31155 ;;		line 86 in file "mcc_generated_files/dma1.c"
 31156 ;; Parameters:    Size  Location     Type
 31157 ;;		None
 31158 ;; Auto vars:     Size  Location     Type
 31159 ;;		None
 31160 ;; Return value:  Size  Location     Type
 31161 ;;                  1  [STACK] void 
 31162 ;; Registers used:
 31163 ;;		wreg, status,2
 31164 ;; Tracked objects:
 31165 ;;		On entry : 3F/3B
 31166 ;;		On exit  : 3F/3B
 31167 ;;		Unchanged: 0/0
 31168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31173 ;;Total ram usage:        0 bytes
 31174 ;; Hardware stack levels used:    1
 31175 ;; Hardware stack levels required when called:   15
 31176 ;; This function calls:
 31177 ;;		Nothing
 31178 ;; This function is called by:
 31179 ;;		_SYSTEM_Initialize
 31180 ;; This function uses a reentrant model
 31181 ;;
 31182                           
 31183                           	psect	text131
 31184  01AC68                     __ptext131:
 31185                           	opt callstack 0
 31186  01AC68                     _DMA1_Initialize:
 31187                           	opt callstack 14
 31188                           
 31189                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 31190                           
 31191                           ; BSR set to: 59
 31192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31193                           ;incstack = 0
 31194  01AC68  0E00               	movlw	0
 31195  01AC6A  013B               	movlb	59	; () banked
 31196  01AC6C  6FF9               	movwf	249,b	;volatile
 31197  01AC6E  0E10               	movlw	16
 31198  01AC70  6FFA               	movwf	250,b	;volatile
 31199  01AC72  0E00               	movlw	0
 31200  01AC74  6FFB               	movwf	251,b	;volatile
 31201                           
 31202                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 31203  01AC76  0E3D               	movlw	61
 31204  01AC78  6FF1               	movwf	241,b	;volatile
 31205  01AC7A  0E11               	movlw	17
 31206  01AC7C  6FF0               	movwf	240,b	;volatile
 31207                           
 31208                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 31209  01AC7E  0E03               	movlw	3
 31210  01AC80  6FFD               	movwf	253,b	;volatile
 31211                           
 31212                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 31213  01AC82  0E00               	movlw	0
 31214  01AC84  6FF8               	movwf	248,b	;volatile
 31215  01AC86  0E01               	movlw	1
 31216  01AC88  6FF7               	movwf	247,b	;volatile
 31217                           
 31218                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 31219  01AC8A  0E00               	movlw	0
 31220  01AC8C  6FEF               	movwf	239,b	;volatile
 31221  01AC8E  0E01               	movlw	1
 31222  01AC90  6FEE               	movwf	238,b	;volatile
 31223                           
 31224                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 31225  01AC92  0E15               	movlw	21
 31226  01AC94  6FFF               	movwf	255,b	;volatile
 31227                           
 31228                           ; BSR set to: 59
 31229                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 31230  01AC96  6BFE               	clrf	254,b	;volatile
 31231                           
 31232                           ; BSR set to: 59
 31233                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 31234  01AC98  0139               	movlb	57	; () banked
 31235  01AC9A  93A2               	bcf	162,1,b	;volatile
 31236                           
 31237                           ; BSR set to: 57
 31238                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 31239  01AC9C  91A2               	bcf	162,0,b	;volatile
 31240                           
 31241                           ; BSR set to: 57
 31242                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 31243  01AC9E  97A2               	bcf	162,3,b	;volatile
 31244                           
 31245                           ; BSR set to: 57
 31246                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 31247  01ACA0  95A2               	bcf	162,2,b	;volatile
 31248                           
 31249                           ; BSR set to: 57
 31250                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 31251  01ACA2  8392               	bsf	146,1,b	;volatile
 31252                           
 31253                           ; BSR set to: 57
 31254                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 31255  01ACA4  8192               	bsf	146,0,b	;volatile
 31256                           
 31257                           ; BSR set to: 57
 31258                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 31259  01ACA6  8792               	bsf	146,3,b	;volatile
 31260                           
 31261                           ; BSR set to: 57
 31262                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 31263  01ACA8  8592               	bsf	146,2,b	;volatile
 31264                           
 31265                           ; BSR set to: 57
 31266                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 31267  01ACAA  6BF1               	clrf	241,b	;volatile
 31268                           
 31269                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 31270  01ACAC  0E01               	movlw	1
 31271  01ACAE  6FF2               	movwf	242,b	;volatile
 31272                           
 31273                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 31274  01ACB0  0E04               	movlw	4
 31275  01ACB2  6FF3               	movwf	243,b	;volatile
 31276                           
 31277                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 31278  01ACB4  0E02               	movlw	2
 31279  01ACB6  6FF4               	movwf	244,b	;volatile
 31280                           
 31281                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 31282  01ACB8  0E03               	movlw	3
 31283  01ACBA  6FF7               	movwf	247,b	;volatile
 31284  01ACBC  9ED2               	bcf	16338,7,c	;# 
 31285  01ACBE  0139               	banksel	14831	;# 
 31286  01ACC0  0E55               	movlw	85	;# 
 31287  01ACC2  6FEF               	movwf	14831,b	;# 
 31288  01ACC4  0EAA               	movlw	170	;# 
 31289  01ACC6  6FEF               	movwf	14831,b	;# 
 31290  01ACC8  81EF               	bsf	14831,0,b	;# 
 31291  01ACCA  8ED2               	bsf	16338,7,c	;# 
 31292                           
 31293                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 31294  01ACCC  013B               	movlb	59	; () banked
 31295  01ACCE  6BFC               	clrf	252,b	;volatile
 31296                           
 31297                           ; BSR set to: 59
 31298                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31299  01ACD0  0012               	return		;funcret
 31300  01ACD2                     __end_of_DMA1_Initialize:
 31301                           	opt callstack 0
 31302                           
 31303 ;; *************** function _CLKREF_Initialize *****************
 31304 ;; Defined at:
 31305 ;;		line 58 in file "mcc_generated_files/clkref.c"
 31306 ;; Parameters:    Size  Location     Type
 31307 ;;		None
 31308 ;; Auto vars:     Size  Location     Type
 31309 ;;		None
 31310 ;; Return value:  Size  Location     Type
 31311 ;;                  1  [STACK] void 
 31312 ;; Registers used:
 31313 ;;		wreg, status,2
 31314 ;; Tracked objects:
 31315 ;;		On entry : 3F/3B
 31316 ;;		On exit  : 3F/3C
 31317 ;;		Unchanged: 0/0
 31318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31323 ;;Total ram usage:        0 bytes
 31324 ;; Hardware stack levels used:    1
 31325 ;; Hardware stack levels required when called:   15
 31326 ;; This function calls:
 31327 ;;		Nothing
 31328 ;; This function is called by:
 31329 ;;		_SYSTEM_Initialize
 31330 ;; This function uses a reentrant model
 31331 ;;
 31332                           
 31333                           	psect	text132
 31334  01BE9A                     __ptext132:
 31335                           	opt callstack 0
 31336  01BE9A                     _CLKREF_Initialize:
 31337                           	opt callstack 14
 31338                           
 31339                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 31340                           
 31341                           ; BSR set to: 59
 31342                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31343                           ;incstack = 0
 31344  01BE9A  013C               	movlb	60	; () banked
 31345  01BE9C  6BE6               	clrf	230,b	;volatile
 31346                           
 31347                           ; BSR set to: 60
 31348                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 31349  01BE9E  0E94               	movlw	148
 31350  01BEA0  6FE5               	movwf	229,b	;volatile
 31351                           
 31352                           ; BSR set to: 60
 31353                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31354  01BEA2  0012               	return		;funcret
 31355  01BEA4                     __end_of_CLKREF_Initialize:
 31356                           	opt callstack 0
 31357                           
 31358 ;; *************** function _ADCC_Initialize *****************
 31359 ;; Defined at:
 31360 ;;		line 65 in file "mcc_generated_files/adcc.c"
 31361 ;; Parameters:    Size  Location     Type
 31362 ;;		None
 31363 ;; Auto vars:     Size  Location     Type
 31364 ;;		None
 31365 ;; Return value:  Size  Location     Type
 31366 ;;                  1  [STACK] void 
 31367 ;; Registers used:
 31368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31369 ;; Tracked objects:
 31370 ;;		On entry : 3F/3E
 31371 ;;		On exit  : 0/0
 31372 ;;		Unchanged: 0/0
 31373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31378 ;;Total ram usage:        0 bytes
 31379 ;; Hardware stack levels used:    1
 31380 ;; Hardware stack levels required when called:   16
 31381 ;; This function calls:
 31382 ;;		_ADCC_SetADIInterruptHandler
 31383 ;;		_ADCC_SetADTIInterruptHandler
 31384 ;; This function is called by:
 31385 ;;		_SYSTEM_Initialize
 31386 ;; This function uses a reentrant model
 31387 ;;
 31388                           
 31389                           	psect	text133
 31390  01ACD2                     __ptext133:
 31391                           	opt callstack 0
 31392  01ACD2                     _ADCC_Initialize:
 31393                           	opt callstack 13
 31394                           
 31395                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 31396                           
 31397                           ; BSR set to: 60
 31398                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31399                           ;incstack = 0
 31400  01ACD2  013E               	movlb	62	; () banked
 31401  01ACD4  6BDE               	clrf	222,b	;volatile
 31402                           
 31403                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 31404  01ACD6  6BDF               	clrf	223,b	;volatile
 31405                           
 31406                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 31407  01ACD8  6BE0               	clrf	224,b	;volatile
 31408                           
 31409                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 31410  01ACDA  6BE1               	clrf	225,b	;volatile
 31411                           
 31412                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 31413  01ACDC  6BE4               	clrf	228,b	;volatile
 31414                           
 31415                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 31416  01ACDE  6BE5               	clrf	229,b	;volatile
 31417                           
 31418                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 31419  01ACE0  6BEA               	clrf	234,b	;volatile
 31420                           
 31421                           ; BSR set to: 62
 31422                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 31423  01ACE2  0E40               	movlw	64
 31424  01ACE4  6FEC               	movwf	236,b	;volatile
 31425                           
 31426                           ; BSR set to: 62
 31427                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 31428  01ACE6  6BF1               	clrf	241,b	;volatile
 31429                           
 31430                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 31431  01ACE8  0E20               	movlw	32
 31432  01ACEA  6FF3               	movwf	243,b	;volatile
 31433                           
 31434                           ; BSR set to: 62
 31435                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 31436  01ACEC  6BF4               	clrf	244,b	;volatile
 31437                           
 31438                           ; BSR set to: 62
 31439                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 31440  01ACEE  6BF5               	clrf	245,b	;volatile
 31441                           
 31442                           ; BSR set to: 62
 31443                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 31444  01ACF0  6BF6               	clrf	246,b	;volatile
 31445                           
 31446                           ; BSR set to: 62
 31447                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 31448  01ACF2  6BF7               	clrf	247,b	;volatile
 31449                           
 31450                           ; BSR set to: 62
 31451                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 31452  01ACF4  6BF9               	clrf	249,b	;volatile
 31453                           
 31454                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 31455  01ACF6  0E5B               	movlw	91
 31456  01ACF8  6FFA               	movwf	250,b	;volatile
 31457                           
 31458                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 31459  01ACFA  0E27               	movlw	39
 31460  01ACFC  6FFB               	movwf	251,b	;volatile
 31461                           
 31462                           ; BSR set to: 62
 31463                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 31464  01ACFE  6BFC               	clrf	252,b	;volatile
 31465                           
 31466                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 31467  01AD00  0E02               	movlw	2
 31468  01AD02  6FFD               	movwf	253,b	;volatile
 31469                           
 31470                           ; BSR set to: 62
 31471                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 31472  01AD04  6BFE               	clrf	254,b	;volatile
 31473                           
 31474                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 31475  01AD06  0E07               	movlw	7
 31476  01AD08  6FFF               	movwf	255,b	;volatile
 31477                           
 31478                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 31479  01AD0A  0E84               	movlw	132
 31480  01AD0C  6FF8               	movwf	248,b	;volatile
 31481                           
 31482                           ; BSR set to: 62
 31483                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 31484  01AD0E  0139               	movlb	57	; () banked
 31485  01AD10  95A1               	bcf	161,2,b	;volatile
 31486                           
 31487                           ; BSR set to: 57
 31488                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 31489  01AD12  8591               	bsf	145,2,b	;volatile
 31490                           
 31491                           ; BSR set to: 57
 31492                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 31493  01AD14  0E28               	movlw	low _ADCC_DefaultInterruptHandler
 31494  01AD16  6EE6               	movwf	postinc1,c
 31495  01AD18  0EBF               	movlw	high _ADCC_DefaultInterruptHandler
 31496  01AD1A  6EE6               	movwf	postinc1,c
 31497  01AD1C  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31498  01AD1E  6EE6               	movwf	postinc1,c
 31499  01AD20  EC6B  F0DD         	call	_ADCC_SetADIInterruptHandler	;wreg free
 31500                           
 31501                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 31502  01AD24  0139               	movlb	57	; () banked
 31503  01AD26  97A1               	bcf	161,3,b	;volatile
 31504                           
 31505                           ; BSR set to: 57
 31506                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 31507  01AD28  8791               	bsf	145,3,b	;volatile
 31508                           
 31509                           ; BSR set to: 57
 31510                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 31511  01AD2A  0E28               	movlw	low _ADCC_DefaultInterruptHandler
 31512  01AD2C  6EE6               	movwf	postinc1,c
 31513  01AD2E  0EBF               	movlw	high _ADCC_DefaultInterruptHandler
 31514  01AD30  6EE6               	movwf	postinc1,c
 31515  01AD32  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31516  01AD34  6EE6               	movwf	postinc1,c
 31517  01AD36  EC57  F0DD         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 31518                           
 31519                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31520  01AD3A  0012               	return		;funcret
 31521  01AD3C                     __end_of_ADCC_Initialize:
 31522                           	opt callstack 0
 31523                           
 31524 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 31525 ;; Defined at:
 31526 ;;		line 336 in file "mcc_generated_files/adcc.c"
 31527 ;; Parameters:    Size  Location     Type
 31528 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31529 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 31530 ;; Auto vars:     Size  Location     Type
 31531 ;;		None
 31532 ;; Return value:  Size  Location     Type
 31533 ;;                  1  [STACK] void 
 31534 ;; Registers used:
 31535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31536 ;; Tracked objects:
 31537 ;;		On entry : 0/0
 31538 ;;		On exit  : 0/0
 31539 ;;		Unchanged: 0/0
 31540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31545 ;;Total ram usage:        0 bytes
 31546 ;; Hardware stack levels used:    1
 31547 ;; Hardware stack levels required when called:   15
 31548 ;; This function calls:
 31549 ;;		Nothing
 31550 ;; This function is called by:
 31551 ;;		_ADCC_Initialize
 31552 ;;		_start_adc_scan
 31553 ;; This function uses a reentrant model
 31554 ;;
 31555                           
 31556                           	psect	text134
 31557  01BAAE                     __ptext134:
 31558                           	opt callstack 0
 31559  01BAAE                     _ADCC_SetADTIInterruptHandler:
 31560                           	opt callstack 14
 31561                           
 31562                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 31563                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31564                           
 31565                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31566                           ;incstack = 0
 31567  01BAAE  50E1               	movf	fsr1l,w,c
 31568  01BAB0  0FFD               	addlw	-3
 31569  01BAB2  6ED9               	movwf	fsr2l,c
 31570  01BAB4  50E2               	movf	fsr1h,w,c
 31571  01BAB6  6EDA               	movwf	fsr2h,c
 31572  01BAB8  0EFF               	movlw	255
 31573  01BABA  22DA               	addwfc	fsr2h,f,c
 31574  01BABC  006F FF78  F099    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 31575  01BAC2  006F FF78  F09A    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 31576  01BAC8  006F FF74  F09B    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 31577                           
 31578                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 31579  01BACE  52E5               	movf	postdec1,f,c
 31580  01BAD0  52E5               	movf	postdec1,f,c
 31581  01BAD2  52E5               	movf	postdec1,f,c
 31582  01BAD4  0012               	return		;funcret
 31583  01BAD6                     __end_of_ADCC_SetADTIInterruptHandler:
 31584                           	opt callstack 0
 31585                           
 31586 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 31587 ;; Defined at:
 31588 ;;		line 323 in file "mcc_generated_files/adcc.c"
 31589 ;; Parameters:    Size  Location     Type
 31590 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31591 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 31592 ;; Auto vars:     Size  Location     Type
 31593 ;;		None
 31594 ;; Return value:  Size  Location     Type
 31595 ;;                  1  [STACK] void 
 31596 ;; Registers used:
 31597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31598 ;; Tracked objects:
 31599 ;;		On entry : 6/0
 31600 ;;		On exit  : 0/0
 31601 ;;		Unchanged: 0/0
 31602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31607 ;;Total ram usage:        0 bytes
 31608 ;; Hardware stack levels used:    1
 31609 ;; Hardware stack levels required when called:   15
 31610 ;; This function calls:
 31611 ;;		Nothing
 31612 ;; This function is called by:
 31613 ;;		_ADCC_Initialize
 31614 ;;		_start_adc_scan
 31615 ;; This function uses a reentrant model
 31616 ;;
 31617                           
 31618                           	psect	text135
 31619  01BAD6                     __ptext135:
 31620                           	opt callstack 0
 31621  01BAD6                     _ADCC_SetADIInterruptHandler:
 31622                           	opt callstack 14
 31623                           
 31624                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 31625                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31626                           
 31627                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31628                           ;incstack = 0
 31629  01BAD6  50E1               	movf	fsr1l,w,c
 31630  01BAD8  0FFD               	addlw	-3
 31631  01BADA  6ED9               	movwf	fsr2l,c
 31632  01BADC  50E2               	movf	fsr1h,w,c
 31633  01BADE  6EDA               	movwf	fsr2h,c
 31634  01BAE0  0EFF               	movlw	255
 31635  01BAE2  22DA               	addwfc	fsr2h,f,c
 31636  01BAE4  006F FF78  F09C    	movff	postinc2,_ADCC_ADI_InterruptHandler
 31637  01BAEA  006F FF78  F09D    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 31638  01BAF0  006F FF74  F09E    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 31639                           
 31640                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31641  01BAF6  52E5               	movf	postdec1,f,c
 31642  01BAF8  52E5               	movf	postdec1,f,c
 31643  01BAFA  52E5               	movf	postdec1,f,c
 31644  01BAFC  0012               	return		;funcret
 31645  01BAFE                     __end_of_ADCC_SetADIInterruptHandler:
 31646                           	opt callstack 0
 31647                           
 31648 ;; *************** function _INT1_ISR *****************
 31649 ;; Defined at:
 31650 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 31651 ;; Parameters:    Size  Location     Type
 31652 ;;		None
 31653 ;; Auto vars:     Size  Location     Type
 31654 ;;		None
 31655 ;; Return value:  Size  Location     Type
 31656 ;;                  1    wreg      void 
 31657 ;; Registers used:
 31658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31659 ;; Tracked objects:
 31660 ;;		On entry : 0/0
 31661 ;;		On exit  : 0/0
 31662 ;;		Unchanged: 0/0
 31663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31666 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31667 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31668 ;;Total ram usage:        4 bytes
 31669 ;; Hardware stack levels used:    1
 31670 ;; Hardware stack levels required when called:    5
 31671 ;; This function calls:
 31672 ;;		_INT1_CallBack
 31673 ;; This function is called by:
 31674 ;;		Interrupt level 1
 31675 ;; This function uses a non-reentrant model
 31676 ;;
 31677                           
 31678                           	psect	text136
 31679  01B54C                     __ptext136:
 31680                           	opt callstack 0
 31681  01B54C                     _INT1_ISR:
 31682                           	opt callstack 12
 31683                           
 31684                           ;incstack = 0
 31685  01B54C  006F FF60  F027    	movff	status,??_INT1_ISR
 31686  01B552  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 31687  01B558  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 31688  01B55E  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 31689  01B564  EE16  F0AE         	lfsr	1,___intlo_sp
 31690                           
 31691                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 31692  01B568  0139               	movlb	57	; () banked
 31693  01B56A  91A5               	bcf	165,0,b	;volatile
 31694                           
 31695                           ; BSR set to: 57
 31696                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 31697  01B56C  ECBC  F0DD         	call	_INT1_CallBack	;wreg free
 31698  01B570  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 31699  01B576  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 31700  01B57C  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 31701  01B582  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 31702  01B588  0011               	retfie		f
 31703  01B58A                     __end_of_INT1_ISR:
 31704                           	opt callstack 0
 31705                           
 31706 ;; *************** function _INT1_CallBack *****************
 31707 ;; Defined at:
 31708 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 31709 ;; Parameters:    Size  Location     Type
 31710 ;;		None
 31711 ;; Auto vars:     Size  Location     Type
 31712 ;;		None
 31713 ;; Return value:  Size  Location     Type
 31714 ;;                  1  [STACK] void 
 31715 ;; Registers used:
 31716 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31717 ;; Tracked objects:
 31718 ;;		On entry : 3F/39
 31719 ;;		On exit  : 0/0
 31720 ;;		Unchanged: 0/0
 31721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31726 ;;Total ram usage:        0 bytes
 31727 ;; Hardware stack levels used:    1
 31728 ;; Hardware stack levels required when called:    4
 31729 ;; This function calls:
 31730 ;;		Absolute function
 31731 ;;		_INT1_DefaultInterruptHandler
 31732 ;;		_switch_handler
 31733 ;; This function is called by:
 31734 ;;		_INT1_ISR
 31735 ;; This function uses a reentrant model
 31736 ;;
 31737                           
 31738                           	psect	text137
 31739  01BB78                     __ptext137:
 31740                           	opt callstack 0
 31741  01BB78                     _INT1_CallBack:
 31742                           	opt callstack 12
 31743                           
 31744                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 31745                           
 31746                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31747                           ;incstack = 0
 31748  01BB78  0100               	movlb	0	; () banked
 31749  01BB7A  51A8               	movf	_INT1_InterruptHandler& (0+255),w,b
 31750  01BB7C  11A9               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 31751  01BB7E  11AA               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 31752  01BB80  B4D8               	btfsc	status,2,c
 31753  01BB82  0012               	return	
 31754                           
 31755                           ; BSR set to: 0
 31756                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 31757  01BB84  D801               	call	u991_28
 31758  01BB86  0012               	return	
 31759  01BB88                     u991_28:
 31760  01BB88  0005               	push	
 31761  01BB8A  6EFA               	movwf	pclath,c
 31762  01BB8C  51A8               	movf	_INT1_InterruptHandler& (0+255),w,b
 31763  01BB8E  6EFD               	movwf	tosl,c
 31764  01BB90  51A9               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 31765  01BB92  6EFE               	movwf	tosh,c
 31766  01BB94  51AA               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 31767  01BB96  6EFF               	movwf	tosu,c
 31768  01BB98  50FA               	movf	pclath,w,c
 31769  01BB9A  0012               	return		;indir
 31770  01BB9C                     __end_of_INT1_CallBack:
 31771                           	opt callstack 0
 31772                           
 31773 ;; *************** function _INT1_DefaultInterruptHandler *****************
 31774 ;; Defined at:
 31775 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 31776 ;; Parameters:    Size  Location     Type
 31777 ;;		None
 31778 ;; Auto vars:     Size  Location     Type
 31779 ;;		None
 31780 ;; Return value:  Size  Location     Type
 31781 ;;                  1  [STACK] void 
 31782 ;; Registers used:
 31783 ;;		None
 31784 ;; Tracked objects:
 31785 ;;		On entry : 3F/0
 31786 ;;		On exit  : 0/0
 31787 ;;		Unchanged: 0/0
 31788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31793 ;;Total ram usage:        0 bytes
 31794 ;; Hardware stack levels used:    1
 31795 ;; Hardware stack levels required when called:    3
 31796 ;; This function calls:
 31797 ;;		Nothing
 31798 ;; This function is called by:
 31799 ;;		_EXT_INT_Initialize
 31800 ;;		_INT1_CallBack
 31801 ;; This function uses a reentrant model
 31802 ;;
 31803                           
 31804                           	psect	text138
 31805  01BF22                     __ptext138:
 31806                           	opt callstack 0
 31807  01BF22                     _INT1_DefaultInterruptHandler:
 31808                           	opt callstack 12
 31809                           
 31810                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31811                           
 31812                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31813                           ;incstack = 0
 31814  01BF22  0012               	return		;funcret
 31815  01BF24                     __end_of_INT1_DefaultInterruptHandler:
 31816                           	opt callstack 0
 31817                           
 31818 ;; *************** function _switch_handler *****************
 31819 ;; Defined at:
 31820 ;;		line 58 in file "dio.c"
 31821 ;; Parameters:    Size  Location     Type
 31822 ;;		None
 31823 ;; Auto vars:     Size  Location     Type
 31824 ;;  i               1  [STACK] unsigned char 
 31825 ;;  sw_value        1  [STACK] unsigned char 
 31826 ;; Return value:  Size  Location     Type
 31827 ;;                  1  [STACK] void 
 31828 ;; Registers used:
 31829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 31830 ;; Tracked objects:
 31831 ;;		On entry : 3F/0
 31832 ;;		On exit  : 0/0
 31833 ;;		Unchanged: 0/0
 31834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31839 ;;Total ram usage:        0 bytes
 31840 ;; Hardware stack levels used:    1
 31841 ;; Hardware stack levels required when called:    3
 31842 ;; This function calls:
 31843 ;;		Nothing
 31844 ;; This function is called by:
 31845 ;;		_start_switch_handler
 31846 ;;		_INT1_CallBack
 31847 ;; This function uses a reentrant model
 31848 ;;
 31849                           
 31850                           	psect	text139
 31851  0193C8                     __ptext139:
 31852                           	opt callstack 0
 31853  0193C8                     _switch_handler:
 31854                           	opt callstack 0
 31855                           
 31856                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31857  0193C8  52E6               	movf	postinc1,f,c
 31858  0193CA  52E6               	movf	postinc1,f,c
 31859                           
 31860                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 31861                           ;stkvar	_i @ sp[(-2)+0]
 31862                           
 31863                           ;incstack = 0
 31864  0193CC  0EFE               	movlw	-2
 31865  0193CE  6AE3               	clrf	plusw1,c
 31866  0193D0  9EBD               	bcf	189,7,c	;volatile
 31867  0193D2  9ABF               	bcf	191,5,c	;volatile
 31868                           
 31869                           ;dio.c: 73:  __nop();
 31870  0193D4  F000               	nop	
 31871                           
 31872                           ;dio.c: 74:  __nop();
 31873  0193D6  F000               	nop	
 31874                           
 31875                           ;dio.c: 75:  __nop();
 31876  0193D8  F000               	nop	
 31877  0193DA  D019               	goto	l10431
 31878  0193DC                     l10419:
 31879                           
 31880                           ;dio.c: 80:    sw_value = PORTFbits.RF3;
 31881  0193DC  A6CF               	btfss	207,3,c	;volatile
 31882  0193DE  D011               	goto	u964_20
 31883  0193E0  D00D               	goto	u964_21
 31884  0193E2                     u961_28:
 31885                           
 31886                           ;stkvar	_sw_value @ sp[(-2)+1]
 31887  0193E2  0EFF               	movlw	-1
 31888  0193E4  0060  F033  FFE3   	movff	btemp+11,plusw1
 31889                           
 31890                           ;dio.c: 81:    break;
 31891  0193EA  D027               	goto	l10433
 31892  0193EC                     l10421:
 31893                           
 31894                           ;dio.c: 83:    sw_value = PORTFbits.RF2;
 31895  0193EC  A4CF               	btfss	207,2,c	;volatile
 31896  0193EE  D009               	goto	u964_20
 31897  0193F0  D005               	goto	u964_21
 31898  0193F2                     l10423:
 31899                           
 31900                           ;dio.c: 86:    sw_value = PORTFbits.RF1;
 31901  0193F2  A2CF               	btfss	207,1,c	;volatile
 31902  0193F4  D006               	goto	u964_20
 31903  0193F6  D002               	goto	u964_21
 31904  0193F8                     l10425:
 31905                           
 31906                           ;dio.c: 89:    sw_value = PORTFbits.RF0;
 31907  0193F8  A0CF               	btfss	207,0,c	;volatile
 31908  0193FA  D003               	goto	u964_20
 31909  0193FC                     u964_21:
 31910  0193FC  6A0C               	clrf	(btemp+11)^0,c
 31911  0193FE  2A0C               	incf	(btemp+11)^0,f,c
 31912  019400  D7F0               	goto	u961_28
 31913  019402                     u964_20:
 31914  019402  6A0C               	clrf	(btemp+11)^0,c
 31915  019404  D7EE               	goto	u961_28
 31916  019406                     l10427:
 31917                           
 31918                           ;dio.c: 92:    sw_value = 1;
 31919                           ;stkvar	_sw_value @ sp[(-2)+1]
 31920  019406  0EFF               	movlw	-1
 31921  019408  6AE3               	clrf	plusw1,c
 31922  01940A  2AE3               	incf	plusw1,f,c
 31923                           
 31924                           ;dio.c: 93:    break;
 31925  01940C  D016               	goto	l10433
 31926  01940E                     l10431:
 31927                           
 31928                           ;stkvar	_i @ sp[(-2)+0]
 31929  01940E  0EFE               	movlw	-2
 31930  019410  50E3               	movf	plusw1,w,c
 31931  019412  6E0B               	movwf	(btemp+10)^0,c
 31932  019414  6A0C               	clrf	(btemp+11)^0,c
 31933                           
 31934                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31935                           ; Switch size 1, requested type "simple"
 31936                           ; Number of cases is 1, Range of values is 0 to 0
 31937                           ; switch strategies available:
 31938                           ; Name         Instructions Cycles
 31939                           ; simple_byte            4     3 (average)
 31940                           ;	Chosen strategy is simple_byte
 31941  019416  500C               	movf	(btemp+11)^0,w,c
 31942  019418  0A00               	xorlw	0	; case 0
 31943  01941A  A4D8               	btfss	status,2,c
 31944  01941C  D7F4               	goto	l10427
 31945                           
 31946                           ; Switch size 1, requested type "simple"
 31947                           ; Number of cases is 4, Range of values is 0 to 3
 31948                           ; switch strategies available:
 31949                           ; Name         Instructions Cycles
 31950                           ; simple_byte           13     7 (average)
 31951                           ;	Chosen strategy is simple_byte
 31952  01941E  500B               	movf	(btemp+10)^0,w,c
 31953  019420  0A00               	xorlw	0	; case 0
 31954  019422  B4D8               	btfsc	status,2,c
 31955  019424  D7E9               	goto	l10425
 31956  019426  0A01               	xorlw	1	; case 1
 31957  019428  B4D8               	btfsc	status,2,c
 31958  01942A  D7E3               	goto	l10423
 31959  01942C  0A03               	xorlw	3	; case 2
 31960  01942E  B4D8               	btfsc	status,2,c
 31961  019430  D7DD               	goto	l10421
 31962  019432  0A01               	xorlw	1	; case 3
 31963  019434  B4D8               	btfsc	status,2,c
 31964  019436  D7D2               	goto	l10419
 31965  019438  D7E6               	goto	l10427
 31966  01943A                     l10433:
 31967                           
 31968                           ;dio.c: 97:   if (sw_value) {
 31969                           ;stkvar	_sw_value @ sp[(-2)+1]
 31970  01943A  0EFF               	movlw	-1
 31971  01943C  50E3               	movf	plusw1,w,c
 31972  01943E  B4D8               	btfsc	status,2,c
 31973  019440  D018               	goto	l10439
 31974                           
 31975                           ;dio.c: 98:    if (S.button[i].sw == SW_ON) {
 31976                           ;stkvar	_i @ sp[(-2)+0]
 31977  019442  0EFE               	movlw	-2
 31978  019444  50E3               	movf	plusw1,w,c
 31979  019446  0D05               	mullw	5
 31980  019448  0EC6               	movlw	low _S
 31981  01944A  24F3               	addwf	243,w,c
 31982  01944C  6ED9               	movwf	fsr2l,c
 31983  01944E  0E01               	movlw	high _S
 31984  019450  20F4               	addwfc	prodh,w,c
 31985  019452  6EDA               	movwf	fsr2h,c
 31986  019454  04DE               	decf	postinc2,w,c
 31987  019456  A4D8               	btfss	status,2,c
 31988  019458  D049               	goto	l10447
 31989                           
 31990                           ;dio.c: 99:     S.button[i].sw = SW_OFF;
 31991                           ;stkvar	_i @ sp[(-2)+0]
 31992  01945A  0EFE               	movlw	-2
 31993  01945C  50E3               	movf	plusw1,w,c
 31994  01945E  0D05               	mullw	5
 31995  019460  0EC6               	movlw	low _S
 31996  019462  24F3               	addwf	243,w,c
 31997  019464  6ED9               	movwf	fsr2l,c
 31998  019466  0E01               	movlw	high _S
 31999  019468  20F4               	addwfc	prodh,w,c
 32000  01946A  6EDA               	movwf	fsr2h,c
 32001  01946C  0E00               	movlw	0
 32002  01946E  6EDF               	movwf	indf2,c
 32003  019470  D03D               	goto	l10447
 32004  019472                     l10439:
 32005                           
 32006                           ;dio.c: 102:    if (S.button[i].sw == SW_OFF) {
 32007                           ;stkvar	_i @ sp[(-2)+0]
 32008  019472  0EFE               	movlw	-2
 32009  019474  50E3               	movf	plusw1,w,c
 32010  019476  0D05               	mullw	5
 32011  019478  0EC6               	movlw	low _S
 32012  01947A  24F3               	addwf	243,w,c
 32013  01947C  6ED9               	movwf	fsr2l,c
 32014  01947E  0E01               	movlw	high _S
 32015  019480  20F4               	addwfc	prodh,w,c
 32016  019482  6EDA               	movwf	fsr2h,c
 32017  019484  50DF               	movf	indf2,w,c
 32018  019486  A4D8               	btfss	status,2,c
 32019  019488  D031               	goto	l10447
 32020                           
 32021                           ;dio.c: 103:     S.button[i].sw = SW_ON;
 32022                           ;stkvar	_i @ sp[(-2)+0]
 32023  01948A  0EFE               	movlw	-2
 32024  01948C  50E3               	movf	plusw1,w,c
 32025  01948E  0D05               	mullw	5
 32026  019490  0EC6               	movlw	low _S
 32027  019492  24F3               	addwf	243,w,c
 32028  019494  6ED9               	movwf	fsr2l,c
 32029  019496  0E01               	movlw	high _S
 32030  019498  20F4               	addwfc	prodh,w,c
 32031  01949A  6EDA               	movwf	fsr2h,c
 32032  01949C  0E01               	movlw	1
 32033  01949E  6EDF               	movwf	indf2,c
 32034                           
 32035                           ;dio.c: 104:     S.button[i].count = V.timerint_count;
 32036  0194A0  EE20  F1BB         	lfsr	2,_V+187	;volatile
 32037                           
 32038                           ;stkvar	_i @ sp[(-2)+0]
 32039  0194A4  0EFE               	movlw	-2
 32040  0194A6  50E3               	movf	plusw1,w,c
 32041  0194A8  0D05               	mullw	5
 32042  0194AA  0EC7               	movlw	low (_S+1)
 32043  0194AC  24F3               	addwf	243,w,c
 32044  0194AE  6EE9               	movwf	fsr0l,c
 32045  0194B0  0E01               	movlw	high (_S+1)
 32046  0194B2  20F4               	addwfc	prodh,w,c
 32047  0194B4  6EEA               	movwf	fsr0h,c
 32048  0194B6  006F FF7B FFEE     	movff	postinc2,postinc0
 32049  0194BC  006F FF7B FFEE     	movff	postinc2,postinc0
 32050  0194C2  006F FF7B FFEE     	movff	postinc2,postinc0
 32051  0194C8  006F FF7B FFEE     	movff	postinc2,postinc0
 32052                           
 32053                           ;dio.c: 105:     S.sw_bitmap |= 1 << i;
 32054                           ;stkvar	_i @ sp[(-2)+0]
 32055  0194CE  0EFE               	movlw	-2
 32056  0194D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 32057  0194D6  0E01               	movlw	1
 32058  0194D8  6E0B               	movwf	(btemp+10)^0,c
 32059  0194DA  2A0C               	incf	(btemp+11)^0,f,c
 32060  0194DC  D002               	goto	u968_24
 32061  0194DE                     u968_25:
 32062  0194DE  90D8               	bcf	status,0,c
 32063  0194E0  360B               	rlcf	(btemp+10)^0,f,c
 32064  0194E2                     u968_24:
 32065  0194E2  2E0C               	decfsz	(btemp+11)^0,f,c
 32066  0194E4  D7FC               	goto	u968_25
 32067  0194E6  500B               	movf	(btemp+10)^0,w,c
 32068  0194E8  0101               	movlb	1	; () banked
 32069  0194EA  13EE               	iorwf	(_S+40)& (0+255),f,b	;volatile
 32070  0194EC                     l10447:
 32071                           
 32072                           ;dio.c: 108:  } while (++i < 4);
 32073                           ;stkvar	_i @ sp[(-2)+0]
 32074  0194EC  0EFE               	movlw	-2
 32075  0194EE  2AE3               	incf	plusw1,f,c
 32076  0194F0  0EFE               	movlw	-2
 32077  0194F2  006F FF8C  F001    	movff	plusw1,btemp
 32078  0194F8  0E03               	movlw	3
 32079  0194FA  6401               	cpfsgt	btemp^0,c
 32080  0194FC  D788               	goto	l10431
 32081                           
 32082                           ;dio.c: 117:  do { LATDbits.LATD7 = 1; } while(0);
 32083  0194FE  8EBD               	bsf	189,7,c	;volatile
 32084                           
 32085                           ;dio.c: 118:  do { LATFbits.LATF5 = 1; } while(0);
 32086  019500  8ABF               	bsf	191,5,c	;volatile
 32087                           
 32088                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32089  019502  52E5               	movf	postdec1,f,c
 32090  019504  52E5               	movf	postdec1,f,c
 32091  019506  0012               	return		;funcret
 32092  019508                     __end_of_switch_handler:
 32093                           	opt callstack 0
 32094                           
 32095 ;; *************** function _TMR5_ISR *****************
 32096 ;; Defined at:
 32097 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 32098 ;; Parameters:    Size  Location     Type
 32099 ;;		None
 32100 ;; Auto vars:     Size  Location     Type
 32101 ;;		None
 32102 ;; Return value:  Size  Location     Type
 32103 ;;                  1    wreg      void 
 32104 ;; Registers used:
 32105 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 32106 ;; Tracked objects:
 32107 ;;		On entry : 0/0
 32108 ;;		On exit  : 3F/0
 32109 ;;		Unchanged: 0/0
 32110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32113 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32114 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32115 ;;Total ram usage:       15 bytes
 32116 ;; Hardware stack levels used:    1
 32117 ;; Hardware stack levels required when called:    9
 32118 ;; This function calls:
 32119 ;;		_TMR5_CallBack
 32120 ;;		_TMR5_WriteTimer
 32121 ;; This function is called by:
 32122 ;;		Interrupt level 1
 32123 ;; This function uses a non-reentrant model
 32124 ;;
 32125                           
 32126                           	psect	text140
 32127  019F9C                     __ptext140:
 32128                           	opt callstack 0
 32129  019F9C                     _TMR5_ISR:
 32130                           	opt callstack 8
 32131                           
 32132                           ;incstack = 0
 32133  019F9C  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 32134  019FA2  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 32135  019FA8  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 32136  019FAE  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 32137  019FB4  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 32138  019FBA  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 32139  019FC0  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 32140  019FC6  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 32141  019FCC  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 32142  019FD2  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 32143  019FD8  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 32144  019FDE  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 32145  019FE4  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 32146  019FEA  EE16  F0AE         	lfsr	1,___intlo_sp
 32147                           
 32148                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 32149  019FEE  0139               	movlb	57	; () banked
 32150  019FF0  9DA8               	bcf	168,6,b	;volatile
 32151                           
 32152                           ; BSR set to: 57
 32153                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 32154  019FF2  0060  F2DB  FFE6   	movff	_timer5ReloadVal,postinc1
 32155  019FF8  0060  F2DF  FFE6   	movff	_timer5ReloadVal+1,postinc1
 32156  019FFE  EC47  F0DA         	call	_TMR5_WriteTimer	;wreg free
 32157                           
 32158                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 32159  01A002  0101               	movlb	1	; () banked
 32160  01A004  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
 32161  01A006  6E2B               	movwf	??_TMR5_ISR^0,c
 32162  01A008  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 32163  01A00A  0E05               	movlw	5
 32164  01A00C  262B               	addwf	??_TMR5_ISR^0,f,c
 32165  01A00E  0E00               	movlw	0
 32166  01A010  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 32167  01A012  0100               	movlb	0	; () banked
 32168  01A014  4BB4               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 32169  01A016  2BB5               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 32170  01A018  502B               	movf	??_TMR5_ISR^0,w,c
 32171  01A01A  5DB4               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 32172  01A01C  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 32173  01A01E  59B5               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 32174  01A020  A0D8               	btfss	status,0,c
 32175  01A022  D005               	goto	i1l1019
 32176                           
 32177                           ; BSR set to: 0
 32178                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 32179  01A024  ECCE  F0DD         	call	_TMR5_CallBack	;wreg free
 32180                           
 32181                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 32182  01A028  0100               	movlb	0	; () banked
 32183  01A02A  6BB4               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 32184  01A02C  6BB5               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 32185  01A02E                     i1l1019:
 32186                           
 32187                           ; BSR set to: 0
 32188  01A02E  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 32189  01A034  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 32190  01A03A  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 32191  01A040  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 32192  01A046  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 32193  01A04C  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 32194  01A052  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 32195  01A058  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 32196  01A05E  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 32197  01A064  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 32198  01A06A  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 32199  01A070  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 32200  01A076  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 32201  01A07C  0011               	retfie		f
 32202  01A07E                     __end_of_TMR5_ISR:
 32203                           	opt callstack 0
 32204                           
 32205 ;; *************** function _TMR5_WriteTimer *****************
 32206 ;; Defined at:
 32207 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 32208 ;; Parameters:    Size  Location     Type
 32209 ;;  timerVal        2  [STACK] unsigned short 
 32210 ;; Auto vars:     Size  Location     Type
 32211 ;;		None
 32212 ;; Return value:  Size  Location     Type
 32213 ;;                  1  [STACK] void 
 32214 ;; Registers used:
 32215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32216 ;; Tracked objects:
 32217 ;;		On entry : 3F/39
 32218 ;;		On exit  : 0/0
 32219 ;;		Unchanged: 0/0
 32220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32225 ;;Total ram usage:        0 bytes
 32226 ;; Hardware stack levels used:    1
 32227 ;; Hardware stack levels required when called:    3
 32228 ;; This function calls:
 32229 ;;		Nothing
 32230 ;; This function is called by:
 32231 ;;		_TMR5_ISR
 32232 ;; This function uses a reentrant model
 32233 ;;
 32234                           
 32235                           	psect	text141
 32236  01B48E                     __ptext141:
 32237                           	opt callstack 0
 32238  01B48E                     _TMR5_WriteTimer:
 32239                           	opt callstack 13
 32240                           
 32241                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 32242                           
 32243                           ; BSR set to: 0
 32244                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32245                           ;incstack = 0
 32246  01B48E  A49A               	btfss	154,2,c	;volatile
 32247  01B490  D00F               	goto	l10627
 32248                           
 32249                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 32250  01B492  909A               	bcf	154,0,c	;volatile
 32251                           
 32252                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 32253                           ;stkvar	_timerVal @ sp[(0)+-2]
 32254  01B494  0EFF               	movlw	255
 32255  01B496  24E1               	addwf	fsr1l,w,c
 32256  01B498  6ED9               	movwf	fsr2l,c
 32257  01B49A  0EFF               	movlw	255
 32258  01B49C  20E2               	addwfc	fsr1h,w,c
 32259  01B49E  6EDA               	movwf	fsr2h,c
 32260  01B4A0  50DF               	movf	indf2,w,c
 32261  01B4A2  6E99               	movwf	153,c	;volatile
 32262                           
 32263                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 32264                           ;stkvar	_timerVal @ sp[(0)+-2]
 32265  01B4A4  0EFE               	movlw	-2
 32266  01B4A6  006F FF8F FF98     	movff	plusw1,16280	;volatile
 32267                           
 32268                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 32269  01B4AC  809A               	bsf	154,0,c	;volatile
 32270                           
 32271                           ;mcc_generated_files/tmr5.c: 144:  } else {
 32272  01B4AE  D00C               	goto	l1002
 32273  01B4B0                     l10627:
 32274                           
 32275                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 32276                           ;stkvar	_timerVal @ sp[(0)+-2]
 32277  01B4B0  0EFF               	movlw	255
 32278  01B4B2  24E1               	addwf	fsr1l,w,c
 32279  01B4B4  6ED9               	movwf	fsr2l,c
 32280  01B4B6  0EFF               	movlw	255
 32281  01B4B8  20E2               	addwfc	fsr1h,w,c
 32282  01B4BA  6EDA               	movwf	fsr2h,c
 32283  01B4BC  50DF               	movf	indf2,w,c
 32284  01B4BE  6E99               	movwf	153,c	;volatile
 32285                           
 32286                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 32287                           ;stkvar	_timerVal @ sp[(0)+-2]
 32288  01B4C0  0EFE               	movlw	-2
 32289  01B4C2  006F FF8F FF98     	movff	plusw1,16280	;volatile
 32290  01B4C8                     l1002:
 32291                           
 32292                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32293  01B4C8  52E5               	movf	postdec1,f,c
 32294  01B4CA  52E5               	movf	postdec1,f,c
 32295  01B4CC  0012               	return		;funcret
 32296  01B4CE                     __end_of_TMR5_WriteTimer:
 32297                           	opt callstack 0
 32298                           
 32299 ;; *************** function _TMR5_CallBack *****************
 32300 ;; Defined at:
 32301 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 32302 ;; Parameters:    Size  Location     Type
 32303 ;;		None
 32304 ;; Auto vars:     Size  Location     Type
 32305 ;;		None
 32306 ;; Return value:  Size  Location     Type
 32307 ;;                  1  [STACK] void 
 32308 ;; Registers used:
 32309 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 32310 ;; Tracked objects:
 32311 ;;		On entry : 3F/0
 32312 ;;		On exit  : 0/0
 32313 ;;		Unchanged: 0/0
 32314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32319 ;;Total ram usage:        0 bytes
 32320 ;; Hardware stack levels used:    1
 32321 ;; Hardware stack levels required when called:    8
 32322 ;; This function calls:
 32323 ;;		Absolute function
 32324 ;;		_TMR5_DefaultInterruptHandler
 32325 ;; This function is called by:
 32326 ;;		_TMR5_ISR
 32327 ;; This function uses a reentrant model
 32328 ;;
 32329                           
 32330                           	psect	text142
 32331  01BB9C                     __ptext142:
 32332                           	opt callstack 0
 32333  01BB9C                     _TMR5_CallBack:
 32334                           	opt callstack 8
 32335                           
 32336                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 32337                           
 32338                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32339                           ;incstack = 0
 32340  01BB9C  0100               	movlb	0	; () banked
 32341  01BB9E  5193               	movf	_TMR5_InterruptHandler& (0+255),w,b
 32342  01BBA0  1194               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 32343  01BBA2  1195               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 32344  01BBA4  B4D8               	btfsc	status,2,c
 32345  01BBA6  0012               	return	
 32346                           
 32347                           ; BSR set to: 0
 32348                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 32349  01BBA8  D801               	call	u1000_28
 32350  01BBAA  0012               	return	
 32351  01BBAC                     u1000_28:
 32352  01BBAC  0005               	push	
 32353  01BBAE  6EFA               	movwf	pclath,c
 32354  01BBB0  5193               	movf	_TMR5_InterruptHandler& (0+255),w,b
 32355  01BBB2  6EFD               	movwf	tosl,c
 32356  01BBB4  5194               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 32357  01BBB6  6EFE               	movwf	tosh,c
 32358  01BBB8  5195               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 32359  01BBBA  6EFF               	movwf	tosu,c
 32360  01BBBC  50FA               	movf	pclath,w,c
 32361  01BBBE  0012               	return		;indir
 32362  01BBC0                     __end_of_TMR5_CallBack:
 32363                           	opt callstack 0
 32364                           
 32365 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 32366 ;; Defined at:
 32367 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 32368 ;; Parameters:    Size  Location     Type
 32369 ;;		None
 32370 ;; Auto vars:     Size  Location     Type
 32371 ;;		None
 32372 ;; Return value:  Size  Location     Type
 32373 ;;                  1  [STACK] void 
 32374 ;; Registers used:
 32375 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32376 ;; Tracked objects:
 32377 ;;		On entry : 3F/0
 32378 ;;		On exit  : 0/0
 32379 ;;		Unchanged: 0/0
 32380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32385 ;;Total ram usage:        0 bytes
 32386 ;; Hardware stack levels used:    1
 32387 ;; Hardware stack levels required when called:    7
 32388 ;; This function calls:
 32389 ;;		_check_day_time
 32390 ;; This function is called by:
 32391 ;;		_TMR5_Initialize
 32392 ;;		_TMR5_CallBack
 32393 ;; This function uses a reentrant model
 32394 ;;
 32395                           
 32396                           	psect	text143
 32397  01B5FC                     __ptext143:
 32398                           	opt callstack 0
 32399  01B5FC                     _TMR5_DefaultInterruptHandler:
 32400                           	opt callstack 8
 32401                           
 32402                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 32403                           
 32404                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32405                           ;incstack = 0
 32406  01B5FC  A0BE               	btfss	190,0,c	;volatile
 32407  01B5FE  D002               	goto	u945_20
 32408  01B600  0E01               	movlw	1
 32409  01B602  D001               	goto	u945_26
 32410  01B604                     u945_20:
 32411  01B604  0E00               	movlw	0
 32412  01B606                     u945_26:
 32413  01B606  0AFF               	xorlw	255
 32414  01B608  6E0C               	movwf	(btemp+11)^0,c
 32415  01B60A  50BE               	movf	190,w,c	;volatile
 32416  01B60C  180C               	xorwf	(btemp+11)^0,w,c
 32417  01B60E  0BFE               	andlw	-2
 32418  01B610  180C               	xorwf	(btemp+11)^0,w,c
 32419  01B612  6EBE               	movwf	190,c	;volatile
 32420                           
 32421                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 32422  01B614  0E01               	movlw	1
 32423  01B616  0101               	movlb	1	; () banked
 32424  01B618  27BB               	addwf	(_V+187)& (0+255),f,b	;volatile
 32425  01B61A  0E00               	movlw	0
 32426  01B61C  23BC               	addwfc	(_V+188)& (0+255),f,b	;volatile
 32427  01B61E  23BD               	addwfc	(_V+189)& (0+255),f,b	;volatile
 32428  01B620  23BE               	addwfc	(_V+190)& (0+255),f,b	;volatile
 32429                           
 32430                           ; BSR set to: 1
 32431                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 32432  01B622  0E01               	movlw	1
 32433  01B624  2781               	addwf	(_V+129)& (0+255),f,b	;volatile
 32434  01B626  0E00               	movlw	0
 32435  01B628  2382               	addwfc	(_V+130)& (0+255),f,b	;volatile
 32436  01B62A  2383               	addwfc	(_V+131)& (0+255),f,b	;volatile
 32437  01B62C  2384               	addwfc	(_V+132)& (0+255),f,b	;volatile
 32438                           
 32439                           ; BSR set to: 1
 32440                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 32441  01B62E  EC63  F0C3         	call	_check_day_time	;wreg free
 32442                           
 32443                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32444  01B632  0012               	return		;funcret
 32445  01B634                     __end_of_TMR5_DefaultInterruptHandler:
 32446                           	opt callstack 0
 32447                           
 32448 ;; *************** function _check_day_time *****************
 32449 ;; Defined at:
 32450 ;;		line 164 in file "mbmc.c"
 32451 ;; Parameters:    Size  Location     Type
 32452 ;;		None
 32453 ;; Auto vars:     Size  Location     Type
 32454 ;;  light           4  [STACK] float 
 32455 ;; Return value:  Size  Location     Type
 32456 ;;                  1  [STACK] _Bool 
 32457 ;; Registers used:
 32458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32459 ;; Tracked objects:
 32460 ;;		On entry : 3F/1
 32461 ;;		On exit  : 0/0
 32462 ;;		Unchanged: 0/0
 32463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32468 ;;Total ram usage:        0 bytes
 32469 ;; Hardware stack levels used:    1
 32470 ;; Hardware stack levels required when called:    6
 32471 ;; This function calls:
 32472 ;;		___flge
 32473 ;;		_conv_raw_result
 32474 ;;		_get_ac_charger_relay
 32475 ;;		_set_ac_charger_relay
 32476 ;; This function is called by:
 32477 ;;		_TMR5_DefaultInterruptHandler
 32478 ;; This function uses a reentrant model
 32479 ;;
 32480                           
 32481                           	psect	text144
 32482  0186C6                     __ptext144:
 32483                           	opt callstack 0
 32484  0186C6                     _check_day_time:
 32485                           	opt callstack 0
 32486                           
 32487                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32488  0186C6  52E6               	movf	postinc1,f,c
 32489  0186C8  52E6               	movf	postinc1,f,c
 32490  0186CA  52E6               	movf	postinc1,f,c
 32491  0186CC  52E6               	movf	postinc1,f,c
 32492                           
 32493                           ;mbmc.c: 166:  static uint8_t day_delay = 0;;mbmc.c: 167:  float light;;mbmc.c: 169:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 32494                           
 32495                           ;incstack = 0
 32496  0186CE  0E00               	movlw	0
 32497  0186D0  6EE6               	movwf	postinc1,c
 32498  0186D2  0E0D               	movlw	13
 32499  0186D4  6EE6               	movwf	postinc1,c
 32500  0186D6  EC0D  F0A8         	call	_conv_raw_result	;wreg free
 32501                           
 32502                           ;stkvar	_light @ sp[(-4)+0]
 32503  0186DA  0EFC               	movlw	-4
 32504  0186DC  0060  F007  FFE3   	movff	btemp,plusw1
 32505  0186E2  0EFD               	movlw	-3
 32506  0186E4  0060  F00B  FFE3   	movff	btemp+1,plusw1
 32507  0186EA  0EFE               	movlw	-2
 32508  0186EC  0060  F00F  FFE3   	movff	btemp+2,plusw1
 32509  0186F2  0EFF               	movlw	-1
 32510  0186F4  0060  F013  FFE3   	movff	btemp+3,plusw1
 32511                           
 32512                           ;mbmc.c: 171:  if (!day_delay++ && V.system_stable) {
 32513  0186FA  2A42               	incf	check_day_time@day_delay^0,f,c
 32514  0186FC  0442               	decf	check_day_time@day_delay^0,w,c
 32515  0186FE  A4D8               	btfss	status,2,c
 32516  018700  D0A9               	goto	l1899
 32517  018702  0101               	movlb	1	; () banked
 32518  018704  51AE               	movf	(_V+174)& (0+255),w,b	;volatile
 32519  018706  B4D8               	btfsc	status,2,c
 32520  018708  D0A5               	goto	l1899
 32521                           
 32522                           ; BSR set to: 1
 32523                           ;mbmc.c: 172:   if (C.soc > 15) {
 32524  01870A  EE21  F3B1         	lfsr	2,_C+178	;volatile
 32525  01870E  0E01               	movlw	1
 32526  018710  50DB               	movf	plusw2,w,c
 32527  018712  E104               	bnz	u924_20
 32528  018714  0E10               	movlw	16
 32529  018716  5CDE               	subwf	postinc2,w,c
 32530  018718  A0D8               	btfss	status,0,c
 32531  01871A  D073               	goto	l9769
 32532  01871C                     u924_20:
 32533                           
 32534                           ; BSR set to: 1
 32535                           ;mbmc.c: 173:    if (!C.day) {
 32536  01871C  EE22  F01D         	lfsr	2,_C+286	;volatile
 32537  018720  50DF               	movf	indf2,w,c
 32538  018722  A4D8               	btfss	status,2,c
 32539  018724  D035               	goto	l9757
 32540                           
 32541                           ; BSR set to: 1
 32542                           ;mbmc.c: 174:     if (light > 22.0) {
 32543                           ;stkvar	_light @ sp[(-4)+0]
 32544  018726  0EFC               	movlw	-4
 32545  018728  006F FF8F FFE6     	movff	plusw1,postinc1
 32546  01872E  006F FF8F FFE6     	movff	plusw1,postinc1
 32547  018734  006F FF8F FFE6     	movff	plusw1,postinc1
 32548  01873A  006F FF8F FFE6     	movff	plusw1,postinc1
 32549  018740  0E00               	movlw	0
 32550  018742  6EE6               	movwf	postinc1,c
 32551  018744  0E00               	movlw	0
 32552  018746  6EE6               	movwf	postinc1,c
 32553  018748  0EB0               	movlw	176
 32554  01874A  6EE6               	movwf	postinc1,c
 32555  01874C  0E41               	movlw	65
 32556  01874E  6EE6               	movwf	postinc1,c
 32557  018750  EC3A  F0C7         	call	___flge	;wreg free
 32558  018754  B001               	btfsc	btemp& (0+255),0,c
 32559  018756  D07E               	goto	l1899
 32560                           
 32561                           ;mbmc.c: 175:      C.day = 1;
 32562  018758  0E01               	movlw	1
 32563  01875A  006F FFA0  F81D    	movff	wreg,_C+286	;volatile
 32564                           
 32565                           ;mbmc.c: 176:      C.day_start = V.ticks;
 32566  018760  EE20  F181         	lfsr	2,_V+129	;volatile
 32567  018764  006F FF78  F81E    	movff	postinc2,_C+287	;volatile
 32568  01876A  006F FF78  F81F    	movff	postinc2,_C+288	;volatile
 32569  018770  006F FF78  F820    	movff	postinc2,_C+289	;volatile
 32570  018776  006F FF74  F821    	movff	postdec2,_C+290	;volatile
 32571                           
 32572                           ;mbmc.c: 177:      if (get_ac_charger_relay()) {
 32573  01877C  EC37  F0DF         	call	_get_ac_charger_relay	;wreg free
 32574  018780  5001               	movf	btemp^0,w,c
 32575  018782  B4D8               	btfsc	status,2,c
 32576  018784  D06B               	goto	l1895
 32577                           
 32578                           ;mbmc.c: 178:       set_ac_charger_relay(0);
 32579  018786  0E00               	movlw	0
 32580  018788  6EE6               	movwf	postinc1,c
 32581  01878A  EC21  F0DF         	call	_set_ac_charger_relay	;wreg free
 32582  01878E  D066               	goto	l1895
 32583  018790                     l9757:
 32584                           
 32585                           ; BSR set to: 1
 32586                           ;mbmc.c: 183:     if (light < 12.0) {
 32587  018790  0E00               	movlw	0
 32588  018792  6EE6               	movwf	postinc1,c
 32589  018794  0E00               	movlw	0
 32590  018796  6EE6               	movwf	postinc1,c
 32591  018798  0E40               	movlw	64
 32592  01879A  6EE6               	movwf	postinc1,c
 32593  01879C  0E41               	movlw	65
 32594  01879E  6EE6               	movwf	postinc1,c
 32595                           
 32596                           ;stkvar	_light @ sp[(-8)+0]
 32597  0187A0  0EF8               	movlw	-8
 32598  0187A2  006F FF8F FFE6     	movff	plusw1,postinc1
 32599  0187A8  006F FF8F FFE6     	movff	plusw1,postinc1
 32600  0187AE  006F FF8F FFE6     	movff	plusw1,postinc1
 32601  0187B4  006F FF8F FFE6     	movff	plusw1,postinc1
 32602  0187BA  EC3A  F0C7         	call	___flge	;wreg free
 32603  0187BE  B001               	btfsc	btemp& (0+255),0,c
 32604  0187C0  D049               	goto	l1899
 32605                           
 32606                           ;mbmc.c: 184:      C.day = 0;
 32607  0187C2  0E00               	movlw	0
 32608  0187C4  006F FFA0  F81D    	movff	wreg,_C+286	;volatile
 32609                           
 32610                           ;mbmc.c: 185:      C.day_end = V.ticks;
 32611  0187CA  EE20  F181         	lfsr	2,_V+129	;volatile
 32612  0187CE  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 32613  0187D4  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 32614  0187DA  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 32615  0187E0  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 32616                           
 32617                           ;mbmc.c: 189:      if ((C.soc < 40)) {
 32618  0187E6  EE21  F3B1         	lfsr	2,_C+178	;volatile
 32619  0187EA  0E01               	movlw	1
 32620  0187EC  50DB               	movf	plusw2,w,c
 32621  0187EE  E136               	bnz	l1895
 32622  0187F0  0E28               	movlw	40
 32623  0187F2  5CDE               	subwf	postinc2,w,c
 32624  0187F4  B0D8               	btfsc	status,0,c
 32625  0187F6  D032               	goto	l1895
 32626                           
 32627                           ;mbmc.c: 190:       set_ac_charger_relay(1);
 32628  0187F8  0E01               	movlw	1
 32629  0187FA  6EE6               	movwf	postinc1,c
 32630  0187FC  EC21  F0DF         	call	_set_ac_charger_relay	;wreg free
 32631  018800  D02D               	goto	l1895
 32632  018802                     l9769:
 32633                           
 32634                           ; BSR set to: 1
 32635                           ;mbmc.c: 196:    if (C.p_pv < C.p_inverter) {
 32636  018802  EE21  F377         	lfsr	2,_C+120	;volatile
 32637  018806  006F FF7B FFE6     	movff	postinc2,postinc1
 32638  01880C  006F FF7B FFE6     	movff	postinc2,postinc1
 32639  018812  006F FF7B FFE6     	movff	postinc2,postinc1
 32640  018818  006F FF7B FFE6     	movff	postinc2,postinc1
 32641  01881E  EE21  F37B         	lfsr	2,_C+124	;volatile
 32642  018822  006F FF7B FFE6     	movff	postinc2,postinc1
 32643  018828  006F FF7B FFE6     	movff	postinc2,postinc1
 32644  01882E  006F FF7B FFE6     	movff	postinc2,postinc1
 32645  018834  006F FF7B FFE6     	movff	postinc2,postinc1
 32646  01883A  EC3A  F0C7         	call	___flge	;wreg free
 32647  01883E  B001               	btfsc	btemp& (0+255),0,c
 32648  018840  D009               	goto	l1899
 32649                           
 32650                           ;mbmc.c: 197:     if (!get_ac_charger_relay()) {
 32651  018842  EC37  F0DF         	call	_get_ac_charger_relay	;wreg free
 32652  018846  5001               	movf	btemp^0,w,c
 32653  018848  A4D8               	btfss	status,2,c
 32654  01884A  D004               	goto	l1899
 32655                           
 32656                           ;mbmc.c: 198:      set_ac_charger_relay(1);
 32657  01884C  0E01               	movlw	1
 32658  01884E  6EE6               	movwf	postinc1,c
 32659  018850  EC21  F0DF         	call	_set_ac_charger_relay	;wreg free
 32660  018854                     l1899:
 32661                           
 32662                           ;mbmc.c: 203:  if (day_delay >= 240)
 32663  018854  0EEF               	movlw	239
 32664  018856  6442               	cpfsgt	check_day_time@day_delay^0,c
 32665  018858  D001               	goto	l1895
 32666                           
 32667                           ;mbmc.c: 204:   day_delay = 0;
 32668  01885A  6A42               	clrf	check_day_time@day_delay^0,c
 32669  01885C                     l1895:
 32670                           
 32671                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32672  01885C  52E5               	movf	postdec1,f,c
 32673  01885E  52E5               	movf	postdec1,f,c
 32674  018860  52E5               	movf	postdec1,f,c
 32675  018862  52E5               	movf	postdec1,f,c
 32676  018864  0012               	return		;funcret
 32677  018866                     __end_of_check_day_time:
 32678                           	opt callstack 0
 32679                           
 32680 ;; *************** function _set_ac_charger_relay *****************
 32681 ;; Defined at:
 32682 ;;		line 134 in file "mbmc.c"
 32683 ;; Parameters:    Size  Location     Type
 32684 ;;  mode            1  [STACK] _Bool 
 32685 ;; Auto vars:     Size  Location     Type
 32686 ;;		None
 32687 ;; Return value:  Size  Location     Type
 32688 ;;                  1  [STACK] void 
 32689 ;; Registers used:
 32690 ;;		wreg, fsr1l, fsr1h
 32691 ;; Tracked objects:
 32692 ;;		On entry : 0/1
 32693 ;;		On exit  : 0/0
 32694 ;;		Unchanged: 0/0
 32695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32700 ;;Total ram usage:        0 bytes
 32701 ;; Hardware stack levels used:    1
 32702 ;; Hardware stack levels required when called:    3
 32703 ;; This function calls:
 32704 ;;		Nothing
 32705 ;; This function is called by:
 32706 ;;		_check_day_time
 32707 ;; This function uses a reentrant model
 32708 ;;
 32709                           
 32710                           	psect	text145
 32711  01BE42                     __ptext145:
 32712                           	opt callstack 0
 32713  01BE42                     _set_ac_charger_relay:
 32714                           	opt callstack 10
 32715                           
 32716                           ;mbmc.c: 134: void set_ac_charger_relay(_Bool mode);mbmc.c: 135: {;mbmc.c: 136:  LATDbit
      +                          s.LATD6 = mode;
 32717                           ;stkvar	_mode @ sp[(0)+-1]
 32718                           
 32719                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32720                           ;incstack = 0
 32721  01BE42  0EFF               	movlw	-1
 32722  01BE44  B0E3               	btfsc	plusw1,0,c
 32723  01BE46  D002               	bra	u919_25
 32724  01BE48  9CBD               	bcf	189,6,c	;volatile
 32725  01BE4A  D001               	bra	u919_26
 32726  01BE4C                     u919_25:
 32727  01BE4C  8CBD               	bsf	189,6,c	;volatile
 32728  01BE4E                     u919_26:
 32729                           
 32730                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 32731  01BE4E  52E5               	movf	postdec1,f,c
 32732  01BE50  0012               	return		;funcret
 32733  01BE52                     __end_of_set_ac_charger_relay:
 32734                           	opt callstack 0
 32735                           
 32736 ;; *************** function _get_ac_charger_relay *****************
 32737 ;; Defined at:
 32738 ;;		line 139 in file "mbmc.c"
 32739 ;; Parameters:    Size  Location     Type
 32740 ;;		None
 32741 ;; Auto vars:     Size  Location     Type
 32742 ;;		None
 32743 ;; Return value:  Size  Location     Type
 32744 ;;                  1  [STACK] _Bool 
 32745 ;; Registers used:
 32746 ;;		btemp
 32747 ;; Tracked objects:
 32748 ;;		On entry : 0/1
 32749 ;;		On exit  : 0/0
 32750 ;;		Unchanged: 0/0
 32751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32756 ;;Total ram usage:        0 bytes
 32757 ;; Hardware stack levels used:    1
 32758 ;; Hardware stack levels required when called:    3
 32759 ;; This function calls:
 32760 ;;		Nothing
 32761 ;; This function is called by:
 32762 ;;		_check_day_time
 32763 ;;		_calc_bsoc
 32764 ;; This function uses a reentrant model
 32765 ;;
 32766                           
 32767                           	psect	text146
 32768  01BE6E                     __ptext146:
 32769                           	opt callstack 0
 32770  01BE6E                     _get_ac_charger_relay:
 32771                           	opt callstack 11
 32772                           
 32773                           ;mbmc.c: 141:  return LATDbits.LATD6;
 32774                           
 32775                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32776                           ;incstack = 0
 32777  01BE6E  ACBD               	btfss	189,6,c	;volatile
 32778  01BE70  D003               	goto	u938_20
 32779  01BE72  6A01               	clrf	btemp^0,c
 32780  01BE74  2A01               	incf	btemp^0,f,c
 32781  01BE76  0012               	return	
 32782  01BE78                     u938_20:
 32783  01BE78  6A01               	clrf	btemp^0,c
 32784                           
 32785                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 32786  01BE7A  0012               	return		;funcret
 32787  01BE7C                     __end_of_get_ac_charger_relay:
 32788                           	opt callstack 0
 32789                           
 32790 ;; *************** function _TMR3_ISR *****************
 32791 ;; Defined at:
 32792 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 32793 ;; Parameters:    Size  Location     Type
 32794 ;;		None
 32795 ;; Auto vars:     Size  Location     Type
 32796 ;;		None
 32797 ;; Return value:  Size  Location     Type
 32798 ;;                  1    wreg      void 
 32799 ;; Registers used:
 32800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32801 ;; Tracked objects:
 32802 ;;		On entry : 0/0
 32803 ;;		On exit  : 3F/0
 32804 ;;		Unchanged: 0/0
 32805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32808 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32809 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32810 ;;Total ram usage:       25 bytes
 32811 ;; Hardware stack levels used:    1
 32812 ;; Hardware stack levels required when called:   14
 32813 ;; This function calls:
 32814 ;;		_TMR3_CallBack
 32815 ;;		_TMR3_WriteTimer
 32816 ;; This function is called by:
 32817 ;;		Interrupt level 1
 32818 ;; This function uses a non-reentrant model
 32819 ;;
 32820                           
 32821                           	psect	text147
 32822  018FD8                     __ptext147:
 32823                           	opt callstack 0
 32824  018FD8                     _TMR3_ISR:
 32825                           	opt callstack 3
 32826                           
 32827                           ;incstack = 0
 32828  018FD8  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 32829  018FDE  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 32830  018FE4  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 32831  018FEA  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 32832  018FF0  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 32833  018FF6  0060  F004  F0EA   	movff	btemp,??_TMR3_ISR+5
 32834  018FFC  0060  F008  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 32835  019002  0060  F00C  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 32836  019008  0060  F010  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 32837  01900E  0060  F014  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 32838  019014  0060  F018  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 32839  01901A  0060  F01C  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 32840  019020  0060  F020  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 32841  019026  0060  F024  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 32842  01902C  0060  F028  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 32843  019032  0060  F02C  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 32844  019038  0060  F030  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 32845  01903E  0060  F044  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 32846  019044  0060  F048  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 32847  01904A  0060  F04C  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 32848  019050  0060  F050  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 32849  019056  0060  F054  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 32850  01905C  0060  F058  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 32851  019062  0060  F05C  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 32852  019068  0060  F060  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 32853  01906E  EE16  F0AE         	lfsr	1,___intlo_sp
 32854                           
 32855                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 32856  019072  0139               	movlb	57	; () banked
 32857  019074  9DA6               	bcf	166,6,b	;volatile
 32858                           
 32859                           ; BSR set to: 57
 32860                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 32861  019076  0060  F2CB  FFE6   	movff	_timer3ReloadVal,postinc1
 32862  01907C  0060  F2CF  FFE6   	movff	_timer3ReloadVal+1,postinc1
 32863  019082  EC67  F0DA         	call	_TMR3_WriteTimer	;wreg free
 32864                           
 32865                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 32866  019086  0100               	movlb	0	; () banked
 32867  019088  4BB0               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 32868  01908A  2BB1               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 32869  01908C  51B1               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 32870  01908E  E104               	bnz	i1u1257_20
 32871  019090  0E28               	movlw	40
 32872  019092  5DB0               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 32873  019094  A0D8               	btfss	status,0,c
 32874  019096  D005               	goto	i1l1207
 32875  019098                     i1u1257_20:
 32876                           
 32877                           ; BSR set to: 0
 32878                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 32879  019098  ECE0  F0DD         	call	_TMR3_CallBack	;wreg free
 32880                           
 32881                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 32882  01909C  0100               	movlb	0	; () banked
 32883  01909E  6BB0               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 32884  0190A0  6BB1               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 32885  0190A2                     i1l1207:
 32886                           
 32887                           ; BSR set to: 0
 32888  0190A2  0060  F3F4  F018   	movff	??_TMR3_ISR+24,btemp+23
 32889  0190A8  0060  F3F0  F017   	movff	??_TMR3_ISR+23,btemp+22
 32890  0190AE  0060  F3EC  F016   	movff	??_TMR3_ISR+22,btemp+21
 32891  0190B4  0060  F3E8  F015   	movff	??_TMR3_ISR+21,btemp+20
 32892  0190BA  0060  F3E4  F014   	movff	??_TMR3_ISR+20,btemp+19
 32893  0190C0  0060  F3E0  F013   	movff	??_TMR3_ISR+19,btemp+18
 32894  0190C6  0060  F3DC  F012   	movff	??_TMR3_ISR+18,btemp+17
 32895  0190CC  0060  F3D8  F011   	movff	??_TMR3_ISR+17,btemp+16
 32896  0190D2  0060  F3D4  F00C   	movff	??_TMR3_ISR+16,btemp+11
 32897  0190D8  0060  F3D0  F00B   	movff	??_TMR3_ISR+15,btemp+10
 32898  0190DE  0060  F3CC  F00A   	movff	??_TMR3_ISR+14,btemp+9
 32899  0190E4  0060  F3C8  F009   	movff	??_TMR3_ISR+13,btemp+8
 32900  0190EA  0060  F3C4  F008   	movff	??_TMR3_ISR+12,btemp+7
 32901  0190F0  0060  F3C0  F007   	movff	??_TMR3_ISR+11,btemp+6
 32902  0190F6  0060  F3BC  F006   	movff	??_TMR3_ISR+10,btemp+5
 32903  0190FC  0060  F3B8  F005   	movff	??_TMR3_ISR+9,btemp+4
 32904  019102  0060  F3B4  F004   	movff	??_TMR3_ISR+8,btemp+3
 32905  019108  0060  F3B0  F003   	movff	??_TMR3_ISR+7,btemp+2
 32906  01910E  0060  F3AC  F002   	movff	??_TMR3_ISR+6,btemp+1
 32907  019114  0060  F3A8  F001   	movff	??_TMR3_ISR+5,btemp
 32908  01911A  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 32909  019120  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 32910  019126  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 32911  01912C  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 32912  019132  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 32913  019138  0011               	retfie		f
 32914  01913A                     __end_of_TMR3_ISR:
 32915                           	opt callstack 0
 32916                           
 32917 ;; *************** function _TMR3_WriteTimer *****************
 32918 ;; Defined at:
 32919 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 32920 ;; Parameters:    Size  Location     Type
 32921 ;;  timerVal        2  [STACK] unsigned short 
 32922 ;; Auto vars:     Size  Location     Type
 32923 ;;		None
 32924 ;; Return value:  Size  Location     Type
 32925 ;;                  1  [STACK] void 
 32926 ;; Registers used:
 32927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32928 ;; Tracked objects:
 32929 ;;		On entry : 3F/39
 32930 ;;		On exit  : 0/0
 32931 ;;		Unchanged: 0/0
 32932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32937 ;;Total ram usage:        0 bytes
 32938 ;; Hardware stack levels used:    1
 32939 ;; Hardware stack levels required when called:    3
 32940 ;; This function calls:
 32941 ;;		Nothing
 32942 ;; This function is called by:
 32943 ;;		_TMR3_ISR
 32944 ;; This function uses a reentrant model
 32945 ;;
 32946                           
 32947                           	psect	text148
 32948  01B4CE                     __ptext148:
 32949                           	opt callstack 0
 32950  01B4CE                     _TMR3_WriteTimer:
 32951                           	opt callstack 13
 32952                           
 32953                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 32954                           
 32955                           ; BSR set to: 0
 32956                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32957                           ;incstack = 0
 32958  01B4CE  A4A6               	btfss	166,2,c	;volatile
 32959  01B4D0  D00F               	goto	l10645
 32960                           
 32961                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 32962  01B4D2  90A6               	bcf	166,0,c	;volatile
 32963                           
 32964                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 32965                           ;stkvar	_timerVal @ sp[(0)+-2]
 32966  01B4D4  0EFF               	movlw	255
 32967  01B4D6  24E1               	addwf	fsr1l,w,c
 32968  01B4D8  6ED9               	movwf	fsr2l,c
 32969  01B4DA  0EFF               	movlw	255
 32970  01B4DC  20E2               	addwfc	fsr1h,w,c
 32971  01B4DE  6EDA               	movwf	fsr2h,c
 32972  01B4E0  50DF               	movf	indf2,w,c
 32973  01B4E2  6EA5               	movwf	165,c	;volatile
 32974                           
 32975                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 32976                           ;stkvar	_timerVal @ sp[(0)+-2]
 32977  01B4E4  0EFE               	movlw	-2
 32978  01B4E6  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32979                           
 32980                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 32981  01B4EC  80A6               	bsf	166,0,c	;volatile
 32982                           
 32983                           ;mcc_generated_files/tmr3.c: 141:     }
 32984  01B4EE  D00C               	goto	l1190
 32985  01B4F0                     l10645:
 32986                           
 32987                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 32988                           ;stkvar	_timerVal @ sp[(0)+-2]
 32989  01B4F0  0EFF               	movlw	255
 32990  01B4F2  24E1               	addwf	fsr1l,w,c
 32991  01B4F4  6ED9               	movwf	fsr2l,c
 32992  01B4F6  0EFF               	movlw	255
 32993  01B4F8  20E2               	addwfc	fsr1h,w,c
 32994  01B4FA  6EDA               	movwf	fsr2h,c
 32995  01B4FC  50DF               	movf	indf2,w,c
 32996  01B4FE  6EA5               	movwf	165,c	;volatile
 32997                           
 32998                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 32999                           ;stkvar	_timerVal @ sp[(0)+-2]
 33000  01B500  0EFE               	movlw	-2
 33001  01B502  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 33002  01B508                     l1190:
 33003                           
 33004                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 33005  01B508  52E5               	movf	postdec1,f,c
 33006  01B50A  52E5               	movf	postdec1,f,c
 33007  01B50C  0012               	return		;funcret
 33008  01B50E                     __end_of_TMR3_WriteTimer:
 33009                           	opt callstack 0
 33010                           
 33011 ;; *************** function _TMR3_CallBack *****************
 33012 ;; Defined at:
 33013 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 33014 ;; Parameters:    Size  Location     Type
 33015 ;;		None
 33016 ;; Auto vars:     Size  Location     Type
 33017 ;;		None
 33018 ;; Return value:  Size  Location     Type
 33019 ;;                  1  [STACK] void 
 33020 ;; Registers used:
 33021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 33022 ;; Tracked objects:
 33023 ;;		On entry : 3F/0
 33024 ;;		On exit  : 0/0
 33025 ;;		Unchanged: 0/0
 33026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33031 ;;Total ram usage:        0 bytes
 33032 ;; Hardware stack levels used:    1
 33033 ;; Hardware stack levels required when called:   13
 33034 ;; This function calls:
 33035 ;;		Absolute function
 33036 ;;		_TMR3_DefaultInterruptHandler
 33037 ;;		_calc_bsoc
 33038 ;; This function is called by:
 33039 ;;		_TMR3_ISR
 33040 ;; This function uses a reentrant model
 33041 ;;
 33042                           
 33043                           	psect	text149
 33044  01BBC0                     __ptext149:
 33045                           	opt callstack 0
 33046  01BBC0                     _TMR3_CallBack:
 33047                           	opt callstack 3
 33048                           
 33049                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 33050                           
 33051                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33052                           ;incstack = 0
 33053  01BBC0  0100               	movlb	0	; () banked
 33054  01BBC2  5190               	movf	_TMR3_InterruptHandler& (0+255),w,b
 33055  01BBC4  1191               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 33056  01BBC6  1192               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 33057  01BBC8  B4D8               	btfsc	status,2,c
 33058  01BBCA  0012               	return	
 33059                           
 33060                           ; BSR set to: 0
 33061                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 33062  01BBCC  D801               	call	u1242_28
 33063  01BBCE  0012               	return	
 33064  01BBD0                     u1242_28:
 33065  01BBD0  0005               	push	
 33066  01BBD2  6EFA               	movwf	pclath,c
 33067  01BBD4  5190               	movf	_TMR3_InterruptHandler& (0+255),w,b
 33068  01BBD6  6EFD               	movwf	tosl,c
 33069  01BBD8  5191               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 33070  01BBDA  6EFE               	movwf	tosh,c
 33071  01BBDC  5192               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 33072  01BBDE  6EFF               	movwf	tosu,c
 33073  01BBE0  50FA               	movf	pclath,w,c
 33074  01BBE2  0012               	return		;indir
 33075  01BBE4                     __end_of_TMR3_CallBack:
 33076                           	opt callstack 0
 33077                           
 33078 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 33079 ;; Defined at:
 33080 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 33081 ;; Parameters:    Size  Location     Type
 33082 ;;		None
 33083 ;; Auto vars:     Size  Location     Type
 33084 ;;		None
 33085 ;; Return value:  Size  Location     Type
 33086 ;;                  1  [STACK] void 
 33087 ;; Registers used:
 33088 ;;		None
 33089 ;; Tracked objects:
 33090 ;;		On entry : 3F/0
 33091 ;;		On exit  : 0/0
 33092 ;;		Unchanged: 0/0
 33093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33098 ;;Total ram usage:        0 bytes
 33099 ;; Hardware stack levels used:    1
 33100 ;; Hardware stack levels required when called:    3
 33101 ;; This function calls:
 33102 ;;		Nothing
 33103 ;; This function is called by:
 33104 ;;		_TMR3_Initialize
 33105 ;;		_TMR3_CallBack
 33106 ;; This function uses a reentrant model
 33107 ;;
 33108                           
 33109                           	psect	text150
 33110  01BF24                     __ptext150:
 33111                           	opt callstack 0
 33112  01BF24                     _TMR3_DefaultInterruptHandler:
 33113                           	opt callstack 12
 33114                           
 33115                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33116                           
 33117                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33118                           ;incstack = 0
 33119  01BF24  0012               	return		;funcret
 33120  01BF26                     __end_of_TMR3_DefaultInterruptHandler:
 33121                           	opt callstack 0
 33122                           
 33123 ;; *************** function _calc_bsoc *****************
 33124 ;; Defined at:
 33125 ;;		line 39 in file "bsoc.c"
 33126 ;; Parameters:    Size  Location     Type
 33127 ;;		None
 33128 ;; Auto vars:     Size  Location     Type
 33129 ;;  log_ptr         2  [STACK] PTR unsigned char 
 33130 ;;		 -> port_data(512), 
 33131 ;; Return value:  Size  Location     Type
 33132 ;;                  1  [STACK] void 
 33133 ;; Registers used:
 33134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 33135 ;; Tracked objects:
 33136 ;;		On entry : 3F/0
 33137 ;;		On exit  : 5/1
 33138 ;;		Unchanged: 0/0
 33139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33144 ;;Total ram usage:        0 bytes
 33145 ;; Hardware stack levels used:    1
 33146 ;; Hardware stack levels required when called:   12
 33147 ;; This function calls:
 33148 ;;		_StartTimer
 33149 ;;		___asfladd
 33150 ;;		___fldiv
 33151 ;;		___flge
 33152 ;;		___flmul
 33153 ;;		___flneg
 33154 ;;		___fltol
 33155 ;;		_fabsf
 33156 ;;		_get_ac_charger_relay
 33157 ;;		_port_data_dma_ptr
 33158 ;;		_send_port_data_dma
 33159 ;;		_sprintf
 33160 ;;		_strlen
 33161 ;; This function is called by:
 33162 ;;		_init_bsoc
 33163 ;;		_TMR3_CallBack
 33164 ;; This function uses a reentrant model
 33165 ;;
 33166                           
 33167                           	psect	text151
 33168  014324                     __ptext151:
 33169                           	opt callstack 0
 33170  014324                     _calc_bsoc:
 33171                           	opt callstack 0
 33172                           
 33173                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33174  014324  52E6               	movf	postinc1,f,c
 33175  014326  52E6               	movf	postinc1,f,c
 33176                           
 33177                           ;incstack = 0
 33178                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 44:  do { LATEbits.LATE1 = 1; } while(0);
 33179  014328  82BE               	bsf	190,1,c	;volatile
 33180                           
 33181                           ;bsoc.c: 46:  C.dynamic_ah += (C.c_bat / 3600.0);
 33182  01432A  0E00               	movlw	0
 33183  01432C  6EE6               	movwf	postinc1,c
 33184  01432E  0E00               	movlw	0
 33185  014330  6EE6               	movwf	postinc1,c
 33186  014332  0E61               	movlw	97
 33187  014334  6EE6               	movwf	postinc1,c
 33188  014336  0E45               	movlw	69
 33189  014338  6EE6               	movwf	postinc1,c
 33190  01433A  EE21  F343         	lfsr	2,_C+68	;volatile
 33191  01433E  006F FF7B FFE6     	movff	postinc2,postinc1
 33192  014344  006F FF7B FFE6     	movff	postinc2,postinc1
 33193  01434A  006F FF7B FFE6     	movff	postinc2,postinc1
 33194  014350  006F FF7B FFE6     	movff	postinc2,postinc1
 33195  014356  EC50  F0A5         	call	___fldiv	;wreg free
 33196  01435A  0060  F007  FFE6   	movff	btemp,postinc1
 33197  014360  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33198  014366  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33199  01436C  0060  F013  FFE6   	movff	btemp+3,postinc1
 33200  014372  0E8F               	movlw	low (_C+144)
 33201  014374  6EE6               	movwf	postinc1,c
 33202  014376  0E07               	movlw	high (_C+144)
 33203  014378  6EE6               	movwf	postinc1,c
 33204  01437A  ECBF  F0D5         	call	___asfladd	;wreg free
 33205                           
 33206                           ;bsoc.c: 47:  if (C.dynamic_ah > (C.bank_ah))
 33207  01437E  EE21  F38F         	lfsr	2,_C+144	;volatile
 33208  014382  006F FF7B FFE6     	movff	postinc2,postinc1
 33209  014388  006F FF7B FFE6     	movff	postinc2,postinc1
 33210  01438E  006F FF7B FFE6     	movff	postinc2,postinc1
 33211  014394  006F FF7B FFE6     	movff	postinc2,postinc1
 33212  01439A  EE21  F38B         	lfsr	2,_C+140	;volatile
 33213  01439E  006F FF7B FFE6     	movff	postinc2,postinc1
 33214  0143A4  006F FF7B FFE6     	movff	postinc2,postinc1
 33215  0143AA  006F FF7B FFE6     	movff	postinc2,postinc1
 33216  0143B0  006F FF7B FFE6     	movff	postinc2,postinc1
 33217  0143B6  EC3A  F0C7         	call	___flge	;wreg free
 33218  0143BA  B001               	btfsc	btemp& (0+255),0,c
 33219  0143BC  D00E               	goto	l12661
 33220                           
 33221                           ;bsoc.c: 48:   C.dynamic_ah = C.bank_ah;
 33222  0143BE  EE21  F38B         	lfsr	2,_C+140	;volatile
 33223  0143C2  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 33224  0143C8  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 33225  0143CE  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 33226  0143D4  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 33227  0143DA                     l12661:
 33228                           
 33229                           ;bsoc.c: 49:  if (C.dynamic_ah < 0.1)
 33230  0143DA  0ECD               	movlw	205
 33231  0143DC  6EE6               	movwf	postinc1,c
 33232  0143DE  0ECC               	movlw	204
 33233  0143E0  6EE6               	movwf	postinc1,c
 33234  0143E2  0ECC               	movlw	204
 33235  0143E4  6EE6               	movwf	postinc1,c
 33236  0143E6  0E3D               	movlw	61
 33237  0143E8  6EE6               	movwf	postinc1,c
 33238  0143EA  EE21  F38F         	lfsr	2,_C+144	;volatile
 33239  0143EE  006F FF7B FFE6     	movff	postinc2,postinc1
 33240  0143F4  006F FF7B FFE6     	movff	postinc2,postinc1
 33241  0143FA  006F FF7B FFE6     	movff	postinc2,postinc1
 33242  014400  006F FF7B FFE6     	movff	postinc2,postinc1
 33243  014406  EC3A  F0C7         	call	___flge	;wreg free
 33244  01440A  B001               	btfsc	btemp& (0+255),0,c
 33245  01440C  D010               	goto	l12665
 33246                           
 33247                           ;bsoc.c: 50:   C.dynamic_ah = 0.1;
 33248  01440E  0ECD               	movlw	205
 33249  014410  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 33250  014416  0ECC               	movlw	204
 33251  014418  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 33252  01441E  0ECC               	movlw	204
 33253  014420  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 33254  014426  0E3D               	movlw	61
 33255  014428  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 33256  01442E                     l12665:
 33257                           
 33258                           ;bsoc.c: 52:  C.pv_ah += (C.c_pv / 3600.0);
 33259  01442E  0E00               	movlw	0
 33260  014430  6EE6               	movwf	postinc1,c
 33261  014432  0E00               	movlw	0
 33262  014434  6EE6               	movwf	postinc1,c
 33263  014436  0E61               	movlw	97
 33264  014438  6EE6               	movwf	postinc1,c
 33265  01443A  0E45               	movlw	69
 33266  01443C  6EE6               	movwf	postinc1,c
 33267  01443E  EE21  F347         	lfsr	2,_C+72	;volatile
 33268  014442  006F FF7B FFE6     	movff	postinc2,postinc1
 33269  014448  006F FF7B FFE6     	movff	postinc2,postinc1
 33270  01444E  006F FF7B FFE6     	movff	postinc2,postinc1
 33271  014454  006F FF7B FFE6     	movff	postinc2,postinc1
 33272  01445A  EC50  F0A5         	call	___fldiv	;wreg free
 33273  01445E  0060  F007  FFE6   	movff	btemp,postinc1
 33274  014464  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33275  01446A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33276  014470  0060  F013  FFE6   	movff	btemp+3,postinc1
 33277  014476  0E93               	movlw	low (_C+148)
 33278  014478  6EE6               	movwf	postinc1,c
 33279  01447A  0E07               	movlw	high (_C+148)
 33280  01447C  6EE6               	movwf	postinc1,c
 33281  01447E  ECBF  F0D5         	call	___asfladd	;wreg free
 33282                           
 33283                           ;bsoc.c: 53:  C.pvkw += (C.p_pv / 3600.0);
 33284  014482  0E00               	movlw	0
 33285  014484  6EE6               	movwf	postinc1,c
 33286  014486  0E00               	movlw	0
 33287  014488  6EE6               	movwf	postinc1,c
 33288  01448A  0E61               	movlw	97
 33289  01448C  6EE6               	movwf	postinc1,c
 33290  01448E  0E45               	movlw	69
 33291  014490  6EE6               	movwf	postinc1,c
 33292  014492  EE21  F37B         	lfsr	2,_C+124	;volatile
 33293  014496  006F FF7B FFE6     	movff	postinc2,postinc1
 33294  01449C  006F FF7B FFE6     	movff	postinc2,postinc1
 33295  0144A2  006F FF7B FFE6     	movff	postinc2,postinc1
 33296  0144A8  006F FF7B FFE6     	movff	postinc2,postinc1
 33297  0144AE  EC50  F0A5         	call	___fldiv	;wreg free
 33298  0144B2  0060  F007  FFE6   	movff	btemp,postinc1
 33299  0144B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33300  0144BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33301  0144C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 33302  0144CA  0EA3               	movlw	low (_C+164)
 33303  0144CC  6EE6               	movwf	postinc1,c
 33304  0144CE  0E07               	movlw	high (_C+164)
 33305  0144D0  6EE6               	movwf	postinc1,c
 33306  0144D2  ECBF  F0D5         	call	___asfladd	;wreg free
 33307                           
 33308                           ;bsoc.c: 54:  C.invkw += (C.p_inverter / 3600.0);
 33309  0144D6  0E00               	movlw	0
 33310  0144D8  6EE6               	movwf	postinc1,c
 33311  0144DA  0E00               	movlw	0
 33312  0144DC  6EE6               	movwf	postinc1,c
 33313  0144DE  0E61               	movlw	97
 33314  0144E0  6EE6               	movwf	postinc1,c
 33315  0144E2  0E45               	movlw	69
 33316  0144E4  6EE6               	movwf	postinc1,c
 33317  0144E6  EE21  F377         	lfsr	2,_C+120	;volatile
 33318  0144EA  006F FF7B FFE6     	movff	postinc2,postinc1
 33319  0144F0  006F FF7B FFE6     	movff	postinc2,postinc1
 33320  0144F6  006F FF7B FFE6     	movff	postinc2,postinc1
 33321  0144FC  006F FF7B FFE6     	movff	postinc2,postinc1
 33322  014502  EC50  F0A5         	call	___fldiv	;wreg free
 33323  014506  0060  F007  FFE6   	movff	btemp,postinc1
 33324  01450C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33325  014512  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33326  014518  0060  F013  FFE6   	movff	btemp+3,postinc1
 33327  01451E  0EA7               	movlw	low (_C+168)
 33328  014520  6EE6               	movwf	postinc1,c
 33329  014522  0E07               	movlw	high (_C+168)
 33330  014524  6EE6               	movwf	postinc1,c
 33331  014526  ECBF  F0D5         	call	___asfladd	;wreg free
 33332                           
 33333                           ;bsoc.c: 55:  C.loadkw += (C.p_load / 3600.0);
 33334  01452A  0E00               	movlw	0
 33335  01452C  6EE6               	movwf	postinc1,c
 33336  01452E  0E00               	movlw	0
 33337  014530  6EE6               	movwf	postinc1,c
 33338  014532  0E61               	movlw	97
 33339  014534  6EE6               	movwf	postinc1,c
 33340  014536  0E45               	movlw	69
 33341  014538  6EE6               	movwf	postinc1,c
 33342  01453A  EE21  F373         	lfsr	2,_C+116	;volatile
 33343  01453E  006F FF7B FFE6     	movff	postinc2,postinc1
 33344  014544  006F FF7B FFE6     	movff	postinc2,postinc1
 33345  01454A  006F FF7B FFE6     	movff	postinc2,postinc1
 33346  014550  006F FF7B FFE6     	movff	postinc2,postinc1
 33347  014556  EC50  F0A5         	call	___fldiv	;wreg free
 33348  01455A  0060  F007  FFE6   	movff	btemp,postinc1
 33349  014560  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33350  014566  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33351  01456C  0060  F013  FFE6   	movff	btemp+3,postinc1
 33352  014572  0EAB               	movlw	low (_C+172)
 33353  014574  6EE6               	movwf	postinc1,c
 33354  014576  0E07               	movlw	high (_C+172)
 33355  014578  6EE6               	movwf	postinc1,c
 33356  01457A  ECBF  F0D5         	call	___asfladd	;wreg free
 33357                           
 33358                           ;bsoc.c: 56:  if (C.p_bat > 0.0)
 33359  01457E  EE21  F37F         	lfsr	2,_C+128	;volatile
 33360  014582  006F FF7B FFE6     	movff	postinc2,postinc1
 33361  014588  006F FF7B FFE6     	movff	postinc2,postinc1
 33362  01458E  006F FF7B FFE6     	movff	postinc2,postinc1
 33363  014594  006F FF7B FFE6     	movff	postinc2,postinc1
 33364  01459A  0E00               	movlw	0
 33365  01459C  6EE6               	movwf	postinc1,c
 33366  01459E  0E00               	movlw	0
 33367  0145A0  6EE6               	movwf	postinc1,c
 33368  0145A2  0E00               	movlw	0
 33369  0145A4  6EE6               	movwf	postinc1,c
 33370  0145A6  0E00               	movlw	0
 33371  0145A8  6EE6               	movwf	postinc1,c
 33372  0145AA  EC3A  F0C7         	call	___flge	;wreg free
 33373  0145AE  B001               	btfsc	btemp& (0+255),0,c
 33374  0145B0  D02A               	goto	l12671
 33375                           
 33376                           ;bsoc.c: 57:   C.bkwi += (C.p_bat / 3600.0);
 33377  0145B2  0E00               	movlw	0
 33378  0145B4  6EE6               	movwf	postinc1,c
 33379  0145B6  0E00               	movlw	0
 33380  0145B8  6EE6               	movwf	postinc1,c
 33381  0145BA  0E61               	movlw	97
 33382  0145BC  6EE6               	movwf	postinc1,c
 33383  0145BE  0E45               	movlw	69
 33384  0145C0  6EE6               	movwf	postinc1,c
 33385  0145C2  EE21  F37F         	lfsr	2,_C+128	;volatile
 33386  0145C6  006F FF7B FFE6     	movff	postinc2,postinc1
 33387  0145CC  006F FF7B FFE6     	movff	postinc2,postinc1
 33388  0145D2  006F FF7B FFE6     	movff	postinc2,postinc1
 33389  0145D8  006F FF7B FFE6     	movff	postinc2,postinc1
 33390  0145DE  EC50  F0A5         	call	___fldiv	;wreg free
 33391  0145E2  0060  F007  FFE6   	movff	btemp,postinc1
 33392  0145E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33393  0145EE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33394  0145F4  0060  F013  FFE6   	movff	btemp+3,postinc1
 33395  0145FA  0E9B               	movlw	low (_C+156)
 33396  0145FC  6EE6               	movwf	postinc1,c
 33397  0145FE  0E07               	movlw	high (_C+156)
 33398  014600  6EE6               	movwf	postinc1,c
 33399  014602  ECBF  F0D5         	call	___asfladd	;wreg free
 33400  014606                     l12671:
 33401                           
 33402                           ;bsoc.c: 58:  if (C.p_bat < 0.0)
 33403  014606  EE21  F37F         	lfsr	2,_C+128	;volatile
 33404  01460A  0E03               	movlw	3
 33405  01460C  AEDB               	btfss	plusw2,7,c
 33406  01460E  D038               	goto	l12675
 33407                           
 33408                           ;bsoc.c: 59:   C.bkwo += fabsf(C.p_bat / 3600.0);
 33409  014610  0E00               	movlw	0
 33410  014612  6EE6               	movwf	postinc1,c
 33411  014614  0E00               	movlw	0
 33412  014616  6EE6               	movwf	postinc1,c
 33413  014618  0E61               	movlw	97
 33414  01461A  6EE6               	movwf	postinc1,c
 33415  01461C  0E45               	movlw	69
 33416  01461E  6EE6               	movwf	postinc1,c
 33417  014620  EE21  F37F         	lfsr	2,_C+128	;volatile
 33418  014624  006F FF7B FFE6     	movff	postinc2,postinc1
 33419  01462A  006F FF7B FFE6     	movff	postinc2,postinc1
 33420  014630  006F FF7B FFE6     	movff	postinc2,postinc1
 33421  014636  006F FF7B FFE6     	movff	postinc2,postinc1
 33422  01463C  EC50  F0A5         	call	___fldiv	;wreg free
 33423  014640  0060  F007  FFE6   	movff	btemp,postinc1
 33424  014646  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33425  01464C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33426  014652  0060  F013  FFE6   	movff	btemp+3,postinc1
 33427  014658  EC33  F0D2         	call	_fabsf	;wreg free
 33428  01465C  0060  F007  FFE6   	movff	btemp,postinc1
 33429  014662  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33430  014668  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33431  01466E  0060  F013  FFE6   	movff	btemp+3,postinc1
 33432  014674  0E9F               	movlw	low (_C+160)
 33433  014676  6EE6               	movwf	postinc1,c
 33434  014678  0E07               	movlw	high (_C+160)
 33435  01467A  6EE6               	movwf	postinc1,c
 33436  01467C  ECBF  F0D5         	call	___asfladd	;wreg free
 33437  014680                     l12675:
 33438                           
 33439                           ;bsoc.c: 61:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 33440  014680  0E00               	movlw	0
 33441  014682  6EE6               	movwf	postinc1,c
 33442  014684  0E00               	movlw	0
 33443  014686  6EE6               	movwf	postinc1,c
 33444  014688  0EC8               	movlw	200
 33445  01468A  6EE6               	movwf	postinc1,c
 33446  01468C  0E42               	movlw	66
 33447  01468E  6EE6               	movwf	postinc1,c
 33448  014690  EE21  F38B         	lfsr	2,_C+140	;volatile
 33449  014694  006F FF7B FFE6     	movff	postinc2,postinc1
 33450  01469A  006F FF7B FFE6     	movff	postinc2,postinc1
 33451  0146A0  006F FF7B FFE6     	movff	postinc2,postinc1
 33452  0146A6  006F FF7B FFE6     	movff	postinc2,postinc1
 33453  0146AC  EE21  F38F         	lfsr	2,_C+144	;volatile
 33454  0146B0  006F FF7B FFE6     	movff	postinc2,postinc1
 33455  0146B6  006F FF7B FFE6     	movff	postinc2,postinc1
 33456  0146BC  006F FF7B FFE6     	movff	postinc2,postinc1
 33457  0146C2  006F FF7B FFE6     	movff	postinc2,postinc1
 33458  0146C8  EC50  F0A5         	call	___fldiv	;wreg free
 33459  0146CC  0060  F007  FFE6   	movff	btemp,postinc1
 33460  0146D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33461  0146D8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33462  0146DE  0060  F013  FFE6   	movff	btemp+3,postinc1
 33463  0146E4  EC9F  F099         	call	___flmul	;wreg free
 33464  0146E8  0060  F007  FFE6   	movff	btemp,postinc1
 33465  0146EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33466  0146F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33467  0146FA  0060  F013  FFE6   	movff	btemp+3,postinc1
 33468  014700  EC81  F0C6         	call	___fltol	;wreg free
 33469  014704  0060  F004  F00B   	movff	btemp,btemp+10
 33470  01470A  0060  F008  F00C   	movff	btemp+1,btemp+11
 33471  014710  0E01               	movlw	1
 33472  014712  260B               	addwf	(btemp+10)^0,f,c
 33473  014714  0E00               	movlw	0
 33474  014716  220C               	addwfc	(btemp+11)^0,f,c
 33475  014718  0060  F02C  F7B1   	movff	btemp+10,_C+178	;volatile
 33476  01471E  0060  F030  F7B2   	movff	btemp+11,_C+179	;volatile
 33477                           
 33478                           ;bsoc.c: 62:  if (C.soc > 100)
 33479  014724  EE21  F3B1         	lfsr	2,_C+178	;volatile
 33480  014728  0E01               	movlw	1
 33481  01472A  50DB               	movf	plusw2,w,c
 33482  01472C  E104               	bnz	u1234_20
 33483  01472E  0E65               	movlw	101
 33484  014730  5CDE               	subwf	postinc2,w,c
 33485  014732  A0D8               	btfss	status,0,c
 33486  014734  D008               	goto	l12681
 33487  014736                     u1234_20:
 33488                           
 33489                           ;bsoc.c: 63:   C.soc = 100;
 33490  014736  0E64               	movlw	100
 33491  014738  006F FFA0  F7B1    	movff	wreg,_C+178	;volatile
 33492  01473E  0E00               	movlw	0
 33493  014740  006F FFA0  F7B2    	movff	wreg,_C+179	;volatile
 33494  014746                     l12681:
 33495                           
 33496                           ;bsoc.c: 65:  if (C.c_bat < 0.0) {
 33497  014746  EE21  F343         	lfsr	2,_C+68	;volatile
 33498  01474A  0E03               	movlw	3
 33499  01474C  AEDB               	btfss	plusw2,7,c
 33500  01474E  D047               	goto	l2038
 33501                           
 33502                           ;bsoc.c: 66:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 33503  014750  EE21  F343         	lfsr	2,_C+68	;volatile
 33504  014754  006F FF7B FFE6     	movff	postinc2,postinc1
 33505  01475A  006F FF7B FFE6     	movff	postinc2,postinc1
 33506  014760  006F FF7B FFE6     	movff	postinc2,postinc1
 33507  014766  006F FF7B FFE6     	movff	postinc2,postinc1
 33508  01476C  EE21  F38F         	lfsr	2,_C+144	;volatile
 33509  014770  006F FF7B FFE6     	movff	postinc2,postinc1
 33510  014776  006F FF7B FFE6     	movff	postinc2,postinc1
 33511  01477C  006F FF7B FFE6     	movff	postinc2,postinc1
 33512  014782  006F FF7B FFE6     	movff	postinc2,postinc1
 33513  014788  EC50  F0A5         	call	___fldiv	;wreg free
 33514  01478C  0060  F007  FFE6   	movff	btemp,postinc1
 33515  014792  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33516  014798  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33517  01479E  0060  F013  FFE6   	movff	btemp+3,postinc1
 33518  0147A4  ECEB  F0D8         	call	___flneg	;wreg free
 33519  0147A8  0060  F007  FFE6   	movff	btemp,postinc1
 33520  0147AE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33521  0147B4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33522  0147BA  0060  F013  FFE6   	movff	btemp+3,postinc1
 33523  0147C0  EC81  F0C6         	call	___fltol	;wreg free
 33524  0147C4  0060  F004  F00B   	movff	btemp,btemp+10
 33525  0147CA  0060  F008  F00C   	movff	btemp+1,btemp+11
 33526  0147D0  0060  F02C  F7AF   	movff	btemp+10,_C+176	;volatile
 33527  0147D6  0060  F030  F7B0   	movff	btemp+11,_C+177	;volatile
 33528                           
 33529                           ;bsoc.c: 67:  } else {
 33530  0147DC  D008               	goto	l12685
 33531  0147DE                     l2038:
 33532                           
 33533                           ;bsoc.c: 68:   C.runtime = 120;
 33534  0147DE  0E78               	movlw	120
 33535  0147E0  006F FFA0  F7AF    	movff	wreg,_C+176	;volatile
 33536  0147E6  0E00               	movlw	0
 33537  0147E8  006F FFA0  F7B0    	movff	wreg,_C+177	;volatile
 33538  0147EE                     l12685:
 33539                           
 33540                           ;bsoc.c: 70:  if (C.runtime > 120)
 33541  0147EE  EE21  F3AF         	lfsr	2,_C+176	;volatile
 33542  0147F2  0E01               	movlw	1
 33543  0147F4  50DB               	movf	plusw2,w,c
 33544  0147F6  E104               	bnz	u1236_20
 33545  0147F8  0E79               	movlw	121
 33546  0147FA  5CDE               	subwf	postinc2,w,c
 33547  0147FC  A0D8               	btfss	status,0,c
 33548  0147FE  D008               	goto	l12689
 33549  014800                     u1236_20:
 33550                           
 33551                           ;bsoc.c: 71:   C.runtime = 120;
 33552  014800  0E78               	movlw	120
 33553  014802  006F FFA0  F7AF    	movff	wreg,_C+176	;volatile
 33554  014808  0E00               	movlw	0
 33555  01480A  006F FFA0  F7B0    	movff	wreg,_C+177	;volatile
 33556  014810                     l12689:
 33557                           
 33558                           ;bsoc.c: 73:  V.lowint_count++;
 33559  014810  0E01               	movlw	1
 33560  014812  0101               	movlb	1	; () banked
 33561  014814  27B3               	addwf	(_V+179)& (0+255),f,b	;volatile
 33562  014816  0E00               	movlw	0
 33563  014818  23B4               	addwfc	(_V+180)& (0+255),f,b	;volatile
 33564  01481A  23B5               	addwfc	(_V+181)& (0+255),f,b	;volatile
 33565  01481C  23B6               	addwfc	(_V+182)& (0+255),f,b	;volatile
 33566                           
 33567                           ;bsoc.c: 75:  if (!log_update_wait++ && V.system_stable) {
 33568  01481E  2A41               	incf	calc_bsoc@log_update_wait^0,f,c
 33569  014820  0441               	decf	calc_bsoc@log_update_wait^0,w,c
 33570  014822  A4D8               	btfss	status,2,c
 33571  014824  D131               	goto	l12701
 33572                           
 33573                           ; BSR set to: 1
 33574  014826  51AE               	movf	(_V+174)& (0+255),w,b	;volatile
 33575  014828  B4D8               	btfsc	status,2,c
 33576  01482A  D12E               	goto	l12701
 33577                           
 33578                           ; BSR set to: 1
 33579                           ;bsoc.c: 76:   log_ptr = port_data_dma_ptr();
 33580  01482C  EC52  F0DF         	call	_port_data_dma_ptr	;wreg free
 33581                           
 33582                           ;stkvar	_log_ptr @ sp[(-2)+0]
 33583  014830  0EFF               	movlw	-1
 33584  014832  0060  F00B  FFE3   	movff	btemp+1,plusw1
 33585  014838  0EFE               	movlw	-2
 33586  01483A  0060  F007  FFE3   	movff	btemp,plusw1
 33587                           
 33588                           ;bsoc.c: 77:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu\r\n",
 33589  014840  EE22  F022         	lfsr	2,_C+291	;volatile
 33590  014844  006F FF7B FFE6     	movff	postinc2,postinc1
 33591  01484A  006F FF7B FFE6     	movff	postinc2,postinc1
 33592  014850  006F FF7B FFE6     	movff	postinc2,postinc1
 33593  014856  006F FF7B FFE6     	movff	postinc2,postinc1
 33594  01485C  EE22  F01E         	lfsr	2,_C+287	;volatile
 33595  014860  006F FF7B FFE6     	movff	postinc2,postinc1
 33596  014866  006F FF7B FFE6     	movff	postinc2,postinc1
 33597  01486C  006F FF7B FFE6     	movff	postinc2,postinc1
 33598  014872  006F FF7B FFE6     	movff	postinc2,postinc1
 33599  014878  EE22  F01D         	lfsr	2,_C+286	;volatile
 33600  01487C  50DF               	movf	indf2,w,c
 33601  01487E  6EE6               	movwf	postinc1,c
 33602  014880  0E00               	movlw	0
 33603  014882  6EE6               	movwf	postinc1,c
 33604  014884  EC37  F0DF         	call	_get_ac_charger_relay	;wreg free
 33605  014888  5001               	movf	btemp^0,w,c
 33606  01488A  6EE6               	movwf	postinc1,c
 33607  01488C  0E00               	movlw	0
 33608  01488E  6EE6               	movwf	postinc1,c
 33609  014890  EE21  F367         	lfsr	2,_C+104	;volatile
 33610  014894  006F FF7B FFE6     	movff	postinc2,postinc1
 33611  01489A  006F FF7B FFE6     	movff	postinc2,postinc1
 33612  0148A0  006F FF7B FFE6     	movff	postinc2,postinc1
 33613  0148A6  006F FF7B FFE6     	movff	postinc2,postinc1
 33614  0148AC  EE21  F387         	lfsr	2,_C+136	;volatile
 33615  0148B0  006F FF7B FFE6     	movff	postinc2,postinc1
 33616  0148B6  006F FF7B FFE6     	movff	postinc2,postinc1
 33617  0148BC  006F FF7B FFE6     	movff	postinc2,postinc1
 33618  0148C2  006F FF7B FFE6     	movff	postinc2,postinc1
 33619  0148C8  EE21  F3AF         	lfsr	2,_C+176	;volatile
 33620  0148CC  006F FF78  F00B    	movff	postinc2,btemp+10
 33621  0148D2  006F FF74  F00C    	movff	postdec2,btemp+11
 33622  0148D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 33623  0148DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 33624  0148E4  EE21  F3B1         	lfsr	2,_C+178	;volatile
 33625  0148E8  006F FF78  F00B    	movff	postinc2,btemp+10
 33626  0148EE  006F FF74  F00C    	movff	postdec2,btemp+11
 33627  0148F4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 33628  0148FA  0060  F033  FFE6   	movff	btemp+11,postinc1
 33629  014900  EE21  F393         	lfsr	2,_C+148	;volatile
 33630  014904  006F FF7B FFE6     	movff	postinc2,postinc1
 33631  01490A  006F FF7B FFE6     	movff	postinc2,postinc1
 33632  014910  006F FF7B FFE6     	movff	postinc2,postinc1
 33633  014916  006F FF7B FFE6     	movff	postinc2,postinc1
 33634  01491C  EE21  F38F         	lfsr	2,_C+144	;volatile
 33635  014920  006F FF7B FFE6     	movff	postinc2,postinc1
 33636  014926  006F FF7B FFE6     	movff	postinc2,postinc1
 33637  01492C  006F FF7B FFE6     	movff	postinc2,postinc1
 33638  014932  006F FF7B FFE6     	movff	postinc2,postinc1
 33639  014938  EE21  F377         	lfsr	2,_C+120	;volatile
 33640  01493C  006F FF7B FFE6     	movff	postinc2,postinc1
 33641  014942  006F FF7B FFE6     	movff	postinc2,postinc1
 33642  014948  006F FF7B FFE6     	movff	postinc2,postinc1
 33643  01494E  006F FF7B FFE6     	movff	postinc2,postinc1
 33644  014954  EE21  F373         	lfsr	2,_C+116	;volatile
 33645  014958  006F FF7B FFE6     	movff	postinc2,postinc1
 33646  01495E  006F FF7B FFE6     	movff	postinc2,postinc1
 33647  014964  006F FF7B FFE6     	movff	postinc2,postinc1
 33648  01496A  006F FF7B FFE6     	movff	postinc2,postinc1
 33649  014970  EE21  F37B         	lfsr	2,_C+124	;volatile
 33650  014974  006F FF7B FFE6     	movff	postinc2,postinc1
 33651  01497A  006F FF7B FFE6     	movff	postinc2,postinc1
 33652  014980  006F FF7B FFE6     	movff	postinc2,postinc1
 33653  014986  006F FF7B FFE6     	movff	postinc2,postinc1
 33654  01498C  EE21  F37F         	lfsr	2,_C+128	;volatile
 33655  014990  006F FF7B FFE6     	movff	postinc2,postinc1
 33656  014996  006F FF7B FFE6     	movff	postinc2,postinc1
 33657  01499C  006F FF7B FFE6     	movff	postinc2,postinc1
 33658  0149A2  006F FF7B FFE6     	movff	postinc2,postinc1
 33659  0149A8  EE21  F363         	lfsr	2,_C+100	;volatile
 33660  0149AC  006F FF7B FFE6     	movff	postinc2,postinc1
 33661  0149B2  006F FF7B FFE6     	movff	postinc2,postinc1
 33662  0149B8  006F FF7B FFE6     	movff	postinc2,postinc1
 33663  0149BE  006F FF7B FFE6     	movff	postinc2,postinc1
 33664  0149C4  EE21  F34B         	lfsr	2,_C+76	;volatile
 33665  0149C8  006F FF7B FFE6     	movff	postinc2,postinc1
 33666  0149CE  006F FF7B FFE6     	movff	postinc2,postinc1
 33667  0149D4  006F FF7B FFE6     	movff	postinc2,postinc1
 33668  0149DA  006F FF7B FFE6     	movff	postinc2,postinc1
 33669  0149E0  EE21  F34F         	lfsr	2,_C+80	;volatile
 33670  0149E4  006F FF7B FFE6     	movff	postinc2,postinc1
 33671  0149EA  006F FF7B FFE6     	movff	postinc2,postinc1
 33672  0149F0  006F FF7B FFE6     	movff	postinc2,postinc1
 33673  0149F6  006F FF7B FFE6     	movff	postinc2,postinc1
 33674  0149FC  EE21  F353         	lfsr	2,_C+84	;volatile
 33675  014A00  006F FF7B FFE6     	movff	postinc2,postinc1
 33676  014A06  006F FF7B FFE6     	movff	postinc2,postinc1
 33677  014A0C  006F FF7B FFE6     	movff	postinc2,postinc1
 33678  014A12  006F FF7B FFE6     	movff	postinc2,postinc1
 33679  014A18  0060  F607  FFE6   	movff	_V+129,postinc1
 33680  014A1E  0060  F60B  FFE6   	movff	_V+130,postinc1
 33681  014A24  0060  F60F  FFE6   	movff	_V+131,postinc1
 33682  014A2A  0060  F613  FFE6   	movff	_V+132,postinc1
 33683  014A30  0E31               	movlw	49
 33684  014A32  6EE6               	movwf	postinc1,c
 33685  014A34  0E00               	movlw	0
 33686  014A36  6EE6               	movwf	postinc1,c
 33687  014A38  0E53               	movlw	low STR_65
 33688  014A3A  6EE6               	movwf	postinc1,c
 33689  014A3C  0EFC               	movlw	high STR_65
 33690  014A3E  6EE6               	movwf	postinc1,c
 33691                           
 33692                           ;stkvar	_log_ptr @ sp[(-74)+0]
 33693  014A40  0EB6               	movlw	-74
 33694  014A42  006F FF8F FFE6     	movff	plusw1,postinc1
 33695  014A48  006F FF8F FFE6     	movff	plusw1,postinc1
 33696  014A4E  0E4A               	movlw	74
 33697  014A50  6EE6               	movwf	postinc1,c
 33698  014A52  ECD8  F0CD         	call	_sprintf	;wreg free
 33699                           
 33700                           ; BSR set to: 0
 33701                           ;bsoc.c: 83:   StartTimer(TMR_DISPLAY, 125);
 33702  014A56  0E7D               	movlw	125
 33703  014A58  6EE6               	movwf	postinc1,c
 33704  014A5A  0E00               	movlw	0
 33705  014A5C  6EE6               	movwf	postinc1,c
 33706  014A5E  0E0A               	movlw	10
 33707  014A60  6EE6               	movwf	postinc1,c
 33708  014A62  EC27  F0DA         	call	_StartTimer	;wreg free
 33709                           
 33710                           ;bsoc.c: 84:   send_port_data_dma(strlen((char*) log_ptr));
 33711                           ;stkvar	_log_ptr @ sp[(-2)+0]
 33712  014A66  0EFE               	movlw	-2
 33713  014A68  006F FF8F FFE6     	movff	plusw1,postinc1
 33714  014A6E  006F FF8F FFE6     	movff	plusw1,postinc1
 33715  014A74  EC88  F0D3         	call	_strlen	;wreg free
 33716  014A78  0060  F007  FFE6   	movff	btemp,postinc1
 33717  014A7E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33718  014A84  EC76  F0D8         	call	_send_port_data_dma	;wreg free
 33719  014A88                     l12701:
 33720                           
 33721                           ;bsoc.c: 86:  if (log_update_wait >= 10)
 33722  014A88  0E09               	movlw	9
 33723  014A8A  6441               	cpfsgt	calc_bsoc@log_update_wait^0,c
 33724  014A8C  D001               	goto	l2042
 33725                           
 33726                           ;bsoc.c: 87:   log_update_wait = 0;
 33727  014A8E  6A41               	clrf	calc_bsoc@log_update_wait^0,c
 33728  014A90                     l2042:
 33729                           
 33730                           ;bsoc.c: 89:  C.update = 0;
 33731  014A90  0E00               	movlw	0
 33732  014A92  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 33733                           
 33734                           ;bsoc.c: 91:  do { LATEbits.LATE1 = 0; } while(0);
 33735  014A98  92BE               	bcf	190,1,c	;volatile
 33736                           
 33737                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 33738  014A9A  52E5               	movf	postdec1,f,c
 33739  014A9C  52E5               	movf	postdec1,f,c
 33740  014A9E  0012               	return		;funcret
 33741  014AA0                     __end_of_calc_bsoc:
 33742                           	opt callstack 0
 33743                           
 33744 ;; *************** function _send_port_data_dma *****************
 33745 ;; Defined at:
 33746 ;;		line 258 in file "eadog.c"
 33747 ;; Parameters:    Size  Location     Type
 33748 ;;  dsize           2  [STACK] unsigned short 
 33749 ;; Auto vars:     Size  Location     Type
 33750 ;;		None
 33751 ;; Return value:  Size  Location     Type
 33752 ;;                  1  [STACK] void 
 33753 ;; Registers used:
 33754 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 33755 ;; Tracked objects:
 33756 ;;		On entry : 0/0
 33757 ;;		On exit  : 3F/3B
 33758 ;;		Unchanged: 0/0
 33759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33764 ;;Total ram usage:        0 bytes
 33765 ;; Hardware stack levels used:    1
 33766 ;; Hardware stack levels required when called:    3
 33767 ;; This function calls:
 33768 ;;		Nothing
 33769 ;; This function is called by:
 33770 ;;		_calc_bsoc
 33771 ;; This function uses a reentrant model
 33772 ;;
 33773                           
 33774                           	psect	text152
 33775  01B0EC                     __ptext152:
 33776                           	opt callstack 0
 33777  01B0EC                     _send_port_data_dma:
 33778                           	opt callstack 11
 33779                           
 33780                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 33781                           ;stkvar	_dsize @ sp[(0)+-2]
 33782                           
 33783                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33784                           ;incstack = 0
 33785  01B0EC  0EFE               	movlw	-2
 33786  01B0EE  04E3               	decf	plusw1,w,c
 33787  01B0F0  0EFF               	movlw	-1
 33788  01B0F2  006F FF8C  F001    	movff	plusw1,btemp
 33789  01B0F8  0E02               	movlw	2
 33790  01B0FA  5A01               	subwfb	btemp^0,f,c
 33791  01B0FC  A0D8               	btfss	status,0,c
 33792  01B0FE  D00C               	goto	l9853
 33793                           
 33794                           ;eadog.c: 261:   dsize = 512;
 33795  01B100  0E00               	movlw	0
 33796  01B102  6E0B               	movwf	(btemp+10)^0,c
 33797  01B104  0E02               	movlw	2
 33798  01B106  6E0C               	movwf	(btemp+11)^0,c
 33799                           
 33800                           ;stkvar	_dsize @ sp[(0)+-2]
 33801  01B108  0EFE               	movlw	-2
 33802  01B10A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33803  01B110  0EFF               	movlw	-1
 33804  01B112  0060  F033  FFE3   	movff	btemp+11,plusw1
 33805  01B118                     l9853:
 33806                           
 33807                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 33808  01B118  013B               	movlb	59	; () banked
 33809  01B11A  9FDC               	bcf	220,7,b	;volatile
 33810                           
 33811                           ; BSR set to: 59
 33812                           ;eadog.c: 264:  DMA2SSZ = dsize;
 33813                           ;stkvar	_dsize @ sp[(0)+-2]
 33814  01B11C  0EFE               	movlw	-2
 33815  01B11E  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 33816  01B124  0EFF               	movlw	-1
 33817  01B126  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 33818                           
 33819                           ; BSR set to: 59
 33820                           ;eadog.c: 265:  DMA2DSZ = 1;
 33821  01B12C  0E00               	movlw	0
 33822  01B12E  6FCF               	movwf	207,b	;volatile
 33823  01B130  0E01               	movlw	1
 33824  01B132  6FCE               	movwf	206,b	;volatile
 33825                           
 33826                           ; BSR set to: 59
 33827                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 33828  01B134  8FDC               	bsf	220,7,b	;volatile
 33829                           
 33830                           ; BSR set to: 59
 33831                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 33832  01B136  8DDC               	bsf	220,6,b	;volatile
 33833                           
 33834                           ; BSR set to: 59
 33835                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 33836  01B138  52E5               	movf	postdec1,f,c
 33837  01B13A  52E5               	movf	postdec1,f,c
 33838  01B13C  0012               	return		;funcret
 33839  01B13E                     __end_of_send_port_data_dma:
 33840                           	opt callstack 0
 33841                           
 33842 ;; *************** function _port_data_dma_ptr *****************
 33843 ;; Defined at:
 33844 ;;		line 273 in file "eadog.c"
 33845 ;; Parameters:    Size  Location     Type
 33846 ;;		None
 33847 ;; Auto vars:     Size  Location     Type
 33848 ;;		None
 33849 ;; Return value:  Size  Location     Type
 33850 ;;                  2  [STACK] PTR unsigned char 
 33851 ;; Registers used:
 33852 ;;		wreg, status,2, status,0, btemp, btemp+1
 33853 ;; Tracked objects:
 33854 ;;		On entry : 3F/1
 33855 ;;		On exit  : 0/0
 33856 ;;		Unchanged: 0/0
 33857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33862 ;;Total ram usage:        0 bytes
 33863 ;; Hardware stack levels used:    1
 33864 ;; Hardware stack levels required when called:    3
 33865 ;; This function calls:
 33866 ;;		Nothing
 33867 ;; This function is called by:
 33868 ;;		_calc_bsoc
 33869 ;; This function uses a reentrant model
 33870 ;;
 33871                           
 33872                           	psect	text153
 33873  01BEA4                     __ptext153:
 33874                           	opt callstack 0
 33875  01BEA4                     _port_data_dma_ptr:
 33876                           	opt callstack 11
 33877                           
 33878                           ;eadog.c: 275:  return port_data;
 33879                           
 33880                           ; BSR set to: 59
 33881                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33882                           ;incstack = 0
 33883  01BEA4  0EFF               	movlw	low _port_data
 33884  01BEA6  6E01               	movwf	btemp^0,c
 33885  01BEA8  0E04               	movlw	high _port_data
 33886  01BEAA  6E02               	movwf	(btemp+1)^0,c
 33887                           
 33888                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33889  01BEAC  0012               	return		;funcret
 33890  01BEAE                     __end_of_port_data_dma_ptr:
 33891                           	opt callstack 0
 33892                           
 33893 ;; *************** function ___asfladd *****************
 33894 ;; Defined at:
 33895 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 33896 ;; Parameters:    Size  Location     Type
 33897 ;;  f1p             2  [STACK] PTR 
 33898 ;;		 -> C(295), 
 33899 ;;  f2              4  [STACK] PTR 
 33900 ;; Auto vars:     Size  Location     Type
 33901 ;;		None
 33902 ;; Return value:  Size  Location     Type
 33903 ;;                  4  [STACK] PTR 
 33904 ;; Registers used:
 33905 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 33906 ;; Tracked objects:
 33907 ;;		On entry : 0/0
 33908 ;;		On exit  : 0/0
 33909 ;;		Unchanged: 0/0
 33910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33915 ;;Total ram usage:        0 bytes
 33916 ;; Hardware stack levels used:    1
 33917 ;; Hardware stack levels required when called:    4
 33918 ;; This function calls:
 33919 ;;		___fladd
 33920 ;; This function is called by:
 33921 ;;		_calc_bsoc
 33922 ;; This function uses a reentrant model
 33923 ;;
 33924                           
 33925                           	psect	text154
 33926  01AB7E                     __ptext154:
 33927                           	opt callstack 0
 33928  01AB7E                     ___asfladd:
 33929                           	opt callstack 10
 33930                           
 33931                           ;	Return value of ___asfladd is never used
 33932                           ;stkvar	_f2 @ sp[(0)+-6]
 33933                           
 33934                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33935                           ;incstack = 0
 33936  01AB7E  0EFA               	movlw	-6
 33937  01AB80  006F FF8F FFE6     	movff	plusw1,postinc1
 33938  01AB86  006F FF8F FFE6     	movff	plusw1,postinc1
 33939  01AB8C  006F FF8F FFE6     	movff	plusw1,postinc1
 33940  01AB92  006F FF8F FFE6     	movff	plusw1,postinc1
 33941                           
 33942                           ;stkvar	_f1p @ sp[(-4)+-2]
 33943  01AB98  0EFA               	movlw	-6
 33944  01AB9A  006F FF8F FFD9     	movff	plusw1,fsr2l
 33945  01ABA0  0EFB               	movlw	-5
 33946  01ABA2  006F FF8F FFDA     	movff	plusw1,fsr2h
 33947  01ABA8  006F FF7B FFE6     	movff	postinc2,postinc1
 33948  01ABAE  006F FF7B FFE6     	movff	postinc2,postinc1
 33949  01ABB4  006F FF7B FFE6     	movff	postinc2,postinc1
 33950  01ABBA  006F FF7B FFE6     	movff	postinc2,postinc1
 33951  01ABC0  ECB4  F09D         	call	___fladd	;wreg free
 33952                           
 33953                           ;stkvar	_f1p @ sp[(0)+-2]
 33954  01ABC4  0EFE               	movlw	-2
 33955  01ABC6  006F FF8F FFD9     	movff	plusw1,fsr2l
 33956  01ABCC  0EFF               	movlw	-1
 33957  01ABCE  006F FF8F FFDA     	movff	plusw1,fsr2h
 33958  01ABD4  0060  F007  FFDE   	movff	btemp,postinc2
 33959  01ABDA  0060  F00B  FFDE   	movff	btemp+1,postinc2
 33960  01ABE0  0060  F00F  FFDE   	movff	btemp+2,postinc2
 33961  01ABE6  0060  F013  FFDE   	movff	btemp+3,postinc2
 33962                           
 33963                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 33964  01ABEC  0EFA               	movlw	250
 33965  01ABEE  26E1               	addwf	fsr1l,f,c
 33966  01ABF0  0EFF               	movlw	255
 33967  01ABF2  22E2               	addwfc	fsr1h,f,c
 33968  01ABF4  0012               	return		;funcret
 33969  01ABF6                     __end_of___asfladd:
 33970                           	opt callstack 0
 33971                           
 33972 ;; *************** function _INT0_ISR *****************
 33973 ;; Defined at:
 33974 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 33975 ;; Parameters:    Size  Location     Type
 33976 ;;		None
 33977 ;; Auto vars:     Size  Location     Type
 33978 ;;		None
 33979 ;; Return value:  Size  Location     Type
 33980 ;;                  1    wreg      void 
 33981 ;; Registers used:
 33982 ;;		wreg, status,2, status,0, pclath, tosl
 33983 ;; Tracked objects:
 33984 ;;		On entry : 0/0
 33985 ;;		On exit  : 0/0
 33986 ;;		Unchanged: 0/0
 33987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33992 ;;Total ram usage:        0 bytes
 33993 ;; Hardware stack levels used:    1
 33994 ;; Hardware stack levels required when called:    2
 33995 ;; This function calls:
 33996 ;;		_INT0_CallBack
 33997 ;; This function is called by:
 33998 ;;		Interrupt level 2
 33999 ;; This function uses a non-reentrant model
 34000 ;;
 34001                           
 34002                           	psect	text155
 34003  01BE7C                     __ptext155:
 34004                           	opt callstack 0
 34005  01BE7C                     _INT0_ISR:
 34006                           	opt callstack 3
 34007                           
 34008                           ;incstack = 0
 34009  01BE7C  EE14  F15C         	lfsr	1,___inthi_sp
 34010                           
 34011                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 34012  01BE80  0139               	movlb	57	; () banked
 34013  01BE82  91A1               	bcf	161,0,b	;volatile
 34014                           
 34015                           ; BSR set to: 57
 34016                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 34017  01BE84  ECF2  F0DD         	call	_INT0_CallBack	;wreg free
 34018  01BE88  0011               	retfie		f
 34019  01BE8A                     __end_of_INT0_ISR:
 34020                           	opt callstack 0
 34021                           
 34022 ;; *************** function _INT0_CallBack *****************
 34023 ;; Defined at:
 34024 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 34025 ;; Parameters:    Size  Location     Type
 34026 ;;		None
 34027 ;; Auto vars:     Size  Location     Type
 34028 ;;		None
 34029 ;; Return value:  Size  Location     Type
 34030 ;;                  1  [STACK] void 
 34031 ;; Registers used:
 34032 ;;		wreg, status,2, status,0, pclath, tosl
 34033 ;; Tracked objects:
 34034 ;;		On entry : 3F/39
 34035 ;;		On exit  : 0/0
 34036 ;;		Unchanged: 0/0
 34037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34042 ;;Total ram usage:        0 bytes
 34043 ;; Hardware stack levels used:    1
 34044 ;; Hardware stack levels required when called:    1
 34045 ;; This function calls:
 34046 ;;		Absolute function
 34047 ;;		_INT0_DefaultInterruptHandler
 34048 ;; This function is called by:
 34049 ;;		_INT0_ISR
 34050 ;; This function uses a reentrant model
 34051 ;;
 34052                           
 34053                           	psect	text156
 34054  01BBE4                     __ptext156:
 34055                           	opt callstack 0
 34056  01BBE4                     _INT0_CallBack:
 34057                           	opt callstack 3
 34058                           
 34059                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 34060                           
 34061                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34062                           ;incstack = 0
 34063  01BBE4  0100               	movlb	0	; () banked
 34064  01BBE6  51AB               	movf	_INT0_InterruptHandler& (0+255),w,b
 34065  01BBE8  11AC               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 34066  01BBEA  11AD               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 34067  01BBEC  B4D8               	btfsc	status,2,c
 34068  01BBEE  0012               	return	
 34069                           
 34070                           ; BSR set to: 0
 34071                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 34072  01BBF0  D801               	call	u989_48
 34073  01BBF2  0012               	return	
 34074  01BBF4                     u989_48:
 34075  01BBF4  0005               	push	
 34076  01BBF6  6EFA               	movwf	pclath,c
 34077  01BBF8  51AB               	movf	_INT0_InterruptHandler& (0+255),w,b
 34078  01BBFA  6EFD               	movwf	tosl,c
 34079  01BBFC  51AC               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 34080  01BBFE  6EFE               	movwf	tosh,c
 34081  01BC00  51AD               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 34082  01BC02  6EFF               	movwf	tosu,c
 34083  01BC04  50FA               	movf	pclath,w,c
 34084  01BC06  0012               	return		;indir
 34085  01BC08                     __end_of_INT0_CallBack:
 34086                           	opt callstack 0
 34087                           
 34088 ;; *************** function _INT0_DefaultInterruptHandler *****************
 34089 ;; Defined at:
 34090 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 34091 ;; Parameters:    Size  Location     Type
 34092 ;;		None
 34093 ;; Auto vars:     Size  Location     Type
 34094 ;;		None
 34095 ;; Return value:  Size  Location     Type
 34096 ;;                  1  [STACK] void 
 34097 ;; Registers used:
 34098 ;;		None
 34099 ;; Tracked objects:
 34100 ;;		On entry : 3F/0
 34101 ;;		On exit  : 0/0
 34102 ;;		Unchanged: 0/0
 34103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34108 ;;Total ram usage:        0 bytes
 34109 ;; Hardware stack levels used:    1
 34110 ;; This function calls:
 34111 ;;		Nothing
 34112 ;; This function is called by:
 34113 ;;		_EXT_INT_Initialize
 34114 ;;		_INT0_CallBack
 34115 ;; This function uses a reentrant model
 34116 ;;
 34117                           
 34118                           	psect	text157
 34119  01BF26                     __ptext157:
 34120                           	opt callstack 0
 34121  01BF26                     _INT0_DefaultInterruptHandler:
 34122                           	opt callstack 3
 34123                           
 34124                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34125                           
 34126                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34127                           ;incstack = 0
 34128  01BF26  0012               	return		;funcret
 34129  01BF28                     __end_of_INT0_DefaultInterruptHandler:
 34130                           	opt callstack 0
 34131                           
 34132 ;; *************** function _Default_ISR *****************
 34133 ;; Defined at:
 34134 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 34135 ;; Parameters:    Size  Location     Type
 34136 ;;		None
 34137 ;; Auto vars:     Size  Location     Type
 34138 ;;		None
 34139 ;; Return value:  Size  Location     Type
 34140 ;;                  1    wreg      void 
 34141 ;; Registers used:
 34142 ;;		None
 34143 ;; Tracked objects:
 34144 ;;		On entry : 0/0
 34145 ;;		On exit  : 0/0
 34146 ;;		Unchanged: 0/0
 34147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34152 ;;Total ram usage:        0 bytes
 34153 ;; Hardware stack levels used:    1
 34154 ;; This function calls:
 34155 ;;		Nothing
 34156 ;; This function is called by:
 34157 ;;		Interrupt level 2
 34158 ;; This function uses a non-reentrant model
 34159 ;;
 34160                           
 34161                           	psect	text158
 34162  01BF1C                     __ptext158:
 34163                           	opt callstack 0
 34164  01BF1C                     _Default_ISR:
 34165                           	opt callstack 5
 34166                           
 34167                           ;incstack = 0
 34168  01BF1C  EE14  F15C         	lfsr	1,___inthi_sp
 34169  01BF20  0011               	retfie		f
 34170  01BF22                     __end_of_Default_ISR:
 34171                           	opt callstack 0
 34172                           
 34173 ;; *************** function _ADCC_ISR *****************
 34174 ;; Defined at:
 34175 ;;		line 314 in file "mcc_generated_files/adcc.c"
 34176 ;; Parameters:    Size  Location     Type
 34177 ;;		None
 34178 ;; Auto vars:     Size  Location     Type
 34179 ;;		None
 34180 ;; Return value:  Size  Location     Type
 34181 ;;                  1    wreg      void 
 34182 ;; Registers used:
 34183 ;;		wreg, status,2, status,0, pclath, tosl
 34184 ;; Tracked objects:
 34185 ;;		On entry : 0/0
 34186 ;;		On exit  : 0/0
 34187 ;;		Unchanged: 0/0
 34188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34193 ;;Total ram usage:        0 bytes
 34194 ;; Hardware stack levels used:    1
 34195 ;; Hardware stack levels required when called:    1
 34196 ;; This function calls:
 34197 ;;		Absolute function
 34198 ;;		_ADCC_DefaultInterruptHandler
 34199 ;;		_adc_int_handler
 34200 ;; This function is called by:
 34201 ;;		Interrupt level 2
 34202 ;; This function uses a non-reentrant model
 34203 ;;
 34204                           
 34205                           	psect	text159
 34206  01B824                     __ptext159:
 34207                           	opt callstack 0
 34208  01B824                     _ADCC_ISR:
 34209                           	opt callstack 4
 34210                           
 34211                           ;incstack = 0
 34212  01B824  EE14  F15C         	lfsr	1,___inthi_sp
 34213                           
 34214                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 34215  01B828  0139               	movlb	57	; () banked
 34216  01B82A  95A1               	bcf	161,2,b	;volatile
 34217                           
 34218                           ; BSR set to: 57
 34219                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 34220  01B82C  0100               	movlb	0	; () banked
 34221  01B82E  519C               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 34222  01B830  119D               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 34223  01B832  119E               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 34224  01B834  B4D8               	btfsc	status,2,c
 34225  01B836  0011               	retfie		f
 34226                           
 34227                           ; BSR set to: 0
 34228                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 34229  01B838  D801               	call	i2u1032_48
 34230  01B83A  0011               	retfie		f
 34231  01B83C                     i2u1032_48:
 34232  01B83C  0005               	push	
 34233  01B83E  6EFA               	movwf	pclath,c
 34234  01B840  519C               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 34235  01B842  6EFD               	movwf	tosl,c
 34236  01B844  519D               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 34237  01B846  6EFE               	movwf	tosh,c
 34238  01B848  519E               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 34239  01B84A  6EFF               	movwf	tosu,c
 34240  01B84C  50FA               	movf	pclath,w,c
 34241  01B84E  0012               	return		;indir
 34242  01B850                     __end_of_ADCC_ISR:
 34243                           	opt callstack 0
 34244                           
 34245 ;; *************** function _adc_int_t_handler *****************
 34246 ;; Defined at:
 34247 ;;		line 143 in file "daq.c"
 34248 ;; Parameters:    Size  Location     Type
 34249 ;;		None
 34250 ;; Auto vars:     Size  Location     Type
 34251 ;;		None
 34252 ;; Return value:  Size  Location     Type
 34253 ;;                  1  [STACK] void 
 34254 ;; Registers used:
 34255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 34256 ;; Tracked objects:
 34257 ;;		On entry : 3F/0
 34258 ;;		On exit  : 1/0
 34259 ;;		Unchanged: 0/0
 34260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34265 ;;Total ram usage:        0 bytes
 34266 ;; Hardware stack levels used:    1
 34267 ;; Hardware stack levels required when called:    1
 34268 ;; This function calls:
 34269 ;;		_ADCC_DischargeSampleCapacitor
 34270 ;;		_ADCC_StartConversion
 34271 ;; This function is called by:
 34272 ;;		_start_adc_scan
 34273 ;;		_ADCC_ThresholdISR
 34274 ;; This function uses a reentrant model
 34275 ;;
 34276                           
 34277                           	psect	text160
 34278  01AB00                     __ptext160:
 34279                           	opt callstack 0
 34280  01AB00                     _adc_int_t_handler:
 34281                           	opt callstack 3
 34282                           
 34283                           ;daq.c: 148:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 34284                           
 34285                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34286                           ;incstack = 0
 34287  01AB00  013E               	movlb	62	; () banked
 34288  01AB02  51E6               	movf	230,w,b	;volatile
 34289  01AB04  006F FB9C  F001    	movff	16103,btemp	;volatile
 34290  01AB0A  6A02               	clrf	(btemp+1)^0,c
 34291  01AB0C  0060  F004  F002   	movff	btemp,btemp+1
 34292  01AB12  6A01               	clrf	btemp^0,c
 34293  01AB14  2601               	addwf	btemp^0,f,c
 34294  01AB16  0E00               	movlw	0
 34295  01AB18  2202               	addwfc	(btemp+1)^0,f,c
 34296  01AB1A  0100               	movlb	0	; () banked
 34297  01AB1C  51E1               	movf	(_R+36)& (0+255),w,b	;volatile
 34298  01AB1E  0D02               	mullw	2
 34299  01AB20  50F3               	movf	243,w,c
 34300  01AB22  0FBD               	addlw	low _R
 34301  01AB24  6ED9               	movwf	fsr2l,c
 34302  01AB26  6ADA               	clrf	fsr2h,c
 34303  01AB28  0060  F007  FFDE   	movff	btemp,postinc2
 34304  01AB2E  0060  F00B  FFDD   	movff	btemp+1,postdec2
 34305  01AB34                     l11009:
 34306                           
 34307                           ;daq.c: 150:   if (++R.scan_index > 0XD) {
 34308  01AB34  0100               	movlb	0	; () banked
 34309  01AB36  2BE1               	incf	(_R+36)& (0+255),f,b	;volatile
 34310  01AB38  0E0D               	movlw	13
 34311  01AB3A  65E1               	cpfsgt	(_R+36)& (0+255),b	;volatile
 34312  01AB3C  D003               	goto	l11015
 34313                           
 34314                           ; BSR set to: 0
 34315                           ;daq.c: 151:    R.done = 1;
 34316  01AB3E  0E01               	movlw	1
 34317  01AB40  6FE4               	movwf	(_R+39)& (0+255),b	;volatile
 34318  01AB42  0012               	return	
 34319  01AB44                     l11015:
 34320                           
 34321                           ; BSR set to: 0
 34322                           ;daq.c: 157:  } while (!((R.scan_select >> R.scan_index) &0x1));
 34323  01AB44  0060  F384  F00C   	movff	_R+36,btemp+11	;volatile
 34324  01AB4A  EE20  F0E2         	lfsr	2,_R+37	;volatile
 34325  01AB4E  006F FF78  F009    	movff	postinc2,btemp+8
 34326  01AB54  006F FF74  F00A    	movff	postdec2,btemp+9
 34327  01AB5A  2A0C               	incf	(btemp+11)^0,f,c
 34328  01AB5C  D003               	goto	u1029_44
 34329  01AB5E                     u1029_45:
 34330  01AB5E  90D8               	bcf	status,0,c
 34331  01AB60  320A               	rrcf	(btemp+9)^0,f,c
 34332  01AB62  3209               	rrcf	(btemp+8)^0,f,c
 34333  01AB64                     u1029_44:
 34334  01AB64  2E0C               	decfsz	(btemp+11)^0,f,c
 34335  01AB66  D7FB               	goto	u1029_45
 34336  01AB68  A009               	btfss	(btemp+8)^0,0,c
 34337  01AB6A  D7E4               	goto	l11009
 34338                           
 34339                           ;daq.c: 158:  ADCC_DischargeSampleCapacitor();
 34340  01AB6C  EC69  F0DF         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 34341                           
 34342                           ; BSR set to: 62
 34343                           ;daq.c: 159:  ADCC_StartConversion(R.scan_index & 0xf);
 34344  01AB70  0100               	movlb	0	; () banked
 34345  01AB72  51E1               	movf	(_R+36)& (0+255),w,b	;volatile
 34346  01AB74  0B0F               	andlw	15
 34347  01AB76  6EE6               	movwf	postinc1,c
 34348  01AB78  EC00  F0DF         	call	_ADCC_StartConversion	;wreg free
 34349                           
 34350                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34351  01AB7C  0012               	return		;funcret
 34352  01AB7E                     __end_of_adc_int_t_handler:
 34353                           	opt callstack 0
 34354                           
 34355 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 34356 ;; Defined at:
 34357 ;;		line 339 in file "mcc_generated_files/adcc.c"
 34358 ;; Parameters:    Size  Location     Type
 34359 ;;		None
 34360 ;; Auto vars:     Size  Location     Type
 34361 ;;		None
 34362 ;; Return value:  Size  Location     Type
 34363 ;;                  1  [STACK] void 
 34364 ;; Registers used:
 34365 ;;		None
 34366 ;; Tracked objects:
 34367 ;;		On entry : 3F/0
 34368 ;;		On exit  : 0/0
 34369 ;;		Unchanged: 0/0
 34370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34375 ;;Total ram usage:        0 bytes
 34376 ;; Hardware stack levels used:    1
 34377 ;; This function calls:
 34378 ;;		Nothing
 34379 ;; This function is called by:
 34380 ;;		_ADCC_Initialize
 34381 ;;		_ADCC_ISR
 34382 ;;		_ADCC_ThresholdISR
 34383 ;; This function uses a reentrant model
 34384 ;;
 34385                           
 34386                           	psect	text161
 34387  01BF28                     __ptext161:
 34388                           	opt callstack 0
 34389  01BF28                     _ADCC_DefaultInterruptHandler:
 34390                           	opt callstack 4
 34391                           
 34392                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34393                           
 34394                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34395                           ;incstack = 0
 34396  01BF28  0012               	return		;funcret
 34397  01BF2A                     __end_of_ADCC_DefaultInterruptHandler:
 34398                           	opt callstack 0
 34399                           
 34400 ;; *************** function _adc_int_handler *****************
 34401 ;; Defined at:
 34402 ;;		line 133 in file "daq.c"
 34403 ;; Parameters:    Size  Location     Type
 34404 ;;		None
 34405 ;; Auto vars:     Size  Location     Type
 34406 ;;		None
 34407 ;; Return value:  Size  Location     Type
 34408 ;;                  1  [STACK] void 
 34409 ;; Registers used:
 34410 ;;		None
 34411 ;; Tracked objects:
 34412 ;;		On entry : 3F/0
 34413 ;;		On exit  : 0/0
 34414 ;;		Unchanged: 0/0
 34415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34420 ;;Total ram usage:        0 bytes
 34421 ;; Hardware stack levels used:    1
 34422 ;; This function calls:
 34423 ;;		Nothing
 34424 ;; This function is called by:
 34425 ;;		_start_adc_scan
 34426 ;;		_ADCC_ISR
 34427 ;; This function uses a reentrant model
 34428 ;;
 34429                           
 34430                           	psect	text162
 34431  01BF2A                     __ptext162:
 34432                           	opt callstack 0
 34433  01BF2A                     _adc_int_handler:
 34434                           	opt callstack 4
 34435                           
 34436                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34437                           
 34438                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34439                           ;incstack = 0
 34440  01BF2A  0012               	return		;funcret
 34441  01BF2C                     __end_of_adc_int_handler:
 34442                           	opt callstack 0
 34443                           
 34444 ;; *************** function _ADCC_ThresholdISR *****************
 34445 ;; Defined at:
 34446 ;;		line 327 in file "mcc_generated_files/adcc.c"
 34447 ;; Parameters:    Size  Location     Type
 34448 ;;		None
 34449 ;; Auto vars:     Size  Location     Type
 34450 ;;		None
 34451 ;; Return value:  Size  Location     Type
 34452 ;;                  1    wreg      void 
 34453 ;; Registers used:
 34454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 34455 ;; Tracked objects:
 34456 ;;		On entry : 0/0
 34457 ;;		On exit  : 0/0
 34458 ;;		Unchanged: 0/0
 34459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34462 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34463 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34464 ;;Total ram usage:        5 bytes
 34465 ;; Hardware stack levels used:    1
 34466 ;; Hardware stack levels required when called:    2
 34467 ;; This function calls:
 34468 ;;		Absolute function
 34469 ;;		_ADCC_DefaultInterruptHandler
 34470 ;;		_adc_int_t_handler
 34471 ;; This function is called by:
 34472 ;;		Interrupt level 2
 34473 ;; This function uses a non-reentrant model
 34474 ;;
 34475                           
 34476                           	psect	text163
 34477  01AD3C                     __ptext163:
 34478                           	opt callstack 0
 34479  01AD3C                     _ADCC_ThresholdISR:
 34480                           	opt callstack 3
 34481                           
 34482                           ;incstack = 0
 34483  01AD3C  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 34484  01AD42  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 34485  01AD48  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 34486  01AD4E  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 34487  01AD54  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 34488  01AD5A  EE14  F15C         	lfsr	1,___inthi_sp
 34489                           
 34490                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 34491  01AD5E  0139               	movlb	57	; () banked
 34492  01AD60  97A1               	bcf	161,3,b	;volatile
 34493                           
 34494                           ; BSR set to: 57
 34495                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 34496  01AD62  0100               	movlb	0	; () banked
 34497  01AD64  5199               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 34498  01AD66  119A               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 34499  01AD68  119B               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 34500  01AD6A  B4D8               	btfsc	status,2,c
 34501  01AD6C  D00C               	goto	i2u1034_49
 34502                           
 34503                           ; BSR set to: 0
 34504                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 34505  01AD6E  D801               	call	i2u1034_48
 34506  01AD70  D00A               	goto	i2u1034_49
 34507  01AD72                     i2u1034_48:
 34508  01AD72  0005               	push	
 34509  01AD74  6EFA               	movwf	pclath,c
 34510  01AD76  5199               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 34511  01AD78  6EFD               	movwf	tosl,c
 34512  01AD7A  519A               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 34513  01AD7C  6EFE               	movwf	tosh,c
 34514  01AD7E  519B               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 34515  01AD80  6EFF               	movwf	tosu,c
 34516  01AD82  50FA               	movf	pclath,w,c
 34517  01AD84  0012               	return		;indir
 34518  01AD86                     i2u1034_49:
 34519  01AD86  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 34520  01AD8C  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 34521  01AD92  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 34522  01AD98  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 34523  01AD9E  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 34524  01ADA4  0011               	retfie		f
 34525  01ADA6                     __end_of_ADCC_ThresholdISR:
 34526                           	opt callstack 0
 34527                           
 34528 ;; *************** function _UART1_rx_vect_isr *****************
 34529 ;; Defined at:
 34530 ;;		line 181 in file "mcc_generated_files/uart1.c"
 34531 ;; Parameters:    Size  Location     Type
 34532 ;;		None
 34533 ;; Auto vars:     Size  Location     Type
 34534 ;;		None
 34535 ;; Return value:  Size  Location     Type
 34536 ;;                  1    wreg      void 
 34537 ;; Registers used:
 34538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 34539 ;; Tracked objects:
 34540 ;;		On entry : 0/0
 34541 ;;		On exit  : 0/0
 34542 ;;		Unchanged: 0/0
 34543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34548 ;;Total ram usage:        0 bytes
 34549 ;; Hardware stack levels used:    1
 34550 ;; Hardware stack levels required when called:    1
 34551 ;; This function calls:
 34552 ;;		Absolute function
 34553 ;;		_UART1_Receive_ISR
 34554 ;; This function is called by:
 34555 ;;		Interrupt level 2
 34556 ;; This function uses a non-reentrant model
 34557 ;;
 34558                           
 34559                           	psect	text164
 34560  01BB00                     __ptext164:
 34561                           	opt callstack 0
 34562  01BB00                     _UART1_rx_vect_isr:
 34563                           	opt callstack 4
 34564                           
 34565                           ;incstack = 0
 34566  01BB00  EE14  F15C         	lfsr	1,___inthi_sp
 34567                           
 34568                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 34569  01BB04  0100               	movlb	0	; () banked
 34570  01BB06  519F               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 34571  01BB08  11A0               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 34572  01BB0A  11A1               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 34573  01BB0C  B4D8               	btfsc	status,2,c
 34574  01BB0E  0011               	retfie		f
 34575                           
 34576                           ; BSR set to: 0
 34577                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 34578  01BB10  D801               	call	i2u1256_48
 34579  01BB12  0011               	retfie		f
 34580  01BB14                     i2u1256_48:
 34581  01BB14  0005               	push	
 34582  01BB16  6EFA               	movwf	pclath,c
 34583  01BB18  519F               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 34584  01BB1A  6EFD               	movwf	tosl,c
 34585  01BB1C  51A0               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 34586  01BB1E  6EFE               	movwf	tosh,c
 34587  01BB20  51A1               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 34588  01BB22  6EFF               	movwf	tosu,c
 34589  01BB24  50FA               	movf	pclath,w,c
 34590  01BB26  0012               	return		;indir
 34591  01BB28                     __end_of_UART1_rx_vect_isr:
 34592                           	opt callstack 0
 34593                           
 34594 ;; *************** function _UART1_Receive_ISR *****************
 34595 ;; Defined at:
 34596 ;;		line 192 in file "mcc_generated_files/uart1.c"
 34597 ;; Parameters:    Size  Location     Type
 34598 ;;		None
 34599 ;; Auto vars:     Size  Location     Type
 34600 ;;		None
 34601 ;; Return value:  Size  Location     Type
 34602 ;;                  1  [STACK] void 
 34603 ;; Registers used:
 34604 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34605 ;; Tracked objects:
 34606 ;;		On entry : 3F/0
 34607 ;;		On exit  : 3F/0
 34608 ;;		Unchanged: 0/0
 34609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34614 ;;Total ram usage:        0 bytes
 34615 ;; Hardware stack levels used:    1
 34616 ;; This function calls:
 34617 ;;		Nothing
 34618 ;; This function is called by:
 34619 ;;		_UART1_Initialize
 34620 ;;		_UART1_rx_vect_isr
 34621 ;; This function uses a reentrant model
 34622 ;;
 34623                           
 34624                           	psect	text165
 34625  01BC4E                     __ptext165:
 34626                           	opt callstack 0
 34627  01BC4E                     _UART1_Receive_ISR:
 34628                           	opt callstack 4
 34629                           
 34630                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 34631                           
 34632                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34633                           ;incstack = 0
 34634  01BC4E  0E6E               	movlw	low _uart1RxBuffer
 34635  01BC50  2447               	addwf	_uart1RxHead^0,w,c	;volatile
 34636  01BC52  6ED9               	movwf	fsr2l,c
 34637  01BC54  6ADA               	clrf	fsr2h,c
 34638  01BC56  0E02               	movlw	high _uart1RxBuffer
 34639  01BC58  22DA               	addwfc	fsr2h,f,c
 34640  01BC5A  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 34641  01BC60  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 34642                           
 34643                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 34644  01BC62  0E07               	movlw	7
 34645  01BC64  6447               	cpfsgt	_uart1RxHead^0,c
 34646  01BC66  D001               	goto	l12749
 34647                           
 34648                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 34649  01BC68  6A47               	clrf	_uart1RxHead^0,c	;volatile
 34650  01BC6A                     l12749:
 34651                           
 34652                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 34653  01BC6A  0100               	movlb	0	; () banked
 34654  01BC6C  2BBC               	incf	_uart1RxCount& (0+255),f,b	;volatile
 34655                           
 34656                           ; BSR set to: 0
 34657                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34658  01BC6E  0012               	return		;funcret
 34659  01BC70                     __end_of_UART1_Receive_ISR:
 34660                           	opt callstack 0
 34661                           
 34662 ;; *************** function _UART2_tx_vect_isr *****************
 34663 ;; Defined at:
 34664 ;;		line 195 in file "mcc_generated_files/uart2.c"
 34665 ;; Parameters:    Size  Location     Type
 34666 ;;		None
 34667 ;; Auto vars:     Size  Location     Type
 34668 ;;		None
 34669 ;; Return value:  Size  Location     Type
 34670 ;;                  1    wreg      void 
 34671 ;; Registers used:
 34672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 34673 ;; Tracked objects:
 34674 ;;		On entry : 0/0
 34675 ;;		On exit  : 0/0
 34676 ;;		Unchanged: 0/0
 34677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34682 ;;Total ram usage:        0 bytes
 34683 ;; Hardware stack levels used:    1
 34684 ;; Hardware stack levels required when called:    1
 34685 ;; This function calls:
 34686 ;;		Absolute function
 34687 ;;		_UART2_Transmit_ISR
 34688 ;; This function is called by:
 34689 ;;		Interrupt level 2
 34690 ;; This function uses a non-reentrant model
 34691 ;;
 34692                           
 34693                           	psect	text166
 34694  01BB28                     __ptext166:
 34695                           	opt callstack 0
 34696  01BB28                     _UART2_tx_vect_isr:
 34697                           	opt callstack 4
 34698                           
 34699                           ; BSR set to: 0
 34700                           ;incstack = 0
 34701  01BB28  EE14  F15C         	lfsr	1,___inthi_sp
 34702                           
 34703                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 34704  01BB2C  0100               	movlb	0	; () banked
 34705  01BB2E  51A2               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 34706  01BB30  11A3               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 34707  01BB32  11A4               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 34708  01BB34  B4D8               	btfsc	status,2,c
 34709  01BB36  0011               	retfie		f
 34710                           
 34711                           ; BSR set to: 0
 34712                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 34713  01BB38  D801               	call	i2u1038_48
 34714  01BB3A  0011               	retfie		f
 34715  01BB3C                     i2u1038_48:
 34716  01BB3C  0005               	push	
 34717  01BB3E  6EFA               	movwf	pclath,c
 34718  01BB40  51A2               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 34719  01BB42  6EFD               	movwf	tosl,c
 34720  01BB44  51A3               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 34721  01BB46  6EFE               	movwf	tosh,c
 34722  01BB48  51A4               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 34723  01BB4A  6EFF               	movwf	tosu,c
 34724  01BB4C  50FA               	movf	pclath,w,c
 34725  01BB4E  0012               	return		;indir
 34726  01BB50                     __end_of_UART2_tx_vect_isr:
 34727                           	opt callstack 0
 34728                           
 34729 ;; *************** function _UART2_Transmit_ISR *****************
 34730 ;; Defined at:
 34731 ;;		line 213 in file "mcc_generated_files/uart2.c"
 34732 ;; Parameters:    Size  Location     Type
 34733 ;;		None
 34734 ;; Auto vars:     Size  Location     Type
 34735 ;;		None
 34736 ;; Return value:  Size  Location     Type
 34737 ;;                  1  [STACK] void 
 34738 ;; Registers used:
 34739 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34740 ;; Tracked objects:
 34741 ;;		On entry : 3F/0
 34742 ;;		On exit  : 3B/39
 34743 ;;		Unchanged: 0/0
 34744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34749 ;;Total ram usage:        0 bytes
 34750 ;; Hardware stack levels used:    1
 34751 ;; This function calls:
 34752 ;;		Nothing
 34753 ;; This function is called by:
 34754 ;;		_UART2_Initialize
 34755 ;;		_UART2_tx_vect_isr
 34756 ;; This function uses a reentrant model
 34757 ;;
 34758                           
 34759                           	psect	text167
 34760  01B850                     __ptext167:
 34761                           	opt callstack 0
 34762  01B850                     _UART2_Transmit_ISR:
 34763                           	opt callstack 4
 34764                           
 34765                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 34766                           
 34767                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34768                           ;incstack = 0
 34769  01B850  0E40               	movlw	64
 34770  01B852  6044               	cpfslt	_uart2TxBufferRemaining^0,c
 34771  01B854  D010               	goto	l673
 34772                           
 34773                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 34774  01B856  0E00               	movlw	low _uart2TxBuffer
 34775  01B858  2445               	addwf	_uart2TxTail^0,w,c	;volatile
 34776  01B85A  6ED9               	movwf	fsr2l,c
 34777  01B85C  6ADA               	clrf	fsr2h,c
 34778  01B85E  0E03               	movlw	high _uart2TxBuffer
 34779  01B860  22DA               	addwfc	fsr2h,f,c
 34780  01B862  50DF               	movf	indf2,w,c
 34781  01B864  013D               	movlb	61	; () banked
 34782  01B866  6FD2               	movwf	210,b	;volatile
 34783                           
 34784                           ; BSR set to: 61
 34785  01B868  2A45               	incf	_uart2TxTail^0,f,c	;volatile
 34786                           
 34787                           ; BSR set to: 61
 34788                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 34789  01B86A  0E3F               	movlw	63
 34790  01B86C  6445               	cpfsgt	_uart2TxTail^0,c
 34791  01B86E  D001               	goto	l10601
 34792                           
 34793                           ; BSR set to: 61
 34794                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 34795  01B870  6A45               	clrf	_uart2TxTail^0,c	;volatile
 34796  01B872                     l10601:
 34797                           
 34798                           ; BSR set to: 61
 34799                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 34800  01B872  2A44               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 34801                           
 34802                           ;mcc_generated_files/uart2.c: 224:     }
 34803  01B874  0012               	return	
 34804  01B876                     l673:
 34805                           
 34806                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 34807  01B876  0139               	movlb	57	; () banked
 34808  01B878  9796               	bcf	150,3,b	;volatile
 34809                           
 34810                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 34811  01B87A  0012               	return		;funcret
 34812  01B87C                     __end_of_UART2_Transmit_ISR:
 34813                           	opt callstack 0
 34814                           
 34815 ;; *************** function _UART2_rx_vect_isr *****************
 34816 ;; Defined at:
 34817 ;;		line 203 in file "mcc_generated_files/uart2.c"
 34818 ;; Parameters:    Size  Location     Type
 34819 ;;		None
 34820 ;; Auto vars:     Size  Location     Type
 34821 ;;		None
 34822 ;; Return value:  Size  Location     Type
 34823 ;;                  1    wreg      void 
 34824 ;; Registers used:
 34825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 34826 ;; Tracked objects:
 34827 ;;		On entry : 0/0
 34828 ;;		On exit  : 0/0
 34829 ;;		Unchanged: 0/0
 34830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34835 ;;Total ram usage:        0 bytes
 34836 ;; Hardware stack levels used:    1
 34837 ;; Hardware stack levels required when called:    1
 34838 ;; This function calls:
 34839 ;;		Absolute function
 34840 ;;		_UART2_Receive_ISR
 34841 ;; This function is called by:
 34842 ;;		Interrupt level 2
 34843 ;; This function uses a non-reentrant model
 34844 ;;
 34845                           
 34846                           	psect	text168
 34847  01BB50                     __ptext168:
 34848                           	opt callstack 0
 34849  01BB50                     _UART2_rx_vect_isr:
 34850                           	opt callstack 4
 34851                           
 34852                           ;incstack = 0
 34853  01BB50  EE14  F15C         	lfsr	1,___inthi_sp
 34854                           
 34855                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 34856  01BB54  0100               	movlb	0	; () banked
 34857  01BB56  51A5               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 34858  01BB58  11A6               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 34859  01BB5A  11A7               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 34860  01BB5C  B4D8               	btfsc	status,2,c
 34861  01BB5E  0011               	retfie		f
 34862                           
 34863                           ; BSR set to: 0
 34864                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 34865  01BB60  D801               	call	i2u1040_48
 34866  01BB62  0011               	retfie		f
 34867  01BB64                     i2u1040_48:
 34868  01BB64  0005               	push	
 34869  01BB66  6EFA               	movwf	pclath,c
 34870  01BB68  51A5               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 34871  01BB6A  6EFD               	movwf	tosl,c
 34872  01BB6C  51A6               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 34873  01BB6E  6EFE               	movwf	tosh,c
 34874  01BB70  51A7               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 34875  01BB72  6EFF               	movwf	tosu,c
 34876  01BB74  50FA               	movf	pclath,w,c
 34877  01BB76  0012               	return		;indir
 34878  01BB78                     __end_of_UART2_rx_vect_isr:
 34879                           	opt callstack 0
 34880                           
 34881 ;; *************** function _UART2_Receive_ISR *****************
 34882 ;; Defined at:
 34883 ;;		line 233 in file "mcc_generated_files/uart2.c"
 34884 ;; Parameters:    Size  Location     Type
 34885 ;;		None
 34886 ;; Auto vars:     Size  Location     Type
 34887 ;;		None
 34888 ;; Return value:  Size  Location     Type
 34889 ;;                  1  [STACK] void 
 34890 ;; Registers used:
 34891 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34892 ;; Tracked objects:
 34893 ;;		On entry : 3F/0
 34894 ;;		On exit  : 3F/0
 34895 ;;		Unchanged: 0/0
 34896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34901 ;;Total ram usage:        0 bytes
 34902 ;; Hardware stack levels used:    1
 34903 ;; This function calls:
 34904 ;;		Nothing
 34905 ;; This function is called by:
 34906 ;;		_UART2_Initialize
 34907 ;;		_UART2_rx_vect_isr
 34908 ;; This function uses a reentrant model
 34909 ;;
 34910                           
 34911                           	psect	text169
 34912  01BC90                     __ptext169:
 34913                           	opt callstack 0
 34914  01BC90                     _UART2_Receive_ISR:
 34915                           	opt callstack 4
 34916                           
 34917                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 34918                           
 34919                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34920                           ;incstack = 0
 34921  01BC90  0E00               	movlw	low _uart2RxBuffer
 34922  01BC92  2443               	addwf	_uart2RxHead^0,w,c	;volatile
 34923  01BC94  6ED9               	movwf	fsr2l,c
 34924  01BC96  6ADA               	clrf	fsr2h,c
 34925  01BC98  0E04               	movlw	high _uart2RxBuffer
 34926  01BC9A  22DA               	addwfc	fsr2h,f,c
 34927  01BC9C  006F F743 FFDF     	movff	15824,indf2	;volatile
 34928  01BCA2  2A43               	incf	_uart2RxHead^0,f,c	;volatile
 34929                           
 34930                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 34931  01BCA4  2843               	incf	_uart2RxHead^0,w,c
 34932  01BCA6  B4D8               	btfsc	status,2,c
 34933                           
 34934                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 34935  01BCA8  6A43               	clrf	_uart2RxHead^0,c	;volatile
 34936                           
 34937                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 34938  01BCAA  0100               	movlb	0	; () banked
 34939  01BCAC  2BB9               	incf	_uart2RxCount& (0+255),f,b	;volatile
 34940                           
 34941                           ; BSR set to: 0
 34942                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34943  01BCAE  0012               	return		;funcret
 34944  01BCB0                     __end_of_UART2_Receive_ISR:
 34945                           	opt callstack 0
 34946                           
 34947 ;; *************** function _TMR6_ISR *****************
 34948 ;; Defined at:
 34949 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 34950 ;; Parameters:    Size  Location     Type
 34951 ;;		None
 34952 ;; Auto vars:     Size  Location     Type
 34953 ;;		None
 34954 ;; Return value:  Size  Location     Type
 34955 ;;                  1    wreg      void 
 34956 ;; Registers used:
 34957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34958 ;; Tracked objects:
 34959 ;;		On entry : 0/0
 34960 ;;		On exit  : 0/0
 34961 ;;		Unchanged: 0/0
 34962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34965 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34966 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34967 ;;Total ram usage:        1 bytes
 34968 ;; Hardware stack levels used:    1
 34969 ;; Hardware stack levels required when called:    2
 34970 ;; This function calls:
 34971 ;;		_TMR6_CallBack
 34972 ;; This function is called by:
 34973 ;;		Interrupt level 2
 34974 ;; This function uses a non-reentrant model
 34975 ;;
 34976                           
 34977                           	psect	text170
 34978  01BD60                     __ptext170:
 34979                           	opt callstack 0
 34980  01BD60                     _TMR6_ISR:
 34981                           	opt callstack 3
 34982                           
 34983                           ; BSR set to: 0
 34984                           ;incstack = 0
 34985  01BD60  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 34986  01BD66  EE14  F15C         	lfsr	1,___inthi_sp
 34987                           
 34988                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 34989  01BD6A  0139               	movlb	57	; () banked
 34990  01BD6C  91A9               	bcf	169,0,b	;volatile
 34991                           
 34992                           ; BSR set to: 57
 34993                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 34994  01BD6E  EC04  F0DE         	call	_TMR6_CallBack	;wreg free
 34995  01BD72  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 34996  01BD78  0011               	retfie		f
 34997  01BD7A                     __end_of_TMR6_ISR:
 34998                           	opt callstack 0
 34999                           
 35000 ;; *************** function _TMR6_CallBack *****************
 35001 ;; Defined at:
 35002 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 35003 ;; Parameters:    Size  Location     Type
 35004 ;;		None
 35005 ;; Auto vars:     Size  Location     Type
 35006 ;;		None
 35007 ;; Return value:  Size  Location     Type
 35008 ;;                  1  [STACK] void 
 35009 ;; Registers used:
 35010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 35011 ;; Tracked objects:
 35012 ;;		On entry : 3F/39
 35013 ;;		On exit  : 0/0
 35014 ;;		Unchanged: 0/0
 35015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35020 ;;Total ram usage:        0 bytes
 35021 ;; Hardware stack levels used:    1
 35022 ;; Hardware stack levels required when called:    1
 35023 ;; This function calls:
 35024 ;;		Absolute function
 35025 ;;		_TMR6_DefaultInterruptHandler
 35026 ;; This function is called by:
 35027 ;;		_TMR6_ISR
 35028 ;; This function uses a reentrant model
 35029 ;;
 35030                           
 35031                           	psect	text171
 35032  01BC08                     __ptext171:
 35033                           	opt callstack 0
 35034  01BC08                     _TMR6_CallBack:
 35035                           	opt callstack 3
 35036                           
 35037                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 35038                           
 35039                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35040                           ;incstack = 0
 35041  01BC08  0100               	movlb	0	; () banked
 35042  01BC0A  5196               	movf	_TMR6_InterruptHandler& (0+255),w,b
 35043  01BC0C  1197               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 35044  01BC0E  1198               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 35045  01BC10  B4D8               	btfsc	status,2,c
 35046  01BC12  0012               	return	
 35047                           
 35048                           ; BSR set to: 0
 35049                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 35050  01BC14  D801               	call	u997_48
 35051  01BC16  0012               	return	
 35052  01BC18                     u997_48:
 35053  01BC18  0005               	push	
 35054  01BC1A  6EFA               	movwf	pclath,c
 35055  01BC1C  5196               	movf	_TMR6_InterruptHandler& (0+255),w,b
 35056  01BC1E  6EFD               	movwf	tosl,c
 35057  01BC20  5197               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 35058  01BC22  6EFE               	movwf	tosh,c
 35059  01BC24  5198               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 35060  01BC26  6EFF               	movwf	tosu,c
 35061  01BC28  50FA               	movf	pclath,w,c
 35062  01BC2A  0012               	return		;indir
 35063  01BC2C                     __end_of_TMR6_CallBack:
 35064                           	opt callstack 0
 35065                           
 35066 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 35067 ;; Defined at:
 35068 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 35069 ;; Parameters:    Size  Location     Type
 35070 ;;		None
 35071 ;; Auto vars:     Size  Location     Type
 35072 ;;  i               1  [STACK] unsigned char 
 35073 ;; Return value:  Size  Location     Type
 35074 ;;                  1  [STACK] void 
 35075 ;; Registers used:
 35076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 35077 ;; Tracked objects:
 35078 ;;		On entry : 3F/0
 35079 ;;		On exit  : 0/0
 35080 ;;		Unchanged: 0/0
 35081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35086 ;;Total ram usage:        0 bytes
 35087 ;; Hardware stack levels used:    1
 35088 ;; This function calls:
 35089 ;;		Nothing
 35090 ;; This function is called by:
 35091 ;;		_TMR6_Initialize
 35092 ;;		_TMR6_CallBack
 35093 ;; This function uses a reentrant model
 35094 ;;
 35095                           
 35096                           	psect	text172
 35097  01B13E                     __ptext172:
 35098                           	opt callstack 0
 35099  01B13E                     _TMR6_DefaultInterruptHandler:
 35100                           	opt callstack 0
 35101                           
 35102                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35103  01B13E  52E6               	movf	postinc1,f,c
 35104                           
 35105                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 35106                           ;stkvar	_i @ sp[(-1)+0]
 35107                           
 35108                           ;incstack = 0
 35109  01B140  0EFF               	movlw	-1
 35110  01B142  6AE3               	clrf	plusw1,c
 35111  01B144                     l10243:
 35112                           
 35113                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 35114                           ;stkvar	_i @ sp[(-1)+0]
 35115  01B144  0EFF               	movlw	-1
 35116  01B146  50E3               	movf	plusw1,w,c
 35117  01B148  0D02               	mullw	2
 35118  01B14A  0E54               	movlw	low _tickCount
 35119  01B14C  24F3               	addwf	243,w,c
 35120  01B14E  6ED9               	movwf	fsr2l,c
 35121  01B150  0E02               	movlw	high _tickCount
 35122  01B152  20F4               	addwfc	prodh,w,c
 35123  01B154  6EDA               	movwf	fsr2h,c
 35124  01B156  50DE               	movf	postinc2,w,c
 35125  01B158  10DE               	iorwf	postinc2,w,c
 35126  01B15A  B4D8               	btfsc	status,2,c
 35127  01B15C  D00C               	goto	l10247
 35128                           
 35129                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 35130                           ;stkvar	_i @ sp[(-1)+0]
 35131  01B15E  0EFF               	movlw	-1
 35132  01B160  50E3               	movf	plusw1,w,c
 35133  01B162  0D02               	mullw	2
 35134  01B164  0E54               	movlw	low _tickCount
 35135  01B166  24F3               	addwf	243,w,c
 35136  01B168  6ED9               	movwf	fsr2l,c
 35137  01B16A  0E02               	movlw	high _tickCount
 35138  01B16C  20F4               	addwfc	prodh,w,c
 35139  01B16E  6EDA               	movwf	fsr2h,c
 35140  01B170  06DE               	decf	postinc2,f,c
 35141  01B172  0E00               	movlw	0
 35142  01B174  5ADD               	subwfb	postdec2,f,c
 35143  01B176                     l10247:
 35144                           
 35145                           ;mcc_generated_files/tmr6.c: 207:  }
 35146                           ;stkvar	_i @ sp[(-1)+0]
 35147  01B176  0EFF               	movlw	-1
 35148  01B178  2AE3               	incf	plusw1,f,c
 35149                           
 35150                           ;stkvar	_i @ sp[(-1)+0]
 35151  01B17A  0EFF               	movlw	-1
 35152  01B17C  006F FF8C  F001    	movff	plusw1,btemp
 35153  01B182  0E0C               	movlw	12
 35154  01B184  6401               	cpfsgt	btemp^0,c
 35155  01B186  D7DE               	goto	l10243
 35156                           
 35157                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35158  01B188  52E5               	movf	postdec1,f,c
 35159  01B18A  0012               	return		;funcret
 35160  01B18C                     __end_of_TMR6_DefaultInterruptHandler:
 35161                           	opt callstack 0
 35162                           
 35163 ;; *************** function _DMA1_DMASCNT_ISR *****************
 35164 ;; Defined at:
 35165 ;;		line 126 in file "mcc_generated_files/dma1.c"
 35166 ;; Parameters:    Size  Location     Type
 35167 ;;		None
 35168 ;; Auto vars:     Size  Location     Type
 35169 ;;		None
 35170 ;; Return value:  Size  Location     Type
 35171 ;;                  1    wreg      void 
 35172 ;; Registers used:
 35173 ;;		None
 35174 ;; Tracked objects:
 35175 ;;		On entry : 0/0
 35176 ;;		On exit  : 3F/0
 35177 ;;		Unchanged: 0/0
 35178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35183 ;;Total ram usage:        0 bytes
 35184 ;; Hardware stack levels used:    1
 35185 ;; This function calls:
 35186 ;;		Nothing
 35187 ;; This function is called by:
 35188 ;;		Interrupt level 2
 35189 ;; This function uses a non-reentrant model
 35190 ;;
 35191                           
 35192                           	psect	text173
 35193  01BE8C                     __ptext173:
 35194                           	opt callstack 0
 35195  01BE8C                     _DMA1_DMASCNT_ISR:
 35196                           	opt callstack 5
 35197                           
 35198                           ;incstack = 0
 35199  01BE8C  EE14  F15C         	lfsr	1,___inthi_sp
 35200                           
 35201                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 35202  01BE90  0139               	movlb	57	; () banked
 35203  01BE92  91A2               	bcf	162,0,b	;volatile
 35204                           
 35205                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 35206  01BE94  0100               	movlb	0	; () banked
 35207  01BE96  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 35208                           
 35209                           ; BSR set to: 0
 35210  01BE98  0011               	retfie		f
 35211  01BE9A                     __end_of_DMA1_DMASCNT_ISR:
 35212                           	opt callstack 0
 35213                           
 35214 ;; *************** function _DMA1_DMADCNT_ISR *****************
 35215 ;; Defined at:
 35216 ;;		line 134 in file "mcc_generated_files/dma1.c"
 35217 ;; Parameters:    Size  Location     Type
 35218 ;;		None
 35219 ;; Auto vars:     Size  Location     Type
 35220 ;;		None
 35221 ;; Return value:  Size  Location     Type
 35222 ;;                  1    wreg      void 
 35223 ;; Registers used:
 35224 ;;		None
 35225 ;; Tracked objects:
 35226 ;;		On entry : 0/0
 35227 ;;		On exit  : 3F/39
 35228 ;;		Unchanged: 0/0
 35229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35234 ;;Total ram usage:        0 bytes
 35235 ;; Hardware stack levels used:    1
 35236 ;; This function calls:
 35237 ;;		Nothing
 35238 ;; This function is called by:
 35239 ;;		Interrupt level 2
 35240 ;; This function uses a non-reentrant model
 35241 ;;
 35242                           
 35243                           	psect	text174
 35244  01BEB0                     __ptext174:
 35245                           	opt callstack 0
 35246  01BEB0                     _DMA1_DMADCNT_ISR:
 35247                           	opt callstack 5
 35248                           
 35249                           ; BSR set to: 0
 35250                           ;incstack = 0
 35251  01BEB0  EE14  F15C         	lfsr	1,___inthi_sp
 35252                           
 35253                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 35254  01BEB4  0139               	movlb	57	; () banked
 35255  01BEB6  93A2               	bcf	162,1,b	;volatile
 35256                           
 35257                           ; BSR set to: 57
 35258  01BEB8  0011               	retfie		f
 35259  01BEBA                     __end_of_DMA1_DMADCNT_ISR:
 35260                           	opt callstack 0
 35261                           
 35262 ;; *************** function _DMA1_DMAA_ISR *****************
 35263 ;; Defined at:
 35264 ;;		line 144 in file "mcc_generated_files/dma1.c"
 35265 ;; Parameters:    Size  Location     Type
 35266 ;;		None
 35267 ;; Auto vars:     Size  Location     Type
 35268 ;;		None
 35269 ;; Return value:  Size  Location     Type
 35270 ;;                  1    wreg      void 
 35271 ;; Registers used:
 35272 ;;		None
 35273 ;; Tracked objects:
 35274 ;;		On entry : 0/0
 35275 ;;		On exit  : 3F/39
 35276 ;;		Unchanged: 0/0
 35277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35282 ;;Total ram usage:        0 bytes
 35283 ;; Hardware stack levels used:    1
 35284 ;; This function calls:
 35285 ;;		Nothing
 35286 ;; This function is called by:
 35287 ;;		Interrupt level 2
 35288 ;; This function uses a non-reentrant model
 35289 ;;
 35290                           
 35291                           	psect	text175
 35292  01BEBC                     __ptext175:
 35293                           	opt callstack 0
 35294  01BEBC                     _DMA1_DMAA_ISR:
 35295                           	opt callstack 5
 35296                           
 35297                           ; BSR set to: 57
 35298                           ;incstack = 0
 35299  01BEBC  EE14  F15C         	lfsr	1,___inthi_sp
 35300                           
 35301                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 35302  01BEC0  0139               	movlb	57	; () banked
 35303  01BEC2  97A2               	bcf	162,3,b	;volatile
 35304                           
 35305                           ; BSR set to: 57
 35306  01BEC4  0011               	retfie		f
 35307  01BEC6                     __end_of_DMA1_DMAA_ISR:
 35308                           	opt callstack 0
 35309                           
 35310 ;; *************** function _DMA1_DMAOR_ISR *****************
 35311 ;; Defined at:
 35312 ;;		line 155 in file "mcc_generated_files/dma1.c"
 35313 ;; Parameters:    Size  Location     Type
 35314 ;;		None
 35315 ;; Auto vars:     Size  Location     Type
 35316 ;;		None
 35317 ;; Return value:  Size  Location     Type
 35318 ;;                  1    wreg      void 
 35319 ;; Registers used:
 35320 ;;		None
 35321 ;; Tracked objects:
 35322 ;;		On entry : 0/0
 35323 ;;		On exit  : 3F/39
 35324 ;;		Unchanged: 0/0
 35325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35330 ;;Total ram usage:        0 bytes
 35331 ;; Hardware stack levels used:    1
 35332 ;; This function calls:
 35333 ;;		Nothing
 35334 ;; This function is called by:
 35335 ;;		Interrupt level 2
 35336 ;; This function uses a non-reentrant model
 35337 ;;
 35338                           
 35339                           	psect	text176
 35340  01BEC8                     __ptext176:
 35341                           	opt callstack 0
 35342  01BEC8                     _DMA1_DMAOR_ISR:
 35343                           	opt callstack 5
 35344                           
 35345                           ; BSR set to: 57
 35346                           ;incstack = 0
 35347  01BEC8  EE14  F15C         	lfsr	1,___inthi_sp
 35348                           
 35349                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 35350  01BECC  0139               	movlb	57	; () banked
 35351  01BECE  95A2               	bcf	162,2,b	;volatile
 35352                           
 35353                           ; BSR set to: 57
 35354  01BED0  0011               	retfie		f
 35355  01BED2                     __end_of_DMA1_DMAOR_ISR:
 35356                           	opt callstack 0
 35357                           
 35358                           ;
 35359                           ; Interrupt Vector Table @ 0x8
 35360                           ;
 35361                           
 35362                           	psect	ivt0x8
 35363  000008                     __pivt0x8:
 35364                           	opt callstack 0
 35365  000008                     ivt0x8_base:
 35366                           	opt callstack 0
 35367                           
 35368                           ; Vector 0 : SWINT
 35369  000008  6FC7               	dw	_Default_ISR shr (0+2)
 35370                           
 35371                           ; Vector 1 : HLVD
 35372  00000A  6FC7               	dw	_Default_ISR shr (0+2)
 35373                           
 35374                           ; Vector 2 : OSF
 35375  00000C  6FC7               	dw	_Default_ISR shr (0+2)
 35376                           
 35377                           ; Vector 3 : CSW
 35378  00000E  6FC7               	dw	_Default_ISR shr (0+2)
 35379                           
 35380                           ; Vector 4 : NVM
 35381  000010  6FC7               	dw	_Default_ISR shr (0+2)
 35382                           
 35383                           ; Vector 5 : SCAN
 35384  000012  6FC7               	dw	_Default_ISR shr (0+2)
 35385                           
 35386                           ; Vector 6 : CRC
 35387  000014  6FC7               	dw	_Default_ISR shr (0+2)
 35388                           
 35389                           ; Vector 7 : IOC
 35390  000016  6FC7               	dw	_Default_ISR shr (0+2)
 35391                           
 35392                           ; Vector 8 : INT0
 35393  000018  6F9F               	dw	_INT0_ISR shr (0+2)
 35394                           
 35395                           ; Vector 9 : ZCD
 35396  00001A  6FC7               	dw	_Default_ISR shr (0+2)
 35397                           
 35398                           ; Vector 10 : AD
 35399  00001C  6E09               	dw	_ADCC_ISR shr (0+2)
 35400                           
 35401                           ; Vector 11 : ADT
 35402  00001E  6B4F               	dw	_ADCC_ThresholdISR shr (0+2)
 35403                           
 35404                           ; Vector 12 : CMP1
 35405  000020  6FC7               	dw	_Default_ISR shr (0+2)
 35406                           
 35407                           ; Vector 13 : SMT1
 35408  000022  6FC7               	dw	_Default_ISR shr (0+2)
 35409                           
 35410                           ; Vector 14 : SMT1PRA
 35411  000024  6FC7               	dw	_Default_ISR shr (0+2)
 35412                           
 35413                           ; Vector 15 : SMT1PRW
 35414  000026  6FC7               	dw	_Default_ISR shr (0+2)
 35415                           
 35416                           ; Vector 16 : DMA1SCNT
 35417  000028  6FA3               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 35418                           
 35419                           ; Vector 17 : DMA1DCNT
 35420  00002A  6FAC               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 35421                           
 35422                           ; Vector 18 : DMA1OR
 35423  00002C  6FB2               	dw	_DMA1_DMAOR_ISR shr (0+2)
 35424                           
 35425                           ; Vector 19 : DMA1A
 35426  00002E  6FAF               	dw	_DMA1_DMAA_ISR shr (0+2)
 35427                           
 35428                           ; Vector 20 : SPI1RX
 35429  000030  6FC7               	dw	_Default_ISR shr (0+2)
 35430                           
 35431                           ; Vector 21 : SPI1TX
 35432  000032  6FC7               	dw	_Default_ISR shr (0+2)
 35433                           
 35434                           ; Vector 22 : SPI1
 35435  000034  6FC7               	dw	_Default_ISR shr (0+2)
 35436                           
 35437                           ; Vector 23 : I2C1RX
 35438  000036  6FC7               	dw	_Default_ISR shr (0+2)
 35439                           
 35440                           ; Vector 24 : I2C1TX
 35441  000038  6FC7               	dw	_Default_ISR shr (0+2)
 35442                           
 35443                           ; Vector 25 : I2C1
 35444  00003A  6FC7               	dw	_Default_ISR shr (0+2)
 35445                           
 35446                           ; Vector 26 : I2C1E
 35447  00003C  6FC7               	dw	_Default_ISR shr (0+2)
 35448                           
 35449                           ; Vector 27 : U1RX
 35450  00003E  6EC0               	dw	_UART1_rx_vect_isr shr (0+2)
 35451                           
 35452                           ; Vector 28 : U1TX
 35453  000040  6FC7               	dw	_Default_ISR shr (0+2)
 35454                           
 35455                           ; Vector 29 : U1E
 35456  000042  6FC7               	dw	_Default_ISR shr (0+2)
 35457                           
 35458                           ; Vector 30 : U1
 35459  000044  6FC7               	dw	_Default_ISR shr (0+2)
 35460                           
 35461                           ; Vector 31 : TMR0
 35462  000046  6FC7               	dw	_Default_ISR shr (0+2)
 35463                           
 35464                           ; Vector 32 : TMR1
 35465  000048  6FC7               	dw	_Default_ISR shr (0+2)
 35466                           
 35467                           ; Vector 33 : TMR1G
 35468  00004A  6FC7               	dw	_Default_ISR shr (0+2)
 35469                           
 35470                           ; Vector 34 : TMR2
 35471  00004C  6FC7               	dw	_Default_ISR shr (0+2)
 35472                           
 35473                           ; Vector 35 : CCP1
 35474  00004E  6FC7               	dw	_Default_ISR shr (0+2)
 35475                           
 35476                           ; Vector 36 : Undefined
 35477  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 35478                           
 35479                           ; Vector 37 : NCO1
 35480  000052  6FC7               	dw	_Default_ISR shr (0+2)
 35481                           
 35482                           ; Vector 38 : CWG1
 35483  000054  6FC7               	dw	_Default_ISR shr (0+2)
 35484                           
 35485                           ; Vector 39 : CLC1
 35486  000056  6FC7               	dw	_Default_ISR shr (0+2)
 35487                           
 35488                           ; Vector 40 : INT1
 35489  000058  6D53               	dw	_INT1_ISR shr (0+2)
 35490                           
 35491                           ; Vector 41 : CMP2
 35492  00005A  6FC7               	dw	_Default_ISR shr (0+2)
 35493                           
 35494                           ; Vector 42 : DMA2SCNT
 35495  00005C  6FC7               	dw	_Default_ISR shr (0+2)
 35496                           
 35497                           ; Vector 43 : DMA2DCNT
 35498  00005E  6FC7               	dw	_Default_ISR shr (0+2)
 35499                           
 35500                           ; Vector 44 : DMA2OR
 35501  000060  6FC7               	dw	_Default_ISR shr (0+2)
 35502                           
 35503                           ; Vector 45 : DMA2A
 35504  000062  6FC7               	dw	_Default_ISR shr (0+2)
 35505                           
 35506                           ; Vector 46 : I2C2RX
 35507  000064  6FC7               	dw	_Default_ISR shr (0+2)
 35508                           
 35509                           ; Vector 47 : I2C2TX
 35510  000066  6FC7               	dw	_Default_ISR shr (0+2)
 35511                           
 35512                           ; Vector 48 : I2C2
 35513  000068  6FC7               	dw	_Default_ISR shr (0+2)
 35514                           
 35515                           ; Vector 49 : I2C2E
 35516  00006A  6FC7               	dw	_Default_ISR shr (0+2)
 35517                           
 35518                           ; Vector 50 : U2RX
 35519  00006C  6ED4               	dw	_UART2_rx_vect_isr shr (0+2)
 35520                           
 35521                           ; Vector 51 : U2TX
 35522  00006E  6ECA               	dw	_UART2_tx_vect_isr shr (0+2)
 35523                           
 35524                           ; Vector 52 : U2E
 35525  000070  6FC7               	dw	_Default_ISR shr (0+2)
 35526                           
 35527                           ; Vector 53 : U2
 35528  000072  6FC7               	dw	_Default_ISR shr (0+2)
 35529                           
 35530                           ; Vector 54 : TMR3
 35531  000074  63F6               	dw	_TMR3_ISR shr (0+2)
 35532                           
 35533                           ; Vector 55 : TMR3G
 35534  000076  6FC7               	dw	_Default_ISR shr (0+2)
 35535                           
 35536                           ; Vector 56 : TMR4
 35537  000078  6FC7               	dw	_Default_ISR shr (0+2)
 35538                           
 35539                           ; Vector 57 : CCP2
 35540  00007A  6FC7               	dw	_Default_ISR shr (0+2)
 35541                           
 35542                           ; Vector 58 : Undefined
 35543  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 35544                           
 35545                           ; Vector 59 : CWG2
 35546  00007E  6FC7               	dw	_Default_ISR shr (0+2)
 35547                           
 35548                           ; Vector 60 : CLC2
 35549  000080  6FC7               	dw	_Default_ISR shr (0+2)
 35550                           
 35551                           ; Vector 61 : INT2
 35552  000082  6FC7               	dw	_Default_ISR shr (0+2)
 35553                           
 35554                           ; Vector 62 : Undefined
 35555  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 35556                           
 35557                           ; Vector 63 : Undefined
 35558  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 35559                           
 35560                           ; Vector 64 : Undefined
 35561  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 35562                           
 35563                           ; Vector 65 : Undefined
 35564  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 35565                           
 35566                           ; Vector 66 : Undefined
 35567  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 35568                           
 35569                           ; Vector 67 : Undefined
 35570  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 35571                           
 35572                           ; Vector 68 : Undefined
 35573  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 35574                           
 35575                           ; Vector 69 : Undefined
 35576  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 35577                           
 35578                           ; Vector 70 : TMR5
 35579  000094  67E7               	dw	_TMR5_ISR shr (0+2)
 35580                           
 35581                           ; Vector 71 : TMR5G
 35582  000096  6FC7               	dw	_Default_ISR shr (0+2)
 35583                           
 35584                           ; Vector 72 : TMR6
 35585  000098  6F58               	dw	_TMR6_ISR shr (0+2)
 35586                           
 35587                           ; Vector 73 : CCP3
 35588  00009A  6FC7               	dw	_Default_ISR shr (0+2)
 35589                           
 35590                           ; Vector 74 : CWG3
 35591  00009C  6FC7               	dw	_Default_ISR shr (0+2)
 35592                           
 35593                           ; Vector 75 : CLC3
 35594  00009E  6FC7               	dw	_Default_ISR shr (0+2)
 35595                           
 35596                           ; Vector 76 : Undefined
 35597  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 35598                           
 35599                           ; Vector 77 : Undefined
 35600  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 35601                           
 35602                           ; Vector 78 : Undefined
 35603  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 35604                           
 35605                           ; Vector 79 : Undefined
 35606  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 35607                           
 35608                           ; Vector 80 : CCP4
 35609  0000A8  6FC7               	dw	_Default_ISR shr (0+2)
 35610                           
 35611                           ; Vector 81 : CLC4
 35612  0000AA  6FC7               	dw	_Default_ISR shr (0+2)
 35613  0000AC                     ivt0x8_undefint:
 35614                           	opt callstack 0
 35615  0000AC  00FF               	reset	
 35616                           
 35617                           	psect	text177
 35618  000000                     __ptext177:
 35619                           	opt callstack 0
 35620                           
 35621                           	psect	rparam
 35622  0000                     
 35623                           	psect	temp
 35624  000001                     btemp:
 35625                           	opt callstack 0
 35626  000001                     	ds	32
 35627  0000                     wtemp0	set	btemp
 35628  0000                     wtemp1	set	btemp+2
 35629  0000                     wtemp2	set	btemp+4
 35630  0000                     wtemp3	set	btemp+6
 35631  0000                     wtemp4	set	btemp+8
 35632  0000                     wtemp5	set	btemp+10
 35633  0000                     wtemp8	set	btemp+1
 35634  0000                     ttemp0	set	btemp
 35635  0000                     ttemp1	set	btemp+3
 35636  0000                     ttemp2	set	btemp+6
 35637  0000                     ttemp3	set	btemp+9
 35638  0000                     ttemp5	set	btemp+1
 35639  0000                     ttemp6	set	btemp+4
 35640  0000                     ttemp7	set	btemp+8
 35641  0000                     ltemp0	set	btemp
 35642  0000                     ltemp1	set	btemp+4
 35643  0000                     ltemp2	set	btemp+8
 35644  0000                     lltemp0	set	btemp
 35645  0000                     lltemp1	set	btemp+8
 35646  0000                     lltemp2	set	btemp+16
 35647  0000                     lltemp3	set	btemp+24
 35648                           tosu	equ	0x3FFF
 35649                           tosh	equ	0x3FFE
 35650                           tosl	equ	0x3FFD
 35651                           stkptr	equ	0x3FFC
 35652                           pclatu	equ	0x3FFB
 35653                           pclath	equ	0x3FFA
 35654                           pcl	equ	0x3FF9
 35655                           tblptru	equ	0x3FF8
 35656                           tblptrh	equ	0x3FF7
 35657                           tblptrl	equ	0x3FF6
 35658                           tablat	equ	0x3FF5
 35659                           prodh	equ	0x3FF4
 35660                           prodl	equ	0x3FF3
 35661                           indf0	equ	0x3FEF
 35662                           postinc0	equ	0x3FEE
 35663                           postdec0	equ	0x3FED
 35664                           preinc0	equ	0x3FEC
 35665                           plusw0	equ	0x3FEB
 35666                           fsr0h	equ	0x3FEA
 35667                           fsr0l	equ	0x3FE9
 35668                           wreg	equ	0x3FE8
 35669                           indf1	equ	0x3FE7
 35670                           postinc1	equ	0x3FE6
 35671                           postdec1	equ	0x3FE5
 35672                           preinc1	equ	0x3FE4
 35673                           plusw1	equ	0x3FE3
 35674                           fsr1h	equ	0x3FE2
 35675                           fsr1l	equ	0x3FE1
 35676                           bsr	equ	0x3FE0
 35677                           indf2	equ	0x3FDF
 35678                           postinc2	equ	0x3FDE
 35679                           postdec2	equ	0x3FDD
 35680                           preinc2	equ	0x3FDC
 35681                           plusw2	equ	0x3FDB
 35682                           fsr2h	equ	0x3FDA
 35683                           fsr2l	equ	0x3FD9
 35684                           status	equ	0x3FD8


Data Sizes:
    Strings     939
    Constant    492
    Data        1052
    BSS         1299
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     249
    BANK2           256      0     213
    BANK3           256      0     198
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_102(CODE[1]), STR_64(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 103
		 -> ct(STACK[3]), STR_65(CODE[103]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 103
		 -> ct(STACK[3]), STR_65(CODE[103]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK1[191]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK1[191]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 103
		 -> STR_65(CODE[103]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6130_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 103
		 -> STR_65(CODE[103]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    f1p	PTR  size(2) Largest target is 295
		 -> C(BIGRAM[295]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 103
		 -> STR_65(CODE[103]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 103
		 -> STR_65(CODE[103]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK1[191]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_47(CODE[9]), 
		 -> STR_46(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[6]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    S4548tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_47(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_46(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  374811
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8986
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         9     5      4     687
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     647
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     175
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      62
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186232
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            84    10     74   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                           15    15      0    5521
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0    5431
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0    5431
                     _check_day_time
 ---------------------------------------------------------------------------------
 (17) _check_day_time                                      4     4      0    5431
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (18) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35546
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35456
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0   35456
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            84    10     74   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
       ___fltol
       ___xxtofl
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     509      69       15.7%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D5       9       83.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F9       7       97.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     458      58        0.0%
DATA                 0      0     961       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Dec 25 18:54:05 2019

                     _SPI1_Exchange8bit BCB0                __end_of_set_display_info BD0A  
                                     _C 06FF                                       _D 0826  
                                     _H 01BF                                       _P 008C  
                                     _R 00BD                                       _S 01C6  
                                     _T FB37                                       _V 0100  
      __end_of_TMR5_SetInterruptHandler BA36            __end_of_start_switch_handler BC90  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FC3F                  __end_of_FVR_Initialize BEFA  
                        _check_day_time 86C6                             __CFG_LVP$ON 000000  
                                   l169 BDE6                                     l807 BCBE  
                                   l673 B876                                     _GIE 01FE97  
                                   _abs B33C                                     _pad 998C  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize BD92  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack BBE4  
                     _update_adc_result B58A                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 011A                           _INT1_CallBack BB78  
                          __CFG_ZCD$OFF 000000                                    l1002 B4C8  
                                  l2042 4A90                                    l1340 190A  
                                  l1324 12A2                                    l2038 47DE  
                                  l1190 B508                                    l2302 64FC  
                                  l1350 19B0                                    l1342 1910  
                                  l2143 99E8                                    l3120 7884  
                                  l1360 1BB4                                    l1361 1DDC  
                                  l3018 3B5E                                    l2163 55A4  
                                  l2243 0B1A                         _timer3ReloadVal 00B2  
                                  l2228 066A                                    l2084 70D8  
                                  l2317 5DD6                                    l1606 B64C  
                                  l1366 2352                                    l1447 AF9E  
                                  l3081 89F2                                    l2281 71C6  
                                  l3058 8324                                    l1722 BD06  
                                  l2199 123A                                    l2367 3334  
                                  l1591 A968                                    l1665 B5E0  
                                  l3089 B37C                                    l1682 9BAC  
                                  l1674 7FCA                                    l1835 86BC  
                                  l1587 A662                                    l1675 8126  
                                  l3189 9750                                    l2670 8FCC  
                  _ADCC_StartConversion BE00                                    l2663 8EF8  
                                  l3471 AAF6                                    l1784 54C0  
                                  l3456 7F0E                                    l1882 9DD0  
                                  l2659 A3A4                                    l3484 AA72  
                                  l1895 885C                                    l1967 A21E  
                                  l1976 8504                                    l2937 431A  
                                  l8001 7450                                    l2697 8E6A  
                                  l1899 8854                                    l2949 41AA  
                                  l8101 4C14                                    l2982 5010  
                                  l8007 7496                                    l8201 4F8C  
                                  l8113 4C98                                    l8105 4C2A  
                                  l8107 4C5A                                    l8019 7568  
                                  l8213 4FE4                                    l8231 3394  
                                  l8215 4FF4                                    l8207 4FBC  
                                  l8127 4CEC                                    l8119 4CD2  
                                  l8055 7A20                                    l8047 7974  
                                  l8039 78EC                                    l8241 340A  
                                  l8161 4E4A                                    l8153 4E18  
                                  l8145 4DB2                                    l8137 4D7C  
                                  l8081 4B36                                    l8171 4E8C  
                                  l8147 4DC4                                    l8155 4E1C  
                                  l8075 4AF6                                    l7611 A736  
                                  l8325 396E                                    l8237 33D4  
                                  l8181 4ED6                                    l8085 4B4C  
                                  l9221 7656                                    l7613 A758  
                                  l8405 9194                                    l8343 39E4  
                                  l8319 3952                                    l8255 34A2  
                                  l8239 33DA                                    l7711 3E94  
                                  l8167 4E66                                    l8095 4BD4  
                                  l8087 4B7C                                    l8353 3A58  
                                  l8329 3994                                    l8257 34A8  
                                  l8249 3462                                    l7721 3F06  
                                  l8185 4EDC                                    l9241 7770  
                                  l8371 3B0C                                    l8363 3AC8  
                                  l8339 39DE                                    l8267 34FA  
                                  l8259 34D8                                    l7731 3F42  
                                  l7651 3C44                                    l8507 8FCA  
                                  l8195 4F50                                    l9235 76F6  
                                  l9219 7634                                    l8427 926E  
                                  l8419 923A                                    l8443 98A6  
                                  l8515 B1F4                                    l8373 3B26  
                                  l8357 3A9E                                    l7813 4218  
                                  l7725 3F26                                    l7645 3BFE  
                                  l8613 B0DC                                    l9245 77D8  
                                  l9237 770E                                    l9229 76CA  
                                  l8541 8DD6                                    l8525 8D54  
                                  l7727 3F38                                    l7735 3F72  
                                  l7663 3CAE                                    l7639 3BBE  
                                  l9255 7874                                    l9239 7732  
                                  l8447 98BE                                    l8439 9894  
                                  l8551 8E18                                    l8543 8DF2  
                                  l9271 7D80                                    l7841 42CA  
                                  l7825 4276                                    l7809 4212  
                                  l7753 400E                                    l7681 3D56  
                                  l7673 3D04                                    l7657 3C7C  
                                  l7649 3C14                                    l9601 5244  
                                  l8393 915E                                    l8465 9972  
                                  l8457 993E                                    l8481 A3A2  
                                  l8473 A32C                                    l7905 89EA  
                                  l9273 7DEC                                    l7835 42A2  
                                  l7755 4020                                    l7763 405C  
                                  l7675 3D34                                    l7923 AAE6  
                                  l7669 3CEE                                    l9541 8204  
                                  l9621 53F2                                    l9613 5312  
                                  l8477 A36E                                    l8549 8E02  
                                  l8565 8BD0                                    l7847 42FA  
                                  l7839 42BA                                    l7775 4134  
                                  l7759 402A                                    l8495 8F46  
                                  l9551 826E                                    l9543 8222  
                                  l8399 9174                                    l7951 6388  
                                  l7793 41CC                                    l7785 418E  
                                  l7777 415A                                    l8489 8EB6  
                                  l9561 82A2                                    l9553 8284  
                                  l9537 81E0                                    l9529 8174  
                                  l9609 5276                                    l7881 B36C  
                                  l7961 648E                                    l7953 63D8  
                                  l7937 626A                                    l8577 8CA2  
                                  l7795 41DE                                    l8499 8F94  
                                  l9571 8304                                    l9539 81EE  
                                  l9627 548E                                    l9635 54A0  
                                  l9549 8250                                    l9581 501C  
                                  l9653 B966                                    l7957 6420  
                                  l8597 936E                                    l8589 92C2  
                                  l7799 41EA                                    l7895 8990  
                                  l9587 504C                                    l7995 73FC  
                                  l7899 8994                                    l7979 AA62  
                                  l9853 B118                                    l9757 8790  
                                  l9597 516A                                    l9845 B808  
                                  STR_1 FF50                                    STR_2 FFA2  
                                  l9769 8802                                    STR_3 FFD0  
                                  STR_4 FF1D                                    l9787 B656  
                                  STR_5 FE16                                    STR_6 FE16  
                                  STR_7 FE16                                    STR_8 FF0B  
                                  STR_9 FD06                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6010 AAA4                                    u6020 AAA6  
                                  u6110 6406                                    u6200 B7BE  
                                  u7000 98EA                                    u6040 6202  
                                  u6050 624E                                    u5410 B78C  
                                  _T6PR 003F93                                    u6115 63FC  
                                  u6220 73F6                                    u7020 995E  
                                  u5420 B78E                                    u6140 B400  
                                  _PMD0 0039C0                                    u6045 61F8  
                                  _PMD1 0039C1                                    u6310 75F2  
                                  u6150 B402                                    _PMD2 0039C2  
                                  _PMD3 0039C3                                    u5520 3EBA  
                                  u6240 744C                                    u6400 7A58  
                                  u7120 B1F0                                    u7200 8E20  
                                  u6160 AA20                                    _PMD4 0039C4  
                                  _PMD5 0039C5                                    u5530 3EDA  
                                  u7130 8D34                                    u6090 632E  
                                  u6170 AA22                                    _PMD6 0039C6  
                                  u5531 3ED4                                    u6251 7456  
                                  u6075 6288                                    _PMD7 0039C7  
                                  u5380 A786                                    u6260 7490  
                                  u6420 7AAA                                    u6340 78E6  
                                  u7060 A39E                                    u7220 8E4A  
                                  u7140 8D48                                    u6076 628E  
                                  u7300 92EE                                    u6077 629C  
                                  u6190 B7BC                                    u6270 74C2  
                                  u7150 8D82                                    u7135 8D2A  
                                  u6095 6324                                    u7231 8B90  
                                  u5720 41F0                                    u5640 4052  
                                  u6600 4ECE                                    u6360 793C  
                                  u7240 8BCA                                    u7320 93A6  
                                  u5810 4286                                    u5570 3F6A  
                                  u9010 8298                                    u6290 75A0  
                                  u6370 796E                                    u7250 8BFC  
                                  u5387 A778                                    u7155 8D78  
                                  u5740 420A                                    u5580 3F8A  
                                  u5548 3EDC                                    u7340 B0B8  
                                  u6380 79A0                                    u5645 4042  
                                  u7350 B0D8                                    u5910 B350  
                                  u7270 8CDA                                    u5575 3F5A  
                                  u5680 417C                                    u6640 4F2A  
                                  u6560 4E44                                    u5920 8914  
                                  u6650 4F64                                    u9114 525E  
                                  u7290 92BC                                    u5850 B75C  
                                  u9115 5258                                    u6820 39D6  
                                  u5780 4266                                    u6660 4FA0  
                                  u5860 B75E                                    u6645 4F1A  
                                  u5925 890A                                    u6750 34E8  
                                  u9134 532C                                    u9054 5036  
                                  u8510 781E                                    u9135 5326  
                                  u9055 5030                                    u9160 5356  
                                  u8520 7820                                    u8600 7EB4  
                                  u5785 4256                                    u9154 534E  
                                  u9074 5066                                    u6930 91C0  
                                  u5970 89E2                                    u8610 7EE2  
                                  u9155 5348                                    u9075 5060  
                                  u6860 3A32                                    u5980 89E4  
                                  u6765 367C                                    u5965 89C4  
                                  u8605 7EAE                                    u6870 3A6C  
                                  u9510 8520                                    u9094 5088  
                                  u6950 925A                                    u9415 ADE8  
                                  u6775 3744                                    u9095 5082  
                                  u9335 B43C                                    u8607 7EA0  
                                  u9416 ADEA                                    u9408 ADB6  
                                  u6880 3AB2                                    u9600 BC38  
                                  u8560 7E1A                                    u6865 3A22  
                                  u6785 390C                                    u8617 7ED4  
                                  u8490 76C6                                    u9390 ADB4  
                                  u9606 BC3A                                    u8567 7E0C  
                                  u9465 BE2C                                    u9466 BE2E  
                                  _PLLR 01CEE0                                    u9475 BE1C  
                                  u9476 BE1E                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR B850  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0276  
                                  _cp_h FC4F                                    _cp_l FC4B  
                                  _atoi 761A                                    _ctoa A970  
                                  _main 1244                                    _dtoa 54C6  
                                  _nanf AED2                                    _seed 02C6  
                                  _prec 003C                                    _nout 00AE  
                                  _spin FBC7                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 70DC                                    btemp 0001  
                                  _utoa 64B8                                    _xtoa 5D92  
                __end_of_check_adc_scan BEE2                           ___fpclassifyf 8866  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 00B6  
             __end_of_SPI1_Exchange8bit BCCE               __size_of_clear_hid_pflags 0046  
                       _TMR3_Initialize B2AE             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr BB00                            ___param_bank 000000  
                __end_of_check_day_time 8866                      ?_UART1_rx_vect_isr 0021  
                      __end_of_INT0_ISR BE8A                        __end_of_INT1_ISR B58A  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma A66A  
         __end_of_OSCILLATOR_Initialize BDEC                                   l11015 AB44  
                                 l11009 AB34                                   l10243 B144  
                                 l10315 856E                                   l10307 8542  
                                 l12003 0CBA                                   l12011 0D24  
                                 l10421 93EC                                   l10247 B176  
                                 l10423 93F2                                   l10431 940E  
                                 l10319 8582                                   l12111 7148  
                                 l10601 B872                                   l10425 93F8  
                                 l10433 943A                                   l10353 B5F6  
                                 l10427 9406                                   l10419 93DC  
                                 l12019 0D90                                   l12027 0EA2  
                                 l12131 7238                                   l12203 5DC6  
                                 l12053 0FD6                                   l12141 72F2  
                                 l12301 24C4                                   l10525 9796  
                                 l13013 146E                                   l10447 94EC  
                                 l10439 9472                                   l12055 0FF0  
                                 l12039 0F3A                                   l12135 7268  
                                 l12127 71FC                                   l12223 5E9C  
                                 l12215 5E3C                                   l12065 1092  
                                 l12145 731E                                   l12209 5E00  
                                 l12321 2630                                   l10801 6EC8  
                                 l10529 983A                                   l13201 2328  
                                 l13105 199C                                   l10627 B4B0  
                                 l12091 119A                                   l12075 10E2  
                                 l12171 6548                                   l12163 64EC  
                                 l12323 2646                                   l10395 B5AA  
                                 l13211 237E                                   l13115 19C0  
                                 l10645 B4F0                                   l10741 8B5C  
                                 l12149 735A                                   l12181 673E  
                                 l12405 2D28                                   l10821 6F48  
                                 l10813 6F22                                   l10805 6ED4  
                                 l13061 16E2                                   l10903 5D84  
                                 l12263 6102                                   l12239 5F92  
                                 l12247 6018                                   l12415 2DD6  
                                 l12319 25F6                                   l11711 6D8E  
                                 l11703 6CE0                                   l13143 205C  
                                 l13127 1AC0                                   l11633 9666  
                                 l12425 2EF8                                   l12361 2982  
                                 l13153 21D8                                   l13073 17BC  
                                 l11723 A98E                                   l12435 2FAE  
                                 l12339 27AA                                   l10843 70A0  
                                 l10755 9EA2                                   l13139 1FFC  
                                 l13155 2204                                   l13083 1914  
                                 l12701 4A88                                   l11645 A7C2  
                                 l11661 99F2                                   l11725 A9BA  
                                 l11901 058E                                   l11821 00F0  
                                 l12381 2B94                                   l12373 2ADC  
                                 l12357 292E                                   l12349 2842  
                                 l12533 A540                                   l10845 70C8  
                                 l10749 9DF0                                   l13173 227C  
                                 l13085 1942                                   PRLOCK 0039EF  
                                 l11655 99B8                                   l12463 3262  
                                 l12535 A582                                   l12519 A6C2  
                                 l12607 9AC4                                   l10855 A3B4  
                                 l10775 6E26                                   l13191 22E4  
                                 l13183 22BA                                   l11649 A800  
                                 l11665 9A2E                                   l11761 55FC  
                                 l11841 0216                                   l11809 00AC  
                                 l12473 32C0                                   l12449 312A  
                                 l12385 2BC8                                   l12297 2474  
                                 l10785 6E6A                                   l10777 6E36  
                                 l13169 225A                                   l13097 1976  
                                 l11659 99E0                                   l11771 580E  
                                 l11675 A0C6                                   l11915 05F6  
                                 l11907 0594                                   l11843 022C  
                                 l12299 24AE                                   l11691 6BB8  
                                 l10859 A3F2                                   l10795 6EA0  
                                 l10779 6E3A                                   l12661 43DA  
                                 l11669 9A78                                   l11757 55DE  
                                 l11749 5594                                   l11933 06B8  
                                 l11917 0602                                   l11829 0146  
                                 l12469 32BC                                   l10789 6E76  
                                 l13197 2302                                   l13189 22CC  
                                 l12671 4606                                   l11791 58C0  
                                 l11943 077A                                   l11839 01EA  
                                 l11847 0258                                   l12479 32E0  
                                 l12903 80C2                                   l12647 A1B8  
                                 l12823 8342                                   l12681 4746  
                                 l12665 442E                                   l11953 0926  
                                 l11937 06F0                                   l11873 0396  
                                 l11857 02FC                                   l11865 032A  
                                 l11697 6C76                                   l12675 4680  
                                 l11795 58FC                                   l11883 04D2  
                                 l12835 83F6                                   l12749 BC6A  
                                 l12685 47EE                                   l11877 0406  
                                 l12845 84CE                                   l12863 AC5E  
                                 l11991 0C32                                   l11975 0B12  
                                 l11967 0A48                                   l11895 0554  
                                 l11879 0470                                   l12689 4810  
                                 l11977 0B34                                   l12961 12AA  
                                 l11899 057C                                   l12963 12BC  
                                 l12955 1284                                   l12957 128C  
                                 l12889 7F9A                         __end_of___aodiv 761A  
                          _Volts_to_SOC 975A                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 4324  
                                 _ADCLK 003EFF                         __end_of___aomod 7ACE  
                                 _ADPCH 003EF1                         __end_of___fldiv 501A  
                                 _ADREF 003EFD                         __end_of___awdiv 9288  
                       __end_of___flneg B21E                                   STR_10 FD33  
                                 STR_11 FD49                                   STR_12 FF2E  
                                 STR_21 FF61                                   STR_13 FF3F  
                                 STR_14 FF72                                   STR_30 FEE5  
                                 STR_22 FDEC                                   STR_23 FEBF  
                                 STR_31 FE4D                                   STR_15 FD5F  
                                 STR_40 FF83                                   STR_24 FEAC  
                                 STR_32 FE60                                   STR_16 FD1D  
                                 STR_41 FF83                                   STR_33 FE73  
                                 STR_25 FD9C                                   STR_17 FCBA  
                         __CFG_WDTE$OFF 000000                                   STR_42 FF61  
                                 STR_50 FFBD                                   STR_26 FE99  
                                 STR_34 FDB0                                   STR_18 FCD4  
                                 STR_51 FFBD                                   STR_43 FFFB  
                                 STR_19 FF83                                   STR_27 FE86  
                                 STR_35 FE00                                   STR_44 FFF8  
                                 STR_52 FF93                                   STR_28 FEF8  
                                 STR_36 FD88                         __end_of___awmod 998C  
                                 STR_53 FF93                                   STR_29 FED2  
                                 STR_37 FD74                                   STR_54 FF93  
                                 STR_70 FFDA                                   STR_46 FFB1  
                                 STR_38 FDC4                                   STR_71 FFE2  
                                 STR_47 FFC7                                   STR_39 FDD8  
                                 STR_55 FCEE                                   STR_64 FCB9  
                                 STR_80 FFEF                                   STR_48 FE27  
                                 _ADRPT 003EEC                                   STR_49 FE27  
                                 STR_57 FE3A                                   STR_65 FC53  
                                 STR_90 FFF2                                   STR_74 FFE9  
                                 STR_66 FFD6                                   STR_58 FE14  
                                 STR_83 FFEC                                   STR_67 FFDE  
                                 STR_76 FFE9                                   STR_85 FFEC  
                                 STR_93 FFF5                                   STR_78 FFEF  
                                 STR_95 FFF5                                   STR_88 FFF2  
                       __end_of___flmul 3B68                                   STR_97 FFE6  
                                 STR_99 FFE6                         __end_of___flsub B3C8  
                       __end_of___fltol 8E74                                   u11100 02A8  
                                 u11020 00DA                                   u11200 05C6  
                                 u11050 0194                                   u11140 050E  
                                 u11060 0196                                   u12100 2C84  
                                 u11310 0A18                                   u11240 0648  
                                 u12040 2896                                   u12200 A6A2  
                                 u11410 0EE4                                   u11170 0562  
                                 u11090 02A6                         __end_of___lodiv 8D02  
                                 u11500 1170                                   u12060 2A0A  
                                 u12160 3002                                   u11610 7380  
                                 u12090 2C82                                   u10810 6E02  
                                 u12250 A194                                   _U1P1H 003DED  
                                 u12180 31B2                                   _U1P2H 003DEF  
                                 u10670 965A                                   u10910 55CA  
                                 u10750 A140                                   u11470 10B8  
                                 u11630 64D2                                   u11710 5DAC  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u10920 5822  
                                 u10840 54F6                                   u12280 A1FA  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u10690 96D6                                   u10850 54F8  
                                 u11490 116E                                   u11570 725E  
                                 u11810 6014                                   u12530 8112  
                                 u12610 1594                                   _U1P3L 003DF0  
                                 u10931 5852                                   u10940 5868  
                                 u11580 72A4                                   u11820 6034  
                                 u11740 5E94                                   u12540 8114  
                                 u12268 A196                                   u10941 5866  
                                 u10757 A132                                   u11661 6780  
                                 u10950 587C                                   u10870 5568  
                                 u11670 6796                                   u11750 5EE8  
                                 u12630 17EA                                   _U2P1L 003DD4  
                                 u11671 6794                                   u11831 6064  
                                 u11815 5FF6                                   u10960 5880  
                                 u11680 67AA                                   u11840 607A  
                                 u11760 5EEA                                   u11920 250C  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u11841 6078                                   u10890 557A  
                                 u11690 67AE                                   u11850 608E  
                                 u11930 250E                                   u12298 A1FC  
                                 u12730 224A                                   _U2P3L 003DD8  
                                 u11587 7296                                   u10980 5896  
                                 u11860 6092                                   u11780 5F48  
                                 u11940 2534                                   u12740 2262  
                                 u11790 5F4A                                   u12750 2274  
                                 _T5CLK 003F9D                                   u12736 224C  
                       __end_of___lomod 93C8                                   u11970 268E  
                                 u12746 2264                                   u11980 2690  
                                 u12756 2276                                   _T2HLT 003FAD  
                                 u11990 26B6                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0099  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0026  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result B5C4                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR BF1C  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 913A                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR A07E  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR BD7A  
                          _DMA1CON1bits 003BFD                                   _fabsf A466  
                                 _flags 003E                __size_of_calc_model_data 044C  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
          __end_of_get_ac_charger_relay BE7C                                   _fputc 9636  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha B40C  
                                 _fputs A7B2                         __end_of_isdigit B7C8  
                       __end_of_ivln2_h FC4B                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand B6A0                                   _width 003A  
                                 _putch BD44            __end_of_set_ac_charger_relay BE52  
                       __end_of_islower B768                         __end_of_isspace B0EC  
              _INT1_SetInterruptHandler BA5E                         __end_of_isupper B798  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler B9E6             _UART1_SetRxInterruptHandler B9BE  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf 9CBA  
                       __end_of_tolower AB00                         __end_of_strncmp 7F18  
                       __end_of_toupper AA7C               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr BB28                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize B266                   __end_of_ringBufS_init B946  
                       __initialization 9CBA                       _UART2_rx_vect_isr BB50  
                          __end_of_cp_h FC53                            __end_of_cp_l FC4F  
                          __end_of_atoi 788E                            __end_of_ctoa A9F8  
                          __end_of_main 2392                            __end_of_dtoa 5946  
                          __end_of_nanf AF34                            __end_of_spin FC3F  
                          __end_of_stoa 739A                            __end_of_utoa 67F8  
                          __end_of_xtoa 614C                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0021                 __end_of_TMR2_Initialize BDAA  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button AC68  
              _TMR5_SetInterruptHandler BA0E                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 0090  
                     _port_data_dma_ptr BEA4                      esr_check@esr_state 0040  
                   ??_UART2_rx_vect_isr 0026                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize B87C                         _PWM8_Initialize BDC0  
                      _UART1_Initialize B21E                       _UART2_tx_vect_isr BB28  
                    _UART2_Transmit_ISR B850                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan AE0C                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue B40C                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0021  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  i1l1019 A02E  
                                _RB6PPS 003A0E                                  i1l1207 90A2  
                  _start_switch_handler BC70                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize B2F6  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright BE60                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u924_20 871C  
                                u919_25 BE4C                                  u919_26 BE4E  
                                u945_20 B604                                  u945_26 B606  
                                u938_20 BE78                                  u961_28 93E2  
                                u964_20 9402                                  u964_21 93FC  
                  __size_of_hid_display 01DC                                  u991_28 BB88  
                                u968_24 94E2                                  u968_25 94DE  
                                u997_48 BC18                                  u989_48 BBF4  
                      __end_of___xxtofl 832E   __end_of_ADCC_DischargeSampleCapacitor BEDA  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor BED2  
              __end_of_send_lcd_cmd_dma B09A                         _TMR3_WriteTimer B4CE  
                   ??_UART2_tx_vect_isr 0026               __end_of_UART2_rx_vect_isr BB78  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize BE9A  
                      _UART2_Initialize AF34                                  _WaitMs B634  
                       _conv_raw_result 501A                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 8E74  
                                ___fleq A2EA                       _ADCC_ThresholdISR AD3C  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush A8DE  
                                _efgtoa 0000                                  _floorf 614C  
                    ?_ADCC_ThresholdISR 0021                                  _memset 6B20  
                  __size_of_help_button 0038                                  clear_0 9D4E  
                                clear_1 9D62                                  clear_2 9D74  
                                clear_3 9D80                                  clear_4 9D8C  
                                clear_5 9D98                                  clear_6 9DA4  
             __end_of_port_data_dma_ptr BEAE                                  _printf AE70  
                    _eaDogM_WriteString A66A                                  _strcpy A07E  
                             ?_ADCC_ISR 0021                                  _strlen A710  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 04FF  
                       _ADCC_Initialize ACD2                          _PMD_Initialize BDEC  
            __size_of_update_adc_result 003A               __end_of_UART2_tx_vect_isr BB50  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0021                  __end_of_start_adc_scan AE70  
                          __mediumconst FA66                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay AFEE                        __end_of_spinners 9EB2  
                      __end_of_vfprintf A5C0                              _StartTimer B44E  
                    __size_of___asfladd 0078           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize B2AE                       _SYSTEM_Initialize B18C  
                            __accesstop 0060                 __end_of__initialization 9DB6  
                             ?_INT0_ISR 0021                               ?_INT1_ISR 0021  
                  __end_of_display_help BEF2                    __end_of_display_info BEEA  
             __end_of_CLKREF_Initialize BEA4                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer B48E  
                 _set_temp_display_help BE32                        _clear_hid_pflags B2F6  
                 __end_of_TMR3_CallBack BBE4               __end_of_ADCC_ThresholdISR ADA6  
                    __size_of_calc_bsoc 077C                  __end_of_ringBufS_flush A970  
                        __pcstackCOMRAM 0021                              ___inthi_sp 115C  
                            ___intlo_sp 18AE                            __pidataBANK0 B8A6  
                          __pidataBANK1 A224                            __pidataBANK2 BEFA  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf A514  
                             ?_TMR3_ISR 0021                               ?_TMR5_ISR 0021  
                             ?_TMR6_ISR 0021                          ivt0x8_undefint 00AC  
                         __end_of_fputc 975A                           __end_of_fputs A84A  
                  _get_ac_charger_relay BE6E                           __end_of_srand B6D4  
                 __end_of_TMR5_CallBack BBC0                           __end_of_putch BD5E  
                  _set_ac_charger_relay BE42                 __end_of_PWM8_Initialize BDD6  
               __end_of_TMR6_Initialize B8A6                       _adc_int_t_handler AB00  
                __end_of_PMD_Initialize BE00                              __end_of_bp FC47  
                            ??_ADCC_ISR 0021                   __end_of_TMR6_CallBack BC2C  
           __size_of_EXT_INT_Initialize 0034                calc_bsoc@log_update_wait 0041  
                __size_of_calc_ror_data 0186                           _DMA1_DMAA_ISR BEBC  
                 TMR3_ISR@CountCallBack 00B0                          _clear_adc_scan BF02  
                    __size_of_hid_input 00D2                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 00A5               __end_of_SYSTEM_Initialize B1D6  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer B50E                              __pbssBANK0 0060  
                            __pbssBANK1 01C6                              __pbssBANK2 0200  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            _check_help 7F18                 __end_of_conv_raw_result 54C6  
                    __size_of_esr_check 02D0                   _INT0_InterruptHandler 00AB  
                            ??_INT0_ISR 0021                              ??_INT1_ISR 0027  
                     __end_of_TimerDone B96E                        _DMA1_DMADCNT_ISR BEB0  
                    __size_of_init_bsoc 022A              __size_of_UART2_rx_vect_isr 0028  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma B708                   __end_of_wait_lcd_done BD44  
      __end_of_TMR3_SetInterruptHandler BA5E                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler BA0E                              ??_TMR3_ISR 00E5  
               __end_of_ADCC_Initialize AD3C                              ??_TMR5_ISR 002B  
             __end_of_adc_int_t_handler AB7E                              ??_TMR6_ISR 0026  
                     __end_of___asfladd ABF6                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler BAD6  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler BAAE  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR BC4E  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan BF08                                 u1000_28 BBAC  
                               u1029_44 AB64                                 u1029_45 AB5E  
                        ?_DMA1_DMAA_ISR 0021                        _DMA1_DMASCNT_ISR BE8C  
                               _U1ERRIE 003DFA                                 u1234_20 4736  
                    __size_of_set_vterm 001E                                 u1242_28 BBD0  
                               _U1ERRIR 003DF9                                 u1236_20 4800  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0021  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 4AA0  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch B7F6  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer B4CE  
               __size_of_switch_handler 0140                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one BE32              __end_of_set_load_relay_two BE22  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 89FC                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim BD7A                                 __Lparam 0000  
              __end_of_UART1_Initialize B266                       __end_of_hid_input A224  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 739A  
                               ___fladd 3B68                                 ___aomod 788E  
                               ___fldiv 4AA0                                 ___awdiv 913A  
                               ___flneg B1D6                                 ___awmod 9874  
                               ___flmul 333E                                 ___flsub B382  
                               ___fltol 8D02                                 ___lodiv 8B82  
                               ___lomod 9288               __end_of_UART1_Receive_ISR BC70  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 9F9C                                 __pcinit 9CBA  
              __end_of_mode_lamp_bright BE6E                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand BE52  
                               __ramtop 2000                                 __ptext0 1244  
                               __ptext1 B50E                                 __ptext2 BC70  
                               __ptext3 B6A0                                 __ptext4 9DBC  
                               __ptext5 B708                                 __ptext6 9EB2  
                               __ptext7 B8CE                                 __ptext8 B8F6  
                               __ptext9 BCB0                       __end_of_esr_check 70DC  
                     _UART2_Receive_ISR BC90                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize BDD6  
                          __size_of_abs 0046                                 us632999 7604  
                               us643999 7ABC                            __size_of_pad 0114  
                               us733999 93B8                       __end_of_init_bsoc 7CF8  
                               _isalpha B3C8                                 _isdigit B798  
                               us728999 8CEC                                 _ivln2_h FC47  
                             _T3CONbits 003FA6                                 _mode_sw 00B8  
                     __end_of_lp_filter 86C6                                 _islower B738  
                               _isspace B09A                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize AF94  
                               _isupper B768              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 9BB0                                 _tolower AA7C  
                 __size_of_display_help 0008                                 _utctime 01F5  
                 __size_of_display_info 0008                                 _strncmp 7CF8  
                               _toupper A9F8                    end_of_initialization 9DB6  
             __size_of_convert_adc_data 00B8                      _check_enter_button ABF6  
                             i1u1257_20 9098     __end_of_UART2_SetRxInterruptHandler B9BE  
           _UART2_SetRxInterruptHandler B996                               i2u1040_48 BB64  
                             i2u1032_48 B83C                               i2u1034_48 AD72  
                             i2u1034_49 AD86                               i2u1038_48 BB3C  
               check_day_time@day_delay 0042                               i2u1256_48 BB14  
                     __end_of_set_vterm BCEC                       __end_of_vfpfcnvrt 333E  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd BF14  
             __end_of_UART2_Receive_ISR BCB0                          wdtdelay@dcount 0088  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0027  
                 _INT1_InterruptHandler 00A8                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc BF1A                _TMR3_SetInterruptHandler BA36  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler B9E6  
                          _display_help BEEA                   _TMR5_InterruptHandler 0093  
                          _display_info BEE2    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags B33C                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler BAFE             _ADCC_SetADIInterruptHandler BAD6  
                            _update_lcd 9AA0                         _calc_model_data 5946  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc B50E                         _DMA1_Initialize AC68  
                            _start_bsoc BC2C                         _SPI1_Initialize BDAA  
                 __end_of_get_vterm_ptr B7F6                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs B66A  
          __end_of_INTERRUPT_Initialize AE0C                              _vterm_dump 9508  
                        __end_of___flge 8FD6                          __end_of___fleq A3AE  
  __end_of_INT0_DefaultInterruptHandler BF28   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler BF26              __size_of_UART1_Receive_ISR 0022  
                       _DMA2_Initialize AFEE                           __pidataBIGRAM 67F8  
                        __end_of_efgtoa 1244                       __size_of_TMR3_ISR 0162  
                     __size_of_TMR5_ISR 00E2                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 64B8  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 006C  
                        __end_of_memset 6E0C                          __end_of_printf AED2  
              __end_of_DMA1_DMADCNT_ISR BEBA             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack BC08                          __end_of_strcpy A152  
                        __end_of_strlen A7B2                     start_initialization 9CBA  
  __end_of_TMR5_DefaultInterruptHandler B634   __size_of_TMR5_DefaultInterruptHandler 0038  
          _TMR5_DefaultInterruptHandler B5FC         __size_of_PIN_MANAGER_Initialize 0094  
                           __end_of_abs B382                   __end_of_INT1_CallBack BB9C  
             __size_of_set_display_info 001E                             __end_of_pad 9AA0  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd B91E  
                        _switch_handler 93C8           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 026E  
                 __end_of___fpclassifyf 89FC                           _uart2RxBuffer 0400  
              __end_of_DMA1_DMASCNT_ISR BE9A                           _uart2TxBuffer 0300  
                        _DMA1_DMAOR_ISR BEC8                     __end_of_hid_display 850A  
            __end_of_send_port_data_dma B13E                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone B946                           _ringBufS_init B91E  
                           __pdataBANK0 00BD                             __pdataBANK1 0100  
                           __pdataBANK2 02CE              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize B708  
               __end_of_calc_model_data 5D92                     __end_of_help_button B5FC  
       __end_of_eaDogM_WriteStringAtPos B6A0                     __end_of_BVSOC_TABLE FB37  
                             ___asfladd AB7E                    calc_model_data@bcror 0080  
                           __pbssBIGRAM 0826                 __end_of_DMA1_Initialize ACD2  
                  calc_model_data@bvror 0084                             __pbssCOMRAM 003A  
      __end_of_INT0_SetInterruptHandler BAAE                           __pcstackBANK0 00E5  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 9508                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize BDC0                _UART1_RxInterruptHandler 009F  
              _UART2_TxInterruptHandler 00A2                               __end_of_T FBC7  
                      _convert_adc_data A3AE                               _calc_bsoc 4324  
             __size_of_ringBufS_put_dma 00AA                            _init_display 9EB2  
                __end_of_DMA1_DMAOR_ISR BED2                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 0096                      calc_ror_data@bcror 0078  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize B048  
                    calc_ror_data@bvror 007C                  _PIN_MANAGER_Initialize A84A  
              __size_of_TMR3_Initialize 0048                    __end_of_wait_lcd_set BF0E  
                         __pmediumconst FA66                               __ptext100 5946  
                             __ptext101 BF14                               __ptext110 B996  
                             __ptext102 BC2C                               __ptext111 B21E  
                             __ptext103 850A                               __ptext120 BDAA  
                             __ptext112 B9BE                               __ptext104 B382  
                             __ptext121 BDC0                               __ptext113 B87C  
                             __ptext105 3B68                               __ptext130 AFEE  
                             __ptext122 BDEC                               __ptext114 B9E6  
                             __ptext106 333E                               __ptext131 AC68  
                             __ptext123 A84A                               __ptext115 B266  
                             __ptext107 B18C                               __ptext140 9F9C  
                             __ptext132 BE9A                               __ptext124 BDD6  
                             __ptext116 BA0E                               __ptext108 AF34  
                             __ptext141 B48E                               __ptext133 ACD2  
                             __ptext125 ADA6                               __ptext117 B2AE  
                             __ptext109 B96E                               __ptext150 BF24  
                             __ptext142 BB9C                               __ptext134 BAAE  
                             __ptext126 BEF2                               __ptext118 BA36  
                             __ptext151 4324                               __ptext143 B5FC  
                             __ptext135 BAD6                               __ptext127 B6D4  
                             __ptext119 BD92                               __ptext160 AB00  
                             __ptext152 B0EC                               __ptext144 86C6  
                             __ptext136 B54C                               __ptext128 BA5E  
                             __ptext161 BF28                               __ptext153 BEA4  
                             __ptext145 BE42                               __ptext137 BB78  
                             __ptext129 BA86                               __ptext170 BD60  
                             __ptext162 BF2A                               __ptext154 AB7E  
                             __ptext146 BE6E                               __ptext138 BF22  
                             __ptext171 BC08                               __ptext163 AD3C  
                             __ptext155 BE7C                               __ptext147 8FD8  
                             __ptext139 93C8                               __ptext172 B13E  
                             __ptext164 BB00                               __ptext156 BBE4  
                             __ptext148 B4CE                               __ptext173 BE8C  
                             __ptext165 BC4E                               __ptext157 BF26  
                             __ptext149 BBC0                               __ptext174 BEB0  
                             __ptext166 BB28                               __ptext158 BF1C  
                             __ptext175 BEBC                               __ptext167 B850  
                             __ptext159 B824                               __ptext176 BEC8  
                             __ptext168 BB50                               __ptext177 0000  
                             __ptext169 BC90                               _hid_input A152  
                    __end_of_StartTimer B48E                      _set_load_relay_one BE22  
                    _set_load_relay_two BE12                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00F6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR B824                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 0070                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 6E0C  
               __size_of_get_raw_result 001E                          __size_of_fabsf 00AE  
                             _init_bsoc 7ACE                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 850A  
                           _hid_display 832E                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize ADA6  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0021                                _INT0_ISR BE7C  
                              _INT1_ISR B54C                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
                              _LATFbits 003FBF       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 0254  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0383                               _ring_buf2 0340  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack BBC0  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0048                               _set_vterm BCCE  
                   __size_of_update_lcd 0110                             _help_button B5C4  
                              _TMR3_ISR 8FD8                             _BVSOC_TABLE FA67  
                              _TMR5_ISR 9F9C                                _TMR6_ISR BD60  
                             _port_data 04FF                     __size_of_static_soc 003E  
                             _vfpfcnvrt 2392                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack BB9C  
                            _ADCON0bits 003EF8                      __end_of_check_help 812A  
                             _start_lcd BF0E                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack BC08  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc BF14                        _set_display_info BCEC  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 9CCE  
                             copy_data1 9CF4                               copy_data2 9D16  
                             copy_data3 9D38                _INT0_SetInterruptHandler BA86  
                   __size_of_vterm_dump 012E     __end_of_UART2_SetTxInterruptHandler B996  
           _UART2_SetTxInterruptHandler B96E                            _uart1RxCount 00BC  
                          _uart2RxCount 00B9                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 0036                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done BD28  
                          _send_lcd_cmd B8F6                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC           __size_of_get_ac_charger_relay 000E  
                      __size_of___aomod 0240                         _adc_int_handler BF2A  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140           __size_of_set_ac_charger_relay 0010  
                    __end_of_get_switch B822                 __size_of_check_day_time 01A0  
                 __end_of_DMA1_DMAA_ISR BEC6                      ___fpclassifyf@F463 0074  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0200  
                              ___xxtofl 812A                       ?_DMA1_DMADCNT_ISR 0021  
           __size_of_check_enter_button 0072                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand BE60                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0027                                __ptext10 B91E  
                              __ptext11 7ACE                                __ptext20 BED2  
                              __ptext12 975A                                __ptext21 BF02  
                              __ptext13 832E                                __ptext30 9BB0  
                              __ptext22 BEDA                                __ptext14 A152  
                              __ptext31 B7C8                                __ptext23 BE12  
                              __ptext15 B7F6                                __ptext40 BF0E  
                              __ptext32 B634                                __ptext24 BE22  
                              __ptext16 6E0C                                __ptext41 A8DE  
                              __ptext33 9AA0                                __ptext25 BE52  
                              __ptext17 B58A                                __ptext50 64B8  
                              __ptext42 6B20                                __ptext34 B66A  
                              __ptext26 A3AE                                __ptext18 AE0C  
                              __ptext51 9288                                __ptext43 AE70  
                              __ptext35 B048                                __ptext27 B2F6  
                              __ptext19 BE00                                __ptext60 8866  
                              __ptext52 8B82                                __ptext44 A514  
                              __ptext36 BD28                                __ptext28 7F18  
                              __ptext61 8D02                                __ptext53 7CF8  
                              __ptext45 2392                                __ptext37 AF94  
                              __ptext29 9508                                __ptext70 A970  
                              __ptext62 B1D6                                __ptext54 70DC  
                              __ptext46 5D92                                __ptext38 A66A  
                              __ptext71 998C                                __ptext63 A2EA  
                              __ptext55 0000                                __ptext47 A9F8  
                              __ptext39 BF08                                __ptext80 BCCE  
                              __ptext72 A710                                __ptext64 9874  
                              __ptext56 AA7C                                __ptext48 B738  
                              __ptext81 BE32                                __ptext73 A7B2  
                              __ptext65 913A                                __ptext57 B768  
                              __ptext49 B3C8                                __ptext90 BEEA  
                              __ptext82 BCEC                                __ptext74 9636  
                              __ptext66 54C6                                __ptext58 A07E  
                              __ptext91 ABF6                                __ptext83 BD7A  
                              __ptext75 BD44                                __ptext67 B33C  
                              __ptext59 614C                                __ptext92 89FC  
                              __ptext84 BE60                                __ptext76 A5C0  
                              __ptext68 788E                                __ptext93 A466  
                              __ptext85 B40C                                __ptext77 761A  
                              __ptext69 739A                                __ptext94 501A  
                              __ptext86 B5C4                                __ptext78 B09A  
                              __ptext95 AED2                                __ptext87 B946  
                              __ptext79 B798                                __ptext96 BD0A  
                              __ptext88 B44E                                __ptext97 812A  
                              __ptext89 BEE2                                __ptext98 4AA0  
                              __ptext99 8E74                        __size_of_isupper 0030  
                              us1152999 70EE                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1083999 54E0  
                              us1164999 651E                                us1173999 5E12  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma A5C0                    __end_of_Volts_to_SOC 9874  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 114E                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0021                   __end_of_init_port_dma B738  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 009C                               stoa@F1166 02CE  
                    ??_DMA1_DMASCNT_ISR 0027            __end_of_ADCC_StartConversion BE12  
                              _spi_link 0060                                _wdtdelay AF94  
            __end_of_UART2_Transmit_ISR B87C                                _spinners 9DBC  
                              _vfprintf A514                __end_of_convert_adc_data A466  
            __end_of_PWM8_LoadDutyValue B44E    __end_of_TMR3_DefaultInterruptHandler BF26  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler BF24  
  __end_of_INT1_DefaultInterruptHandler BF24   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler BF22                      _send_port_data_dma B0EC  
                         ??_Default_ISR 0021                             _uart1RxHead 0047  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0043  
                           _uart1RxTail 0046                          _get_raw_result BD0A  
                           _uart2TxHead 00BB                             _uart2RxTail 00BA  
                             spinners@s 01EF                             _uart2TxTail 0045  
                          _wait_lcd_set BF08                      _EXT_INT_Initialize B6D4  
  __end_of_TMR6_DefaultInterruptHandler B18C   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler B13E    __end_of_ADCC_DefaultInterruptHandler BF2A  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler BF28  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long B8CE          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help BE42                   __end_of_calc_ror_data 8B82  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString A710  
                 __end_of_mode_lamp_dim BD92                 __end_of_adc_int_handler BF2C  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd 9BB0                  _uart2TxBufferRemaining 0044  
                    __end_of_static_soc B54C                      __end_of_start_bsoc BC4E  
                        _FVR_Initialize BEF2                  __end_of_get_raw_result BD28  
                      _send_lcd_cmd_dma B048                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 00B4        __end_of_INT1_SetInterruptHandler BA86  
             __size_of_UART1_Initialize 0048                        ??_DMA1_DMAOR_ISR 0027  
             __end_of_send_lcd_cmd_long B8F6                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR BF22          __end_of_PIN_MANAGER_Initialize A8DE  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 9636  
               _eaDogM_WriteStringAtPos B66A                           _get_vterm_ptr B7C8  
                        _check_adc_scan BEDA               __size_of_UART2_Initialize 0060  
